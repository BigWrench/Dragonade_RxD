; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.61219.0 

	TITLE	X:\GitHub\Renegade\Dragonade_RxD\scripts\JMGRenetBusters.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?MoonHolderID@JMG_CMTB_Main_Game_Control@@2HA	; JMG_CMTB_Main_Game_Control::MoonHolderID
PUBLIC	?GameInProgress@JMG_CMTB_Main_Game_Control@@2_NA ; JMG_CMTB_Main_Game_Control::GameInProgress
PUBLIC	?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA	; JMG_CMTB_Main_Game_Control::CMTBLevel
PUBLIC	?PlayerSOSBeaconID@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID
PUBLIC	?DroneSwarmCount@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::DroneSwarmCount
PUBLIC	?EndGameSwitchEnabled@JMG_CMTB_Main_Game_Control@@2_NA ; JMG_CMTB_Main_Game_Control::EndGameSwitchEnabled
PUBLIC	?DifficultyMultiplier@JMG_CMTB_Main_Game_Control@@2MA ; JMG_CMTB_Main_Game_Control::DifficultyMultiplier
PUBLIC	?DifficultyMultiplierMine@JMG_CMTB_Main_Game_Control@@2MA ; JMG_CMTB_Main_Game_Control::DifficultyMultiplierMine
PUBLIC	?DifficultyMultiplierInv@JMG_CMTB_Main_Game_Control@@2MA ; JMG_CMTB_Main_Game_Control::DifficultyMultiplierInv
PUBLIC	?IsRenegadeServer@@3_NA				; IsRenegadeServer
PUBLIC	?PlayerRequestingALife@@3PA_NA			; PlayerRequestingALife
PUBLIC	?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A ; PerkSystemPerkTypeNodeList
PUBLIC	?USEABLEPERKCOUNT@PerkSystemPerkTypeList@@2HA	; PerkSystemPerkTypeList::USEABLEPERKCOUNT
PUBLIC	?PrioritizeTargets@RenCometBustersGameObjects@@0PAHA ; RenCometBustersGameObjects::PrioritizeTargets
PUBLIC	?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A ; PlayerPerkListNodes
_BSS	SEGMENT
?MoonHolderID@JMG_CMTB_Main_Game_Control@@2HA DD 01H DUP (?) ; JMG_CMTB_Main_Game_Control::MoonHolderID
?GameInProgress@JMG_CMTB_Main_Game_Control@@2_NA DB 01H DUP (?) ; JMG_CMTB_Main_Game_Control::GameInProgress
	ALIGN	4

?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA DD 01H DUP (?) ; JMG_CMTB_Main_Game_Control::CMTBLevel
?PlayerSOSBeaconID@JMG_CMTB_Main_Game_Control@@2IA DD 01H DUP (?) ; JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID
?DroneSwarmCount@JMG_CMTB_Main_Game_Control@@2IA DD 01H DUP (?) ; JMG_CMTB_Main_Game_Control::DroneSwarmCount
?PlayerRequestingALife@@3PA_NA DB 08H DUP (?)		; PlayerRequestingALife
?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A DB 0185d0H DUP (?) ; PerkSystemPerkTypeNodeList
?USEABLEPERKCOUNT@PerkSystemPerkTypeList@@2HA DD 01H DUP (?) ; PerkSystemPerkTypeList::USEABLEPERKCOUNT
?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A DD 080H DUP (?) ; PlayerPerkListNodes
_BSS	ENDS
CONST	SEGMENT
_DONT_MOVE_ARRIVED_DIST DD 0447a0000r		; 1000
CONST	ENDS
_DATA	SEGMENT
?EndGameSwitchEnabled@JMG_CMTB_Main_Game_Control@@2_NA DB 01H ; JMG_CMTB_Main_Game_Control::EndGameSwitchEnabled
?IsRenegadeServer@@3_NA DB 01H				; IsRenegadeServer
	ORG $+2
?DifficultyMultiplier@JMG_CMTB_Main_Game_Control@@2MA DD 03f800000r ; 1 ; JMG_CMTB_Main_Game_Control::DifficultyMultiplier
?DifficultyMultiplierMine@JMG_CMTB_Main_Game_Control@@2MA DD 03f800000r ; 1 ; JMG_CMTB_Main_Game_Control::DifficultyMultiplierMine
?DifficultyMultiplierInv@JMG_CMTB_Main_Game_Control@@2MA DD 03f800000r ; 1 ; JMG_CMTB_Main_Game_Control::DifficultyMultiplierInv
?PrioritizeTargets@RenCometBustersGameObjects@@0PAHA DD 02H ; RenCometBustersGameObjects::PrioritizeTargets
	DD	02H
	DD	00H
	DD	01H
	DD	00H
	DD	03H
	DD	02H
	DD	00H
	DD	02H
	DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	03H
	DD	02H
	DD	00H
	DD	02H
_DATA	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??_I@YGXPAXIHP6EX0@Z@Z				; `vector destructor iterator'
PUBLIC	_fabsf
PUBLIC	_acosf
PUBLIC	_asinf
PUBLIC	_atanf
PUBLIC	_atan2f
PUBLIC	_ceilf
PUBLIC	_cosf
PUBLIC	_floorf
PUBLIC	_sinf
PUBLIC	_sqrtf
PUBLIC	?abs@@YAMM@Z					; abs
PUBLIC	?acos@@YAMM@Z					; acos
PUBLIC	?asin@@YAMM@Z					; asin
PUBLIC	?atan@@YAMM@Z					; atan
PUBLIC	?atan2@@YAMMM@Z					; atan2
PUBLIC	?cos@@YAMM@Z					; cos
PUBLIC	?sin@@YAMM@Z					; sin
PUBLIC	?sqrt@@YAMM@Z					; sqrt
PUBLIC	?Fabs@WWMath@@SAMM@Z				; WWMath::Fabs
PUBLIC	?Float_To_Int_Chop@WWMath@@SAHABM@Z		; WWMath::Float_To_Int_Chop
PUBLIC	?Float_To_Int_Floor@WWMath@@SAHABM@Z		; WWMath::Float_To_Int_Floor
PUBLIC	?Cos@WWMath@@SAMM@Z				; WWMath::Cos
PUBLIC	?Sin@WWMath@@SAMM@Z				; WWMath::Sin
PUBLIC	?Sqrt@WWMath@@SAMM@Z				; WWMath::Sqrt
PUBLIC	?Inv_Sqrt@WWMath@@SIMM@Z			; WWMath::Inv_Sqrt
PUBLIC	?Float_To_Long@WWMath@@SAJM@Z			; WWMath::Float_To_Long
PUBLIC	?Fast_Sin@WWMath@@SAMM@Z			; WWMath::Fast_Sin
PUBLIC	?Fast_Inv_Sin@WWMath@@SAMM@Z			; WWMath::Fast_Inv_Sin
PUBLIC	?Fast_Cos@WWMath@@SAMM@Z			; WWMath::Fast_Cos
PUBLIC	?Fast_Inv_Cos@WWMath@@SAMM@Z			; WWMath::Fast_Inv_Cos
PUBLIC	?Fast_Acos@WWMath@@SAMM@Z			; WWMath::Fast_Acos
PUBLIC	?Fast_Asin@WWMath@@SAMM@Z			; WWMath::Fast_Asin
PUBLIC	?Acos@WWMath@@SAMM@Z				; WWMath::Acos
PUBLIC	?Asin@WWMath@@SAMM@Z				; WWMath::Asin
PUBLIC	?Atan@WWMath@@SAMM@Z				; WWMath::Atan
PUBLIC	?Atan2@WWMath@@SAMMM@Z				; WWMath::Atan2
PUBLIC	?Sign@WWMath@@SAMM@Z				; WWMath::Sign
PUBLIC	?Ceil@WWMath@@SAMM@Z				; WWMath::Ceil
PUBLIC	?Floor@WWMath@@SAMM@Z				; WWMath::Floor
PUBLIC	?Fast_Is_Float_Positive@WWMath@@SA_NABM@Z	; WWMath::Fast_Is_Float_Positive
PUBLIC	?Random_Float@WWMath@@SAMMM@Z			; WWMath::Random_Float
PUBLIC	?Clamp@WWMath@@SAMMMM@Z				; WWMath::Clamp
PUBLIC	?Clamp@WWMath@@SANNNN@Z				; WWMath::Clamp
PUBLIC	?Clamp_Int@WWMath@@SAHHHH@Z			; WWMath::Clamp_Int
PUBLIC	?Wrap@WWMath@@SAMMMM@Z				; WWMath::Wrap
PUBLIC	?Wrap@WWMath@@SANNNN@Z				; WWMath::Wrap
PUBLIC	?Min@WWMath@@SAMMM@Z				; WWMath::Min
PUBLIC	?Max@WWMath@@SAMMM@Z				; WWMath::Max
PUBLIC	?Lerp@WWMath@@SAMMMM@Z				; WWMath::Lerp
PUBLIC	?Lerp@WWMath@@SANNNM@Z				; WWMath::Lerp
PUBLIC	?Lerp@WWMath@@SAHHHM@Z				; WWMath::Lerp
PUBLIC	?Float_To_Long@WWMath@@SAJN@Z			; WWMath::Float_To_Long
PUBLIC	?Unit_Float_To_Byte@WWMath@@SAEM@Z		; WWMath::Unit_Float_To_Byte
PUBLIC	?Byte_To_Unit_Float@WWMath@@SAME@Z		; WWMath::Byte_To_Unit_Float
PUBLIC	?Is_Valid_Float@WWMath@@SA_NM@Z			; WWMath::Is_Valid_Float
PUBLIC	?Is_Valid_Double@WWMath@@SA_NN@Z		; WWMath::Is_Valid_Double
PUBLIC	??4WWMath@@QAEAAV0@ABV0@@Z			; WWMath::operator=
PUBLIC	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ		; RefArrayHelper<float,1024>::operator float *
PUBLIC	??0Vector3@@QAE@XZ				; Vector3::Vector3
PUBLIC	??0Vector3@@QAE@ABV0@@Z				; Vector3::Vector3
PUBLIC	??0Vector3@@QAE@MMM@Z				; Vector3::Vector3
PUBLIC	??4Vector3@@QAEAAV0@ABV0@@Z			; Vector3::operator=
PUBLIC	?Set@Vector3@@QAEXMMM@Z				; Vector3::Set
PUBLIC	??AVector3@@QAEAAMH@Z				; Vector3::operator[]
PUBLIC	??AVector3@@QBEABMH@Z				; Vector3::operator[]
PUBLIC	?Normalize@Vector3@@QAEXXZ			; Vector3::Normalize
PUBLIC	?Length@Vector3@@QBEMXZ				; Vector3::Length
PUBLIC	?Length2@Vector3@@QBEMXZ			; Vector3::Length2
PUBLIC	??YVector3@@QAEAAV0@ABV0@@Z			; Vector3::operator+=
PUBLIC	??ZVector3@@QAEAAV0@ABV0@@Z			; Vector3::operator-=
PUBLIC	??XVector3@@QAEAAV0@M@Z				; Vector3::operator*=
PUBLIC	??_0Vector3@@QAEAAV0@M@Z			; Vector3::operator/=
PUBLIC	??D@YA?AVVector3@@ABV0@M@Z			; operator*
PUBLIC	??D@YA?AVVector3@@MABV0@@Z			; operator*
PUBLIC	??H@YA?AVVector3@@ABV0@0@Z			; operator+
PUBLIC	??G@YA?AVVector3@@ABV0@0@Z			; operator-
PUBLIC	?Add@Vector3@@SAXABV1@0PAV1@@Z			; Vector3::Add
PUBLIC	?Subtract@Vector3@@SAXABV1@0PAV1@@Z		; Vector3::Subtract
PUBLIC	?Swap@@YAXAAVVector3@@0@Z			; Swap
PUBLIC	??0GameObjObserverClass@@QAE@XZ			; GameObjObserverClass::GameObjObserverClass
PUBLIC	??1GameObjObserverClass@@UAE@XZ			; GameObjObserverClass::~GameObjObserverClass
PUBLIC	?Set_ID@GameObjObserverClass@@QAEXH@Z		; GameObjObserverClass::Set_ID
PUBLIC	?Get_ID@GameObjObserverClass@@QAEHXZ		; GameObjObserverClass::Get_ID
PUBLIC	?Owner@GameObjObserverClass@@UAEPAVScriptableGameObj@@XZ ; GameObjObserverClass::Owner
PUBLIC	??0GameObjObserverClass@@QAE@ABV0@@Z		; GameObjObserverClass::GameObjObserverClass
PUBLIC	??4GameObjObserverClass@@QAEAAV0@ABV0@@Z	; GameObjObserverClass::operator=
PUBLIC	??_GGameObjObserverClass@@UAEPAXI@Z		; GameObjObserverClass::`scalar deleting destructor'
PUBLIC	??_EGameObjObserverClass@@UAEPAXI@Z		; GameObjObserverClass::`vector deleting destructor'
PUBLIC	??1ScriptClass@@UAE@XZ				; ScriptClass::~ScriptClass
PUBLIC	??0ScriptClass@@QAE@XZ				; ScriptClass::ScriptClass
PUBLIC	??0ScriptClass@@QAE@ABV0@@Z			; ScriptClass::ScriptClass
PUBLIC	??4ScriptClass@@QAEAAV0@ABV0@@Z			; ScriptClass::operator=
PUBLIC	??_GScriptClass@@UAEPAXI@Z			; ScriptClass::`scalar deleting destructor'
PUBLIC	??_EScriptClass@@UAEPAXI@Z			; ScriptClass::`vector deleting destructor'
PUBLIC	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory
PUBLIC	?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z ; ScriptImpClass::Created
PUBLIC	?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z ; ScriptImpClass::Destroyed
PUBLIC	?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ; ScriptImpClass::Killed
PUBLIC	?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z ; ScriptImpClass::Damaged
PUBLIC	?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z ; ScriptImpClass::Custom
PUBLIC	?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z ; ScriptImpClass::Sound_Heard
PUBLIC	?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ; ScriptImpClass::Enemy_Seen
PUBLIC	?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z ; ScriptImpClass::Action_Complete
PUBLIC	?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z ; ScriptImpClass::Timer_Expired
PUBLIC	?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z ; ScriptImpClass::Animation_Complete
PUBLIC	?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ; ScriptImpClass::Poked
PUBLIC	?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ; ScriptImpClass::Entered
PUBLIC	?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ; ScriptImpClass::Exited
PUBLIC	?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ ; ScriptImpClass::Owner
PUBLIC	?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ ; ScriptImpClass::Get_Owner_Ptr
PUBLIC	?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z ; ScriptImpClass::Save_Data
PUBLIC	?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z ; ScriptImpClass::Load_Data
PUBLIC	?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ ; ScriptImpClass::Register_Auto_Save_Variables
PUBLIC	?Get_Parameter_Count@ScriptImpClass@@QAEHXZ	; ScriptImpClass::Get_Parameter_Count
PUBLIC	?Get_Int_Parameter@ScriptImpClass@@QAEHH@Z	; ScriptImpClass::Get_Int_Parameter
PUBLIC	?Get_Float_Parameter@ScriptImpClass@@QAEMH@Z	; ScriptImpClass::Get_Float_Parameter
PUBLIC	?Get_Bool_Parameter@ScriptImpClass@@QAE_NPBD@Z	; ScriptImpClass::Get_Bool_Parameter
PUBLIC	?Get_Bool_Parameter@ScriptImpClass@@QAE_NH@Z	; ScriptImpClass::Get_Bool_Parameter
PUBLIC	??0ScriptImpClass@@QAE@ABV0@@Z			; ScriptImpClass::ScriptImpClass
PUBLIC	??4ScriptImpClass@@QAEAAV0@ABV0@@Z		; ScriptImpClass::operator=
PUBLIC	??_GScriptImpClass@@UAEPAXI@Z			; ScriptImpClass::`scalar deleting destructor'
PUBLIC	??_EScriptImpClass@@UAEPAXI@Z			; ScriptImpClass::`vector deleting destructor'
PUBLIC	??0ActionParamsStruct@@QAE@XZ			; ActionParamsStruct::ActionParamsStruct
PUBLIC	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic
PUBLIC	?Set_Movement@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ; ActionParamsStruct::Set_Movement
PUBLIC	?Set_Movement@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z ; ActionParamsStruct::Set_Movement
PUBLIC	?Set_Attack@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ; ActionParamsStruct::Set_Attack
PUBLIC	?Set_Attack@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z ; ActionParamsStruct::Set_Attack
PUBLIC	??0ScriptFactory@@QAE@ABV0@@Z			; ScriptFactory::ScriptFactory
PUBLIC	??4ScriptFactory@@QAEAAV0@ABV0@@Z		; ScriptFactory::operator=
PUBLIC	??_GScriptFactory@@UAEPAXI@Z			; ScriptFactory::`scalar deleting destructor'
PUBLIC	??_EScriptFactory@@UAEPAXI@Z			; ScriptFactory::`vector deleting destructor'
PUBLIC	??4ScriptRegistrar@@QAEAAV0@ABV0@@Z		; ScriptRegistrar::operator=
PUBLIC	?Is_Running@ThreadClass@@QAE_NXZ		; ThreadClass::Is_Running
PUBLIC	?Get_Current_Thread_ID@ThreadClass@@SAHXZ	; ThreadClass::Get_Current_Thread_ID
PUBLIC	?Get_Name@ThreadClass@@QAEPBDXZ			; ThreadClass::Get_Name
PUBLIC	??0ThreadClass@@QAE@ABV0@@Z			; ThreadClass::ThreadClass
PUBLIC	??4ThreadClass@@QAEAAV0@ABV0@@Z			; ThreadClass::operator=
PUBLIC	??_GThreadClass@@UAEPAXI@Z			; ThreadClass::`scalar deleting destructor'
PUBLIC	??_EThreadClass@@UAEPAXI@Z			; ThreadClass::`vector deleting destructor'
PUBLIC	??4CriticalSectionClass@@QAEAAV0@ABV0@@Z	; CriticalSectionClass::operator=
PUBLIC	?Enter@FastCriticalSectionClass@@AAEXXZ		; FastCriticalSectionClass::Enter
PUBLIC	?Leave@FastCriticalSectionClass@@AAEXXZ		; FastCriticalSectionClass::Leave
PUBLIC	??0LockClass@FastCriticalSectionClass@@QAE@AAV1@@Z ; FastCriticalSectionClass::LockClass::LockClass
PUBLIC	??1LockClass@FastCriticalSectionClass@@QAE@XZ	; FastCriticalSectionClass::LockClass::~LockClass
PUBLIC	??0FastCriticalSectionClass@@QAE@XZ		; FastCriticalSectionClass::FastCriticalSectionClass
PUBLIC	??1StringClass@@QAE@XZ				; StringClass::~StringClass
PUBLIC	??_EStringClass@@QAEPAXI@Z			; StringClass::`vector deleting destructor'
PUBLIC	??1WideStringClass@@QAE@XZ			; WideStringClass::~WideStringClass
PUBLIC	??_EWideStringClass@@QAEPAXI@Z			; WideStringClass::`vector deleting destructor'
PUBLIC	??4ChunkLoadClass@@QAEAAV0@ABV0@@Z		; ChunkLoadClass::operator=
PUBLIC	?Set_Contains_Chunks@ChunkSaveClass@@QAEXXZ	; ChunkSaveClass::Set_Contains_Chunks
PUBLIC	??4ChunkSaveClass@@QAEAAV0@ABV0@@Z		; ChunkSaveClass::operator=
PUBLIC	?Is_Present@INIClass@@QBE_NPBD0@Z		; INIClass::Is_Present
PUBLIC	?Section_Present@INIClass@@QBE_NPBD@Z		; INIClass::Section_Present
PUBLIC	?Get_Section_List@INIClass@@QAEAAV?$List@PAUINISection@@@@XZ ; INIClass::Get_Section_List
PUBLIC	?Get_Section_Index@INIClass@@QAEAAV?$IndexClass@HPAUINISection@@@@XZ ; INIClass::Get_Section_Index
PUBLIC	?Get_File_Name@INIClass@@QAEPBDXZ		; INIClass::Get_File_Name
PUBLIC	??0INIClass@@QAE@ABV0@@Z			; INIClass::INIClass
PUBLIC	??4INIClass@@QAEAAV0@ABV0@@Z			; INIClass::operator=
PUBLIC	??_GINIClass@@UAEPAXI@Z				; INIClass::`scalar deleting destructor'
PUBLIC	??_EINIClass@@UAEPAXI@Z				; INIClass::`vector deleting destructor'
PUBLIC	??Cfile_auto_ptr@@QAEPAVFileClass@@XZ		; file_auto_ptr::operator->
PUBLIC	??Bfile_auto_ptr@@QAEPAVFileClass@@XZ		; file_auto_ptr::operator FileClass *
PUBLIC	??Dfile_auto_ptr@@QAEAAVFileClass@@XZ		; file_auto_ptr::operator*
PUBLIC	?get@file_auto_ptr@@QAEPAVFileClass@@XZ		; file_auto_ptr::get
PUBLIC	??4file_auto_ptr@@QAEAAV0@ABV0@@Z		; file_auto_ptr::operator=
PUBLIC	??0Vector4@@QAE@XZ				; Vector4::Vector4
PUBLIC	??0Vector4@@QAE@MMMM@Z				; Vector4::Vector4
PUBLIC	??4Vector4@@QAEAAV0@ABV0@@Z			; Vector4::operator=
PUBLIC	?Set@Vector4@@QAEXMMMM@Z			; Vector4::Set
PUBLIC	??AVector4@@QAEAAMH@Z				; Vector4::operator[]
PUBLIC	??AVector4@@QBEABMH@Z				; Vector4::operator[]
PUBLIC	??YVector4@@QAEAAV0@ABV0@@Z			; Vector4::operator+=
PUBLIC	??ZVector4@@QAEAAV0@ABV0@@Z			; Vector4::operator-=
PUBLIC	??XVector4@@QAEAAV0@M@Z				; Vector4::operator*=
PUBLIC	??AMatrix3D@@QAEAAVVector4@@H@Z			; Matrix3D::operator[]
PUBLIC	??AMatrix3D@@QBEABVVector4@@H@Z			; Matrix3D::operator[]
PUBLIC	??0Matrix3D@@QAE@_N@Z				; Matrix3D::Matrix3D
PUBLIC	??0Matrix3D@@QAE@QAM@Z				; Matrix3D::Matrix3D
PUBLIC	??0Matrix3D@@QAE@ABVVector3@@000@Z		; Matrix3D::Matrix3D
PUBLIC	??0Matrix3D@@QAE@ABVVector3@@M@Z		; Matrix3D::Matrix3D
PUBLIC	??0Matrix3D@@QAE@ABVVector3@@MM@Z		; Matrix3D::Matrix3D
PUBLIC	??0Matrix3D@@QAE@ABVMatrix3@@ABVVector3@@@Z	; Matrix3D::Matrix3D
PUBLIC	??0Matrix3D@@QAE@ABVQuaternion@@ABVVector3@@@Z	; Matrix3D::Matrix3D
PUBLIC	??0Matrix3D@@QAE@ABVVector3@@@Z			; Matrix3D::Matrix3D
PUBLIC	??0Matrix3D@@QAE@ABV0@@Z			; Matrix3D::Matrix3D
PUBLIC	??4Matrix3D@@QAEAAV0@ABV0@@Z			; Matrix3D::operator=
PUBLIC	?Set@Matrix3D@@QAEXQAM@Z			; Matrix3D::Set
PUBLIC	?Set@Matrix3D@@QAEXMMMMMMMMMMMM@Z		; Matrix3D::Set
PUBLIC	?Set@Matrix3D@@QAEXABVVector3@@000@Z		; Matrix3D::Set
PUBLIC	?Set@Matrix3D@@QAEXABVVector3@@M@Z		; Matrix3D::Set
PUBLIC	?Set@Matrix3D@@QAEXABVVector3@@MM@Z		; Matrix3D::Set
PUBLIC	?Set@Matrix3D@@QAEXABVVector3@@@Z		; Matrix3D::Set
PUBLIC	?Get_Translation@Matrix3D@@QBE?AVVector3@@XZ	; Matrix3D::Get_Translation
PUBLIC	?Get_Translation@Matrix3D@@QBEXPAVVector3@@@Z	; Matrix3D::Get_Translation
PUBLIC	?Set_Translation@Matrix3D@@QAEXABVVector3@@@Z	; Matrix3D::Set_Translation
PUBLIC	?Get_X_Translation@Matrix3D@@QBEMXZ		; Matrix3D::Get_X_Translation
PUBLIC	?Get_Y_Translation@Matrix3D@@QBEMXZ		; Matrix3D::Get_Y_Translation
PUBLIC	?Get_Z_Translation@Matrix3D@@QBEMXZ		; Matrix3D::Get_Z_Translation
PUBLIC	?Set_X_Translation@Matrix3D@@QAEXM@Z		; Matrix3D::Set_X_Translation
PUBLIC	?Set_Y_Translation@Matrix3D@@QAEXM@Z		; Matrix3D::Set_Y_Translation
PUBLIC	?Set_Z_Translation@Matrix3D@@QAEXM@Z		; Matrix3D::Set_Z_Translation
PUBLIC	?Adjust_Translation@Matrix3D@@QAEXABVVector3@@@Z ; Matrix3D::Adjust_Translation
PUBLIC	?Adjust_X_Translation@Matrix3D@@QAEXM@Z		; Matrix3D::Adjust_X_Translation
PUBLIC	?Adjust_Y_Translation@Matrix3D@@QAEXM@Z		; Matrix3D::Adjust_Y_Translation
PUBLIC	?Adjust_Z_Translation@Matrix3D@@QAEXM@Z		; Matrix3D::Adjust_Z_Translation
PUBLIC	?Make_Identity@Matrix3D@@QAEXXZ			; Matrix3D::Make_Identity
PUBLIC	?Translate@Matrix3D@@QAEXMMM@Z			; Matrix3D::Translate
PUBLIC	?Translate@Matrix3D@@QAEXABVVector3@@@Z		; Matrix3D::Translate
PUBLIC	?Translate_X@Matrix3D@@QAEXM@Z			; Matrix3D::Translate_X
PUBLIC	?Translate_Y@Matrix3D@@QAEXM@Z			; Matrix3D::Translate_Y
PUBLIC	?Translate_Z@Matrix3D@@QAEXM@Z			; Matrix3D::Translate_Z
PUBLIC	?Rotate_X@Matrix3D@@QAEXM@Z			; Matrix3D::Rotate_X
PUBLIC	?Rotate_Y@Matrix3D@@QAEXM@Z			; Matrix3D::Rotate_Y
PUBLIC	?Rotate_Z@Matrix3D@@QAEXM@Z			; Matrix3D::Rotate_Z
PUBLIC	?Rotate_X@Matrix3D@@QAEXMM@Z			; Matrix3D::Rotate_X
PUBLIC	?Rotate_Y@Matrix3D@@QAEXMM@Z			; Matrix3D::Rotate_Y
PUBLIC	?Rotate_Z@Matrix3D@@QAEXMM@Z			; Matrix3D::Rotate_Z
PUBLIC	?Scale@Matrix3D@@QAEXM@Z			; Matrix3D::Scale
PUBLIC	?Scale@Matrix3D@@QAEXMMM@Z			; Matrix3D::Scale
PUBLIC	?Scale@Matrix3D@@QAEXAAVVector3@@@Z		; Matrix3D::Scale
PUBLIC	?Pre_Rotate_X@Matrix3D@@QAEXM@Z			; Matrix3D::Pre_Rotate_X
PUBLIC	?Pre_Rotate_Y@Matrix3D@@QAEXM@Z			; Matrix3D::Pre_Rotate_Y
PUBLIC	?Pre_Rotate_Z@Matrix3D@@QAEXM@Z			; Matrix3D::Pre_Rotate_Z
PUBLIC	?Pre_Rotate_X@Matrix3D@@QAEXMM@Z		; Matrix3D::Pre_Rotate_X
PUBLIC	?Pre_Rotate_Y@Matrix3D@@QAEXMM@Z		; Matrix3D::Pre_Rotate_Y
PUBLIC	?Pre_Rotate_Z@Matrix3D@@QAEXMM@Z		; Matrix3D::Pre_Rotate_Z
PUBLIC	?In_Place_Pre_Rotate_X@Matrix3D@@QAEXM@Z	; Matrix3D::In_Place_Pre_Rotate_X
PUBLIC	?In_Place_Pre_Rotate_Y@Matrix3D@@QAEXM@Z	; Matrix3D::In_Place_Pre_Rotate_Y
PUBLIC	?In_Place_Pre_Rotate_Z@Matrix3D@@QAEXM@Z	; Matrix3D::In_Place_Pre_Rotate_Z
PUBLIC	?In_Place_Pre_Rotate_X@Matrix3D@@QAEXMM@Z	; Matrix3D::In_Place_Pre_Rotate_X
PUBLIC	?In_Place_Pre_Rotate_Y@Matrix3D@@QAEXMM@Z	; Matrix3D::In_Place_Pre_Rotate_Y
PUBLIC	?In_Place_Pre_Rotate_Z@Matrix3D@@QAEXMM@Z	; Matrix3D::In_Place_Pre_Rotate_Z
PUBLIC	?Transform_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ; Matrix3D::Transform_Vector
PUBLIC	?Get_X_Vector@Matrix3D@@QBE?AVVector3@@XZ	; Matrix3D::Get_X_Vector
PUBLIC	?Get_Y_Vector@Matrix3D@@QBE?AVVector3@@XZ	; Matrix3D::Get_Y_Vector
PUBLIC	?Get_Z_Vector@Matrix3D@@QBE?AVVector3@@XZ	; Matrix3D::Get_Z_Vector
PUBLIC	?Get_X_Vector@Matrix3D@@QBEXPAVVector3@@@Z	; Matrix3D::Get_X_Vector
PUBLIC	?Get_Y_Vector@Matrix3D@@QBEXPAVVector3@@@Z	; Matrix3D::Get_Y_Vector
PUBLIC	?Get_Z_Vector@Matrix3D@@QBEXPAVVector3@@@Z	; Matrix3D::Get_Z_Vector
PUBLIC	?Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ; Matrix3D::Rotate_Vector
PUBLIC	?Inverse_Transform_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ; Matrix3D::Inverse_Transform_Vector
PUBLIC	?Inverse_Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ; Matrix3D::Inverse_Rotate_Vector
PUBLIC	??0Matrix4@@QAE@XZ				; Matrix4::Matrix4
PUBLIC	??0Matrix4@@QAE@ABV0@@Z				; Matrix4::Matrix4
PUBLIC	??0Matrix4@@QAE@_N@Z				; Matrix4::Matrix4
PUBLIC	??0Matrix4@@QAE@ABVMatrix3D@@@Z			; Matrix4::Matrix4
PUBLIC	??0Matrix4@@QAE@ABVVector4@@000@Z		; Matrix4::Matrix4
PUBLIC	?Make_Identity@Matrix4@@QAEXXZ			; Matrix4::Make_Identity
PUBLIC	?Init@Matrix4@@QAEXABVMatrix3D@@@Z		; Matrix4::Init
PUBLIC	?Init@Matrix4@@QAEXABVVector4@@000@Z		; Matrix4::Init
PUBLIC	?Init_Ortho_OGL@Matrix4@@QAEXMMMMMM@Z		; Matrix4::Init_Ortho_OGL
PUBLIC	?Init_Perspective_OGL@Matrix4@@QAEXMMMM@Z	; Matrix4::Init_Perspective_OGL
PUBLIC	?Init_Perspective_OGL@Matrix4@@QAEXMMMMMM@Z	; Matrix4::Init_Perspective_OGL
PUBLIC	?Init_Ortho@Matrix4@@QAEXMMMMMM@Z		; Matrix4::Init_Ortho
PUBLIC	?Init_Perspective@Matrix4@@QAEXMMMMMM@Z		; Matrix4::Init_Perspective
PUBLIC	??AMatrix4@@QAEAAVVector4@@H@Z			; Matrix4::operator[]
PUBLIC	??AMatrix4@@QBEABVVector4@@H@Z			; Matrix4::operator[]
PUBLIC	?Transpose@Matrix4@@QBE?AV1@XZ			; Matrix4::Transpose
PUBLIC	?Determinant@Matrix4@@QBEMXZ			; Matrix4::Determinant
PUBLIC	?Inverse@Matrix4@@QBE?AV1@XZ			; Matrix4::Inverse
PUBLIC	??4Matrix4@@QAEAAV0@ABV0@@Z			; Matrix4::operator=
PUBLIC	??YMatrix4@@QAEAAV0@ABV0@@Z			; Matrix4::operator+=
PUBLIC	??ZMatrix4@@QAEAAV0@ABV0@@Z			; Matrix4::operator-=
PUBLIC	??XMatrix4@@QAEAAV0@M@Z				; Matrix4::operator*=
PUBLIC	??_0Matrix4@@QAEAAV0@M@Z			; Matrix4::operator/=
PUBLIC	?Transform_Vector@Matrix4@@SAXABV1@ABVVector3@@PAV2@@Z ; Matrix4::Transform_Vector
PUBLIC	?Transform_Vector@Matrix4@@SAXABV1@ABVVector3@@PAVVector4@@@Z ; Matrix4::Transform_Vector
PUBLIC	?Transform_Vector@Matrix4@@SAXABV1@ABVVector4@@PAV2@@Z ; Matrix4::Transform_Vector
PUBLIC	??0Matrix3@@QAE@XZ				; Matrix3::Matrix3
PUBLIC	??0Matrix3@@QAE@ABV0@@Z				; Matrix3::Matrix3
PUBLIC	??0Matrix3@@QAE@_N@Z				; Matrix3::Matrix3
PUBLIC	??0Matrix3@@QAE@ABVVector3@@00@Z		; Matrix3::Matrix3
PUBLIC	??0Matrix3@@QAE@MMMMMMMMM@Z			; Matrix3::Matrix3
PUBLIC	??0Matrix3@@QAE@ABVVector3@@M@Z			; Matrix3::Matrix3
PUBLIC	??0Matrix3@@QAE@ABVVector3@@MM@Z		; Matrix3::Matrix3
PUBLIC	??0Matrix3@@QAE@ABVQuaternion@@@Z		; Matrix3::Matrix3
PUBLIC	?Set@Matrix3@@QAEXABVVector3@@00@Z		; Matrix3::Set
PUBLIC	?Set@Matrix3@@QAEXMMMMMMMMM@Z			; Matrix3::Set
PUBLIC	?Set@Matrix3@@QAEXABVVector3@@M@Z		; Matrix3::Set
PUBLIC	?Set@Matrix3@@QAEXABVVector3@@MM@Z		; Matrix3::Set
PUBLIC	??AMatrix3@@QAEAAVVector3@@H@Z			; Matrix3::operator[]
PUBLIC	??AMatrix3@@QBEABVVector3@@H@Z			; Matrix3::operator[]
PUBLIC	?Transpose@Matrix3@@QBE?AV1@XZ			; Matrix3::Transpose
PUBLIC	?Determinant@Matrix3@@QBEMXZ			; Matrix3::Determinant
PUBLIC	??4Matrix3@@QAEAAV0@ABV0@@Z			; Matrix3::operator=
PUBLIC	??YMatrix3@@QAEAAV0@ABV0@@Z			; Matrix3::operator+=
PUBLIC	??ZMatrix3@@QAEAAV0@ABV0@@Z			; Matrix3::operator-=
PUBLIC	??XMatrix3@@QAEAAV0@M@Z				; Matrix3::operator*=
PUBLIC	??_0Matrix3@@QAEAAV0@M@Z			; Matrix3::operator/=
PUBLIC	?Make_Identity@Matrix3@@QAEXXZ			; Matrix3::Make_Identity
PUBLIC	?Rotate_X@Matrix3@@QAEXM@Z			; Matrix3::Rotate_X
PUBLIC	?Rotate_X@Matrix3@@QAEXMM@Z			; Matrix3::Rotate_X
PUBLIC	?Rotate_Y@Matrix3@@QAEXM@Z			; Matrix3::Rotate_Y
PUBLIC	?Rotate_Y@Matrix3@@QAEXMM@Z			; Matrix3::Rotate_Y
PUBLIC	?Rotate_Z@Matrix3@@QAEXM@Z			; Matrix3::Rotate_Z
PUBLIC	?Rotate_Z@Matrix3@@QAEXMM@Z			; Matrix3::Rotate_Z
PUBLIC	?Get_X_Rotation@Matrix3@@QBEMXZ			; Matrix3::Get_X_Rotation
PUBLIC	?Get_Y_Rotation@Matrix3@@QBEMXZ			; Matrix3::Get_Y_Rotation
PUBLIC	?Get_Z_Rotation@Matrix3@@QBEMXZ			; Matrix3::Get_Z_Rotation
PUBLIC	?Get_X_Vector@Matrix3@@QBE?AVVector3@@XZ	; Matrix3::Get_X_Vector
PUBLIC	?Get_Y_Vector@Matrix3@@QBE?AVVector3@@XZ	; Matrix3::Get_Y_Vector
PUBLIC	?Get_Z_Vector@Matrix3@@QBE?AVVector3@@XZ	; Matrix3::Get_Z_Vector
PUBLIC	?Get_X_Vector@Matrix3@@QBEXPAVVector3@@@Z	; Matrix3::Get_X_Vector
PUBLIC	?Get_Y_Vector@Matrix3@@QBEXPAVVector3@@@Z	; Matrix3::Get_Y_Vector
PUBLIC	?Get_Z_Vector@Matrix3@@QBEXPAVVector3@@@Z	; Matrix3::Get_Z_Vector
PUBLIC	??D@YA?AVVector3@@ABVMatrix3@@ABV0@@Z		; operator*
PUBLIC	?Add@Matrix3@@SAXABV1@0PAV1@@Z			; Matrix3::Add
PUBLIC	?Subtract@Matrix3@@SAXABV1@0PAV1@@Z		; Matrix3::Subtract
PUBLIC	?Rotate_Vector@Matrix3@@SAXABV1@ABVVector3@@PAV2@@Z ; Matrix3::Rotate_Vector
PUBLIC	?Transpose_Rotate_Vector@Matrix3@@SAXABV1@ABVVector3@@PAV2@@Z ; Matrix3::Transpose_Rotate_Vector
PUBLIC	?Rotate_AABox_Extent@Matrix3@@QAEXABVVector3@@PAV2@@Z ; Matrix3::Rotate_AABox_Extent
PUBLIC	?Inverse@Matrix3@@QBE?AV1@XZ			; Matrix3::Inverse
PUBLIC	??4SysTimeClass@@QAEAAV0@ABV0@@Z		; SysTimeClass::operator=
PUBLIC	??0PostLoadableClass@@QAE@XZ			; PostLoadableClass::PostLoadableClass
PUBLIC	??1PostLoadableClass@@UAE@XZ			; PostLoadableClass::~PostLoadableClass
PUBLIC	?On_Post_Load@PostLoadableClass@@UAEXXZ		; PostLoadableClass::On_Post_Load
PUBLIC	?Is_Post_Load_Registered@PostLoadableClass@@QBE_NXZ ; PostLoadableClass::Is_Post_Load_Registered
PUBLIC	?Set_Post_Load_Registered@PostLoadableClass@@QAEX_N@Z ; PostLoadableClass::Set_Post_Load_Registered
PUBLIC	??0PostLoadableClass@@QAE@ABV0@@Z		; PostLoadableClass::PostLoadableClass
PUBLIC	??4PostLoadableClass@@QAEAAV0@ABV0@@Z		; PostLoadableClass::operator=
PUBLIC	??_GPostLoadableClass@@UAEPAXI@Z		; PostLoadableClass::`scalar deleting destructor'
PUBLIC	??_EPostLoadableClass@@UAEPAXI@Z		; PostLoadableClass::`vector deleting destructor'
PUBLIC	??CReferencerClass@@QAEPAVScriptableGameObj@@XZ	; ReferencerClass::operator->
PUBLIC	??0ReferencerClass@@QAE@XZ			; ReferencerClass::ReferencerClass
PUBLIC	??0ReferencerClass@@QAE@PAVScriptableGameObj@@@Z ; ReferencerClass::ReferencerClass
PUBLIC	?Get_Ptr@ReferencerClass@@QBEPAVScriptableGameObj@@XZ ; ReferencerClass::Get_Ptr
PUBLIC	?Set_Ptr@ReferencerClass@@QAEXPAVScriptableGameObj@@@Z ; ReferencerClass::Set_Ptr
PUBLIC	??0ReferencerClass@@QAE@ABV0@@Z			; ReferencerClass::ReferencerClass
PUBLIC	??_GReferencerClass@@UAEPAXI@Z			; ReferencerClass::`scalar deleting destructor'
PUBLIC	??_EReferencerClass@@UAEPAXI@Z			; ReferencerClass::`vector deleting destructor'
PUBLIC	?Get_Data@?$ReferenceableClass@VScriptableGameObj@@@@IBEPAVScriptableGameObj@@XZ ; ReferenceableClass<ScriptableGameObj>::Get_Data
PUBLIC	??0LineSegClass@@QAE@XZ				; LineSegClass::LineSegClass
PUBLIC	??0LineSegClass@@QAE@ABVVector3@@0@Z		; LineSegClass::LineSegClass
PUBLIC	??0LineSegClass@@QAE@ABVVector3@@0M@Z		; LineSegClass::LineSegClass
PUBLIC	??0LineSegClass@@QAE@ABV0@ABVMatrix3D@@@Z	; LineSegClass::LineSegClass
PUBLIC	?Set@LineSegClass@@QAEXABVVector3@@0@Z		; LineSegClass::Set
PUBLIC	?Set@LineSegClass@@QAEXABVVector3@@0M@Z		; LineSegClass::Set
PUBLIC	?Get_P0@LineSegClass@@QBEABVVector3@@XZ		; LineSegClass::Get_P0
PUBLIC	?Get_P1@LineSegClass@@QBEABVVector3@@XZ		; LineSegClass::Get_P1
PUBLIC	?Get_DP@LineSegClass@@QBEABVVector3@@XZ		; LineSegClass::Get_DP
PUBLIC	?Get_Dir@LineSegClass@@QBEABVVector3@@XZ	; LineSegClass::Get_Dir
PUBLIC	?Get_Length@LineSegClass@@QBEMXZ		; LineSegClass::Get_Length
PUBLIC	?Compute_Point@LineSegClass@@QBEXMPAVVector3@@@Z ; LineSegClass::Compute_Point
PUBLIC	?recalculate@LineSegClass@@IAEXXZ		; LineSegClass::recalculate
PUBLIC	??0LineSegClass@@QAE@ABV0@@Z			; LineSegClass::LineSegClass
PUBLIC	??4LineSegClass@@QAEAAV0@ABV0@@Z		; LineSegClass::operator=
PUBLIC	?Get_Position@PhysClass@@QBEXPAVVector3@@@Z	; PhysClass::Get_Position
PUBLIC	?Set_Collision_Group@PhysClass@@QAEXW4Collision_Group_Type@@@Z ; PhysClass::Set_Collision_Group
PUBLIC	?Peek_Physical_Object@PhysicalGameObj@@QBEPAVPhysClass@@XZ ; PhysicalGameObj::Peek_Physical_Object
PUBLIC	?Get_Position@PhysicalGameObj@@QAE?AVVector3@@XZ ; PhysicalGameObj::Get_Position
PUBLIC	?Get_Player_Data@SmartGameObj@@QAEPAVPlayerDataClass@@XZ ; SmartGameObj::Get_Player_Data
PUBLIC	?Get_Id@cPlayer@@QBEHXZ				; cPlayer::Get_Id
PUBLIC	??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z ; AutoPoolClass<GenericSLNode,256>::operator new
PUBLIC	??3?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAXPAX@Z ; AutoPoolClass<GenericSLNode,256>::operator delete
PUBLIC	??0GenericSLNode@@IAE@PAX@Z			; GenericSLNode::GenericSLNode
PUBLIC	??0JFW_Key_Hook_Base@@QAE@XZ			; JFW_Key_Hook_Base::JFW_Key_Hook_Base
PUBLIC	??0JFW_Key_Hook_Base@@QAE@ABV0@@Z		; JFW_Key_Hook_Base::JFW_Key_Hook_Base
PUBLIC	??4JFW_Key_Hook_Base@@QAEAAV0@ABV0@@Z		; JFW_Key_Hook_Base::operator=
PUBLIC	??_GJFW_Key_Hook_Base@@UAEPAXI@Z		; JFW_Key_Hook_Base::`scalar deleting destructor'
PUBLIC	??_EJFW_Key_Hook_Base@@UAEPAXI@Z		; JFW_Key_Hook_Base::`vector deleting destructor'
PUBLIC	??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@XZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
PUBLIC	??1?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE@XZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::~SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
PUBLIC	?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Head
PUBLIC	?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Head
PUBLIC	?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Tail
PUBLIC	?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Tail
PUBLIC	?Remove_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_Head
PUBLIC	?Remove_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_Tail
PUBLIC	?Remove@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPBUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove
PUBLIC	?Remove_All@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEXXZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_All
PUBLIC	?Insert_Before@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Insert_Before
PUBLIC	?Insert_After@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Insert_After
PUBLIC	?Is_Empty@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBE_NXZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Is_Empty
PUBLIC	?Get_Count@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBEIXZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Get_Count
PUBLIC	??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@ABV0@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
PUBLIC	??4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEAAV0@ABV0@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::operator=
PUBLIC	??_G?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAXI@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`scalar deleting destructor'
PUBLIC	??0MultiKeyHookScriptImpClass@@QAE@XZ		; MultiKeyHookScriptImpClass::MultiKeyHookScriptImpClass
PUBLIC	??1MultiKeyHookScriptImpClass@@UAE@XZ		; MultiKeyHookScriptImpClass::~MultiKeyHookScriptImpClass
PUBLIC	??0MultiKeyHookScriptImpClass@@QAE@ABV0@@Z	; MultiKeyHookScriptImpClass::MultiKeyHookScriptImpClass
PUBLIC	??4MultiKeyHookScriptImpClass@@QAEAAV0@ABV0@@Z	; MultiKeyHookScriptImpClass::operator=
PUBLIC	??_GMultiKeyHookScriptImpClass@@UAEPAXI@Z	; MultiKeyHookScriptImpClass::`scalar deleting destructor'
PUBLIC	??_EMultiKeyHookScriptImpClass@@UAEPAXI@Z	; MultiKeyHookScriptImpClass::`vector deleting destructor'
PUBLIC	??0JFW_Object_Created_Hook_Base@@QAE@XZ		; JFW_Object_Created_Hook_Base::JFW_Object_Created_Hook_Base
PUBLIC	??0JFW_Object_Created_Hook_Base@@QAE@ABV0@@Z	; JFW_Object_Created_Hook_Base::JFW_Object_Created_Hook_Base
PUBLIC	??4JFW_Object_Created_Hook_Base@@QAEAAV0@ABV0@@Z ; JFW_Object_Created_Hook_Base::operator=
PUBLIC	??_GJFW_Object_Created_Hook_Base@@UAEPAXI@Z	; JFW_Object_Created_Hook_Base::`scalar deleting destructor'
PUBLIC	??_EJFW_Object_Created_Hook_Base@@UAEPAXI@Z	; JFW_Object_Created_Hook_Base::`vector deleting destructor'
PUBLIC	??4ArmorWarheadManager@@QAEAAV0@ABV0@@Z		; ArmorWarheadManager::operator=
PUBLIC	??0CollisionTestClass@@QAE@PAUCastResultStruct@@W4Collision_Type@@@Z ; CollisionTestClass::CollisionTestClass
PUBLIC	??0CollisionTestClass@@QAE@ABV0@@Z		; CollisionTestClass::CollisionTestClass
PUBLIC	??4CollisionTestClass@@QAEAAV0@ABV0@@Z		; CollisionTestClass::operator=
PUBLIC	?Cull@AABoxCollisionTestClass@@QAE_NABVVector3@@0@Z ; AABoxCollisionTestClass::Cull
PUBLIC	?Translate@AABoxCollisionTestClass@@QAEXABVVector3@@@Z ; AABoxCollisionTestClass::Translate
PUBLIC	?Cull@OBBoxCollisionTestClass@@QAE_NABVVector3@@0@Z ; OBBoxCollisionTestClass::Cull
PUBLIC	??0GenericDateTime@JmgUtility@@QAE@XZ		; JmgUtility::GenericDateTime::GenericDateTime
PUBLIC	?JMG_Get_Sex@JmgUtility@@SADPAVScriptableGameObj@@@Z ; JmgUtility::JMG_Get_Sex
PUBLIC	?JMG_Get_Player_ID@JmgUtility@@SAJPAVScriptableGameObj@@@Z ; JmgUtility::JMG_Get_Player_ID
PUBLIC	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z	; JmgUtility::SimpleDistance
PUBLIC	?MathClamp@JmgUtility@@SAMMMM@Z			; JmgUtility::MathClamp
PUBLIC	?MathClampInt@JmgUtility@@SAHHHH@Z		; JmgUtility::MathClampInt
PUBLIC	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
PUBLIC	?MessageAllPlayers@JmgUtility@@SAXHHHPBD@Z	; JmgUtility::MessageAllPlayers
PUBLIC	?Rp2Encrypt@JmgUtility@@SAPADPBDHH@Z		; JmgUtility::Rp2Encrypt
PUBLIC	?Rp2Encrypt2@JmgUtility@@SAPADPBDHH@Z		; JmgUtility::Rp2Encrypt2
PUBLIC	?Rp2Decrypt@JmgUtility@@SAPADPBDHH@Z		; JmgUtility::Rp2Decrypt
PUBLIC	?MathClampDegrees@JmgUtility@@SAMM@Z		; JmgUtility::MathClampDegrees
PUBLIC	?DegreeDiff@JmgUtility@@SA_NMMM@Z		; JmgUtility::DegreeDiff
PUBLIC	?AddDescription@PerkSystemPerkTypeNode@@QAEXPBD@Z ; PerkSystemPerkTypeNode::AddDescription
PUBLIC	?Reset@PerkSystemPerkTypeList@@AAEXXZ		; PerkSystemPerkTypeList::Reset
PUBLIC	??0PerkSystemPerkTypeList@@QAE@XZ		; PerkSystemPerkTypeList::PerkSystemPerkTypeList
PUBLIC	?AddAPerkType@PerkSystemPerkTypeList@@QAEXHPBDI_N11W4PerkTypeCategories@@H0@Z ; PerkSystemPerkTypeList::AddAPerkType
PUBLIC	?Clean_Up@PerkSystemPerkTypeList@@QAEXXZ	; PerkSystemPerkTypeList::Clean_Up
PUBLIC	?Finalize_Perks@PerkSystemPerkTypeList@@QAEXXZ	; PerkSystemPerkTypeList::Finalize_Perks
PUBLIC	??0PlayerPerkDataNode@@QAE@XZ			; PlayerPerkDataNode::PlayerPerkDataNode
PUBLIC	??0PlayerPerksDataNode@@QAE@XZ			; PlayerPerksDataNode::PlayerPerksDataNode
PUBLIC	?AddAPlayerPerkNode@PlayerPerksNodeControlSystem@@AAEPAUPlayerPerksDataNode@@PAU2@PBDQAUPlayerPerkDataNode@@@Z ; PlayerPerksNodeControlSystem::AddAPlayerPerkNode
PUBLIC	?GetPlayerPerkList@PlayerPerksNodeControlSystem@@AAEPAUPlayerPerksDataNode@@PBD@Z ; PlayerPerksNodeControlSystem::GetPlayerPerkList
PUBLIC	??0PlayerPerksNodeControlSystem@@QAE@XZ		; PlayerPerksNodeControlSystem::PlayerPerksNodeControlSystem
PUBLIC	?FindPlayerPerkList@PlayerPerksNodeControlSystem@@QAEXPAVScriptableGameObj@@H@Z ; PlayerPerksNodeControlSystem::FindPlayerPerkList
PUBLIC	?IncreasePlayerPerkUnlockAmount@PlayerPerksNodeControlSystem@@QAE_NPAVScriptableGameObj@@HI@Z ; PlayerPerksNodeControlSystem::IncreasePlayerPerkUnlockAmount
PUBLIC	?CheckIfPlayerHasPerkUnlocked@PlayerPerksNodeControlSystem@@QAE_NPAVScriptableGameObj@@H@Z ; PlayerPerksNodeControlSystem::CheckIfPlayerHasPerkUnlocked
PUBLIC	?ClearPerksList@PlayerPerksNodeControlSystem@@QAEXXZ ; PlayerPerksNodeControlSystem::ClearPerksList
PUBLIC	?SaveData@PlayerPerksNodeControlSystem@@QAEXXZ	; PlayerPerksNodeControlSystem::SaveData
PUBLIC	?LoadData@PlayerPerksNodeControlSystem@@QAEXXZ	; PlayerPerksNodeControlSystem::LoadData
PUBLIC	?CheckIfPlayerHasPerkUnlocked@@YA_NPAVScriptableGameObj@@H@Z ; CheckIfPlayerHasPerkUnlocked
PUBLIC	?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z ; PerkSystemIncreasePlayerPerkUnlockAmount
PUBLIC	?AddPerkTypes@@YAXXZ				; AddPerkTypes
PUBLIC	??0CMTBHighScoresNode@RenCometBustersScoreSystem@@QAE@XZ ; RenCometBustersScoreSystem::CMTBHighScoresNode::CMTBHighScoresNode
PUBLIC	?AddPlayerToInGameList@RenCometBustersScoreSystem@@AAEXPAUCMTBHighScoresNode@1@@Z ; RenCometBustersScoreSystem::AddPlayerToInGameList
PUBLIC	?LoadHighestScores@RenCometBustersScoreSystem@@AAEXXZ ; RenCometBustersScoreSystem::LoadHighestScores
PUBLIC	?FindOrAddPlayerMAHighScoreNode@RenCometBustersScoreSystem@@AAEPAUCMTBHighScoresNode@1@PBD@Z ; RenCometBustersScoreSystem::FindOrAddPlayerMAHighScoreNode
PUBLIC	??0RenCometBustersScoreSystem@@QAE@XZ		; RenCometBustersScoreSystem::RenCometBustersScoreSystem
PUBLIC	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
PUBLIC	?Cleanup@RenCometBustersScoreSystem@@QAEXXZ	; RenCometBustersScoreSystem::Cleanup
PUBLIC	?SaveData@RenCometBustersScoreSystem@@QAEXXZ	; RenCometBustersScoreSystem::SaveData
PUBLIC	?LoadData@RenCometBustersScoreSystem@@QAEXH@Z	; RenCometBustersScoreSystem::LoadData
PUBLIC	?CompareHighScoreNodes@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@PAU21@0H@Z ; RenCometBustersScoreSystem::CompareHighScoreNodes
PUBLIC	?ReturnHighScoreNodeValue@RenCometBustersScoreSystem@@QAE_NPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::ReturnHighScoreNodeValue
PUBLIC	?ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::ReturnScore
PUBLIC	?StateHighScore@RenCometBustersScoreSystem@@QAEXXZ ; RenCometBustersScoreSystem::StateHighScore
PUBLIC	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
PUBLIC	??0AnObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; AnObject::AnObject
PUBLIC	??0RenCometBustersPlayerNode@@QAE@XZ		; RenCometBustersPlayerNode::RenCometBustersPlayerNode
PUBLIC	??4RenCometBustersPlayerNode@@QAEAAU0@ABU0@@Z	; RenCometBustersPlayerNode::operator=
PUBLIC	??0RenCometBustersGameObjects@@QAE@XZ		; RenCometBustersGameObjects::RenCometBustersGameObjects
PUBLIC	??1RenCometBustersGameObjects@@QAE@XZ		; RenCometBustersGameObjects::~RenCometBustersGameObjects
PUBLIC	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=
PUBLIC	??ZRenCometBustersGameObjects@@QAEAAV0@PAVScriptableGameObj@@@Z ; RenCometBustersGameObjects::operator-=
PUBLIC	?FindObject@RenCometBustersGameObjects@@QAEPAUAnObject@@PAVScriptableGameObj@@@Z ; RenCometBustersGameObjects::FindObject
PUBLIC	?FindObjectByID@RenCometBustersGameObjects@@QAEPAUAnObject@@H@Z ; RenCometBustersGameObjects::FindObjectByID
PUBLIC	?SpecialApplyDamage@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MPBD0@Z ; RenCometBustersGameObjects::SpecialApplyDamage
PUBLIC	?DoesCollide@RenCometBustersGameObjects@@QAE_NPAUAnObject@@0@Z ; RenCometBustersGameObjects::DoesCollide
PUBLIC	?PickupPowerup@RenCometBustersGameObjects@@QAE_NPAUAnObject@@0@Z ; RenCometBustersGameObjects::PickupPowerup
PUBLIC	?UpdateCollisions@RenCometBustersGameObjects@@QAEXXZ ; RenCometBustersGameObjects::UpdateCollisions
PUBLIC	?FindNearestCollidableObject@RenCometBustersGameObjects@@QAEMPAVScriptableGameObj@@ABVVector3@@@Z ; RenCometBustersGameObjects::FindNearestCollidableObject
PUBLIC	?AllowShipSpawn@RenCometBustersGameObjects@@QAEHHQAVVector3@@@Z ; RenCometBustersGameObjects::AllowShipSpawn
PUBLIC	?CountType@RenCometBustersGameObjects@@QAEHW4ObjectType@@@Z ; RenCometBustersGameObjects::CountType
PUBLIC	?CheckIfLevelComplete@RenCometBustersGameObjects@@QAE_NXZ ; RenCometBustersGameObjects::CheckIfLevelComplete
PUBLIC	?ClearAllObjects@RenCometBustersGameObjects@@QAEXXZ ; RenCometBustersGameObjects::ClearAllObjects
PUBLIC	?GrantScoreToKiller@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MW4ObjectType@@H@Z ; RenCometBustersGameObjects::GrantScoreToKiller
PUBLIC	?FindMineTarget@RenCometBustersGameObjects@@QAEPAUAnObject@@PAVScriptableGameObj@@PAH@Z ; RenCometBustersGameObjects::FindMineTarget
PUBLIC	?KillInRange@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@ABVVector3@@MM@Z ; RenCometBustersGameObjects::KillInRange
PUBLIC	?FindDroneAvoidObjectInRange@RenCometBustersGameObjects@@QAEHPAVScriptableGameObj@@PAVVector3@@MPAM@Z ; RenCometBustersGameObjects::FindDroneAvoidObjectInRange
PUBLIC	?CheckForDroneTarget@RenCometBustersGameObjects@@QAEPAVScriptableGameObj@@PAV2@ABVVector3@@PAM@Z ; RenCometBustersGameObjects::CheckForDroneTarget
PUBLIC	?Random_Map_Position@@YA?AVVector3@@XZ		; Random_Map_Position
PUBLIC	?Created@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Main_Game_Control::Created
PUBLIC	?Timer_Expired@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@H@Z ; JMG_CMTB_Main_Game_Control::Timer_Expired
PUBLIC	?Custom@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@HH0@Z ; JMG_CMTB_Main_Game_Control::Custom
PUBLIC	?Destroyed@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Main_Game_Control::Destroyed
PUBLIC	?Create_Player_Ship@JMG_CMTB_Main_Game_Control@@AAEXPAVScriptableGameObj@@H@Z ; JMG_CMTB_Main_Game_Control::Create_Player_Ship
PUBLIC	?DisableGun@JMG_CMTB_Main_Game_Control@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Main_Game_Control::DisableGun
PUBLIC	?FadeMusic@JMG_CMTB_Main_Game_Control@@AAEXPBD@Z ; JMG_CMTB_Main_Game_Control::FadeMusic
PUBLIC	??0JMG_CMTB_Main_Game_Control@@QAE@XZ		; JMG_CMTB_Main_Game_Control::JMG_CMTB_Main_Game_Control
PUBLIC	??1JMG_CMTB_Main_Game_Control@@UAE@XZ		; JMG_CMTB_Main_Game_Control::~JMG_CMTB_Main_Game_Control
PUBLIC	??_GJMG_CMTB_Main_Game_Control@@UAEPAXI@Z	; JMG_CMTB_Main_Game_Control::`scalar deleting destructor'
PUBLIC	?Created@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_UFO_Random_Fire_Control::Created
PUBLIC	?Timer_Expired@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@H@Z ; JMG_CMTB_UFO_Random_Fire_Control::Timer_Expired
PUBLIC	?Killed@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@0@Z ; JMG_CMTB_UFO_Random_Fire_Control::Killed
PUBLIC	?Destroyed@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_UFO_Random_Fire_Control::Destroyed
PUBLIC	??0JMG_CMTB_UFO_Random_Fire_Control@@QAE@XZ	; JMG_CMTB_UFO_Random_Fire_Control::JMG_CMTB_UFO_Random_Fire_Control
PUBLIC	??1JMG_CMTB_UFO_Random_Fire_Control@@UAE@XZ	; JMG_CMTB_UFO_Random_Fire_Control::~JMG_CMTB_UFO_Random_Fire_Control
PUBLIC	??_GJMG_CMTB_UFO_Random_Fire_Control@@UAEPAXI@Z	; JMG_CMTB_UFO_Random_Fire_Control::`scalar deleting destructor'
PUBLIC	?Created@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::Created
PUBLIC	?Timer_Expired@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@H@Z ; JMG_CMTB_Ship_Control_Script::Timer_Expired
PUBLIC	?Custom@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@HH0@Z ; JMG_CMTB_Ship_Control_Script::Custom
PUBLIC	?Damaged@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@0M@Z ; JMG_CMTB_Ship_Control_Script::Damaged
PUBLIC	?Killed@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@0@Z ; JMG_CMTB_Ship_Control_Script::Killed
PUBLIC	?Destroyed@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::Destroyed
PUBLIC	?ShieldOff@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::ShieldOff
PUBLIC	?CloakOff@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::CloakOff
PUBLIC	?DrainPower@JMG_CMTB_Ship_Control_Script@@AAE_NPAVScriptableGameObj@@H@Z ; JMG_CMTB_Ship_Control_Script::DrainPower
PUBLIC	?ReturnToNormalState@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::ReturnToNormalState
PUBLIC	??0JMG_CMTB_Ship_Control_Script@@QAE@XZ		; JMG_CMTB_Ship_Control_Script::JMG_CMTB_Ship_Control_Script
PUBLIC	??1JMG_CMTB_Ship_Control_Script@@UAE@XZ		; JMG_CMTB_Ship_Control_Script::~JMG_CMTB_Ship_Control_Script
PUBLIC	??_GJMG_CMTB_Ship_Control_Script@@UAEPAXI@Z	; JMG_CMTB_Ship_Control_Script::`scalar deleting destructor'
PUBLIC	?Created@JMG_CMTB_Comet_Script@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Comet_Script::Created
PUBLIC	?Killed@JMG_CMTB_Comet_Script@@EAEXPAVScriptableGameObj@@0@Z ; JMG_CMTB_Comet_Script::Killed
PUBLIC	?Destroyed@JMG_CMTB_Comet_Script@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Comet_Script::Destroyed
PUBLIC	??0JMG_CMTB_Comet_Script@@QAE@XZ		; JMG_CMTB_Comet_Script::JMG_CMTB_Comet_Script
PUBLIC	??1JMG_CMTB_Comet_Script@@UAE@XZ		; JMG_CMTB_Comet_Script::~JMG_CMTB_Comet_Script
PUBLIC	??_GJMG_CMTB_Comet_Script@@UAEPAXI@Z		; JMG_CMTB_Comet_Script::`scalar deleting destructor'
PUBLIC	?Entered@JMG_CMTB_Zone_Realign_Enter@@EAEXPAVScriptableGameObj@@0@Z ; JMG_CMTB_Zone_Realign_Enter::Entered
PUBLIC	??0JMG_CMTB_Zone_Realign_Enter@@QAE@XZ		; JMG_CMTB_Zone_Realign_Enter::JMG_CMTB_Zone_Realign_Enter
PUBLIC	??1JMG_CMTB_Zone_Realign_Enter@@UAE@XZ		; JMG_CMTB_Zone_Realign_Enter::~JMG_CMTB_Zone_Realign_Enter
PUBLIC	??_GJMG_CMTB_Zone_Realign_Enter@@UAEPAXI@Z	; JMG_CMTB_Zone_Realign_Enter::`scalar deleting destructor'
PUBLIC	?Created@JMG_CMTB_Spectator_Object@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Spectator_Object::Created
PUBLIC	?Timer_Expired@JMG_CMTB_Spectator_Object@@EAEXPAVScriptableGameObj@@H@Z ; JMG_CMTB_Spectator_Object::Timer_Expired
PUBLIC	?Custom@JMG_CMTB_Spectator_Object@@EAEXPAVScriptableGameObj@@HH0@Z ; JMG_CMTB_Spectator_Object::Custom
PUBLIC	?SpecialAbilitiesList@JMG_CMTB_Spectator_Object@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Spectator_Object::SpecialAbilitiesList
PUBLIC	?ResetCurrentAbility@JMG_CMTB_Spectator_Object@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Spectator_Object::ResetCurrentAbility
PUBLIC	??0JMG_CMTB_Spectator_Object@@QAE@XZ		; JMG_CMTB_Spectator_Object::JMG_CMTB_Spectator_Object
PUBLIC	??1JMG_CMTB_Spectator_Object@@UAE@XZ		; JMG_CMTB_Spectator_Object::~JMG_CMTB_Spectator_Object
PUBLIC	??_GJMG_CMTB_Spectator_Object@@UAEPAXI@Z	; JMG_CMTB_Spectator_Object::`scalar deleting destructor'
PUBLIC	?Created@JMG_CMTB_Arcade_Machine@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Arcade_Machine::Created
PUBLIC	?Poked@JMG_CMTB_Arcade_Machine@@EAEXPAVScriptableGameObj@@0@Z ; JMG_CMTB_Arcade_Machine::Poked
PUBLIC	??0JMG_CMTB_Arcade_Machine@@QAE@XZ		; JMG_CMTB_Arcade_Machine::JMG_CMTB_Arcade_Machine
PUBLIC	??1JMG_CMTB_Arcade_Machine@@UAE@XZ		; JMG_CMTB_Arcade_Machine::~JMG_CMTB_Arcade_Machine
PUBLIC	??_GJMG_CMTB_Arcade_Machine@@UAEPAXI@Z		; JMG_CMTB_Arcade_Machine::`scalar deleting destructor'
PUBLIC	?Created@JMG_CMTB_Fake_Player_Attach_Script@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Fake_Player_Attach_Script::Created
PUBLIC	?Timer_Expired@JMG_CMTB_Fake_Player_Attach_Script@@EAEXPAVScriptableGameObj@@H@Z ; JMG_CMTB_Fake_Player_Attach_Script::Timer_Expired
PUBLIC	?Killed@JMG_CMTB_Fake_Player_Attach_Script@@EAEXPAVScriptableGameObj@@0@Z ; JMG_CMTB_Fake_Player_Attach_Script::Killed
PUBLIC	??0JMG_CMTB_Fake_Player_Attach_Script@@QAE@XZ	; JMG_CMTB_Fake_Player_Attach_Script::JMG_CMTB_Fake_Player_Attach_Script
PUBLIC	??1JMG_CMTB_Fake_Player_Attach_Script@@UAE@XZ	; JMG_CMTB_Fake_Player_Attach_Script::~JMG_CMTB_Fake_Player_Attach_Script
PUBLIC	??_GJMG_CMTB_Fake_Player_Attach_Script@@UAEPAXI@Z ; JMG_CMTB_Fake_Player_Attach_Script::`scalar deleting destructor'
PUBLIC	?Created@JMG_CMTB_Renegade_Code@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Renegade_Code::Created
PUBLIC	?Custom@JMG_CMTB_Renegade_Code@@EAEXPAVScriptableGameObj@@HH0@Z ; JMG_CMTB_Renegade_Code::Custom
PUBLIC	??0JMG_CMTB_Renegade_Code@@QAE@XZ		; JMG_CMTB_Renegade_Code::JMG_CMTB_Renegade_Code
PUBLIC	??1JMG_CMTB_Renegade_Code@@UAE@XZ		; JMG_CMTB_Renegade_Code::~JMG_CMTB_Renegade_Code
PUBLIC	??_GJMG_CMTB_Renegade_Code@@UAEPAXI@Z		; JMG_CMTB_Renegade_Code::`scalar deleting destructor'
PUBLIC	?Created@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Motion_Mine::Created
PUBLIC	?Timer_Expired@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@H@Z ; JMG_CMTB_Motion_Mine::Timer_Expired
PUBLIC	?Killed@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@0@Z ; JMG_CMTB_Motion_Mine::Killed
PUBLIC	?Destroyed@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Motion_Mine::Destroyed
PUBLIC	?Clamp_Value@JMG_CMTB_Motion_Mine@@AAEMMMM@Z	; JMG_CMTB_Motion_Mine::Clamp_Value
PUBLIC	??0JMG_CMTB_Motion_Mine@@QAE@XZ			; JMG_CMTB_Motion_Mine::JMG_CMTB_Motion_Mine
PUBLIC	??1JMG_CMTB_Motion_Mine@@UAE@XZ			; JMG_CMTB_Motion_Mine::~JMG_CMTB_Motion_Mine
PUBLIC	??_GJMG_CMTB_Motion_Mine@@UAEPAXI@Z		; JMG_CMTB_Motion_Mine::`scalar deleting destructor'
PUBLIC	?Created@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_The_Moon_Script::Created
PUBLIC	?Timer_Expired@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@H@Z ; JMG_CMTB_The_Moon_Script::Timer_Expired
PUBLIC	?Damaged@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@0M@Z ; JMG_CMTB_The_Moon_Script::Damaged
PUBLIC	?Killed@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@0@Z ; JMG_CMTB_The_Moon_Script::Killed
PUBLIC	?Destroyed@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_The_Moon_Script::Destroyed
PUBLIC	?EnableSpawnPositions@JMG_CMTB_The_Moon_Script@@AAE_NPAVScriptableGameObj@@@Z ; JMG_CMTB_The_Moon_Script::EnableSpawnPositions
PUBLIC	??0JMG_CMTB_The_Moon_Script@@QAE@XZ		; JMG_CMTB_The_Moon_Script::JMG_CMTB_The_Moon_Script
PUBLIC	??1JMG_CMTB_The_Moon_Script@@UAE@XZ		; JMG_CMTB_The_Moon_Script::~JMG_CMTB_The_Moon_Script
PUBLIC	??_GJMG_CMTB_The_Moon_Script@@UAEPAXI@Z		; JMG_CMTB_The_Moon_Script::`scalar deleting destructor'
PUBLIC	?Created@JMG_CMTB_Ship_Super_Weapon@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Super_Weapon::Created
PUBLIC	?Timer_Expired@JMG_CMTB_Ship_Super_Weapon@@EAEXPAVScriptableGameObj@@H@Z ; JMG_CMTB_Ship_Super_Weapon::Timer_Expired
PUBLIC	??0JMG_CMTB_Ship_Super_Weapon@@QAE@XZ		; JMG_CMTB_Ship_Super_Weapon::JMG_CMTB_Ship_Super_Weapon
PUBLIC	??1JMG_CMTB_Ship_Super_Weapon@@UAE@XZ		; JMG_CMTB_Ship_Super_Weapon::~JMG_CMTB_Ship_Super_Weapon
PUBLIC	??_GJMG_CMTB_Ship_Super_Weapon@@UAEPAXI@Z	; JMG_CMTB_Ship_Super_Weapon::`scalar deleting destructor'
PUBLIC	?Created@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Powerup_Script::Created
PUBLIC	?Timer_Expired@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@H@Z ; JMG_CMTB_Powerup_Script::Timer_Expired
PUBLIC	?Killed@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@0@Z ; JMG_CMTB_Powerup_Script::Killed
PUBLIC	?Destroyed@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Powerup_Script::Destroyed
PUBLIC	??0JMG_CMTB_Powerup_Script@@QAE@XZ		; JMG_CMTB_Powerup_Script::JMG_CMTB_Powerup_Script
PUBLIC	??1JMG_CMTB_Powerup_Script@@UAE@XZ		; JMG_CMTB_Powerup_Script::~JMG_CMTB_Powerup_Script
PUBLIC	??_GJMG_CMTB_Powerup_Script@@UAEPAXI@Z		; JMG_CMTB_Powerup_Script::`scalar deleting destructor'
PUBLIC	?Created@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Cargo_Ship_Script::Created
PUBLIC	?Timer_Expired@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@H@Z ; JMG_CMTB_Cargo_Ship_Script::Timer_Expired
PUBLIC	?Damaged@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@0M@Z ; JMG_CMTB_Cargo_Ship_Script::Damaged
PUBLIC	?Killed@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@0@Z ; JMG_CMTB_Cargo_Ship_Script::Killed
PUBLIC	?Destroyed@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Cargo_Ship_Script::Destroyed
PUBLIC	??0JMG_CMTB_Cargo_Ship_Script@@QAE@XZ		; JMG_CMTB_Cargo_Ship_Script::JMG_CMTB_Cargo_Ship_Script
PUBLIC	??1JMG_CMTB_Cargo_Ship_Script@@UAE@XZ		; JMG_CMTB_Cargo_Ship_Script::~JMG_CMTB_Cargo_Ship_Script
PUBLIC	??_GJMG_CMTB_Cargo_Ship_Script@@UAEPAXI@Z	; JMG_CMTB_Cargo_Ship_Script::`scalar deleting destructor'
PUBLIC	?Created@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Cargo_Ship_Turret::Created
PUBLIC	?Enemy_Seen@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@0@Z ; JMG_CMTB_Cargo_Ship_Turret::Enemy_Seen
PUBLIC	?Custom@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@HH0@Z ; JMG_CMTB_Cargo_Ship_Turret::Custom
PUBLIC	?Timer_Expired@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@H@Z ; JMG_CMTB_Cargo_Ship_Turret::Timer_Expired
PUBLIC	?Destroyed@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Cargo_Ship_Turret::Destroyed
PUBLIC	?SafeDiv@JMG_CMTB_Cargo_Ship_Turret@@AAEMMM@Z	; JMG_CMTB_Cargo_Ship_Turret::SafeDiv
PUBLIC	?EndAttack@JMG_CMTB_Cargo_Ship_Turret@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Cargo_Ship_Turret::EndAttack
PUBLIC	?CheckIfInTargetableRange@JMG_CMTB_Cargo_Ship_Turret@@AAE_NPAVScriptableGameObj@@ABVVector3@@@Z ; JMG_CMTB_Cargo_Ship_Turret::CheckIfInTargetableRange
PUBLIC	??0JMG_CMTB_Cargo_Ship_Turret@@QAE@XZ		; JMG_CMTB_Cargo_Ship_Turret::JMG_CMTB_Cargo_Ship_Turret
PUBLIC	??1JMG_CMTB_Cargo_Ship_Turret@@UAE@XZ		; JMG_CMTB_Cargo_Ship_Turret::~JMG_CMTB_Cargo_Ship_Turret
PUBLIC	??_GJMG_CMTB_Cargo_Ship_Turret@@UAEPAXI@Z	; JMG_CMTB_Cargo_Ship_Turret::`scalar deleting destructor'
PUBLIC	?Created@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::Created
PUBLIC	?Custom@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@HH0@Z ; JMG_CMTB_Player_Drone::Custom
PUBLIC	?Timer_Expired@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@H@Z ; JMG_CMTB_Player_Drone::Timer_Expired
PUBLIC	?Killed@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@0@Z ; JMG_CMTB_Player_Drone::Killed
PUBLIC	?Destroyed@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::Destroyed
PUBLIC	?ChangeState@JMG_CMTB_Player_Drone@@AAE_NW4AI_State@1@@Z ; JMG_CMTB_Player_Drone::ChangeState
PUBLIC	?Drone_Action_Complete@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::Drone_Action_Complete
PUBLIC	?AI_Update@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@_N@Z ; JMG_CMTB_Player_Drone::AI_Update
PUBLIC	?Drone_Attack@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::Drone_Attack
PUBLIC	?Position_At_Player@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::Position_At_Player
PUBLIC	?ShieldOff@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::ShieldOff
PUBLIC	?ShieldOn@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::ShieldOn
PUBLIC	??0JMG_CMTB_Player_Drone@@QAE@XZ		; JMG_CMTB_Player_Drone::JMG_CMTB_Player_Drone
PUBLIC	??1JMG_CMTB_Player_Drone@@UAE@XZ		; JMG_CMTB_Player_Drone::~JMG_CMTB_Player_Drone
PUBLIC	??_GJMG_CMTB_Player_Drone@@UAEPAXI@Z		; JMG_CMTB_Player_Drone::`scalar deleting destructor'
PUBLIC	?Created@JMG_Create_Ship_On_Poke@@EAEXPAVScriptableGameObj@@@Z ; JMG_Create_Ship_On_Poke::Created
PUBLIC	?Poked@JMG_Create_Ship_On_Poke@@EAEXPAVScriptableGameObj@@0@Z ; JMG_Create_Ship_On_Poke::Poked
PUBLIC	?Timer_Expired@JMG_Create_Ship_On_Poke@@EAEXPAVScriptableGameObj@@H@Z ; JMG_Create_Ship_On_Poke::Timer_Expired
PUBLIC	??0JMG_Create_Ship_On_Poke@@QAE@XZ		; JMG_Create_Ship_On_Poke::JMG_Create_Ship_On_Poke
PUBLIC	??1JMG_Create_Ship_On_Poke@@UAE@XZ		; JMG_Create_Ship_On_Poke::~JMG_Create_Ship_On_Poke
PUBLIC	??_GJMG_Create_Ship_On_Poke@@UAEPAXI@Z		; JMG_Create_Ship_On_Poke::`scalar deleting destructor'
PUBLIC	?Entered@JMG_Advanced_Bounce_Zone@@EAEXPAVScriptableGameObj@@0@Z ; JMG_Advanced_Bounce_Zone::Entered
PUBLIC	??0JMG_Advanced_Bounce_Zone@@QAE@XZ		; JMG_Advanced_Bounce_Zone::JMG_Advanced_Bounce_Zone
PUBLIC	??1JMG_Advanced_Bounce_Zone@@UAE@XZ		; JMG_Advanced_Bounce_Zone::~JMG_Advanced_Bounce_Zone
PUBLIC	??_GJMG_Advanced_Bounce_Zone@@UAEPAXI@Z		; JMG_Advanced_Bounce_Zone::`scalar deleting destructor'
PUBLIC	?Created@JMG_Ship_Random_Hyperspace@@EAEXPAVScriptableGameObj@@@Z ; JMG_Ship_Random_Hyperspace::Created
PUBLIC	?Custom@JMG_Ship_Random_Hyperspace@@EAEXPAVScriptableGameObj@@HH0@Z ; JMG_Ship_Random_Hyperspace::Custom
PUBLIC	?Timer_Expired@JMG_Ship_Random_Hyperspace@@EAEXPAVScriptableGameObj@@H@Z ; JMG_Ship_Random_Hyperspace::Timer_Expired
PUBLIC	??0JMG_Ship_Random_Hyperspace@@QAE@XZ		; JMG_Ship_Random_Hyperspace::JMG_Ship_Random_Hyperspace
PUBLIC	??1JMG_Ship_Random_Hyperspace@@UAE@XZ		; JMG_Ship_Random_Hyperspace::~JMG_Ship_Random_Hyperspace
PUBLIC	??_GJMG_Ship_Random_Hyperspace@@UAEPAXI@Z	; JMG_Ship_Random_Hyperspace::`scalar deleting destructor'
PUBLIC	?Created@JMG_Random_Music@@EAEXPAVScriptableGameObj@@@Z ; JMG_Random_Music::Created
PUBLIC	?Timer_Expired@JMG_Random_Music@@EAEXPAVScriptableGameObj@@H@Z ; JMG_Random_Music::Timer_Expired
PUBLIC	??0JMG_Random_Music@@QAE@XZ			; JMG_Random_Music::JMG_Random_Music
PUBLIC	??1JMG_Random_Music@@UAE@XZ			; JMG_Random_Music::~JMG_Random_Music
PUBLIC	??_GJMG_Random_Music@@UAEPAXI@Z			; JMG_Random_Music::`scalar deleting destructor'
PUBLIC	?Created@JMG_Ship_Weapon@@EAEXPAVScriptableGameObj@@@Z ; JMG_Ship_Weapon::Created
PUBLIC	?Custom@JMG_Ship_Weapon@@EAEXPAVScriptableGameObj@@HH0@Z ; JMG_Ship_Weapon::Custom
PUBLIC	?Timer_Expired@JMG_Ship_Weapon@@EAEXPAVScriptableGameObj@@H@Z ; JMG_Ship_Weapon::Timer_Expired
PUBLIC	??0JMG_Ship_Weapon@@QAE@XZ			; JMG_Ship_Weapon::JMG_Ship_Weapon
PUBLIC	??1JMG_Ship_Weapon@@UAE@XZ			; JMG_Ship_Weapon::~JMG_Ship_Weapon
PUBLIC	??_GJMG_Ship_Weapon@@UAEPAXI@Z			; JMG_Ship_Weapon::`scalar deleting destructor'
PUBLIC	?Damaged@JMG_Return_Custom_When_Shot@@EAEXPAVScriptableGameObj@@0M@Z ; JMG_Return_Custom_When_Shot::Damaged
PUBLIC	??0JMG_Return_Custom_When_Shot@@QAE@XZ		; JMG_Return_Custom_When_Shot::JMG_Return_Custom_When_Shot
PUBLIC	??1JMG_Return_Custom_When_Shot@@UAE@XZ		; JMG_Return_Custom_When_Shot::~JMG_Return_Custom_When_Shot
PUBLIC	??_GJMG_Return_Custom_When_Shot@@UAEPAXI@Z	; JMG_Return_Custom_When_Shot::`scalar deleting destructor'
PUBLIC	?Created@JMG_Cronie_AI@@EAEXPAVScriptableGameObj@@@Z ; JMG_Cronie_AI::Created
PUBLIC	?Enemy_Seen@JMG_Cronie_AI@@EAEXPAVScriptableGameObj@@0@Z ; JMG_Cronie_AI::Enemy_Seen
PUBLIC	?Timer_Expired@JMG_Cronie_AI@@EAEXPAVScriptableGameObj@@H@Z ; JMG_Cronie_AI::Timer_Expired
PUBLIC	??0JMG_Cronie_AI@@QAE@XZ			; JMG_Cronie_AI::JMG_Cronie_AI
PUBLIC	??1JMG_Cronie_AI@@UAE@XZ			; JMG_Cronie_AI::~JMG_Cronie_AI
PUBLIC	??_GJMG_Cronie_AI@@UAEPAXI@Z			; JMG_Cronie_AI::`scalar deleting destructor'
PUBLIC	?Custom@JMG_Kill_Self_And_Sender_On_Custom@@EAEXPAVScriptableGameObj@@HH0@Z ; JMG_Kill_Self_And_Sender_On_Custom::Custom
PUBLIC	??0JMG_Kill_Self_And_Sender_On_Custom@@QAE@XZ	; JMG_Kill_Self_And_Sender_On_Custom::JMG_Kill_Self_And_Sender_On_Custom
PUBLIC	??1JMG_Kill_Self_And_Sender_On_Custom@@UAE@XZ	; JMG_Kill_Self_And_Sender_On_Custom::~JMG_Kill_Self_And_Sender_On_Custom
PUBLIC	??_GJMG_Kill_Self_And_Sender_On_Custom@@UAEPAXI@Z ; JMG_Kill_Self_And_Sender_On_Custom::`scalar deleting destructor'
PUBLIC	?Created@JMG_Ship_Shield_Control_Script@@EAEXPAVScriptableGameObj@@@Z ; JMG_Ship_Shield_Control_Script::Created
PUBLIC	?Custom@JMG_Ship_Shield_Control_Script@@EAEXPAVScriptableGameObj@@HH0@Z ; JMG_Ship_Shield_Control_Script::Custom
PUBLIC	?Killed@JMG_Ship_Shield_Control_Script@@EAEXPAVScriptableGameObj@@0@Z ; JMG_Ship_Shield_Control_Script::Killed
PUBLIC	??0JMG_Ship_Shield_Control_Script@@QAE@XZ	; JMG_Ship_Shield_Control_Script::JMG_Ship_Shield_Control_Script
PUBLIC	??1JMG_Ship_Shield_Control_Script@@UAE@XZ	; JMG_Ship_Shield_Control_Script::~JMG_Ship_Shield_Control_Script
PUBLIC	??_GJMG_Ship_Shield_Control_Script@@UAEPAXI@Z	; JMG_Ship_Shield_Control_Script::`scalar deleting destructor'
PUBLIC	?Created@JMG_Kill_Self_And_Sender_On_Custom_Ship@@EAEXPAVScriptableGameObj@@@Z ; JMG_Kill_Self_And_Sender_On_Custom_Ship::Created
PUBLIC	?Custom@JMG_Kill_Self_And_Sender_On_Custom_Ship@@EAEXPAVScriptableGameObj@@HH0@Z ; JMG_Kill_Self_And_Sender_On_Custom_Ship::Custom
PUBLIC	??0JMG_Kill_Self_And_Sender_On_Custom_Ship@@QAE@XZ ; JMG_Kill_Self_And_Sender_On_Custom_Ship::JMG_Kill_Self_And_Sender_On_Custom_Ship
PUBLIC	??1JMG_Kill_Self_And_Sender_On_Custom_Ship@@UAE@XZ ; JMG_Kill_Self_And_Sender_On_Custom_Ship::~JMG_Kill_Self_And_Sender_On_Custom_Ship
PUBLIC	??_GJMG_Kill_Self_And_Sender_On_Custom_Ship@@UAEPAXI@Z ; JMG_Kill_Self_And_Sender_On_Custom_Ship::`scalar deleting destructor'
PUBLIC	?Created@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@@Z ; JMG_Ship_Shield_Script::Created
PUBLIC	?Custom@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@HH0@Z ; JMG_Ship_Shield_Script::Custom
PUBLIC	?Timer_Expired@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@H@Z ; JMG_Ship_Shield_Script::Timer_Expired
PUBLIC	?Damaged@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@0M@Z ; JMG_Ship_Shield_Script::Damaged
PUBLIC	??0JMG_Ship_Shield_Script@@QAE@XZ		; JMG_Ship_Shield_Script::JMG_Ship_Shield_Script
PUBLIC	??1JMG_Ship_Shield_Script@@UAE@XZ		; JMG_Ship_Shield_Script::~JMG_Ship_Shield_Script
PUBLIC	??_GJMG_Ship_Shield_Script@@UAEPAXI@Z		; JMG_Ship_Shield_Script::`scalar deleting destructor'
PUBLIC	?Custom@JMG_Renetbusters_Object@@EAEXPAVScriptableGameObj@@HH0@Z ; JMG_Renetbusters_Object::Custom
PUBLIC	??0JMG_Renetbusters_Object@@QAE@XZ		; JMG_Renetbusters_Object::JMG_Renetbusters_Object
PUBLIC	??1JMG_Renetbusters_Object@@UAE@XZ		; JMG_Renetbusters_Object::~JMG_Renetbusters_Object
PUBLIC	??_GJMG_Renetbusters_Object@@UAEPAXI@Z		; JMG_Renetbusters_Object::`scalar deleting destructor'
PUBLIC	?Damaged@JMG_New_Ship_Weapon_Control_System@@EAEXPAVScriptableGameObj@@0M@Z ; JMG_New_Ship_Weapon_Control_System::Damaged
PUBLIC	??0JMG_New_Ship_Weapon_Control_System@@QAE@XZ	; JMG_New_Ship_Weapon_Control_System::JMG_New_Ship_Weapon_Control_System
PUBLIC	??1JMG_New_Ship_Weapon_Control_System@@UAE@XZ	; JMG_New_Ship_Weapon_Control_System::~JMG_New_Ship_Weapon_Control_System
PUBLIC	??_GJMG_New_Ship_Weapon_Control_System@@UAEPAXI@Z ; JMG_New_Ship_Weapon_Control_System::`scalar deleting destructor'
PUBLIC	?Created@JMG_Comet_Control_Script@@EAEXPAVScriptableGameObj@@@Z ; JMG_Comet_Control_Script::Created
PUBLIC	?Timer_Expired@JMG_Comet_Control_Script@@EAEXPAVScriptableGameObj@@H@Z ; JMG_Comet_Control_Script::Timer_Expired
PUBLIC	?Killed@JMG_Comet_Control_Script@@EAEXPAVScriptableGameObj@@0@Z ; JMG_Comet_Control_Script::Killed
PUBLIC	??0JMG_Comet_Control_Script@@QAE@XZ		; JMG_Comet_Control_Script::JMG_Comet_Control_Script
PUBLIC	??1JMG_Comet_Control_Script@@UAE@XZ		; JMG_Comet_Control_Script::~JMG_Comet_Control_Script
PUBLIC	??_GJMG_Comet_Control_Script@@UAEPAXI@Z		; JMG_Comet_Control_Script::`scalar deleting destructor'
PUBLIC	?Created@JMG_Attach_And_Remove@@EAEXPAVScriptableGameObj@@@Z ; JMG_Attach_And_Remove::Created
PUBLIC	?Timer_Expired@JMG_Attach_And_Remove@@EAEXPAVScriptableGameObj@@H@Z ; JMG_Attach_And_Remove::Timer_Expired
PUBLIC	??0JMG_Attach_And_Remove@@QAE@XZ		; JMG_Attach_And_Remove::JMG_Attach_And_Remove
PUBLIC	??1JMG_Attach_And_Remove@@UAE@XZ		; JMG_Attach_And_Remove::~JMG_Attach_And_Remove
PUBLIC	??_GJMG_Attach_And_Remove@@UAEPAXI@Z		; JMG_Attach_And_Remove::`scalar deleting destructor'
PUBLIC	?Created@JMG_User_Auto_Enter_Ship@@EAEXPAVScriptableGameObj@@@Z ; JMG_User_Auto_Enter_Ship::Created
PUBLIC	?Timer_Expired@JMG_User_Auto_Enter_Ship@@EAEXPAVScriptableGameObj@@H@Z ; JMG_User_Auto_Enter_Ship::Timer_Expired
PUBLIC	??0JMG_User_Auto_Enter_Ship@@QAE@XZ		; JMG_User_Auto_Enter_Ship::JMG_User_Auto_Enter_Ship
PUBLIC	??1JMG_User_Auto_Enter_Ship@@UAE@XZ		; JMG_User_Auto_Enter_Ship::~JMG_User_Auto_Enter_Ship
PUBLIC	??_GJMG_User_Auto_Enter_Ship@@UAEPAXI@Z		; JMG_User_Auto_Enter_Ship::`scalar deleting destructor'
PUBLIC	?Created@JMG_Apply_Damage_On_Timer@@EAEXPAVScriptableGameObj@@@Z ; JMG_Apply_Damage_On_Timer::Created
PUBLIC	?Timer_Expired@JMG_Apply_Damage_On_Timer@@EAEXPAVScriptableGameObj@@H@Z ; JMG_Apply_Damage_On_Timer::Timer_Expired
PUBLIC	??0JMG_Apply_Damage_On_Timer@@QAE@XZ		; JMG_Apply_Damage_On_Timer::JMG_Apply_Damage_On_Timer
PUBLIC	??1JMG_Apply_Damage_On_Timer@@UAE@XZ		; JMG_Apply_Damage_On_Timer::~JMG_Apply_Damage_On_Timer
PUBLIC	??_GJMG_Apply_Damage_On_Timer@@UAEPAXI@Z	; JMG_Apply_Damage_On_Timer::`scalar deleting destructor'
PUBLIC	?Created@JMG_CMTB_Vehicle_Face_Turret@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Vehicle_Face_Turret::Created
PUBLIC	?Timer_Expired@JMG_CMTB_Vehicle_Face_Turret@@EAEXPAVScriptableGameObj@@H@Z ; JMG_CMTB_Vehicle_Face_Turret::Timer_Expired
PUBLIC	?Destroyed@JMG_CMTB_Vehicle_Face_Turret@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Vehicle_Face_Turret::Destroyed
PUBLIC	??0JMG_CMTB_Vehicle_Face_Turret@@QAE@XZ		; JMG_CMTB_Vehicle_Face_Turret::JMG_CMTB_Vehicle_Face_Turret
PUBLIC	??1JMG_CMTB_Vehicle_Face_Turret@@UAE@XZ		; JMG_CMTB_Vehicle_Face_Turret::~JMG_CMTB_Vehicle_Face_Turret
PUBLIC	??_GJMG_CMTB_Vehicle_Face_Turret@@UAEPAXI@Z	; JMG_CMTB_Vehicle_Face_Turret::`scalar deleting destructor'
PUBLIC	?Created@JMG_CMTB_Poke_End_Map@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Poke_End_Map::Created
PUBLIC	?Poked@JMG_CMTB_Poke_End_Map@@EAEXPAVScriptableGameObj@@0@Z ; JMG_CMTB_Poke_End_Map::Poked
PUBLIC	?Timer_Expired@JMG_CMTB_Poke_End_Map@@EAEXPAVScriptableGameObj@@H@Z ; JMG_CMTB_Poke_End_Map::Timer_Expired
PUBLIC	?FlipSwitch@JMG_CMTB_Poke_End_Map@@AAEXPAVScriptableGameObj@@M@Z ; JMG_CMTB_Poke_End_Map::FlipSwitch
PUBLIC	??0JMG_CMTB_Poke_End_Map@@QAE@XZ		; JMG_CMTB_Poke_End_Map::JMG_CMTB_Poke_End_Map
PUBLIC	??1JMG_CMTB_Poke_End_Map@@UAE@XZ		; JMG_CMTB_Poke_End_Map::~JMG_CMTB_Poke_End_Map
PUBLIC	??_GJMG_CMTB_Poke_End_Map@@UAEPAXI@Z		; JMG_CMTB_Poke_End_Map::`scalar deleting destructor'
PUBLIC	?Created@JMG_CMTB_Poke_Change_Difficulty@@EAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Poke_Change_Difficulty::Created
PUBLIC	?Poked@JMG_CMTB_Poke_Change_Difficulty@@EAEXPAVScriptableGameObj@@0@Z ; JMG_CMTB_Poke_Change_Difficulty::Poked
PUBLIC	??0JMG_CMTB_Poke_Change_Difficulty@@QAE@XZ	; JMG_CMTB_Poke_Change_Difficulty::JMG_CMTB_Poke_Change_Difficulty
PUBLIC	??1JMG_CMTB_Poke_Change_Difficulty@@UAE@XZ	; JMG_CMTB_Poke_Change_Difficulty::~JMG_CMTB_Poke_Change_Difficulty
PUBLIC	??_GJMG_CMTB_Poke_Change_Difficulty@@UAEPAXI@Z	; JMG_CMTB_Poke_Change_Difficulty::`scalar deleting destructor'
PUBLIC	?JMG_CMTB_Random_Ship_Powerup@@YAPAVScriptableGameObj@@VVector3@@H@Z ; JMG_CMTB_Random_Ship_Powerup
PUBLIC	??$sprintf_s@$0CA@@@YAHAAY0CA@DPBDZZ		; sprintf_s<32>
PUBLIC	??0?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::ScriptRegistrant<JMG_Create_Ship_On_Poke>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@UAE@XZ ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::~ScriptRegistrant<JMG_Create_Ship_On_Poke>
PUBLIC	??_G?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::ScriptRegistrant<JMG_Advanced_Bounce_Zone>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@UAE@XZ ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::~ScriptRegistrant<JMG_Advanced_Bounce_Zone>
PUBLIC	??_G?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::ScriptRegistrant<JMG_Ship_Random_Hyperspace>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@UAE@XZ ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::~ScriptRegistrant<JMG_Ship_Random_Hyperspace>
PUBLIC	??_G?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_Random_Music@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Random_Music>::ScriptRegistrant<JMG_Random_Music>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_Random_Music@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_Random_Music>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_Random_Music@@@@UAE@XZ ; ScriptRegistrant<JMG_Random_Music>::~ScriptRegistrant<JMG_Random_Music>
PUBLIC	??_G?$ScriptRegistrant@VJMG_Random_Music@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_Random_Music>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_Ship_Weapon@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Ship_Weapon>::ScriptRegistrant<JMG_Ship_Weapon>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_Ship_Weapon@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_Ship_Weapon>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_Ship_Weapon@@@@UAE@XZ ; ScriptRegistrant<JMG_Ship_Weapon>::~ScriptRegistrant<JMG_Ship_Weapon>
PUBLIC	??_G?$ScriptRegistrant@VJMG_Ship_Weapon@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_Ship_Weapon>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::ScriptRegistrant<JMG_Return_Custom_When_Shot>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@UAE@XZ ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::~ScriptRegistrant<JMG_Return_Custom_When_Shot>
PUBLIC	??_G?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_Cronie_AI@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Cronie_AI>::ScriptRegistrant<JMG_Cronie_AI>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_Cronie_AI@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_Cronie_AI>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_Cronie_AI@@@@UAE@XZ	; ScriptRegistrant<JMG_Cronie_AI>::~ScriptRegistrant<JMG_Cronie_AI>
PUBLIC	??_G?$ScriptRegistrant@VJMG_Cronie_AI@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_Cronie_AI>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@UAE@XZ ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::~ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>
PUBLIC	??_G?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::ScriptRegistrant<JMG_Ship_Shield_Control_Script>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@UAE@XZ ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::~ScriptRegistrant<JMG_Ship_Shield_Control_Script>
PUBLIC	??_G?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@UAE@XZ ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::~ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>
PUBLIC	??_G?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Ship_Shield_Script>::ScriptRegistrant<JMG_Ship_Shield_Script>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_Ship_Shield_Script>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@UAE@XZ ; ScriptRegistrant<JMG_Ship_Shield_Script>::~ScriptRegistrant<JMG_Ship_Shield_Script>
PUBLIC	??_G?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_Ship_Shield_Script>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Renetbusters_Object>::ScriptRegistrant<JMG_Renetbusters_Object>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_Renetbusters_Object>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@UAE@XZ ; ScriptRegistrant<JMG_Renetbusters_Object>::~ScriptRegistrant<JMG_Renetbusters_Object>
PUBLIC	??_G?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_Renetbusters_Object>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@UAE@XZ ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::~ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>
PUBLIC	??_G?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Comet_Control_Script>::ScriptRegistrant<JMG_Comet_Control_Script>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_Comet_Control_Script>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@UAE@XZ ; ScriptRegistrant<JMG_Comet_Control_Script>::~ScriptRegistrant<JMG_Comet_Control_Script>
PUBLIC	??_G?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_Comet_Control_Script>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Attach_And_Remove>::ScriptRegistrant<JMG_Attach_And_Remove>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_Attach_And_Remove>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@UAE@XZ ; ScriptRegistrant<JMG_Attach_And_Remove>::~ScriptRegistrant<JMG_Attach_And_Remove>
PUBLIC	??_G?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_Attach_And_Remove>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::ScriptRegistrant<JMG_User_Auto_Enter_Ship>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@UAE@XZ ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::~ScriptRegistrant<JMG_User_Auto_Enter_Ship>
PUBLIC	??_G?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::ScriptRegistrant<JMG_Apply_Damage_On_Timer>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@UAE@XZ ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::~ScriptRegistrant<JMG_Apply_Damage_On_Timer>
PUBLIC	??_G?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::ScriptRegistrant<JMG_CMTB_Main_Game_Control>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::~ScriptRegistrant<JMG_CMTB_Main_Game_Control>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::ScriptRegistrant<JMG_CMTB_Ship_Control_Script>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::~ScriptRegistrant<JMG_CMTB_Ship_Control_Script>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::~ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Comet_Script>::ScriptRegistrant<JMG_CMTB_Comet_Script>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_Comet_Script>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_Comet_Script>::~ScriptRegistrant<JMG_CMTB_Comet_Script>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_Comet_Script>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::~ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::ScriptRegistrant<JMG_CMTB_Spectator_Object>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::~ScriptRegistrant<JMG_CMTB_Spectator_Object>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::ScriptRegistrant<JMG_CMTB_Arcade_Machine>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::~ScriptRegistrant<JMG_CMTB_Arcade_Machine>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::~ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::ScriptRegistrant<JMG_CMTB_Renegade_Code>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::~ScriptRegistrant<JMG_CMTB_Renegade_Code>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::ScriptRegistrant<JMG_CMTB_Motion_Mine>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::~ScriptRegistrant<JMG_CMTB_Motion_Mine>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::ScriptRegistrant<JMG_CMTB_The_Moon_Script>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::~ScriptRegistrant<JMG_CMTB_The_Moon_Script>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::~ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::ScriptRegistrant<JMG_CMTB_Powerup_Script>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::~ScriptRegistrant<JMG_CMTB_Powerup_Script>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::~ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::~ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Player_Drone>::ScriptRegistrant<JMG_CMTB_Player_Drone>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_Player_Drone>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_Player_Drone>::~ScriptRegistrant<JMG_CMTB_Player_Drone>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_Player_Drone>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::~ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::ScriptRegistrant<JMG_CMTB_Poke_End_Map>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::~ScriptRegistrant<JMG_CMTB_Poke_End_Map>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>
PUBLIC	?Create@?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::Create
PUBLIC	??1?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@UAE@XZ ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::~ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>
PUBLIC	??_G?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@UAEPAXI@Z ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::`scalar deleting destructor'
PUBLIC	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next
PUBLIC	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
PUBLIC	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
PUBLIC	??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
PUBLIC	?getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ ; Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance
PUBLIC	??0?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ ; ObjectPoolClass<GenericSLNode,256>::ObjectPoolClass<GenericSLNode,256>
PUBLIC	??1?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ ; ObjectPoolClass<GenericSLNode,256>::~ObjectPoolClass<GenericSLNode,256>
PUBLIC	?Allocate_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEPAVGenericSLNode@@XZ ; ObjectPoolClass<GenericSLNode,256>::Allocate_Object_Memory
PUBLIC	?Free_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@@Z ; ObjectPoolClass<GenericSLNode,256>::Free_Object_Memory
PUBLIC	?writeDummyPattern@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@K@Z ; ObjectPoolClass<GenericSLNode,256>::writeDummyPattern
PUBLIC	??__Finstancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@YAXXZ ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::`dynamic atexit destructor for 'instancex''
PUBLIC	??_7GameObjObserverClass@@6B@			; GameObjObserverClass::`vftable'
PUBLIC	??_7ScriptClass@@6B@				; ScriptClass::`vftable'
PUBLIC	??_7ScriptImpClass@@6B@				; ScriptImpClass::`vftable'
PUBLIC	??_7ScriptFactory@@6B@				; ScriptFactory::`vftable'
PUBLIC	??_7ThreadClass@@6B@				; ThreadClass::`vftable'
PUBLIC	??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@ ; `string'
PUBLIC	??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ ; `string'
PUBLIC	??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_7INIClass@@6B@				; INIClass::`vftable'
PUBLIC	??_7PostLoadableClass@@6B@			; PostLoadableClass::`vftable'
PUBLIC	??_7ReferencerClass@@6B@			; ReferencerClass::`vftable'
PUBLIC	??_C@_02OLOABKKD@ID?$AA@			; `string'
PUBLIC	??_7JFW_Key_Hook_Base@@6B@			; JFW_Key_Hook_Base::`vftable'
PUBLIC	??_7?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`vftable'
PUBLIC	??_7MultiKeyHookScriptImpClass@@6B@		; MultiKeyHookScriptImpClass::`vftable'
PUBLIC	??_7JFW_Object_Created_Hook_Base@@6B@		; JFW_Object_Created_Hook_Base::`vftable'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_04MLLLIHIP@null?$AA@			; `string'
PUBLIC	??_C@_03GDDNCFJF@his?$AA@			; `string'
PUBLIC	??_C@_03HDDMONLA@her?$AA@			; `string'
PUBLIC	?FinalString@?1??Rp2Encrypt@JmgUtility@@SAPADPBDHH@Z@4PADA ; `JmgUtility::Rp2Encrypt'::`2'::FinalString
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	?FinalString@?1??Rp2Encrypt2@JmgUtility@@SAPADPBDHH@Z@4PADA ; `JmgUtility::Rp2Encrypt2'::`2'::FinalString
PUBLIC	?FinalString@?1??Rp2Decrypt@JmgUtility@@SAPADPBDHH@Z@4PADA ; `JmgUtility::Rp2Decrypt'::`2'::FinalString
PUBLIC	??_C@_0M@IDABADGB@Daves?5Arrow?$AA@		; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_06NHCMNMEH@origin?$AA@			; `string'
PUBLIC	??_C@_05KABNCBHK@?$CFd?0?$CFd?$AA@		; `string'
PUBLIC	??_C@_0CH@JGBJBMDP@msg?5Perk?5?$CFd?8s?5Description?5is?5too@ ; `string'
PUBLIC	??_C@_0DN@MJNPAGNN@msg?5ADDAPERKTYPE?5ERROR?3?5PerkID?5?$CF@ ; `string'
PUBLIC	??_C@_07CDHDDEAO@yo1?4wav?$AA@			; `string'
PUBLIC	??_C@_0DA@DKJNKPNM@PlayerPerksNodeControlSystem?3?3Ge@ ; `string'
PUBLIC	??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@ ; `string'
PUBLIC	??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ ; `string'
PUBLIC	??_C@_0BP@CBPFPHPN@You?5have?5unlocked?5the?5?$CFs?5perk?$CB?$AA@ ; `string'
PUBLIC	??_C@_0L@LDMBNLK@sysmsg?4wav?$AA@		; `string'
PUBLIC	??_C@_0CN@JPAIIEAC@PlayerPerksNodeControlSystem?3?3Cl@ ; `string'
PUBLIC	??_C@_0DH@CHLHOLEI@msg?5PlayerPerksNodeControlSystem@ ; `string'
PUBLIC	??_C@_06MGHPOHKI@?$CFsSave?$AA@			; `string'
PUBLIC	??_C@_0BO@OHPIKDLE@?$CFsSave?2BetaRp2PlayerPerks?4tmp?$AA@ ; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_08HBNINGOP@?$CFs?$CFd?5?$CFd?5?$AA@	; `string'
PUBLIC	??_C@_05PCAHBOJM@?$CFs?6?$CFs?$AA@		; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0BO@LEBAEOPC@?$CFsSave?2BetaRp2PlayerPerks?4Rp2?$AA@ ; `string'
PUBLIC	??_C@_0BO@JJHJAHCL@?$CFsSave?2BetaRp2PlayerPerks?4txt?$AA@ ; `string'
PUBLIC	??_C@_07FMKHCAOI@?$CFs?$CF?42f?5?$AA@		; `string'
PUBLIC	??_C@_06DKEDAPL@?$CFs?6?$CFs?6?$AA@		; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0EI@BIBLNGIO@msg?5PlayerPerksNodeControlSystem@ ; `string'
PUBLIC	??_C@_0CPG@HLGMAKDB@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd@ ; `string'
PUBLIC	?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A	; PerkTypeSystem
PUBLIC	?PlayerPerkSystemControl@@3VPlayerPerksNodeControlSystem@@A ; PlayerPerkSystemControl
PUBLIC	??_C@_03HPADHAHE@N?1A?$AA@			; `string'
PUBLIC	??_C@_0CB@DNKDMCLF@Your?5reward?5for?5defending?5Earth?$CB@ ; `string'
PUBLIC	??_C@_0BH@KKMEIJFM@To?5The?5Moon?5and?5Beyond?$AA@ ; `string'
PUBLIC	??_C@_0DL@PCMGDODH@Buying?5Floppy?5Disks?5gives?5you?5Go@ ; `string'
PUBLIC	??_C@_05GCGLAHBE@Gamer?$AA@			; `string'
PUBLIC	??_C@_0CK@BLBNKMJE@You?5have?5unlocked?5the?5Extra?5Life@ ; `string'
PUBLIC	??_C@_0BD@PAJHKKN@Extra?5Life?5Ability?$AA@	; `string'
PUBLIC	??_C@_0CK@KFPIHAOL@You?5have?5unlocked?5the?5Hyperdrive@ ; `string'
PUBLIC	??_C@_0BD@OBMFBFNP@Hyperdrive?5Ability?$AA@	; `string'
PUBLIC	??_C@_0CN@DFDDAGCN@You?5have?5unlocked?5the?5Double?5Poi@ ; `string'
PUBLIC	??_C@_0BG@NCJOLDEP@Double?5Points?5Ability?$AA@	; `string'
PUBLIC	??_C@_0DC@PHKOBBO@You?5have?5unlocked?5the?5Rapid?5Ener@ ; `string'
PUBLIC	??_C@_0BL@LEIKNMKK@Rapid?5Energy?5Regen?5Ability?$AA@ ; `string'
PUBLIC	??_C@_0CP@PCCOOCAO@You?5have?5unlocked?5the?5Weapons?5Up@ ; `string'
PUBLIC	??_C@_0BI@HEKPELOB@Weapons?5Upgrade?5Ability?$AA@ ; `string'
PUBLIC	??_C@_0CF@MKMOODP@You?5have?5unlocked?5the?5Drone?5abil@ ; `string'
PUBLIC	??_C@_0O@CAKONFBG@Drone?5Ability?$AA@		; `string'
PUBLIC	??_C@_0DG@PHEPPJDD@You?5have?5unlocked?5the?5High?5Explo@ ; `string'
PUBLIC	??_C@_0BP@CEOGKNAL@High?5Explosive?5Warhead?5Ability?$AA@ ; `string'
PUBLIC	??_C@_0CK@BLIBFLCC@You?5have?5unlocked?5the?5SOS?5Beacon@ ; `string'
PUBLIC	??_C@_0BD@JDPOMMKN@SOS?5Beacon?5Ability?$AA@	; `string'
PUBLIC	??_C@_0CL@HNDJOALJ@You?5have?5unlocked?5the?5Drone?5Swar@ ; `string'
PUBLIC	??_C@_0BE@CBFNJGCC@Drone?5Swarm?5Ability?$AA@	; `string'
PUBLIC	??_C@_01LOCGONAA@?$AA?$AA@			; `string'
PUBLIC	??_C@_0DC@ICIICMMC@RenCometBustersScoreSystem?3?3AddP@ ; `string'
PUBLIC	??_C@_0DL@DMAHHIGM@RenCometBustersScoreSystem?3?3Find@ ; `string'
PUBLIC	??_C@_0DK@NJPEEOFG@RenCometBustersScoreSystem?3?3Get_@ ; `string'
PUBLIC	??_C@_0CE@HFCGEOCE@RenCometBustersScoreSystem?3?3Clea@ ; `string'
PUBLIC	??_C@_07MOMFEGGF@?$CFsSave?2?$AA@		; `string'
PUBLIC	??_C@_0BM@GKBJMCAN@?$CFsBetaCMBTPlayerRecords?4tmp?$AA@ ; `string'
PUBLIC	??_C@_0CA@CHLIAOHE@?$CFsBetaCMBTPlayerRecordsEasy?4txt?$AA@ ; `string'
PUBLIC	??_C@_0BM@BEJIGGJC@?$CFsBetaCMBTPlayerRecords?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CA@MPMIPDNC@?$CFsBetaCMBTPlayerRecordsHard?4txt?$AA@ ; `string'
PUBLIC	??_C@_0CE@ODLIIIGC@?$CFsBetaCMBTPlayerRecordsDoomsday?4@ ; `string'
PUBLIC	??_C@_0IG@KIAFBIAN@msg?5RenCometBustersScoreSystem?5E@ ; `string'
PUBLIC	??_C@_0BAK@GMEIJNKP@?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5@ ; `string'
PUBLIC	??_C@_0CA@KNBEHKN@?$CFsBetaCMBTPlayerRecordsEasy?4Rp2?$AA@ ; `string'
PUBLIC	??_C@_0BM@DJPBCPEL@?$CFsBetaCMBTPlayerRecords?4Rp2?$AA@ ; `string'
PUBLIC	??_C@_0CA@OCKBLKAL@?$CFsBetaCMBTPlayerRecordsHard?4Rp2?$AA@ ; `string'
PUBLIC	??_C@_0CE@MONBMBLL@?$CFsBetaCMBTPlayerRecordsDoomsday?4@ ; `string'
PUBLIC	??_C@_0EI@GGEPLGPC@msg?5MutantAssaultHighScoreSystem@ ; `string'
PUBLIC	??_C@_0BAI@DHKPCABK@?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5@ ; `string'
PUBLIC	?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
PUBLIC	??_C@_0ED@DPHHABPP@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@ ; `string'
PUBLIC	??_C@_0EF@JBCNBGOG@Server?5Record?3?5?$CFs?5has?5lost?5?$CFlu?5s@ ; `string'
PUBLIC	??_C@_0DC@OBCPKPMJ@Server?5Record?3?5?$CFs?5has?5destroyed?5@ ; `string'
PUBLIC	??_C@_0DD@CHCKPFGH@Server?5Record?3?5?$CFs?5has?5destroyed?5@ ; `string'
PUBLIC	??_C@_0DC@OPABANCK@Server?5Record?3?5?$CFs?5has?5destroyed?5@ ; `string'
PUBLIC	??_C@_0DB@HHMIAPLD@Server?5Record?3?5?$CFs?5has?5destroyed?5@ ; `string'
PUBLIC	??_C@_0DE@GAPAHGBJ@Server?5Record?3?5?$CFs?5has?5destroyed?5@ ; `string'
PUBLIC	??_C@_0CK@HJEFGBEE@Server?5Record?3?5?$CFs?5has?5destroyed?5@ ; `string'
PUBLIC	??_C@_0CL@DFLDBPJK@Server?5Record?3?5?$CFs?5has?5destroyed?5@ ; `string'
PUBLIC	??_C@_0DA@HIGGHANH@Server?5Record?3?5?$CFs?5has?5killed?5?$CFlu@ ; `string'
PUBLIC	??_C@_0FK@IMFOLIBD@Server?5Record?3?5?$CFs?5has?5scored?5?$CFlu@ ; `string'
PUBLIC	??_C@_0FD@IEKCIDFK@Server?5Record?3?5?$CFs?5has?5scored?5a?5t@ ; `string'
PUBLIC	??_C@_0EG@KPAFONBF@Server?5Record?3?5?$CFs?5has?5made?5it?5to@ ; `string'
PUBLIC	??_C@_0DC@EEBOLIKG@Server?5Record?3?5?$CFs?5has?5destroyed?5@ ; `string'
PUBLIC	??_C@_0EG@EFEOBEBH@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ ; `string'
PUBLIC	??_C@_0DK@OBKLLKEM@Server?5Record?3?5?$CFs?5has?5used?5?$CFlu?5H@ ; `string'
PUBLIC	??_C@_0DD@LENFCILH@Server?5Record?3?5?$CFs?5has?5fired?5a?5to@ ; `string'
PUBLIC	??_C@_0DN@LGKHNOIO@Server?5Record?3?5?$CFs?5has?5made?5it?5to@ ; `string'
PUBLIC	??_C@_0DI@KKJLFLDK@Server?5Record?3?5?$CFs?5has?5given?5?$CFlu?5@ ; `string'
PUBLIC	??_C@_0DN@DNEBFNGH@Server?5Record?3?5?$CFs?5has?5received?5?$CF@ ; `string'
PUBLIC	??_C@_0DB@FIFDMKKA@Server?5Record?3?5?$CFs?5has?5destroyed?5@ ; `string'
PUBLIC	??_C@_0DA@DCAKIMBD@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ ; `string'
PUBLIC	??_C@_0CK@CIGOPGGB@Server?5Record?3?5?$CFs?5has?5rammed?5?$CFlu@ ; `string'
PUBLIC	??_C@_0DI@LFOHENLA@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ ; `string'
PUBLIC	??_C@_0DI@LODGFIOM@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ ; `string'
PUBLIC	??_C@_0DI@IIOINMLI@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ ; `string'
PUBLIC	??_C@_0DA@NGAPCIJD@Server?5Record?3?5?$CFs?5has?5deployed?5?$CF@ ; `string'
PUBLIC	??_C@_0DE@DHJHFPLK@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ ; `string'
PUBLIC	??_C@_0DA@MDDOEMBF@Server?5Record?3?5?$CFs?5has?5?$CFlu?5points@ ; `string'
PUBLIC	??_C@_0CL@BEEAOLM@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ ; `string'
PUBLIC	??_C@_0CL@HJPPIPBM@Server?5Record?3?5?$CFs?5has?5launched?5?$CF@ ; `string'
PUBLIC	??_C@_0DJ@IDKKONAG@Server?5Record?3?5?$CFs?5has?5destroyed?5@ ; `string'
PUBLIC	??_C@_0CM@MMOEEEGC@Server?5Record?3?5?$CFs?5has?5destroyed?5@ ; `string'
PUBLIC	??_C@_0DF@NCDHEIBB@Server?5Record?3?5?$CFs?5has?5scored?5?$CFlu@ ; `string'
PUBLIC	??_C@_0DJ@HNGFLFDI@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ ; `string'
PUBLIC	??_C@_0DL@CECKDPDK@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ ; `string'
PUBLIC	??_C@_0EF@BPINKGDI@Server?5Record?3?5?$CFs?5has?5scored?5?$CFlu@ ; `string'
PUBLIC	??_C@_0DJ@MOLBNNLO@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ ; `string'
PUBLIC	??_C@_0DD@OEPBIMNK@Server?5Record?3?5?$CFs?5has?5spent?5?$CF?40l@ ; `string'
PUBLIC	??_C@_0CJ@ECHLBDIE@Server?5Record?3?5?$CFs?5has?5cloaked?5?$CFl@ ; `string'
PUBLIC	??_C@_0DL@JPAFHEPO@Server?5Record?3?5?$CFs?5has?5spent?5?$CF?40l@ ; `string'
PUBLIC	??_C@_0DF@DMFGBHAH@Server?5Record?3?5?$CFs?5has?5raised?5the@ ; `string'
PUBLIC	??_C@_0DC@KHHPHFGD@Server?5Record?3?5?$CFs?5has?5ran?5out?5of@ ; `string'
PUBLIC	??_C@_0EL@PDJFJLGA@Server?5Record?3?5?$CFs?5has?5scored?5?$CFlu@ ; `string'
PUBLIC	??_C@_0EG@HIMLHNHP@Server?5Record?3?5?$CFs?5has?5destroyed?5@ ; `string'
PUBLIC	??_C@_0DC@BHEIBAME@Server?5Record?3?5?$CFs?5jumped?5out?5of?5@ ; `string'
PUBLIC	??_C@_0EE@EMELICEB@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ ; `string'
PUBLIC	??_C@_0EA@DEKFDIMD@Server?5Record?3?5?$CFs?5has?5used?5?$CFlu?5D@ ; `string'
PUBLIC	??_C@_0DM@GLCLBJGE@Server?5Record?3?5?$CFs?5has?5used?5the?5d@ ; `string'
PUBLIC	??_C@_0DK@DMKGKKDP@Server?5Record?3?5?$CFs?5has?5used?5the?5d@ ; `string'
PUBLIC	??_C@_0DM@HFEPMBHP@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ ; `string'
PUBLIC	??_C@_0FB@HJAMHEGP@Server?5Record?3?5?$CFs?5has?5gained?5a?5t@ ; `string'
PUBLIC	??_C@_0FC@LKOPDGAN@Server?5Record?3?5?$CFs?5has?5acquired?5a@ ; `string'
PUBLIC	??_C@_0EK@EJAOIFKK@Server?5Record?3?5?$CFs?5has?5made?5it?5to@ ; `string'
PUBLIC	??_C@_0FM@JFAIJNJM@Server?5Record?3?5?$CFs?5has?5made?5it?5to@ ; `string'
PUBLIC	??_C@_0DE@BNPLGNGL@Server?5Record?3?5?$CFs?5has?5acquired?5a@ ; `string'
PUBLIC	??_C@_0EA@HMKFKMDK@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@ ; `string'
PUBLIC	??_C@_0ED@BEMCOBMI@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@ ; `string'
PUBLIC	??_C@_0EB@KDCCDDHB@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@ ; `string'
PUBLIC	??_C@_0EF@IKOELIKK@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@ ; `string'
PUBLIC	??_C@_0FG@JGAHDHJ@Server?5Record?3?5?$CFs?5has?5played?5Ren@ ; `string'
PUBLIC	?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
PUBLIC	?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A ; MiniGamePlayerControlSystem
PUBLIC	??_C@_0DI@LLNCPLBC@RenCometBustersGameObjects?3?3?$HORen@ ; `string'
PUBLIC	??_C@_0CI@LOKEAPHJ@RenCometBustersGameObjects?3?3oper@ ; `string'
PUBLIC	??_C@_0BF@CAPOKMCA@msg?5already?5in?5list?$CB?$AA@ ; `string'
PUBLIC	??_C@_0M@IPKOBAPD@BlamoKiller?$AA@		; `string'
PUBLIC	??_C@_04CGFJFPFD@none?$AA@			; `string'
PUBLIC	??_C@_0BA@FNBPLBFG@Explosion_Drone?$AA@		; `string'
PUBLIC	??_C@_0CM@IGIBBGO@RenCometBustersGameObjects?3?3Clea@ ; `string'
PUBLIC	??_C@_05HBJPNAAK@Blamo?$AA@			; `string'
PUBLIC	??_C@_04OHJIHAFH@None?$AA@			; `string'
PUBLIC	??_7JMG_CMTB_Main_Game_Control@@6B@		; JMG_CMTB_Main_Game_Control::`vftable'
PUBLIC	??_7JMG_CMTB_UFO_Random_Fire_Control@@6B@	; JMG_CMTB_UFO_Random_Fire_Control::`vftable'
PUBLIC	??_7JMG_CMTB_Ship_Control_Script@@6B@		; JMG_CMTB_Ship_Control_Script::`vftable'
PUBLIC	??_7JMG_CMTB_Comet_Script@@6B@			; JMG_CMTB_Comet_Script::`vftable'
PUBLIC	??_7JMG_CMTB_Zone_Realign_Enter@@6B@		; JMG_CMTB_Zone_Realign_Enter::`vftable'
PUBLIC	??_7JMG_CMTB_Spectator_Object@@6B@		; JMG_CMTB_Spectator_Object::`vftable'
PUBLIC	??_7JMG_CMTB_Arcade_Machine@@6B@		; JMG_CMTB_Arcade_Machine::`vftable'
PUBLIC	??_7JMG_CMTB_Fake_Player_Attach_Script@@6B@	; JMG_CMTB_Fake_Player_Attach_Script::`vftable'
PUBLIC	??_7JMG_CMTB_Renegade_Code@@6B@			; JMG_CMTB_Renegade_Code::`vftable'
PUBLIC	??_7JMG_CMTB_Motion_Mine@@6B@			; JMG_CMTB_Motion_Mine::`vftable'
PUBLIC	??_7JMG_CMTB_The_Moon_Script@@6B@		; JMG_CMTB_The_Moon_Script::`vftable'
PUBLIC	??_7JMG_CMTB_Ship_Super_Weapon@@6B@		; JMG_CMTB_Ship_Super_Weapon::`vftable'
PUBLIC	??_7JMG_CMTB_Powerup_Script@@6B@		; JMG_CMTB_Powerup_Script::`vftable'
PUBLIC	??_7JMG_CMTB_Cargo_Ship_Script@@6B@		; JMG_CMTB_Cargo_Ship_Script::`vftable'
PUBLIC	??_7JMG_CMTB_Cargo_Ship_Turret@@6B@		; JMG_CMTB_Cargo_Ship_Turret::`vftable'
PUBLIC	??_7JMG_CMTB_Player_Drone@@6B@			; JMG_CMTB_Player_Drone::`vftable'
PUBLIC	??_7JMG_Create_Ship_On_Poke@@6B@		; JMG_Create_Ship_On_Poke::`vftable'
PUBLIC	??_7JMG_Advanced_Bounce_Zone@@6B@		; JMG_Advanced_Bounce_Zone::`vftable'
PUBLIC	??_7JMG_Ship_Random_Hyperspace@@6B@		; JMG_Ship_Random_Hyperspace::`vftable'
PUBLIC	??_7JMG_Random_Music@@6B@			; JMG_Random_Music::`vftable'
PUBLIC	??_7JMG_Ship_Weapon@@6B@			; JMG_Ship_Weapon::`vftable'
PUBLIC	??_7JMG_Return_Custom_When_Shot@@6B@		; JMG_Return_Custom_When_Shot::`vftable'
PUBLIC	??_7JMG_Cronie_AI@@6B@				; JMG_Cronie_AI::`vftable'
PUBLIC	??_7JMG_Kill_Self_And_Sender_On_Custom@@6B@	; JMG_Kill_Self_And_Sender_On_Custom::`vftable'
PUBLIC	??_7JMG_Ship_Shield_Control_Script@@6B@		; JMG_Ship_Shield_Control_Script::`vftable'
PUBLIC	??_7JMG_Kill_Self_And_Sender_On_Custom_Ship@@6B@ ; JMG_Kill_Self_And_Sender_On_Custom_Ship::`vftable'
PUBLIC	??_7JMG_Ship_Shield_Script@@6B@			; JMG_Ship_Shield_Script::`vftable'
PUBLIC	??_7JMG_Renetbusters_Object@@6B@		; JMG_Renetbusters_Object::`vftable'
PUBLIC	??_7JMG_New_Ship_Weapon_Control_System@@6B@	; JMG_New_Ship_Weapon_Control_System::`vftable'
PUBLIC	??_7JMG_Comet_Control_Script@@6B@		; JMG_Comet_Control_Script::`vftable'
PUBLIC	??_7JMG_Attach_And_Remove@@6B@			; JMG_Attach_And_Remove::`vftable'
PUBLIC	??_7JMG_User_Auto_Enter_Ship@@6B@		; JMG_User_Auto_Enter_Ship::`vftable'
PUBLIC	??_7JMG_Apply_Damage_On_Timer@@6B@		; JMG_Apply_Damage_On_Timer::`vftable'
PUBLIC	??_7JMG_CMTB_Vehicle_Face_Turret@@6B@		; JMG_CMTB_Vehicle_Face_Turret::`vftable'
PUBLIC	??_7JMG_CMTB_Poke_End_Map@@6B@			; JMG_CMTB_Poke_End_Map::`vftable'
PUBLIC	??_7JMG_CMTB_Poke_Change_Difficulty@@6B@	; JMG_CMTB_Poke_Change_Difficulty::`vftable'
PUBLIC	??_C@_0L@HPJBEPCP@CreateSpot?$AA@		; `string'
PUBLIC	??_C@_0BD@PHBEHGCL@SpawnSpotExplosion?$AA@	; `string'
PUBLIC	??_C@_05HGDDNFDM@blamo?$AA@			; `string'
PUBLIC	??_C@_04HIBGFPH@NULL?$AA@			; `string'
PUBLIC	??_C@_0L@KDKMBANG@ShipPreset?$AA@		; `string'
PUBLIC	??_C@_0BA@HCADMAFB@InvisibleObject?$AA@		; `string'
PUBLIC	??_C@_07EGLEEHDL@ZAmount?$AA@			; `string'
PUBLIC	??_C@_07MIDLEANI@YAmount?$AA@			; `string'
PUBLIC	??_C@_07EJBEAEG@XAmount?$AA@			; `string'
PUBLIC	??_C@_0BC@PNBOLPNL@HyperspacingModel?$AA@	; `string'
PUBLIC	??_C@_0BA@FKGDDIBN@HyperSpaceSound?$AA@		; `string'
PUBLIC	??_C@_05IPHJJOLO@Song1?$AA@			; `string'
PUBLIC	??_C@_09FKOCOGEO@Song1Time?$AA@			; `string'
PUBLIC	??_C@_05KEFEMNHN@Song2?$AA@			; `string'
PUBLIC	??_C@_09NMHGJEOA@Song2Time?$AA@			; `string'
PUBLIC	??_C@_05LNEPPMDM@Song3?$AA@			; `string'
PUBLIC	??_C@_09BHCKEHEF@Song3Time?$AA@			; `string'
PUBLIC	??_C@_07BEIHKDLJ@Message?$AA@			; `string'
PUBLIC	??_C@_0M@FKJDDLOD@Ship_Shield?$AA@		; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	??_C@_0BH@OIEIGPLK@JMG_Ship_Shield_Script?$AA@	; `string'
PUBLIC	??_C@_0L@BJLEKJKD@MESSAGE?5on?$AA@		; `string'
PUBLIC	??_C@_0M@HCHCNLGC@MESSAGE?5off?$AA@		; `string'
PUBLIC	??_C@_03OHGKCNFD@Nod?$AA@			; `string'
PUBLIC	??_C@_0BB@CPMCEIFJ@MESSAGE?5DEAD?0?5?$CFs?$AA@	; `string'
PUBLIC	??_C@_08FLIKPBEA@cometbsb?$AA@			; `string'
PUBLIC	??_C@_0M@GNPCOBLK@shipshieldb?$AA@		; `string'
PUBLIC	??_C@_08CGPNAFAF@cometbsg?$AA@			; `string'
PUBLIC	??_C@_0M@BAIFBFPP@shipshieldg?$AA@		; `string'
PUBLIC	??_C@_08BBEIODBB@cometbsr?$AA@			; `string'
PUBLIC	??_C@_0M@CHDAPDOL@shipshieldr?$AA@		; `string'
PUBLIC	??_C@_08PCLMDKNK@cometbsy?$AA@			; `string'
PUBLIC	??_C@_0M@MEMECKCA@shipshieldy?$AA@		; `string'
PUBLIC	??_C@_0BM@IDEGAHLP@MESSAGE?5Shield?5Should?5Exist?$AA@ ; `string'
PUBLIC	??_C@_0M@FKEHAHKO@shipshieldw?$AA@		; `string'
PUBLIC	??_C@_04IAGNFIBA@size?$AA@			; `string'
PUBLIC	??_C@_0M@GKMNIJOO@Power_Drain?$AA@		; `string'
PUBLIC	??_C@_0BP@MDGHNFN@Weapon_Ship_Plasma_Shot_Normal?$AA@ ; `string'
PUBLIC	??_C@_0L@FDJHJHMA@Comet_Size?$AA@		; `string'
PUBLIC	??_C@_0BC@LLLHCPF@?$CFf?0911?00?410?0453?02?$AA@ ; `string'
PUBLIC	??_C@_0CH@MNFEONNH@JFW_Send_Custom_Distance_Objects@ ; `string'
PUBLIC	??_C@_0N@ELBIIDGM@Spawn_Comets?$AA@		; `string'
PUBLIC	??_C@_0N@BCBILOOP@Comet_Holder?$AA@		; `string'
PUBLIC	??_C@_0O@GNKCNLNJ@Smaller_Comet?$AA@		; `string'
PUBLIC	??_C@_0BG@DEIDFEHH@JMG_Attach_And_Remove?$AA@	; `string'
PUBLIC	??_C@_03LDICLEIE@SC1?$AA@			; `string'
PUBLIC	??_C@_03JIKPOHEH@SC2?$AA@			; `string'
PUBLIC	??_C@_0M@HHIGELPC@Player_Ship?$AA@		; `string'
PUBLIC	??_C@_0CJ@JKMLHKIH@JMG_Remove_Object_When_Creator_D@ ; `string'
PUBLIC	?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
PUBLIC	??_C@_0BE@IAPNGHEF@CMTB_Powerup_Object?$AA@	; `string'
PUBLIC	??_C@_0BI@KMNMLLME@JMG_CMTB_Powerup_Script?$AA@	; `string'
PUBLIC	??_C@_0O@ILEENPHG@RenRoidsBones?$AA@		; `string'
PUBLIC	??_C@_0M@GOMAJMEN@SpecSpot0?$CFd?$AA@		; `string'
PUBLIC	??_C@_0BC@EDKELIGB@Spectator_Vehicle?$AA@	; `string'
PUBLIC	??_C@_0BN@GNJLFKOF@JMG_CMTB_Vehicle_Face_Turret?$AA@ ; `string'
PUBLIC	??_C@_0BK@IMCJNJOP@JMG_CMTB_Spectator_Object?$AA@ ; `string'
PUBLIC	??_C@_09CFKJBEPJ@CreateS?$CFd?$AA@		; `string'
PUBLIC	??_C@_0N@FHNGDPEO@Player_Ships?$AA@		; `string'
PUBLIC	??_C@_08LMPADKBD@P?$CFd_SHIP?$AA@		; `string'
PUBLIC	??_C@_0BC@HMKEDKPH@P?$CFd_SHIP?4P?$CFd_SHIP?$AA@ ; `string'
PUBLIC	??_C@_09JAKCOKP@SpawnS0?$CFd?$AA@		; `string'
PUBLIC	??_C@_0DL@CAEFBAEF@?$CFs?5is?5ready?5to?5start?5the?5game?$DL?5h@ ; `string'
PUBLIC	??_C@_0M@JGDOJGG@Thunder?4mp3?$AA@		; `string'
PUBLIC	??_C@_0M@LILAHFNO@Android?4mp3?$AA@		; `string'
PUBLIC	??_C@_0L@PEMACFHI@Escape?4mp3?$AA@		; `string'
PUBLIC	??_C@_0BE@BFJLDGDA@CnC_Nod_MinigunnerN?$AA@	; `string'
PUBLIC	??_C@_0O@MGLGPNNK@invisibleChar?$AA@		; `string'
PUBLIC	??_C@_0CD@BNLFCCLE@JMG_CMTB_Fake_Player_Attach_Scri@ ; `string'
PUBLIC	??_C@_0L@PFAJEBB@CMTB_Drone?$AA@		; `string'
PUBLIC	??_C@_01HIHLOKLC@1?$AA@				; `string'
PUBLIC	??_C@_0BF@DPFEEIBF@JMG_CMTB_Motion_Mine?$AA@	; `string'
PUBLIC	??_C@_06DNAANCNK@Comet2?$AA@			; `string'
PUBLIC	??_C@_08JMBNGAFO@CMTB_UFO?$AA@			; `string'
PUBLIC	??_C@_0BB@HGLHKBGH@2?0?$CF?43f?5?$CF?43f?5?$CF?43f?$AA@ ; `string'
PUBLIC	??_C@_0BG@BOCOGEON@JMG_CMTB_Comet_Script?$AA@	; `string'
PUBLIC	??_C@_0CB@NKFKHNHH@JMG_CMTB_UFO_Random_Fire_Control@ ; `string'
PUBLIC	??_C@_0N@OEINIMLP@TheMoon?$CBANIM?$AA@		; `string'
PUBLIC	??_C@_0BK@HFCLPCGF@TheMoon?$CBANIM?4TheMoon?$CBANIM?$AA@ ; `string'
PUBLIC	??_C@_08OJPPMONF@TheMoon?$CB?$AA@		; `string'
PUBLIC	??_C@_04IDMPJGHP@moon?$AA@			; `string'
PUBLIC	??_C@_0BA@JDFEGNBJ@CMTB_Cargo_Ship?$AA@		; `string'
PUBLIC	??_C@_02PGHGPEOM@?91?$AA@			; `string'
PUBLIC	??_C@_0BL@KIMJPMME@JMG_CMTB_Cargo_Ship_Script?$AA@ ; `string'
PUBLIC	??_C@_0BP@OPFJBCLD@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CKLevel?5?$CFd?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$AA@ ; `string'
PUBLIC	??_C@_08KNDNNBLP@Level?5?$CFd?$AA@		; `string'
PUBLIC	??_C@_0BJ@HMLJENEK@SFX?4Bonus_Mission_Update?$AA@ ; `string'
PUBLIC	??_C@_0BL@DNDPJPGA@SFX?4Primary_Mission_Update?$AA@ ; `string'
PUBLIC	??_C@_0BN@DJPMNHPB@SFX?4Primary_Mission_Complete?$AA@ ; `string'
PUBLIC	??_C@_0GP@OAILEGEN@You?5scored?5?$CF?42f?5points?5and?5throu@ ; `string'
PUBLIC	??_C@_0FD@FEOOFKHE@You?5scored?5?$CF?42f?5points?5and?5throu@ ; `string'
PUBLIC	??_C@_0FN@NOIOEAIC@You?5scored?5?$CF?42f?5points?5and?5throu@ ; `string'
PUBLIC	??_C@_0EB@MNBPFAEN@You?5scored?5?$CF?42f?5points?5and?5throu@ ; `string'
PUBLIC	??_C@_0GA@BBOALNAI@You?5scored?5?$CF?42f?5points?5and?5made?5@ ; `string'
PUBLIC	??_C@_0EC@MNMLHPG@You?5scored?5?$CF?42f?5points?5and?5made?5@ ; `string'
PUBLIC	??_C@_0EO@IGADHMMP@You?5scored?5?$CF?42f?5points?5and?5made?5@ ; `string'
PUBLIC	??_C@_0CP@DHLGHGHD@You?5scored?5?$CF?42f?5points?5and?5made?5@ ; `string'
PUBLIC	??_C@_0L@PADKNPLL@Game?5Over?$CB?$AA@		; `string'
PUBLIC	??_C@_01GBGANLPD@0?$AA@				; `string'
PUBLIC	??_C@_06BIJBOFNL@Origin?$AA@			; `string'
PUBLIC	??_C@_0CI@IMOGNOKK@Your?5double?5points?5powerup?5has?5e@ ; `string'
PUBLIC	??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@ ; `string'
PUBLIC	??_C@_0BP@IKJEMBEN@You?5have?5aquired?5another?5life?$CB?$AA@ ; `string'
PUBLIC	??_C@_0CB@NJFDNEPI@SFX?4Comet_Busters_Pickup_Powerup@ ; `string'
PUBLIC	??_C@_0BN@EKAIJPOG@SFX?4Comet_Busters_Ship_Spawn?$AA@ ; `string'
PUBLIC	??_C@_07ENBNDFIO@UFOBoss?$AA@			; `string'
PUBLIC	??_C@_07HPFMBEAN@UFOJump?$AA@			; `string'
PUBLIC	??_C@_0BA@KHOIHPDE@UFOJump?4UFOJump?$AA@	; `string'
PUBLIC	??_C@_0CC@LHEOCOHM@SFX?4Comet_Busters_Ship_Hyperspac@ ; `string'
PUBLIC	??_C@_03CBJOHNML@UFO?$AA@			; `string'
PUBLIC	??_C@_07NPBKOJID@UFO?4UFO?$AA@			; `string'
PUBLIC	??_C@_03EPODMGGC@4?00?$AA@			; `string'
PUBLIC	??_C@_0CK@NFAFAOHK@JMG_RP2_Object_Send_Text_Message@ ; `string'
PUBLIC	??_C@_0CF@PHEHLLGF@Selected?5Special?5Ability?3?5Extra?5@ ; `string'
PUBLIC	??_C@_0CM@OOENGFNH@Selected?5Special?5Ability?3?5Hyperj@ ; `string'
PUBLIC	??_C@_0CI@HFBFCNOB@Selected?5Special?5Ability?3?5Double@ ; `string'
PUBLIC	??_C@_0CH@ILHHOMJH@Selected?5Special?5Ability?3?5Energy@ ; `string'
PUBLIC	??_C@_0CK@BEGAEGLB@Selected?5Special?5Ability?3?5Weapon@ ; `string'
PUBLIC	??_C@_0CA@FCHCAGLH@Selected?5Special?5Ability?3?5Drone?$AA@ ; `string'
PUBLIC	??_C@_0DB@HFBEIFFK@Selected?5Special?5Ability?3?5High?5E@ ; `string'
PUBLIC	??_C@_0CF@NBLBGGDG@Selected?5Special?5Ability?3?5SOS?5Be@ ; `string'
PUBLIC	??_C@_0CG@CMGIACAM@Selected?5Special?5Ability?3?5Drone?5@ ; `string'
PUBLIC	??_C@_0BP@CNMJDAHL@Selected?5Special?5Ability?3?5None?$AA@ ; `string'
PUBLIC	??_C@_0BJ@FKKHHCEG@Hyper?5Drive?5Charge?5?$CF?40f?4?$AA@ ; `string'
PUBLIC	??_C@_0BP@JGLNCOEL@Rapid?5Energy?5Regen?5?$CFd?5seconds?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@GIPGGHOA@Extra?5Shot?5?$CFd?5seconds?4?$AA@ ; `string'
PUBLIC	??_C@_0BP@GACIJABL@Double?5Points?5time?5?$CFd?5seconds?4?$AA@ ; `string'
PUBLIC	??_C@_0BD@JOLJGOHJ@Ship?5Control?5Keys?3?$AA@	; `string'
PUBLIC	??_C@_0BG@BKLKMPPO@R?5?9?5Toggle?5Rapid?5Fire?$AA@ ; `string'
PUBLIC	??_C@_0L@MGMBLIHC@Q?5?9?5Shield?$AA@		; `string'
PUBLIC	??_C@_09OECLFLBA@Z?5?9?5Cloak?$AA@		; `string'
PUBLIC	??_C@_0CD@FECDCLBH@G?5?9?5Highly?5Explosive?5Warhead?5?$CIx?$CF@ ; `string'
PUBLIC	??_C@_0BF@FPAOCMMB@T?5?9?5SOS?5Beacon?5?$CIx?$CFd?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BH@HDOEINJE@F?5?9?5Launch?5Drone?5?$CIx?$CFd?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BO@NAKCKOAM@H?5?9?5Call?5in?5Drone?5Swarm?5?$CIx?$CFd?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BH@NDBKPNIN@Delete?5?9?5Forfeit?5Lives?$AA@ ; `string'
PUBLIC	??_C@_0CA@OIAFCEKI@Numpad?$FL0?99?$FN?5?9?5Grant?5Player?5Life?$AA@ ; `string'
PUBLIC	??_C@_0DE@IDGONFFN@Press?5ForfeitLives?5key?5again?5to?5@ ; `string'
PUBLIC	??_C@_0BH@KKFKOCIF@?$CFs?5forfeited?5?$CFs?5lives?$CB?$AA@ ; `string'
PUBLIC	??_C@_0DA@KGEIFEHM@Cannot?5active?5shield?5while?5disru@ ; `string'
PUBLIC	??_C@_0CE@PCGHDDHP@Cannot?5active?5shields?5at?5this?5ti@ ; `string'
PUBLIC	??_C@_0CI@HLGDINOP@Insufficient?5power?5to?5activate?5s@ ; `string'
PUBLIC	??_C@_0CP@EDAJIGJF@Cannot?5active?5cloak?5while?5disrup@ ; `string'
PUBLIC	??_C@_0CC@DCLCEEDD@Cannot?5active?5cloak?5at?5this?5time@ ; `string'
PUBLIC	??_C@_0CG@BGOEAGGL@Insufficient?5power?5to?5activate?5c@ ; `string'
PUBLIC	??_C@_0DP@LIMOOHLM@Cannot?5deploy?5a?5High?5Yield?5Warhe@ ; `string'
PUBLIC	??_C@_0DO@KDGMNIJG@Cannot?5deploy?5a?5High?5Yield?5Warhe@ ; `string'
PUBLIC	??_C@_0CM@GIPOGOAC@Cannot?5use?5High?5Yield?5Warhead?5at@ ; `string'
PUBLIC	??_C@_0DD@GCNAPHJL@You?5do?5not?5have?5any?5high?5yield?5w@ ; `string'
PUBLIC	??_C@_0DM@DEONIBDK@?1?1?1?1?1?1Warning?3?5A?5HIGH?5YIELD?5WARH@ ; `string'
PUBLIC	??_C@_0CE@DHKIKOO@SFX?4Comet_Busters_UI_HYW_Fire_So@ ; `string'
PUBLIC	??_C@_0BL@ONMMODHJ@JMG_CMTB_Ship_Super_Weapon?$AA@ ; `string'
PUBLIC	??_C@_0BN@CIJLFMGA@Energy?5Cell?5Stocks?5are?5full?$CB?$AA@ ; `string'
PUBLIC	??_C@_0BK@COFCHGJB@?$CFd?5Energy?5Cells?5acquired?4?$AA@ ; `string'
PUBLIC	??_C@_0CI@HCHEBKHH@SFX?4Comet_Busters_Pickup_Powerup@ ; `string'
PUBLIC	??_C@_0CN@OMBIKFLO@You?5can?5only?5carry?5one?5SOS?5Beaco@ ; `string'
PUBLIC	??_C@_0BP@MHAMHGLL@You?5have?5aquired?5a?5SOS?5Beacon?$CB?$AA@ ; `string'
PUBLIC	??_C@_0BP@NKIJMCPG@Sorry?0?5your?5cargo?5bay?5is?5full?$CB?$AA@ ; `string'
PUBLIC	??_C@_0CH@MIDLDNOD@You?5have?5aquired?5a?5high?5yield?5wa@ ; `string'
PUBLIC	??_C@_0BE@HAEHJBND@?$CFd?5points?5acquired?4?$AA@ ; `string'
PUBLIC	??_C@_0CI@LEJBKDGI@SFX?4Comet_Busters_Pickup_Powerup@ ; `string'
PUBLIC	??_C@_0CI@BDHEFFLG@You?5can?5only?5carry?5one?5Drone?5at?5@ ; `string'
PUBLIC	??_C@_0BK@HNFMDNNO@You?5have?5aquired?5a?5Drone?$CB?$AA@ ; `string'
PUBLIC	??_C@_0DK@BMNBPLJM@You?5have?5aquired?5a?5rapid?5energy?5@ ; `string'
PUBLIC	??_C@_0DH@HLMJACGM@You?5have?5aquired?5a?5double?5points@ ; `string'
PUBLIC	??_C@_0DB@EKOGLIED@Sorry?0?5your?5hyperdrive?5is?5alread@ ; `string'
PUBLIC	??_C@_01LFCBOECM@?4?$AA@			; `string'
PUBLIC	??_C@_0CF@HNAEINDB@?$DL?5automated?5systems?5are?5now?5on?9l@ ; `string'
PUBLIC	??_C@_0BM@OMIBJMFG@Hyperdrive?5?$CF?40f?$CF?$CF?5charged?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0DO@OMMMNLOB@Your?5data?5base?5only?5has?5enough?5r@ ; `string'
PUBLIC	??_C@_0CM@KFNGBJLK@You?5have?5aquired?5drone?5swarm?5cal@ ; `string'
PUBLIC	??_C@_0CM@PHDJABCO@You?5have?5aquired?5a?52?5minute?5weap@ ; `string'
PUBLIC	??_C@_0CI@DIPLOOLG@SFX?4Comet_Busters_Pickup_Powerup@ ; `string'
PUBLIC	??_C@_0CK@HCJEKJPP@Insufficient?5power?5to?5overcharge@ ; `string'
PUBLIC	??_C@_0CN@JFPLAHAP@SFX?4Comet_Busters_Overcharged_We@ ; `string'
PUBLIC	??_C@_0CO@GHBNNCJI@SFX?4Comet_Busters_Overcharged_We@ ; `string'
PUBLIC	??_C@_0CO@NAPILLOI@Cannot?5deploy?5SOS?5Beacon?5while?5i@ ; `string'
PUBLIC	??_C@_0GI@FOKLMDKF@Sorry?0?5there?5is?5already?5a?5SOS?5Be@ ; `string'
PUBLIC	??_C@_0FC@KDHMBMMC@Due?5to?5sensor?5interference?0?5it?5w@ ; `string'
PUBLIC	??_C@_0DL@FEPJCPF@Sorry?0?5you?5can?5only?5deploy?5one?5S@ ; `string'
PUBLIC	??_C@_0CH@EJNGBCHG@Sorry?0?5you?5don?8t?5have?5any?5SOS?5Be@ ; `string'
PUBLIC	??_C@_0CG@ILMBFACM@SFX?4Comet_Busters_Beacon_Deploy_@ ; `string'
PUBLIC	??_C@_0BF@JPIAOKNI@SOS?5Beacon?5Deployed?$CB?$AA@ ; `string'
PUBLIC	??_C@_0L@GDNFADFP@SOS_Beacon?$AA@		; `string'
PUBLIC	??_C@_0CK@GEKGNCFO@Cannot?5deploy?5drones?5while?5in?5hy@ ; `string'
PUBLIC	??_C@_0DN@INCEHMJM@Sorry?0?5you?5can?5only?5have?5two?5dro@ ; `string'
PUBLIC	??_C@_0BA@EHNMPGMH@Drone?5Launched?$CB?$AA@	; `string'
PUBLIC	??_C@_0CF@NPCKADHB@SFX?4Comet_Busters_Drone_Launch_S@ ; `string'
PUBLIC	??_C@_0L@IBKIKMNA@?$CFd?0100?01?01?$AA@		; `string'
PUBLIC	??_C@_0BJ@HMHDFFIC@CMTB_Player_Attack_Drone?$AA@ ; `string'
PUBLIC	??_C@_0BG@DDDOADFB@JMG_CMTB_Player_Drone?$AA@	; `string'
PUBLIC	??_C@_0CM@BCHOJKJO@Sorry?0?5you?5don?8t?5have?5any?5Drones@ ; `string'
PUBLIC	??_C@_0DI@JOPOKIJI@Sorry?0?5a?5drone?5swarm?5is?5already?5@ ; `string'
PUBLIC	??_C@_0DM@CPNCGFHK@Cannot?5transmit?5drone?5swarm?5call@ ; `string'
PUBLIC	??_C@_0BE@CGMPNBOF@Drone?5Swarm?5Called?$CB?$AA@ ; `string'
PUBLIC	??_C@_09LCIOIFFB@?$CFd?010?01?00?$AA@		; `string'
PUBLIC	??_C@_0DH@BKFDMGCF@Sorry?0?5you?5don?8t?5have?5the?5codes?5@ ; `string'
PUBLIC	??_C@_0EB@ODICOFHG@Sorry?0?5you?5don?8t?5have?5any?5extra?5@ ; `string'
PUBLIC	??_C@_0EO@BMGJBAFN@You?5have?5granted?5player?5?$CFd?5?$CI?$CFs?$CJ?5@ ; `string'
PUBLIC	??_C@_0DM@JGDCJFMM@?$CFs?5has?5granted?5you?5another?5life?0@ ; `string'
PUBLIC	??_C@_0DB@FOFGKICD@Sorry?0?5player?5?$CFd?5is?5not?5requesti@ ; `string'
PUBLIC	??_C@_0BO@IDHPPFKH@?$CIHyperdrive?5charge?5at?5?$CF?40f?$CF?$CF?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0EO@HLGAJOEF@IMMINENT?5COLLISION?5CONDITION?5DET@ ; `string'
PUBLIC	??_C@_0DH@LKHLGGNO@HYPER?5DRIVES?5DEPLETED?0?5HYPERSPAC@ ; `string'
PUBLIC	??_C@_07GKGABLL@HyperIn?$AA@			; `string'
PUBLIC	??_C@_05NNFHCGPF@?$CFs?4?$CFs?$AA@		; `string'
PUBLIC	??_C@_0CG@BIHDAKAG@Your?5power?5regen?5powerup?5has?5exp@ ; `string'
PUBLIC	??_C@_0CJ@KEMGGLAF@Your?5weapon?5upgrade?5powerup?5has?5@ ; `string'
PUBLIC	??_C@_08LDDCHHDA@Backward?$AA@			; `string'
PUBLIC	??_C@_07NALHMFBO@Forward?$AA@			; `string'
PUBLIC	??_C@_0BD@NPONFOKH@Disruptor?5Engaged?$CB?$AA@	; `string'
PUBLIC	??_C@_0BK@PMLDBCIK@Engine?5overload?5detected?$CB?$AA@ ; `string'
PUBLIC	??_C@_08CCPOGDLK@HyperOut?$AA@			; `string'
PUBLIC	??_C@_04LLKGOIAC@10?00?$AA@			; `string'
PUBLIC	??_C@_04IMHIBIDA@15?00?$AA@			; `string'
PUBLIC	??_C@_03NCDEPONL@3?00?$AA@			; `string'
PUBLIC	??_C@_0BG@ONDGJMEB@You?5are?5out?5of?5lives?$CB?$AA@ ; `string'
PUBLIC	??_C@_0CA@JMINELOO@Player?5?$CFd?5?$CI?$CFs?$CJ?5is?5out?5of?5lives?$CB?$AA@ ; `string'
PUBLIC	??_C@_0DH@GNDCJBOI@Power?5levels?5critical?$CB?5Deactivat@ ; `string'
PUBLIC	??_C@_0BI@CDFHKPGF@CometSpin?$CFd?4CometSpin?$CFd?$AA@ ; `string'
PUBLIC	??_C@_04EBKMHHBE@Size?$AA@			; `string'
PUBLIC	??_C@_07HOMDCAEO@Comet?$CFd?$AA@		; `string'
PUBLIC	??_C@_0BC@IMNMANMB@?$CFd?0?$CF?43f?5?$CF?43f?5?$CF?43f?$AA@ ; `string'
PUBLIC	??_C@_09DHIFDLCI@Comet?$CF02d?$AA@		; `string'
PUBLIC	??_C@_08GCJNLIKG@Position?$AA@			; `string'
PUBLIC	??_C@_06IONACMBM@Number?$AA@			; `string'
PUBLIC	??_C@_0FH@IIPKLMKK@?$CFs?5is?5out?5of?5lives?0?5you?5can?5give@ ; `string'
PUBLIC	??_C@_0CC@KDFPAFOO@Press?5spacebar?5to?5start?5the?5game@ ; `string'
PUBLIC	??_C@_0CF@MIOOFHNA@?$CFs?5has?5been?5kicked?5out?5of?5the?5lo@ ; `string'
PUBLIC	??_C@_0BG@GIMHFNBL@Vehicle?5Special?5Keys?3?$AA@ ; `string'
PUBLIC	??_C@_0BO@BOIDNEMN@Spacebar?5?9?5Vote?5to?5start?5game?$AA@ ; `string'
PUBLIC	??_C@_0BJ@EKECLBBE@Page?5Up?5?9?5Request?5a?5life?$AA@ ; `string'
PUBLIC	??_C@_0P@HDJECCFC@E?5?9?5Quit?5game?4?$AA@	; `string'
PUBLIC	??_C@_0FL@NKDBAEEJ@You?5have?5special?5abilities?5that?5@ ; `string'
PUBLIC	??_C@_0N@MIAODDCN@ControllerID?$AA@		; `string'
PUBLIC	??_C@_08ENOAHEPI@null?4mp3?$AA@			; `string'
PUBLIC	??_C@_0DG@LBDLKGPK@A?5game?5must?5be?5in?5progress?5in?5or@ ; `string'
PUBLIC	??_C@_0CM@LHGCIFLP@Your?5request?5for?5a?5life?5has?5been@ ; `string'
PUBLIC	??_C@_0EK@NJFPICI@Your?5request?5for?5a?5life?5has?5been@ ; `string'
PUBLIC	??_C@_0CO@OHLHLMME@Sorry?0?5no?5one?5in?5game?5has?5any?5li@ ; `string'
PUBLIC	??_C@_0DN@ENGMNJLA@Sorry?0?5you?5must?5be?5out?5of?5lives?5@ ; `string'
PUBLIC	??_C@_0EM@PNECEIBN@Sorry?0?5you?5cannot?5change?5your?5sp@ ; `string'
PUBLIC	??_C@_0CP@HAABCCHK@Sorry?0?5you?5do?5not?5have?5that?5perk@ ; `string'
PUBLIC	??_C@_0FB@KGHIDKIK@1?5?9?5Start?5the?5game?5with?5an?5Extra@ ; `string'
PUBLIC	??_C@_0DF@IJOIHOGC@2?5?9?5Start?5the?5game?5with?5a?5fully?5@ ; `string'
PUBLIC	??_C@_0EG@JKIJOEC@3?5?9?516?45?$CF?5chance?5of?5getting?5Doub@ ; `string'
PUBLIC	??_C@_0EC@OHHPJHHI@4?5?9?55?$CF?5chance?5of?5getting?5Energy?5@ ; `string'
PUBLIC	??_C@_0EF@FAMLNKNF@5?5?9?55?$CF?5chance?5of?5getting?5Weapons@ ; `string'
PUBLIC	??_C@_0DC@EPGJIDBL@6?5?9?520?$CF?5chance?5of?5being?5granted?5@ ; `string'
PUBLIC	??_C@_0EC@DHGPLMLE@7?5?9?55?$CF?5chance?5of?5being?5granted?5a@ ; `string'
PUBLIC	??_C@_0DI@BBLMAHPA@8?5?9?52?45?$CF?5chance?5of?5being?5granted@ ; `string'
PUBLIC	??_C@_0DJ@CMKFKPIC@9?5?9?52?45?$CF?5chance?5of?5being?5granted@ ; `string'
PUBLIC	??_C@_0O@HDKCBMAC@MachineNumber?$AA@		; `string'
PUBLIC	??_C@_0BB@BMHOELCO@ArcadeMachine_?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BH@JCPOMNIO@JMG_CMTB_Renegade_Code?$AA@	; `string'
PUBLIC	??_C@_0M@NCIMLPDC@MySoldierID?$AA@		; `string'
PUBLIC	??_C@_0CA@HFHFGBGO@Astrogade?9ShipShield?077454812?00?$AA@ ; `string'
PUBLIC	??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@ ; `string'
PUBLIC	??_C@_0BP@HEKCEGON@Astrogade?9ShipCloak?077454813?00?$AA@ ; `string'
PUBLIC	??_C@_0BP@LPBEJMHI@Astrogade?9StartGame?077454814?00?$AA@ ; `string'
PUBLIC	??_C@_0BO@EIDNLCPG@Astrogade?9ShipBomb?077454815?00?$AA@ ; `string'
PUBLIC	??_C@_0CE@FGPPJENK@Astrogade?9ShipOvercharge?07745481@ ; `string'
PUBLIC	??_C@_0CC@HDAEAGKJ@Astrogade?9RequestALife?077454817?0@ ; `string'
PUBLIC	??_C@_0CD@MIFKEDKF@Astrogade?9ShipSOSBeacon?077454818@ ; `string'
PUBLIC	??_C@_0BP@FBFKKKLB@Astrogade?9ShipDrone?077454819?00?$AA@ ; `string'
PUBLIC	??_C@_0CC@PDFAEJL@Astrogade?9ForfeitLives?077454830?0@ ; `string'
PUBLIC	??_C@_0CH@NNJAPLNJ@Astrogade?9UseDroneSwarmCode?07745@ ; `string'
PUBLIC	??_C@_0CG@PKFPKKIK@Astrogade?9OfferLifePlayer0?077454@ ; `string'
PUBLIC	??_C@_0CG@JPHFBEGK@Astrogade?9OfferLifePlayer1?077454@ ; `string'
PUBLIC	??_C@_0CG@DAAKNHEK@Astrogade?9OfferLifePlayer2?077454@ ; `string'
PUBLIC	??_C@_0CG@FFCAGJKK@Astrogade?9OfferLifePlayer3?077454@ ; `string'
PUBLIC	??_C@_0CG@LFIEFHEL@Astrogade?9OfferLifePlayer4?077454@ ; `string'
PUBLIC	??_C@_0CG@NAKOOJKL@Astrogade?9OfferLifePlayer5?077454@ ; `string'
PUBLIC	??_C@_0CG@HPNBCKIL@Astrogade?9OfferLifePlayer6?077454@ ; `string'
PUBLIC	??_C@_0CG@BKPLJEGL@Astrogade?9OfferLifePlayer7?077454@ ; `string'
PUBLIC	??_C@_0CG@GFOIFBAI@Astrogade?9OfferLifePlayer8?077454@ ; `string'
PUBLIC	??_C@_0CG@MCOPOI@Astrogade?9OfferLifePlayer9?077454@ ; `string'
PUBLIC	??_C@_0BP@KOEGJBOG@Astrogade?9KeyListing?07154148?00?$AA@ ; `string'
PUBLIC	??_C@_07JPIEJJIE@Is_Boss?$AA@			; `string'
PUBLIC	??_C@_0BG@IJBPPJAA@Explosion_Comet_Small?$AA@	; `string'
PUBLIC	??_C@_05MAGIBEFI@Scale?$AA@			; `string'
PUBLIC	??_C@_0P@OFBBCMBO@Explosion_Moon?$AA@		; `string'
PUBLIC	??_C@_06CEBLODJL@Comet3?$AA@			; `string'
PUBLIC	??_C@_0BA@KOGFMHJH@CMTBChargeSpark?$AA@		; `string'
PUBLIC	??_C@_0BB@NIMKMEAF@ControllerShipID?$AA@	; `string'
PUBLIC	??_C@_0CG@IGNKFOCA@SFX?4Comet_Busters_Super_Weapon_C@ ; `string'
PUBLIC	??_C@_0CH@LAOFOPJA@SFX?4Comet_Busters_Super_Weapon_W@ ; `string'
PUBLIC	??_C@_0BA@IHFLAFKF@CmtBSuperWeapon?$AA@		; `string'
PUBLIC	??_C@_0CA@EMKOFNEI@CmtBSuperWeapon?4CmtBSuperWeapon?$AA@ ; `string'
PUBLIC	??_C@_0CE@ICNBHODI@SFX?4Comet_Busters_Super_Weapon_F@ ; `string'
PUBLIC	??_C@_06LDOHGAOK@Pos150?$AA@			; `string'
PUBLIC	??_C@_06IFGIOHDE@Custom?$AA@			; `string'
PUBLIC	??_C@_0L@GJMGOBFJ@p_Energy_0?$AA@		; `string'
PUBLIC	??_C@_08INJDFBPH@LifeTime?$AA@			; `string'
PUBLIC	??_C@_0BG@NDBEODBA@p_Energy_0?4p_Energy_0?$AA@	; `string'
PUBLIC	??_C@_0L@HANNNABI@p_Energy_1?$AA@		; `string'
PUBLIC	??_C@_0BG@BHJJALNE@p_Energy_1?4p_Energy_1?$AA@	; `string'
PUBLIC	??_C@_0L@FLPAIDNL@p_Energy_2?$AA@		; `string'
PUBLIC	??_C@_0BG@IBHODENJ@p_Energy_2?4p_Energy_2?$AA@	; `string'
PUBLIC	??_C@_0M@HNBOKCKD@p_SOSBeacon?$AA@		; `string'
PUBLIC	??_C@_0BI@COFOCMMO@p_SOSBeacon?4p_SOSBeacon?$AA@ ; `string'
PUBLIC	??_C@_08MJLMJCFB@p_sw_HEW?$AA@			; `string'
PUBLIC	??_C@_0BC@FIGAMGHC@p_sw_HEW?4p_sw_HEW?$AA@	; `string'
PUBLIC	??_C@_0M@BJDFNJG@p_ExtraShip?$AA@		; `string'
PUBLIC	??_C@_0BI@MBAOLDDF@p_ExtraShip?4p_ExtraShip?$AA@ ; `string'
PUBLIC	??_C@_0L@LIHCEDFL@p_Points_0?$AA@		; `string'
PUBLIC	??_C@_0BG@CIFOMFCM@p_Points_0?4p_Points_0?$AA@	; `string'
PUBLIC	??_C@_0L@KBGJHCBK@p_Points_1?$AA@		; `string'
PUBLIC	??_C@_0BG@OMNDCNOI@p_Points_1?4p_Points_1?$AA@	; `string'
PUBLIC	??_C@_0L@IKEECBNJ@p_Points_2?$AA@		; `string'
PUBLIC	??_C@_0BG@HKDEBCOF@p_Points_2?4p_Points_2?$AA@	; `string'
PUBLIC	??_C@_0L@JDFPBAJI@p_Points_3?$AA@		; `string'
PUBLIC	??_C@_0BG@LOLJPKCB@p_Points_3?4p_Points_3?$AA@	; `string'
PUBLIC	??_C@_07MNENENBA@p_Drone?$AA@			; `string'
PUBLIC	??_C@_0BA@OGIHCEPN@p_Drone?4p_Drone?$AA@	; `string'
PUBLIC	??_C@_0L@NMBOIGFP@p_Points_4?$AA@		; `string'
PUBLIC	??_C@_0BG@IMILGKLO@p_Points_4?4p_Points_4?$AA@	; `string'
PUBLIC	??_C@_0P@LAJGIFLP@p_Energy_Regen?$AA@		; `string'
PUBLIC	??_C@_0BO@LOBJOCPN@p_Energy_Regen?4p_Energy_Regen?$AA@ ; `string'
PUBLIC	??_C@_0P@EKKFLCBL@P_DoublePoints?$AA@		; `string'
PUBLIC	??_C@_0BO@NCAGBHPP@P_DoublePoints?4P_DoublePoints?$AA@ ; `string'
PUBLIC	??_C@_06EOAAJIBD@P_Deer?$AA@			; `string'
PUBLIC	??_C@_0O@BMKHPFIF@P_Deer?4P_Deer?$AA@		; `string'
PUBLIC	??_C@_07CGEEFHGM@p_Swarm?$AA@			; `string'
PUBLIC	??_C@_0BA@ENNENONI@p_Swarm?4p_Swarm?$AA@	; `string'
PUBLIC	??_C@_0O@OGIFOEBP@p_weapUpgrade?$AA@		; `string'
PUBLIC	??_C@_0BM@MEJFCIJN@p_weapUpgrade?4p_weapUpgrade?$AA@ ; `string'
PUBLIC	??_C@_06KNDBNPNN@w_invs?$AA@			; `string'
PUBLIC	??_C@_0N@JOEDODEI@Colliders003?$AA@		; `string'
PUBLIC	??_C@_0N@NBACHFIP@Colliders004?$AA@		; `string'
PUBLIC	??_C@_0N@MIBJEEMO@Colliders005?$AA@		; `string'
PUBLIC	??_C@_0N@KMHFIBMK@Colliders001?$AA@		; `string'
PUBLIC	??_C@_0N@LFGOLAIL@Colliders000?$AA@		; `string'
PUBLIC	??_C@_0N@IHFINCAJ@Colliders002?$AA@		; `string'
PUBLIC	??_C@_0N@ODDEBHAN@Colliders006?$AA@		; `string'
PUBLIC	??_C@_0O@FJALAOPP@CMTBCShipAnim?$AA@		; `string'
PUBLIC	??_C@_0BM@KFPGANGC@CMTBCShipAnim?4CMTBCShipAnim?$AA@ ; `string'
PUBLIC	??_C@_0N@FLJNBGLE@PlayerNumber?$AA@		; `string'
PUBLIC	??_C@_0N@FPFOLAOB@TrtSpots?$CF03d?$AA@		; `string'
PUBLIC	??_C@_0BH@GDFCDMOF@CMTB_Cargo_Ship_Turret?$AA@	; `string'
PUBLIC	??_C@_0BL@CFBEJCMJ@JMG_CMTB_Cargo_Ship_Turret?$AA@ ; `string'
PUBLIC	??_C@_0DF@FJDAIFEN@Galactic?5Cargo?5Ship?3?5You?5were?5wa@ ; `string'
PUBLIC	??_C@_0FF@FPBOBBNK@Galactic?5Cargo?5Ship?3?5Friendly?5fi@ ; `string'
PUBLIC	??_C@_0EL@LBNHOGIK@Galactic?5Cargo?5Ship?3?5Stop?5firing@ ; `string'
PUBLIC	??_C@_0EI@DOBEHKBJ@Galactic?5Cargo?5Ship?3?5Final?5warni@ ; `string'
PUBLIC	??_C@_0EK@LOOFKGAH@Galactic?5Cargo?5Ship?3?5Structural?5@ ; `string'
PUBLIC	??_C@_06LHNPGOPG@Barrel?$AA@			; `string'
PUBLIC	??_C@_0N@INKKNFJM@PlayerEscort?$AA@		; `string'
PUBLIC	??_C@_0P@CCHHLEDH@FighterDrone?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BO@GIMEHAME@FighterDrone?$CFd?4FighterDrone?$CFd?$AA@ ; `string'
PUBLIC	??_C@_05PMCMDMKN@Power?$AA@			; `string'
PUBLIC	??_C@_0O@CFOGKGM@FighterDronez?$AA@		; `string'
PUBLIC	??_C@_0BM@FGAOFIBA@FighterDronez?4FighterDronez?$AA@ ; `string'
PUBLIC	??_C@_0L@PIAPLGDF@RePosition?$AA@		; `string'
PUBLIC	??_C@_0BI@FAOCJFNP@Explosion_Drone_Warp_In?$AA@	; `string'
PUBLIC	??_C@_05JCEPCEFD@LWing?$AA@			; `string'
PUBLIC	??_C@_05KLJDEHLI@RWing?$AA@			; `string'
PUBLIC	??_C@_0L@BFKJPLBK@?$CFd?0?$CFd?00?0?$CFd?$AA@	; `string'
PUBLIC	??_C@_06KJINBPNG@Turret?$AA@			; `string'
PUBLIC	??_C@_0BC@KDBOOJDO@powerbox?4powerbox?$AA@	; `string'
PUBLIC	??_C@_0CD@HIMCCADD@Sorry?0?5this?5switch?5is?5not?5enable@ ; `string'
PUBLIC	??_C@_0ED@HKPPECPO@Please?5wait?5for?5the?5current?5game@ ; `string'
PUBLIC	??_C@_0DC@ILNDMLLJ@Please?5wait?5?$CFd?5seconds?5before?5pu@ ; `string'
PUBLIC	??_C@_05PAMKIGDK@win?50?$AA@			; `string'
PUBLIC	??_C@_0DN@IBAOBLKH@Pull?5the?5switch?5all?5the?5way?5down@ ; `string'
PUBLIC	??_C@_0BO@PHHNAANH@SFX?4Comet_Busters_Flip_Switch?$AA@ ; `string'
PUBLIC	??_C@_0BE@GHIJNOGP@powerbox2?4powerbox2?$AA@	; `string'
PUBLIC	??_C@_0BJ@DBOAFGKG@?$FLDIFFICULTY?5SET?5TO?5EASY?$FN?$AA@ ; `string'
PUBLIC	??_C@_0BK@HNDBPDLA@DIFFICULTY?5SET?5TO?5NORMAL?$FN?$AA@ ; `string'
PUBLIC	??_C@_0BJ@CBDMBCDO@?$FLDIFFICULTY?5SET?5TO?5HARD?$FN?$AA@ ; `string'
PUBLIC	??_C@_0BN@EILNFNJP@?$FLDIFFICULTY?5SET?5TO?5DOOMSDAY?$FN?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@6B@ ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::`vftable'
PUBLIC	?JMG_Create_Ship_On_Poke_Registrant@@3V?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@A ; JMG_Create_Ship_On_Poke_Registrant
PUBLIC	??_C@_0KC@KACPIFJF@CreateSpot?3vector3?0ShipPreset?$DNCo@ ; `string'
PUBLIC	??_C@_0BI@OCLAMLOP@JMG_Create_Ship_On_Poke?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@6B@ ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::`vftable'
PUBLIC	?JMG_Advanced_Bounce_Zone_Registrant@@3V?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@A ; JMG_Advanced_Bounce_Zone_Registrant
PUBLIC	??_C@_0DA@FEHDLNFG@XAmount?$DN0?3float?0YAmount?$DN0?3float?0@ ; `string'
PUBLIC	??_C@_0BJ@GEFDPELA@JMG_Advanced_Bounce_Zone?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@6B@ ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::`vftable'
PUBLIC	?JMG_Ship_Random_Hyperspace_Registrant@@3V?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@A ; JMG_Ship_Random_Hyperspace_Registrant
PUBLIC	??_C@_0EI@GPBNBBEO@HyperspacingModel?$DNcometbshs?3stri@ ; `string'
PUBLIC	??_C@_0BL@PAOMGHPC@JMG_Ship_Random_Hyperspace?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_Random_Music@@@@6B@	; ScriptRegistrant<JMG_Random_Music>::`vftable'
PUBLIC	?JMG_Random_Music_Registrant@@3V?$ScriptRegistrant@VJMG_Random_Music@@@@A ; JMG_Random_Music_Registrant
PUBLIC	??_C@_0FH@IANBPFPH@Song1?3string?0Song1Time?3float?0Son@ ; `string'
PUBLIC	??_C@_0BB@LBKFGDNM@JMG_Random_Music?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_Ship_Weapon@@@@6B@	; ScriptRegistrant<JMG_Ship_Weapon>::`vftable'
PUBLIC	?JMG_Ship_Weapon_Registrant@@3V?$ScriptRegistrant@VJMG_Ship_Weapon@@@@A ; JMG_Ship_Weapon_Registrant
PUBLIC	??_C@_0BA@MMIEMBHJ@JMG_Ship_Weapon?$AA@		; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@6B@ ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::`vftable'
PUBLIC	?JMG_Return_Custom_When_Shot_Registrant@@3V?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@A ; JMG_Return_Custom_When_Shot_Registrant
PUBLIC	??_C@_0BM@EIAAOEBK@JMG_Return_Custom_When_Shot?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_Cronie_AI@@@@6B@	; ScriptRegistrant<JMG_Cronie_AI>::`vftable'
PUBLIC	?JMG_Cronie_AI_Registrant@@3V?$ScriptRegistrant@VJMG_Cronie_AI@@@@A ; JMG_Cronie_AI_Registrant
PUBLIC	??_C@_0O@CMOIFFKF@JMG_Cronie_AI?$AA@		; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@6B@ ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::`vftable'
PUBLIC	?JMG_Kill_Self_And_Sender_On_Custom_Registrant@@3V?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@A ; JMG_Kill_Self_And_Sender_On_Custom_Registrant
PUBLIC	??_C@_0M@HBPJHKKO@Message?3int?$AA@		; `string'
PUBLIC	??_C@_0CD@NACCMAPF@JMG_Kill_Self_And_Sender_On_Cust@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@6B@ ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::`vftable'
PUBLIC	?JMG_Ship_Shield_Control_Script_Registrant@@3V?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@A ; JMG_Ship_Shield_Control_Script_Registrant
PUBLIC	??_C@_0BP@OEEKAOHD@JMG_Ship_Shield_Control_Script?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@6B@ ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::`vftable'
PUBLIC	?JMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant@@3V?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@A ; JMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant
PUBLIC	??_C@_0CI@FIKIDPDG@JMG_Kill_Self_And_Sender_On_Cust@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@6B@ ; ScriptRegistrant<JMG_Ship_Shield_Script>::`vftable'
PUBLIC	?JMG_Ship_Shield_Script_Registrant@@3V?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@A ; JMG_Ship_Shield_Script_Registrant
PUBLIC	??_C@_06IDGMBKCH@ID?3int?$AA@			; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@6B@ ; ScriptRegistrant<JMG_Renetbusters_Object>::`vftable'
PUBLIC	?JMG_Renetbusters_Object_Registrant@@3V?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@A ; JMG_Renetbusters_Object_Registrant
PUBLIC	??_C@_0BL@JAOGOEJB@size?3float?0Power_Drain?3int?$AA@ ; `string'
PUBLIC	??_C@_0BI@JANFOPGL@JMG_Renetbusters_Object?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@6B@ ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::`vftable'
PUBLIC	?JMG_New_Ship_Weapon_Control_System_Registrant@@3V?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@A ; JMG_New_Ship_Weapon_Control_System_Registrant
PUBLIC	??_C@_0CD@MBNGPBCI@JMG_New_Ship_Weapon_Control_Syst@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@6B@ ; ScriptRegistrant<JMG_Comet_Control_Script>::`vftable'
PUBLIC	?JMG_Comet_Control_Script_Registrant@@3V?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@A ; JMG_Comet_Control_Script_Registrant
PUBLIC	??_C@_0FH@IMAIKLEL@Comet_Size?3float?0Spawn_Comets?$DN0?3@ ; `string'
PUBLIC	??_C@_0BJ@DHIJIIMB@JMG_Comet_Control_Script?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@6B@ ; ScriptRegistrant<JMG_Attach_And_Remove>::`vftable'
PUBLIC	?JMG_Attach_And_Remove_Registrant@@3V?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@A ; JMG_Attach_And_Remove_Registrant
PUBLIC	??_C@_0BF@HBPOJDOK@Smaller_Comet?3string?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@6B@ ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::`vftable'
PUBLIC	?JMG_User_Auto_Enter_Ship_Registrant@@3V?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@A ; JMG_User_Auto_Enter_Ship_Registrant
PUBLIC	??_C@_0CH@HGDGGFFP@Player_Ship?$DNRB_Blue_Player_Ship?3@ ; `string'
PUBLIC	??_C@_0BJ@JFJACLHB@JMG_User_Auto_Enter_Ship?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@6B@ ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::`vftable'
PUBLIC	?JMG_Apply_Damage_On_Timer_Registrant@@3V?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@A ; JMG_Apply_Damage_On_Timer_Registrant
PUBLIC	??_C@_0BK@CADJILLC@JMG_Apply_Damage_On_Timer?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::`vftable'
PUBLIC	?JMG_CMTB_Main_Game_Control_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@A ; JMG_CMTB_Main_Game_Control_Registrant
PUBLIC	??_C@_0BL@JFPJNFJB@JMG_CMTB_Main_Game_Control?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::`vftable'
PUBLIC	?JMG_CMTB_Ship_Control_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@A ; JMG_CMTB_Ship_Control_Script_Registrant
PUBLIC	??_C@_0BN@JOGEAGBE@JMG_CMTB_Ship_Control_Script?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@6B@ ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::`vftable'
PUBLIC	?JMG_CMTB_UFO_Random_Fire_Control_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@A ; JMG_CMTB_UFO_Random_Fire_Control_Registrant
PUBLIC	??_C@_0M@HMICPFDE@UFOBoss?3int?$AA@		; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Comet_Script>::`vftable'
PUBLIC	?JMG_CMTB_Comet_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@A ; JMG_CMTB_Comet_Script_Registrant
PUBLIC	??_C@_0CO@KAJJGBAB@Size?$DN2?3int?0TargetPosition?$DN0?40?50?4@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::`vftable'
PUBLIC	?JMG_CMTB_Zone_Realign_Enter_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@A ; JMG_CMTB_Zone_Realign_Enter_Registrant
PUBLIC	??_C@_0BN@HBBNOJNA@Position?$DN0?40?50?40?50?40?3Vector3?$AA@ ; `string'
PUBLIC	??_C@_0BM@GGNCDFOM@JMG_CMTB_Zone_Realign_Enter?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::`vftable'
PUBLIC	?JMG_CMTB_Spectator_Object_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@A ; JMG_CMTB_Spectator_Object_Registrant
PUBLIC	??_C@_0BM@IOJIEINM@ControllerID?3int?0Number?3int?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::`vftable'
PUBLIC	?JMG_CMTB_Arcade_Machine_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@A ; JMG_CMTB_Arcade_Machine_Registrant
PUBLIC	??_C@_0CH@EOABBIBL@ControllerID?$DN0?3int?0MachineNumber@ ; `string'
PUBLIC	??_C@_0BI@KFEDCGBB@JMG_CMTB_Arcade_Machine?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::`vftable'
PUBLIC	?JMG_CMTB_Fake_Player_Attach_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@A ; JMG_CMTB_Fake_Player_Attach_Script_Registrant
PUBLIC	??_C@_0BL@BBONPPAA@MySoldierID?3int?0Number?3int?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::`vftable'
PUBLIC	?JMG_CMTB_Renegade_Code_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@A ; JMG_CMTB_Renegade_Code_Registrant
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::`vftable'
PUBLIC	?JMG_CMTB_Motion_Mine_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@A ; JMG_CMTB_Motion_Mine_Registrant
PUBLIC	??_C@_0M@DKGEGNAD@Is_BOSS?3int?$AA@		; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::`vftable'
PUBLIC	?JMG_CMTB_The_Moon_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@A ; JMG_CMTB_The_Moon_Script_Registrant
PUBLIC	??_C@_0BJ@ONFJBKAC@JMG_CMTB_The_Moon_Script?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::`vftable'
PUBLIC	?JMG_CMTB_Ship_Super_Weapon_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@A ; JMG_CMTB_Ship_Super_Weapon_Registrant
PUBLIC	??_C@_0BF@LMMAOJPK@ControllerShipID?3int?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::`vftable'
PUBLIC	?JMG_CMTB_Powerup_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@A ; JMG_CMTB_Powerup_Script_Registrant
PUBLIC	??_C@_0BI@LCBNHEBB@Custom?3int?0LifeTime?3int?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::`vftable'
PUBLIC	?JMG_CMTB_Cargo_Ship_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@A ; JMG_CMTB_Cargo_Ship_Script_Registrant
PUBLIC	??_C@_0BB@BGEIDIFC@PlayerNumber?3int?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::`vftable'
PUBLIC	?JMG_CMTB_Cargo_Ship_Turret_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@A ; JMG_CMTB_Cargo_Ship_Turret_Registrant
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Player_Drone>::`vftable'
PUBLIC	?JMG_CMTB_Player_Drone_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@A ; JMG_CMTB_Player_Drone_Registrant
PUBLIC	??_C@_0DL@HMJKEEFC@PlayerNumber?3int?0Power?3int?0RePos@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::`vftable'
PUBLIC	?JMG_CMTB_Vehicle_Face_Turret_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@A ; JMG_CMTB_Vehicle_Face_Turret_Registrant
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::`vftable'
PUBLIC	?JMG_CMTB_Poke_End_Map_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@A ; JMG_CMTB_Poke_End_Map_Registrant
PUBLIC	??_C@_0BG@KJLBHOJC@JMG_CMTB_Poke_End_Map?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::`vftable'
PUBLIC	?JMG_CMTB_Poke_Change_Difficulty_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@A ; JMG_CMTB_Poke_Change_Difficulty_Registrant
PUBLIC	??_C@_0CA@CJEFGFNJ@JMG_CMTB_Poke_Change_Difficulty?$AA@ ; `string'
PUBLIC	??_C@_0EJ@ENMBJFB@SList?$DMstruct?5MultiKeyHookScriptI@ ; `string'
PUBLIC	??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@ ; `string'
PUBLIC	??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ ; `string'
PUBLIC	??_C@_0EJ@OIGECPDF@SList?$DMstruct?5MultiKeyHookScriptI@ ; `string'
PUBLIC	??_C@_0EM@PPENJFKC@SList?$DMstruct?5MultiKeyHookScriptI@ ; `string'
PUBLIC	??_C@_0EH@CGJBMJBC@SList?$DMstruct?5MultiKeyHookScriptI@ ; `string'
PUBLIC	??_C@_0EL@MPFHHNNA@SList?$DMstruct?5MultiKeyHookScriptI@ ; `string'
PUBLIC	??_C@_0EO@OJGPEJGC@SList?$DMstruct?5MultiKeyHookScriptI@ ; `string'
PUBLIC	??_C@_0EN@HIHNAGN@SList?$DMstruct?5MultiKeyHookScriptI@ ; `string'
PUBLIC	??_C@_0DI@KILFNNFD@ScriptRegistrant?$DMclass?5JMG_Creat@ ; `string'
PUBLIC	??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@ ; `string'
PUBLIC	??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ ; `string'
PUBLIC	??_C@_0DJ@LJGDPKPO@ScriptRegistrant?$DMclass?5JMG_Advan@ ; `string'
PUBLIC	??_C@_0DL@BFEIIILC@ScriptRegistrant?$DMclass?5JMG_Ship_@ ; `string'
PUBLIC	??_C@_0DB@PKHMAGHK@ScriptRegistrant?$DMclass?5JMG_Rando@ ; `string'
PUBLIC	??_C@_0DA@LIJAAGCL@ScriptRegistrant?$DMclass?5JMG_Ship_@ ; `string'
PUBLIC	??_C@_0DM@CDLJMKLF@ScriptRegistrant?$DMclass?5JMG_Retur@ ; `string'
PUBLIC	??_C@_0CO@HIPPMCNE@ScriptRegistrant?$DMclass?5JMG_Croni@ ; `string'
PUBLIC	??_C@_0ED@HICJEPCL@ScriptRegistrant?$DMclass?5JMG_Kill_@ ; `string'
PUBLIC	??_C@_0DP@IAJCIEIN@ScriptRegistrant?$DMclass?5JMG_Ship_@ ; `string'
PUBLIC	??_C@_0EI@EBLHNLHN@ScriptRegistrant?$DMclass?5JMG_Kill_@ ; `string'
PUBLIC	??_C@_0DH@ODAKIONA@ScriptRegistrant?$DMclass?5JMG_Ship_@ ; `string'
PUBLIC	??_C@_0DI@HBFECPDE@ScriptRegistrant?$DMclass?5JMG_Renet@ ; `string'
PUBLIC	??_C@_0ED@IMLNHFFC@ScriptRegistrant?$DMclass?5JMG_New_S@ ; `string'
PUBLIC	??_C@_0DJ@CAONIPOF@ScriptRegistrant?$DMclass?5JMG_Comet@ ; `string'
PUBLIC	??_C@_0DG@HPBHHPOO@ScriptRegistrant?$DMclass?5JMG_Attac@ ; `string'
PUBLIC	??_C@_0DJ@OKNJMGOP@ScriptRegistrant?$DMclass?5JMG_User_@ ; `string'
PUBLIC	??_C@_0DK@KOJCCMGL@ScriptRegistrant?$DMclass?5JMG_Apply@ ; `string'
PUBLIC	??_C@_0DL@IJKKMJIJ@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0DN@LDEKIAPI@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0EB@OOLBNELF@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0DG@CFCKHAMN@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0DM@NBIHAAN@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0DK@DDIMDDKK@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0DI@KJJPOPHL@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0ED@PHCMDPKL@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0DH@JBKDKLMC@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0DF@EKCPHHAF@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0DJ@NEGEDPOI@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0DL@FGMMLFNJ@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0DI@HNAFBNDA@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0DL@EHNBAFOM@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0DL@BLMFDFLB@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0DG@INLIGAMA@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0DN@DBHOJACP@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0DG@PJAEHEDC@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	??_C@_0EA@FILOACHK@ScriptRegistrant?$DMclass?5JMG_CMTB_@ ; `string'
PUBLIC	?instancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@4V3@A ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::instancex
PUBLIC	??_B?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@51 ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::`local static guard'
PUBLIC	??_C@_0EB@IOGKEECK@ObjectPoolClass?$DMclass?5GenericSLN@ ; `string'
PUBLIC	??_C@_0FF@NOANHENP@?$CFd?5memory?5leaks?5found?5in?5ObjectP@ ; `string'
PUBLIC	??_C@_0DL@BOENBDGI@ObjectPoolClass?$DMclass?5GenericSLN@ ; `string'
PUBLIC	??_R4ScriptFactory@@6B@				; ScriptFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVScriptFactory@@@8			; ScriptFactory `RTTI Type Descriptor'
PUBLIC	??_R3ScriptFactory@@8				; ScriptFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ScriptFactory@@8				; ScriptFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ScriptFactory@@8			; ScriptFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ScriptClass@@6B@				; ScriptClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVScriptClass@@@8				; ScriptClass `RTTI Type Descriptor'
PUBLIC	??_R3ScriptClass@@8				; ScriptClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ScriptClass@@8				; ScriptClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ScriptClass@@8			; ScriptClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@GameObjObserverClass@@8		; GameObjObserverClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVGameObjObserverClass@@@8		; GameObjObserverClass `RTTI Type Descriptor'
PUBLIC	??_R3GameObjObserverClass@@8			; GameObjObserverClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GameObjObserverClass@@8			; GameObjObserverClass::`RTTI Base Class Array'
PUBLIC	??_R4GameObjObserverClass@@6B@			; GameObjObserverClass::`RTTI Complete Object Locator'
PUBLIC	??_R4ScriptImpClass@@6B@			; ScriptImpClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVScriptImpClass@@@8			; ScriptImpClass `RTTI Type Descriptor'
PUBLIC	??_R3ScriptImpClass@@8				; ScriptImpClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ScriptImpClass@@8				; ScriptImpClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ScriptImpClass@@8			; ScriptImpClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ThreadClass@@6B@				; ThreadClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVThreadClass@@@8				; ThreadClass `RTTI Type Descriptor'
PUBLIC	??_R3ThreadClass@@8				; ThreadClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ThreadClass@@8				; ThreadClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ThreadClass@@8			; ThreadClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4INIClass@@6B@				; INIClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVINIClass@@@8				; INIClass `RTTI Type Descriptor'
PUBLIC	??_R3INIClass@@8				; INIClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2INIClass@@8				; INIClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@INIClass@@8			; INIClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@PostLoadableClass@@8		; PostLoadableClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVPostLoadableClass@@@8			; PostLoadableClass `RTTI Type Descriptor'
PUBLIC	??_R3PostLoadableClass@@8			; PostLoadableClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PostLoadableClass@@8			; PostLoadableClass::`RTTI Base Class Array'
PUBLIC	??_R4PostLoadableClass@@6B@			; PostLoadableClass::`RTTI Complete Object Locator'
PUBLIC	??_R4ReferencerClass@@6B@			; ReferencerClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReferencerClass@@@8			; ReferencerClass `RTTI Type Descriptor'
PUBLIC	??_R3ReferencerClass@@8				; ReferencerClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReferencerClass@@8				; ReferencerClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReferencerClass@@8		; ReferencerClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JFW_Key_Hook_Base@@6B@			; JFW_Key_Hook_Base::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJFW_Key_Hook_Base@@@8			; JFW_Key_Hook_Base `RTTI Type Descriptor'
PUBLIC	??_R3JFW_Key_Hook_Base@@8			; JFW_Key_Hook_Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JFW_Key_Hook_Base@@8			; JFW_Key_Hook_Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JFW_Key_Hook_Base@@8		; JFW_Key_Hook_Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4MultiKeyHookScriptImpClass@@6B@		; MultiKeyHookScriptImpClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMultiKeyHookScriptImpClass@@@8		; MultiKeyHookScriptImpClass `RTTI Type Descriptor'
PUBLIC	??_R3MultiKeyHookScriptImpClass@@8		; MultiKeyHookScriptImpClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MultiKeyHookScriptImpClass@@8		; MultiKeyHookScriptImpClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MultiKeyHookScriptImpClass@@8	; MultiKeyHookScriptImpClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@@8 ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct> `RTTI Type Descriptor'
PUBLIC	??_R3?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8 ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8 ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8 ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JFW_Object_Created_Hook_Base@@6B@		; JFW_Object_Created_Hook_Base::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJFW_Object_Created_Hook_Base@@@8	; JFW_Object_Created_Hook_Base `RTTI Type Descriptor'
PUBLIC	??_R3JFW_Object_Created_Hook_Base@@8		; JFW_Object_Created_Hook_Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JFW_Object_Created_Hook_Base@@8		; JFW_Object_Created_Hook_Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JFW_Object_Created_Hook_Base@@8	; JFW_Object_Created_Hook_Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_Main_Game_Control@@6B@		; JMG_CMTB_Main_Game_Control::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_Main_Game_Control@@@8		; JMG_CMTB_Main_Game_Control `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_Main_Game_Control@@8		; JMG_CMTB_Main_Game_Control::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_Main_Game_Control@@8		; JMG_CMTB_Main_Game_Control::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_Main_Game_Control@@8	; JMG_CMTB_Main_Game_Control::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_UFO_Random_Fire_Control@@6B@	; JMG_CMTB_UFO_Random_Fire_Control::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_UFO_Random_Fire_Control@@@8	; JMG_CMTB_UFO_Random_Fire_Control `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_UFO_Random_Fire_Control@@8	; JMG_CMTB_UFO_Random_Fire_Control::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_UFO_Random_Fire_Control@@8	; JMG_CMTB_UFO_Random_Fire_Control::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_UFO_Random_Fire_Control@@8 ; JMG_CMTB_UFO_Random_Fire_Control::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_Ship_Control_Script@@6B@		; JMG_CMTB_Ship_Control_Script::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_Ship_Control_Script@@@8	; JMG_CMTB_Ship_Control_Script `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_Ship_Control_Script@@8		; JMG_CMTB_Ship_Control_Script::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_Ship_Control_Script@@8		; JMG_CMTB_Ship_Control_Script::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_Ship_Control_Script@@8	; JMG_CMTB_Ship_Control_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_Comet_Script@@6B@			; JMG_CMTB_Comet_Script::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_Comet_Script@@@8		; JMG_CMTB_Comet_Script `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_Comet_Script@@8			; JMG_CMTB_Comet_Script::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_Comet_Script@@8			; JMG_CMTB_Comet_Script::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_Comet_Script@@8		; JMG_CMTB_Comet_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_Zone_Realign_Enter@@6B@		; JMG_CMTB_Zone_Realign_Enter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_Zone_Realign_Enter@@@8		; JMG_CMTB_Zone_Realign_Enter `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_Zone_Realign_Enter@@8		; JMG_CMTB_Zone_Realign_Enter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_Zone_Realign_Enter@@8		; JMG_CMTB_Zone_Realign_Enter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_Zone_Realign_Enter@@8	; JMG_CMTB_Zone_Realign_Enter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_Spectator_Object@@6B@		; JMG_CMTB_Spectator_Object::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_Spectator_Object@@@8		; JMG_CMTB_Spectator_Object `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_Spectator_Object@@8		; JMG_CMTB_Spectator_Object::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_Spectator_Object@@8		; JMG_CMTB_Spectator_Object::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_Spectator_Object@@8	; JMG_CMTB_Spectator_Object::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_Arcade_Machine@@6B@		; JMG_CMTB_Arcade_Machine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_Arcade_Machine@@@8		; JMG_CMTB_Arcade_Machine `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_Arcade_Machine@@8			; JMG_CMTB_Arcade_Machine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_Arcade_Machine@@8			; JMG_CMTB_Arcade_Machine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_Arcade_Machine@@8	; JMG_CMTB_Arcade_Machine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_Fake_Player_Attach_Script@@6B@	; JMG_CMTB_Fake_Player_Attach_Script::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_Fake_Player_Attach_Script@@@8	; JMG_CMTB_Fake_Player_Attach_Script `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_Fake_Player_Attach_Script@@8	; JMG_CMTB_Fake_Player_Attach_Script::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_Fake_Player_Attach_Script@@8	; JMG_CMTB_Fake_Player_Attach_Script::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_Fake_Player_Attach_Script@@8 ; JMG_CMTB_Fake_Player_Attach_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_Renegade_Code@@6B@		; JMG_CMTB_Renegade_Code::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_Renegade_Code@@@8		; JMG_CMTB_Renegade_Code `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_Renegade_Code@@8			; JMG_CMTB_Renegade_Code::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_Renegade_Code@@8			; JMG_CMTB_Renegade_Code::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_Renegade_Code@@8		; JMG_CMTB_Renegade_Code::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_Motion_Mine@@6B@			; JMG_CMTB_Motion_Mine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_Motion_Mine@@@8		; JMG_CMTB_Motion_Mine `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_Motion_Mine@@8			; JMG_CMTB_Motion_Mine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_Motion_Mine@@8			; JMG_CMTB_Motion_Mine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_Motion_Mine@@8		; JMG_CMTB_Motion_Mine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_The_Moon_Script@@6B@		; JMG_CMTB_The_Moon_Script::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_The_Moon_Script@@@8		; JMG_CMTB_The_Moon_Script `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_The_Moon_Script@@8		; JMG_CMTB_The_Moon_Script::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_The_Moon_Script@@8		; JMG_CMTB_The_Moon_Script::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_The_Moon_Script@@8	; JMG_CMTB_The_Moon_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_Ship_Super_Weapon@@6B@		; JMG_CMTB_Ship_Super_Weapon::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_Ship_Super_Weapon@@@8		; JMG_CMTB_Ship_Super_Weapon `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_Ship_Super_Weapon@@8		; JMG_CMTB_Ship_Super_Weapon::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_Ship_Super_Weapon@@8		; JMG_CMTB_Ship_Super_Weapon::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_Ship_Super_Weapon@@8	; JMG_CMTB_Ship_Super_Weapon::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_Powerup_Script@@6B@		; JMG_CMTB_Powerup_Script::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_Powerup_Script@@@8		; JMG_CMTB_Powerup_Script `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_Powerup_Script@@8			; JMG_CMTB_Powerup_Script::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_Powerup_Script@@8			; JMG_CMTB_Powerup_Script::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_Powerup_Script@@8	; JMG_CMTB_Powerup_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_Cargo_Ship_Script@@6B@		; JMG_CMTB_Cargo_Ship_Script::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_Cargo_Ship_Script@@@8		; JMG_CMTB_Cargo_Ship_Script `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_Cargo_Ship_Script@@8		; JMG_CMTB_Cargo_Ship_Script::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_Cargo_Ship_Script@@8		; JMG_CMTB_Cargo_Ship_Script::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_Cargo_Ship_Script@@8	; JMG_CMTB_Cargo_Ship_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_Cargo_Ship_Turret@@6B@		; JMG_CMTB_Cargo_Ship_Turret::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_Cargo_Ship_Turret@@@8		; JMG_CMTB_Cargo_Ship_Turret `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_Cargo_Ship_Turret@@8		; JMG_CMTB_Cargo_Ship_Turret::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_Cargo_Ship_Turret@@8		; JMG_CMTB_Cargo_Ship_Turret::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_Cargo_Ship_Turret@@8	; JMG_CMTB_Cargo_Ship_Turret::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_Player_Drone@@6B@			; JMG_CMTB_Player_Drone::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_Player_Drone@@@8		; JMG_CMTB_Player_Drone `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_Player_Drone@@8			; JMG_CMTB_Player_Drone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_Player_Drone@@8			; JMG_CMTB_Player_Drone::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_Player_Drone@@8		; JMG_CMTB_Player_Drone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_Create_Ship_On_Poke@@6B@		; JMG_Create_Ship_On_Poke::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_Create_Ship_On_Poke@@@8		; JMG_Create_Ship_On_Poke `RTTI Type Descriptor'
PUBLIC	??_R3JMG_Create_Ship_On_Poke@@8			; JMG_Create_Ship_On_Poke::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_Create_Ship_On_Poke@@8			; JMG_Create_Ship_On_Poke::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_Create_Ship_On_Poke@@8	; JMG_Create_Ship_On_Poke::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_Advanced_Bounce_Zone@@6B@		; JMG_Advanced_Bounce_Zone::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_Advanced_Bounce_Zone@@@8		; JMG_Advanced_Bounce_Zone `RTTI Type Descriptor'
PUBLIC	??_R3JMG_Advanced_Bounce_Zone@@8		; JMG_Advanced_Bounce_Zone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_Advanced_Bounce_Zone@@8		; JMG_Advanced_Bounce_Zone::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_Advanced_Bounce_Zone@@8	; JMG_Advanced_Bounce_Zone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_Ship_Random_Hyperspace@@6B@		; JMG_Ship_Random_Hyperspace::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_Ship_Random_Hyperspace@@@8		; JMG_Ship_Random_Hyperspace `RTTI Type Descriptor'
PUBLIC	??_R3JMG_Ship_Random_Hyperspace@@8		; JMG_Ship_Random_Hyperspace::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_Ship_Random_Hyperspace@@8		; JMG_Ship_Random_Hyperspace::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_Ship_Random_Hyperspace@@8	; JMG_Ship_Random_Hyperspace::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_Random_Music@@6B@			; JMG_Random_Music::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_Random_Music@@@8			; JMG_Random_Music `RTTI Type Descriptor'
PUBLIC	??_R3JMG_Random_Music@@8			; JMG_Random_Music::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_Random_Music@@8			; JMG_Random_Music::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_Random_Music@@8		; JMG_Random_Music::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_Ship_Weapon@@6B@			; JMG_Ship_Weapon::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_Ship_Weapon@@@8			; JMG_Ship_Weapon `RTTI Type Descriptor'
PUBLIC	??_R3JMG_Ship_Weapon@@8				; JMG_Ship_Weapon::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_Ship_Weapon@@8				; JMG_Ship_Weapon::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_Ship_Weapon@@8		; JMG_Ship_Weapon::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_Return_Custom_When_Shot@@6B@		; JMG_Return_Custom_When_Shot::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_Return_Custom_When_Shot@@@8		; JMG_Return_Custom_When_Shot `RTTI Type Descriptor'
PUBLIC	??_R3JMG_Return_Custom_When_Shot@@8		; JMG_Return_Custom_When_Shot::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_Return_Custom_When_Shot@@8		; JMG_Return_Custom_When_Shot::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_Return_Custom_When_Shot@@8	; JMG_Return_Custom_When_Shot::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_Cronie_AI@@6B@				; JMG_Cronie_AI::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_Cronie_AI@@@8			; JMG_Cronie_AI `RTTI Type Descriptor'
PUBLIC	??_R3JMG_Cronie_AI@@8				; JMG_Cronie_AI::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_Cronie_AI@@8				; JMG_Cronie_AI::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_Cronie_AI@@8			; JMG_Cronie_AI::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_Kill_Self_And_Sender_On_Custom@@6B@	; JMG_Kill_Self_And_Sender_On_Custom::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_Kill_Self_And_Sender_On_Custom@@@8	; JMG_Kill_Self_And_Sender_On_Custom `RTTI Type Descriptor'
PUBLIC	??_R3JMG_Kill_Self_And_Sender_On_Custom@@8	; JMG_Kill_Self_And_Sender_On_Custom::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_Kill_Self_And_Sender_On_Custom@@8	; JMG_Kill_Self_And_Sender_On_Custom::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_Kill_Self_And_Sender_On_Custom@@8 ; JMG_Kill_Self_And_Sender_On_Custom::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_Ship_Shield_Control_Script@@6B@	; JMG_Ship_Shield_Control_Script::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_Ship_Shield_Control_Script@@@8	; JMG_Ship_Shield_Control_Script `RTTI Type Descriptor'
PUBLIC	??_R3JMG_Ship_Shield_Control_Script@@8		; JMG_Ship_Shield_Control_Script::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_Ship_Shield_Control_Script@@8		; JMG_Ship_Shield_Control_Script::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_Ship_Shield_Control_Script@@8	; JMG_Ship_Shield_Control_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_Kill_Self_And_Sender_On_Custom_Ship@@6B@ ; JMG_Kill_Self_And_Sender_On_Custom_Ship::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_Kill_Self_And_Sender_On_Custom_Ship@@@8 ; JMG_Kill_Self_And_Sender_On_Custom_Ship `RTTI Type Descriptor'
PUBLIC	??_R3JMG_Kill_Self_And_Sender_On_Custom_Ship@@8	; JMG_Kill_Self_And_Sender_On_Custom_Ship::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_Kill_Self_And_Sender_On_Custom_Ship@@8	; JMG_Kill_Self_And_Sender_On_Custom_Ship::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_Kill_Self_And_Sender_On_Custom_Ship@@8 ; JMG_Kill_Self_And_Sender_On_Custom_Ship::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_Ship_Shield_Script@@6B@		; JMG_Ship_Shield_Script::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_Ship_Shield_Script@@@8		; JMG_Ship_Shield_Script `RTTI Type Descriptor'
PUBLIC	??_R3JMG_Ship_Shield_Script@@8			; JMG_Ship_Shield_Script::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_Ship_Shield_Script@@8			; JMG_Ship_Shield_Script::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_Ship_Shield_Script@@8		; JMG_Ship_Shield_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_Renetbusters_Object@@6B@		; JMG_Renetbusters_Object::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_Renetbusters_Object@@@8		; JMG_Renetbusters_Object `RTTI Type Descriptor'
PUBLIC	??_R3JMG_Renetbusters_Object@@8			; JMG_Renetbusters_Object::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_Renetbusters_Object@@8			; JMG_Renetbusters_Object::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_Renetbusters_Object@@8	; JMG_Renetbusters_Object::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_New_Ship_Weapon_Control_System@@6B@	; JMG_New_Ship_Weapon_Control_System::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_New_Ship_Weapon_Control_System@@@8	; JMG_New_Ship_Weapon_Control_System `RTTI Type Descriptor'
PUBLIC	??_R3JMG_New_Ship_Weapon_Control_System@@8	; JMG_New_Ship_Weapon_Control_System::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_New_Ship_Weapon_Control_System@@8	; JMG_New_Ship_Weapon_Control_System::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_New_Ship_Weapon_Control_System@@8 ; JMG_New_Ship_Weapon_Control_System::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_Comet_Control_Script@@6B@		; JMG_Comet_Control_Script::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_Comet_Control_Script@@@8		; JMG_Comet_Control_Script `RTTI Type Descriptor'
PUBLIC	??_R3JMG_Comet_Control_Script@@8		; JMG_Comet_Control_Script::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_Comet_Control_Script@@8		; JMG_Comet_Control_Script::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_Comet_Control_Script@@8	; JMG_Comet_Control_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_Attach_And_Remove@@6B@			; JMG_Attach_And_Remove::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_Attach_And_Remove@@@8		; JMG_Attach_And_Remove `RTTI Type Descriptor'
PUBLIC	??_R3JMG_Attach_And_Remove@@8			; JMG_Attach_And_Remove::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_Attach_And_Remove@@8			; JMG_Attach_And_Remove::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_Attach_And_Remove@@8		; JMG_Attach_And_Remove::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_User_Auto_Enter_Ship@@6B@		; JMG_User_Auto_Enter_Ship::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_User_Auto_Enter_Ship@@@8		; JMG_User_Auto_Enter_Ship `RTTI Type Descriptor'
PUBLIC	??_R3JMG_User_Auto_Enter_Ship@@8		; JMG_User_Auto_Enter_Ship::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_User_Auto_Enter_Ship@@8		; JMG_User_Auto_Enter_Ship::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_User_Auto_Enter_Ship@@8	; JMG_User_Auto_Enter_Ship::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_Apply_Damage_On_Timer@@6B@		; JMG_Apply_Damage_On_Timer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_Apply_Damage_On_Timer@@@8		; JMG_Apply_Damage_On_Timer `RTTI Type Descriptor'
PUBLIC	??_R3JMG_Apply_Damage_On_Timer@@8		; JMG_Apply_Damage_On_Timer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_Apply_Damage_On_Timer@@8		; JMG_Apply_Damage_On_Timer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_Apply_Damage_On_Timer@@8	; JMG_Apply_Damage_On_Timer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_Vehicle_Face_Turret@@6B@		; JMG_CMTB_Vehicle_Face_Turret::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_Vehicle_Face_Turret@@@8	; JMG_CMTB_Vehicle_Face_Turret `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_Vehicle_Face_Turret@@8		; JMG_CMTB_Vehicle_Face_Turret::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_Vehicle_Face_Turret@@8		; JMG_CMTB_Vehicle_Face_Turret::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_Vehicle_Face_Turret@@8	; JMG_CMTB_Vehicle_Face_Turret::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_Poke_End_Map@@6B@			; JMG_CMTB_Poke_End_Map::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_Poke_End_Map@@@8		; JMG_CMTB_Poke_End_Map `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_Poke_End_Map@@8			; JMG_CMTB_Poke_End_Map::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_Poke_End_Map@@8			; JMG_CMTB_Poke_End_Map::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_Poke_End_Map@@8		; JMG_CMTB_Poke_End_Map::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JMG_CMTB_Poke_Change_Difficulty@@6B@	; JMG_CMTB_Poke_Change_Difficulty::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJMG_CMTB_Poke_Change_Difficulty@@@8	; JMG_CMTB_Poke_Change_Difficulty `RTTI Type Descriptor'
PUBLIC	??_R3JMG_CMTB_Poke_Change_Difficulty@@8		; JMG_CMTB_Poke_Change_Difficulty::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JMG_CMTB_Poke_Change_Difficulty@@8		; JMG_CMTB_Poke_Change_Difficulty::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JMG_CMTB_Poke_Change_Difficulty@@8 ; JMG_CMTB_Poke_Change_Difficulty::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@6B@ ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@@8 ; ScriptRegistrant<JMG_Create_Ship_On_Poke> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@8 ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@8 ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@8 ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@6B@ ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@@8 ; ScriptRegistrant<JMG_Advanced_Bounce_Zone> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@8 ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@8 ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@8 ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@6B@ ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@@8 ; ScriptRegistrant<JMG_Ship_Random_Hyperspace> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@8 ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@8 ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@8 ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_Random_Music@@@@6B@ ; ScriptRegistrant<JMG_Random_Music>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_Random_Music@@@@@8 ; ScriptRegistrant<JMG_Random_Music> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_Random_Music@@@@8	; ScriptRegistrant<JMG_Random_Music>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_Random_Music@@@@8	; ScriptRegistrant<JMG_Random_Music>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Random_Music@@@@8 ; ScriptRegistrant<JMG_Random_Music>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_Ship_Weapon@@@@6B@	; ScriptRegistrant<JMG_Ship_Weapon>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_Ship_Weapon@@@@@8 ; ScriptRegistrant<JMG_Ship_Weapon> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_Ship_Weapon@@@@8	; ScriptRegistrant<JMG_Ship_Weapon>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_Ship_Weapon@@@@8	; ScriptRegistrant<JMG_Ship_Weapon>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Ship_Weapon@@@@8 ; ScriptRegistrant<JMG_Ship_Weapon>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@6B@ ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@@8 ; ScriptRegistrant<JMG_Return_Custom_When_Shot> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@8 ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@8 ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@8 ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_Cronie_AI@@@@6B@	; ScriptRegistrant<JMG_Cronie_AI>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_Cronie_AI@@@@@8	; ScriptRegistrant<JMG_Cronie_AI> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_Cronie_AI@@@@8	; ScriptRegistrant<JMG_Cronie_AI>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_Cronie_AI@@@@8	; ScriptRegistrant<JMG_Cronie_AI>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Cronie_AI@@@@8 ; ScriptRegistrant<JMG_Cronie_AI>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@6B@ ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@@8 ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@8 ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@8 ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@8 ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@6B@ ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@@8 ; ScriptRegistrant<JMG_Ship_Shield_Control_Script> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@8 ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@8 ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@8 ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@6B@ ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@@8 ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@8 ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@8 ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@8 ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@6B@ ; ScriptRegistrant<JMG_Ship_Shield_Script>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@@8 ; ScriptRegistrant<JMG_Ship_Shield_Script> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@8 ; ScriptRegistrant<JMG_Ship_Shield_Script>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@8 ; ScriptRegistrant<JMG_Ship_Shield_Script>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@8 ; ScriptRegistrant<JMG_Ship_Shield_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@6B@ ; ScriptRegistrant<JMG_Renetbusters_Object>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@@8 ; ScriptRegistrant<JMG_Renetbusters_Object> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@8 ; ScriptRegistrant<JMG_Renetbusters_Object>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@8 ; ScriptRegistrant<JMG_Renetbusters_Object>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@8 ; ScriptRegistrant<JMG_Renetbusters_Object>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@6B@ ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@@8 ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@8 ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@8 ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@8 ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@6B@ ; ScriptRegistrant<JMG_Comet_Control_Script>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@@8 ; ScriptRegistrant<JMG_Comet_Control_Script> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@8 ; ScriptRegistrant<JMG_Comet_Control_Script>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@8 ; ScriptRegistrant<JMG_Comet_Control_Script>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@8 ; ScriptRegistrant<JMG_Comet_Control_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@6B@ ; ScriptRegistrant<JMG_Attach_And_Remove>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@@8 ; ScriptRegistrant<JMG_Attach_And_Remove> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@8 ; ScriptRegistrant<JMG_Attach_And_Remove>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@8 ; ScriptRegistrant<JMG_Attach_And_Remove>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@8 ; ScriptRegistrant<JMG_Attach_And_Remove>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@6B@ ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@@8 ; ScriptRegistrant<JMG_User_Auto_Enter_Ship> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@8 ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@8 ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@8 ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@6B@ ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@@8 ; ScriptRegistrant<JMG_Apply_Damage_On_Timer> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@8 ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@8 ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@8 ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@@8 ; ScriptRegistrant<JMG_CMTB_Main_Game_Control> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@8 ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@8 ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@8 ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@@8 ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@6B@ ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@@8 ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@8 ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@8 ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@8 ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Comet_Script>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@@8 ; ScriptRegistrant<JMG_CMTB_Comet_Script> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Comet_Script>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Comet_Script>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Comet_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@@8 ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@8 ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@8 ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@8 ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@@8 ; ScriptRegistrant<JMG_CMTB_Spectator_Object> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@8 ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@8 ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@8 ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@@8 ; ScriptRegistrant<JMG_CMTB_Arcade_Machine> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@8 ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@8 ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@8 ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@@8 ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@@8 ; ScriptRegistrant<JMG_CMTB_Renegade_Code> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@8 ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@8 ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@8 ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@@8 ; ScriptRegistrant<JMG_CMTB_Motion_Mine> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@8 ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@8 ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@8 ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@@8 ; ScriptRegistrant<JMG_CMTB_The_Moon_Script> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@@8 ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@8 ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@8 ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@8 ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@@8 ; ScriptRegistrant<JMG_CMTB_Powerup_Script> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@@8 ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@@8 ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@8 ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@8 ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@8 ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Player_Drone>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@@8 ; ScriptRegistrant<JMG_CMTB_Player_Drone> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@8 ; ScriptRegistrant<JMG_CMTB_Player_Drone>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@8 ; ScriptRegistrant<JMG_CMTB_Player_Drone>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@8 ; ScriptRegistrant<JMG_CMTB_Player_Drone>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@@8 ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@8 ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@8 ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@8 ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@@8 ; ScriptRegistrant<JMG_CMTB_Poke_End_Map> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@8 ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@8 ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@8 ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@@8 ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@8 ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@8 ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@8 ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@02081cea
PUBLIC	__real@3c23d70a
PUBLIC	__real@3ccccccd
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3dcccccd
PUBLIC	__real@3dd851ec
PUBLIC	__real@3e19999a
PUBLIC	__real@3e48b439
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3e800000
PUBLIC	__real@3ea66666
PUBLIC	__real@3ea8f5c3
PUBLIC	__real@3eb33333
PUBLIC	__real@3eb851ec
PUBLIC	__real@3eeae7d5
PUBLIC	__real@3f000000
PUBLIC	__real@3f3ab9f5
PUBLIC	__real@3f400000
PUBLIC	__real@3f466666
PUBLIC	__real@3f70a3d7
PUBLIC	__real@3f79999a
PUBLIC	__real@3f800000
PUBLIC	__real@3f900000
PUBLIC	__real@3f9999999999999a
PUBLIC	__real@3fa00000
PUBLIC	__real@3fa20000
PUBLIC	__real@3fa999999999999a
PUBLIC	__real@3fb4fdf4
PUBLIC	__real@3fbd9168
PUBLIC	__real@3fc00000
PUBLIC	__real@3fc51eb851eb851f
PUBLIC	__real@3fc80000
PUBLIC	__real@3fc90fdb
PUBLIC	__real@3fc999999999999a
PUBLIC	__real@3fd51eb851eb851f
PUBLIC	__real@3fd999999999999a
PUBLIC	__real@3fdccccccccccccd
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe51eb851eb851f
PUBLIC	__real@3fe6666666666666
PUBLIC	__real@3fe8000000000000
PUBLIC	__real@3fe999999999999a
PUBLIC	__real@3feccccccccccccd
PUBLIC	__real@3fee666666666666
PUBLIC	__real@3fef0a3d70a3d70a
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@40100000
PUBLIC	__real@40200000
PUBLIC	__real@4024000000000000
PUBLIC	__real@402e000000000000
PUBLIC	__real@4034000000000000
PUBLIC	__real@40400000
PUBLIC	__real@40490fdb
PUBLIC	__real@4059000000000000
PUBLIC	__real@40800000
PUBLIC	__real@40900000
PUBLIC	__real@40a00000
PUBLIC	__real@40c80000
PUBLIC	__real@40c90fdb
PUBLIC	__real@40d0f5c3
PUBLIC	__real@40db580000000000
PUBLIC	__real@41000000
PUBLIC	__real@410c0000
PUBLIC	__real@41100000
PUBLIC	__real@41200000
PUBLIC	__real@41300000
PUBLIC	__real@41480000
PUBLIC	__real@41700000
PUBLIC	__real@41a00000
PUBLIC	__real@41a20000
PUBLIC	__real@41c80000
PUBLIC	__real@41f00000
PUBLIC	__real@42040000
PUBLIC	__real@42340000
PUBLIC	__real@42480000
PUBLIC	__real@424d0000
PUBLIC	__real@42610000
PUBLIC	__real@42700000
PUBLIC	__real@42870000
PUBLIC	__real@42960000
PUBLIC	__real@42a00000
PUBLIC	__real@42aa0000
PUBLIC	__real@42b00000
PUBLIC	__real@42b20000
PUBLIC	__real@42b40000
PUBLIC	__real@42be0000
PUBLIC	__real@42c60000
PUBLIC	__real@42c80000
PUBLIC	__real@43020000
PUBLIC	__real@431c4000
PUBLIC	__real@43340000
PUBLIC	__real@43480000
PUBLIC	__real@43610000
PUBLIC	__real@437a0000
PUBLIC	__real@437f0000
PUBLIC	__real@43960000
PUBLIC	__real@43b40000
PUBLIC	__real@43c80000
PUBLIC	__real@44000000
PUBLIC	__real@441c4000
PUBLIC	__real@44480000
PUBLIC	__real@447a0000
PUBLIC	__real@44800000
PUBLIC	__real@44ed6000
PUBLIC	__real@451c4000
PUBLIC	__real@45242900
PUBLIC	__real@45afc800
PUBLIC	__real@460c9c00
PUBLIC	__real@460ca000
PUBLIC	__real@461c3f9a
PUBLIC	__real@461c3ff6
PUBLIC	__real@461c4000
PUBLIC	__real@46afc800
PUBLIC	__real@47c34ff3
PUBLIC	__real@47c34fff
PUBLIC	__real@47c35000
PUBLIC	__real@4b18967f
PUBLIC	__real@4b189680
PUBLIC	__real@bc23d70a
PUBLIC	__real@bf2147ae
PUBLIC	__real@bf800000
PUBLIC	__real@c0000000
PUBLIC	__real@c1200000
PUBLIC	__real@c2040000
PUBLIC	__real@c2340000
PUBLIC	__real@c2480000
PUBLIC	__real@c2a00000
PUBLIC	__real@c2aa0000
PUBLIC	__real@c2b40000
PUBLIC	__real@c2c80000
PUBLIC	__real@c3340000
PUBLIC	__real@c3960000
PUBLIC	__real@c47a0000
PUBLIC	__xmm@41f00000000000000000000000000000
PUBLIC	__xmm@7fffffffffffffff7fffffffffffffff
PUBLIC	__xmm@80000000000000008000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__imp___wassert:PROC
EXTRN	__imp__atof:PROC
EXTRN	__imp__ceil:PROC
EXTRN	__imp__atoi:PROC
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	__imp__fclose:PROC
EXTRN	__imp__feof:PROC
EXTRN	__imp__fgets:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp__remove:PROC
EXTRN	__imp__rename:PROC
EXTRN	__imp__sscanf:PROC
EXTRN	__imp__vsprintf_s:PROC
EXTRN	__imp__sprintf:PROC
EXTRN	__imp___stricmp:PROC
EXTRN	__imp__GetCurrentThreadId@0:PROC
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	__imp___localtime64:PROC
EXTRN	__imp___mktime64:PROC
EXTRN	__imp___time64:PROC
EXTRN	?SetThreadTrackingInformation@@YAXPBDI0@Z:PROC	; SetThreadTrackingInformation
EXTRN	?Random_Float@WWMath@@SAMXZ:PROC		; WWMath::Random_Float
EXTRN	??0ScriptImpClass@@QAE@XZ:PROC			; ScriptImpClass::ScriptImpClass
EXTRN	?CheckPlayerType@ScriptImpClass@@QAEHPAVScriptableGameObj@@H@Z:PROC ; ScriptImpClass::CheckPlayerType
EXTRN	??1ScriptImpClass@@UAE@XZ:PROC			; ScriptImpClass::~ScriptImpClass
EXTRN	?Get_Name@ScriptImpClass@@UAEPBDXZ:PROC		; ScriptImpClass::Get_Name
EXTRN	?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z:PROC ; ScriptImpClass::Set_Parameters_String
EXTRN	?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z:PROC ; ScriptImpClass::Get_Parameters_String
EXTRN	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z:PROC	; ScriptImpClass::Get_Parameter
EXTRN	?Get_Parameter@ScriptImpClass@@QAEPBDH@Z:PROC	; ScriptImpClass::Get_Parameter
EXTRN	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z:PROC ; ScriptImpClass::Get_Int_Parameter
EXTRN	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z:PROC ; ScriptImpClass::Get_Float_Parameter
EXTRN	?Get_Vector3_Parameter@ScriptImpClass@@QAE?AVVector3@@PBD@Z:PROC ; ScriptImpClass::Get_Vector3_Parameter
EXTRN	?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z:PROC ; ScriptImpClass::Attach
EXTRN	?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z:PROC ; ScriptImpClass::Detach
EXTRN	?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z:PROC ; ScriptImpClass::Save
EXTRN	?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z:PROC ; ScriptImpClass::Load
EXTRN	??1ScriptFactory@@UAE@XZ:PROC			; ScriptFactory::~ScriptFactory
EXTRN	??0ScriptFactory@@IAE@PBD0@Z:PROC		; ScriptFactory::ScriptFactory
EXTRN	?Console_Input@@YAXPBD@Z:PROC			; Console_Input
EXTRN	??1ThreadClass@@UAE@XZ:PROC			; ThreadClass::~ThreadClass
EXTRN	__imp_?Free_String@StringClass@@AAEXXZ:PROC
EXTRN	__imp_?Free_String@WideStringClass@@AAEXXZ:PROC
EXTRN	?Find_Entry@INIClass@@QBEPAUINIEntry@@PBD0@Z:PROC ; INIClass::Find_Entry
EXTRN	?Find_Section@INIClass@@QBEPAUINISection@@PBD@Z:PROC ; INIClass::Find_Section
EXTRN	??1INIClass@@UAE@XZ:PROC			; INIClass::~INIClass
EXTRN	?Get_File_Path@@YAPBDXZ:PROC			; Get_File_Path
EXTRN	?Set@Matrix3D@@QAEXABVMatrix3@@ABVVector3@@@Z:PROC ; Matrix3D::Set
EXTRN	?Set@Matrix3D@@QAEXABVQuaternion@@ABVVector3@@@Z:PROC ; Matrix3D::Set
EXTRN	?Send_Custom_All_Objects_Area@@YAXHABVVector3@@MPAVScriptableGameObj@@H@Z:PROC ; Send_Custom_All_Objects_Area
EXTRN	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z:PROC	; Get_GameObj
EXTRN	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z:PROC ; Get_Player_ID
EXTRN	?Get_Player_Name@@YAPBDPAVScriptableGameObj@@@Z:PROC ; Get_Player_Name
EXTRN	?Get_Player_Name_By_ID@@YAPBDH@Z:PROC		; Get_Player_Name_By_ID
EXTRN	?Set_Money@@YAXHM@Z:PROC			; Set_Money
EXTRN	?Get_Player_Type@@YAHPAVScriptableGameObj@@@Z:PROC ; Get_Player_Type
EXTRN	?Get_Bullets@@YAHPAVScriptableGameObj@@PBD@Z:PROC ; Get_Bullets
EXTRN	?Get_Total_Bullets@@YAHPAVScriptableGameObj@@PBD@Z:PROC ; Get_Total_Bullets
EXTRN	?Get_Current_Bullets@@YAHPAVScriptableGameObj@@@Z:PROC ; Get_Current_Bullets
EXTRN	?Get_Current_Clip_Bullets@@YAHPAVScriptableGameObj@@@Z:PROC ; Get_Current_Clip_Bullets
EXTRN	?Get_Current_Total_Bullets@@YAHPAVScriptableGameObj@@@Z:PROC ; Get_Current_Total_Bullets
EXTRN	?Get_Current_Weapon@@YAPBDPAVScriptableGameObj@@@Z:PROC ; Get_Current_Weapon
EXTRN	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z:PROC ; Get_Vehicle
EXTRN	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z:PROC ; Get_Vehicle_Driver
EXTRN	?Force_Occupants_Exit@@YAXPAVScriptableGameObj@@@Z:PROC ; Force_Occupants_Exit
EXTRN	?Get_Vehicle_Return@@YAPAVScriptableGameObj@@PAV1@@Z:PROC ; Get_Vehicle_Return
EXTRN	?Soldier_Transition_Vehicle@@YAXPAVScriptableGameObj@@@Z:PROC ; Soldier_Transition_Vehicle
EXTRN	?Set@Matrix3@@QAEXABVQuaternion@@@Z:PROC	; Matrix3::Set
EXTRN	??1ReferencerClass@@UAE@XZ:PROC			; ReferencerClass::~ReferencerClass
EXTRN	?On_Post_Load@ReferencerClass@@UAEXXZ:PROC	; ReferencerClass::On_Post_Load
EXTRN	??4ReferencerClass@@QAEAAV0@PAVScriptableGameObj@@@Z:PROC ; ReferencerClass::operator=
EXTRN	?Set@LineSegClass@@QAEXABV1@ABVMatrix3D@@@Z:PROC ; LineSegClass::Set
EXTRN	?Set_Max_Health@@YAXPAVScriptableGameObj@@M@Z:PROC ; Set_Max_Health
EXTRN	?Set_Max_Shield_Strength@@YAXPAVScriptableGameObj@@M@Z:PROC ; Set_Max_Shield_Strength
EXTRN	?Get_Shield_Type@@YAPBDPAVScriptableGameObj@@@Z:PROC ; Get_Shield_Type
EXTRN	?Get_Skin@@YAPBDPAVScriptableGameObj@@@Z:PROC	; Get_Skin
EXTRN	?Set_Skin@@YAXPAVScriptableGameObj@@PBD@Z:PROC	; Set_Skin
EXTRN	?Get_Model@@YAPBDPAVScriptableGameObj@@@Z:PROC	; Get_Model
EXTRN	?Get_Animation_Frame@@YAMPAVScriptableGameObj@@@Z:PROC ; Get_Animation_Frame
EXTRN	?Get_Mass@@YAMPAVScriptableGameObj@@@Z:PROC	; Get_Mass
EXTRN	?Get_Sex@@YADPAVScriptableGameObj@@@Z:PROC	; Get_Sex
EXTRN	?Remove_Script@@YAXPAVScriptableGameObj@@PBD@Z:PROC ; Remove_Script
EXTRN	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z:PROC ; Is_Script_Attached
EXTRN	?Attach_Script_Once@@YAXPAVScriptableGameObj@@PBD1@Z:PROC ; Attach_Script_Once
EXTRN	?Detach@JFW_Key_Hook_Base@@UAEXPAVScriptableGameObj@@@Z:PROC ; JFW_Key_Hook_Base::Detach
EXTRN	?Destroyed@JFW_Key_Hook_Base@@UAEXPAVScriptableGameObj@@@Z:PROC ; JFW_Key_Hook_Base::Destroyed
EXTRN	??1JFW_Key_Hook_Base@@UAE@XZ:PROC		; JFW_Key_Hook_Base::~JFW_Key_Hook_Base
EXTRN	?Detach@MultiKeyHookScriptImpClass@@UAEXPAVScriptableGameObj@@@Z:PROC ; MultiKeyHookScriptImpClass::Detach
EXTRN	?Destroyed@MultiKeyHookScriptImpClass@@UAEXPAVScriptableGameObj@@@Z:PROC ; MultiKeyHookScriptImpClass::Destroyed
EXTRN	??_E?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAXI@Z:PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`vector deleting destructor'
EXTRN	?Detach@JFW_Object_Created_Hook_Base@@UAEXPAVScriptableGameObj@@@Z:PROC ; JFW_Object_Created_Hook_Base::Detach
EXTRN	?Created@JFW_Object_Created_Hook_Base@@UAEXPAVScriptableGameObj@@@Z:PROC ; JFW_Object_Created_Hook_Base::Created
EXTRN	??1JFW_Object_Created_Hook_Base@@UAE@XZ:PROC	; JFW_Object_Created_Hook_Base::~JFW_Object_Created_Hook_Base
EXTRN	?Force_Vehicle_Entry@@YAXPAVScriptableGameObj@@0@Z:PROC ; Force_Vehicle_Entry
EXTRN	__imp___mkdir:PROC
EXTRN	??_EJMG_CMTB_Main_Game_Control@@UAEPAXI@Z:PROC	; JMG_CMTB_Main_Game_Control::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_UFO_Random_Fire_Control@@UAEPAXI@Z:PROC ; JMG_CMTB_UFO_Random_Fire_Control::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_Ship_Control_Script@@UAEPAXI@Z:PROC ; JMG_CMTB_Ship_Control_Script::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_Comet_Script@@UAEPAXI@Z:PROC	; JMG_CMTB_Comet_Script::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_Zone_Realign_Enter@@UAEPAXI@Z:PROC	; JMG_CMTB_Zone_Realign_Enter::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_Spectator_Object@@UAEPAXI@Z:PROC	; JMG_CMTB_Spectator_Object::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_Arcade_Machine@@UAEPAXI@Z:PROC	; JMG_CMTB_Arcade_Machine::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_Fake_Player_Attach_Script@@UAEPAXI@Z:PROC ; JMG_CMTB_Fake_Player_Attach_Script::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_Renegade_Code@@UAEPAXI@Z:PROC	; JMG_CMTB_Renegade_Code::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_Motion_Mine@@UAEPAXI@Z:PROC	; JMG_CMTB_Motion_Mine::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_The_Moon_Script@@UAEPAXI@Z:PROC	; JMG_CMTB_The_Moon_Script::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_Ship_Super_Weapon@@UAEPAXI@Z:PROC	; JMG_CMTB_Ship_Super_Weapon::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_Powerup_Script@@UAEPAXI@Z:PROC	; JMG_CMTB_Powerup_Script::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_Cargo_Ship_Script@@UAEPAXI@Z:PROC	; JMG_CMTB_Cargo_Ship_Script::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_Cargo_Ship_Turret@@UAEPAXI@Z:PROC	; JMG_CMTB_Cargo_Ship_Turret::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_Player_Drone@@UAEPAXI@Z:PROC	; JMG_CMTB_Player_Drone::`vector deleting destructor'
EXTRN	??_EJMG_Create_Ship_On_Poke@@UAEPAXI@Z:PROC	; JMG_Create_Ship_On_Poke::`vector deleting destructor'
EXTRN	??_EJMG_Advanced_Bounce_Zone@@UAEPAXI@Z:PROC	; JMG_Advanced_Bounce_Zone::`vector deleting destructor'
EXTRN	??_EJMG_Ship_Random_Hyperspace@@UAEPAXI@Z:PROC	; JMG_Ship_Random_Hyperspace::`vector deleting destructor'
EXTRN	??_EJMG_Random_Music@@UAEPAXI@Z:PROC		; JMG_Random_Music::`vector deleting destructor'
EXTRN	??_EJMG_Ship_Weapon@@UAEPAXI@Z:PROC		; JMG_Ship_Weapon::`vector deleting destructor'
EXTRN	??_EJMG_Return_Custom_When_Shot@@UAEPAXI@Z:PROC	; JMG_Return_Custom_When_Shot::`vector deleting destructor'
EXTRN	??_EJMG_Cronie_AI@@UAEPAXI@Z:PROC		; JMG_Cronie_AI::`vector deleting destructor'
EXTRN	??_EJMG_Kill_Self_And_Sender_On_Custom@@UAEPAXI@Z:PROC ; JMG_Kill_Self_And_Sender_On_Custom::`vector deleting destructor'
EXTRN	??_EJMG_Ship_Shield_Control_Script@@UAEPAXI@Z:PROC ; JMG_Ship_Shield_Control_Script::`vector deleting destructor'
EXTRN	??_EJMG_Kill_Self_And_Sender_On_Custom_Ship@@UAEPAXI@Z:PROC ; JMG_Kill_Self_And_Sender_On_Custom_Ship::`vector deleting destructor'
EXTRN	??_EJMG_Ship_Shield_Script@@UAEPAXI@Z:PROC	; JMG_Ship_Shield_Script::`vector deleting destructor'
EXTRN	??_EJMG_Renetbusters_Object@@UAEPAXI@Z:PROC	; JMG_Renetbusters_Object::`vector deleting destructor'
EXTRN	??_EJMG_New_Ship_Weapon_Control_System@@UAEPAXI@Z:PROC ; JMG_New_Ship_Weapon_Control_System::`vector deleting destructor'
EXTRN	??_EJMG_Comet_Control_Script@@UAEPAXI@Z:PROC	; JMG_Comet_Control_Script::`vector deleting destructor'
EXTRN	??_EJMG_Attach_And_Remove@@UAEPAXI@Z:PROC	; JMG_Attach_And_Remove::`vector deleting destructor'
EXTRN	??_EJMG_User_Auto_Enter_Ship@@UAEPAXI@Z:PROC	; JMG_User_Auto_Enter_Ship::`vector deleting destructor'
EXTRN	??_EJMG_Apply_Damage_On_Timer@@UAEPAXI@Z:PROC	; JMG_Apply_Damage_On_Timer::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_Vehicle_Face_Turret@@UAEPAXI@Z:PROC ; JMG_CMTB_Vehicle_Face_Turret::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_Poke_End_Map@@UAEPAXI@Z:PROC	; JMG_CMTB_Poke_End_Map::`vector deleting destructor'
EXTRN	??_EJMG_CMTB_Poke_Change_Difficulty@@UAEPAXI@Z:PROC ; JMG_CMTB_Poke_Change_Difficulty::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_Random_Music@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_Random_Music>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_Ship_Weapon@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_Ship_Weapon>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_Cronie_AI@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_Cronie_AI>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_Ship_Shield_Script>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_Renetbusters_Object>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_Comet_Control_Script>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_Attach_And_Remove>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_Comet_Script>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_Player_Drone>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::`vector deleting destructor'
EXTRN	__CIatan2:PROC
EXTRN	__chkstk:PROC
EXTRN	__libm_sse2_acos_precise:PROC
EXTRN	__libm_sse2_asin_precise:PROC
EXTRN	__libm_sse2_atan_precise:PROC
EXTRN	__libm_sse2_cos_precise:PROC
EXTRN	__libm_sse2_sin_precise:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	__libm_sse2_tan_precise:PROC
EXTRN	_floor:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?_FastAcosTable@@3AAV?$RefArrayHelper@M$0EAA@@@A:DWORD ; _FastAcosTable
EXTRN	?_FastAsinTable@@3AAV?$RefArrayHelper@M$0EAA@@@A:DWORD ; _FastAsinTable
EXTRN	?_FastSinTable@@3AAV?$RefArrayHelper@M$0EAA@@@A:DWORD ; _FastSinTable
EXTRN	?Commands@@3PAUScriptCommands@@A:DWORD		; Commands
EXTRN	?Set_Current_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA:DWORD ; Set_Current_Bullets
EXTRN	?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA:DWORD ; Set_Current_Clip_Bullets
EXTRN	?Set_Bullets@@3P6AXPAVScriptableGameObj@@PBDH@ZA:DWORD ; Set_Bullets
EXTRN	?Set_Background_Music_Player@@3P6AXPAVScriptableGameObj@@PBD@ZA:DWORD ; Set_Background_Music_Player
EXTRN	?Fade_Background_Music_Player@@3P6AXPAVScriptableGameObj@@PBDHH@ZA:DWORD ; Fade_Background_Music_Player
EXTRN	?Set_Screen_Fade_Color_Player@@3P6AXPAVScriptableGameObj@@MMMM@ZA:DWORD ; Set_Screen_Fade_Color_Player
EXTRN	?Set_Screen_Fade_Opacity_Player@@3P6AXPAVScriptableGameObj@@MM@ZA:DWORD ; Set_Screen_Fade_Opacity_Player
EXTRN	?Force_Camera_Look_Player@@3P6AXPAVScriptableGameObj@@ABVVector3@@@ZA:DWORD ; Force_Camera_Look_Player
EXTRN	?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA:DWORD ; Create_2D_Sound_Player
EXTRN	?Create_2D_WAV_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA:DWORD ; Create_2D_WAV_Sound_Player
EXTRN	?Send_Message_Player@@3P6AXPAVScriptableGameObj@@IIIPBD@ZA:DWORD ; Send_Message_Player
EXTRN	?Update_Network_Object@@3P6AXPAVNetworkObjectClass@@@ZA:DWORD ; Update_Network_Object
EXTRN	?Force_Position_Update@@3P6AXPAVScriptableGameObj@@@ZA:DWORD ; Force_Position_Update
EXTRN	?Set_HUD_Help_Text_Player_Text@@3P6AXPAVScriptableGameObj@@HPBDVVector3@@@ZA:DWORD ; Set_HUD_Help_Text_Player_Text
EXTRN	?Force_Orientation_Update@@3P6AXPAVScriptableGameObj@@@ZA:DWORD ; Force_Orientation_Update
EXTRN	?Force_Velocity_Update@@3P6AXPAVScriptableGameObj@@@ZA:DWORD ; Force_Velocity_Update
EXTRN	__fltused:DWORD
;	COMDAT ?FinalString@?1??Rp2Encrypt@JmgUtility@@SAPADPBDHH@Z@4PADA
_BSS	SEGMENT
?FinalString@?1??Rp2Encrypt@JmgUtility@@SAPADPBDHH@Z@4PADA DB 010000H DUP (?) ; `JmgUtility::Rp2Encrypt'::`2'::FinalString
_BSS	ENDS
;	COMDAT ?FinalString@?1??Rp2Encrypt2@JmgUtility@@SAPADPBDHH@Z@4PADA
_BSS	SEGMENT
?FinalString@?1??Rp2Encrypt2@JmgUtility@@SAPADPBDHH@Z@4PADA DB 010000H DUP (?) ; `JmgUtility::Rp2Encrypt2'::`2'::FinalString
_BSS	ENDS
;	COMDAT ?FinalString@?1??Rp2Decrypt@JmgUtility@@SAPADPBDHH@Z@4PADA
_BSS	SEGMENT
?FinalString@?1??Rp2Decrypt@JmgUtility@@SAPADPBDHH@Z@4PADA DB 010020H DUP (?) ; `JmgUtility::Rp2Decrypt'::`2'::FinalString
_BSS	ENDS
_BSS	SEGMENT
?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A DB 02cH DUP (?) ; PerkTypeSystem
	ALIGN	8

?PlayerPerkSystemControl@@3VPlayerPerksNodeControlSystem@@A DQ 01H DUP (?) ; PlayerPerkSystemControl
_BSS	ENDS
;	COMDAT ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA
_BSS	SEGMENT
?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA DB 0c8H DUP (?) ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
_BSS	ENDS
_BSS	SEGMENT
?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A DB 02090H DUP (?) ; RenCometBustersScoreControl
?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A DB 012a0H DUP (?) ; MiniGamePlayerControlSystem
?RenCometBustersList@@3VRenCometBustersGameObjects@@A DD 01H DUP (?) ; RenCometBustersList
?JMG_Create_Ship_On_Poke_Registrant@@3V?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@A DB 010H DUP (?) ; JMG_Create_Ship_On_Poke_Registrant
?JMG_Advanced_Bounce_Zone_Registrant@@3V?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@A DB 010H DUP (?) ; JMG_Advanced_Bounce_Zone_Registrant
?JMG_Ship_Random_Hyperspace_Registrant@@3V?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@A DB 010H DUP (?) ; JMG_Ship_Random_Hyperspace_Registrant
?JMG_Random_Music_Registrant@@3V?$ScriptRegistrant@VJMG_Random_Music@@@@A DB 010H DUP (?) ; JMG_Random_Music_Registrant
?JMG_Ship_Weapon_Registrant@@3V?$ScriptRegistrant@VJMG_Ship_Weapon@@@@A DB 010H DUP (?) ; JMG_Ship_Weapon_Registrant
?JMG_Return_Custom_When_Shot_Registrant@@3V?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@A DB 010H DUP (?) ; JMG_Return_Custom_When_Shot_Registrant
?JMG_Cronie_AI_Registrant@@3V?$ScriptRegistrant@VJMG_Cronie_AI@@@@A DB 010H DUP (?) ; JMG_Cronie_AI_Registrant
?JMG_Kill_Self_And_Sender_On_Custom_Registrant@@3V?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@A DB 010H DUP (?) ; JMG_Kill_Self_And_Sender_On_Custom_Registrant
?JMG_Ship_Shield_Control_Script_Registrant@@3V?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@A DB 010H DUP (?) ; JMG_Ship_Shield_Control_Script_Registrant
?JMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant@@3V?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@A DB 010H DUP (?) ; JMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant
?JMG_Ship_Shield_Script_Registrant@@3V?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@A DB 010H DUP (?) ; JMG_Ship_Shield_Script_Registrant
?JMG_Renetbusters_Object_Registrant@@3V?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@A DB 010H DUP (?) ; JMG_Renetbusters_Object_Registrant
?JMG_New_Ship_Weapon_Control_System_Registrant@@3V?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@A DB 010H DUP (?) ; JMG_New_Ship_Weapon_Control_System_Registrant
?JMG_Comet_Control_Script_Registrant@@3V?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@A DB 010H DUP (?) ; JMG_Comet_Control_Script_Registrant
?JMG_Attach_And_Remove_Registrant@@3V?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@A DB 010H DUP (?) ; JMG_Attach_And_Remove_Registrant
?JMG_User_Auto_Enter_Ship_Registrant@@3V?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@A DB 010H DUP (?) ; JMG_User_Auto_Enter_Ship_Registrant
?JMG_Apply_Damage_On_Timer_Registrant@@3V?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@A DB 010H DUP (?) ; JMG_Apply_Damage_On_Timer_Registrant
?JMG_CMTB_Main_Game_Control_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@A DB 010H DUP (?) ; JMG_CMTB_Main_Game_Control_Registrant
?JMG_CMTB_Ship_Control_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@A DB 010H DUP (?) ; JMG_CMTB_Ship_Control_Script_Registrant
?JMG_CMTB_UFO_Random_Fire_Control_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@A DB 010H DUP (?) ; JMG_CMTB_UFO_Random_Fire_Control_Registrant
?JMG_CMTB_Comet_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@A DB 010H DUP (?) ; JMG_CMTB_Comet_Script_Registrant
?JMG_CMTB_Zone_Realign_Enter_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@A DB 010H DUP (?) ; JMG_CMTB_Zone_Realign_Enter_Registrant
?JMG_CMTB_Spectator_Object_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@A DB 010H DUP (?) ; JMG_CMTB_Spectator_Object_Registrant
?JMG_CMTB_Arcade_Machine_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@A DB 010H DUP (?) ; JMG_CMTB_Arcade_Machine_Registrant
?JMG_CMTB_Fake_Player_Attach_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@A DB 010H DUP (?) ; JMG_CMTB_Fake_Player_Attach_Script_Registrant
?JMG_CMTB_Renegade_Code_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@A DB 010H DUP (?) ; JMG_CMTB_Renegade_Code_Registrant
?JMG_CMTB_Motion_Mine_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@A DB 010H DUP (?) ; JMG_CMTB_Motion_Mine_Registrant
?JMG_CMTB_The_Moon_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@A DB 010H DUP (?) ; JMG_CMTB_The_Moon_Script_Registrant
?JMG_CMTB_Ship_Super_Weapon_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@A DB 010H DUP (?) ; JMG_CMTB_Ship_Super_Weapon_Registrant
?JMG_CMTB_Powerup_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@A DB 010H DUP (?) ; JMG_CMTB_Powerup_Script_Registrant
?JMG_CMTB_Cargo_Ship_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@A DB 010H DUP (?) ; JMG_CMTB_Cargo_Ship_Script_Registrant
?JMG_CMTB_Cargo_Ship_Turret_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@A DB 010H DUP (?) ; JMG_CMTB_Cargo_Ship_Turret_Registrant
?JMG_CMTB_Player_Drone_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@A DB 010H DUP (?) ; JMG_CMTB_Player_Drone_Registrant
?JMG_CMTB_Vehicle_Face_Turret_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@A DB 010H DUP (?) ; JMG_CMTB_Vehicle_Face_Turret_Registrant
?JMG_CMTB_Poke_End_Map_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@A DB 010H DUP (?) ; JMG_CMTB_Poke_End_Map_Registrant
?JMG_CMTB_Poke_Change_Difficulty_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@A DB 010H DUP (?) ; JMG_CMTB_Poke_Change_Difficulty_Registrant
_BSS	ENDS
;	COMDAT ?instancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@4V3@A
_BSS	SEGMENT
?instancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@4V3@A DB 014H DUP (?) ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::instancex
_BSS	ENDS
;	COMDAT ??_B?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@51
_BSS	SEGMENT
??_B?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@51 DD 01H DUP (?) ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::`local static guard'
_BSS	ENDS
CRT$XCU	SEGMENT
_PerkTypeSystem$initializer$ DD FLAT:??__EPerkTypeSystem@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@80000000000000008000000000000000
CONST	SEGMENT
__xmm@80000000000000008000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@7fffffffffffffff7fffffffffffffff
CONST	SEGMENT
__xmm@7fffffffffffffff7fffffffffffffff DB 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@c47a0000
CONST	SEGMENT
__real@c47a0000 DD 0c47a0000r			; -1000
CONST	ENDS
;	COMDAT __real@c3960000
CONST	SEGMENT
__real@c3960000 DD 0c3960000r			; -300
CONST	ENDS
;	COMDAT __real@c3340000
CONST	SEGMENT
__real@c3340000 DD 0c3340000r			; -180
CONST	ENDS
;	COMDAT __real@c2c80000
CONST	SEGMENT
__real@c2c80000 DD 0c2c80000r			; -100
CONST	ENDS
;	COMDAT __real@c2b40000
CONST	SEGMENT
__real@c2b40000 DD 0c2b40000r			; -90
CONST	ENDS
;	COMDAT __real@c2aa0000
CONST	SEGMENT
__real@c2aa0000 DD 0c2aa0000r			; -85
CONST	ENDS
;	COMDAT __real@c2a00000
CONST	SEGMENT
__real@c2a00000 DD 0c2a00000r			; -80
CONST	ENDS
;	COMDAT __real@c2480000
CONST	SEGMENT
__real@c2480000 DD 0c2480000r			; -50
CONST	ENDS
;	COMDAT __real@c2340000
CONST	SEGMENT
__real@c2340000 DD 0c2340000r			; -45
CONST	ENDS
;	COMDAT __real@c2040000
CONST	SEGMENT
__real@c2040000 DD 0c2040000r			; -33
CONST	ENDS
;	COMDAT __real@c1200000
CONST	SEGMENT
__real@c1200000 DD 0c1200000r			; -10
CONST	ENDS
;	COMDAT __real@c0000000
CONST	SEGMENT
__real@c0000000 DD 0c0000000r			; -2
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@bf2147ae
CONST	SEGMENT
__real@bf2147ae DD 0bf2147aer			; -0.63
CONST	ENDS
;	COMDAT __real@bc23d70a
CONST	SEGMENT
__real@bc23d70a DD 0bc23d70ar			; -0.01
CONST	ENDS
;	COMDAT __real@4b189680
CONST	SEGMENT
__real@4b189680 DD 04b189680r			; 1e+007
CONST	ENDS
;	COMDAT __real@4b18967f
CONST	SEGMENT
__real@4b18967f DD 04b18967fr			; 1e+007
CONST	ENDS
;	COMDAT __real@47c35000
CONST	SEGMENT
__real@47c35000 DD 047c35000r			; 100000
CONST	ENDS
;	COMDAT __real@47c34fff
CONST	SEGMENT
__real@47c34fff DD 047c34fffr			; 100000
CONST	ENDS
;	COMDAT __real@47c34ff3
CONST	SEGMENT
__real@47c34ff3 DD 047c34ff3r			; 99999.9
CONST	ENDS
;	COMDAT __real@46afc800
CONST	SEGMENT
__real@46afc800 DD 046afc800r			; 22500
CONST	ENDS
;	COMDAT __real@461c4000
CONST	SEGMENT
__real@461c4000 DD 0461c4000r			; 10000
CONST	ENDS
;	COMDAT __real@461c3ff6
CONST	SEGMENT
__real@461c3ff6 DD 0461c3ff6r			; 9999.99
CONST	ENDS
;	COMDAT __real@461c3f9a
CONST	SEGMENT
__real@461c3f9a DD 0461c3f9ar			; 9999.9
CONST	ENDS
;	COMDAT __real@460ca000
CONST	SEGMENT
__real@460ca000 DD 0460ca000r			; 9000
CONST	ENDS
;	COMDAT __real@460c9c00
CONST	SEGMENT
__real@460c9c00 DD 0460c9c00r			; 8999
CONST	ENDS
;	COMDAT __real@45afc800
CONST	SEGMENT
__real@45afc800 DD 045afc800r			; 5625
CONST	ENDS
;	COMDAT __real@45242900
CONST	SEGMENT
__real@45242900 DD 045242900r			; 2626.56
CONST	ENDS
;	COMDAT __real@451c4000
CONST	SEGMENT
__real@451c4000 DD 0451c4000r			; 2500
CONST	ENDS
;	COMDAT __real@44ed6000
CONST	SEGMENT
__real@44ed6000 DD 044ed6000r			; 1899
CONST	ENDS
;	COMDAT __real@44800000
CONST	SEGMENT
__real@44800000 DD 044800000r			; 1024
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@44480000
CONST	SEGMENT
__real@44480000 DD 044480000r			; 800
CONST	ENDS
;	COMDAT __real@441c4000
CONST	SEGMENT
__real@441c4000 DD 0441c4000r			; 625
CONST	ENDS
;	COMDAT __real@44000000
CONST	SEGMENT
__real@44000000 DD 044000000r			; 512
CONST	ENDS
;	COMDAT __real@43c80000
CONST	SEGMENT
__real@43c80000 DD 043c80000r			; 400
CONST	ENDS
;	COMDAT __real@43b40000
CONST	SEGMENT
__real@43b40000 DD 043b40000r			; 360
CONST	ENDS
;	COMDAT __real@43960000
CONST	SEGMENT
__real@43960000 DD 043960000r			; 300
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@437a0000
CONST	SEGMENT
__real@437a0000 DD 0437a0000r			; 250
CONST	ENDS
;	COMDAT __real@43610000
CONST	SEGMENT
__real@43610000 DD 043610000r			; 225
CONST	ENDS
;	COMDAT __real@43480000
CONST	SEGMENT
__real@43480000 DD 043480000r			; 200
CONST	ENDS
;	COMDAT __real@43340000
CONST	SEGMENT
__real@43340000 DD 043340000r			; 180
CONST	ENDS
;	COMDAT __real@431c4000
CONST	SEGMENT
__real@431c4000 DD 0431c4000r			; 156.25
CONST	ENDS
;	COMDAT __real@43020000
CONST	SEGMENT
__real@43020000 DD 043020000r			; 130
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42c60000
CONST	SEGMENT
__real@42c60000 DD 042c60000r			; 99
CONST	ENDS
;	COMDAT __real@42be0000
CONST	SEGMENT
__real@42be0000 DD 042be0000r			; 95
CONST	ENDS
;	COMDAT __real@42b40000
CONST	SEGMENT
__real@42b40000 DD 042b40000r			; 90
CONST	ENDS
;	COMDAT __real@42b20000
CONST	SEGMENT
__real@42b20000 DD 042b20000r			; 89
CONST	ENDS
;	COMDAT __real@42b00000
CONST	SEGMENT
__real@42b00000 DD 042b00000r			; 88
CONST	ENDS
;	COMDAT __real@42aa0000
CONST	SEGMENT
__real@42aa0000 DD 042aa0000r			; 85
CONST	ENDS
;	COMDAT __real@42a00000
CONST	SEGMENT
__real@42a00000 DD 042a00000r			; 80
CONST	ENDS
;	COMDAT __real@42960000
CONST	SEGMENT
__real@42960000 DD 042960000r			; 75
CONST	ENDS
;	COMDAT __real@42870000
CONST	SEGMENT
__real@42870000 DD 042870000r			; 67.5
CONST	ENDS
;	COMDAT __real@42700000
CONST	SEGMENT
__real@42700000 DD 042700000r			; 60
CONST	ENDS
;	COMDAT __real@42610000
CONST	SEGMENT
__real@42610000 DD 042610000r			; 56.25
CONST	ENDS
;	COMDAT __real@424d0000
CONST	SEGMENT
__real@424d0000 DD 0424d0000r			; 51.25
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@42340000
CONST	SEGMENT
__real@42340000 DD 042340000r			; 45
CONST	ENDS
;	COMDAT __real@42040000
CONST	SEGMENT
__real@42040000 DD 042040000r			; 33
CONST	ENDS
;	COMDAT __real@41f00000
CONST	SEGMENT
__real@41f00000 DD 041f00000r			; 30
CONST	ENDS
;	COMDAT __real@41c80000
CONST	SEGMENT
__real@41c80000 DD 041c80000r			; 25
CONST	ENDS
;	COMDAT __real@41a20000
CONST	SEGMENT
__real@41a20000 DD 041a20000r			; 20.25
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@41700000
CONST	SEGMENT
__real@41700000 DD 041700000r			; 15
CONST	ENDS
;	COMDAT __real@41480000
CONST	SEGMENT
__real@41480000 DD 041480000r			; 12.5
CONST	ENDS
;	COMDAT __real@41300000
CONST	SEGMENT
__real@41300000 DD 041300000r			; 11
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@41100000
CONST	SEGMENT
__real@41100000 DD 041100000r			; 9
CONST	ENDS
;	COMDAT __real@410c0000
CONST	SEGMENT
__real@410c0000 DD 0410c0000r			; 8.75
CONST	ENDS
;	COMDAT __real@41000000
CONST	SEGMENT
__real@41000000 DD 041000000r			; 8
CONST	ENDS
;	COMDAT __real@40db580000000000
CONST	SEGMENT
__real@40db580000000000 DQ 040db580000000000r	; 28000
CONST	ENDS
;	COMDAT __real@40d0f5c3
CONST	SEGMENT
__real@40d0f5c3 DD 040d0f5c3r			; 6.53
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@40c80000
CONST	SEGMENT
__real@40c80000 DD 040c80000r			; 6.25
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40900000
CONST	SEGMENT
__real@40900000 DD 040900000r			; 4.5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@4034000000000000
CONST	SEGMENT
__real@4034000000000000 DQ 04034000000000000r	; 20
CONST	ENDS
;	COMDAT __real@402e000000000000
CONST	SEGMENT
__real@402e000000000000 DQ 0402e000000000000r	; 15
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@40200000
CONST	SEGMENT
__real@40200000 DD 040200000r			; 2.5
CONST	ENDS
;	COMDAT __real@40100000
CONST	SEGMENT
__real@40100000 DD 040100000r			; 2.25
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fef0a3d70a3d70a
CONST	SEGMENT
__real@3fef0a3d70a3d70a DQ 03fef0a3d70a3d70ar	; 0.97
CONST	ENDS
;	COMDAT __real@3fee666666666666
CONST	SEGMENT
__real@3fee666666666666 DQ 03fee666666666666r	; 0.95
CONST	ENDS
;	COMDAT __real@3feccccccccccccd
CONST	SEGMENT
__real@3feccccccccccccd DQ 03feccccccccccccdr	; 0.9
CONST	ENDS
;	COMDAT __real@3fe999999999999a
CONST	SEGMENT
__real@3fe999999999999a DQ 03fe999999999999ar	; 0.8
CONST	ENDS
;	COMDAT __real@3fe8000000000000
CONST	SEGMENT
__real@3fe8000000000000 DQ 03fe8000000000000r	; 0.75
CONST	ENDS
;	COMDAT __real@3fe6666666666666
CONST	SEGMENT
__real@3fe6666666666666 DQ 03fe6666666666666r	; 0.7
CONST	ENDS
;	COMDAT __real@3fe51eb851eb851f
CONST	SEGMENT
__real@3fe51eb851eb851f DQ 03fe51eb851eb851fr	; 0.66
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fdccccccccccccd
CONST	SEGMENT
__real@3fdccccccccccccd DQ 03fdccccccccccccdr	; 0.45
CONST	ENDS
;	COMDAT __real@3fd999999999999a
CONST	SEGMENT
__real@3fd999999999999a DQ 03fd999999999999ar	; 0.4
CONST	ENDS
;	COMDAT __real@3fd51eb851eb851f
CONST	SEGMENT
__real@3fd51eb851eb851f DQ 03fd51eb851eb851fr	; 0.33
CONST	ENDS
;	COMDAT __real@3fc999999999999a
CONST	SEGMENT
__real@3fc999999999999a DQ 03fc999999999999ar	; 0.2
CONST	ENDS
;	COMDAT __real@3fc90fdb
CONST	SEGMENT
__real@3fc90fdb DD 03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT __real@3fc80000
CONST	SEGMENT
__real@3fc80000 DD 03fc80000r			; 1.5625
CONST	ENDS
;	COMDAT __real@3fc51eb851eb851f
CONST	SEGMENT
__real@3fc51eb851eb851f DQ 03fc51eb851eb851fr	; 0.165
CONST	ENDS
;	COMDAT __real@3fc00000
CONST	SEGMENT
__real@3fc00000 DD 03fc00000r			; 1.5
CONST	ENDS
;	COMDAT __real@3fbd9168
CONST	SEGMENT
__real@3fbd9168 DD 03fbd9168r			; 1.481
CONST	ENDS
;	COMDAT __real@3fb4fdf4
CONST	SEGMENT
__real@3fb4fdf4 DD 03fb4fdf4r			; 1.414
CONST	ENDS
;	COMDAT __real@3fa999999999999a
CONST	SEGMENT
__real@3fa999999999999a DQ 03fa999999999999ar	; 0.05
CONST	ENDS
;	COMDAT __real@3fa20000
CONST	SEGMENT
__real@3fa20000 DD 03fa20000r			; 1.26563
CONST	ENDS
;	COMDAT __real@3fa00000
CONST	SEGMENT
__real@3fa00000 DD 03fa00000r			; 1.25
CONST	ENDS
;	COMDAT __real@3f9999999999999a
CONST	SEGMENT
__real@3f9999999999999a DQ 03f9999999999999ar	; 0.025
CONST	ENDS
;	COMDAT __real@3f900000
CONST	SEGMENT
__real@3f900000 DD 03f900000r			; 1.125
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f79999a
CONST	SEGMENT
__real@3f79999a DD 03f79999ar			; 0.975
CONST	ENDS
;	COMDAT __real@3f70a3d7
CONST	SEGMENT
__real@3f70a3d7 DD 03f70a3d7r			; 0.94
CONST	ENDS
;	COMDAT __real@3f466666
CONST	SEGMENT
__real@3f466666 DD 03f466666r			; 0.775
CONST	ENDS
;	COMDAT __real@3f400000
CONST	SEGMENT
__real@3f400000 DD 03f400000r			; 0.75
CONST	ENDS
;	COMDAT __real@3f3ab9f5
CONST	SEGMENT
__real@3f3ab9f5 DD 03f3ab9f5r			; 0.7294
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3eeae7d5
CONST	SEGMENT
__real@3eeae7d5 DD 03eeae7d5r			; 0.4588
CONST	ENDS
;	COMDAT __real@3eb851ec
CONST	SEGMENT
__real@3eb851ec DD 03eb851ecr			; 0.36
CONST	ENDS
;	COMDAT __real@3eb33333
CONST	SEGMENT
__real@3eb33333 DD 03eb33333r			; 0.35
CONST	ENDS
;	COMDAT __real@3ea8f5c3
CONST	SEGMENT
__real@3ea8f5c3 DD 03ea8f5c3r			; 0.33
CONST	ENDS
;	COMDAT __real@3ea66666
CONST	SEGMENT
__real@3ea66666 DD 03ea66666r			; 0.325
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@3e48b439
CONST	SEGMENT
__real@3e48b439 DD 03e48b439r			; 0.196
CONST	ENDS
;	COMDAT __real@3e19999a
CONST	SEGMENT
__real@3e19999a DD 03e19999ar			; 0.15
CONST	ENDS
;	COMDAT __real@3dd851ec
CONST	SEGMENT
__real@3dd851ec DD 03dd851ecr			; 0.105625
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT __real@3ccccccd
CONST	SEGMENT
__real@3ccccccd DD 03ccccccdr			; 0.025
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@02081cea
CONST	SEGMENT
__real@02081cea DD 002081cear			; 1e-037
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@@8 ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@8 ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@'
	DB	'@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@@8 ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@8 ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_Poke_End_Map> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@@8 ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@8 ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@'
	DB	00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@@8 ; ScriptRegistrant<JMG_CMTB_Player_Drone>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@8 ; ScriptRegistrant<JMG_CMTB_Player_Drone>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_Player_Drone>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_Player_Drone> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_Player_Drone>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@@8 ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@8 ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@@8 ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@@8 ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_Powerup_Script> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@@8 ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@8 ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@@8 ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_The_Moon_Script> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@@8 ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@8 ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_Motion_Mine> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@@8 ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@8 ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_Renegade_Code> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@@8 ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Scri'
	DB	'pt@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@@8 ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@8 ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_Arcade_Machine> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@@8 ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@8 ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_Spectator_Object> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@@8 ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@8 ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@@8 ; ScriptRegistrant<JMG_CMTB_Comet_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Comet_Script>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_Comet_Script>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_Comet_Script> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_Comet_Script>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@@8 ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@8 ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control'
	DB	'@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@@8 ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@8 ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@'
	DB	00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@@8 ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@8 ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@8 DD 00H ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_CMTB_Main_Game_Control> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@6B@ DD 00H ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@@8 ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@8 ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@8 DD 00H ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_Apply_Damage_On_Timer> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@6B@ DD 00H ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@@8 ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@8 ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@8 DD 00H ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_User_Auto_Enter_Ship> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@6B@ DD 00H ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@@8 ; ScriptRegistrant<JMG_Attach_And_Remove>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@8 ; ScriptRegistrant<JMG_Attach_And_Remove>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@8 DD 00H ; ScriptRegistrant<JMG_Attach_And_Remove>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_Attach_And_Remove> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@6B@ DD 00H ; ScriptRegistrant<JMG_Attach_And_Remove>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@@8 ; ScriptRegistrant<JMG_Comet_Control_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@8 ; ScriptRegistrant<JMG_Comet_Control_Script>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@8 DD 00H ; ScriptRegistrant<JMG_Comet_Control_Script>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_Comet_Control_Script> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@6B@ DD 00H ; ScriptRegistrant<JMG_Comet_Control_Script>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@@8 ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@8 ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@8 DD 00H ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_Syst'
	DB	'em@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@6B@ DD 00H ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@@8 ; ScriptRegistrant<JMG_Renetbusters_Object>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@8 ; ScriptRegistrant<JMG_Renetbusters_Object>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@8 DD 00H ; ScriptRegistrant<JMG_Renetbusters_Object>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_Renetbusters_Object> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@6B@ DD 00H ; ScriptRegistrant<JMG_Renetbusters_Object>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@@8 ; ScriptRegistrant<JMG_Ship_Shield_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@8 ; ScriptRegistrant<JMG_Ship_Shield_Script>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@8 DD 00H ; ScriptRegistrant<JMG_Ship_Shield_Script>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_Ship_Shield_Script> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@6B@ DD 00H ; ScriptRegistrant<JMG_Ship_Shield_Script>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@@8 ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@8 ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@8 DD 00H ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Cust'
	DB	'om_Ship@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@6B@ DD 00H ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@@8 ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@8 ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@8 DD 00H ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_Ship_Shield_Control_Script> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@'
	DB	'@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@6B@ DD 00H ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@@8 ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@8 ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@8 DD 00H ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Cust'
	DB	'om@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@6B@ DD 00H ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Cronie_AI@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Cronie_AI@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Cronie_AI@@@@@8 ; ScriptRegistrant<JMG_Cronie_AI>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Cronie_AI@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_Cronie_AI@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_Cronie_AI@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Cronie_AI@@@@8 ; ScriptRegistrant<JMG_Cronie_AI>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_Cronie_AI@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_Cronie_AI@@@@8 DD 00H	; ScriptRegistrant<JMG_Cronie_AI>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_Cronie_AI@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_Cronie_AI@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_Cronie_AI@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_Cronie_AI> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_Cronie_AI@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_Cronie_AI@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_Cronie_AI@@@@6B@ DD 00H	; ScriptRegistrant<JMG_Cronie_AI>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Cronie_AI@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Cronie_AI@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@@8 ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@8 ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@8 DD 00H ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_Return_Custom_When_Shot> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@6B@ DD 00H ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Ship_Weapon@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Ship_Weapon@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Ship_Weapon@@@@@8 ; ScriptRegistrant<JMG_Ship_Weapon>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Ship_Weapon@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_Ship_Weapon@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_Ship_Weapon@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Ship_Weapon@@@@8 ; ScriptRegistrant<JMG_Ship_Weapon>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_Ship_Weapon@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_Ship_Weapon@@@@8 DD 00H	; ScriptRegistrant<JMG_Ship_Weapon>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_Ship_Weapon@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_Ship_Weapon@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_Ship_Weapon@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_Ship_Weapon> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_Ship_Weapon@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_Ship_Weapon@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_Ship_Weapon@@@@6B@ DD 00H	; ScriptRegistrant<JMG_Ship_Weapon>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Ship_Weapon@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Ship_Weapon@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Random_Music@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Random_Music@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Random_Music@@@@@8 ; ScriptRegistrant<JMG_Random_Music>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Random_Music@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_Random_Music@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_Random_Music@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Random_Music@@@@8 ; ScriptRegistrant<JMG_Random_Music>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_Random_Music@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_Random_Music@@@@8 DD 00H	; ScriptRegistrant<JMG_Random_Music>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_Random_Music@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_Random_Music@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_Random_Music@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_Random_Music> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_Random_Music@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_Random_Music@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_Random_Music@@@@6B@ DD 00H	; ScriptRegistrant<JMG_Random_Music>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Random_Music@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Random_Music@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@@8 ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@8 ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@8 DD 00H ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_Ship_Random_Hyperspace> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@6B@ DD 00H ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@@8 ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@8 ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@8 DD 00H ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_Advanced_Bounce_Zone> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@6B@ DD 00H ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@@8 ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@8 ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@8 DD 00H ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<JMG_Create_Ship_On_Poke> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@6B@ DD 00H ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_Poke_Change_Difficulty@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_Poke_Change_Difficulty@@8 DD FLAT:??_R0?AVJMG_CMTB_Poke_Change_Difficulty@@@8 ; JMG_CMTB_Poke_Change_Difficulty::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_Poke_Change_Difficulty@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_Poke_Change_Difficulty@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_Poke_Change_Difficulty@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_Poke_Change_Difficulty@@8 ; JMG_CMTB_Poke_Change_Difficulty::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_Poke_Change_Difficulty@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_Poke_Change_Difficulty@@8 DD 00H		; JMG_CMTB_Poke_Change_Difficulty::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_Poke_Change_Difficulty@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_Poke_Change_Difficulty@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_Poke_Change_Difficulty@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_Poke_Change_Difficulty `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_Poke_Change_Difficulty@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_Poke_Change_Difficulty@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_Poke_Change_Difficulty@@6B@ DD 00H	; JMG_CMTB_Poke_Change_Difficulty::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_Poke_Change_Difficulty@@@8
	DD	FLAT:??_R3JMG_CMTB_Poke_Change_Difficulty@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_Poke_End_Map@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_Poke_End_Map@@8 DD FLAT:??_R0?AVJMG_CMTB_Poke_End_Map@@@8 ; JMG_CMTB_Poke_End_Map::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_Poke_End_Map@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_Poke_End_Map@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_Poke_End_Map@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_Poke_End_Map@@8 ; JMG_CMTB_Poke_End_Map::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_Poke_End_Map@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_Poke_End_Map@@8 DD 00H			; JMG_CMTB_Poke_End_Map::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_Poke_End_Map@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_Poke_End_Map@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_Poke_End_Map@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_Poke_End_Map `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_Poke_End_Map@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_Poke_End_Map@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_Poke_End_Map@@6B@ DD 00H			; JMG_CMTB_Poke_End_Map::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_Poke_End_Map@@@8
	DD	FLAT:??_R3JMG_CMTB_Poke_End_Map@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_Vehicle_Face_Turret@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_Vehicle_Face_Turret@@8 DD FLAT:??_R0?AVJMG_CMTB_Vehicle_Face_Turret@@@8 ; JMG_CMTB_Vehicle_Face_Turret::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_Vehicle_Face_Turret@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_Vehicle_Face_Turret@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_Vehicle_Face_Turret@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_Vehicle_Face_Turret@@8 ; JMG_CMTB_Vehicle_Face_Turret::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_Vehicle_Face_Turret@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_Vehicle_Face_Turret@@8 DD 00H		; JMG_CMTB_Vehicle_Face_Turret::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_Vehicle_Face_Turret@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_Vehicle_Face_Turret@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_Vehicle_Face_Turret@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_Vehicle_Face_Turret `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_Vehicle_Face_Turret@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_Vehicle_Face_Turret@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_Vehicle_Face_Turret@@6B@ DD 00H		; JMG_CMTB_Vehicle_Face_Turret::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_Vehicle_Face_Turret@@@8
	DD	FLAT:??_R3JMG_CMTB_Vehicle_Face_Turret@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_Apply_Damage_On_Timer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_Apply_Damage_On_Timer@@8 DD FLAT:??_R0?AVJMG_Apply_Damage_On_Timer@@@8 ; JMG_Apply_Damage_On_Timer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_Apply_Damage_On_Timer@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_Apply_Damage_On_Timer@@8
rdata$r	SEGMENT
??_R2JMG_Apply_Damage_On_Timer@@8 DD FLAT:??_R1A@?0A@EA@JMG_Apply_Damage_On_Timer@@8 ; JMG_Apply_Damage_On_Timer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_Apply_Damage_On_Timer@@8
rdata$r	SEGMENT
??_R3JMG_Apply_Damage_On_Timer@@8 DD 00H		; JMG_Apply_Damage_On_Timer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_Apply_Damage_On_Timer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_Apply_Damage_On_Timer@@@8
_DATA	SEGMENT
??_R0?AVJMG_Apply_Damage_On_Timer@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_Apply_Damage_On_Timer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_Apply_Damage_On_Timer@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_Apply_Damage_On_Timer@@6B@
rdata$r	SEGMENT
??_R4JMG_Apply_Damage_On_Timer@@6B@ DD 00H		; JMG_Apply_Damage_On_Timer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_Apply_Damage_On_Timer@@@8
	DD	FLAT:??_R3JMG_Apply_Damage_On_Timer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_User_Auto_Enter_Ship@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_User_Auto_Enter_Ship@@8 DD FLAT:??_R0?AVJMG_User_Auto_Enter_Ship@@@8 ; JMG_User_Auto_Enter_Ship::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_User_Auto_Enter_Ship@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_User_Auto_Enter_Ship@@8
rdata$r	SEGMENT
??_R2JMG_User_Auto_Enter_Ship@@8 DD FLAT:??_R1A@?0A@EA@JMG_User_Auto_Enter_Ship@@8 ; JMG_User_Auto_Enter_Ship::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_User_Auto_Enter_Ship@@8
rdata$r	SEGMENT
??_R3JMG_User_Auto_Enter_Ship@@8 DD 00H			; JMG_User_Auto_Enter_Ship::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_User_Auto_Enter_Ship@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_User_Auto_Enter_Ship@@@8
_DATA	SEGMENT
??_R0?AVJMG_User_Auto_Enter_Ship@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_User_Auto_Enter_Ship `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_User_Auto_Enter_Ship@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_User_Auto_Enter_Ship@@6B@
rdata$r	SEGMENT
??_R4JMG_User_Auto_Enter_Ship@@6B@ DD 00H		; JMG_User_Auto_Enter_Ship::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_User_Auto_Enter_Ship@@@8
	DD	FLAT:??_R3JMG_User_Auto_Enter_Ship@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_Attach_And_Remove@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_Attach_And_Remove@@8 DD FLAT:??_R0?AVJMG_Attach_And_Remove@@@8 ; JMG_Attach_And_Remove::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_Attach_And_Remove@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_Attach_And_Remove@@8
rdata$r	SEGMENT
??_R2JMG_Attach_And_Remove@@8 DD FLAT:??_R1A@?0A@EA@JMG_Attach_And_Remove@@8 ; JMG_Attach_And_Remove::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_Attach_And_Remove@@8
rdata$r	SEGMENT
??_R3JMG_Attach_And_Remove@@8 DD 00H			; JMG_Attach_And_Remove::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_Attach_And_Remove@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_Attach_And_Remove@@@8
_DATA	SEGMENT
??_R0?AVJMG_Attach_And_Remove@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_Attach_And_Remove `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_Attach_And_Remove@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_Attach_And_Remove@@6B@
rdata$r	SEGMENT
??_R4JMG_Attach_And_Remove@@6B@ DD 00H			; JMG_Attach_And_Remove::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_Attach_And_Remove@@@8
	DD	FLAT:??_R3JMG_Attach_And_Remove@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_Comet_Control_Script@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_Comet_Control_Script@@8 DD FLAT:??_R0?AVJMG_Comet_Control_Script@@@8 ; JMG_Comet_Control_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_Comet_Control_Script@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_Comet_Control_Script@@8
rdata$r	SEGMENT
??_R2JMG_Comet_Control_Script@@8 DD FLAT:??_R1A@?0A@EA@JMG_Comet_Control_Script@@8 ; JMG_Comet_Control_Script::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_Comet_Control_Script@@8
rdata$r	SEGMENT
??_R3JMG_Comet_Control_Script@@8 DD 00H			; JMG_Comet_Control_Script::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_Comet_Control_Script@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_Comet_Control_Script@@@8
_DATA	SEGMENT
??_R0?AVJMG_Comet_Control_Script@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_Comet_Control_Script `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_Comet_Control_Script@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_Comet_Control_Script@@6B@
rdata$r	SEGMENT
??_R4JMG_Comet_Control_Script@@6B@ DD 00H		; JMG_Comet_Control_Script::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_Comet_Control_Script@@@8
	DD	FLAT:??_R3JMG_Comet_Control_Script@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_New_Ship_Weapon_Control_System@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_New_Ship_Weapon_Control_System@@8 DD FLAT:??_R0?AVJMG_New_Ship_Weapon_Control_System@@@8 ; JMG_New_Ship_Weapon_Control_System::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_New_Ship_Weapon_Control_System@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_New_Ship_Weapon_Control_System@@8
rdata$r	SEGMENT
??_R2JMG_New_Ship_Weapon_Control_System@@8 DD FLAT:??_R1A@?0A@EA@JMG_New_Ship_Weapon_Control_System@@8 ; JMG_New_Ship_Weapon_Control_System::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_New_Ship_Weapon_Control_System@@8
rdata$r	SEGMENT
??_R3JMG_New_Ship_Weapon_Control_System@@8 DD 00H	; JMG_New_Ship_Weapon_Control_System::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_New_Ship_Weapon_Control_System@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_New_Ship_Weapon_Control_System@@@8
_DATA	SEGMENT
??_R0?AVJMG_New_Ship_Weapon_Control_System@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_New_Ship_Weapon_Control_System `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_New_Ship_Weapon_Control_System@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_New_Ship_Weapon_Control_System@@6B@
rdata$r	SEGMENT
??_R4JMG_New_Ship_Weapon_Control_System@@6B@ DD 00H	; JMG_New_Ship_Weapon_Control_System::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_New_Ship_Weapon_Control_System@@@8
	DD	FLAT:??_R3JMG_New_Ship_Weapon_Control_System@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_Renetbusters_Object@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_Renetbusters_Object@@8 DD FLAT:??_R0?AVJMG_Renetbusters_Object@@@8 ; JMG_Renetbusters_Object::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_Renetbusters_Object@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_Renetbusters_Object@@8
rdata$r	SEGMENT
??_R2JMG_Renetbusters_Object@@8 DD FLAT:??_R1A@?0A@EA@JMG_Renetbusters_Object@@8 ; JMG_Renetbusters_Object::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_Renetbusters_Object@@8
rdata$r	SEGMENT
??_R3JMG_Renetbusters_Object@@8 DD 00H			; JMG_Renetbusters_Object::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_Renetbusters_Object@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_Renetbusters_Object@@@8
_DATA	SEGMENT
??_R0?AVJMG_Renetbusters_Object@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_Renetbusters_Object `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_Renetbusters_Object@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_Renetbusters_Object@@6B@
rdata$r	SEGMENT
??_R4JMG_Renetbusters_Object@@6B@ DD 00H		; JMG_Renetbusters_Object::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_Renetbusters_Object@@@8
	DD	FLAT:??_R3JMG_Renetbusters_Object@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_Ship_Shield_Script@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_Ship_Shield_Script@@8 DD FLAT:??_R0?AVJMG_Ship_Shield_Script@@@8 ; JMG_Ship_Shield_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_Ship_Shield_Script@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_Ship_Shield_Script@@8
rdata$r	SEGMENT
??_R2JMG_Ship_Shield_Script@@8 DD FLAT:??_R1A@?0A@EA@JMG_Ship_Shield_Script@@8 ; JMG_Ship_Shield_Script::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_Ship_Shield_Script@@8
rdata$r	SEGMENT
??_R3JMG_Ship_Shield_Script@@8 DD 00H			; JMG_Ship_Shield_Script::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_Ship_Shield_Script@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_Ship_Shield_Script@@@8
_DATA	SEGMENT
??_R0?AVJMG_Ship_Shield_Script@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_Ship_Shield_Script `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_Ship_Shield_Script@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_Ship_Shield_Script@@6B@
rdata$r	SEGMENT
??_R4JMG_Ship_Shield_Script@@6B@ DD 00H			; JMG_Ship_Shield_Script::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_Ship_Shield_Script@@@8
	DD	FLAT:??_R3JMG_Ship_Shield_Script@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_Kill_Self_And_Sender_On_Custom_Ship@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_Kill_Self_And_Sender_On_Custom_Ship@@8 DD FLAT:??_R0?AVJMG_Kill_Self_And_Sender_On_Custom_Ship@@@8 ; JMG_Kill_Self_And_Sender_On_Custom_Ship::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_Kill_Self_And_Sender_On_Custom_Ship@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_Kill_Self_And_Sender_On_Custom_Ship@@8
rdata$r	SEGMENT
??_R2JMG_Kill_Self_And_Sender_On_Custom_Ship@@8 DD FLAT:??_R1A@?0A@EA@JMG_Kill_Self_And_Sender_On_Custom_Ship@@8 ; JMG_Kill_Self_And_Sender_On_Custom_Ship::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_Kill_Self_And_Sender_On_Custom_Ship@@8
rdata$r	SEGMENT
??_R3JMG_Kill_Self_And_Sender_On_Custom_Ship@@8 DD 00H	; JMG_Kill_Self_And_Sender_On_Custom_Ship::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_Kill_Self_And_Sender_On_Custom_Ship@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_Kill_Self_And_Sender_On_Custom_Ship@@@8
_DATA	SEGMENT
??_R0?AVJMG_Kill_Self_And_Sender_On_Custom_Ship@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_Kill_Self_And_Sender_On_Custom_Ship `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_Kill_Self_And_Sender_On_Custom_Ship@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_Kill_Self_And_Sender_On_Custom_Ship@@6B@
rdata$r	SEGMENT
??_R4JMG_Kill_Self_And_Sender_On_Custom_Ship@@6B@ DD 00H ; JMG_Kill_Self_And_Sender_On_Custom_Ship::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_Kill_Self_And_Sender_On_Custom_Ship@@@8
	DD	FLAT:??_R3JMG_Kill_Self_And_Sender_On_Custom_Ship@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_Ship_Shield_Control_Script@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_Ship_Shield_Control_Script@@8 DD FLAT:??_R0?AVJMG_Ship_Shield_Control_Script@@@8 ; JMG_Ship_Shield_Control_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_Ship_Shield_Control_Script@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_Ship_Shield_Control_Script@@8
rdata$r	SEGMENT
??_R2JMG_Ship_Shield_Control_Script@@8 DD FLAT:??_R1A@?0A@EA@JMG_Ship_Shield_Control_Script@@8 ; JMG_Ship_Shield_Control_Script::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_Ship_Shield_Control_Script@@8
rdata$r	SEGMENT
??_R3JMG_Ship_Shield_Control_Script@@8 DD 00H		; JMG_Ship_Shield_Control_Script::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_Ship_Shield_Control_Script@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_Ship_Shield_Control_Script@@@8
_DATA	SEGMENT
??_R0?AVJMG_Ship_Shield_Control_Script@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_Ship_Shield_Control_Script `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_Ship_Shield_Control_Script@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_Ship_Shield_Control_Script@@6B@
rdata$r	SEGMENT
??_R4JMG_Ship_Shield_Control_Script@@6B@ DD 00H		; JMG_Ship_Shield_Control_Script::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_Ship_Shield_Control_Script@@@8
	DD	FLAT:??_R3JMG_Ship_Shield_Control_Script@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_Kill_Self_And_Sender_On_Custom@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_Kill_Self_And_Sender_On_Custom@@8 DD FLAT:??_R0?AVJMG_Kill_Self_And_Sender_On_Custom@@@8 ; JMG_Kill_Self_And_Sender_On_Custom::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_Kill_Self_And_Sender_On_Custom@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_Kill_Self_And_Sender_On_Custom@@8
rdata$r	SEGMENT
??_R2JMG_Kill_Self_And_Sender_On_Custom@@8 DD FLAT:??_R1A@?0A@EA@JMG_Kill_Self_And_Sender_On_Custom@@8 ; JMG_Kill_Self_And_Sender_On_Custom::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_Kill_Self_And_Sender_On_Custom@@8
rdata$r	SEGMENT
??_R3JMG_Kill_Self_And_Sender_On_Custom@@8 DD 00H	; JMG_Kill_Self_And_Sender_On_Custom::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_Kill_Self_And_Sender_On_Custom@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_Kill_Self_And_Sender_On_Custom@@@8
_DATA	SEGMENT
??_R0?AVJMG_Kill_Self_And_Sender_On_Custom@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_Kill_Self_And_Sender_On_Custom `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_Kill_Self_And_Sender_On_Custom@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_Kill_Self_And_Sender_On_Custom@@6B@
rdata$r	SEGMENT
??_R4JMG_Kill_Self_And_Sender_On_Custom@@6B@ DD 00H	; JMG_Kill_Self_And_Sender_On_Custom::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_Kill_Self_And_Sender_On_Custom@@@8
	DD	FLAT:??_R3JMG_Kill_Self_And_Sender_On_Custom@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_Cronie_AI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_Cronie_AI@@8 DD FLAT:??_R0?AVJMG_Cronie_AI@@@8 ; JMG_Cronie_AI::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_Cronie_AI@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_Cronie_AI@@8
rdata$r	SEGMENT
??_R2JMG_Cronie_AI@@8 DD FLAT:??_R1A@?0A@EA@JMG_Cronie_AI@@8 ; JMG_Cronie_AI::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_Cronie_AI@@8
rdata$r	SEGMENT
??_R3JMG_Cronie_AI@@8 DD 00H				; JMG_Cronie_AI::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_Cronie_AI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_Cronie_AI@@@8
_DATA	SEGMENT
??_R0?AVJMG_Cronie_AI@@@8 DD FLAT:??_7type_info@@6B@	; JMG_Cronie_AI `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_Cronie_AI@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_Cronie_AI@@6B@
rdata$r	SEGMENT
??_R4JMG_Cronie_AI@@6B@ DD 00H				; JMG_Cronie_AI::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_Cronie_AI@@@8
	DD	FLAT:??_R3JMG_Cronie_AI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_Return_Custom_When_Shot@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_Return_Custom_When_Shot@@8 DD FLAT:??_R0?AVJMG_Return_Custom_When_Shot@@@8 ; JMG_Return_Custom_When_Shot::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_Return_Custom_When_Shot@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_Return_Custom_When_Shot@@8
rdata$r	SEGMENT
??_R2JMG_Return_Custom_When_Shot@@8 DD FLAT:??_R1A@?0A@EA@JMG_Return_Custom_When_Shot@@8 ; JMG_Return_Custom_When_Shot::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_Return_Custom_When_Shot@@8
rdata$r	SEGMENT
??_R3JMG_Return_Custom_When_Shot@@8 DD 00H		; JMG_Return_Custom_When_Shot::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_Return_Custom_When_Shot@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_Return_Custom_When_Shot@@@8
_DATA	SEGMENT
??_R0?AVJMG_Return_Custom_When_Shot@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_Return_Custom_When_Shot `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_Return_Custom_When_Shot@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_Return_Custom_When_Shot@@6B@
rdata$r	SEGMENT
??_R4JMG_Return_Custom_When_Shot@@6B@ DD 00H		; JMG_Return_Custom_When_Shot::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_Return_Custom_When_Shot@@@8
	DD	FLAT:??_R3JMG_Return_Custom_When_Shot@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_Ship_Weapon@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_Ship_Weapon@@8 DD FLAT:??_R0?AVJMG_Ship_Weapon@@@8 ; JMG_Ship_Weapon::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_Ship_Weapon@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_Ship_Weapon@@8
rdata$r	SEGMENT
??_R2JMG_Ship_Weapon@@8 DD FLAT:??_R1A@?0A@EA@JMG_Ship_Weapon@@8 ; JMG_Ship_Weapon::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_Ship_Weapon@@8
rdata$r	SEGMENT
??_R3JMG_Ship_Weapon@@8 DD 00H				; JMG_Ship_Weapon::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_Ship_Weapon@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_Ship_Weapon@@@8
_DATA	SEGMENT
??_R0?AVJMG_Ship_Weapon@@@8 DD FLAT:??_7type_info@@6B@	; JMG_Ship_Weapon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_Ship_Weapon@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_Ship_Weapon@@6B@
rdata$r	SEGMENT
??_R4JMG_Ship_Weapon@@6B@ DD 00H			; JMG_Ship_Weapon::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_Ship_Weapon@@@8
	DD	FLAT:??_R3JMG_Ship_Weapon@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_Random_Music@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_Random_Music@@8 DD FLAT:??_R0?AVJMG_Random_Music@@@8 ; JMG_Random_Music::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_Random_Music@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_Random_Music@@8
rdata$r	SEGMENT
??_R2JMG_Random_Music@@8 DD FLAT:??_R1A@?0A@EA@JMG_Random_Music@@8 ; JMG_Random_Music::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_Random_Music@@8
rdata$r	SEGMENT
??_R3JMG_Random_Music@@8 DD 00H				; JMG_Random_Music::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_Random_Music@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_Random_Music@@@8
_DATA	SEGMENT
??_R0?AVJMG_Random_Music@@@8 DD FLAT:??_7type_info@@6B@	; JMG_Random_Music `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_Random_Music@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_Random_Music@@6B@
rdata$r	SEGMENT
??_R4JMG_Random_Music@@6B@ DD 00H			; JMG_Random_Music::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_Random_Music@@@8
	DD	FLAT:??_R3JMG_Random_Music@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_Ship_Random_Hyperspace@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_Ship_Random_Hyperspace@@8 DD FLAT:??_R0?AVJMG_Ship_Random_Hyperspace@@@8 ; JMG_Ship_Random_Hyperspace::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_Ship_Random_Hyperspace@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_Ship_Random_Hyperspace@@8
rdata$r	SEGMENT
??_R2JMG_Ship_Random_Hyperspace@@8 DD FLAT:??_R1A@?0A@EA@JMG_Ship_Random_Hyperspace@@8 ; JMG_Ship_Random_Hyperspace::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_Ship_Random_Hyperspace@@8
rdata$r	SEGMENT
??_R3JMG_Ship_Random_Hyperspace@@8 DD 00H		; JMG_Ship_Random_Hyperspace::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_Ship_Random_Hyperspace@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_Ship_Random_Hyperspace@@@8
_DATA	SEGMENT
??_R0?AVJMG_Ship_Random_Hyperspace@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_Ship_Random_Hyperspace `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_Ship_Random_Hyperspace@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_Ship_Random_Hyperspace@@6B@
rdata$r	SEGMENT
??_R4JMG_Ship_Random_Hyperspace@@6B@ DD 00H		; JMG_Ship_Random_Hyperspace::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_Ship_Random_Hyperspace@@@8
	DD	FLAT:??_R3JMG_Ship_Random_Hyperspace@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_Advanced_Bounce_Zone@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_Advanced_Bounce_Zone@@8 DD FLAT:??_R0?AVJMG_Advanced_Bounce_Zone@@@8 ; JMG_Advanced_Bounce_Zone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_Advanced_Bounce_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_Advanced_Bounce_Zone@@8
rdata$r	SEGMENT
??_R2JMG_Advanced_Bounce_Zone@@8 DD FLAT:??_R1A@?0A@EA@JMG_Advanced_Bounce_Zone@@8 ; JMG_Advanced_Bounce_Zone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_Advanced_Bounce_Zone@@8
rdata$r	SEGMENT
??_R3JMG_Advanced_Bounce_Zone@@8 DD 00H			; JMG_Advanced_Bounce_Zone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_Advanced_Bounce_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_Advanced_Bounce_Zone@@@8
_DATA	SEGMENT
??_R0?AVJMG_Advanced_Bounce_Zone@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_Advanced_Bounce_Zone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_Advanced_Bounce_Zone@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_Advanced_Bounce_Zone@@6B@
rdata$r	SEGMENT
??_R4JMG_Advanced_Bounce_Zone@@6B@ DD 00H		; JMG_Advanced_Bounce_Zone::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_Advanced_Bounce_Zone@@@8
	DD	FLAT:??_R3JMG_Advanced_Bounce_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_Create_Ship_On_Poke@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_Create_Ship_On_Poke@@8 DD FLAT:??_R0?AVJMG_Create_Ship_On_Poke@@@8 ; JMG_Create_Ship_On_Poke::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_Create_Ship_On_Poke@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_Create_Ship_On_Poke@@8
rdata$r	SEGMENT
??_R2JMG_Create_Ship_On_Poke@@8 DD FLAT:??_R1A@?0A@EA@JMG_Create_Ship_On_Poke@@8 ; JMG_Create_Ship_On_Poke::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_Create_Ship_On_Poke@@8
rdata$r	SEGMENT
??_R3JMG_Create_Ship_On_Poke@@8 DD 00H			; JMG_Create_Ship_On_Poke::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_Create_Ship_On_Poke@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_Create_Ship_On_Poke@@@8
_DATA	SEGMENT
??_R0?AVJMG_Create_Ship_On_Poke@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_Create_Ship_On_Poke `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_Create_Ship_On_Poke@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_Create_Ship_On_Poke@@6B@
rdata$r	SEGMENT
??_R4JMG_Create_Ship_On_Poke@@6B@ DD 00H		; JMG_Create_Ship_On_Poke::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_Create_Ship_On_Poke@@@8
	DD	FLAT:??_R3JMG_Create_Ship_On_Poke@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_Player_Drone@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_Player_Drone@@8 DD FLAT:??_R0?AVJMG_CMTB_Player_Drone@@@8 ; JMG_CMTB_Player_Drone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_Player_Drone@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_Player_Drone@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_Player_Drone@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_Player_Drone@@8 ; JMG_CMTB_Player_Drone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_Player_Drone@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_Player_Drone@@8 DD 00H			; JMG_CMTB_Player_Drone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_Player_Drone@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_Player_Drone@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_Player_Drone@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_Player_Drone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_Player_Drone@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_Player_Drone@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_Player_Drone@@6B@ DD 00H			; JMG_CMTB_Player_Drone::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_Player_Drone@@@8
	DD	FLAT:??_R3JMG_CMTB_Player_Drone@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_Cargo_Ship_Turret@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_Cargo_Ship_Turret@@8 DD FLAT:??_R0?AVJMG_CMTB_Cargo_Ship_Turret@@@8 ; JMG_CMTB_Cargo_Ship_Turret::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_Cargo_Ship_Turret@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_Cargo_Ship_Turret@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_Cargo_Ship_Turret@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_Cargo_Ship_Turret@@8 ; JMG_CMTB_Cargo_Ship_Turret::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_Cargo_Ship_Turret@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_Cargo_Ship_Turret@@8 DD 00H		; JMG_CMTB_Cargo_Ship_Turret::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_Cargo_Ship_Turret@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_Cargo_Ship_Turret@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_Cargo_Ship_Turret@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_Cargo_Ship_Turret `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_Cargo_Ship_Turret@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_Cargo_Ship_Turret@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_Cargo_Ship_Turret@@6B@ DD 00H		; JMG_CMTB_Cargo_Ship_Turret::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_Cargo_Ship_Turret@@@8
	DD	FLAT:??_R3JMG_CMTB_Cargo_Ship_Turret@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_Cargo_Ship_Script@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_Cargo_Ship_Script@@8 DD FLAT:??_R0?AVJMG_CMTB_Cargo_Ship_Script@@@8 ; JMG_CMTB_Cargo_Ship_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_Cargo_Ship_Script@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_Cargo_Ship_Script@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_Cargo_Ship_Script@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_Cargo_Ship_Script@@8 ; JMG_CMTB_Cargo_Ship_Script::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_Cargo_Ship_Script@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_Cargo_Ship_Script@@8 DD 00H		; JMG_CMTB_Cargo_Ship_Script::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_Cargo_Ship_Script@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_Cargo_Ship_Script@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_Cargo_Ship_Script@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_Cargo_Ship_Script `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_Cargo_Ship_Script@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_Cargo_Ship_Script@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_Cargo_Ship_Script@@6B@ DD 00H		; JMG_CMTB_Cargo_Ship_Script::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_Cargo_Ship_Script@@@8
	DD	FLAT:??_R3JMG_CMTB_Cargo_Ship_Script@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_Powerup_Script@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_Powerup_Script@@8 DD FLAT:??_R0?AVJMG_CMTB_Powerup_Script@@@8 ; JMG_CMTB_Powerup_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_Powerup_Script@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_Powerup_Script@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_Powerup_Script@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_Powerup_Script@@8 ; JMG_CMTB_Powerup_Script::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_Powerup_Script@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_Powerup_Script@@8 DD 00H			; JMG_CMTB_Powerup_Script::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_Powerup_Script@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_Powerup_Script@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_Powerup_Script@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_Powerup_Script `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_Powerup_Script@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_Powerup_Script@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_Powerup_Script@@6B@ DD 00H		; JMG_CMTB_Powerup_Script::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_Powerup_Script@@@8
	DD	FLAT:??_R3JMG_CMTB_Powerup_Script@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_Ship_Super_Weapon@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_Ship_Super_Weapon@@8 DD FLAT:??_R0?AVJMG_CMTB_Ship_Super_Weapon@@@8 ; JMG_CMTB_Ship_Super_Weapon::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_Ship_Super_Weapon@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_Ship_Super_Weapon@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_Ship_Super_Weapon@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_Ship_Super_Weapon@@8 ; JMG_CMTB_Ship_Super_Weapon::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_Ship_Super_Weapon@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_Ship_Super_Weapon@@8 DD 00H		; JMG_CMTB_Ship_Super_Weapon::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_Ship_Super_Weapon@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_Ship_Super_Weapon@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_Ship_Super_Weapon@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_Ship_Super_Weapon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_Ship_Super_Weapon@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_Ship_Super_Weapon@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_Ship_Super_Weapon@@6B@ DD 00H		; JMG_CMTB_Ship_Super_Weapon::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_Ship_Super_Weapon@@@8
	DD	FLAT:??_R3JMG_CMTB_Ship_Super_Weapon@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_The_Moon_Script@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_The_Moon_Script@@8 DD FLAT:??_R0?AVJMG_CMTB_The_Moon_Script@@@8 ; JMG_CMTB_The_Moon_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_The_Moon_Script@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_The_Moon_Script@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_The_Moon_Script@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_The_Moon_Script@@8 ; JMG_CMTB_The_Moon_Script::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_The_Moon_Script@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_The_Moon_Script@@8 DD 00H			; JMG_CMTB_The_Moon_Script::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_The_Moon_Script@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_The_Moon_Script@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_The_Moon_Script@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_The_Moon_Script `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_The_Moon_Script@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_The_Moon_Script@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_The_Moon_Script@@6B@ DD 00H		; JMG_CMTB_The_Moon_Script::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_The_Moon_Script@@@8
	DD	FLAT:??_R3JMG_CMTB_The_Moon_Script@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_Motion_Mine@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_Motion_Mine@@8 DD FLAT:??_R0?AVJMG_CMTB_Motion_Mine@@@8 ; JMG_CMTB_Motion_Mine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_Motion_Mine@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_Motion_Mine@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_Motion_Mine@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_Motion_Mine@@8 ; JMG_CMTB_Motion_Mine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_Motion_Mine@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_Motion_Mine@@8 DD 00H			; JMG_CMTB_Motion_Mine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_Motion_Mine@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_Motion_Mine@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_Motion_Mine@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_Motion_Mine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_Motion_Mine@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_Motion_Mine@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_Motion_Mine@@6B@ DD 00H			; JMG_CMTB_Motion_Mine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_Motion_Mine@@@8
	DD	FLAT:??_R3JMG_CMTB_Motion_Mine@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_Renegade_Code@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_Renegade_Code@@8 DD FLAT:??_R0?AVJMG_CMTB_Renegade_Code@@@8 ; JMG_CMTB_Renegade_Code::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_Renegade_Code@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_Renegade_Code@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_Renegade_Code@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_Renegade_Code@@8 ; JMG_CMTB_Renegade_Code::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_Renegade_Code@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_Renegade_Code@@8 DD 00H			; JMG_CMTB_Renegade_Code::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_Renegade_Code@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_Renegade_Code@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_Renegade_Code@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_Renegade_Code `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_Renegade_Code@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_Renegade_Code@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_Renegade_Code@@6B@ DD 00H			; JMG_CMTB_Renegade_Code::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_Renegade_Code@@@8
	DD	FLAT:??_R3JMG_CMTB_Renegade_Code@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_Fake_Player_Attach_Script@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_Fake_Player_Attach_Script@@8 DD FLAT:??_R0?AVJMG_CMTB_Fake_Player_Attach_Script@@@8 ; JMG_CMTB_Fake_Player_Attach_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_Fake_Player_Attach_Script@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_Fake_Player_Attach_Script@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_Fake_Player_Attach_Script@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_Fake_Player_Attach_Script@@8 ; JMG_CMTB_Fake_Player_Attach_Script::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_Fake_Player_Attach_Script@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_Fake_Player_Attach_Script@@8 DD 00H	; JMG_CMTB_Fake_Player_Attach_Script::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_Fake_Player_Attach_Script@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_Fake_Player_Attach_Script@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_Fake_Player_Attach_Script@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_Fake_Player_Attach_Script `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_Fake_Player_Attach_Script@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_Fake_Player_Attach_Script@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_Fake_Player_Attach_Script@@6B@ DD 00H	; JMG_CMTB_Fake_Player_Attach_Script::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_Fake_Player_Attach_Script@@@8
	DD	FLAT:??_R3JMG_CMTB_Fake_Player_Attach_Script@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_Arcade_Machine@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_Arcade_Machine@@8 DD FLAT:??_R0?AVJMG_CMTB_Arcade_Machine@@@8 ; JMG_CMTB_Arcade_Machine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_Arcade_Machine@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_Arcade_Machine@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_Arcade_Machine@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_Arcade_Machine@@8 ; JMG_CMTB_Arcade_Machine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_Arcade_Machine@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_Arcade_Machine@@8 DD 00H			; JMG_CMTB_Arcade_Machine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_Arcade_Machine@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_Arcade_Machine@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_Arcade_Machine@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_Arcade_Machine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_Arcade_Machine@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_Arcade_Machine@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_Arcade_Machine@@6B@ DD 00H		; JMG_CMTB_Arcade_Machine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_Arcade_Machine@@@8
	DD	FLAT:??_R3JMG_CMTB_Arcade_Machine@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_Spectator_Object@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_Spectator_Object@@8 DD FLAT:??_R0?AVJMG_CMTB_Spectator_Object@@@8 ; JMG_CMTB_Spectator_Object::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_Spectator_Object@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_Spectator_Object@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_Spectator_Object@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_Spectator_Object@@8 ; JMG_CMTB_Spectator_Object::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_Spectator_Object@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_Spectator_Object@@8 DD 00H		; JMG_CMTB_Spectator_Object::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_Spectator_Object@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_Spectator_Object@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_Spectator_Object@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_Spectator_Object `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_Spectator_Object@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_Spectator_Object@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_Spectator_Object@@6B@ DD 00H		; JMG_CMTB_Spectator_Object::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_Spectator_Object@@@8
	DD	FLAT:??_R3JMG_CMTB_Spectator_Object@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_Zone_Realign_Enter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_Zone_Realign_Enter@@8 DD FLAT:??_R0?AVJMG_CMTB_Zone_Realign_Enter@@@8 ; JMG_CMTB_Zone_Realign_Enter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_Zone_Realign_Enter@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_Zone_Realign_Enter@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_Zone_Realign_Enter@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_Zone_Realign_Enter@@8 ; JMG_CMTB_Zone_Realign_Enter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_Zone_Realign_Enter@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_Zone_Realign_Enter@@8 DD 00H		; JMG_CMTB_Zone_Realign_Enter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_Zone_Realign_Enter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_Zone_Realign_Enter@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_Zone_Realign_Enter@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_Zone_Realign_Enter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_Zone_Realign_Enter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_Zone_Realign_Enter@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_Zone_Realign_Enter@@6B@ DD 00H		; JMG_CMTB_Zone_Realign_Enter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_Zone_Realign_Enter@@@8
	DD	FLAT:??_R3JMG_CMTB_Zone_Realign_Enter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_Comet_Script@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_Comet_Script@@8 DD FLAT:??_R0?AVJMG_CMTB_Comet_Script@@@8 ; JMG_CMTB_Comet_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_Comet_Script@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_Comet_Script@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_Comet_Script@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_Comet_Script@@8 ; JMG_CMTB_Comet_Script::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_Comet_Script@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_Comet_Script@@8 DD 00H			; JMG_CMTB_Comet_Script::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_Comet_Script@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_Comet_Script@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_Comet_Script@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_Comet_Script `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_Comet_Script@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_Comet_Script@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_Comet_Script@@6B@ DD 00H			; JMG_CMTB_Comet_Script::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_Comet_Script@@@8
	DD	FLAT:??_R3JMG_CMTB_Comet_Script@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_Ship_Control_Script@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_Ship_Control_Script@@8 DD FLAT:??_R0?AVJMG_CMTB_Ship_Control_Script@@@8 ; JMG_CMTB_Ship_Control_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_Ship_Control_Script@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_Ship_Control_Script@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_Ship_Control_Script@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_Ship_Control_Script@@8 ; JMG_CMTB_Ship_Control_Script::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_Ship_Control_Script@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_Ship_Control_Script@@8 DD 00H		; JMG_CMTB_Ship_Control_Script::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_Ship_Control_Script@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_Ship_Control_Script@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_Ship_Control_Script@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_Ship_Control_Script `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_Ship_Control_Script@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_Ship_Control_Script@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_Ship_Control_Script@@6B@ DD 00H		; JMG_CMTB_Ship_Control_Script::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_Ship_Control_Script@@@8
	DD	FLAT:??_R3JMG_CMTB_Ship_Control_Script@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_UFO_Random_Fire_Control@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_UFO_Random_Fire_Control@@8 DD FLAT:??_R0?AVJMG_CMTB_UFO_Random_Fire_Control@@@8 ; JMG_CMTB_UFO_Random_Fire_Control::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_UFO_Random_Fire_Control@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_UFO_Random_Fire_Control@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_UFO_Random_Fire_Control@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_UFO_Random_Fire_Control@@8 ; JMG_CMTB_UFO_Random_Fire_Control::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_UFO_Random_Fire_Control@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_UFO_Random_Fire_Control@@8 DD 00H		; JMG_CMTB_UFO_Random_Fire_Control::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_UFO_Random_Fire_Control@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_UFO_Random_Fire_Control@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_UFO_Random_Fire_Control@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_UFO_Random_Fire_Control `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_UFO_Random_Fire_Control@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_UFO_Random_Fire_Control@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_UFO_Random_Fire_Control@@6B@ DD 00H	; JMG_CMTB_UFO_Random_Fire_Control::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_UFO_Random_Fire_Control@@@8
	DD	FLAT:??_R3JMG_CMTB_UFO_Random_Fire_Control@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JMG_CMTB_Main_Game_Control@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JMG_CMTB_Main_Game_Control@@8 DD FLAT:??_R0?AVJMG_CMTB_Main_Game_Control@@@8 ; JMG_CMTB_Main_Game_Control::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JMG_CMTB_Main_Game_Control@@8
rdata$r	ENDS
;	COMDAT ??_R2JMG_CMTB_Main_Game_Control@@8
rdata$r	SEGMENT
??_R2JMG_CMTB_Main_Game_Control@@8 DD FLAT:??_R1A@?0A@EA@JMG_CMTB_Main_Game_Control@@8 ; JMG_CMTB_Main_Game_Control::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JMG_CMTB_Main_Game_Control@@8
rdata$r	SEGMENT
??_R3JMG_CMTB_Main_Game_Control@@8 DD 00H		; JMG_CMTB_Main_Game_Control::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JMG_CMTB_Main_Game_Control@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJMG_CMTB_Main_Game_Control@@@8
_DATA	SEGMENT
??_R0?AVJMG_CMTB_Main_Game_Control@@@8 DD FLAT:??_7type_info@@6B@ ; JMG_CMTB_Main_Game_Control `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJMG_CMTB_Main_Game_Control@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JMG_CMTB_Main_Game_Control@@6B@
rdata$r	SEGMENT
??_R4JMG_CMTB_Main_Game_Control@@6B@ DD 00H		; JMG_CMTB_Main_Game_Control::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJMG_CMTB_Main_Game_Control@@@8
	DD	FLAT:??_R3JMG_CMTB_Main_Game_Control@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JFW_Object_Created_Hook_Base@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JFW_Object_Created_Hook_Base@@8 DD FLAT:??_R0?AVJFW_Object_Created_Hook_Base@@@8 ; JFW_Object_Created_Hook_Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JFW_Object_Created_Hook_Base@@8
rdata$r	ENDS
;	COMDAT ??_R2JFW_Object_Created_Hook_Base@@8
rdata$r	SEGMENT
??_R2JFW_Object_Created_Hook_Base@@8 DD FLAT:??_R1A@?0A@EA@JFW_Object_Created_Hook_Base@@8 ; JFW_Object_Created_Hook_Base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JFW_Object_Created_Hook_Base@@8
rdata$r	SEGMENT
??_R3JFW_Object_Created_Hook_Base@@8 DD 00H		; JFW_Object_Created_Hook_Base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JFW_Object_Created_Hook_Base@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJFW_Object_Created_Hook_Base@@@8
_DATA	SEGMENT
??_R0?AVJFW_Object_Created_Hook_Base@@@8 DD FLAT:??_7type_info@@6B@ ; JFW_Object_Created_Hook_Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJFW_Object_Created_Hook_Base@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JFW_Object_Created_Hook_Base@@6B@
rdata$r	SEGMENT
??_R4JFW_Object_Created_Hook_Base@@6B@ DD 00H		; JFW_Object_Created_Hook_Base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJFW_Object_Created_Hook_Base@@@8
	DD	FLAT:??_R3JFW_Object_Created_Hook_Base@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8 DD FLAT:??_R0?AV?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@@8 ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8
rdata$r	SEGMENT
??_R2?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8 DD FLAT:??_R1A@?0A@EA@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8 ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8
rdata$r	SEGMENT
??_R3?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8 DD 00H ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@@8
_DATA	SEGMENT
??_R0?AV?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@@8 DD FLAT:??_7type_info@@6B@ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpC'
	DB	'lass@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@
rdata$r	SEGMENT
??_R4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@ DD 00H ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@@8
	DD	FLAT:??_R3?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MultiKeyHookScriptImpClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MultiKeyHookScriptImpClass@@8 DD FLAT:??_R0?AVMultiKeyHookScriptImpClass@@@8 ; MultiKeyHookScriptImpClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MultiKeyHookScriptImpClass@@8
rdata$r	ENDS
;	COMDAT ??_R2MultiKeyHookScriptImpClass@@8
rdata$r	SEGMENT
??_R2MultiKeyHookScriptImpClass@@8 DD FLAT:??_R1A@?0A@EA@MultiKeyHookScriptImpClass@@8 ; MultiKeyHookScriptImpClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3MultiKeyHookScriptImpClass@@8
rdata$r	SEGMENT
??_R3MultiKeyHookScriptImpClass@@8 DD 00H		; MultiKeyHookScriptImpClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2MultiKeyHookScriptImpClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMultiKeyHookScriptImpClass@@@8
_DATA	SEGMENT
??_R0?AVMultiKeyHookScriptImpClass@@@8 DD FLAT:??_7type_info@@6B@ ; MultiKeyHookScriptImpClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMultiKeyHookScriptImpClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MultiKeyHookScriptImpClass@@6B@
rdata$r	SEGMENT
??_R4MultiKeyHookScriptImpClass@@6B@ DD 00H		; MultiKeyHookScriptImpClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMultiKeyHookScriptImpClass@@@8
	DD	FLAT:??_R3MultiKeyHookScriptImpClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JFW_Key_Hook_Base@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JFW_Key_Hook_Base@@8 DD FLAT:??_R0?AVJFW_Key_Hook_Base@@@8 ; JFW_Key_Hook_Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JFW_Key_Hook_Base@@8
rdata$r	ENDS
;	COMDAT ??_R2JFW_Key_Hook_Base@@8
rdata$r	SEGMENT
??_R2JFW_Key_Hook_Base@@8 DD FLAT:??_R1A@?0A@EA@JFW_Key_Hook_Base@@8 ; JFW_Key_Hook_Base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JFW_Key_Hook_Base@@8
rdata$r	SEGMENT
??_R3JFW_Key_Hook_Base@@8 DD 00H			; JFW_Key_Hook_Base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JFW_Key_Hook_Base@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJFW_Key_Hook_Base@@@8
_DATA	SEGMENT
??_R0?AVJFW_Key_Hook_Base@@@8 DD FLAT:??_7type_info@@6B@ ; JFW_Key_Hook_Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJFW_Key_Hook_Base@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JFW_Key_Hook_Base@@6B@
rdata$r	SEGMENT
??_R4JFW_Key_Hook_Base@@6B@ DD 00H			; JFW_Key_Hook_Base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJFW_Key_Hook_Base@@@8
	DD	FLAT:??_R3JFW_Key_Hook_Base@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ReferencerClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReferencerClass@@8 DD FLAT:??_R0?AVReferencerClass@@@8 ; ReferencerClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ReferencerClass@@8
rdata$r	ENDS
;	COMDAT ??_R2ReferencerClass@@8
rdata$r	SEGMENT
??_R2ReferencerClass@@8 DD FLAT:??_R1A@?0A@EA@ReferencerClass@@8 ; ReferencerClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PostLoadableClass@@8
rdata$r	ENDS
;	COMDAT ??_R3ReferencerClass@@8
rdata$r	SEGMENT
??_R3ReferencerClass@@8 DD 00H				; ReferencerClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ReferencerClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReferencerClass@@@8
_DATA	SEGMENT
??_R0?AVReferencerClass@@@8 DD FLAT:??_7type_info@@6B@	; ReferencerClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReferencerClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ReferencerClass@@6B@
rdata$r	SEGMENT
??_R4ReferencerClass@@6B@ DD 00H			; ReferencerClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReferencerClass@@@8
	DD	FLAT:??_R3ReferencerClass@@8
rdata$r	ENDS
;	COMDAT ??_R4PostLoadableClass@@6B@
rdata$r	SEGMENT
??_R4PostLoadableClass@@6B@ DD 00H			; PostLoadableClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPostLoadableClass@@@8
	DD	FLAT:??_R3PostLoadableClass@@8
rdata$r	ENDS
;	COMDAT ??_R2PostLoadableClass@@8
rdata$r	SEGMENT
??_R2PostLoadableClass@@8 DD FLAT:??_R1A@?0A@EA@PostLoadableClass@@8 ; PostLoadableClass::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3PostLoadableClass@@8
rdata$r	SEGMENT
??_R3PostLoadableClass@@8 DD 00H			; PostLoadableClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2PostLoadableClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPostLoadableClass@@@8
_DATA	SEGMENT
??_R0?AVPostLoadableClass@@@8 DD FLAT:??_7type_info@@6B@ ; PostLoadableClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPostLoadableClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@PostLoadableClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PostLoadableClass@@8 DD FLAT:??_R0?AVPostLoadableClass@@@8 ; PostLoadableClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PostLoadableClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@INIClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@INIClass@@8 DD FLAT:??_R0?AVINIClass@@@8	; INIClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3INIClass@@8
rdata$r	ENDS
;	COMDAT ??_R2INIClass@@8
rdata$r	SEGMENT
??_R2INIClass@@8 DD FLAT:??_R1A@?0A@EA@INIClass@@8	; INIClass::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3INIClass@@8
rdata$r	SEGMENT
??_R3INIClass@@8 DD 00H					; INIClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2INIClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVINIClass@@@8
_DATA	SEGMENT
??_R0?AVINIClass@@@8 DD FLAT:??_7type_info@@6B@		; INIClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVINIClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4INIClass@@6B@
rdata$r	SEGMENT
??_R4INIClass@@6B@ DD 00H				; INIClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVINIClass@@@8
	DD	FLAT:??_R3INIClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ThreadClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ThreadClass@@8 DD FLAT:??_R0?AVThreadClass@@@8 ; ThreadClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ThreadClass@@8
rdata$r	ENDS
;	COMDAT ??_R2ThreadClass@@8
rdata$r	SEGMENT
??_R2ThreadClass@@8 DD FLAT:??_R1A@?0A@EA@ThreadClass@@8 ; ThreadClass::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ThreadClass@@8
rdata$r	SEGMENT
??_R3ThreadClass@@8 DD 00H				; ThreadClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ThreadClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVThreadClass@@@8
_DATA	SEGMENT
??_R0?AVThreadClass@@@8 DD FLAT:??_7type_info@@6B@	; ThreadClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVThreadClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ThreadClass@@6B@
rdata$r	SEGMENT
??_R4ThreadClass@@6B@ DD 00H				; ThreadClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVThreadClass@@@8
	DD	FLAT:??_R3ThreadClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ScriptImpClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ScriptImpClass@@8 DD FLAT:??_R0?AVScriptImpClass@@@8 ; ScriptImpClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ScriptImpClass@@8
rdata$r	ENDS
;	COMDAT ??_R2ScriptImpClass@@8
rdata$r	SEGMENT
??_R2ScriptImpClass@@8 DD FLAT:??_R1A@?0A@EA@ScriptImpClass@@8 ; ScriptImpClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3ScriptImpClass@@8
rdata$r	SEGMENT
??_R3ScriptImpClass@@8 DD 00H				; ScriptImpClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ScriptImpClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVScriptImpClass@@@8
_DATA	SEGMENT
??_R0?AVScriptImpClass@@@8 DD FLAT:??_7type_info@@6B@	; ScriptImpClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVScriptImpClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ScriptImpClass@@6B@
rdata$r	SEGMENT
??_R4ScriptImpClass@@6B@ DD 00H				; ScriptImpClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVScriptImpClass@@@8
	DD	FLAT:??_R3ScriptImpClass@@8
rdata$r	ENDS
;	COMDAT ??_R4GameObjObserverClass@@6B@
rdata$r	SEGMENT
??_R4GameObjObserverClass@@6B@ DD 00H			; GameObjObserverClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGameObjObserverClass@@@8
	DD	FLAT:??_R3GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R2GameObjObserverClass@@8
rdata$r	SEGMENT
??_R2GameObjObserverClass@@8 DD FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8 ; GameObjObserverClass::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3GameObjObserverClass@@8
rdata$r	SEGMENT
??_R3GameObjObserverClass@@8 DD 00H			; GameObjObserverClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGameObjObserverClass@@@8
_DATA	SEGMENT
??_R0?AVGameObjObserverClass@@@8 DD FLAT:??_7type_info@@6B@ ; GameObjObserverClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGameObjObserverClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GameObjObserverClass@@8 DD FLAT:??_R0?AVGameObjObserverClass@@@8 ; GameObjObserverClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ScriptClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ScriptClass@@8 DD FLAT:??_R0?AVScriptClass@@@8 ; ScriptClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ScriptClass@@8
rdata$r	ENDS
;	COMDAT ??_R2ScriptClass@@8
rdata$r	SEGMENT
??_R2ScriptClass@@8 DD FLAT:??_R1A@?0A@EA@ScriptClass@@8 ; ScriptClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3ScriptClass@@8
rdata$r	SEGMENT
??_R3ScriptClass@@8 DD 00H				; ScriptClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ScriptClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVScriptClass@@@8
_DATA	SEGMENT
??_R0?AVScriptClass@@@8 DD FLAT:??_7type_info@@6B@	; ScriptClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVScriptClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ScriptClass@@6B@
rdata$r	SEGMENT
??_R4ScriptClass@@6B@ DD 00H				; ScriptClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVScriptClass@@@8
	DD	FLAT:??_R3ScriptClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ScriptFactory@@8 DD FLAT:??_R0?AVScriptFactory@@@8 ; ScriptFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R2ScriptFactory@@8
rdata$r	SEGMENT
??_R2ScriptFactory@@8 DD FLAT:??_R1A@?0A@EA@ScriptFactory@@8 ; ScriptFactory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ScriptFactory@@8
rdata$r	SEGMENT
??_R3ScriptFactory@@8 DD 00H				; ScriptFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVScriptFactory@@@8
_DATA	SEGMENT
??_R0?AVScriptFactory@@@8 DD FLAT:??_7type_info@@6B@	; ScriptFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVScriptFactory@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ScriptFactory@@6B@
rdata$r	SEGMENT
??_R4ScriptFactory@@6B@ DD 00H				; ScriptFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVScriptFactory@@@8
	DD	FLAT:??_R3ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_C@_0DL@BOENBDGI@ObjectPoolClass?$DMclass?5GenericSLN@
CONST	SEGMENT
??_C@_0DL@BOENBDGI@ObjectPoolClass?$DMclass?5GenericSLN@ DB 'ObjectPoolCl'
	DB	'ass<class GenericSLNode,256>::~ObjectPoolClass', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@NOANHENP@?$CFd?5memory?5leaks?5found?5in?5ObjectP@
CONST	SEGMENT
??_C@_0FF@NOANHENP@?$CFd?5memory?5leaks?5found?5in?5ObjectP@ DB '%d memor'
	DB	'y leaks found in ObjectPoolClass<class GenericSLNode,256>::~O'
	DB	'bjectPoolClass', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@IOGKEECK@ObjectPoolClass?$DMclass?5GenericSLN@
CONST	SEGMENT
??_C@_0EB@IOGKEECK@ObjectPoolClass?$DMclass?5GenericSLN@ DB 'ObjectPoolCl'
	DB	'ass<class GenericSLNode,256>::Allocate_Object_Memory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@FILOACHK@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0EA@FILOACHK@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_Poke_Change_Difficulty>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@PJAEHEDC@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0DG@PJAEHEDC@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_Poke_End_Map>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@DBHOJACP@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0DN@DBHOJACP@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_Vehicle_Face_Turret>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@INLIGAMA@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0DG@INLIGAMA@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_Player_Drone>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@BLMFDFLB@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0DL@BLMFDFLB@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_Cargo_Ship_Turret>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@EHNBAFOM@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0DL@EHNBAFOM@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_Cargo_Ship_Script>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@HNAFBNDA@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0DI@HNAFBNDA@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_Powerup_Script>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@FGMMLFNJ@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0DL@FGMMLFNJ@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_Ship_Super_Weapon>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@NEGEDPOI@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0DJ@NEGEDPOI@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_The_Moon_Script>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@EKCPHHAF@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0DF@EKCPHHAF@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_Motion_Mine>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@JBKDKLMC@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0DH@JBKDKLMC@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_Renegade_Code>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@PHCMDPKL@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0ED@PHCMDPKL@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_Fake_Player_Attach_Script>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@KJJPOPHL@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0DI@KJJPOPHL@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_Arcade_Machine>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@DDIMDDKK@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0DK@DDIMDDKK@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_Spectator_Object>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@NBIHAAN@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0DM@NBIHAAN@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegistr'
	DB	'ant<class JMG_CMTB_Zone_Realign_Enter>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@CFCKHAMN@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0DG@CFCKHAMN@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_Comet_Script>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@OOLBNELF@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0EB@OOLBNELF@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_UFO_Random_Fire_Control>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@LDEKIAPI@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0DN@LDEKIAPI@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_Ship_Control_Script>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@IJKKMJIJ@ScriptRegistrant?$DMclass?5JMG_CMTB_@
CONST	SEGMENT
??_C@_0DL@IJKKMJIJ@ScriptRegistrant?$DMclass?5JMG_CMTB_@ DB 'ScriptRegist'
	DB	'rant<class JMG_CMTB_Main_Game_Control>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@KOJCCMGL@ScriptRegistrant?$DMclass?5JMG_Apply@
CONST	SEGMENT
??_C@_0DK@KOJCCMGL@ScriptRegistrant?$DMclass?5JMG_Apply@ DB 'ScriptRegist'
	DB	'rant<class JMG_Apply_Damage_On_Timer>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@OKNJMGOP@ScriptRegistrant?$DMclass?5JMG_User_@
CONST	SEGMENT
??_C@_0DJ@OKNJMGOP@ScriptRegistrant?$DMclass?5JMG_User_@ DB 'ScriptRegist'
	DB	'rant<class JMG_User_Auto_Enter_Ship>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@HPBHHPOO@ScriptRegistrant?$DMclass?5JMG_Attac@
CONST	SEGMENT
??_C@_0DG@HPBHHPOO@ScriptRegistrant?$DMclass?5JMG_Attac@ DB 'ScriptRegist'
	DB	'rant<class JMG_Attach_And_Remove>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@CAONIPOF@ScriptRegistrant?$DMclass?5JMG_Comet@
CONST	SEGMENT
??_C@_0DJ@CAONIPOF@ScriptRegistrant?$DMclass?5JMG_Comet@ DB 'ScriptRegist'
	DB	'rant<class JMG_Comet_Control_Script>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@IMLNHFFC@ScriptRegistrant?$DMclass?5JMG_New_S@
CONST	SEGMENT
??_C@_0ED@IMLNHFFC@ScriptRegistrant?$DMclass?5JMG_New_S@ DB 'ScriptRegist'
	DB	'rant<class JMG_New_Ship_Weapon_Control_System>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@HBFECPDE@ScriptRegistrant?$DMclass?5JMG_Renet@
CONST	SEGMENT
??_C@_0DI@HBFECPDE@ScriptRegistrant?$DMclass?5JMG_Renet@ DB 'ScriptRegist'
	DB	'rant<class JMG_Renetbusters_Object>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@ODAKIONA@ScriptRegistrant?$DMclass?5JMG_Ship_@
CONST	SEGMENT
??_C@_0DH@ODAKIONA@ScriptRegistrant?$DMclass?5JMG_Ship_@ DB 'ScriptRegist'
	DB	'rant<class JMG_Ship_Shield_Script>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@EBLHNLHN@ScriptRegistrant?$DMclass?5JMG_Kill_@
CONST	SEGMENT
??_C@_0EI@EBLHNLHN@ScriptRegistrant?$DMclass?5JMG_Kill_@ DB 'ScriptRegist'
	DB	'rant<class JMG_Kill_Self_And_Sender_On_Custom_Ship>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@IAJCIEIN@ScriptRegistrant?$DMclass?5JMG_Ship_@
CONST	SEGMENT
??_C@_0DP@IAJCIEIN@ScriptRegistrant?$DMclass?5JMG_Ship_@ DB 'ScriptRegist'
	DB	'rant<class JMG_Ship_Shield_Control_Script>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@HICJEPCL@ScriptRegistrant?$DMclass?5JMG_Kill_@
CONST	SEGMENT
??_C@_0ED@HICJEPCL@ScriptRegistrant?$DMclass?5JMG_Kill_@ DB 'ScriptRegist'
	DB	'rant<class JMG_Kill_Self_And_Sender_On_Custom>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@HIPPMCNE@ScriptRegistrant?$DMclass?5JMG_Croni@
CONST	SEGMENT
??_C@_0CO@HIPPMCNE@ScriptRegistrant?$DMclass?5JMG_Croni@ DB 'ScriptRegist'
	DB	'rant<class JMG_Cronie_AI>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@CDLJMKLF@ScriptRegistrant?$DMclass?5JMG_Retur@
CONST	SEGMENT
??_C@_0DM@CDLJMKLF@ScriptRegistrant?$DMclass?5JMG_Retur@ DB 'ScriptRegist'
	DB	'rant<class JMG_Return_Custom_When_Shot>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@LIJAAGCL@ScriptRegistrant?$DMclass?5JMG_Ship_@
CONST	SEGMENT
??_C@_0DA@LIJAAGCL@ScriptRegistrant?$DMclass?5JMG_Ship_@ DB 'ScriptRegist'
	DB	'rant<class JMG_Ship_Weapon>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@PKHMAGHK@ScriptRegistrant?$DMclass?5JMG_Rando@
CONST	SEGMENT
??_C@_0DB@PKHMAGHK@ScriptRegistrant?$DMclass?5JMG_Rando@ DB 'ScriptRegist'
	DB	'rant<class JMG_Random_Music>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@BFEIIILC@ScriptRegistrant?$DMclass?5JMG_Ship_@
CONST	SEGMENT
??_C@_0DL@BFEIIILC@ScriptRegistrant?$DMclass?5JMG_Ship_@ DB 'ScriptRegist'
	DB	'rant<class JMG_Ship_Random_Hyperspace>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@LJGDPKPO@ScriptRegistrant?$DMclass?5JMG_Advan@
CONST	SEGMENT
??_C@_0DJ@LJGDPKPO@ScriptRegistrant?$DMclass?5JMG_Advan@ DB 'ScriptRegist'
	DB	'rant<class JMG_Advanced_Bounce_Zone>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
CONST	SEGMENT
??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ DB 'x'
	DB	00H, ':', 00H, '\', 00H, 'g', 00H, 'i', 00H, 't', 00H, 'h', 00H
	DB	'u', 00H, 'b', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'e'
	DB	00H, 'g', 00H, 'a', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'd', 00H
	DB	'r', 00H, 'a', 00H, 'g', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'd'
	DB	00H, 'e', 00H, '_', 00H, 'r', 00H, 'x', 00H, 'd', 00H, '\', 00H
	DB	's', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 's'
	DB	00H, '\', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H
	DB	't', 00H, 's', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
CONST	SEGMENT
??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@ DB 'x:\github\re'
	DB	'negade\dragonade_rxd\scripts\scripts.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@KILFNNFD@ScriptRegistrant?$DMclass?5JMG_Creat@
CONST	SEGMENT
??_C@_0DI@KILFNNFD@ScriptRegistrant?$DMclass?5JMG_Creat@ DB 'ScriptRegist'
	DB	'rant<class JMG_Create_Ship_On_Poke>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@HIHNAGN@SList?$DMstruct?5MultiKeyHookScriptI@
CONST	SEGMENT
??_C@_0EN@HIHNAGN@SList?$DMstruct?5MultiKeyHookScriptI@ DB 'SList<struct '
	DB	'MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Insert_Aft'
	DB	'er', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@OJGPEJGC@SList?$DMstruct?5MultiKeyHookScriptI@
CONST	SEGMENT
??_C@_0EO@OJGPEJGC@SList?$DMstruct?5MultiKeyHookScriptI@ DB 'SList<struct'
	DB	' MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Insert_Be'
	DB	'fore', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@MPFHHNNA@SList?$DMstruct?5MultiKeyHookScriptI@
CONST	SEGMENT
??_C@_0EL@MPFHHNNA@SList?$DMstruct?5MultiKeyHookScriptI@ DB 'SList<struct'
	DB	' MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_Al'
	DB	'l', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@CGJBMJBC@SList?$DMstruct?5MultiKeyHookScriptI@
CONST	SEGMENT
??_C@_0EH@CGJBMJBC@SList?$DMstruct?5MultiKeyHookScriptI@ DB 'SList<struct'
	DB	' MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@PPENJFKC@SList?$DMstruct?5MultiKeyHookScriptI@
CONST	SEGMENT
??_C@_0EM@PPENJFKC@SList?$DMstruct?5MultiKeyHookScriptI@ DB 'SList<struct'
	DB	' MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_He'
	DB	'ad', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@OIGECPDF@SList?$DMstruct?5MultiKeyHookScriptI@
CONST	SEGMENT
??_C@_0EJ@OIGECPDF@SList?$DMstruct?5MultiKeyHookScriptI@ DB 'SList<struct'
	DB	' MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Tail', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
CONST	SEGMENT
??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ DB 'x'
	DB	00H, ':', 00H, '\', 00H, 'g', 00H, 'i', 00H, 't', 00H, 'h', 00H
	DB	'u', 00H, 'b', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'e'
	DB	00H, 'g', 00H, 'a', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'd', 00H
	DB	'r', 00H, 'a', 00H, 'g', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'd'
	DB	00H, 'e', 00H, '_', 00H, 'r', 00H, 'x', 00H, 'd', 00H, '\', 00H
	DB	's', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 's'
	DB	00H, '\', 00H, 's', 00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
CONST	SEGMENT
??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@ DB 'x:\github\re'
	DB	'negade\dragonade_rxd\scripts\slist.h', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@ENMBJFB@SList?$DMstruct?5MultiKeyHookScriptI@
CONST	SEGMENT
??_C@_0EJ@ENMBJFB@SList?$DMstruct?5MultiKeyHookScriptI@ DB 'SList<struct '
	DB	'MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Head', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CJEFGFNJ@JMG_CMTB_Poke_Change_Difficulty?$AA@
CONST	SEGMENT
??_C@_0CA@CJEFGFNJ@JMG_CMTB_Poke_Change_Difficulty?$AA@ DB 'JMG_CMTB_Poke'
	DB	'_Change_Difficulty', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BG@KJLBHOJC@JMG_CMTB_Poke_End_Map?$AA@
CONST	SEGMENT
??_C@_0BG@KJLBHOJC@JMG_CMTB_Poke_End_Map?$AA@ DB 'JMG_CMTB_Poke_End_Map', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0DL@HMJKEEFC@PlayerNumber?3int?0Power?3int?0RePos@
CONST	SEGMENT
??_C@_0DL@HMJKEEFC@PlayerNumber?3int?0Power?3int?0RePos@ DB 'PlayerNumber'
	DB	':int,Power:int,RePosition:int,PlayerEscort:int', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Player_Drone>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BB@BGEIDIFC@PlayerNumber?3int?$AA@
CONST	SEGMENT
??_C@_0BB@BGEIDIFC@PlayerNumber?3int?$AA@ DB 'PlayerNumber:int', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BI@LCBNHEBB@Custom?3int?0LifeTime?3int?$AA@
CONST	SEGMENT
??_C@_0BI@LCBNHEBB@Custom?3int?0LifeTime?3int?$AA@ DB 'Custom:int,LifeTim'
	DB	'e:int', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BF@LMMAOJPK@ControllerShipID?3int?$AA@
CONST	SEGMENT
??_C@_0BF@LMMAOJPK@ControllerShipID?3int?$AA@ DB 'ControllerShipID:int', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BJ@ONFJBKAC@JMG_CMTB_The_Moon_Script?$AA@
CONST	SEGMENT
??_C@_0BJ@ONFJBKAC@JMG_CMTB_The_Moon_Script?$AA@ DB 'JMG_CMTB_The_Moon_Sc'
	DB	'ript', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0M@DKGEGNAD@Is_BOSS?3int?$AA@
CONST	SEGMENT
??_C@_0M@DKGEGNAD@Is_BOSS?3int?$AA@ DB 'Is_BOSS:int', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BL@BBONPPAA@MySoldierID?3int?0Number?3int?$AA@
CONST	SEGMENT
??_C@_0BL@BBONPPAA@MySoldierID?3int?0Number?3int?$AA@ DB 'MySoldierID:int'
	DB	',Number:int', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BI@KFEDCGBB@JMG_CMTB_Arcade_Machine?$AA@
CONST	SEGMENT
??_C@_0BI@KFEDCGBB@JMG_CMTB_Arcade_Machine?$AA@ DB 'JMG_CMTB_Arcade_Machi'
	DB	'ne', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@EOABBIBL@ControllerID?$DN0?3int?0MachineNumber@
CONST	SEGMENT
??_C@_0CH@EOABBIBL@ControllerID?$DN0?3int?0MachineNumber@ DB 'ControllerI'
	DB	'D=0:int,MachineNumber=0:int', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BM@IOJIEINM@ControllerID?3int?0Number?3int?$AA@
CONST	SEGMENT
??_C@_0BM@IOJIEINM@ControllerID?3int?0Number?3int?$AA@ DB 'ControllerID:i'
	DB	'nt,Number:int', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BM@GGNCDFOM@JMG_CMTB_Zone_Realign_Enter?$AA@
CONST	SEGMENT
??_C@_0BM@GGNCDFOM@JMG_CMTB_Zone_Realign_Enter?$AA@ DB 'JMG_CMTB_Zone_Rea'
	DB	'lign_Enter', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HBBNOJNA@Position?$DN0?40?50?40?50?40?3Vector3?$AA@
CONST	SEGMENT
??_C@_0BN@HBBNOJNA@Position?$DN0?40?50?40?50?40?3Vector3?$AA@ DB 'Positio'
	DB	'n=0.0 0.0 0.0:Vector3', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0CO@KAJJGBAB@Size?$DN2?3int?0TargetPosition?$DN0?40?50?4@
CONST	SEGMENT
??_C@_0CO@KAJJGBAB@Size?$DN2?3int?0TargetPosition?$DN0?40?50?4@ DB 'Size='
	DB	'2:int,TargetPosition=0.0 0.0 0.0:Vector3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Comet_Script>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0M@HMICPFDE@UFOBoss?3int?$AA@
CONST	SEGMENT
??_C@_0M@HMICPFDE@UFOBoss?3int?$AA@ DB 'UFOBoss:int', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@6B@ ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BN@JOGEAGBE@JMG_CMTB_Ship_Control_Script?$AA@
CONST	SEGMENT
??_C@_0BN@JOGEAGBE@JMG_CMTB_Ship_Control_Script?$AA@ DB 'JMG_CMTB_Ship_Co'
	DB	'ntrol_Script', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BL@JFPJNFJB@JMG_CMTB_Main_Game_Control?$AA@
CONST	SEGMENT
??_C@_0BL@JFPJNFJB@JMG_CMTB_Main_Game_Control?$AA@ DB 'JMG_CMTB_Main_Game'
	DB	'_Control', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@6B@ ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BK@CADJILLC@JMG_Apply_Damage_On_Timer?$AA@
CONST	SEGMENT
??_C@_0BK@CADJILLC@JMG_Apply_Damage_On_Timer?$AA@ DB 'JMG_Apply_Damage_On'
	DB	'_Timer', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@6B@ ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BJ@JFJACLHB@JMG_User_Auto_Enter_Ship?$AA@
CONST	SEGMENT
??_C@_0BJ@JFJACLHB@JMG_User_Auto_Enter_Ship?$AA@ DB 'JMG_User_Auto_Enter_'
	DB	'Ship', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@HGDGGFFP@Player_Ship?$DNRB_Blue_Player_Ship?3@
CONST	SEGMENT
??_C@_0CH@HGDGGFFP@Player_Ship?$DNRB_Blue_Player_Ship?3@ DB 'Player_Ship='
	DB	'RB_Blue_Player_Ship:string', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@6B@ ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BF@HBPOJDOK@Smaller_Comet?3string?$AA@
CONST	SEGMENT
??_C@_0BF@HBPOJDOK@Smaller_Comet?3string?$AA@ DB 'Smaller_Comet:string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@6B@ ; ScriptRegistrant<JMG_Attach_And_Remove>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BJ@DHIJIIMB@JMG_Comet_Control_Script?$AA@
CONST	SEGMENT
??_C@_0BJ@DHIJIIMB@JMG_Comet_Control_Script?$AA@ DB 'JMG_Comet_Control_Sc'
	DB	'ript', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@IMAIKLEL@Comet_Size?3float?0Spawn_Comets?$DN0?3@
CONST	SEGMENT
??_C@_0FH@IMAIKLEL@Comet_Size?3float?0Spawn_Comets?$DN0?3@ DB 'Comet_Size'
	DB	':float,Spawn_Comets=0:int,Comet_Holder=null:string,Smaller_Co'
	DB	'met=null:string', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@6B@ ; ScriptRegistrant<JMG_Comet_Control_Script>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0CD@MBNGPBCI@JMG_New_Ship_Weapon_Control_Syst@
CONST	SEGMENT
??_C@_0CD@MBNGPBCI@JMG_New_Ship_Weapon_Control_Syst@ DB 'JMG_New_Ship_Wea'
	DB	'pon_Control_System', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@6B@ ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BI@JANFOPGL@JMG_Renetbusters_Object?$AA@
CONST	SEGMENT
??_C@_0BI@JANFOPGL@JMG_Renetbusters_Object?$AA@ DB 'JMG_Renetbusters_Obje'
	DB	'ct', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JAOGOEJB@size?3float?0Power_Drain?3int?$AA@
CONST	SEGMENT
??_C@_0BL@JAOGOEJB@size?3float?0Power_Drain?3int?$AA@ DB 'size:float,Powe'
	DB	'r_Drain:int', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@6B@ ; ScriptRegistrant<JMG_Renetbusters_Object>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_06IDGMBKCH@ID?3int?$AA@
CONST	SEGMENT
??_C@_06IDGMBKCH@ID?3int?$AA@ DB 'ID:int', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@6B@ ; ScriptRegistrant<JMG_Ship_Shield_Script>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0CI@FIKIDPDG@JMG_Kill_Self_And_Sender_On_Cust@
CONST	SEGMENT
??_C@_0CI@FIKIDPDG@JMG_Kill_Self_And_Sender_On_Cust@ DB 'JMG_Kill_Self_An'
	DB	'd_Sender_On_Custom_Ship', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@6B@ ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BP@OEEKAOHD@JMG_Ship_Shield_Control_Script?$AA@
CONST	SEGMENT
??_C@_0BP@OEEKAOHD@JMG_Ship_Shield_Control_Script?$AA@ DB 'JMG_Ship_Shiel'
	DB	'd_Control_Script', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@6B@ ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0CD@NACCMAPF@JMG_Kill_Self_And_Sender_On_Cust@
CONST	SEGMENT
??_C@_0CD@NACCMAPF@JMG_Kill_Self_And_Sender_On_Cust@ DB 'JMG_Kill_Self_An'
	DB	'd_Sender_On_Custom', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HBPJHKKO@Message?3int?$AA@
CONST	SEGMENT
??_C@_0M@HBPJHKKO@Message?3int?$AA@ DB 'Message:int', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@6B@ ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0O@CMOIFFKF@JMG_Cronie_AI?$AA@
CONST	SEGMENT
??_C@_0O@CMOIFFKF@JMG_Cronie_AI?$AA@ DB 'JMG_Cronie_AI', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_Cronie_AI@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_Cronie_AI@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_Cronie_AI@@@@6B@ ; ScriptRegistrant<JMG_Cronie_AI>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_Cronie_AI@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_Cronie_AI@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BM@EIAAOEBK@JMG_Return_Custom_When_Shot?$AA@
CONST	SEGMENT
??_C@_0BM@EIAAOEBK@JMG_Return_Custom_When_Shot?$AA@ DB 'JMG_Return_Custom'
	DB	'_When_Shot', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@6B@ ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BA@MMIEMBHJ@JMG_Ship_Weapon?$AA@
CONST	SEGMENT
??_C@_0BA@MMIEMBHJ@JMG_Ship_Weapon?$AA@ DB 'JMG_Ship_Weapon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_Ship_Weapon@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_Ship_Weapon@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_Ship_Weapon@@@@6B@ ; ScriptRegistrant<JMG_Ship_Weapon>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_Ship_Weapon@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_Ship_Weapon@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BB@LBKFGDNM@JMG_Random_Music?$AA@
CONST	SEGMENT
??_C@_0BB@LBKFGDNM@JMG_Random_Music?$AA@ DB 'JMG_Random_Music', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@IANBPFPH@Song1?3string?0Song1Time?3float?0Son@
CONST	SEGMENT
??_C@_0FH@IANBPFPH@Song1?3string?0Song1Time?3float?0Son@ DB 'Song1:string'
	DB	',Song1Time:float,Song2:string,Song2Time:float,Song3:string,So'
	DB	'ng3Time:float', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_Random_Music@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_Random_Music@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_Random_Music@@@@6B@ ; ScriptRegistrant<JMG_Random_Music>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_Random_Music@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_Random_Music@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BL@PAOMGHPC@JMG_Ship_Random_Hyperspace?$AA@
CONST	SEGMENT
??_C@_0BL@PAOMGHPC@JMG_Ship_Random_Hyperspace?$AA@ DB 'JMG_Ship_Random_Hy'
	DB	'perspace', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@GPBNBBEO@HyperspacingModel?$DNcometbshs?3stri@
CONST	SEGMENT
??_C@_0EI@GPBNBBEO@HyperspacingModel?$DNcometbshs?3stri@ DB 'Hyperspacing'
	DB	'Model=cometbshs:string,HyperSpaceSound=Ship_Teleport:string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@6B@ ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BJ@GEFDPELA@JMG_Advanced_Bounce_Zone?$AA@
CONST	SEGMENT
??_C@_0BJ@GEFDPELA@JMG_Advanced_Bounce_Zone?$AA@ DB 'JMG_Advanced_Bounce_'
	DB	'Zone', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@FEHDLNFG@XAmount?$DN0?3float?0YAmount?$DN0?3float?0@
CONST	SEGMENT
??_C@_0DA@FEHDLNFG@XAmount?$DN0?3float?0YAmount?$DN0?3float?0@ DB 'XAmoun'
	DB	't=0:float,YAmount=0:float,ZAmount=0:float', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@6B@ ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BI@OCLAMLOP@JMG_Create_Ship_On_Poke?$AA@
CONST	SEGMENT
??_C@_0BI@OCLAMLOP@JMG_Create_Ship_On_Poke?$AA@ DB 'JMG_Create_Ship_On_Po'
	DB	'ke', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0KC@KACPIFJF@CreateSpot?3vector3?0ShipPreset?$DNCo@
CONST	SEGMENT
??_C@_0KC@KACPIFJF@CreateSpot?3vector3?0ShipPreset?$DNCo@ DB 'CreateSpot:'
	DB	'vector3,ShipPreset=Comet_Busters_Ship_Blue:string,SpawnSpotEx'
	DB	'plosion=Explosion_Clear_Spawn_Point:string,InvisibleObject=In'
	DB	'visible_Spectator_Box:string', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@6B@ ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BN@EILNFNJP@?$FLDIFFICULTY?5SET?5TO?5DOOMSDAY?$FN?$AA@
CONST	SEGMENT
??_C@_0BN@EILNFNJP@?$FLDIFFICULTY?5SET?5TO?5DOOMSDAY?$FN?$AA@ DB '[DIFFIC'
	DB	'ULTY SET TO DOOMSDAY]', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CBDMBCDO@?$FLDIFFICULTY?5SET?5TO?5HARD?$FN?$AA@
CONST	SEGMENT
??_C@_0BJ@CBDMBCDO@?$FLDIFFICULTY?5SET?5TO?5HARD?$FN?$AA@ DB '[DIFFICULTY'
	DB	' SET TO HARD]', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HNDBPDLA@DIFFICULTY?5SET?5TO?5NORMAL?$FN?$AA@
CONST	SEGMENT
??_C@_0BK@HNDBPDLA@DIFFICULTY?5SET?5TO?5NORMAL?$FN?$AA@ DB 'DIFFICULTY SE'
	DB	'T TO NORMAL]', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DBOAFGKG@?$FLDIFFICULTY?5SET?5TO?5EASY?$FN?$AA@
CONST	SEGMENT
??_C@_0BJ@DBOAFGKG@?$FLDIFFICULTY?5SET?5TO?5EASY?$FN?$AA@ DB '[DIFFICULTY'
	DB	' SET TO EASY]', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GHIJNOGP@powerbox2?4powerbox2?$AA@
CONST	SEGMENT
??_C@_0BE@GHIJNOGP@powerbox2?4powerbox2?$AA@ DB 'powerbox2.powerbox2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PHHNAANH@SFX?4Comet_Busters_Flip_Switch?$AA@
CONST	SEGMENT
??_C@_0BO@PHHNAANH@SFX?4Comet_Busters_Flip_Switch?$AA@ DB 'SFX.Comet_Bust'
	DB	'ers_Flip_Switch', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@IBAOBLKH@Pull?5the?5switch?5all?5the?5way?5down@
CONST	SEGMENT
??_C@_0DN@IBAOBLKH@Pull?5the?5switch?5all?5the?5way?5down@ DB 'Pull the s'
	DB	'witch all the way down to proceed to the next map.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05PAMKIGDK@win?50?$AA@
CONST	SEGMENT
??_C@_05PAMKIGDK@win?50?$AA@ DB 'win 0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@ILNDMLLJ@Please?5wait?5?$CFd?5seconds?5before?5pu@
CONST	SEGMENT
??_C@_0DC@ILNDMLLJ@Please?5wait?5?$CFd?5seconds?5before?5pu@ DB 'Please w'
	DB	'ait %d seconds before pulling the switch.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@HKPPECPO@Please?5wait?5for?5the?5current?5game@
CONST	SEGMENT
??_C@_0ED@HKPPECPO@Please?5wait?5for?5the?5current?5game@ DB 'Please wait'
	DB	' for the current game to end before pulling the switch.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HIMCCADD@Sorry?0?5this?5switch?5is?5not?5enable@
CONST	SEGMENT
??_C@_0CD@HIMCCADD@Sorry?0?5this?5switch?5is?5not?5enable@ DB 'Sorry, thi'
	DB	's switch is not enabled.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KDBOOJDO@powerbox?4powerbox?$AA@
CONST	SEGMENT
??_C@_0BC@KDBOOJDO@powerbox?4powerbox?$AA@ DB 'powerbox.powerbox', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06KJINBPNG@Turret?$AA@
CONST	SEGMENT
??_C@_06KJINBPNG@Turret?$AA@ DB 'Turret', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BFKJPLBK@?$CFd?0?$CFd?00?0?$CFd?$AA@
CONST	SEGMENT
??_C@_0L@BFKJPLBK@?$CFd?0?$CFd?00?0?$CFd?$AA@ DB '%d,%d,0,%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05KLJDEHLI@RWing?$AA@
CONST	SEGMENT
??_C@_05KLJDEHLI@RWing?$AA@ DB 'RWing', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JCEPCEFD@LWing?$AA@
CONST	SEGMENT
??_C@_05JCEPCEFD@LWing?$AA@ DB 'LWing', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FAOCJFNP@Explosion_Drone_Warp_In?$AA@
CONST	SEGMENT
??_C@_0BI@FAOCJFNP@Explosion_Drone_Warp_In?$AA@ DB 'Explosion_Drone_Warp_'
	DB	'In', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PIAPLGDF@RePosition?$AA@
CONST	SEGMENT
??_C@_0L@PIAPLGDF@RePosition?$AA@ DB 'RePosition', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FGAOFIBA@FighterDronez?4FighterDronez?$AA@
CONST	SEGMENT
??_C@_0BM@FGAOFIBA@FighterDronez?4FighterDronez?$AA@ DB 'FighterDronez.Fi'
	DB	'ghterDronez', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CFOGKGM@FighterDronez?$AA@
CONST	SEGMENT
??_C@_0O@CFOGKGM@FighterDronez?$AA@ DB 'FighterDronez', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05PMCMDMKN@Power?$AA@
CONST	SEGMENT
??_C@_05PMCMDMKN@Power?$AA@ DB 'Power', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GIMEHAME@FighterDrone?$CFd?4FighterDrone?$CFd?$AA@
CONST	SEGMENT
??_C@_0BO@GIMEHAME@FighterDrone?$CFd?4FighterDrone?$CFd?$AA@ DB 'FighterD'
	DB	'rone%d.FighterDrone%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CCHHLEDH@FighterDrone?$CFd?$AA@
CONST	SEGMENT
??_C@_0P@CCHHLEDH@FighterDrone?$CFd?$AA@ DB 'FighterDrone%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@INKKNFJM@PlayerEscort?$AA@
CONST	SEGMENT
??_C@_0N@INKKNFJM@PlayerEscort?$AA@ DB 'PlayerEscort', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LHNPGOPG@Barrel?$AA@
CONST	SEGMENT
??_C@_06LHNPGOPG@Barrel?$AA@ DB 'Barrel', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@LOOFKGAH@Galactic?5Cargo?5Ship?3?5Structural?5@
CONST	SEGMENT
??_C@_0EK@LOOFKGAH@Galactic?5Cargo?5Ship?3?5Structural?5@ DB 'Galactic Ca'
	DB	'rgo Ship: Structural integrity failing, everyone abandon ship'
	DB	'!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@DOBEHKBJ@Galactic?5Cargo?5Ship?3?5Final?5warni@
CONST	SEGMENT
??_C@_0EI@DOBEHKBJ@Galactic?5Cargo?5Ship?3?5Final?5warni@ DB 'Galactic Ca'
	DB	'rgo Ship: Final warning, stop firing or we will return fire!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@LBNHOGIK@Galactic?5Cargo?5Ship?3?5Stop?5firing@
CONST	SEGMENT
??_C@_0EL@LBNHOGIK@Galactic?5Cargo?5Ship?3?5Stop?5firing@ DB 'Galactic Ca'
	DB	'rgo Ship: Stop firing immanently! We are not your enemies her'
	DB	'e!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@FPBOBBNK@Galactic?5Cargo?5Ship?3?5Friendly?5fi@
CONST	SEGMENT
??_C@_0FF@FPBOBBNK@Galactic?5Cargo?5Ship?3?5Friendly?5fi@ DB 'Galactic Ca'
	DB	'rgo Ship: Friendly fire! Repeat friendly fire! Please check y'
	DB	'our targets!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@FJDAIFEN@Galactic?5Cargo?5Ship?3?5You?5were?5wa@
CONST	SEGMENT
??_C@_0DF@FJDAIFEN@Galactic?5Cargo?5Ship?3?5You?5were?5wa@ DB 'Galactic C'
	DB	'argo Ship: You were warned, open fire men!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CFBEJCMJ@JMG_CMTB_Cargo_Ship_Turret?$AA@
CONST	SEGMENT
??_C@_0BL@CFBEJCMJ@JMG_CMTB_Cargo_Ship_Turret?$AA@ DB 'JMG_CMTB_Cargo_Shi'
	DB	'p_Turret', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GDFCDMOF@CMTB_Cargo_Ship_Turret?$AA@
CONST	SEGMENT
??_C@_0BH@GDFCDMOF@CMTB_Cargo_Ship_Turret?$AA@ DB 'CMTB_Cargo_Ship_Turret'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FPFOLAOB@TrtSpots?$CF03d?$AA@
CONST	SEGMENT
??_C@_0N@FPFOLAOB@TrtSpots?$CF03d?$AA@ DB 'TrtSpots%03d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
CONST	SEGMENT
??_C@_0N@FLJNBGLE@PlayerNumber?$AA@ DB 'PlayerNumber', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KFPGANGC@CMTBCShipAnim?4CMTBCShipAnim?$AA@
CONST	SEGMENT
??_C@_0BM@KFPGANGC@CMTBCShipAnim?4CMTBCShipAnim?$AA@ DB 'CMTBCShipAnim.CM'
	DB	'TBCShipAnim', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FJALAOPP@CMTBCShipAnim?$AA@
CONST	SEGMENT
??_C@_0O@FJALAOPP@CMTBCShipAnim?$AA@ DB 'CMTBCShipAnim', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ODDEBHAN@Colliders006?$AA@
CONST	SEGMENT
??_C@_0N@ODDEBHAN@Colliders006?$AA@ DB 'Colliders006', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IHFINCAJ@Colliders002?$AA@
CONST	SEGMENT
??_C@_0N@IHFINCAJ@Colliders002?$AA@ DB 'Colliders002', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LFGOLAIL@Colliders000?$AA@
CONST	SEGMENT
??_C@_0N@LFGOLAIL@Colliders000?$AA@ DB 'Colliders000', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KMHFIBMK@Colliders001?$AA@
CONST	SEGMENT
??_C@_0N@KMHFIBMK@Colliders001?$AA@ DB 'Colliders001', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MIBJEEMO@Colliders005?$AA@
CONST	SEGMENT
??_C@_0N@MIBJEEMO@Colliders005?$AA@ DB 'Colliders005', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NBACHFIP@Colliders004?$AA@
CONST	SEGMENT
??_C@_0N@NBACHFIP@Colliders004?$AA@ DB 'Colliders004', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JOEDODEI@Colliders003?$AA@
CONST	SEGMENT
??_C@_0N@JOEDODEI@Colliders003?$AA@ DB 'Colliders003', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06KNDBNPNN@w_invs?$AA@
CONST	SEGMENT
??_C@_06KNDBNPNN@w_invs?$AA@ DB 'w_invs', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MEJFCIJN@p_weapUpgrade?4p_weapUpgrade?$AA@
CONST	SEGMENT
??_C@_0BM@MEJFCIJN@p_weapUpgrade?4p_weapUpgrade?$AA@ DB 'p_weapUpgrade.p_'
	DB	'weapUpgrade', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OGIFOEBP@p_weapUpgrade?$AA@
CONST	SEGMENT
??_C@_0O@OGIFOEBP@p_weapUpgrade?$AA@ DB 'p_weapUpgrade', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ENNENONI@p_Swarm?4p_Swarm?$AA@
CONST	SEGMENT
??_C@_0BA@ENNENONI@p_Swarm?4p_Swarm?$AA@ DB 'p_Swarm.p_Swarm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CGEEFHGM@p_Swarm?$AA@
CONST	SEGMENT
??_C@_07CGEEFHGM@p_Swarm?$AA@ DB 'p_Swarm', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BMKHPFIF@P_Deer?4P_Deer?$AA@
CONST	SEGMENT
??_C@_0O@BMKHPFIF@P_Deer?4P_Deer?$AA@ DB 'P_Deer.P_Deer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06EOAAJIBD@P_Deer?$AA@
CONST	SEGMENT
??_C@_06EOAAJIBD@P_Deer?$AA@ DB 'P_Deer', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NCAGBHPP@P_DoublePoints?4P_DoublePoints?$AA@
CONST	SEGMENT
??_C@_0BO@NCAGBHPP@P_DoublePoints?4P_DoublePoints?$AA@ DB 'P_DoublePoints'
	DB	'.P_DoublePoints', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EKKFLCBL@P_DoublePoints?$AA@
CONST	SEGMENT
??_C@_0P@EKKFLCBL@P_DoublePoints?$AA@ DB 'P_DoublePoints', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LOBJOCPN@p_Energy_Regen?4p_Energy_Regen?$AA@
CONST	SEGMENT
??_C@_0BO@LOBJOCPN@p_Energy_Regen?4p_Energy_Regen?$AA@ DB 'p_Energy_Regen'
	DB	'.p_Energy_Regen', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LAJGIFLP@p_Energy_Regen?$AA@
CONST	SEGMENT
??_C@_0P@LAJGIFLP@p_Energy_Regen?$AA@ DB 'p_Energy_Regen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IMILGKLO@p_Points_4?4p_Points_4?$AA@
CONST	SEGMENT
??_C@_0BG@IMILGKLO@p_Points_4?4p_Points_4?$AA@ DB 'p_Points_4.p_Points_4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NMBOIGFP@p_Points_4?$AA@
CONST	SEGMENT
??_C@_0L@NMBOIGFP@p_Points_4?$AA@ DB 'p_Points_4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OGIHCEPN@p_Drone?4p_Drone?$AA@
CONST	SEGMENT
??_C@_0BA@OGIHCEPN@p_Drone?4p_Drone?$AA@ DB 'p_Drone.p_Drone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MNENENBA@p_Drone?$AA@
CONST	SEGMENT
??_C@_07MNENENBA@p_Drone?$AA@ DB 'p_Drone', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LOLJPKCB@p_Points_3?4p_Points_3?$AA@
CONST	SEGMENT
??_C@_0BG@LOLJPKCB@p_Points_3?4p_Points_3?$AA@ DB 'p_Points_3.p_Points_3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JDFPBAJI@p_Points_3?$AA@
CONST	SEGMENT
??_C@_0L@JDFPBAJI@p_Points_3?$AA@ DB 'p_Points_3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HKDEBCOF@p_Points_2?4p_Points_2?$AA@
CONST	SEGMENT
??_C@_0BG@HKDEBCOF@p_Points_2?4p_Points_2?$AA@ DB 'p_Points_2.p_Points_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IKEECBNJ@p_Points_2?$AA@
CONST	SEGMENT
??_C@_0L@IKEECBNJ@p_Points_2?$AA@ DB 'p_Points_2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OMNDCNOI@p_Points_1?4p_Points_1?$AA@
CONST	SEGMENT
??_C@_0BG@OMNDCNOI@p_Points_1?4p_Points_1?$AA@ DB 'p_Points_1.p_Points_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KBGJHCBK@p_Points_1?$AA@
CONST	SEGMENT
??_C@_0L@KBGJHCBK@p_Points_1?$AA@ DB 'p_Points_1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CIFOMFCM@p_Points_0?4p_Points_0?$AA@
CONST	SEGMENT
??_C@_0BG@CIFOMFCM@p_Points_0?4p_Points_0?$AA@ DB 'p_Points_0.p_Points_0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LIHCEDFL@p_Points_0?$AA@
CONST	SEGMENT
??_C@_0L@LIHCEDFL@p_Points_0?$AA@ DB 'p_Points_0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MBAOLDDF@p_ExtraShip?4p_ExtraShip?$AA@
CONST	SEGMENT
??_C@_0BI@MBAOLDDF@p_ExtraShip?4p_ExtraShip?$AA@ DB 'p_ExtraShip.p_ExtraS'
	DB	'hip', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BJDFNJG@p_ExtraShip?$AA@
CONST	SEGMENT
??_C@_0M@BJDFNJG@p_ExtraShip?$AA@ DB 'p_ExtraShip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FIGAMGHC@p_sw_HEW?4p_sw_HEW?$AA@
CONST	SEGMENT
??_C@_0BC@FIGAMGHC@p_sw_HEW?4p_sw_HEW?$AA@ DB 'p_sw_HEW.p_sw_HEW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08MJLMJCFB@p_sw_HEW?$AA@
CONST	SEGMENT
??_C@_08MJLMJCFB@p_sw_HEW?$AA@ DB 'p_sw_HEW', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@COFOCMMO@p_SOSBeacon?4p_SOSBeacon?$AA@
CONST	SEGMENT
??_C@_0BI@COFOCMMO@p_SOSBeacon?4p_SOSBeacon?$AA@ DB 'p_SOSBeacon.p_SOSBea'
	DB	'con', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HNBOKCKD@p_SOSBeacon?$AA@
CONST	SEGMENT
??_C@_0M@HNBOKCKD@p_SOSBeacon?$AA@ DB 'p_SOSBeacon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IBHODENJ@p_Energy_2?4p_Energy_2?$AA@
CONST	SEGMENT
??_C@_0BG@IBHODENJ@p_Energy_2?4p_Energy_2?$AA@ DB 'p_Energy_2.p_Energy_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FLPAIDNL@p_Energy_2?$AA@
CONST	SEGMENT
??_C@_0L@FLPAIDNL@p_Energy_2?$AA@ DB 'p_Energy_2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BHJJALNE@p_Energy_1?4p_Energy_1?$AA@
CONST	SEGMENT
??_C@_0BG@BHJJALNE@p_Energy_1?4p_Energy_1?$AA@ DB 'p_Energy_1.p_Energy_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HANNNABI@p_Energy_1?$AA@
CONST	SEGMENT
??_C@_0L@HANNNABI@p_Energy_1?$AA@ DB 'p_Energy_1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NDBEODBA@p_Energy_0?4p_Energy_0?$AA@
CONST	SEGMENT
??_C@_0BG@NDBEODBA@p_Energy_0?4p_Energy_0?$AA@ DB 'p_Energy_0.p_Energy_0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08INJDFBPH@LifeTime?$AA@
CONST	SEGMENT
??_C@_08INJDFBPH@LifeTime?$AA@ DB 'LifeTime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GJMGOBFJ@p_Energy_0?$AA@
CONST	SEGMENT
??_C@_0L@GJMGOBFJ@p_Energy_0?$AA@ DB 'p_Energy_0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06IFGIOHDE@Custom?$AA@
CONST	SEGMENT
??_C@_06IFGIOHDE@Custom?$AA@ DB 'Custom', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LDOHGAOK@Pos150?$AA@
CONST	SEGMENT
??_C@_06LDOHGAOK@Pos150?$AA@ DB 'Pos150', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@ICNBHODI@SFX?4Comet_Busters_Super_Weapon_F@
CONST	SEGMENT
??_C@_0CE@ICNBHODI@SFX?4Comet_Busters_Super_Weapon_F@ DB 'SFX.Comet_Buste'
	DB	'rs_Super_Weapon_Fire', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@EMKOFNEI@CmtBSuperWeapon?4CmtBSuperWeapon?$AA@
CONST	SEGMENT
??_C@_0CA@EMKOFNEI@CmtBSuperWeapon?4CmtBSuperWeapon?$AA@ DB 'CmtBSuperWea'
	DB	'pon.CmtBSuperWeapon', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IHFLAFKF@CmtBSuperWeapon?$AA@
CONST	SEGMENT
??_C@_0BA@IHFLAFKF@CmtBSuperWeapon?$AA@ DB 'CmtBSuperWeapon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@LAOFOPJA@SFX?4Comet_Busters_Super_Weapon_W@
CONST	SEGMENT
??_C@_0CH@LAOFOPJA@SFX?4Comet_Busters_Super_Weapon_W@ DB 'SFX.Comet_Buste'
	DB	'rs_Super_Weapon_Warning', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@IGNKFOCA@SFX?4Comet_Busters_Super_Weapon_C@
CONST	SEGMENT
??_C@_0CG@IGNKFOCA@SFX?4Comet_Busters_Super_Weapon_C@ DB 'SFX.Comet_Buste'
	DB	'rs_Super_Weapon_Charge', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NIMKMEAF@ControllerShipID?$AA@
CONST	SEGMENT
??_C@_0BB@NIMKMEAF@ControllerShipID?$AA@ DB 'ControllerShipID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KOGFMHJH@CMTBChargeSpark?$AA@
CONST	SEGMENT
??_C@_0BA@KOGFMHJH@CMTBChargeSpark?$AA@ DB 'CMTBChargeSpark', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CEBLODJL@Comet3?$AA@
CONST	SEGMENT
??_C@_06CEBLODJL@Comet3?$AA@ DB 'Comet3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OFBBCMBO@Explosion_Moon?$AA@
CONST	SEGMENT
??_C@_0P@OFBBCMBO@Explosion_Moon?$AA@ DB 'Explosion_Moon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MAGIBEFI@Scale?$AA@
CONST	SEGMENT
??_C@_05MAGIBEFI@Scale?$AA@ DB 'Scale', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IJBPPJAA@Explosion_Comet_Small?$AA@
CONST	SEGMENT
??_C@_0BG@IJBPPJAA@Explosion_Comet_Small?$AA@ DB 'Explosion_Comet_Small', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07JPIEJJIE@Is_Boss?$AA@
CONST	SEGMENT
??_C@_07JPIEJJIE@Is_Boss?$AA@ DB 'Is_Boss', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KOEGJBOG@Astrogade?9KeyListing?07154148?00?$AA@
CONST	SEGMENT
??_C@_0BP@KOEGJBOG@Astrogade?9KeyListing?07154148?00?$AA@ DB 'Astrogade-K'
	DB	'eyListing,7154148,0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MCOPOI@Astrogade?9OfferLifePlayer9?077454@
CONST	SEGMENT
??_C@_0CG@MCOPOI@Astrogade?9OfferLifePlayer9?077454@ DB 'Astrogade-OfferL'
	DB	'ifePlayer9,77454829,0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@GFOIFBAI@Astrogade?9OfferLifePlayer8?077454@
CONST	SEGMENT
??_C@_0CG@GFOIFBAI@Astrogade?9OfferLifePlayer8?077454@ DB 'Astrogade-Offe'
	DB	'rLifePlayer8,77454828,0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BKPLJEGL@Astrogade?9OfferLifePlayer7?077454@
CONST	SEGMENT
??_C@_0CG@BKPLJEGL@Astrogade?9OfferLifePlayer7?077454@ DB 'Astrogade-Offe'
	DB	'rLifePlayer7,77454827,0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HPNBCKIL@Astrogade?9OfferLifePlayer6?077454@
CONST	SEGMENT
??_C@_0CG@HPNBCKIL@Astrogade?9OfferLifePlayer6?077454@ DB 'Astrogade-Offe'
	DB	'rLifePlayer6,77454826,0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@NAKOOJKL@Astrogade?9OfferLifePlayer5?077454@
CONST	SEGMENT
??_C@_0CG@NAKOOJKL@Astrogade?9OfferLifePlayer5?077454@ DB 'Astrogade-Offe'
	DB	'rLifePlayer5,77454825,0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@LFIEFHEL@Astrogade?9OfferLifePlayer4?077454@
CONST	SEGMENT
??_C@_0CG@LFIEFHEL@Astrogade?9OfferLifePlayer4?077454@ DB 'Astrogade-Offe'
	DB	'rLifePlayer4,77454824,0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@FFCAGJKK@Astrogade?9OfferLifePlayer3?077454@
CONST	SEGMENT
??_C@_0CG@FFCAGJKK@Astrogade?9OfferLifePlayer3?077454@ DB 'Astrogade-Offe'
	DB	'rLifePlayer3,77454823,0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@DAAKNHEK@Astrogade?9OfferLifePlayer2?077454@
CONST	SEGMENT
??_C@_0CG@DAAKNHEK@Astrogade?9OfferLifePlayer2?077454@ DB 'Astrogade-Offe'
	DB	'rLifePlayer2,77454822,0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@JPHFBEGK@Astrogade?9OfferLifePlayer1?077454@
CONST	SEGMENT
??_C@_0CG@JPHFBEGK@Astrogade?9OfferLifePlayer1?077454@ DB 'Astrogade-Offe'
	DB	'rLifePlayer1,77454821,0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@PKFPKKIK@Astrogade?9OfferLifePlayer0?077454@
CONST	SEGMENT
??_C@_0CG@PKFPKKIK@Astrogade?9OfferLifePlayer0?077454@ DB 'Astrogade-Offe'
	DB	'rLifePlayer0,77454820,0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@NNJAPLNJ@Astrogade?9UseDroneSwarmCode?07745@
CONST	SEGMENT
??_C@_0CH@NNJAPLNJ@Astrogade?9UseDroneSwarmCode?07745@ DB 'Astrogade-UseD'
	DB	'roneSwarmCode,77454833,0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@PDFAEJL@Astrogade?9ForfeitLives?077454830?0@
CONST	SEGMENT
??_C@_0CC@PDFAEJL@Astrogade?9ForfeitLives?077454830?0@ DB 'Astrogade-Forf'
	DB	'eitLives,77454830,0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@FBFKKKLB@Astrogade?9ShipDrone?077454819?00?$AA@
CONST	SEGMENT
??_C@_0BP@FBFKKKLB@Astrogade?9ShipDrone?077454819?00?$AA@ DB 'Astrogade-S'
	DB	'hipDrone,77454819,0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@MIFKEDKF@Astrogade?9ShipSOSBeacon?077454818@
CONST	SEGMENT
??_C@_0CD@MIFKEDKF@Astrogade?9ShipSOSBeacon?077454818@ DB 'Astrogade-Ship'
	DB	'SOSBeacon,77454818,0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@HDAEAGKJ@Astrogade?9RequestALife?077454817?0@
CONST	SEGMENT
??_C@_0CC@HDAEAGKJ@Astrogade?9RequestALife?077454817?0@ DB 'Astrogade-Req'
	DB	'uestALife,77454817,0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@FGPPJENK@Astrogade?9ShipOvercharge?07745481@
CONST	SEGMENT
??_C@_0CE@FGPPJENK@Astrogade?9ShipOvercharge?07745481@ DB 'Astrogade-Ship'
	DB	'Overcharge,77454816,0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@EIDNLCPG@Astrogade?9ShipBomb?077454815?00?$AA@
CONST	SEGMENT
??_C@_0BO@EIDNLCPG@Astrogade?9ShipBomb?077454815?00?$AA@ DB 'Astrogade-Sh'
	DB	'ipBomb,77454815,0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@LPBEJMHI@Astrogade?9StartGame?077454814?00?$AA@
CONST	SEGMENT
??_C@_0BP@LPBEJMHI@Astrogade?9StartGame?077454814?00?$AA@ DB 'Astrogade-S'
	DB	'tartGame,77454814,0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@HEKCEGON@Astrogade?9ShipCloak?077454813?00?$AA@
CONST	SEGMENT
??_C@_0BP@HEKCEGON@Astrogade?9ShipCloak?077454813?00?$AA@ DB 'Astrogade-S'
	DB	'hipCloak,77454813,0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
CONST	SEGMENT
??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@ DB 'JFW_Send_Self_Cus'
	DB	'tom_On_Key', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@HFHFGBGO@Astrogade?9ShipShield?077454812?00?$AA@
CONST	SEGMENT
??_C@_0CA@HFHFGBGO@Astrogade?9ShipShield?077454812?00?$AA@ DB 'Astrogade-'
	DB	'ShipShield,77454812,0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NCIMLPDC@MySoldierID?$AA@
CONST	SEGMENT
??_C@_0M@NCIMLPDC@MySoldierID?$AA@ DB 'MySoldierID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JCPOMNIO@JMG_CMTB_Renegade_Code?$AA@
CONST	SEGMENT
??_C@_0BH@JCPOMNIO@JMG_CMTB_Renegade_Code?$AA@ DB 'JMG_CMTB_Renegade_Code'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BMHOELCO@ArcadeMachine_?$CFd?$AA@
CONST	SEGMENT
??_C@_0BB@BMHOELCO@ArcadeMachine_?$CFd?$AA@ DB 'ArcadeMachine_%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HDKCBMAC@MachineNumber?$AA@
CONST	SEGMENT
??_C@_0O@HDKCBMAC@MachineNumber?$AA@ DB 'MachineNumber', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@CMKFKPIC@9?5?9?52?45?$CF?5chance?5of?5being?5granted@
CONST	SEGMENT
??_C@_0DJ@CMKFKPIC@9?5?9?52?45?$CF?5chance?5of?5being?5granted@ DB '9 - 2'
	DB	'.5% chance of being granted a Drone Swarm on spawn.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@BBLMAHPA@8?5?9?52?45?$CF?5chance?5of?5being?5granted@
CONST	SEGMENT
??_C@_0DI@BBLMAHPA@8?5?9?52?45?$CF?5chance?5of?5being?5granted@ DB '8 - 2'
	DB	'.5% chance of being granted a SOS Beacon on spawn.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@DHGPLMLE@7?5?9?55?$CF?5chance?5of?5being?5granted?5a@
CONST	SEGMENT
??_C@_0EC@DHGPLMLE@7?5?9?55?$CF?5chance?5of?5being?5granted?5a@ DB '7 - 5'
	DB	'% chance of being granted a High Explosive Warhead on spawn.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@EPGJIDBL@6?5?9?520?$CF?5chance?5of?5being?5granted?5@
CONST	SEGMENT
??_C@_0DC@EPGJIDBL@6?5?9?520?$CF?5chance?5of?5being?5granted?5@ DB '6 - 2'
	DB	'0% chance of being granted a Drone on spawn.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@FAMLNKNF@5?5?9?55?$CF?5chance?5of?5getting?5Weapons@
CONST	SEGMENT
??_C@_0EF@FAMLNKNF@5?5?9?55?$CF?5chance?5of?5getting?5Weapons@ DB '5 - 5%'
	DB	' chance of getting Weapons Upgrade at the start of each level'
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@OHHPJHHI@4?5?9?55?$CF?5chance?5of?5getting?5Energy?5@
CONST	SEGMENT
??_C@_0EC@OHHPJHHI@4?5?9?55?$CF?5chance?5of?5getting?5Energy?5@ DB '4 - 5'
	DB	'% chance of getting Energy Regen at the start of each level.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@JKIJOEC@3?5?9?516?45?$CF?5chance?5of?5getting?5Doub@
CONST	SEGMENT
??_C@_0EG@JKIJOEC@3?5?9?516?45?$CF?5chance?5of?5getting?5Doub@ DB '3 - 16'
	DB	'.5% chance of getting Double Points at the start of each leve'
	DB	'l.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@IJOIHOGC@2?5?9?5Start?5the?5game?5with?5a?5fully?5@
CONST	SEGMENT
??_C@_0DF@IJOIHOGC@2?5?9?5Start?5the?5game?5with?5a?5fully?5@ DB '2 - Sta'
	DB	'rt the game with a fully charged Hyper Drive.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@KGHIDKIK@1?5?9?5Start?5the?5game?5with?5an?5Extra@
CONST	SEGMENT
??_C@_0FB@KGHIDKIK@1?5?9?5Start?5the?5game?5with?5an?5Extra@ DB '1 - Star'
	DB	't the game with an Extra Life and get an additional one every'
	DB	' 25 levels.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@HAABCCHK@Sorry?0?5you?5do?5not?5have?5that?5perk@
CONST	SEGMENT
??_C@_0CP@HAABCCHK@Sorry?0?5you?5do?5not?5have?5that?5perk@ DB 'Sorry, yo'
	DB	'u do not have that perk unlocked yet!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@PNECEIBN@Sorry?0?5you?5cannot?5change?5your?5sp@
CONST	SEGMENT
??_C@_0EM@PNECEIBN@Sorry?0?5you?5cannot?5change?5your?5sp@ DB 'Sorry, you'
	DB	' cannot change your special ability once the game is in progr'
	DB	'ess.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@ENGMNJLA@Sorry?0?5you?5must?5be?5out?5of?5lives?5@
CONST	SEGMENT
??_C@_0DN@ENGMNJLA@Sorry?0?5you?5must?5be?5out?5of?5lives?5@ DB 'Sorry, y'
	DB	'ou must be out of lives before you can request more!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@OHLHLMME@Sorry?0?5no?5one?5in?5game?5has?5any?5li@
CONST	SEGMENT
??_C@_0CO@OHLHLMME@Sorry?0?5no?5one?5in?5game?5has?5any?5li@ DB 'Sorry, n'
	DB	'o one in game has any lives to spare!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@NJFPICI@Your?5request?5for?5a?5life?5has?5been@
CONST	SEGMENT
??_C@_0EK@NJFPICI@Your?5request?5for?5a?5life?5has?5been@ DB 'Your reques'
	DB	't for a life has been dispatched to the other players in game'
	DB	'!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@LHGCIFLP@Your?5request?5for?5a?5life?5has?5been@
CONST	SEGMENT
??_C@_0CM@LHGCIFLP@Your?5request?5for?5a?5life?5has?5been@ DB 'Your reque'
	DB	'st for a life has been withdrawn!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@LBDLKGPK@A?5game?5must?5be?5in?5progress?5in?5or@
CONST	SEGMENT
??_C@_0DG@LBDLKGPK@A?5game?5must?5be?5in?5progress?5in?5or@ DB 'A game mu'
	DB	'st be in progress in order to request lives!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08ENOAHEPI@null?4mp3?$AA@
CONST	SEGMENT
??_C@_08ENOAHEPI@null?4mp3?$AA@ DB 'null.mp3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MIAODDCN@ControllerID?$AA@
CONST	SEGMENT
??_C@_0N@MIAODDCN@ControllerID?$AA@ DB 'ControllerID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FL@NKDBAEEJ@You?5have?5special?5abilities?5that?5@
CONST	SEGMENT
??_C@_0FL@NKDBAEEJ@You?5have?5special?5abilities?5that?5@ DB 'You have sp'
	DB	'ecial abilities that you could assign, or press space again t'
	DB	'o start the round:', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HDJECCFC@E?5?9?5Quit?5game?4?$AA@
CONST	SEGMENT
??_C@_0P@HDJECCFC@E?5?9?5Quit?5game?4?$AA@ DB 'E - Quit game.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EKECLBBE@Page?5Up?5?9?5Request?5a?5life?$AA@
CONST	SEGMENT
??_C@_0BJ@EKECLBBE@Page?5Up?5?9?5Request?5a?5life?$AA@ DB 'Page Up - Requ'
	DB	'est a life', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BOIDNEMN@Spacebar?5?9?5Vote?5to?5start?5game?$AA@
CONST	SEGMENT
??_C@_0BO@BOIDNEMN@Spacebar?5?9?5Vote?5to?5start?5game?$AA@ DB 'Spacebar '
	DB	'- Vote to start game', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GIMHFNBL@Vehicle?5Special?5Keys?3?$AA@
CONST	SEGMENT
??_C@_0BG@GIMHFNBL@Vehicle?5Special?5Keys?3?$AA@ DB 'Vehicle Special Keys'
	DB	':', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MIOOFHNA@?$CFs?5has?5been?5kicked?5out?5of?5the?5lo@
CONST	SEGMENT
??_C@_0CF@MIOOFHNA@?$CFs?5has?5been?5kicked?5out?5of?5the?5lo@ DB '%s has'
	DB	' been kicked out of the lobby!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@KDFPAFOO@Press?5spacebar?5to?5start?5the?5game@
CONST	SEGMENT
??_C@_0CC@KDFPAFOO@Press?5spacebar?5to?5start?5the?5game@ DB 'Press space'
	DB	'bar to start the game!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@IIPKLMKK@?$CFs?5is?5out?5of?5lives?0?5you?5can?5give@
CONST	SEGMENT
??_C@_0FH@IIPKLMKK@?$CFs?5is?5out?5of?5lives?0?5you?5can?5give@ DB '%s is'
	DB	' out of lives, you can give them one of you own by pressing t'
	DB	'he ShipPlayer%d key!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06IONACMBM@Number?$AA@
CONST	SEGMENT
??_C@_06IONACMBM@Number?$AA@ DB 'Number', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GCJNLIKG@Position?$AA@
CONST	SEGMENT
??_C@_08GCJNLIKG@Position?$AA@ DB 'Position', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DHIFDLCI@Comet?$CF02d?$AA@
CONST	SEGMENT
??_C@_09DHIFDLCI@Comet?$CF02d?$AA@ DB 'Comet%02d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IMNMANMB@?$CFd?0?$CF?43f?5?$CF?43f?5?$CF?43f?$AA@
CONST	SEGMENT
??_C@_0BC@IMNMANMB@?$CFd?0?$CF?43f?5?$CF?43f?5?$CF?43f?$AA@ DB '%d,%.3f %'
	DB	'.3f %.3f', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07HOMDCAEO@Comet?$CFd?$AA@
CONST	SEGMENT
??_C@_07HOMDCAEO@Comet?$CFd?$AA@ DB 'Comet%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04EBKMHHBE@Size?$AA@
CONST	SEGMENT
??_C@_04EBKMHHBE@Size?$AA@ DB 'Size', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CDFHKPGF@CometSpin?$CFd?4CometSpin?$CFd?$AA@
CONST	SEGMENT
??_C@_0BI@CDFHKPGF@CometSpin?$CFd?4CometSpin?$CFd?$AA@ DB 'CometSpin%d.Co'
	DB	'metSpin%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@GNDCJBOI@Power?5levels?5critical?$CB?5Deactivat@
CONST	SEGMENT
??_C@_0DH@GNDCJBOI@Power?5levels?5critical?$CB?5Deactivat@ DB 'Power leve'
	DB	'ls critical! Deactivating auxiliary systems!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JMINELOO@Player?5?$CFd?5?$CI?$CFs?$CJ?5is?5out?5of?5lives?$CB?$AA@
CONST	SEGMENT
??_C@_0CA@JMINELOO@Player?5?$CFd?5?$CI?$CFs?$CJ?5is?5out?5of?5lives?$CB?$AA@ DB 'P'
	DB	'layer %d (%s) is out of lives!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@ONDGJMEB@You?5are?5out?5of?5lives?$CB?$AA@
CONST	SEGMENT
??_C@_0BG@ONDGJMEB@You?5are?5out?5of?5lives?$CB?$AA@ DB 'You are out of l'
	DB	'ives!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_03NCDEPONL@3?00?$AA@
CONST	SEGMENT
??_C@_03NCDEPONL@3?00?$AA@ DB '3,0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IMHIBIDA@15?00?$AA@
CONST	SEGMENT
??_C@_04IMHIBIDA@15?00?$AA@ DB '15,0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LLKGOIAC@10?00?$AA@
CONST	SEGMENT
??_C@_04LLKGOIAC@10?00?$AA@ DB '10,0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08CCPOGDLK@HyperOut?$AA@
CONST	SEGMENT
??_C@_08CCPOGDLK@HyperOut?$AA@ DB 'HyperOut', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PMLDBCIK@Engine?5overload?5detected?$CB?$AA@
CONST	SEGMENT
??_C@_0BK@PMLDBCIK@Engine?5overload?5detected?$CB?$AA@ DB 'Engine overloa'
	DB	'd detected!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NPONFOKH@Disruptor?5Engaged?$CB?$AA@
CONST	SEGMENT
??_C@_0BD@NPONFOKH@Disruptor?5Engaged?$CB?$AA@ DB 'Disruptor Engaged!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NALHMFBO@Forward?$AA@
CONST	SEGMENT
??_C@_07NALHMFBO@Forward?$AA@ DB 'Forward', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LDDCHHDA@Backward?$AA@
CONST	SEGMENT
??_C@_08LDDCHHDA@Backward?$AA@ DB 'Backward', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@KEMGGLAF@Your?5weapon?5upgrade?5powerup?5has?5@
CONST	SEGMENT
??_C@_0CJ@KEMGGLAF@Your?5weapon?5upgrade?5powerup?5has?5@ DB 'Your weapon'
	DB	' upgrade powerup has expired!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BIHDAKAG@Your?5power?5regen?5powerup?5has?5exp@
CONST	SEGMENT
??_C@_0CG@BIHDAKAG@Your?5power?5regen?5powerup?5has?5exp@ DB 'Your power '
	DB	'regen powerup has expired!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NNFHCGPF@?$CFs?4?$CFs?$AA@
CONST	SEGMENT
??_C@_05NNFHCGPF@?$CFs?4?$CFs?$AA@ DB '%s.%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GKGABLL@HyperIn?$AA@
CONST	SEGMENT
??_C@_07GKGABLL@HyperIn?$AA@ DB 'HyperIn', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@LKHLGGNO@HYPER?5DRIVES?5DEPLETED?0?5HYPERSPAC@
CONST	SEGMENT
??_C@_0DH@LKHLGGNO@HYPER?5DRIVES?5DEPLETED?0?5HYPERSPAC@ DB 'HYPER DRIVES'
	DB	' DEPLETED, HYPERSPACE NO LONGER AVAILABLE!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@HLGAJOEF@IMMINENT?5COLLISION?5CONDITION?5DET@
CONST	SEGMENT
??_C@_0EO@HLGAJOEF@IMMINENT?5COLLISION?5CONDITION?5DET@ DB 'IMMINENT COLL'
	DB	'ISION CONDITION DETECTED! AUTOMATED HYPERSPACE JUMP TRIGGERED'
	DB	'!%s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@IDHPPFKH@?$CIHyperdrive?5charge?5at?5?$CF?40f?$CF?$CF?$CJ?$AA@
CONST	SEGMENT
??_C@_0BO@IDHPPFKH@?$CIHyperdrive?5charge?5at?5?$CF?40f?$CF?$CF?$CJ?$AA@ DB '('
	DB	'Hyperdrive charge at %.0f%%)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@FOFGKICD@Sorry?0?5player?5?$CFd?5is?5not?5requesti@
CONST	SEGMENT
??_C@_0DB@FOFGKICD@Sorry?0?5player?5?$CFd?5is?5not?5requesti@ DB 'Sorry, '
	DB	'player %d is not requesting a extra life!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@JGDCJFMM@?$CFs?5has?5granted?5you?5another?5life?0@
CONST	SEGMENT
??_C@_0DM@JGDCJFMM@?$CFs?5has?5granted?5you?5another?5life?0@ DB '%s has '
	DB	'granted you another life, try to make this one last!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@BMGJBAFN@You?5have?5granted?5player?5?$CFd?5?$CI?$CFs?$CJ?5@
CONST	SEGMENT
??_C@_0EO@BMGJBAFN@You?5have?5granted?5player?5?$CFd?5?$CI?$CFs?$CJ?5@ DB 'Y'
	DB	'ou have granted player %d (%s) another life, thanks for being'
	DB	' a team player!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@ODICOFHG@Sorry?0?5you?5don?8t?5have?5any?5extra?5@
CONST	SEGMENT
??_C@_0EB@ODICOFHG@Sorry?0?5you?5don?8t?5have?5any?5extra?5@ DB 'Sorry, y'
	DB	'ou don''t have any extra lives to grant to other players!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@BKFDMGCF@Sorry?0?5you?5don?8t?5have?5the?5codes?5@
CONST	SEGMENT
??_C@_0DH@BKFDMGCF@Sorry?0?5you?5don?8t?5have?5the?5codes?5@ DB 'Sorry, y'
	DB	'ou don''t have the codes to call a drone swarm!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LCIOIFFB@?$CFd?010?01?00?$AA@
CONST	SEGMENT
??_C@_09LCIOIFFB@?$CFd?010?01?00?$AA@ DB '%d,10,1,0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CGMPNBOF@Drone?5Swarm?5Called?$CB?$AA@
CONST	SEGMENT
??_C@_0BE@CGMPNBOF@Drone?5Swarm?5Called?$CB?$AA@ DB 'Drone Swarm Called!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@CPNCGFHK@Cannot?5transmit?5drone?5swarm?5call@
CONST	SEGMENT
??_C@_0DM@CPNCGFHK@Cannot?5transmit?5drone?5swarm?5call@ DB 'Cannot trans'
	DB	'mit drone swarm call codes while in hyperspace!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@JOPOKIJI@Sorry?0?5a?5drone?5swarm?5is?5already?5@
CONST	SEGMENT
??_C@_0DI@JOPOKIJI@Sorry?0?5a?5drone?5swarm?5is?5already?5@ DB 'Sorry, a '
	DB	'drone swarm is already present in this sector!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@BCHOJKJO@Sorry?0?5you?5don?8t?5have?5any?5Drones@
CONST	SEGMENT
??_C@_0CM@BCHOJKJO@Sorry?0?5you?5don?8t?5have?5any?5Drones@ DB 'Sorry, yo'
	DB	'u don''t have any Drones to deploy!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DDDOADFB@JMG_CMTB_Player_Drone?$AA@
CONST	SEGMENT
??_C@_0BG@DDDOADFB@JMG_CMTB_Player_Drone?$AA@ DB 'JMG_CMTB_Player_Drone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HMHDFFIC@CMTB_Player_Attack_Drone?$AA@
CONST	SEGMENT
??_C@_0BJ@HMHDFFIC@CMTB_Player_Attack_Drone?$AA@ DB 'CMTB_Player_Attack_D'
	DB	'rone', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IBKIKMNA@?$CFd?0100?01?01?$AA@
CONST	SEGMENT
??_C@_0L@IBKIKMNA@?$CFd?0100?01?01?$AA@ DB '%d,100,1,1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@NPCKADHB@SFX?4Comet_Busters_Drone_Launch_S@
CONST	SEGMENT
??_C@_0CF@NPCKADHB@SFX?4Comet_Busters_Drone_Launch_S@ DB 'SFX.Comet_Buste'
	DB	'rs_Drone_Launch_Sound', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EHNMPGMH@Drone?5Launched?$CB?$AA@
CONST	SEGMENT
??_C@_0BA@EHNMPGMH@Drone?5Launched?$CB?$AA@ DB 'Drone Launched!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@INCEHMJM@Sorry?0?5you?5can?5only?5have?5two?5dro@
CONST	SEGMENT
??_C@_0DN@INCEHMJM@Sorry?0?5you?5can?5only?5have?5two?5dro@ DB 'Sorry, yo'
	DB	'u can only have two drones following you at a time!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@GEKGNCFO@Cannot?5deploy?5drones?5while?5in?5hy@
CONST	SEGMENT
??_C@_0CK@GEKGNCFO@Cannot?5deploy?5drones?5while?5in?5hy@ DB 'Cannot depl'
	DB	'oy drones while in hyperspace!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GDNFADFP@SOS_Beacon?$AA@
CONST	SEGMENT
??_C@_0L@GDNFADFP@SOS_Beacon?$AA@ DB 'SOS_Beacon', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JPIAOKNI@SOS?5Beacon?5Deployed?$CB?$AA@
CONST	SEGMENT
??_C@_0BF@JPIAOKNI@SOS?5Beacon?5Deployed?$CB?$AA@ DB 'SOS Beacon Deployed'
	DB	'!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@ILMBFACM@SFX?4Comet_Busters_Beacon_Deploy_@
CONST	SEGMENT
??_C@_0CG@ILMBFACM@SFX?4Comet_Busters_Beacon_Deploy_@ DB 'SFX.Comet_Buste'
	DB	'rs_Beacon_Deploy_Sound', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@EJNGBCHG@Sorry?0?5you?5don?8t?5have?5any?5SOS?5Be@
CONST	SEGMENT
??_C@_0CH@EJNGBCHG@Sorry?0?5you?5don?8t?5have?5any?5SOS?5Be@ DB 'Sorry, y'
	DB	'ou don''t have any SOS Beacons!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@FEPJCPF@Sorry?0?5you?5can?5only?5deploy?5one?5S@
CONST	SEGMENT
??_C@_0DL@FEPJCPF@Sorry?0?5you?5can?5only?5deploy?5one?5S@ DB 'Sorry, you'
	DB	' can only deploy one SOS Beacon every 5 minutes!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@KDHMBMMC@Due?5to?5sensor?5interference?0?5it?5w@
CONST	SEGMENT
??_C@_0FC@KDHMBMMC@Due?5to?5sensor?5interference?0?5it?5w@ DB 'Due to sen'
	DB	'sor interference, it would do no good to deploy a beacon on t'
	DB	'his level!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FOKLMDKF@Sorry?0?5there?5is?5already?5a?5SOS?5Be@
CONST	SEGMENT
??_C@_0GI@FOKLMDKF@Sorry?0?5there?5is?5already?5a?5SOS?5Be@ DB 'Sorry, th'
	DB	'ere is already a SOS Beacon deployed, please wait for it to b'
	DB	'urn out before deploying another!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@NAPILLOI@Cannot?5deploy?5SOS?5Beacon?5while?5i@
CONST	SEGMENT
??_C@_0CO@NAPILLOI@Cannot?5deploy?5SOS?5Beacon?5while?5i@ DB 'Cannot depl'
	DB	'oy SOS Beacon while in hyperspace!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@GHBNNCJI@SFX?4Comet_Busters_Overcharged_We@
CONST	SEGMENT
??_C@_0CO@GHBNNCJI@SFX?4Comet_Busters_Overcharged_We@ DB 'SFX.Comet_Buste'
	DB	'rs_Overcharged_Weapons_Disable', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@JFPLAHAP@SFX?4Comet_Busters_Overcharged_We@
CONST	SEGMENT
??_C@_0CN@JFPLAHAP@SFX?4Comet_Busters_Overcharged_We@ DB 'SFX.Comet_Buste'
	DB	'rs_Overcharged_Weapons_Enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@HCJEKJPP@Insufficient?5power?5to?5overcharge@
CONST	SEGMENT
??_C@_0CK@HCJEKJPP@Insufficient?5power?5to?5overcharge@ DB 'Insufficient '
	DB	'power to overcharge weapons!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@DIPLOOLG@SFX?4Comet_Busters_Pickup_Powerup@
CONST	SEGMENT
??_C@_0CI@DIPLOOLG@SFX?4Comet_Busters_Pickup_Powerup@ DB 'SFX.Comet_Buste'
	DB	'rs_Pickup_Powerup_Failed', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@PHDJABCO@You?5have?5aquired?5a?52?5minute?5weap@
CONST	SEGMENT
??_C@_0CM@PHDJABCO@You?5have?5aquired?5a?52?5minute?5weap@ DB 'You have a'
	DB	'quired a 2 minute weapon upgrade!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@KFNGBJLK@You?5have?5aquired?5drone?5swarm?5cal@
CONST	SEGMENT
??_C@_0CM@KFNGBJLK@You?5have?5aquired?5drone?5swarm?5cal@ DB 'You have aq'
	DB	'uired drone swarm calling codes!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@OMMMNLOB@Your?5data?5base?5only?5has?5enough?5r@
CONST	SEGMENT
??_C@_0DO@OMMMNLOB@Your?5data?5base?5only?5has?5enough?5r@ DB 'Your data '
	DB	'base only has enough room for one drone swarm code!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OMIBJMFG@Hyperdrive?5?$CF?40f?$CF?$CF?5charged?$CFs?$AA@
CONST	SEGMENT
??_C@_0BM@OMIBJMFG@Hyperdrive?5?$CF?40f?$CF?$CF?5charged?$CFs?$AA@ DB 'Hy'
	DB	'perdrive %.0f%% charged%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@HNAEINDB@?$DL?5automated?5systems?5are?5now?5on?9l@
CONST	SEGMENT
??_C@_0CF@HNAEINDB@?$DL?5automated?5systems?5are?5now?5on?9l@ DB '; autom'
	DB	'ated systems are now on-line!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT
??_C@_01LFCBOECM@?4?$AA@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@EKOGLIED@Sorry?0?5your?5hyperdrive?5is?5alread@
CONST	SEGMENT
??_C@_0DB@EKOGLIED@Sorry?0?5your?5hyperdrive?5is?5alread@ DB 'Sorry, your'
	DB	' hyperdrive is already fully charged!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@HLMJACGM@You?5have?5aquired?5a?5double?5points@
CONST	SEGMENT
??_C@_0DH@HLMJACGM@You?5have?5aquired?5a?5double?5points@ DB 'You have aq'
	DB	'uired a double points powerup for 1 minute!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@BMNBPLJM@You?5have?5aquired?5a?5rapid?5energy?5@
CONST	SEGMENT
??_C@_0DK@BMNBPLJM@You?5have?5aquired?5a?5rapid?5energy?5@ DB 'You have a'
	DB	'quired a rapid energy cell regen for 2 minutes!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HNFMDNNO@You?5have?5aquired?5a?5Drone?$CB?$AA@
CONST	SEGMENT
??_C@_0BK@HNFMDNNO@You?5have?5aquired?5a?5Drone?$CB?$AA@ DB 'You have aqu'
	DB	'ired a Drone!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@BDHEFFLG@You?5can?5only?5carry?5one?5Drone?5at?5@
CONST	SEGMENT
??_C@_0CI@BDHEFFLG@You?5can?5only?5carry?5one?5Drone?5at?5@ DB 'You can o'
	DB	'nly carry one Drone at a time!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@LEJBKDGI@SFX?4Comet_Busters_Pickup_Powerup@
CONST	SEGMENT
??_C@_0CI@LEJBKDGI@SFX?4Comet_Busters_Pickup_Powerup@ DB 'SFX.Comet_Buste'
	DB	'rs_Pickup_Powerup_Points', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HAEHJBND@?$CFd?5points?5acquired?4?$AA@
CONST	SEGMENT
??_C@_0BE@HAEHJBND@?$CFd?5points?5acquired?4?$AA@ DB '%d points acquired.'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@MIDLDNOD@You?5have?5aquired?5a?5high?5yield?5wa@
CONST	SEGMENT
??_C@_0CH@MIDLDNOD@You?5have?5aquired?5a?5high?5yield?5wa@ DB 'You have a'
	DB	'quired a high yield warhead!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NKIJMCPG@Sorry?0?5your?5cargo?5bay?5is?5full?$CB?$AA@
CONST	SEGMENT
??_C@_0BP@NKIJMCPG@Sorry?0?5your?5cargo?5bay?5is?5full?$CB?$AA@ DB 'Sorry'
	DB	', your cargo bay is full!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MHAMHGLL@You?5have?5aquired?5a?5SOS?5Beacon?$CB?$AA@
CONST	SEGMENT
??_C@_0BP@MHAMHGLL@You?5have?5aquired?5a?5SOS?5Beacon?$CB?$AA@ DB 'You ha'
	DB	've aquired a SOS Beacon!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@OMBIKFLO@You?5can?5only?5carry?5one?5SOS?5Beaco@
CONST	SEGMENT
??_C@_0CN@OMBIKFLO@You?5can?5only?5carry?5one?5SOS?5Beaco@ DB 'You can on'
	DB	'ly carry one SOS Beacon at a time!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@HCHEBKHH@SFX?4Comet_Busters_Pickup_Powerup@
CONST	SEGMENT
??_C@_0CI@HCHEBKHH@SFX?4Comet_Busters_Pickup_Powerup@ DB 'SFX.Comet_Buste'
	DB	'rs_Pickup_Powerup_Health', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@COFCHGJB@?$CFd?5Energy?5Cells?5acquired?4?$AA@
CONST	SEGMENT
??_C@_0BK@COFCHGJB@?$CFd?5Energy?5Cells?5acquired?4?$AA@ DB '%d Energy Ce'
	DB	'lls acquired.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CIJLFMGA@Energy?5Cell?5Stocks?5are?5full?$CB?$AA@
CONST	SEGMENT
??_C@_0BN@CIJLFMGA@Energy?5Cell?5Stocks?5are?5full?$CB?$AA@ DB 'Energy Ce'
	DB	'll Stocks are full!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@ONMMODHJ@JMG_CMTB_Ship_Super_Weapon?$AA@
CONST	SEGMENT
??_C@_0BL@ONMMODHJ@JMG_CMTB_Ship_Super_Weapon?$AA@ DB 'JMG_CMTB_Ship_Supe'
	DB	'r_Weapon', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DHKIKOO@SFX?4Comet_Busters_UI_HYW_Fire_So@
CONST	SEGMENT
??_C@_0CE@DHKIKOO@SFX?4Comet_Busters_UI_HYW_Fire_So@ DB 'SFX.Comet_Buster'
	DB	's_UI_HYW_Fire_Sound', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@DEONIBDK@?1?1?1?1?1?1Warning?3?5A?5HIGH?5YIELD?5WARH@
CONST	SEGMENT
??_C@_0DM@DEONIBDK@?1?1?1?1?1?1Warning?3?5A?5HIGH?5YIELD?5WARH@ DB '/////'
	DB	'/Warning: A HIGH YIELD WARHEAD IS BEING CHARGED!\\\\\\', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@GCNAPHJL@You?5do?5not?5have?5any?5high?5yield?5w@
CONST	SEGMENT
??_C@_0DD@GCNAPHJL@You?5do?5not?5have?5any?5high?5yield?5w@ DB 'You do no'
	DB	't have any high yield warheads to deploy!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@GIPOGOAC@Cannot?5use?5High?5Yield?5Warhead?5at@
CONST	SEGMENT
??_C@_0CM@GIPOGOAC@Cannot?5use?5High?5Yield?5Warhead?5at@ DB 'Cannot use '
	DB	'High Yield Warhead at this time!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@KDGMNIJG@Cannot?5deploy?5a?5High?5Yield?5Warhe@
CONST	SEGMENT
??_C@_0DO@KDGMNIJG@Cannot?5deploy?5a?5High?5Yield?5Warhe@ DB 'Cannot depl'
	DB	'oy a High Yield Warhead while disrupter is active!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@LIMOOHLM@Cannot?5deploy?5a?5High?5Yield?5Warhe@
CONST	SEGMENT
??_C@_0DP@LIMOOHLM@Cannot?5deploy?5a?5High?5Yield?5Warhe@ DB 'Cannot depl'
	DB	'oy a High Yield Warhead while engines are off-line!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BGOEAGGL@Insufficient?5power?5to?5activate?5c@
CONST	SEGMENT
??_C@_0CG@BGOEAGGL@Insufficient?5power?5to?5activate?5c@ DB 'Insufficient'
	DB	' power to activate cloak!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@DCLCEEDD@Cannot?5active?5cloak?5at?5this?5time@
CONST	SEGMENT
??_C@_0CC@DCLCEEDD@Cannot?5active?5cloak?5at?5this?5time@ DB 'Cannot acti'
	DB	've cloak at this time!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@EDAJIGJF@Cannot?5active?5cloak?5while?5disrup@
CONST	SEGMENT
??_C@_0CP@EDAJIGJF@Cannot?5active?5cloak?5while?5disrup@ DB 'Cannot activ'
	DB	'e cloak while disrupter is active!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@HLGDINOP@Insufficient?5power?5to?5activate?5s@
CONST	SEGMENT
??_C@_0CI@HLGDINOP@Insufficient?5power?5to?5activate?5s@ DB 'Insufficient'
	DB	' power to activate shields!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@PCGHDDHP@Cannot?5active?5shields?5at?5this?5ti@
CONST	SEGMENT
??_C@_0CE@PCGHDDHP@Cannot?5active?5shields?5at?5this?5ti@ DB 'Cannot acti'
	DB	've shields at this time!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@KGEIFEHM@Cannot?5active?5shield?5while?5disru@
CONST	SEGMENT
??_C@_0DA@KGEIFEHM@Cannot?5active?5shield?5while?5disru@ DB 'Cannot activ'
	DB	'e shield while disrupter is active!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KKFKOCIF@?$CFs?5forfeited?5?$CFs?5lives?$CB?$AA@
CONST	SEGMENT
??_C@_0BH@KKFKOCIF@?$CFs?5forfeited?5?$CFs?5lives?$CB?$AA@ DB '%s forfeit'
	DB	'ed %s lives!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@IDGONFFN@Press?5ForfeitLives?5key?5again?5to?5@
CONST	SEGMENT
??_C@_0DE@IDGONFFN@Press?5ForfeitLives?5key?5again?5to?5@ DB 'Press Forfe'
	DB	'itLives key again to forfeit your lives!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@OIAFCEKI@Numpad?$FL0?99?$FN?5?9?5Grant?5Player?5Life?$AA@
CONST	SEGMENT
??_C@_0CA@OIAFCEKI@Numpad?$FL0?99?$FN?5?9?5Grant?5Player?5Life?$AA@ DB 'N'
	DB	'umpad[0-9] - Grant Player Life', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NDBKPNIN@Delete?5?9?5Forfeit?5Lives?$AA@
CONST	SEGMENT
??_C@_0BH@NDBKPNIN@Delete?5?9?5Forfeit?5Lives?$AA@ DB 'Delete - Forfeit L'
	DB	'ives', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NAKCKOAM@H?5?9?5Call?5in?5Drone?5Swarm?5?$CIx?$CFd?$CJ?$AA@
CONST	SEGMENT
??_C@_0BO@NAKCKOAM@H?5?9?5Call?5in?5Drone?5Swarm?5?$CIx?$CFd?$CJ?$AA@ DB 'H'
	DB	' - Call in Drone Swarm (x%d)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HDOEINJE@F?5?9?5Launch?5Drone?5?$CIx?$CFd?$CJ?$AA@
CONST	SEGMENT
??_C@_0BH@HDOEINJE@F?5?9?5Launch?5Drone?5?$CIx?$CFd?$CJ?$AA@ DB 'F - Laun'
	DB	'ch Drone (x%d)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FPAOCMMB@T?5?9?5SOS?5Beacon?5?$CIx?$CFd?$CJ?$AA@
CONST	SEGMENT
??_C@_0BF@FPAOCMMB@T?5?9?5SOS?5Beacon?5?$CIx?$CFd?$CJ?$AA@ DB 'T - SOS Be'
	DB	'acon (x%d)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@FECDCLBH@G?5?9?5Highly?5Explosive?5Warhead?5?$CIx?$CF@
CONST	SEGMENT
??_C@_0CD@FECDCLBH@G?5?9?5Highly?5Explosive?5Warhead?5?$CIx?$CF@ DB 'G - '
	DB	'Highly Explosive Warhead (x%d)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09OECLFLBA@Z?5?9?5Cloak?$AA@
CONST	SEGMENT
??_C@_09OECLFLBA@Z?5?9?5Cloak?$AA@ DB 'Z - Cloak', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MGMBLIHC@Q?5?9?5Shield?$AA@
CONST	SEGMENT
??_C@_0L@MGMBLIHC@Q?5?9?5Shield?$AA@ DB 'Q - Shield', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BKLKMPPO@R?5?9?5Toggle?5Rapid?5Fire?$AA@
CONST	SEGMENT
??_C@_0BG@BKLKMPPO@R?5?9?5Toggle?5Rapid?5Fire?$AA@ DB 'R - Toggle Rapid F'
	DB	'ire', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JOLJGOHJ@Ship?5Control?5Keys?3?$AA@
CONST	SEGMENT
??_C@_0BD@JOLJGOHJ@Ship?5Control?5Keys?3?$AA@ DB 'Ship Control Keys:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GACIJABL@Double?5Points?5time?5?$CFd?5seconds?4?$AA@
CONST	SEGMENT
??_C@_0BP@GACIJABL@Double?5Points?5time?5?$CFd?5seconds?4?$AA@ DB 'Double'
	DB	' Points time %d seconds.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GIPGGHOA@Extra?5Shot?5?$CFd?5seconds?4?$AA@
CONST	SEGMENT
??_C@_0BH@GIPGGHOA@Extra?5Shot?5?$CFd?5seconds?4?$AA@ DB 'Extra Shot %d s'
	DB	'econds.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JGLNCOEL@Rapid?5Energy?5Regen?5?$CFd?5seconds?4?$AA@
CONST	SEGMENT
??_C@_0BP@JGLNCOEL@Rapid?5Energy?5Regen?5?$CFd?5seconds?4?$AA@ DB 'Rapid '
	DB	'Energy Regen %d seconds.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FKKHHCEG@Hyper?5Drive?5Charge?5?$CF?40f?4?$AA@
CONST	SEGMENT
??_C@_0BJ@FKKHHCEG@Hyper?5Drive?5Charge?5?$CF?40f?4?$AA@ DB 'Hyper Drive '
	DB	'Charge %.0f.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@CNMJDAHL@Selected?5Special?5Ability?3?5None?$AA@
CONST	SEGMENT
??_C@_0BP@CNMJDAHL@Selected?5Special?5Ability?3?5None?$AA@ DB 'Selected S'
	DB	'pecial Ability: None', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@CMGIACAM@Selected?5Special?5Ability?3?5Drone?5@
CONST	SEGMENT
??_C@_0CG@CMGIACAM@Selected?5Special?5Ability?3?5Drone?5@ DB 'Selected Sp'
	DB	'ecial Ability: Drone Swarm', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@NBLBGGDG@Selected?5Special?5Ability?3?5SOS?5Be@
CONST	SEGMENT
??_C@_0CF@NBLBGGDG@Selected?5Special?5Ability?3?5SOS?5Be@ DB 'Selected Sp'
	DB	'ecial Ability: SOS Beacon', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@HFBEIFFK@Selected?5Special?5Ability?3?5High?5E@
CONST	SEGMENT
??_C@_0DB@HFBEIFFK@Selected?5Special?5Ability?3?5High?5E@ DB 'Selected Sp'
	DB	'ecial Ability: High Explosive Warhead', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FCHCAGLH@Selected?5Special?5Ability?3?5Drone?$AA@
CONST	SEGMENT
??_C@_0CA@FCHCAGLH@Selected?5Special?5Ability?3?5Drone?$AA@ DB 'Selected '
	DB	'Special Ability: Drone', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@BEGAEGLB@Selected?5Special?5Ability?3?5Weapon@
CONST	SEGMENT
??_C@_0CK@BEGAEGLB@Selected?5Special?5Ability?3?5Weapon@ DB 'Selected Spe'
	DB	'cial Ability: Weapons Upgrade', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@ILHHOMJH@Selected?5Special?5Ability?3?5Energy@
CONST	SEGMENT
??_C@_0CH@ILHHOMJH@Selected?5Special?5Ability?3?5Energy@ DB 'Selected Spe'
	DB	'cial Ability: Energy Regen', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@HFBFCNOB@Selected?5Special?5Ability?3?5Double@
CONST	SEGMENT
??_C@_0CI@HFBFCNOB@Selected?5Special?5Ability?3?5Double@ DB 'Selected Spe'
	DB	'cial Ability: Double Points', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@OOENGFNH@Selected?5Special?5Ability?3?5Hyperj@
CONST	SEGMENT
??_C@_0CM@OOENGFNH@Selected?5Special?5Ability?3?5Hyperj@ DB 'Selected Spe'
	DB	'cial Ability: Hyperjump Powerup', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@PHEHLLGF@Selected?5Special?5Ability?3?5Extra?5@
CONST	SEGMENT
??_C@_0CF@PHEHLLGF@Selected?5Special?5Ability?3?5Extra?5@ DB 'Selected Sp'
	DB	'ecial Ability: Extra Life', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@NFAFAOHK@JMG_RP2_Object_Send_Text_Message@
CONST	SEGMENT
??_C@_0CK@NFAFAOHK@JMG_RP2_Object_Send_Text_Message@ DB 'JMG_RP2_Object_S'
	DB	'end_Text_Message_On_Death', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03EPODMGGC@4?00?$AA@
CONST	SEGMENT
??_C@_03EPODMGGC@4?00?$AA@ DB '4,0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NPBKOJID@UFO?4UFO?$AA@
CONST	SEGMENT
??_C@_07NPBKOJID@UFO?4UFO?$AA@ DB 'UFO.UFO', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03CBJOHNML@UFO?$AA@
CONST	SEGMENT
??_C@_03CBJOHNML@UFO?$AA@ DB 'UFO', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@LHEOCOHM@SFX?4Comet_Busters_Ship_Hyperspac@
CONST	SEGMENT
??_C@_0CC@LHEOCOHM@SFX?4Comet_Busters_Ship_Hyperspac@ DB 'SFX.Comet_Buste'
	DB	'rs_Ship_Hyperspace', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KHOIHPDE@UFOJump?4UFOJump?$AA@
CONST	SEGMENT
??_C@_0BA@KHOIHPDE@UFOJump?4UFOJump?$AA@ DB 'UFOJump.UFOJump', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07HPFMBEAN@UFOJump?$AA@
CONST	SEGMENT
??_C@_07HPFMBEAN@UFOJump?$AA@ DB 'UFOJump', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07ENBNDFIO@UFOBoss?$AA@
CONST	SEGMENT
??_C@_07ENBNDFIO@UFOBoss?$AA@ DB 'UFOBoss', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@EKAIJPOG@SFX?4Comet_Busters_Ship_Spawn?$AA@
CONST	SEGMENT
??_C@_0BN@EKAIJPOG@SFX?4Comet_Busters_Ship_Spawn?$AA@ DB 'SFX.Comet_Buste'
	DB	'rs_Ship_Spawn', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@NJFDNEPI@SFX?4Comet_Busters_Pickup_Powerup@
CONST	SEGMENT
??_C@_0CB@NJFDNEPI@SFX?4Comet_Busters_Pickup_Powerup@ DB 'SFX.Comet_Buste'
	DB	'rs_Pickup_Powerup', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@IKJEMBEN@You?5have?5aquired?5another?5life?$CB?$AA@
CONST	SEGMENT
??_C@_0BP@IKJEMBEN@You?5have?5aquired?5another?5life?$CB?$AA@ DB 'You hav'
	DB	'e aquired another life!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
CONST	SEGMENT
??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@ DB 'SFX.Comet_Buste'
	DB	'rs_UI_Failed_Sound', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@IMOGNOKK@Your?5double?5points?5powerup?5has?5e@
CONST	SEGMENT
??_C@_0CI@IMOGNOKK@Your?5double?5points?5powerup?5has?5e@ DB 'Your double'
	DB	' points powerup has expired!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BIJBOFNL@Origin?$AA@
CONST	SEGMENT
??_C@_06BIJBOFNL@Origin?$AA@ DB 'Origin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT
??_C@_01GBGANLPD@0?$AA@ DB '0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PADKNPLL@Game?5Over?$CB?$AA@
CONST	SEGMENT
??_C@_0L@PADKNPLL@Game?5Over?$CB?$AA@ DB 'Game Over!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@DHLGHGHD@You?5scored?5?$CF?42f?5points?5and?5made?5@
CONST	SEGMENT
??_C@_0CP@DHLGHGHD@You?5scored?5?$CF?42f?5points?5and?5made?5@ DB 'You sc'
	DB	'ored %.2f points and made it to level %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@IGADHMMP@You?5scored?5?$CF?42f?5points?5and?5made?5@
CONST	SEGMENT
??_C@_0EO@IGADHMMP@You?5scored?5?$CF?42f?5points?5and?5made?5@ DB 'You sc'
	DB	'ored %.2f points and made it to a new personal highest level:'
	DB	' Level %d!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@MNMLHPG@You?5scored?5?$CF?42f?5points?5and?5made?5@
CONST	SEGMENT
??_C@_0EC@MNMLHPG@You?5scored?5?$CF?42f?5points?5and?5made?5@ DB 'You sco'
	DB	'red %.2f points and made it to level %d while using perks!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GA@BBOALNAI@You?5scored?5?$CF?42f?5points?5and?5made?5@
CONST	SEGMENT
??_C@_0GA@BBOALNAI@You?5scored?5?$CF?42f?5points?5and?5made?5@ DB 'You sc'
	DB	'ored %.2f points and made it to a new personal highest level:'
	DB	' Level %d while using perks!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@MNBPFAEN@You?5scored?5?$CF?42f?5points?5and?5throu@
CONST	SEGMENT
??_C@_0EB@MNBPFAEN@You?5scored?5?$CF?42f?5points?5and?5throu@ DB 'You sco'
	DB	'red %.2f points and through teamwork made it to Level %d!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FN@NOIOEAIC@You?5scored?5?$CF?42f?5points?5and?5throu@
CONST	SEGMENT
??_C@_0FN@NOIOEAIC@You?5scored?5?$CF?42f?5points?5and?5throu@ DB 'You sco'
	DB	'red %.2f points and through teamwork made it to a new high le'
	DB	'vel as a team: Level %d!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@FEOOFKHE@You?5scored?5?$CF?42f?5points?5and?5throu@
CONST	SEGMENT
??_C@_0FD@FEOOFKHE@You?5scored?5?$CF?42f?5points?5and?5throu@ DB 'You sco'
	DB	'red %.2f points and through teamwork made it to Level %d whil'
	DB	'e using perks!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GP@OAILEGEN@You?5scored?5?$CF?42f?5points?5and?5throu@
CONST	SEGMENT
??_C@_0GP@OAILEGEN@You?5scored?5?$CF?42f?5points?5and?5throu@ DB 'You sco'
	DB	'red %.2f points and through teamwork made it to a new high le'
	DB	'vel as a team: Level %d while using perks!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DJPMNHPB@SFX?4Primary_Mission_Complete?$AA@
CONST	SEGMENT
??_C@_0BN@DJPMNHPB@SFX?4Primary_Mission_Complete?$AA@ DB 'SFX.Primary_Mis'
	DB	'sion_Complete', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DNDPJPGA@SFX?4Primary_Mission_Update?$AA@
CONST	SEGMENT
??_C@_0BL@DNDPJPGA@SFX?4Primary_Mission_Update?$AA@ DB 'SFX.Primary_Missi'
	DB	'on_Update', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HMLJENEK@SFX?4Bonus_Mission_Update?$AA@
CONST	SEGMENT
??_C@_0BJ@HMLJENEK@SFX?4Bonus_Mission_Update?$AA@ DB 'SFX.Bonus_Mission_U'
	DB	'pdate', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08KNDNNBLP@Level?5?$CFd?$AA@
CONST	SEGMENT
??_C@_08KNDNNBLP@Level?5?$CFd?$AA@ DB 'Level %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OPFJBCLD@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CKLevel?5?$CFd?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$AA@
CONST	SEGMENT
??_C@_0BP@OPFJBCLD@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CKLevel?5?$CFd?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$AA@ DB '*'
	DB	'**********Level %d***********', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@KIMJPMME@JMG_CMTB_Cargo_Ship_Script?$AA@
CONST	SEGMENT
??_C@_0BL@KIMJPMME@JMG_CMTB_Cargo_Ship_Script?$AA@ DB 'JMG_CMTB_Cargo_Shi'
	DB	'p_Script', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02PGHGPEOM@?91?$AA@
CONST	SEGMENT
??_C@_02PGHGPEOM@?91?$AA@ DB '-1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JDFEGNBJ@CMTB_Cargo_Ship?$AA@
CONST	SEGMENT
??_C@_0BA@JDFEGNBJ@CMTB_Cargo_Ship?$AA@ DB 'CMTB_Cargo_Ship', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04IDMPJGHP@moon?$AA@
CONST	SEGMENT
??_C@_04IDMPJGHP@moon?$AA@ DB 'moon', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OJPPMONF@TheMoon?$CB?$AA@
CONST	SEGMENT
??_C@_08OJPPMONF@TheMoon?$CB?$AA@ DB 'TheMoon!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HFCLPCGF@TheMoon?$CBANIM?4TheMoon?$CBANIM?$AA@
CONST	SEGMENT
??_C@_0BK@HFCLPCGF@TheMoon?$CBANIM?4TheMoon?$CBANIM?$AA@ DB 'TheMoon!ANIM'
	DB	'.TheMoon!ANIM', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OEINIMLP@TheMoon?$CBANIM?$AA@
CONST	SEGMENT
??_C@_0N@OEINIMLP@TheMoon?$CBANIM?$AA@ DB 'TheMoon!ANIM', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@NKFKHNHH@JMG_CMTB_UFO_Random_Fire_Control@
CONST	SEGMENT
??_C@_0CB@NKFKHNHH@JMG_CMTB_UFO_Random_Fire_Control@ DB 'JMG_CMTB_UFO_Ran'
	DB	'dom_Fire_Control', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BOCOGEON@JMG_CMTB_Comet_Script?$AA@
CONST	SEGMENT
??_C@_0BG@BOCOGEON@JMG_CMTB_Comet_Script?$AA@ DB 'JMG_CMTB_Comet_Script', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HGLHKBGH@2?0?$CF?43f?5?$CF?43f?5?$CF?43f?$AA@
CONST	SEGMENT
??_C@_0BB@HGLHKBGH@2?0?$CF?43f?5?$CF?43f?5?$CF?43f?$AA@ DB '2,%.3f %.3f %'
	DB	'.3f', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08JMBNGAFO@CMTB_UFO?$AA@
CONST	SEGMENT
??_C@_08JMBNGAFO@CMTB_UFO?$AA@ DB 'CMTB_UFO', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06DNAANCNK@Comet2?$AA@
CONST	SEGMENT
??_C@_06DNAANCNK@Comet2?$AA@ DB 'Comet2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DPFEEIBF@JMG_CMTB_Motion_Mine?$AA@
CONST	SEGMENT
??_C@_0BF@DPFEEIBF@JMG_CMTB_Motion_Mine?$AA@ DB 'JMG_CMTB_Motion_Mine', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01HIHLOKLC@1?$AA@
CONST	SEGMENT
??_C@_01HIHLOKLC@1?$AA@ DB '1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PFAJEBB@CMTB_Drone?$AA@
CONST	SEGMENT
??_C@_0L@PFAJEBB@CMTB_Drone?$AA@ DB 'CMTB_Drone', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@BNLFCCLE@JMG_CMTB_Fake_Player_Attach_Scri@
CONST	SEGMENT
??_C@_0CD@BNLFCCLE@JMG_CMTB_Fake_Player_Attach_Scri@ DB 'JMG_CMTB_Fake_Pl'
	DB	'ayer_Attach_Script', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MGLGPNNK@invisibleChar?$AA@
CONST	SEGMENT
??_C@_0O@MGLGPNNK@invisibleChar?$AA@ DB 'invisibleChar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BFJLDGDA@CnC_Nod_MinigunnerN?$AA@
CONST	SEGMENT
??_C@_0BE@BFJLDGDA@CnC_Nod_MinigunnerN?$AA@ DB 'CnC_Nod_MinigunnerN', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PEMACFHI@Escape?4mp3?$AA@
CONST	SEGMENT
??_C@_0L@PEMACFHI@Escape?4mp3?$AA@ DB 'Escape.mp3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LILAHFNO@Android?4mp3?$AA@
CONST	SEGMENT
??_C@_0M@LILAHFNO@Android?4mp3?$AA@ DB 'Android.mp3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JGDOJGG@Thunder?4mp3?$AA@
CONST	SEGMENT
??_C@_0M@JGDOJGG@Thunder?4mp3?$AA@ DB 'Thunder.mp3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@CAEFBAEF@?$CFs?5is?5ready?5to?5start?5the?5game?$DL?5h@
CONST	SEGMENT
??_C@_0DL@CAEFBAEF@?$CFs?5is?5ready?5to?5start?5the?5game?$DL?5h@ DB '%s '
	DB	'is ready to start the game; however, %d others are not!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09JAKCOKP@SpawnS0?$CFd?$AA@
CONST	SEGMENT
??_C@_09JAKCOKP@SpawnS0?$CFd?$AA@ DB 'SpawnS0%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HMKEDKPH@P?$CFd_SHIP?4P?$CFd_SHIP?$AA@
CONST	SEGMENT
??_C@_0BC@HMKEDKPH@P?$CFd_SHIP?4P?$CFd_SHIP?$AA@ DB 'P%d_SHIP.P%d_SHIP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08LMPADKBD@P?$CFd_SHIP?$AA@
CONST	SEGMENT
??_C@_08LMPADKBD@P?$CFd_SHIP?$AA@ DB 'P%d_SHIP', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FHNGDPEO@Player_Ships?$AA@
CONST	SEGMENT
??_C@_0N@FHNGDPEO@Player_Ships?$AA@ DB 'Player_Ships', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09CFKJBEPJ@CreateS?$CFd?$AA@
CONST	SEGMENT
??_C@_09CFKJBEPJ@CreateS?$CFd?$AA@ DB 'CreateS%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IMCJNJOP@JMG_CMTB_Spectator_Object?$AA@
CONST	SEGMENT
??_C@_0BK@IMCJNJOP@JMG_CMTB_Spectator_Object?$AA@ DB 'JMG_CMTB_Spectator_'
	DB	'Object', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@GNJLFKOF@JMG_CMTB_Vehicle_Face_Turret?$AA@
CONST	SEGMENT
??_C@_0BN@GNJLFKOF@JMG_CMTB_Vehicle_Face_Turret?$AA@ DB 'JMG_CMTB_Vehicle'
	DB	'_Face_Turret', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EDKELIGB@Spectator_Vehicle?$AA@
CONST	SEGMENT
??_C@_0BC@EDKELIGB@Spectator_Vehicle?$AA@ DB 'Spectator_Vehicle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GOMAJMEN@SpecSpot0?$CFd?$AA@
CONST	SEGMENT
??_C@_0M@GOMAJMEN@SpecSpot0?$CFd?$AA@ DB 'SpecSpot0%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ILEENPHG@RenRoidsBones?$AA@
CONST	SEGMENT
??_C@_0O@ILEENPHG@RenRoidsBones?$AA@ DB 'RenRoidsBones', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KMNMLLME@JMG_CMTB_Powerup_Script?$AA@
CONST	SEGMENT
??_C@_0BI@KMNMLLME@JMG_CMTB_Powerup_Script?$AA@ DB 'JMG_CMTB_Powerup_Scri'
	DB	'pt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IAPNGHEF@CMTB_Powerup_Object?$AA@
CONST	SEGMENT
??_C@_0BE@IAPNGHEF@CMTB_Powerup_Object?$AA@ DB 'CMTB_Powerup_Object', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JKMLHKIH@JMG_Remove_Object_When_Creator_D@
CONST	SEGMENT
??_C@_0CJ@JKMLHKIH@JMG_Remove_Object_When_Creator_D@ DB 'JMG_Remove_Objec'
	DB	't_When_Creator_Destroyed', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HHIGELPC@Player_Ship?$AA@
CONST	SEGMENT
??_C@_0M@HHIGELPC@Player_Ship?$AA@ DB 'Player_Ship', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JIKPOHEH@SC2?$AA@
CONST	SEGMENT
??_C@_03JIKPOHEH@SC2?$AA@ DB 'SC2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LDICLEIE@SC1?$AA@
CONST	SEGMENT
??_C@_03LDICLEIE@SC1?$AA@ DB 'SC1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DEIDFEHH@JMG_Attach_And_Remove?$AA@
CONST	SEGMENT
??_C@_0BG@DEIDFEHH@JMG_Attach_And_Remove?$AA@ DB 'JMG_Attach_And_Remove', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GNKCNLNJ@Smaller_Comet?$AA@
CONST	SEGMENT
??_C@_0O@GNKCNLNJ@Smaller_Comet?$AA@ DB 'Smaller_Comet', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BCBILOOP@Comet_Holder?$AA@
CONST	SEGMENT
??_C@_0N@BCBILOOP@Comet_Holder?$AA@ DB 'Comet_Holder', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ELBIIDGM@Spawn_Comets?$AA@
CONST	SEGMENT
??_C@_0N@ELBIIDGM@Spawn_Comets?$AA@ DB 'Spawn_Comets', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@MNFEONNH@JFW_Send_Custom_Distance_Objects@
CONST	SEGMENT
??_C@_0CH@MNFEONNH@JFW_Send_Custom_Distance_Objects@ DB 'JFW_Send_Custom_'
	DB	'Distance_Objects_Timer', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LLLHCPF@?$CFf?0911?00?410?0453?02?$AA@
CONST	SEGMENT
??_C@_0BC@LLLHCPF@?$CFf?0911?00?410?0453?02?$AA@ DB '%f,911,0.10,453,2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FDJHJHMA@Comet_Size?$AA@
CONST	SEGMENT
??_C@_0L@FDJHJHMA@Comet_Size?$AA@ DB 'Comet_Size', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MDGHNFN@Weapon_Ship_Plasma_Shot_Normal?$AA@
CONST	SEGMENT
??_C@_0BP@MDGHNFN@Weapon_Ship_Plasma_Shot_Normal?$AA@ DB 'Weapon_Ship_Pla'
	DB	'sma_Shot_Normal', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GKMNIJOO@Power_Drain?$AA@
CONST	SEGMENT
??_C@_0M@GKMNIJOO@Power_Drain?$AA@ DB 'Power_Drain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04IAGNFIBA@size?$AA@
CONST	SEGMENT
??_C@_04IAGNFIBA@size?$AA@ DB 'size', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FKEHAHKO@shipshieldw?$AA@
CONST	SEGMENT
??_C@_0M@FKEHAHKO@shipshieldw?$AA@ DB 'shipshieldw', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IDEGAHLP@MESSAGE?5Shield?5Should?5Exist?$AA@
CONST	SEGMENT
??_C@_0BM@IDEGAHLP@MESSAGE?5Shield?5Should?5Exist?$AA@ DB 'MESSAGE Shield'
	DB	' Should Exist', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MEMECKCA@shipshieldy?$AA@
CONST	SEGMENT
??_C@_0M@MEMECKCA@shipshieldy?$AA@ DB 'shipshieldy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PCLMDKNK@cometbsy?$AA@
CONST	SEGMENT
??_C@_08PCLMDKNK@cometbsy?$AA@ DB 'cometbsy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CHDAPDOL@shipshieldr?$AA@
CONST	SEGMENT
??_C@_0M@CHDAPDOL@shipshieldr?$AA@ DB 'shipshieldr', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BBEIODBB@cometbsr?$AA@
CONST	SEGMENT
??_C@_08BBEIODBB@cometbsr?$AA@ DB 'cometbsr', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BAIFBFPP@shipshieldg?$AA@
CONST	SEGMENT
??_C@_0M@BAIFBFPP@shipshieldg?$AA@ DB 'shipshieldg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08CGPNAFAF@cometbsg?$AA@
CONST	SEGMENT
??_C@_08CGPNAFAF@cometbsg?$AA@ DB 'cometbsg', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GNPCOBLK@shipshieldb?$AA@
CONST	SEGMENT
??_C@_0M@GNPCOBLK@shipshieldb?$AA@ DB 'shipshieldb', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FLIKPBEA@cometbsb?$AA@
CONST	SEGMENT
??_C@_08FLIKPBEA@cometbsb?$AA@ DB 'cometbsb', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CPMCEIFJ@MESSAGE?5DEAD?0?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BB@CPMCEIFJ@MESSAGE?5DEAD?0?5?$CFs?$AA@ DB 'MESSAGE DEAD, %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03OHGKCNFD@Nod?$AA@
CONST	SEGMENT
??_C@_03OHGKCNFD@Nod?$AA@ DB 'Nod', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HCHCNLGC@MESSAGE?5off?$AA@
CONST	SEGMENT
??_C@_0M@HCHCNLGC@MESSAGE?5off?$AA@ DB 'MESSAGE off', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BJLEKJKD@MESSAGE?5on?$AA@
CONST	SEGMENT
??_C@_0L@BJLEKJKD@MESSAGE?5on?$AA@ DB 'MESSAGE on', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OIEIGPLK@JMG_Ship_Shield_Script?$AA@
CONST	SEGMENT
??_C@_0BH@OIEIGPLK@JMG_Ship_Shield_Script?$AA@ DB 'JMG_Ship_Shield_Script'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FKJDDLOD@Ship_Shield?$AA@
CONST	SEGMENT
??_C@_0M@FKJDDLOD@Ship_Shield?$AA@ DB 'Ship_Shield', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07BEIHKDLJ@Message?$AA@
CONST	SEGMENT
??_C@_07BEIHKDLJ@Message?$AA@ DB 'Message', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09BHCKEHEF@Song3Time?$AA@
CONST	SEGMENT
??_C@_09BHCKEHEF@Song3Time?$AA@ DB 'Song3Time', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LNEPPMDM@Song3?$AA@
CONST	SEGMENT
??_C@_05LNEPPMDM@Song3?$AA@ DB 'Song3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09NMHGJEOA@Song2Time?$AA@
CONST	SEGMENT
??_C@_09NMHGJEOA@Song2Time?$AA@ DB 'Song2Time', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05KEFEMNHN@Song2?$AA@
CONST	SEGMENT
??_C@_05KEFEMNHN@Song2?$AA@ DB 'Song2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FKOCOGEO@Song1Time?$AA@
CONST	SEGMENT
??_C@_09FKOCOGEO@Song1Time?$AA@ DB 'Song1Time', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05IPHJJOLO@Song1?$AA@
CONST	SEGMENT
??_C@_05IPHJJOLO@Song1?$AA@ DB 'Song1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FKGDDIBN@HyperSpaceSound?$AA@
CONST	SEGMENT
??_C@_0BA@FKGDDIBN@HyperSpaceSound?$AA@ DB 'HyperSpaceSound', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PNBOLPNL@HyperspacingModel?$AA@
CONST	SEGMENT
??_C@_0BC@PNBOLPNL@HyperspacingModel?$AA@ DB 'HyperspacingModel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07EJBEAEG@XAmount?$AA@
CONST	SEGMENT
??_C@_07EJBEAEG@XAmount?$AA@ DB 'XAmount', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MIDLEANI@YAmount?$AA@
CONST	SEGMENT
??_C@_07MIDLEANI@YAmount?$AA@ DB 'YAmount', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EGLEEHDL@ZAmount?$AA@
CONST	SEGMENT
??_C@_07EGLEEHDL@ZAmount?$AA@ DB 'ZAmount', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HCADMAFB@InvisibleObject?$AA@
CONST	SEGMENT
??_C@_0BA@HCADMAFB@InvisibleObject?$AA@ DB 'InvisibleObject', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KDKMBANG@ShipPreset?$AA@
CONST	SEGMENT
??_C@_0L@KDKMBANG@ShipPreset?$AA@ DB 'ShipPreset', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HIBGFPH@NULL?$AA@
CONST	SEGMENT
??_C@_04HIBGFPH@NULL?$AA@ DB 'NULL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05HGDDNFDM@blamo?$AA@
CONST	SEGMENT
??_C@_05HGDDNFDM@blamo?$AA@ DB 'blamo', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PHBEHGCL@SpawnSpotExplosion?$AA@
CONST	SEGMENT
??_C@_0BD@PHBEHGCL@SpawnSpotExplosion?$AA@ DB 'SpawnSpotExplosion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HPJBEPCP@CreateSpot?$AA@
CONST	SEGMENT
??_C@_0L@HPJBEPCP@CreateSpot?$AA@ DB 'CreateSpot', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_Poke_Change_Difficulty@@6B@
CONST	SEGMENT
??_7JMG_CMTB_Poke_Change_Difficulty@@6B@ DD FLAT:??_R4JMG_CMTB_Poke_Change_Difficulty@@6B@ ; JMG_CMTB_Poke_Change_Difficulty::`vftable'
	DD	FLAT:??_EJMG_CMTB_Poke_Change_Difficulty@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_Poke_Change_Difficulty@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@JMG_CMTB_Poke_Change_Difficulty@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_Poke_End_Map@@6B@
CONST	SEGMENT
??_7JMG_CMTB_Poke_End_Map@@6B@ DD FLAT:??_R4JMG_CMTB_Poke_End_Map@@6B@ ; JMG_CMTB_Poke_End_Map::`vftable'
	DD	FLAT:??_EJMG_CMTB_Poke_End_Map@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_Poke_End_Map@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_CMTB_Poke_End_Map@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@JMG_CMTB_Poke_End_Map@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_Vehicle_Face_Turret@@6B@
CONST	SEGMENT
??_7JMG_CMTB_Vehicle_Face_Turret@@6B@ DD FLAT:??_R4JMG_CMTB_Vehicle_Face_Turret@@6B@ ; JMG_CMTB_Vehicle_Face_Turret::`vftable'
	DD	FLAT:??_EJMG_CMTB_Vehicle_Face_Turret@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_Vehicle_Face_Turret@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@JMG_CMTB_Vehicle_Face_Turret@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_CMTB_Vehicle_Face_Turret@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_Apply_Damage_On_Timer@@6B@
CONST	SEGMENT
??_7JMG_Apply_Damage_On_Timer@@6B@ DD FLAT:??_R4JMG_Apply_Damage_On_Timer@@6B@ ; JMG_Apply_Damage_On_Timer::`vftable'
	DD	FLAT:??_EJMG_Apply_Damage_On_Timer@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_Apply_Damage_On_Timer@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_Apply_Damage_On_Timer@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_User_Auto_Enter_Ship@@6B@
CONST	SEGMENT
??_7JMG_User_Auto_Enter_Ship@@6B@ DD FLAT:??_R4JMG_User_Auto_Enter_Ship@@6B@ ; JMG_User_Auto_Enter_Ship::`vftable'
	DD	FLAT:??_EJMG_User_Auto_Enter_Ship@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_User_Auto_Enter_Ship@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_User_Auto_Enter_Ship@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_Attach_And_Remove@@6B@
CONST	SEGMENT
??_7JMG_Attach_And_Remove@@6B@ DD FLAT:??_R4JMG_Attach_And_Remove@@6B@ ; JMG_Attach_And_Remove::`vftable'
	DD	FLAT:??_EJMG_Attach_And_Remove@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_Attach_And_Remove@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_Attach_And_Remove@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_Comet_Control_Script@@6B@
CONST	SEGMENT
??_7JMG_Comet_Control_Script@@6B@ DD FLAT:??_R4JMG_Comet_Control_Script@@6B@ ; JMG_Comet_Control_Script::`vftable'
	DD	FLAT:??_EJMG_Comet_Control_Script@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_Comet_Control_Script@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@JMG_Comet_Control_Script@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_Comet_Control_Script@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_New_Ship_Weapon_Control_System@@6B@
CONST	SEGMENT
??_7JMG_New_Ship_Weapon_Control_System@@6B@ DD FLAT:??_R4JMG_New_Ship_Weapon_Control_System@@6B@ ; JMG_New_Ship_Weapon_Control_System::`vftable'
	DD	FLAT:??_EJMG_New_Ship_Weapon_Control_System@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@JMG_New_Ship_Weapon_Control_System@@EAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_Renetbusters_Object@@6B@
CONST	SEGMENT
??_7JMG_Renetbusters_Object@@6B@ DD FLAT:??_R4JMG_Renetbusters_Object@@6B@ ; JMG_Renetbusters_Object::`vftable'
	DD	FLAT:??_EJMG_Renetbusters_Object@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@JMG_Renetbusters_Object@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_Ship_Shield_Script@@6B@
CONST	SEGMENT
??_7JMG_Ship_Shield_Script@@6B@ DD FLAT:??_R4JMG_Ship_Shield_Script@@6B@ ; JMG_Ship_Shield_Script::`vftable'
	DD	FLAT:??_EJMG_Ship_Shield_Script@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_Kill_Self_And_Sender_On_Custom_Ship@@6B@
CONST	SEGMENT
??_7JMG_Kill_Self_And_Sender_On_Custom_Ship@@6B@ DD FLAT:??_R4JMG_Kill_Self_And_Sender_On_Custom_Ship@@6B@ ; JMG_Kill_Self_And_Sender_On_Custom_Ship::`vftable'
	DD	FLAT:??_EJMG_Kill_Self_And_Sender_On_Custom_Ship@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_Kill_Self_And_Sender_On_Custom_Ship@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@JMG_Kill_Self_And_Sender_On_Custom_Ship@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_Ship_Shield_Control_Script@@6B@
CONST	SEGMENT
??_7JMG_Ship_Shield_Control_Script@@6B@ DD FLAT:??_R4JMG_Ship_Shield_Control_Script@@6B@ ; JMG_Ship_Shield_Control_Script::`vftable'
	DD	FLAT:??_EJMG_Ship_Shield_Control_Script@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_Ship_Shield_Control_Script@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@JMG_Ship_Shield_Control_Script@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@JMG_Ship_Shield_Control_Script@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_Kill_Self_And_Sender_On_Custom@@6B@
CONST	SEGMENT
??_7JMG_Kill_Self_And_Sender_On_Custom@@6B@ DD FLAT:??_R4JMG_Kill_Self_And_Sender_On_Custom@@6B@ ; JMG_Kill_Self_And_Sender_On_Custom::`vftable'
	DD	FLAT:??_EJMG_Kill_Self_And_Sender_On_Custom@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@JMG_Kill_Self_And_Sender_On_Custom@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_Cronie_AI@@6B@
CONST	SEGMENT
??_7JMG_Cronie_AI@@6B@ DD FLAT:??_R4JMG_Cronie_AI@@6B@	; JMG_Cronie_AI::`vftable'
	DD	FLAT:??_EJMG_Cronie_AI@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_Cronie_AI@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@JMG_Cronie_AI@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_Cronie_AI@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_Return_Custom_When_Shot@@6B@
CONST	SEGMENT
??_7JMG_Return_Custom_When_Shot@@6B@ DD FLAT:??_R4JMG_Return_Custom_When_Shot@@6B@ ; JMG_Return_Custom_When_Shot::`vftable'
	DD	FLAT:??_EJMG_Return_Custom_When_Shot@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@JMG_Return_Custom_When_Shot@@EAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_Ship_Weapon@@6B@
CONST	SEGMENT
??_7JMG_Ship_Weapon@@6B@ DD FLAT:??_R4JMG_Ship_Weapon@@6B@ ; JMG_Ship_Weapon::`vftable'
	DD	FLAT:??_EJMG_Ship_Weapon@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_Ship_Weapon@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@JMG_Ship_Weapon@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_Ship_Weapon@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_Random_Music@@6B@
CONST	SEGMENT
??_7JMG_Random_Music@@6B@ DD FLAT:??_R4JMG_Random_Music@@6B@ ; JMG_Random_Music::`vftable'
	DD	FLAT:??_EJMG_Random_Music@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_Random_Music@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_Random_Music@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_Ship_Random_Hyperspace@@6B@
CONST	SEGMENT
??_7JMG_Ship_Random_Hyperspace@@6B@ DD FLAT:??_R4JMG_Ship_Random_Hyperspace@@6B@ ; JMG_Ship_Random_Hyperspace::`vftable'
	DD	FLAT:??_EJMG_Ship_Random_Hyperspace@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_Ship_Random_Hyperspace@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@JMG_Ship_Random_Hyperspace@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_Ship_Random_Hyperspace@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_Advanced_Bounce_Zone@@6B@
CONST	SEGMENT
??_7JMG_Advanced_Bounce_Zone@@6B@ DD FLAT:??_R4JMG_Advanced_Bounce_Zone@@6B@ ; JMG_Advanced_Bounce_Zone::`vftable'
	DD	FLAT:??_EJMG_Advanced_Bounce_Zone@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@JMG_Advanced_Bounce_Zone@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_Create_Ship_On_Poke@@6B@
CONST	SEGMENT
??_7JMG_Create_Ship_On_Poke@@6B@ DD FLAT:??_R4JMG_Create_Ship_On_Poke@@6B@ ; JMG_Create_Ship_On_Poke::`vftable'
	DD	FLAT:??_EJMG_Create_Ship_On_Poke@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_Create_Ship_On_Poke@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_Create_Ship_On_Poke@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@JMG_Create_Ship_On_Poke@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_Player_Drone@@6B@
CONST	SEGMENT
??_7JMG_CMTB_Player_Drone@@6B@ DD FLAT:??_R4JMG_CMTB_Player_Drone@@6B@ ; JMG_CMTB_Player_Drone::`vftable'
	DD	FLAT:??_EJMG_CMTB_Player_Drone@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_Cargo_Ship_Turret@@6B@
CONST	SEGMENT
??_7JMG_CMTB_Cargo_Ship_Turret@@6B@ DD FLAT:??_R4JMG_CMTB_Cargo_Ship_Turret@@6B@ ; JMG_CMTB_Cargo_Ship_Turret::`vftable'
	DD	FLAT:??_EJMG_CMTB_Cargo_Ship_Turret@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_Cargo_Ship_Script@@6B@
CONST	SEGMENT
??_7JMG_CMTB_Cargo_Ship_Script@@6B@ DD FLAT:??_R4JMG_CMTB_Cargo_Ship_Script@@6B@ ; JMG_CMTB_Cargo_Ship_Script::`vftable'
	DD	FLAT:??_EJMG_CMTB_Cargo_Ship_Script@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_Powerup_Script@@6B@
CONST	SEGMENT
??_7JMG_CMTB_Powerup_Script@@6B@ DD FLAT:??_R4JMG_CMTB_Powerup_Script@@6B@ ; JMG_CMTB_Powerup_Script::`vftable'
	DD	FLAT:??_EJMG_CMTB_Powerup_Script@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_Ship_Super_Weapon@@6B@
CONST	SEGMENT
??_7JMG_CMTB_Ship_Super_Weapon@@6B@ DD FLAT:??_R4JMG_CMTB_Ship_Super_Weapon@@6B@ ; JMG_CMTB_Ship_Super_Weapon::`vftable'
	DD	FLAT:??_EJMG_CMTB_Ship_Super_Weapon@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_Ship_Super_Weapon@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_CMTB_Ship_Super_Weapon@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_The_Moon_Script@@6B@
CONST	SEGMENT
??_7JMG_CMTB_The_Moon_Script@@6B@ DD FLAT:??_R4JMG_CMTB_The_Moon_Script@@6B@ ; JMG_CMTB_The_Moon_Script::`vftable'
	DD	FLAT:??_EJMG_CMTB_The_Moon_Script@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_Motion_Mine@@6B@
CONST	SEGMENT
??_7JMG_CMTB_Motion_Mine@@6B@ DD FLAT:??_R4JMG_CMTB_Motion_Mine@@6B@ ; JMG_CMTB_Motion_Mine::`vftable'
	DD	FLAT:??_EJMG_CMTB_Motion_Mine@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_Renegade_Code@@6B@
CONST	SEGMENT
??_7JMG_CMTB_Renegade_Code@@6B@ DD FLAT:??_R4JMG_CMTB_Renegade_Code@@6B@ ; JMG_CMTB_Renegade_Code::`vftable'
	DD	FLAT:??_EJMG_CMTB_Renegade_Code@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_Renegade_Code@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@JMG_CMTB_Renegade_Code@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_Fake_Player_Attach_Script@@6B@
CONST	SEGMENT
??_7JMG_CMTB_Fake_Player_Attach_Script@@6B@ DD FLAT:??_R4JMG_CMTB_Fake_Player_Attach_Script@@6B@ ; JMG_CMTB_Fake_Player_Attach_Script::`vftable'
	DD	FLAT:??_EJMG_CMTB_Fake_Player_Attach_Script@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_Fake_Player_Attach_Script@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@JMG_CMTB_Fake_Player_Attach_Script@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_CMTB_Fake_Player_Attach_Script@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_Arcade_Machine@@6B@
CONST	SEGMENT
??_7JMG_CMTB_Arcade_Machine@@6B@ DD FLAT:??_R4JMG_CMTB_Arcade_Machine@@6B@ ; JMG_CMTB_Arcade_Machine::`vftable'
	DD	FLAT:??_EJMG_CMTB_Arcade_Machine@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_Arcade_Machine@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@JMG_CMTB_Arcade_Machine@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_Spectator_Object@@6B@
CONST	SEGMENT
??_7JMG_CMTB_Spectator_Object@@6B@ DD FLAT:??_R4JMG_CMTB_Spectator_Object@@6B@ ; JMG_CMTB_Spectator_Object::`vftable'
	DD	FLAT:??_EJMG_CMTB_Spectator_Object@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_Spectator_Object@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@JMG_CMTB_Spectator_Object@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_CMTB_Spectator_Object@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_Zone_Realign_Enter@@6B@
CONST	SEGMENT
??_7JMG_CMTB_Zone_Realign_Enter@@6B@ DD FLAT:??_R4JMG_CMTB_Zone_Realign_Enter@@6B@ ; JMG_CMTB_Zone_Realign_Enter::`vftable'
	DD	FLAT:??_EJMG_CMTB_Zone_Realign_Enter@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@JMG_CMTB_Zone_Realign_Enter@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_Comet_Script@@6B@
CONST	SEGMENT
??_7JMG_CMTB_Comet_Script@@6B@ DD FLAT:??_R4JMG_CMTB_Comet_Script@@6B@ ; JMG_CMTB_Comet_Script::`vftable'
	DD	FLAT:??_EJMG_CMTB_Comet_Script@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_Comet_Script@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@JMG_CMTB_Comet_Script@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@JMG_CMTB_Comet_Script@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_Ship_Control_Script@@6B@
CONST	SEGMENT
??_7JMG_CMTB_Ship_Control_Script@@6B@ DD FLAT:??_R4JMG_CMTB_Ship_Control_Script@@6B@ ; JMG_CMTB_Ship_Control_Script::`vftable'
	DD	FLAT:??_EJMG_CMTB_Ship_Control_Script@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_UFO_Random_Fire_Control@@6B@
CONST	SEGMENT
??_7JMG_CMTB_UFO_Random_Fire_Control@@6B@ DD FLAT:??_R4JMG_CMTB_UFO_Random_Fire_Control@@6B@ ; JMG_CMTB_UFO_Random_Fire_Control::`vftable'
	DD	FLAT:??_EJMG_CMTB_UFO_Random_Fire_Control@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JMG_CMTB_Main_Game_Control@@6B@
CONST	SEGMENT
??_7JMG_CMTB_Main_Game_Control@@6B@ DD FLAT:??_R4JMG_CMTB_Main_Game_Control@@6B@ ; JMG_CMTB_Main_Game_Control::`vftable'
	DD	FLAT:??_EJMG_CMTB_Main_Game_Control@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_C@_04OHJIHAFH@None?$AA@
CONST	SEGMENT
??_C@_04OHJIHAFH@None?$AA@ DB 'None', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05HBJPNAAK@Blamo?$AA@
CONST	SEGMENT
??_C@_05HBJPNAAK@Blamo?$AA@ DB 'Blamo', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@IGIBBGO@RenCometBustersGameObjects?3?3Clea@
CONST	SEGMENT
??_C@_0CM@IGIBBGO@RenCometBustersGameObjects?3?3Clea@ DB 'RenCometBusters'
	DB	'GameObjects::ClearAllObjects', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FNBPLBFG@Explosion_Drone?$AA@
CONST	SEGMENT
??_C@_0BA@FNBPLBFG@Explosion_Drone?$AA@ DB 'Explosion_Drone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04CGFJFPFD@none?$AA@
CONST	SEGMENT
??_C@_04CGFJFPFD@none?$AA@ DB 'none', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
CONST	SEGMENT
??_C@_0M@IPKOBAPD@BlamoKiller?$AA@ DB 'BlamoKiller', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CAPOKMCA@msg?5already?5in?5list?$CB?$AA@
CONST	SEGMENT
??_C@_0BF@CAPOKMCA@msg?5already?5in?5list?$CB?$AA@ DB 'msg already in lis'
	DB	't!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@LOKEAPHJ@RenCometBustersGameObjects?3?3oper@
CONST	SEGMENT
??_C@_0CI@LOKEAPHJ@RenCometBustersGameObjects?3?3oper@ DB 'RenCometBuster'
	DB	'sGameObjects::operator +=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@LLNCPLBC@RenCometBustersGameObjects?3?3?$HORen@
CONST	SEGMENT
??_C@_0DI@LLNCPLBC@RenCometBustersGameObjects?3?3?$HORen@ DB 'RenCometBus'
	DB	'tersGameObjects::~RenCometBustersGameObjects', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@JGAHDHJ@Server?5Record?3?5?$CFs?5has?5played?5Ren@
CONST	SEGMENT
??_C@_0FG@JGAHDHJ@Server?5Record?3?5?$CFs?5has?5played?5Ren@ DB 'Server R'
	DB	'ecord: %s has played Renegade Comet Busters for %.0lf minutes'
	DB	' on this server.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@IKOELIKK@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@
CONST	SEGMENT
??_C@_0EF@IKOELIKK@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@ DB 'Serv'
	DB	'er Record: %s has played %lu levels with a team not using per'
	DB	'ks.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@KDCCDDHB@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@
CONST	SEGMENT
??_C@_0EB@KDCCDDHB@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@ DB 'Serv'
	DB	'er Record: %s has played %lu levels with a team using perks.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@BEMCOBMI@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@
CONST	SEGMENT
??_C@_0ED@BEMCOBMI@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@ DB 'Serv'
	DB	'er Record: %s has played %lu levels without special abilities'
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@HMKFKMDK@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@
CONST	SEGMENT
??_C@_0EA@HMKFKMDK@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@ DB 'Serv'
	DB	'er Record: %s has played %lu levels with special abilities.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@BNPLGNGL@Server?5Record?3?5?$CFs?5has?5acquired?5a@
CONST	SEGMENT
??_C@_0DE@BNPLGNGL@Server?5Record?3?5?$CFs?5has?5acquired?5a@ DB 'Server '
	DB	'Record: %s has acquired a team score of %lu.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FM@JFAIJNJM@Server?5Record?3?5?$CFs?5has?5made?5it?5to@
CONST	SEGMENT
??_C@_0FM@JFAIJNJM@Server?5Record?3?5?$CFs?5has?5made?5it?5to@ DB 'Server'
	DB	' Record: %s has made it to level %lu with teamwork and withou'
	DB	't any special abilities.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@EJAOIFKK@Server?5Record?3?5?$CFs?5has?5made?5it?5to@
CONST	SEGMENT
??_C@_0EK@EJAOIFKK@Server?5Record?3?5?$CFs?5has?5made?5it?5to@ DB 'Server'
	DB	' Record: %s has made it to level %lu without any special abil'
	DB	'ities.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@LKOPDGAN@Server?5Record?3?5?$CFs?5has?5acquired?5a@
CONST	SEGMENT
??_C@_0FC@LKOPDGAN@Server?5Record?3?5?$CFs?5has?5acquired?5a@ DB 'Server '
	DB	'Record: %s has acquired a team score of %lu without any speci'
	DB	'al abilities.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@HJAMHEGP@Server?5Record?3?5?$CFs?5has?5gained?5a?5t@
CONST	SEGMENT
??_C@_0FB@HJAMHEGP@Server?5Record?3?5?$CFs?5has?5gained?5a?5t@ DB 'Server'
	DB	' Record: %s has gained a total score of %lu without any speci'
	DB	'al abilities.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@HFEPMBHP@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
CONST	SEGMENT
??_C@_0DM@HFEPMBHP@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ DB 'Serv'
	DB	'er Record: %s has acquired %lu weapon upgrade powerups.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@DMKGKKDP@Server?5Record?3?5?$CFs?5has?5used?5the?5d@
CONST	SEGMENT
??_C@_0DK@DMKGKKDP@Server?5Record?3?5?$CFs?5has?5used?5the?5d@ DB 'Server'
	DB	' Record: %s has used the disrupter for %lu minutes.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@GLCLBJGE@Server?5Record?3?5?$CFs?5has?5used?5the?5d@
CONST	SEGMENT
??_C@_0DM@GLCLBJGE@Server?5Record?3?5?$CFs?5has?5used?5the?5d@ DB 'Server'
	DB	' Record: %s has used the disrupter for %.0lf minutes.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@DEKFDIMD@Server?5Record?3?5?$CFs?5has?5used?5?$CFlu?5D@
CONST	SEGMENT
??_C@_0EA@DEKFDIMD@Server?5Record?3?5?$CFs?5has?5used?5?$CFlu?5D@ DB 'Ser'
	DB	'ver Record: %s has used %lu Drones Swarm Transmission Codes.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@EMELICEB@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
CONST	SEGMENT
??_C@_0EE@EMELICEB@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ DB 'Serv'
	DB	'er Record: %s has acquired %lu Drones Swarm Transmission Code'
	DB	's.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@BHEIBAME@Server?5Record?3?5?$CFs?5jumped?5out?5of?5@
CONST	SEGMENT
??_C@_0DC@BHEIBAME@Server?5Record?3?5?$CFs?5jumped?5out?5of?5@ DB 'Server'
	DB	' Record: %s jumped out of danger %lu times.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@HIMLHNHP@Server?5Record?3?5?$CFs?5has?5destroyed?5@
CONST	SEGMENT
??_C@_0EG@HIMLHNHP@Server?5Record?3?5?$CFs?5has?5destroyed?5@ DB 'Server '
	DB	'Record: %s has destroyed %lu objects with Galatic Cargo Ships'
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@PDJFJLGA@Server?5Record?3?5?$CFs?5has?5scored?5?$CFlu@
CONST	SEGMENT
??_C@_0EL@PDJFJLGA@Server?5Record?3?5?$CFs?5has?5scored?5?$CFlu@ DB 'Serv'
	DB	'er Record: %s has scored %lu points by calling in Galatic Car'
	DB	'go Ships.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@KHHPHFGD@Server?5Record?3?5?$CFs?5has?5ran?5out?5of@
CONST	SEGMENT
??_C@_0DC@KHHPHFGD@Server?5Record?3?5?$CFs?5has?5ran?5out?5of@ DB 'Server'
	DB	' Record: %s has ran out of power %lu times.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@DMFGBHAH@Server?5Record?3?5?$CFs?5has?5raised?5the@
CONST	SEGMENT
??_C@_0DF@DMFGBHAH@Server?5Record?3?5?$CFs?5has?5raised?5the@ DB 'Server '
	DB	'Record: %s has raised their shield %lu times.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@JPAFHEPO@Server?5Record?3?5?$CFs?5has?5spent?5?$CF?40l@
CONST	SEGMENT
??_C@_0DL@JPAFHEPO@Server?5Record?3?5?$CFs?5has?5spent?5?$CF?40l@ DB 'Ser'
	DB	'ver Record: %s has spent %.0lf minutes with shields up.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@ECHLBDIE@Server?5Record?3?5?$CFs?5has?5cloaked?5?$CFl@
CONST	SEGMENT
??_C@_0CJ@ECHLBDIE@Server?5Record?3?5?$CFs?5has?5cloaked?5?$CFl@ DB 'Serv'
	DB	'er Record: %s has cloaked %lu times.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@OEPBIMNK@Server?5Record?3?5?$CFs?5has?5spent?5?$CF?40l@
CONST	SEGMENT
??_C@_0DD@OEPBIMNK@Server?5Record?3?5?$CFs?5has?5spent?5?$CF?40l@ DB 'Ser'
	DB	'ver Record: %s has spent %.0lf minutes cloaked.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@MOLBNNLO@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
CONST	SEGMENT
??_C@_0DJ@MOLBNNLO@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ DB 'Serv'
	DB	'er Record: %s has acquired %lu hyperspace recharges.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@BPINKGDI@Server?5Record?3?5?$CFs?5has?5scored?5?$CFlu@
CONST	SEGMENT
??_C@_0EF@BPINKGDI@Server?5Record?3?5?$CFs?5has?5scored?5?$CFlu@ DB 'Serv'
	DB	'er Record: %s has scored %lu points from double points poweru'
	DB	'ps.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@CECKDPDK@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
CONST	SEGMENT
??_C@_0DL@CECKDPDK@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ DB 'Serv'
	DB	'er Record: %s has acquired %lu double points powerups.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@HNGFLFDI@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
CONST	SEGMENT
??_C@_0DJ@HNGFLFDI@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ DB 'Serv'
	DB	'er Record: %s has acquired %lu power regen powerups.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NCDHEIBB@Server?5Record?3?5?$CFs?5has?5scored?5?$CFlu@
CONST	SEGMENT
??_C@_0DF@NCDHEIBB@Server?5Record?3?5?$CFs?5has?5scored?5?$CFlu@ DB 'Serv'
	DB	'er Record: %s has scored %lu points with Drones.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@MMOEEEGC@Server?5Record?3?5?$CFs?5has?5destroyed?5@
CONST	SEGMENT
??_C@_0CM@MMOEEEGC@Server?5Record?3?5?$CFs?5has?5destroyed?5@ DB 'Server '
	DB	'Record: %s has destroyed %lu Drones.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@IDKKONAG@Server?5Record?3?5?$CFs?5has?5destroyed?5@
CONST	SEGMENT
??_C@_0DJ@IDKKONAG@Server?5Record?3?5?$CFs?5has?5destroyed?5@ DB 'Server '
	DB	'Record: %s has destroyed %lu objects with Drones.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@HJPPIPBM@Server?5Record?3?5?$CFs?5has?5launched?5?$CF@
CONST	SEGMENT
??_C@_0CL@HJPPIPBM@Server?5Record?3?5?$CFs?5has?5launched?5?$CF@ DB 'Serv'
	DB	'er Record: %s has launched %lu Drones.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@BEEAOLM@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
CONST	SEGMENT
??_C@_0CL@BEEAOLM@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ DB 'Serve'
	DB	'r Record: %s has acquired %lu Drones.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@MDDOEMBF@Server?5Record?3?5?$CFs?5has?5?$CFlu?5points@
CONST	SEGMENT
??_C@_0DA@MDDOEMBF@Server?5Record?3?5?$CFs?5has?5?$CFlu?5points@ DB 'Serv'
	DB	'er Record: %s has %lu points from powerups.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@DHJHFPLK@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
CONST	SEGMENT
??_C@_0DE@DHJHFPLK@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ DB 'Serv'
	DB	'er Record: %s has acquired %lu points powerups.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NGAPCIJD@Server?5Record?3?5?$CFs?5has?5deployed?5?$CF@
CONST	SEGMENT
??_C@_0DA@NGAPCIJD@Server?5Record?3?5?$CFs?5has?5deployed?5?$CF@ DB 'Serv'
	DB	'er Record: %s has deployed %lu SOS Beacons.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@IIOINMLI@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
CONST	SEGMENT
??_C@_0DI@IIOINMLI@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ DB 'Serv'
	DB	'er Record: %s has acquired %lu extra life powerups.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@LODGFIOM@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
CONST	SEGMENT
??_C@_0DI@LODGFIOM@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ DB 'Serv'
	DB	'er Record: %s has acquired %lu power cell powerups.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@LFOHENLA@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
CONST	SEGMENT
??_C@_0DI@LFOHENLA@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ DB 'Serv'
	DB	'er Record: %s has acquired %lu SOS Beacon powerups.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@CIGOPGGB@Server?5Record?3?5?$CFs?5has?5rammed?5?$CFlu@
CONST	SEGMENT
??_C@_0CK@CIGOPGGB@Server?5Record?3?5?$CFs?5has?5rammed?5?$CFlu@ DB 'Serv'
	DB	'er Record: %s has rammed %lu objects.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@DCAKIMBD@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
CONST	SEGMENT
??_C@_0DA@DCAKIMBD@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ DB 'Serv'
	DB	'er Record: %s has acquired %lu extra lives.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@FIFDMKKA@Server?5Record?3?5?$CFs?5has?5destroyed?5@
CONST	SEGMENT
??_C@_0DB@FIFDMKKA@Server?5Record?3?5?$CFs?5has?5destroyed?5@ DB 'Server '
	DB	'Record: %s has destroyed %lu cargo ships.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@DNEBFNGH@Server?5Record?3?5?$CFs?5has?5received?5?$CF@
CONST	SEGMENT
??_C@_0DN@DNEBFNGH@Server?5Record?3?5?$CFs?5has?5received?5?$CF@ DB 'Serv'
	DB	'er Record: %s has received %lu lives from other players.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@KKJLFLDK@Server?5Record?3?5?$CFs?5has?5given?5?$CFlu?5@
CONST	SEGMENT
??_C@_0DI@KKJLFLDK@Server?5Record?3?5?$CFs?5has?5given?5?$CFlu?5@ DB 'Ser'
	DB	'ver Record: %s has given %lu lives to other players.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@LGKHNOIO@Server?5Record?3?5?$CFs?5has?5made?5it?5to@
CONST	SEGMENT
??_C@_0DN@LGKHNOIO@Server?5Record?3?5?$CFs?5has?5made?5it?5to@ DB 'Server'
	DB	' Record: %s has made it to level %lu through teamwork.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@LENFCILH@Server?5Record?3?5?$CFs?5has?5fired?5a?5to@
CONST	SEGMENT
??_C@_0DD@LENFCILH@Server?5Record?3?5?$CFs?5has?5fired?5a?5to@ DB 'Server'
	DB	' Record: %s has fired a total of %lu rounds.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@OBKLLKEM@Server?5Record?3?5?$CFs?5has?5used?5?$CFlu?5H@
CONST	SEGMENT
??_C@_0DK@OBKLLKEM@Server?5Record?3?5?$CFs?5has?5used?5?$CFlu?5H@ DB 'Ser'
	DB	'ver Record: %s has used %lu Highly Explosive Warheads.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@EFEOBEBH@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
CONST	SEGMENT
??_C@_0EG@EFEOBEBH@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@ DB 'Serv'
	DB	'er Record: %s has acquired %lu Highly Explosive Warhead power'
	DB	'ups.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@EEBOLIKG@Server?5Record?3?5?$CFs?5has?5destroyed?5@
CONST	SEGMENT
??_C@_0DC@EEBOLIKG@Server?5Record?3?5?$CFs?5has?5destroyed?5@ DB 'Server '
	DB	'Record: %s has destroyed %lu comets total.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@KPAFONBF@Server?5Record?3?5?$CFs?5has?5made?5it?5to@
CONST	SEGMENT
??_C@_0EG@KPAFONBF@Server?5Record?3?5?$CFs?5has?5made?5it?5to@ DB 'Server'
	DB	' Record: %s has made it to level %lu in Renegade Comet Buster'
	DB	's.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@IEKCIDFK@Server?5Record?3?5?$CFs?5has?5scored?5a?5t@
CONST	SEGMENT
??_C@_0FD@IEKCIDFK@Server?5Record?3?5?$CFs?5has?5scored?5a?5t@ DB 'Server'
	DB	' Record: %s has scored a total of %lu points playing Renegade'
	DB	' Comet Busters.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FK@IMFOLIBD@Server?5Record?3?5?$CFs?5has?5scored?5?$CFlu@
CONST	SEGMENT
??_C@_0FK@IMFOLIBD@Server?5Record?3?5?$CFs?5has?5scored?5?$CFlu@ DB 'Serv'
	DB	'er Record: %s has scored %lu points playing Renegade Comet Bu'
	DB	'sters in a single round.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@HIGGHANH@Server?5Record?3?5?$CFs?5has?5killed?5?$CFlu@
CONST	SEGMENT
??_C@_0DA@HIGGHANH@Server?5Record?3?5?$CFs?5has?5killed?5?$CFlu@ DB 'Serv'
	DB	'er Record: %s has killed %lu other players.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@DFLDBPJK@Server?5Record?3?5?$CFs?5has?5destroyed?5@
CONST	SEGMENT
??_C@_0CL@DFLDBPJK@Server?5Record?3?5?$CFs?5has?5destroyed?5@ DB 'Server '
	DB	'Record: %s has destroyed %lu Mines.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@HJEFGBEE@Server?5Record?3?5?$CFs?5has?5destroyed?5@
CONST	SEGMENT
??_C@_0CK@HJEFGBEE@Server?5Record?3?5?$CFs?5has?5destroyed?5@ DB 'Server '
	DB	'Record: %s has destroyed %lu UFOs.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@GAPAHGBJ@Server?5Record?3?5?$CFs?5has?5destroyed?5@
CONST	SEGMENT
??_C@_0DE@GAPAHGBJ@Server?5Record?3?5?$CFs?5has?5destroyed?5@ DB 'Server '
	DB	'Record: %s has destroyed the moon %lu times.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@HHMIAPLD@Server?5Record?3?5?$CFs?5has?5destroyed?5@
CONST	SEGMENT
??_C@_0DB@HHMIAPLD@Server?5Record?3?5?$CFs?5has?5destroyed?5@ DB 'Server '
	DB	'Record: %s has destroyed %lu huge comets.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@OPABANCK@Server?5Record?3?5?$CFs?5has?5destroyed?5@
CONST	SEGMENT
??_C@_0DC@OPABANCK@Server?5Record?3?5?$CFs?5has?5destroyed?5@ DB 'Server '
	DB	'Record: %s has destroyed %lu large comets.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@CHCKPFGH@Server?5Record?3?5?$CFs?5has?5destroyed?5@
CONST	SEGMENT
??_C@_0DD@CHCKPFGH@Server?5Record?3?5?$CFs?5has?5destroyed?5@ DB 'Server '
	DB	'Record: %s has destroyed %lu medium comets.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@OBCPKPMJ@Server?5Record?3?5?$CFs?5has?5destroyed?5@
CONST	SEGMENT
??_C@_0DC@OBCPKPMJ@Server?5Record?3?5?$CFs?5has?5destroyed?5@ DB 'Server '
	DB	'Record: %s has destroyed %lu small comets.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@JBCNBGOG@Server?5Record?3?5?$CFs?5has?5lost?5?$CFlu?5s@
CONST	SEGMENT
??_C@_0EF@JBCNBGOG@Server?5Record?3?5?$CFs?5has?5lost?5?$CFlu?5s@ DB 'Ser'
	DB	'ver Record: %s has lost %lu ships playing Renegade Comet Bust'
	DB	'ers.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@DPHHABPP@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@
CONST	SEGMENT
??_C@_0ED@DPHHABPP@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@ DB 'Serv'
	DB	'er Record: %s has played %lu rounds of Renegade Comet Busters'
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BAI@DHKPCABK@?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5@
CONST	SEGMENT
??_C@_0BAI@DHKPCABK@?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5@ DB '%'
	DB	'lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %l'
	DB	'u %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu'
	DB	' %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu '
	DB	'%lu %lu %lu %lu %lu %lu %lu %lu %d %d %lu %lu %lu %lu %lu %d '
	DB	'%d %d %d %d %d %lu', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@GGEPLGPC@msg?5MutantAssaultHighScoreSystem@
CONST	SEGMENT
??_C@_0EI@GGEPLGPC@msg?5MutantAssaultHighScoreSystem@ DB 'msg MutantAssau'
	DB	'ltHighScoreSystem::LoadData ERROR: Length is less than 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@MONBMBLL@?$CFsBetaCMBTPlayerRecordsDoomsday?4@
CONST	SEGMENT
??_C@_0CE@MONBMBLL@?$CFsBetaCMBTPlayerRecordsDoomsday?4@ DB '%sBetaCMBTPl'
	DB	'ayerRecordsDoomsday.Rp2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@OCKBLKAL@?$CFsBetaCMBTPlayerRecordsHard?4Rp2?$AA@
CONST	SEGMENT
??_C@_0CA@OCKBLKAL@?$CFsBetaCMBTPlayerRecordsHard?4Rp2?$AA@ DB '%sBetaCMB'
	DB	'TPlayerRecordsHard.Rp2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DJPBCPEL@?$CFsBetaCMBTPlayerRecords?4Rp2?$AA@
CONST	SEGMENT
??_C@_0BM@DJPBCPEL@?$CFsBetaCMBTPlayerRecords?4Rp2?$AA@ DB '%sBetaCMBTPla'
	DB	'yerRecords.Rp2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KNBEHKN@?$CFsBetaCMBTPlayerRecordsEasy?4Rp2?$AA@
CONST	SEGMENT
??_C@_0CA@KNBEHKN@?$CFsBetaCMBTPlayerRecordsEasy?4Rp2?$AA@ DB '%sBetaCMBT'
	DB	'PlayerRecordsEasy.Rp2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BAK@GMEIJNKP@?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5@
CONST	SEGMENT
??_C@_0BAK@GMEIJNKP@?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5@ DB '%'
	DB	'lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %l'
	DB	'u %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu'
	DB	' %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu '
	DB	'%lu %lu %lu %lu %lu %lu %lu %lu %d %d %lu %lu %lu %lu %lu %d '
	DB	'%d %d %d %d %d %lu 0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0IG@KIAFBIAN@msg?5RenCometBustersScoreSystem?5E@
CONST	SEGMENT
??_C@_0IG@KIAFBIAN@msg?5RenCometBustersScoreSystem?5E@ DB 'msg RenCometBu'
	DB	'stersScoreSystem ERROR: Could not open save files %sBetaCMBTP'
	DB	'layerRecords.tmp and %sCMBTPlayerRecords.txt for writting!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@ODLIIIGC@?$CFsBetaCMBTPlayerRecordsDoomsday?4@
CONST	SEGMENT
??_C@_0CE@ODLIIIGC@?$CFsBetaCMBTPlayerRecordsDoomsday?4@ DB '%sBetaCMBTPl'
	DB	'ayerRecordsDoomsday.txt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MPMIPDNC@?$CFsBetaCMBTPlayerRecordsHard?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@MPMIPDNC@?$CFsBetaCMBTPlayerRecordsHard?4txt?$AA@ DB '%sBetaCMB'
	DB	'TPlayerRecordsHard.txt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BEJIGGJC@?$CFsBetaCMBTPlayerRecords?4txt?$AA@
CONST	SEGMENT
??_C@_0BM@BEJIGGJC@?$CFsBetaCMBTPlayerRecords?4txt?$AA@ DB '%sBetaCMBTPla'
	DB	'yerRecords.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CHLIAOHE@?$CFsBetaCMBTPlayerRecordsEasy?4txt?$AA@
CONST	SEGMENT
??_C@_0CA@CHLIAOHE@?$CFsBetaCMBTPlayerRecordsEasy?4txt?$AA@ DB '%sBetaCMB'
	DB	'TPlayerRecordsEasy.txt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GKBJMCAN@?$CFsBetaCMBTPlayerRecords?4tmp?$AA@
CONST	SEGMENT
??_C@_0BM@GKBJMCAN@?$CFsBetaCMBTPlayerRecords?4tmp?$AA@ DB '%sBetaCMBTPla'
	DB	'yerRecords.tmp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07MOMFEGGF@?$CFsSave?2?$AA@
CONST	SEGMENT
??_C@_07MOMFEGGF@?$CFsSave?2?$AA@ DB '%sSave\', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@HFCGEOCE@RenCometBustersScoreSystem?3?3Clea@
CONST	SEGMENT
??_C@_0CE@HFCGEOCE@RenCometBustersScoreSystem?3?3Clea@ DB 'RenCometBuster'
	DB	'sScoreSystem::Cleanup', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@NJPEEOFG@RenCometBustersScoreSystem?3?3Get_@
CONST	SEGMENT
??_C@_0DK@NJPEEOFG@RenCometBustersScoreSystem?3?3Get_@ DB 'RenCometBuster'
	DB	'sScoreSystem::Get_Current_Player_Score_Node', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@DMAHHIGM@RenCometBustersScoreSystem?3?3Find@
CONST	SEGMENT
??_C@_0DL@DMAHHIGM@RenCometBustersScoreSystem?3?3Find@ DB 'RenCometBuster'
	DB	'sScoreSystem::FindOrAddPlayerMAHighScoreNode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@ICIICMMC@RenCometBustersScoreSystem?3?3AddP@
CONST	SEGMENT
??_C@_0DC@ICIICMMC@RenCometBustersScoreSystem?3?3AddP@ DB 'RenCometBuster'
	DB	'sScoreSystem::AddPlayerToInGameList', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01LOCGONAA@?$AA?$AA@
CONST	SEGMENT
??_C@_01LOCGONAA@?$AA?$AA@ DB 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CBFNJGCC@Drone?5Swarm?5Ability?$AA@
CONST	SEGMENT
??_C@_0BE@CBFNJGCC@Drone?5Swarm?5Ability?$AA@ DB 'Drone Swarm Ability', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@HNDJOALJ@You?5have?5unlocked?5the?5Drone?5Swar@
CONST	SEGMENT
??_C@_0CL@HNDJOALJ@You?5have?5unlocked?5the?5Drone?5Swar@ DB 'You have un'
	DB	'locked the Drone Swarm ability.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JDPOMMKN@SOS?5Beacon?5Ability?$AA@
CONST	SEGMENT
??_C@_0BD@JDPOMMKN@SOS?5Beacon?5Ability?$AA@ DB 'SOS Beacon Ability', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@BLIBFLCC@You?5have?5unlocked?5the?5SOS?5Beacon@
CONST	SEGMENT
??_C@_0CK@BLIBFLCC@You?5have?5unlocked?5the?5SOS?5Beacon@ DB 'You have un'
	DB	'locked the SOS Beacon ability.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@CEOGKNAL@High?5Explosive?5Warhead?5Ability?$AA@
CONST	SEGMENT
??_C@_0BP@CEOGKNAL@High?5Explosive?5Warhead?5Ability?$AA@ DB 'High Explos'
	DB	'ive Warhead Ability', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@PHEPPJDD@You?5have?5unlocked?5the?5High?5Explo@
CONST	SEGMENT
??_C@_0DG@PHEPPJDD@You?5have?5unlocked?5the?5High?5Explo@ DB 'You have un'
	DB	'locked the High Explosive Warhead ability.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CAKONFBG@Drone?5Ability?$AA@
CONST	SEGMENT
??_C@_0O@CAKONFBG@Drone?5Ability?$AA@ DB 'Drone Ability', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MKMOODP@You?5have?5unlocked?5the?5Drone?5abil@
CONST	SEGMENT
??_C@_0CF@MKMOODP@You?5have?5unlocked?5the?5Drone?5abil@ DB 'You have unl'
	DB	'ocked the Drone ability.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HEKPELOB@Weapons?5Upgrade?5Ability?$AA@
CONST	SEGMENT
??_C@_0BI@HEKPELOB@Weapons?5Upgrade?5Ability?$AA@ DB 'Weapons Upgrade Abi'
	DB	'lity', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@PCCOOCAO@You?5have?5unlocked?5the?5Weapons?5Up@
CONST	SEGMENT
??_C@_0CP@PCCOOCAO@You?5have?5unlocked?5the?5Weapons?5Up@ DB 'You have un'
	DB	'locked the Weapons Upgrade ability.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LEIKNMKK@Rapid?5Energy?5Regen?5Ability?$AA@
CONST	SEGMENT
??_C@_0BL@LEIKNMKK@Rapid?5Energy?5Regen?5Ability?$AA@ DB 'Rapid Energy Re'
	DB	'gen Ability', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@PHKOBBO@You?5have?5unlocked?5the?5Rapid?5Ener@
CONST	SEGMENT
??_C@_0DC@PHKOBBO@You?5have?5unlocked?5the?5Rapid?5Ener@ DB 'You have unl'
	DB	'ocked the Rapid Energy Regen ability.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NCJOLDEP@Double?5Points?5Ability?$AA@
CONST	SEGMENT
??_C@_0BG@NCJOLDEP@Double?5Points?5Ability?$AA@ DB 'Double Points Ability'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@DFDDAGCN@You?5have?5unlocked?5the?5Double?5Poi@
CONST	SEGMENT
??_C@_0CN@DFDDAGCN@You?5have?5unlocked?5the?5Double?5Poi@ DB 'You have un'
	DB	'locked the Double Points ability.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OBMFBFNP@Hyperdrive?5Ability?$AA@
CONST	SEGMENT
??_C@_0BD@OBMFBFNP@Hyperdrive?5Ability?$AA@ DB 'Hyperdrive Ability', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@KFPIHAOL@You?5have?5unlocked?5the?5Hyperdrive@
CONST	SEGMENT
??_C@_0CK@KFPIHAOL@You?5have?5unlocked?5the?5Hyperdrive@ DB 'You have unl'
	DB	'ocked the Hyperdrive ability.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PAJHKKN@Extra?5Life?5Ability?$AA@
CONST	SEGMENT
??_C@_0BD@PAJHKKN@Extra?5Life?5Ability?$AA@ DB 'Extra Life Ability', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@BLBNKMJE@You?5have?5unlocked?5the?5Extra?5Life@
CONST	SEGMENT
??_C@_0CK@BLBNKMJE@You?5have?5unlocked?5the?5Extra?5Life@ DB 'You have un'
	DB	'locked the Extra Life ability.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05GCGLAHBE@Gamer?$AA@
CONST	SEGMENT
??_C@_05GCGLAHBE@Gamer?$AA@ DB 'Gamer', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@PCMGDODH@Buying?5Floppy?5Disks?5gives?5you?5Go@
CONST	SEGMENT
??_C@_0DL@PCMGDODH@Buying?5Floppy?5Disks?5gives?5you?5Go@ DB 'Buying Flop'
	DB	'py Disks gives you Golden Floppy Disks instead.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KKMEIJFM@To?5The?5Moon?5and?5Beyond?$AA@
CONST	SEGMENT
??_C@_0BH@KKMEIJFM@To?5The?5Moon?5and?5Beyond?$AA@ DB 'To The Moon and Be'
	DB	'yond', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@DNKDMCLF@Your?5reward?5for?5defending?5Earth?$CB@
CONST	SEGMENT
??_C@_0CB@DNKDMCLF@Your?5reward?5for?5defending?5Earth?$CB@ DB 'Your rewa'
	DB	'rd for defending Earth!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03HPADHAHE@N?1A?$AA@
CONST	SEGMENT
??_C@_03HPADHAHE@N?1A?$AA@ DB 'N/A', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CPG@HLGMAKDB@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd@
CONST	SEGMENT
??_C@_0CPG@HLGMAKDB@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd@ DB '%'
	DB	'd %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d'
	DB	' %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d '
	DB	'%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %'
	DB	'd %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d'
	DB	' %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d '
	DB	'%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %'
	DB	'd %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d'
	DB	' %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d '
	DB	'%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %'
	DB	'd %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d'
	DB	' %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d '
	DB	'%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %'
	DB	'd %d %d %d %d %d %d %d 0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@BIBLNGIO@msg?5PlayerPerksNodeControlSystem@
CONST	SEGMENT
??_C@_0EI@BIBLNGIO@msg?5PlayerPerksNodeControlSystem@ DB 'msg PlayerPerks'
	DB	'NodeControlSystem::LoadData ERROR: Length is less than 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06DKEDAPL@?$CFs?6?$CFs?6?$AA@
CONST	SEGMENT
??_C@_06DKEDAPL@?$CFs?6?$CFs?6?$AA@ DB '%s', 0aH, '%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07FMKHCAOI@?$CFs?$CF?42f?5?$AA@
CONST	SEGMENT
??_C@_07FMKHCAOI@?$CFs?$CF?42f?5?$AA@ DB '%s%.2f ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JJHJAHCL@?$CFsSave?2BetaRp2PlayerPerks?4txt?$AA@
CONST	SEGMENT
??_C@_0BO@JJHJAHCL@?$CFsSave?2BetaRp2PlayerPerks?4txt?$AA@ DB '%sSave\Bet'
	DB	'aRp2PlayerPerks.txt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LEBAEOPC@?$CFsSave?2BetaRp2PlayerPerks?4Rp2?$AA@
CONST	SEGMENT
??_C@_0BO@LEBAEOPC@?$CFsSave?2BetaRp2PlayerPerks?4Rp2?$AA@ DB '%sSave\Bet'
	DB	'aRp2PlayerPerks.Rp2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PCAHBOJM@?$CFs?6?$CFs?$AA@
CONST	SEGMENT
??_C@_05PCAHBOJM@?$CFs?6?$CFs?$AA@ DB '%s', 0aH, '%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HBNINGOP@?$CFs?$CFd?5?$CFd?5?$AA@
CONST	SEGMENT
??_C@_08HBNINGOP@?$CFs?$CFd?5?$CFd?5?$AA@ DB '%s%d %d ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OHPIKDLE@?$CFsSave?2BetaRp2PlayerPerks?4tmp?$AA@
CONST	SEGMENT
??_C@_0BO@OHPIKDLE@?$CFsSave?2BetaRp2PlayerPerks?4tmp?$AA@ DB '%sSave\Bet'
	DB	'aRp2PlayerPerks.tmp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06MGHPOHKI@?$CFsSave?$AA@
CONST	SEGMENT
??_C@_06MGHPOHKI@?$CFsSave?$AA@ DB '%sSave', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@CHLHOLEI@msg?5PlayerPerksNodeControlSystem@
CONST	SEGMENT
??_C@_0DH@CHLHOLEI@msg?5PlayerPerksNodeControlSystem@ DB 'msg PlayerPerks'
	DB	'NodeControlSystem ERROR: Saved blocked!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@JPAIIEAC@PlayerPerksNodeControlSystem?3?3Cl@
CONST	SEGMENT
??_C@_0CN@JPAIIEAC@PlayerPerksNodeControlSystem?3?3Cl@ DB 'PlayerPerksNod'
	DB	'eControlSystem::ClearPerksList', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LDMBNLK@sysmsg?4wav?$AA@
CONST	SEGMENT
??_C@_0L@LDMBNLK@sysmsg?4wav?$AA@ DB 'sysmsg.wav', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@CBPFPHPN@You?5have?5unlocked?5the?5?$CFs?5perk?$CB?$AA@
CONST	SEGMENT
??_C@_0BP@CBPFPHPN@You?5have?5unlocked?5the?5?$CFs?5perk?$CB?$AA@ DB 'You'
	DB	' have unlocked the %s perk!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
CONST	SEGMENT
??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ DB 'x'
	DB	00H, ':', 00H, '\', 00H, 'g', 00H, 'i', 00H, 't', 00H, 'h', 00H
	DB	'u', 00H, 'b', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'e'
	DB	00H, 'g', 00H, 'a', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'd', 00H
	DB	'r', 00H, 'a', 00H, 'g', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'd'
	DB	00H, 'e', 00H, '_', 00H, 'r', 00H, 'x', 00H, 'd', 00H, '\', 00H
	DB	's', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 's'
	DB	00H, '\', 00H, 'j', 00H, 'm', 00H, 'g', 00H, 'r', 00H, 'e', 00H
	DB	'n', 00H, 'e', 00H, 't', 00H, 'b', 00H, 'u', 00H, 's', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@
CONST	SEGMENT
??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@ DB 'x:\github\re'
	DB	'negade\dragonade_rxd\scripts\jmgrenetbuster.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@DKJNKPNM@PlayerPerksNodeControlSystem?3?3Ge@
CONST	SEGMENT
??_C@_0DA@DKJNKPNM@PlayerPerksNodeControlSystem?3?3Ge@ DB 'PlayerPerksNod'
	DB	'eControlSystem::GetPlayerPerkList', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CDHDDEAO@yo1?4wav?$AA@
CONST	SEGMENT
??_C@_07CDHDDEAO@yo1?4wav?$AA@ DB 'yo1.wav', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@MJNPAGNN@msg?5ADDAPERKTYPE?5ERROR?3?5PerkID?5?$CF@
CONST	SEGMENT
??_C@_0DN@MJNPAGNN@msg?5ADDAPERKTYPE?5ERROR?3?5PerkID?5?$CF@ DB 'msg ADDA'
	DB	'PERKTYPE ERROR: PerkID %d has already been assigned!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@JGBJBMDP@msg?5Perk?5?$CFd?8s?5Description?5is?5too@
CONST	SEGMENT
??_C@_0CH@JGBJBMDP@msg?5Perk?5?$CFd?8s?5Description?5is?5too@ DB 'msg Per'
	DB	'k %d''s Description is too long!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05KABNCBHK@?$CFd?0?$CFd?$AA@
CONST	SEGMENT
??_C@_05KABNCBHK@?$CFd?0?$CFd?$AA@ DB '%d,%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NHCMNMEH@origin?$AA@
CONST	SEGMENT
??_C@_06NHCMNMEH@origin?$AA@ DB 'origin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
CONST	SEGMENT
??_C@_0M@IDABADGB@Daves?5Arrow?$AA@ DB 'Daves Arrow', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HDDMONLA@her?$AA@
CONST	SEGMENT
??_C@_03HDDMONLA@her?$AA@ DB 'her', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GDDNCFJF@his?$AA@
CONST	SEGMENT
??_C@_03GDDNCFJF@his?$AA@ DB 'his', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MLLLIHIP@null?$AA@
CONST	SEGMENT
??_C@_04MLLLIHIP@null?$AA@ DB 'null', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7JFW_Object_Created_Hook_Base@@6B@
CONST	SEGMENT
??_7JFW_Object_Created_Hook_Base@@6B@ DD FLAT:??_R4JFW_Object_Created_Hook_Base@@6B@ ; JFW_Object_Created_Hook_Base::`vftable'
	DD	FLAT:??_EJFW_Object_Created_Hook_Base@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@JFW_Object_Created_Hook_Base@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JFW_Object_Created_Hook_Base@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7MultiKeyHookScriptImpClass@@6B@
CONST	SEGMENT
??_7MultiKeyHookScriptImpClass@@6B@ DD FLAT:??_R4MultiKeyHookScriptImpClass@@6B@ ; MultiKeyHookScriptImpClass::`vftable'
	DD	FLAT:??_EMultiKeyHookScriptImpClass@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@MultiKeyHookScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@MultiKeyHookScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@
CONST	SEGMENT
??_7?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@ DD FLAT:??_R4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`vftable'
	DD	FLAT:??_E?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAXI@Z
	DD	FLAT:?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z
	DD	FLAT:?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z
	DD	FLAT:?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z
	DD	FLAT:?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z
	DD	FLAT:?Remove_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ
	DD	FLAT:?Remove_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ
	DD	FLAT:?Remove@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPBUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z
	DD	FLAT:?Remove_All@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEXXZ
	DD	FLAT:?Insert_Before@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z
	DD	FLAT:?Insert_After@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z
	DD	FLAT:?Is_Empty@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBE_NXZ
	DD	FLAT:?Get_Count@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBEIXZ
CONST	ENDS
;	COMDAT ??_7JFW_Key_Hook_Base@@6B@
CONST	SEGMENT
??_7JFW_Key_Hook_Base@@6B@ DD FLAT:??_R4JFW_Key_Hook_Base@@6B@ ; JFW_Key_Hook_Base::`vftable'
	DD	FLAT:??_EJFW_Key_Hook_Base@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@JFW_Key_Hook_Base@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@JFW_Key_Hook_Base@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_02OLOABKKD@ID?$AA@
CONST	SEGMENT
??_C@_02OLOABKKD@ID?$AA@ DB 'ID', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7ReferencerClass@@6B@
CONST	SEGMENT
??_7ReferencerClass@@6B@ DD FLAT:??_R4ReferencerClass@@6B@ ; ReferencerClass::`vftable'
	DD	FLAT:??_EReferencerClass@@UAEPAXI@Z
	DD	FLAT:?On_Post_Load@ReferencerClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7PostLoadableClass@@6B@
CONST	SEGMENT
??_7PostLoadableClass@@6B@ DD FLAT:??_R4PostLoadableClass@@6B@ ; PostLoadableClass::`vftable'
	DD	FLAT:??_EPostLoadableClass@@UAEPAXI@Z
	DD	FLAT:?On_Post_Load@PostLoadableClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7INIClass@@6B@
CONST	SEGMENT
??_7INIClass@@6B@ DD FLAT:??_R4INIClass@@6B@		; INIClass::`vftable'
	DD	FLAT:??_EINIClass@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ DB 'f', 00H, 'a', 00H
	DB	'l', 00H, 's', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
CONST	SEGMENT
??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ DB 'x'
	DB	00H, ':', 00H, '\', 00H, 'g', 00H, 'i', 00H, 't', 00H, 'h', 00H
	DB	'u', 00H, 'b', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'e'
	DB	00H, 'g', 00H, 'a', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'd', 00H
	DB	'r', 00H, 'a', 00H, 'g', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'd'
	DB	00H, 'e', 00H, '_', 00H, 'r', 00H, 'x', 00H, 'd', 00H, '\', 00H
	DB	's', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 's'
	DB	00H, '\', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 'i', 00H, 'n', 00H
	DB	'e', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '.', 00H, 'h', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@
CONST	SEGMENT
??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@ DB 'x:\github\re'
	DB	'negade\dragonade_rxd\scripts\engine_vector.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7ThreadClass@@6B@
CONST	SEGMENT
??_7ThreadClass@@6B@ DD FLAT:??_R4ThreadClass@@6B@	; ThreadClass::`vftable'
	DD	FLAT:??_EThreadClass@@UAEPAXI@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ScriptFactory@@6B@
CONST	SEGMENT
??_7ScriptFactory@@6B@ DD FLAT:??_R4ScriptFactory@@6B@	; ScriptFactory::`vftable'
	DD	FLAT:??_EScriptFactory@@UAEPAXI@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ScriptImpClass@@6B@
CONST	SEGMENT
??_7ScriptImpClass@@6B@ DD FLAT:??_R4ScriptImpClass@@6B@ ; ScriptImpClass::`vftable'
	DD	FLAT:??_EScriptImpClass@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7ScriptClass@@6B@
CONST	SEGMENT
??_7ScriptClass@@6B@ DD FLAT:??_R4ScriptClass@@6B@	; ScriptClass::`vftable'
	DD	FLAT:??_EScriptClass@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?Owner@GameObjObserverClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7GameObjObserverClass@@6B@
CONST	SEGMENT
??_7GameObjObserverClass@@6B@ DD FLAT:??_R4GameObjObserverClass@@6B@ ; GameObjObserverClass::`vftable'
	DD	FLAT:??_EGameObjObserverClass@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?Owner@GameObjObserverClass@@UAEPAVScriptableGameObj@@XZ
CONST	ENDS
CRT$XCU	SEGMENT
_PlayerPerkSystemControl$initializer$ DD FLAT:??__EPlayerPerkSystemControl@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RenCometBustersScoreControl$initializer$ DD FLAT:??__ERenCometBustersScoreControl@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_MiniGamePlayerControlSystem$initializer$ DD FLAT:??__EMiniGamePlayerControlSystem@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RenCometBustersList$initializer$ DD FLAT:??__ERenCometBustersList@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_Create_Ship_On_Poke_Registrant$initializer$ DD FLAT:??__EJMG_Create_Ship_On_Poke_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_Advanced_Bounce_Zone_Registrant$initializer$ DD FLAT:??__EJMG_Advanced_Bounce_Zone_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_Ship_Random_Hyperspace_Registrant$initializer$ DD FLAT:??__EJMG_Ship_Random_Hyperspace_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_Random_Music_Registrant$initializer$ DD FLAT:??__EJMG_Random_Music_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_Ship_Weapon_Registrant$initializer$ DD FLAT:??__EJMG_Ship_Weapon_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_Return_Custom_When_Shot_Registrant$initializer$ DD FLAT:??__EJMG_Return_Custom_When_Shot_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_Cronie_AI_Registrant$initializer$ DD FLAT:??__EJMG_Cronie_AI_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_Kill_Self_And_Sender_On_Custom_Registrant$initializer$ DD FLAT:??__EJMG_Kill_Self_And_Sender_On_Custom_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_Ship_Shield_Control_Script_Registrant$initializer$ DD FLAT:??__EJMG_Ship_Shield_Control_Script_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant$initializer$ DD FLAT:??__EJMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_Ship_Shield_Script_Registrant$initializer$ DD FLAT:??__EJMG_Ship_Shield_Script_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_Renetbusters_Object_Registrant$initializer$ DD FLAT:??__EJMG_Renetbusters_Object_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_New_Ship_Weapon_Control_System_Registrant$initializer$ DD FLAT:??__EJMG_New_Ship_Weapon_Control_System_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_Comet_Control_Script_Registrant$initializer$ DD FLAT:??__EJMG_Comet_Control_Script_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_Attach_And_Remove_Registrant$initializer$ DD FLAT:??__EJMG_Attach_And_Remove_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_User_Auto_Enter_Ship_Registrant$initializer$ DD FLAT:??__EJMG_User_Auto_Enter_Ship_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_Apply_Damage_On_Timer_Registrant$initializer$ DD FLAT:??__EJMG_Apply_Damage_On_Timer_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_Main_Game_Control_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_Main_Game_Control_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_Ship_Control_Script_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_Ship_Control_Script_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_UFO_Random_Fire_Control_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_UFO_Random_Fire_Control_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_Comet_Script_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_Comet_Script_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_Zone_Realign_Enter_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_Zone_Realign_Enter_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_Spectator_Object_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_Spectator_Object_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_Arcade_Machine_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_Arcade_Machine_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_Fake_Player_Attach_Script_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_Fake_Player_Attach_Script_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_Renegade_Code_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_Renegade_Code_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_Motion_Mine_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_Motion_Mine_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_The_Moon_Script_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_The_Moon_Script_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_Ship_Super_Weapon_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_Ship_Super_Weapon_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_Powerup_Script_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_Powerup_Script_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_Cargo_Ship_Script_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_Cargo_Ship_Script_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_Cargo_Ship_Turret_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_Cargo_Ship_Turret_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_Player_Drone_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_Player_Drone_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_Vehicle_Face_Turret_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_Vehicle_Face_Turret_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_Poke_End_Map_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_Poke_End_Map_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_JMG_CMTB_Poke_Change_Difficulty_Registrant$initializer$ DD FLAT:??__EJMG_CMTB_Poke_Change_Difficulty_Registrant@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__Finstancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@YAXXZ
text$yd	SEGMENT
??__Finstancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@YAXXZ PROC ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::`dynamic atexit destructor for 'instancex'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?instancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@4V3@A ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::instancex
	call	??1?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ ; ObjectPoolClass<GenericSLNode,256>::~ObjectPoolClass<GenericSLNode,256>
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__Finstancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@YAXXZ ENDP ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::`dynamic atexit destructor for 'instancex''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?writeDummyPattern@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@K@Z
_TEXT	SEGMENT
_endDword$ = -12					; size = 4
_dword$ = -8						; size = 4
_this$ = -4						; size = 4
_object$ = 8						; size = 4
_pattern$ = 12						; size = 4
?writeDummyPattern@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@K@Z PROC ; ObjectPoolClass<GenericSLNode,256>::writeDummyPattern, COMDAT
; _this$ = ecx

; 1445 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1446 : #ifdef DEBUG
; 1447 : 		static_assert(sizeof(T) % 4 == 0, "Expected type size to be a multiple of 4.");
; 1448 : 		DWORD* dword = (DWORD*)&object;

	mov	eax, DWORD PTR _object$[ebp]
	mov	DWORD PTR _dword$[ebp], eax

; 1449 : 		DWORD* endDword = (DWORD*)(&object+1);

	mov	eax, DWORD PTR _object$[ebp]
	add	eax, 8
	mov	DWORD PTR _endDword$[ebp], eax

; 1450 : 		for (; dword < endDword; ++dword)

	jmp	SHORT $LN3@writeDummy
$LN2@writeDummy:
	mov	eax, DWORD PTR _dword$[ebp]
	add	eax, 4
	mov	DWORD PTR _dword$[ebp], eax
$LN3@writeDummy:
	mov	eax, DWORD PTR _dword$[ebp]
	cmp	eax, DWORD PTR _endDword$[ebp]
	jae	SHORT $LN4@writeDummy

; 1451 : 			*dword = pattern;

	mov	eax, DWORD PTR _dword$[ebp]
	mov	ecx, DWORD PTR _pattern$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN2@writeDummy
$LN4@writeDummy:

; 1452 : #endif
; 1453 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?writeDummyPattern@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@K@Z ENDP ; ObjectPoolClass<GenericSLNode,256>::writeDummyPattern
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?Free_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@@Z
_TEXT	SEGMENT
_lock$ = -8						; size = 4
_this$ = -4						; size = 4
_object$ = 8						; size = 4
?Free_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@@Z PROC ; ObjectPoolClass<GenericSLNode,256>::Free_Object_Memory, COMDAT
; _this$ = ecx

; 1436 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1437 : 		FastCriticalSectionClass::LockClass lock(ObjectPoolCS);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0LockClass@FastCriticalSectionClass@@QAE@AAV1@@Z ; FastCriticalSectionClass::LockClass::LockClass

; 1438 : 		writeDummyPattern(object, 0xEDE7E10D);

	push	-303570675				; ede7e10dH
	mov	eax, DWORD PTR _object$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeDummyPattern@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@K@Z ; ObjectPoolClass<GenericSLNode,256>::writeDummyPattern

; 1439 : 		(T*&)object = FreeListHead;

	mov	eax, DWORD PTR _object$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 1440 : 		FreeListHead = &object;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _object$[ebp]
	mov	DWORD PTR [eax], ecx

; 1441 : 		FreeObjectCount++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1442 : 	}

	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1LockClass@FastCriticalSectionClass@@QAE@XZ ; FastCriticalSectionClass::LockClass::~LockClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Free_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@@Z ENDP ; ObjectPoolClass<GenericSLNode,256>::Free_Object_Memory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?Allocate_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEPAVGenericSLNode@@XZ
_TEXT	SEGMENT
tv82 = -96						; size = 4
$T1 = -92						; size = 4
$T2 = -88						; size = 4
_object$ = -20						; size = 4
_i$3 = -16						; size = 4
_newBlockListHead$4 = -12				; size = 4
_lock$ = -8						; size = 4
_this$ = -4						; size = 4
?Allocate_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEPAVGenericSLNode@@XZ PROC ; ObjectPoolClass<GenericSLNode,256>::Allocate_Object_Memory, COMDAT
; _this$ = ecx

; 1413 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1414 : 		FastCriticalSectionClass::LockClass lock(ObjectPoolCS);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0LockClass@FastCriticalSectionClass@@QAE@AAV1@@Z ; FastCriticalSectionClass::LockClass::LockClass

; 1415 :  		if (!FreeListHead)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	$LN4@Allocate_O

; 1416 : 		{
; 1417 : 			void* newBlockListHead = (void*)((void*)new char[sizeof(void*) + sizeof(T[BLOCK_SIZE])]);

	push	OFFSET ??_C@_0EB@IOGKEECK@ObjectPoolClass?$DMclass?5GenericSLN@
	push	1417					; 00000589H
	push	OFFSET ??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN8@Allocate_O
	xor	ecx, ecx
	jne	SHORT $LN7@Allocate_O
	push	1417					; 00000589H
	push	OFFSET ??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN7@Allocate_O:
	mov	DWORD PTR tv82[ebp], 0
	jmp	SHORT $LN9@Allocate_O
$LN8@Allocate_O:
	push	2052					; 00000804H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv82[ebp], eax
$LN9@Allocate_O:
	mov	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR _newBlockListHead$4[ebp], ecx

; 1418 : 			*(void**)newBlockListHead = BlockListHead;

	mov	eax, DWORD PTR _newBlockListHead$4[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 1419 : 			BlockListHead = newBlockListHead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newBlockListHead$4[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1420 : 			FreeListHead = (T*)((intptr_t)BlockListHead + sizeof(void*));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 1421 : 			for (int i = 0; i < BLOCK_SIZE; i++)

	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN3@Allocate_O
$LN2@Allocate_O:
	mov	eax, DWORD PTR _i$3[ebp]
	add	eax, 1
	mov	DWORD PTR _i$3[ebp], eax
$LN3@Allocate_O:
	cmp	DWORD PTR _i$3[ebp], 256		; 00000100H
	jge	SHORT $LN1@Allocate_O

; 1422 : 				(T*&)FreeListHead[i] = &FreeListHead[i+1];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _i$3[ebp]
	lea	eax, DWORD PTR [ecx+edx*8+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _i$3[ebp]
	mov	DWORD PTR [edx+ecx*8], eax
	jmp	SHORT $LN2@Allocate_O
$LN1@Allocate_O:

; 1423 : 			
; 1424 : 			(T*&)FreeListHead[BLOCK_SIZE-1] = NULL;

	mov	eax, 8
	imul	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx], 0

; 1425 : 			FreeObjectCount += BLOCK_SIZE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1426 : 			TotalObjectCount += BLOCK_SIZE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
$LN4@Allocate_O:

; 1427 : 		}
; 1428 : 
; 1429 : 		T* object = FreeListHead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _object$[ebp], ecx

; 1430 : 		FreeListHead = *(T**)(FreeListHead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 1431 : 		FreeObjectCount--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1432 : 		return object;

	mov	eax, DWORD PTR _object$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1LockClass@FastCriticalSectionClass@@QAE@XZ ; FastCriticalSectionClass::LockClass::~LockClass
	mov	eax, DWORD PTR $T2[ebp]

; 1433 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Allocate_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEPAVGenericSLNode@@XZ ENDP ; ObjectPoolClass<GenericSLNode,256>::Allocate_Object_Memory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ??1?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ
_TEXT	SEGMENT
$T1 = -336						; size = 4
_nextBlock$2 = -268					; size = 4
_block$ = -264						; size = 4
_buffer$3 = -260					; size = 256
_this$ = -4						; size = 4
??1?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ PROC ; ObjectPoolClass<GenericSLNode,256>::~ObjectPoolClass<GenericSLNode,256>, COMDAT
; _this$ = ecx

; 1393 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1394 : 		// If you hit the following assert, one or more objects were not freed.
; 1395 : 		if (FreeObjectCount != TotalObjectCount)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	je	SHORT $LN3@ObjectPool

; 1396 : 		{
; 1397 : 			char buffer[256];
; 1398 : 			sprintf(buffer, "%d memory leaks found in " __FUNCTION__ "\n", TotalObjectCount - FreeObjectCount);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET ??_C@_0FF@NOANHENP@?$CFd?5memory?5leaks?5found?5in?5ObjectP@
	lea	eax, DWORD PTR _buffer$3[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1399 : 			OutputDebugStringA(buffer);

	lea	eax, DWORD PTR _buffer$3[ebp]
	push	eax
	call	DWORD PTR __imp__OutputDebugStringA@4
$LN3@ObjectPool:

; 1400 : 			// TODO: There are quite a few mem leaks of this kind. Fix them.
; 1401 : 		}
; 1402 : 
; 1403 : 		void* block = BlockListHead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _block$[ebp], ecx
$LN2@ObjectPool:

; 1404 :  		while (block)

	cmp	DWORD PTR _block$[ebp], 0
	je	SHORT $LN4@ObjectPool

; 1405 : 		{
; 1406 : 			void* nextBlock = *(void**)block;

	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _nextBlock$2[ebp], ecx

; 1407 : 			delete[] block;

	push	OFFSET ??_C@_0DL@BOENBDGI@ObjectPoolClass?$DMclass?5GenericSLN@
	push	1407					; 0000057fH
	push	OFFSET ??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN7@ObjectPool
	xor	ecx, ecx
	jne	SHORT $LN6@ObjectPool
	push	1407					; 0000057fH
	push	OFFSET ??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN6@ObjectPool:
	jmp	SHORT $LN8@ObjectPool
$LN7@ObjectPool:
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN8@ObjectPool:

; 1408 : 			block = nextBlock;

	mov	eax, DWORD PTR _nextBlock$2[ebp]
	mov	DWORD PTR _block$[ebp], eax

; 1409 : 		}

	jmp	SHORT $LN2@ObjectPool
$LN4@ObjectPool:

; 1410 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ ENDP ; ObjectPoolClass<GenericSLNode,256>::~ObjectPoolClass<GenericSLNode,256>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ??0?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ PROC ; ObjectPoolClass<GenericSLNode,256>::ObjectPoolClass<GenericSLNode,256>, COMDAT
; _this$ = ecx

; 1384 : 	ObjectPoolClass()

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0FastCriticalSectionClass@@QAE@XZ	; FastCriticalSectionClass::FastCriticalSectionClass
	mov	eax, DWORD PTR [eax]

; 1385 : 	{
; 1386 : 		FreeListHead = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 1387 : 		BlockListHead = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1388 : 		FreeObjectCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 1389 : 		TotalObjectCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 1390 : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ ENDP ; ObjectPoolClass<GenericSLNode,256>::ObjectPoolClass<GenericSLNode,256>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\singleton.h
;	COMDAT ?getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ
_TEXT	SEGMENT
?getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ PROC ; Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance, COMDAT

; 59   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 60   : 		static T instancex;

	mov	eax, DWORD PTR ??_B?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@51
	and	eax, 1
	jne	SHORT $LN1@getInstanc
	mov	eax, DWORD PTR ??_B?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@51
	or	eax, 1
	mov	DWORD PTR ??_B?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@51, eax
	mov	ecx, OFFSET ?instancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@4V3@A ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::instancex
	call	??0?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ ; ObjectPoolClass<GenericSLNode,256>::ObjectPoolClass<GenericSLNode,256>
	push	OFFSET ??__Finstancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@YAXXZ ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::`dynamic atexit destructor for 'instancex''
	call	_atexit
	add	esp, 4
$LN1@getInstanc:

; 61   : 		return instancex;

	mov	eax, OFFSET ?instancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@4V3@A ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::instancex

; 62   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ ENDP ; Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z PROC ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>, COMDAT
; _this$ = ecx

; 69   : 	SLNode(T *obj) : GenericSLNode(obj) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0GenericSLNode@@IAE@PAX@Z		; GenericSLNode::GenericSLNode
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ENDP ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ PROC ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data, COMDAT
; _this$ = ecx

; 65   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 66   : 		return (T*)NodeData;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 67   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ENDP ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ PROC ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next, COMDAT
; _this$ = ecx

; 61   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 62   : 		return (SLNode<T>*)NodeNext;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 63   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ENDP ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_n$ = 8							; size = 4
?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z PROC ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next, COMDAT
; _this$ = ecx

; 57   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 58   : 		NodeNext = n;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax], ecx

; 59   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ENDP ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_Poke_Change_Difficulty_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_Poke_Change_Difficulty_Registrant@@YAXXZ PROC ; `dynamic atexit destructor for 'JMG_CMTB_Poke_Change_Difficulty_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_Poke_Change_Difficulty_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@A ; JMG_CMTB_Poke_Change_Difficulty_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_Poke_Change_Difficulty_Registrant@@YAXXZ ENDP ; `dynamic atexit destructor for 'JMG_CMTB_Poke_Change_Difficulty_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_Poke_Change_Difficulty_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_Poke_Change_Difficulty_Registrant@@YAXXZ PROC ; `dynamic initializer for 'JMG_CMTB_Poke_Change_Difficulty_Registrant'', COMDAT

; 4470 : ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty> JMG_CMTB_Poke_Change_Difficulty_Registrant("JMG_CMTB_Poke_Change_Difficulty","");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0CA@CJEFGFNJ@JMG_CMTB_Poke_Change_Difficulty?$AA@
	mov	ecx, OFFSET ?JMG_CMTB_Poke_Change_Difficulty_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@A ; JMG_CMTB_Poke_Change_Difficulty_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>
	push	OFFSET ??__FJMG_CMTB_Poke_Change_Difficulty_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_Poke_Change_Difficulty_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_Poke_Change_Difficulty_Registrant@@YAXXZ ENDP ; `dynamic initializer for 'JMG_CMTB_Poke_Change_Difficulty_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::~ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::~ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0EA@FILOACHK@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_Poke_Change_Difficulty@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_Poke_Change_Difficulty@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>::ScriptRegistrant<JMG_CMTB_Poke_Change_Difficulty>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_Poke_End_Map_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_Poke_End_Map_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_CMTB_Poke_End_Map_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_Poke_End_Map_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@A ; JMG_CMTB_Poke_End_Map_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_Poke_End_Map_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_CMTB_Poke_End_Map_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_Poke_End_Map_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_Poke_End_Map_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_CMTB_Poke_End_Map_Registrant'', COMDAT

; 4469 : ScriptRegistrant<JMG_CMTB_Poke_End_Map> JMG_CMTB_Poke_End_Map_Registrant("JMG_CMTB_Poke_End_Map","");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BG@KJLBHOJC@JMG_CMTB_Poke_End_Map?$AA@
	mov	ecx, OFFSET ?JMG_CMTB_Poke_End_Map_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@A ; JMG_CMTB_Poke_End_Map_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::ScriptRegistrant<JMG_CMTB_Poke_End_Map>
	push	OFFSET ??__FJMG_CMTB_Poke_End_Map_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_Poke_End_Map_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_Poke_End_Map_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_CMTB_Poke_End_Map_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::~ScriptRegistrant<JMG_CMTB_Poke_End_Map>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::~ScriptRegistrant<JMG_CMTB_Poke_End_Map>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DG@PJAEHEDC@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_Poke_End_Map@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::ScriptRegistrant<JMG_CMTB_Poke_End_Map>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_Poke_End_Map@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_Poke_End_Map>::ScriptRegistrant<JMG_CMTB_Poke_End_Map>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_Vehicle_Face_Turret_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_Vehicle_Face_Turret_Registrant@@YAXXZ PROC ; `dynamic atexit destructor for 'JMG_CMTB_Vehicle_Face_Turret_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_Vehicle_Face_Turret_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@A ; JMG_CMTB_Vehicle_Face_Turret_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_Vehicle_Face_Turret_Registrant@@YAXXZ ENDP ; `dynamic atexit destructor for 'JMG_CMTB_Vehicle_Face_Turret_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_Vehicle_Face_Turret_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_Vehicle_Face_Turret_Registrant@@YAXXZ PROC ; `dynamic initializer for 'JMG_CMTB_Vehicle_Face_Turret_Registrant'', COMDAT

; 4468 : ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret> JMG_CMTB_Vehicle_Face_Turret_Registrant("JMG_CMTB_Vehicle_Face_Turret","");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BN@GNJLFKOF@JMG_CMTB_Vehicle_Face_Turret?$AA@
	mov	ecx, OFFSET ?JMG_CMTB_Vehicle_Face_Turret_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@A ; JMG_CMTB_Vehicle_Face_Turret_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>
	push	OFFSET ??__FJMG_CMTB_Vehicle_Face_Turret_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_Vehicle_Face_Turret_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_Vehicle_Face_Turret_Registrant@@YAXXZ ENDP ; `dynamic initializer for 'JMG_CMTB_Vehicle_Face_Turret_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::~ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::~ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DN@DBHOJACP@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_Vehicle_Face_Turret@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_Vehicle_Face_Turret@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>::ScriptRegistrant<JMG_CMTB_Vehicle_Face_Turret>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_Player_Drone_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_Player_Drone_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_CMTB_Player_Drone_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_Player_Drone_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@A ; JMG_CMTB_Player_Drone_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_Player_Drone_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_CMTB_Player_Drone_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_Player_Drone_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_Player_Drone_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_CMTB_Player_Drone_Registrant'', COMDAT

; 4467 : ScriptRegistrant<JMG_CMTB_Player_Drone> JMG_CMTB_Player_Drone_Registrant("JMG_CMTB_Player_Drone","PlayerNumber:int,Power:int,RePosition:int,PlayerEscort:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0DL@HMJKEEFC@PlayerNumber?3int?0Power?3int?0RePos@
	push	OFFSET ??_C@_0BG@DDDOADFB@JMG_CMTB_Player_Drone?$AA@
	mov	ecx, OFFSET ?JMG_CMTB_Player_Drone_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@A ; JMG_CMTB_Player_Drone_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Player_Drone>::ScriptRegistrant<JMG_CMTB_Player_Drone>
	push	OFFSET ??__FJMG_CMTB_Player_Drone_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_Player_Drone_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_Player_Drone_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_CMTB_Player_Drone_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_Player_Drone>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_Player_Drone>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_Player_Drone>::~ScriptRegistrant<JMG_CMTB_Player_Drone>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Player_Drone>::~ScriptRegistrant<JMG_CMTB_Player_Drone>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_Player_Drone>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DG@INLIGAMA@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	184					; 000000b8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_Player_Drone@@QAE@XZ	; JMG_CMTB_Player_Drone::JMG_CMTB_Player_Drone
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Player_Drone>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_Player_Drone>::ScriptRegistrant<JMG_CMTB_Player_Drone>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_Player_Drone@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_Player_Drone>::ScriptRegistrant<JMG_CMTB_Player_Drone>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_Cargo_Ship_Turret_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_Cargo_Ship_Turret_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_CMTB_Cargo_Ship_Turret_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_Cargo_Ship_Turret_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@A ; JMG_CMTB_Cargo_Ship_Turret_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_Cargo_Ship_Turret_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_CMTB_Cargo_Ship_Turret_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_Cargo_Ship_Turret_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_Cargo_Ship_Turret_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_CMTB_Cargo_Ship_Turret_Registrant'', COMDAT

; 4466 : ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret> JMG_CMTB_Cargo_Ship_Turret_Registrant("JMG_CMTB_Cargo_Ship_Turret","");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BL@CFBEJCMJ@JMG_CMTB_Cargo_Ship_Turret?$AA@
	mov	ecx, OFFSET ?JMG_CMTB_Cargo_Ship_Turret_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@A ; JMG_CMTB_Cargo_Ship_Turret_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>
	push	OFFSET ??__FJMG_CMTB_Cargo_Ship_Turret_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_Cargo_Ship_Turret_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_Cargo_Ship_Turret_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_CMTB_Cargo_Ship_Turret_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::~ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::~ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DL@BLMFDFLB@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	96					; 00000060H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_Cargo_Ship_Turret@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Turret@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>::ScriptRegistrant<JMG_CMTB_Cargo_Ship_Turret>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_Cargo_Ship_Script_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_Cargo_Ship_Script_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_CMTB_Cargo_Ship_Script_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_Cargo_Ship_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@A ; JMG_CMTB_Cargo_Ship_Script_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_Cargo_Ship_Script_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_CMTB_Cargo_Ship_Script_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_Cargo_Ship_Script_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_Cargo_Ship_Script_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_CMTB_Cargo_Ship_Script_Registrant'', COMDAT

; 4465 : ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script> JMG_CMTB_Cargo_Ship_Script_Registrant("JMG_CMTB_Cargo_Ship_Script","PlayerNumber:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BB@BGEIDIFC@PlayerNumber?3int?$AA@
	push	OFFSET ??_C@_0BL@KIMJPMME@JMG_CMTB_Cargo_Ship_Script?$AA@
	mov	ecx, OFFSET ?JMG_CMTB_Cargo_Ship_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@A ; JMG_CMTB_Cargo_Ship_Script_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>
	push	OFFSET ??__FJMG_CMTB_Cargo_Ship_Script_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_Cargo_Ship_Script_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_Cargo_Ship_Script_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_CMTB_Cargo_Ship_Script_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::~ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::~ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DL@EHNBAFOM@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	84					; 00000054H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_Cargo_Ship_Script@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_Cargo_Ship_Script@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>::ScriptRegistrant<JMG_CMTB_Cargo_Ship_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_Powerup_Script_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_Powerup_Script_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_CMTB_Powerup_Script_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_Powerup_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@A ; JMG_CMTB_Powerup_Script_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_Powerup_Script_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_CMTB_Powerup_Script_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_Powerup_Script_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_Powerup_Script_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_CMTB_Powerup_Script_Registrant'', COMDAT

; 4464 : ScriptRegistrant<JMG_CMTB_Powerup_Script> JMG_CMTB_Powerup_Script_Registrant("JMG_CMTB_Powerup_Script","Custom:int,LifeTime:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BI@LCBNHEBB@Custom?3int?0LifeTime?3int?$AA@
	push	OFFSET ??_C@_0BI@KMNMLLME@JMG_CMTB_Powerup_Script?$AA@
	mov	ecx, OFFSET ?JMG_CMTB_Powerup_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@A ; JMG_CMTB_Powerup_Script_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::ScriptRegistrant<JMG_CMTB_Powerup_Script>
	push	OFFSET ??__FJMG_CMTB_Powerup_Script_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_Powerup_Script_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_Powerup_Script_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_CMTB_Powerup_Script_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::~ScriptRegistrant<JMG_CMTB_Powerup_Script>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::~ScriptRegistrant<JMG_CMTB_Powerup_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DI@HNAFBNDA@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_Powerup_Script@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::ScriptRegistrant<JMG_CMTB_Powerup_Script>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_Powerup_Script@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_Powerup_Script>::ScriptRegistrant<JMG_CMTB_Powerup_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_Ship_Super_Weapon_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_Ship_Super_Weapon_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_CMTB_Ship_Super_Weapon_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_Ship_Super_Weapon_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@A ; JMG_CMTB_Ship_Super_Weapon_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_Ship_Super_Weapon_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_CMTB_Ship_Super_Weapon_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_Ship_Super_Weapon_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_Ship_Super_Weapon_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_CMTB_Ship_Super_Weapon_Registrant'', COMDAT

; 4463 : ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon> JMG_CMTB_Ship_Super_Weapon_Registrant("JMG_CMTB_Ship_Super_Weapon","ControllerShipID:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BF@LMMAOJPK@ControllerShipID?3int?$AA@
	push	OFFSET ??_C@_0BL@ONMMODHJ@JMG_CMTB_Ship_Super_Weapon?$AA@
	mov	ecx, OFFSET ?JMG_CMTB_Ship_Super_Weapon_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@A ; JMG_CMTB_Ship_Super_Weapon_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>
	push	OFFSET ??__FJMG_CMTB_Ship_Super_Weapon_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_Ship_Super_Weapon_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_Ship_Super_Weapon_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_CMTB_Ship_Super_Weapon_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::~ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::~ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DL@FGMMLFNJ@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_Ship_Super_Weapon@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_Ship_Super_Weapon@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>::ScriptRegistrant<JMG_CMTB_Ship_Super_Weapon>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_The_Moon_Script_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_The_Moon_Script_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_CMTB_The_Moon_Script_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_The_Moon_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@A ; JMG_CMTB_The_Moon_Script_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_The_Moon_Script_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_CMTB_The_Moon_Script_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_The_Moon_Script_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_The_Moon_Script_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_CMTB_The_Moon_Script_Registrant'', COMDAT

; 4462 : ScriptRegistrant<JMG_CMTB_The_Moon_Script> JMG_CMTB_The_Moon_Script_Registrant("JMG_CMTB_The_Moon_Script","");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BJ@ONFJBKAC@JMG_CMTB_The_Moon_Script?$AA@
	mov	ecx, OFFSET ?JMG_CMTB_The_Moon_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@A ; JMG_CMTB_The_Moon_Script_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::ScriptRegistrant<JMG_CMTB_The_Moon_Script>
	push	OFFSET ??__FJMG_CMTB_The_Moon_Script_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_The_Moon_Script_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_The_Moon_Script_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_CMTB_The_Moon_Script_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::~ScriptRegistrant<JMG_CMTB_The_Moon_Script>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::~ScriptRegistrant<JMG_CMTB_The_Moon_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DJ@NEGEDPOI@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	52					; 00000034H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_The_Moon_Script@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::ScriptRegistrant<JMG_CMTB_The_Moon_Script>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_The_Moon_Script@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_The_Moon_Script>::ScriptRegistrant<JMG_CMTB_The_Moon_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_Motion_Mine_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_Motion_Mine_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_CMTB_Motion_Mine_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_Motion_Mine_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@A ; JMG_CMTB_Motion_Mine_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_Motion_Mine_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_CMTB_Motion_Mine_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_Motion_Mine_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_Motion_Mine_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_CMTB_Motion_Mine_Registrant'', COMDAT

; 4461 : ScriptRegistrant<JMG_CMTB_Motion_Mine> JMG_CMTB_Motion_Mine_Registrant("JMG_CMTB_Motion_Mine","Is_BOSS:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0M@DKGEGNAD@Is_BOSS?3int?$AA@
	push	OFFSET ??_C@_0BF@DPFEEIBF@JMG_CMTB_Motion_Mine?$AA@
	mov	ecx, OFFSET ?JMG_CMTB_Motion_Mine_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@A ; JMG_CMTB_Motion_Mine_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::ScriptRegistrant<JMG_CMTB_Motion_Mine>
	push	OFFSET ??__FJMG_CMTB_Motion_Mine_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_Motion_Mine_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_Motion_Mine_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_CMTB_Motion_Mine_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::~ScriptRegistrant<JMG_CMTB_Motion_Mine>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::~ScriptRegistrant<JMG_CMTB_Motion_Mine>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DF@EKCPHHAF@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	92					; 0000005cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_Motion_Mine@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::ScriptRegistrant<JMG_CMTB_Motion_Mine>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_Motion_Mine@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_Motion_Mine>::ScriptRegistrant<JMG_CMTB_Motion_Mine>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_Renegade_Code_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_Renegade_Code_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_CMTB_Renegade_Code_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_Renegade_Code_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@A ; JMG_CMTB_Renegade_Code_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_Renegade_Code_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_CMTB_Renegade_Code_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_Renegade_Code_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_Renegade_Code_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_CMTB_Renegade_Code_Registrant'', COMDAT

; 4460 : ScriptRegistrant<JMG_CMTB_Renegade_Code> JMG_CMTB_Renegade_Code_Registrant("JMG_CMTB_Renegade_Code","");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BH@JCPOMNIO@JMG_CMTB_Renegade_Code?$AA@
	mov	ecx, OFFSET ?JMG_CMTB_Renegade_Code_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@A ; JMG_CMTB_Renegade_Code_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::ScriptRegistrant<JMG_CMTB_Renegade_Code>
	push	OFFSET ??__FJMG_CMTB_Renegade_Code_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_Renegade_Code_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_Renegade_Code_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_CMTB_Renegade_Code_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::~ScriptRegistrant<JMG_CMTB_Renegade_Code>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::~ScriptRegistrant<JMG_CMTB_Renegade_Code>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DH@JBKDKLMC@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_Renegade_Code@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::ScriptRegistrant<JMG_CMTB_Renegade_Code>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_Renegade_Code@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_Renegade_Code>::ScriptRegistrant<JMG_CMTB_Renegade_Code>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_Fake_Player_Attach_Script_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_Fake_Player_Attach_Script_Registrant@@YAXXZ PROC ; `dynamic atexit destructor for 'JMG_CMTB_Fake_Player_Attach_Script_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_Fake_Player_Attach_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@A ; JMG_CMTB_Fake_Player_Attach_Script_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_Fake_Player_Attach_Script_Registrant@@YAXXZ ENDP ; `dynamic atexit destructor for 'JMG_CMTB_Fake_Player_Attach_Script_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_Fake_Player_Attach_Script_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_Fake_Player_Attach_Script_Registrant@@YAXXZ PROC ; `dynamic initializer for 'JMG_CMTB_Fake_Player_Attach_Script_Registrant'', COMDAT

; 4459 : ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script> JMG_CMTB_Fake_Player_Attach_Script_Registrant("JMG_CMTB_Fake_Player_Attach_Script","MySoldierID:int,Number:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BL@BBONPPAA@MySoldierID?3int?0Number?3int?$AA@
	push	OFFSET ??_C@_0CD@BNLFCCLE@JMG_CMTB_Fake_Player_Attach_Scri@
	mov	ecx, OFFSET ?JMG_CMTB_Fake_Player_Attach_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@A ; JMG_CMTB_Fake_Player_Attach_Script_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>
	push	OFFSET ??__FJMG_CMTB_Fake_Player_Attach_Script_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_Fake_Player_Attach_Script_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_Fake_Player_Attach_Script_Registrant@@YAXXZ ENDP ; `dynamic initializer for 'JMG_CMTB_Fake_Player_Attach_Script_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::~ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::~ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0ED@PHCMDPKL@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_Fake_Player_Attach_Script@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_Fake_Player_Attach_Script@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>::ScriptRegistrant<JMG_CMTB_Fake_Player_Attach_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_Arcade_Machine_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_Arcade_Machine_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_CMTB_Arcade_Machine_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_Arcade_Machine_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@A ; JMG_CMTB_Arcade_Machine_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_Arcade_Machine_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_CMTB_Arcade_Machine_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_Arcade_Machine_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_Arcade_Machine_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_CMTB_Arcade_Machine_Registrant'', COMDAT

; 4458 : ScriptRegistrant<JMG_CMTB_Arcade_Machine> JMG_CMTB_Arcade_Machine_Registrant("JMG_CMTB_Arcade_Machine","ControllerID=0:int,MachineNumber=0:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0CH@EOABBIBL@ControllerID?$DN0?3int?0MachineNumber@
	push	OFFSET ??_C@_0BI@KFEDCGBB@JMG_CMTB_Arcade_Machine?$AA@
	mov	ecx, OFFSET ?JMG_CMTB_Arcade_Machine_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@A ; JMG_CMTB_Arcade_Machine_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::ScriptRegistrant<JMG_CMTB_Arcade_Machine>
	push	OFFSET ??__FJMG_CMTB_Arcade_Machine_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_Arcade_Machine_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_Arcade_Machine_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_CMTB_Arcade_Machine_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::~ScriptRegistrant<JMG_CMTB_Arcade_Machine>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::~ScriptRegistrant<JMG_CMTB_Arcade_Machine>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DI@KJJPOPHL@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_Arcade_Machine@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::ScriptRegistrant<JMG_CMTB_Arcade_Machine>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_Arcade_Machine@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_Arcade_Machine>::ScriptRegistrant<JMG_CMTB_Arcade_Machine>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_Spectator_Object_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_Spectator_Object_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_CMTB_Spectator_Object_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_Spectator_Object_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@A ; JMG_CMTB_Spectator_Object_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_Spectator_Object_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_CMTB_Spectator_Object_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_Spectator_Object_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_Spectator_Object_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_CMTB_Spectator_Object_Registrant'', COMDAT

; 4457 : ScriptRegistrant<JMG_CMTB_Spectator_Object> JMG_CMTB_Spectator_Object_Registrant("JMG_CMTB_Spectator_Object","ControllerID:int,Number:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BM@IOJIEINM@ControllerID?3int?0Number?3int?$AA@
	push	OFFSET ??_C@_0BK@IMCJNJOP@JMG_CMTB_Spectator_Object?$AA@
	mov	ecx, OFFSET ?JMG_CMTB_Spectator_Object_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@A ; JMG_CMTB_Spectator_Object_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::ScriptRegistrant<JMG_CMTB_Spectator_Object>
	push	OFFSET ??__FJMG_CMTB_Spectator_Object_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_Spectator_Object_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_Spectator_Object_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_CMTB_Spectator_Object_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::~ScriptRegistrant<JMG_CMTB_Spectator_Object>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::~ScriptRegistrant<JMG_CMTB_Spectator_Object>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DK@DDIMDDKK@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_Spectator_Object@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::ScriptRegistrant<JMG_CMTB_Spectator_Object>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_Spectator_Object@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_Spectator_Object>::ScriptRegistrant<JMG_CMTB_Spectator_Object>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_Zone_Realign_Enter_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_Zone_Realign_Enter_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_CMTB_Zone_Realign_Enter_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_Zone_Realign_Enter_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@A ; JMG_CMTB_Zone_Realign_Enter_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_Zone_Realign_Enter_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_CMTB_Zone_Realign_Enter_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_Zone_Realign_Enter_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_Zone_Realign_Enter_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_CMTB_Zone_Realign_Enter_Registrant'', COMDAT

; 4456 : ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter> JMG_CMTB_Zone_Realign_Enter_Registrant("JMG_CMTB_Zone_Realign_Enter","Position=0.0 0.0 0.0:Vector3");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BN@HBBNOJNA@Position?$DN0?40?50?40?50?40?3Vector3?$AA@
	push	OFFSET ??_C@_0BM@GGNCDFOM@JMG_CMTB_Zone_Realign_Enter?$AA@
	mov	ecx, OFFSET ?JMG_CMTB_Zone_Realign_Enter_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@A ; JMG_CMTB_Zone_Realign_Enter_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>
	push	OFFSET ??__FJMG_CMTB_Zone_Realign_Enter_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_Zone_Realign_Enter_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_Zone_Realign_Enter_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_CMTB_Zone_Realign_Enter_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::~ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::~ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DM@NBIHAAN@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_Zone_Realign_Enter@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_Zone_Realign_Enter@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>::ScriptRegistrant<JMG_CMTB_Zone_Realign_Enter>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_Comet_Script_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_Comet_Script_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_CMTB_Comet_Script_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_Comet_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@A ; JMG_CMTB_Comet_Script_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_Comet_Script_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_CMTB_Comet_Script_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_Comet_Script_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_Comet_Script_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_CMTB_Comet_Script_Registrant'', COMDAT

; 4455 : ScriptRegistrant<JMG_CMTB_Comet_Script> JMG_CMTB_Comet_Script_Registrant("JMG_CMTB_Comet_Script","Size=2:int,TargetPosition=0.0 0.0 0.0:Vector3");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0CO@KAJJGBAB@Size?$DN2?3int?0TargetPosition?$DN0?40?50?4@
	push	OFFSET ??_C@_0BG@BOCOGEON@JMG_CMTB_Comet_Script?$AA@
	mov	ecx, OFFSET ?JMG_CMTB_Comet_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@A ; JMG_CMTB_Comet_Script_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Comet_Script>::ScriptRegistrant<JMG_CMTB_Comet_Script>
	push	OFFSET ??__FJMG_CMTB_Comet_Script_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_Comet_Script_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_Comet_Script_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_CMTB_Comet_Script_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_Comet_Script>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_Comet_Script>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_Comet_Script>::~ScriptRegistrant<JMG_CMTB_Comet_Script>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Comet_Script>::~ScriptRegistrant<JMG_CMTB_Comet_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_Comet_Script>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DG@CFCKHAMN@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_Comet_Script@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Comet_Script>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_Comet_Script>::ScriptRegistrant<JMG_CMTB_Comet_Script>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_Comet_Script@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_Comet_Script>::ScriptRegistrant<JMG_CMTB_Comet_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_UFO_Random_Fire_Control_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_UFO_Random_Fire_Control_Registrant@@YAXXZ PROC ; `dynamic atexit destructor for 'JMG_CMTB_UFO_Random_Fire_Control_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_UFO_Random_Fire_Control_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@A ; JMG_CMTB_UFO_Random_Fire_Control_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_UFO_Random_Fire_Control_Registrant@@YAXXZ ENDP ; `dynamic atexit destructor for 'JMG_CMTB_UFO_Random_Fire_Control_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_UFO_Random_Fire_Control_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_UFO_Random_Fire_Control_Registrant@@YAXXZ PROC ; `dynamic initializer for 'JMG_CMTB_UFO_Random_Fire_Control_Registrant'', COMDAT

; 4454 : ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control> JMG_CMTB_UFO_Random_Fire_Control_Registrant("JMG_CMTB_UFO_Random_Fire_Control","UFOBoss:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0M@HMICPFDE@UFOBoss?3int?$AA@
	push	OFFSET ??_C@_0CB@NKFKHNHH@JMG_CMTB_UFO_Random_Fire_Control@
	mov	ecx, OFFSET ?JMG_CMTB_UFO_Random_Fire_Control_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@A ; JMG_CMTB_UFO_Random_Fire_Control_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>
	push	OFFSET ??__FJMG_CMTB_UFO_Random_Fire_Control_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_UFO_Random_Fire_Control_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_UFO_Random_Fire_Control_Registrant@@YAXXZ ENDP ; `dynamic initializer for 'JMG_CMTB_UFO_Random_Fire_Control_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::~ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::~ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0EB@OOLBNELF@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_UFO_Random_Fire_Control@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_UFO_Random_Fire_Control@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>::ScriptRegistrant<JMG_CMTB_UFO_Random_Fire_Control>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_Ship_Control_Script_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_Ship_Control_Script_Registrant@@YAXXZ PROC ; `dynamic atexit destructor for 'JMG_CMTB_Ship_Control_Script_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_Ship_Control_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@A ; JMG_CMTB_Ship_Control_Script_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_Ship_Control_Script_Registrant@@YAXXZ ENDP ; `dynamic atexit destructor for 'JMG_CMTB_Ship_Control_Script_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_Ship_Control_Script_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_Ship_Control_Script_Registrant@@YAXXZ PROC ; `dynamic initializer for 'JMG_CMTB_Ship_Control_Script_Registrant'', COMDAT

; 4453 : ScriptRegistrant<JMG_CMTB_Ship_Control_Script> JMG_CMTB_Ship_Control_Script_Registrant("JMG_CMTB_Ship_Control_Script","");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BN@JOGEAGBE@JMG_CMTB_Ship_Control_Script?$AA@
	mov	ecx, OFFSET ?JMG_CMTB_Ship_Control_Script_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@A ; JMG_CMTB_Ship_Control_Script_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::ScriptRegistrant<JMG_CMTB_Ship_Control_Script>
	push	OFFSET ??__FJMG_CMTB_Ship_Control_Script_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_Ship_Control_Script_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_Ship_Control_Script_Registrant@@YAXXZ ENDP ; `dynamic initializer for 'JMG_CMTB_Ship_Control_Script_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::~ScriptRegistrant<JMG_CMTB_Ship_Control_Script>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::~ScriptRegistrant<JMG_CMTB_Ship_Control_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DN@LDEKIAPI@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	124					; 0000007cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_Ship_Control_Script@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::ScriptRegistrant<JMG_CMTB_Ship_Control_Script>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_Ship_Control_Script@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_Ship_Control_Script>::ScriptRegistrant<JMG_CMTB_Ship_Control_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_CMTB_Main_Game_Control_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_CMTB_Main_Game_Control_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_CMTB_Main_Game_Control_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_CMTB_Main_Game_Control_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@A ; JMG_CMTB_Main_Game_Control_Registrant
	call	??1?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_CMTB_Main_Game_Control_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_CMTB_Main_Game_Control_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_CMTB_Main_Game_Control_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_CMTB_Main_Game_Control_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_CMTB_Main_Game_Control_Registrant'', COMDAT

; 4452 : ScriptRegistrant<JMG_CMTB_Main_Game_Control> JMG_CMTB_Main_Game_Control_Registrant("JMG_CMTB_Main_Game_Control","");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BL@JFPJNFJB@JMG_CMTB_Main_Game_Control?$AA@
	mov	ecx, OFFSET ?JMG_CMTB_Main_Game_Control_Registrant@@3V?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@A ; JMG_CMTB_Main_Game_Control_Registrant
	call	??0?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::ScriptRegistrant<JMG_CMTB_Main_Game_Control>
	push	OFFSET ??__FJMG_CMTB_Main_Game_Control_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_CMTB_Main_Game_Control_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_CMTB_Main_Game_Control_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_CMTB_Main_Game_Control_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::~ScriptRegistrant<JMG_CMTB_Main_Game_Control>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::~ScriptRegistrant<JMG_CMTB_Main_Game_Control>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DL@IJKKMJIJ@ScriptRegistrant?$DMclass?5JMG_CMTB_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	156					; 0000009cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_CMTB_Main_Game_Control@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::ScriptRegistrant<JMG_CMTB_Main_Game_Control>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_CMTB_Main_Game_Control@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_CMTB_Main_Game_Control>::ScriptRegistrant<JMG_CMTB_Main_Game_Control>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_Apply_Damage_On_Timer_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_Apply_Damage_On_Timer_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_Apply_Damage_On_Timer_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_Apply_Damage_On_Timer_Registrant@@3V?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@A ; JMG_Apply_Damage_On_Timer_Registrant
	call	??1?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_Apply_Damage_On_Timer_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_Apply_Damage_On_Timer_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_Apply_Damage_On_Timer_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_Apply_Damage_On_Timer_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_Apply_Damage_On_Timer_Registrant'', COMDAT

; 4450 : ScriptRegistrant<JMG_Apply_Damage_On_Timer> JMG_Apply_Damage_On_Timer_Registrant("JMG_Apply_Damage_On_Timer","");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BK@CADJILLC@JMG_Apply_Damage_On_Timer?$AA@
	mov	ecx, OFFSET ?JMG_Apply_Damage_On_Timer_Registrant@@3V?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@A ; JMG_Apply_Damage_On_Timer_Registrant
	call	??0?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::ScriptRegistrant<JMG_Apply_Damage_On_Timer>
	push	OFFSET ??__FJMG_Apply_Damage_On_Timer_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_Apply_Damage_On_Timer_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_Apply_Damage_On_Timer_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_Apply_Damage_On_Timer_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::~ScriptRegistrant<JMG_Apply_Damage_On_Timer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::~ScriptRegistrant<JMG_Apply_Damage_On_Timer>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DK@KOJCCMGL@ScriptRegistrant?$DMclass?5JMG_Apply@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_Apply_Damage_On_Timer@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::ScriptRegistrant<JMG_Apply_Damage_On_Timer>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_Apply_Damage_On_Timer@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_Apply_Damage_On_Timer>::ScriptRegistrant<JMG_Apply_Damage_On_Timer>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_User_Auto_Enter_Ship_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_User_Auto_Enter_Ship_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_User_Auto_Enter_Ship_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_User_Auto_Enter_Ship_Registrant@@3V?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@A ; JMG_User_Auto_Enter_Ship_Registrant
	call	??1?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_User_Auto_Enter_Ship_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_User_Auto_Enter_Ship_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_User_Auto_Enter_Ship_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_User_Auto_Enter_Ship_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_User_Auto_Enter_Ship_Registrant'', COMDAT

; 4449 : ScriptRegistrant<JMG_User_Auto_Enter_Ship> JMG_User_Auto_Enter_Ship_Registrant("JMG_User_Auto_Enter_Ship","Player_Ship=RB_Blue_Player_Ship:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0CH@HGDGGFFP@Player_Ship?$DNRB_Blue_Player_Ship?3@
	push	OFFSET ??_C@_0BJ@JFJACLHB@JMG_User_Auto_Enter_Ship?$AA@
	mov	ecx, OFFSET ?JMG_User_Auto_Enter_Ship_Registrant@@3V?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@A ; JMG_User_Auto_Enter_Ship_Registrant
	call	??0?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::ScriptRegistrant<JMG_User_Auto_Enter_Ship>
	push	OFFSET ??__FJMG_User_Auto_Enter_Ship_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_User_Auto_Enter_Ship_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_User_Auto_Enter_Ship_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_User_Auto_Enter_Ship_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::~ScriptRegistrant<JMG_User_Auto_Enter_Ship>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::~ScriptRegistrant<JMG_User_Auto_Enter_Ship>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DJ@OKNJMGOP@ScriptRegistrant?$DMclass?5JMG_User_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_User_Auto_Enter_Ship@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::ScriptRegistrant<JMG_User_Auto_Enter_Ship>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_User_Auto_Enter_Ship@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_User_Auto_Enter_Ship>::ScriptRegistrant<JMG_User_Auto_Enter_Ship>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_Attach_And_Remove_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_Attach_And_Remove_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_Attach_And_Remove_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_Attach_And_Remove_Registrant@@3V?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@A ; JMG_Attach_And_Remove_Registrant
	call	??1?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_Attach_And_Remove_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_Attach_And_Remove_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_Attach_And_Remove_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_Attach_And_Remove_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_Attach_And_Remove_Registrant'', COMDAT

; 4448 : ScriptRegistrant<JMG_Attach_And_Remove> JMG_Attach_And_Remove_Registrant("JMG_Attach_And_Remove","Smaller_Comet:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BF@HBPOJDOK@Smaller_Comet?3string?$AA@
	push	OFFSET ??_C@_0BG@DEIDFEHH@JMG_Attach_And_Remove?$AA@
	mov	ecx, OFFSET ?JMG_Attach_And_Remove_Registrant@@3V?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@A ; JMG_Attach_And_Remove_Registrant
	call	??0?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Attach_And_Remove>::ScriptRegistrant<JMG_Attach_And_Remove>
	push	OFFSET ??__FJMG_Attach_And_Remove_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_Attach_And_Remove_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_Attach_And_Remove_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_Attach_And_Remove_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_Attach_And_Remove>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_Attach_And_Remove>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_Attach_And_Remove>::~ScriptRegistrant<JMG_Attach_And_Remove>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_Attach_And_Remove>::~ScriptRegistrant<JMG_Attach_And_Remove>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_Attach_And_Remove>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DG@HPBHHPOO@ScriptRegistrant?$DMclass?5JMG_Attac@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_Attach_And_Remove@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_Attach_And_Remove>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_Attach_And_Remove>::ScriptRegistrant<JMG_Attach_And_Remove>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_Attach_And_Remove@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_Attach_And_Remove>::ScriptRegistrant<JMG_Attach_And_Remove>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_Comet_Control_Script_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_Comet_Control_Script_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_Comet_Control_Script_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_Comet_Control_Script_Registrant@@3V?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@A ; JMG_Comet_Control_Script_Registrant
	call	??1?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_Comet_Control_Script_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_Comet_Control_Script_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_Comet_Control_Script_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_Comet_Control_Script_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_Comet_Control_Script_Registrant'', COMDAT

; 4447 : ScriptRegistrant<JMG_Comet_Control_Script> JMG_Comet_Control_Script_Registrant("JMG_Comet_Control_Script","Comet_Size:float,Spawn_Comets=0:int,Comet_Holder=null:string,Smaller_Comet=null:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0FH@IMAIKLEL@Comet_Size?3float?0Spawn_Comets?$DN0?3@
	push	OFFSET ??_C@_0BJ@DHIJIIMB@JMG_Comet_Control_Script?$AA@
	mov	ecx, OFFSET ?JMG_Comet_Control_Script_Registrant@@3V?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@A ; JMG_Comet_Control_Script_Registrant
	call	??0?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Comet_Control_Script>::ScriptRegistrant<JMG_Comet_Control_Script>
	push	OFFSET ??__FJMG_Comet_Control_Script_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_Comet_Control_Script_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_Comet_Control_Script_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_Comet_Control_Script_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_Comet_Control_Script>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_Comet_Control_Script>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_Comet_Control_Script>::~ScriptRegistrant<JMG_Comet_Control_Script>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_Comet_Control_Script>::~ScriptRegistrant<JMG_Comet_Control_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_Comet_Control_Script>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DJ@CAONIPOF@ScriptRegistrant?$DMclass?5JMG_Comet@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_Comet_Control_Script@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_Comet_Control_Script>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_Comet_Control_Script>::ScriptRegistrant<JMG_Comet_Control_Script>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_Comet_Control_Script@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_Comet_Control_Script>::ScriptRegistrant<JMG_Comet_Control_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_New_Ship_Weapon_Control_System_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_New_Ship_Weapon_Control_System_Registrant@@YAXXZ PROC ; `dynamic atexit destructor for 'JMG_New_Ship_Weapon_Control_System_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_New_Ship_Weapon_Control_System_Registrant@@3V?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@A ; JMG_New_Ship_Weapon_Control_System_Registrant
	call	??1?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_New_Ship_Weapon_Control_System_Registrant@@YAXXZ ENDP ; `dynamic atexit destructor for 'JMG_New_Ship_Weapon_Control_System_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_New_Ship_Weapon_Control_System_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_New_Ship_Weapon_Control_System_Registrant@@YAXXZ PROC ; `dynamic initializer for 'JMG_New_Ship_Weapon_Control_System_Registrant'', COMDAT

; 4446 : ScriptRegistrant<JMG_New_Ship_Weapon_Control_System> JMG_New_Ship_Weapon_Control_System_Registrant("JMG_New_Ship_Weapon_Control_System","");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0CD@MBNGPBCI@JMG_New_Ship_Weapon_Control_Syst@
	mov	ecx, OFFSET ?JMG_New_Ship_Weapon_Control_System_Registrant@@3V?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@A ; JMG_New_Ship_Weapon_Control_System_Registrant
	call	??0?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>
	push	OFFSET ??__FJMG_New_Ship_Weapon_Control_System_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_New_Ship_Weapon_Control_System_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_New_Ship_Weapon_Control_System_Registrant@@YAXXZ ENDP ; `dynamic initializer for 'JMG_New_Ship_Weapon_Control_System_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::~ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::~ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0ED@IMLNHFFC@ScriptRegistrant?$DMclass?5JMG_New_S@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_New_Ship_Weapon_Control_System@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_New_Ship_Weapon_Control_System@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>::ScriptRegistrant<JMG_New_Ship_Weapon_Control_System>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_Renetbusters_Object_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_Renetbusters_Object_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_Renetbusters_Object_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_Renetbusters_Object_Registrant@@3V?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@A ; JMG_Renetbusters_Object_Registrant
	call	??1?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_Renetbusters_Object_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_Renetbusters_Object_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_Renetbusters_Object_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_Renetbusters_Object_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_Renetbusters_Object_Registrant'', COMDAT

; 4445 : ScriptRegistrant<JMG_Renetbusters_Object> JMG_Renetbusters_Object_Registrant("JMG_Renetbusters_Object","size:float,Power_Drain:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BL@JAOGOEJB@size?3float?0Power_Drain?3int?$AA@
	push	OFFSET ??_C@_0BI@JANFOPGL@JMG_Renetbusters_Object?$AA@
	mov	ecx, OFFSET ?JMG_Renetbusters_Object_Registrant@@3V?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@A ; JMG_Renetbusters_Object_Registrant
	call	??0?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Renetbusters_Object>::ScriptRegistrant<JMG_Renetbusters_Object>
	push	OFFSET ??__FJMG_Renetbusters_Object_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_Renetbusters_Object_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_Renetbusters_Object_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_Renetbusters_Object_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_Renetbusters_Object>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_Renetbusters_Object>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_Renetbusters_Object>::~ScriptRegistrant<JMG_Renetbusters_Object>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_Renetbusters_Object>::~ScriptRegistrant<JMG_Renetbusters_Object>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_Renetbusters_Object>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DI@HBFECPDE@ScriptRegistrant?$DMclass?5JMG_Renet@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_Renetbusters_Object@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_Renetbusters_Object>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_Renetbusters_Object>::ScriptRegistrant<JMG_Renetbusters_Object>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_Renetbusters_Object@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_Renetbusters_Object>::ScriptRegistrant<JMG_Renetbusters_Object>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_Ship_Shield_Script_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_Ship_Shield_Script_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_Ship_Shield_Script_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_Ship_Shield_Script_Registrant@@3V?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@A ; JMG_Ship_Shield_Script_Registrant
	call	??1?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_Ship_Shield_Script_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_Ship_Shield_Script_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_Ship_Shield_Script_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_Ship_Shield_Script_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_Ship_Shield_Script_Registrant'', COMDAT

; 4444 : ScriptRegistrant<JMG_Ship_Shield_Script> JMG_Ship_Shield_Script_Registrant("JMG_Ship_Shield_Script","ID:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_06IDGMBKCH@ID?3int?$AA@
	push	OFFSET ??_C@_0BH@OIEIGPLK@JMG_Ship_Shield_Script?$AA@
	mov	ecx, OFFSET ?JMG_Ship_Shield_Script_Registrant@@3V?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@A ; JMG_Ship_Shield_Script_Registrant
	call	??0?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Ship_Shield_Script>::ScriptRegistrant<JMG_Ship_Shield_Script>
	push	OFFSET ??__FJMG_Ship_Shield_Script_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_Ship_Shield_Script_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_Ship_Shield_Script_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_Ship_Shield_Script_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_Ship_Shield_Script>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_Ship_Shield_Script>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_Ship_Shield_Script>::~ScriptRegistrant<JMG_Ship_Shield_Script>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_Ship_Shield_Script>::~ScriptRegistrant<JMG_Ship_Shield_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_Ship_Shield_Script>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DH@ODAKIONA@ScriptRegistrant?$DMclass?5JMG_Ship_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_Ship_Shield_Script@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_Ship_Shield_Script>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_Ship_Shield_Script>::ScriptRegistrant<JMG_Ship_Shield_Script>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_Ship_Shield_Script@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_Ship_Shield_Script>::ScriptRegistrant<JMG_Ship_Shield_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant@@YAXXZ PROC ; `dynamic atexit destructor for 'JMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant@@3V?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@A ; JMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant
	call	??1?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant@@YAXXZ ENDP ; `dynamic atexit destructor for 'JMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant@@YAXXZ PROC ; `dynamic initializer for 'JMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant'', COMDAT

; 4443 : ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship> JMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant("JMG_Kill_Self_And_Sender_On_Custom_Ship","Message:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0M@HBPJHKKO@Message?3int?$AA@
	push	OFFSET ??_C@_0CI@FIKIDPDG@JMG_Kill_Self_And_Sender_On_Cust@
	mov	ecx, OFFSET ?JMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant@@3V?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@A ; JMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant
	call	??0?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>
	push	OFFSET ??__FJMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant@@YAXXZ ENDP ; `dynamic initializer for 'JMG_Kill_Self_And_Sender_On_Custom_Ship_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::~ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::~ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0EI@EBLHNLHN@ScriptRegistrant?$DMclass?5JMG_Kill_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_Kill_Self_And_Sender_On_Custom_Ship@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom_Ship@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>::ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom_Ship>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_Ship_Shield_Control_Script_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_Ship_Shield_Control_Script_Registrant@@YAXXZ PROC ; `dynamic atexit destructor for 'JMG_Ship_Shield_Control_Script_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_Ship_Shield_Control_Script_Registrant@@3V?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@A ; JMG_Ship_Shield_Control_Script_Registrant
	call	??1?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_Ship_Shield_Control_Script_Registrant@@YAXXZ ENDP ; `dynamic atexit destructor for 'JMG_Ship_Shield_Control_Script_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_Ship_Shield_Control_Script_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_Ship_Shield_Control_Script_Registrant@@YAXXZ PROC ; `dynamic initializer for 'JMG_Ship_Shield_Control_Script_Registrant'', COMDAT

; 4442 : ScriptRegistrant<JMG_Ship_Shield_Control_Script> JMG_Ship_Shield_Control_Script_Registrant("JMG_Ship_Shield_Control_Script","");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BP@OEEKAOHD@JMG_Ship_Shield_Control_Script?$AA@
	mov	ecx, OFFSET ?JMG_Ship_Shield_Control_Script_Registrant@@3V?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@A ; JMG_Ship_Shield_Control_Script_Registrant
	call	??0?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::ScriptRegistrant<JMG_Ship_Shield_Control_Script>
	push	OFFSET ??__FJMG_Ship_Shield_Control_Script_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_Ship_Shield_Control_Script_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_Ship_Shield_Control_Script_Registrant@@YAXXZ ENDP ; `dynamic initializer for 'JMG_Ship_Shield_Control_Script_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::~ScriptRegistrant<JMG_Ship_Shield_Control_Script>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::~ScriptRegistrant<JMG_Ship_Shield_Control_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DP@IAJCIEIN@ScriptRegistrant?$DMclass?5JMG_Ship_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_Ship_Shield_Control_Script@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::ScriptRegistrant<JMG_Ship_Shield_Control_Script>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_Ship_Shield_Control_Script@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_Ship_Shield_Control_Script>::ScriptRegistrant<JMG_Ship_Shield_Control_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_Kill_Self_And_Sender_On_Custom_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_Kill_Self_And_Sender_On_Custom_Registrant@@YAXXZ PROC ; `dynamic atexit destructor for 'JMG_Kill_Self_And_Sender_On_Custom_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_Kill_Self_And_Sender_On_Custom_Registrant@@3V?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@A ; JMG_Kill_Self_And_Sender_On_Custom_Registrant
	call	??1?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_Kill_Self_And_Sender_On_Custom_Registrant@@YAXXZ ENDP ; `dynamic atexit destructor for 'JMG_Kill_Self_And_Sender_On_Custom_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_Kill_Self_And_Sender_On_Custom_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_Kill_Self_And_Sender_On_Custom_Registrant@@YAXXZ PROC ; `dynamic initializer for 'JMG_Kill_Self_And_Sender_On_Custom_Registrant'', COMDAT

; 4441 : ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom> JMG_Kill_Self_And_Sender_On_Custom_Registrant("JMG_Kill_Self_And_Sender_On_Custom","Message:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0M@HBPJHKKO@Message?3int?$AA@
	push	OFFSET ??_C@_0CD@NACCMAPF@JMG_Kill_Self_And_Sender_On_Cust@
	mov	ecx, OFFSET ?JMG_Kill_Self_And_Sender_On_Custom_Registrant@@3V?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@A ; JMG_Kill_Self_And_Sender_On_Custom_Registrant
	call	??0?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>
	push	OFFSET ??__FJMG_Kill_Self_And_Sender_On_Custom_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_Kill_Self_And_Sender_On_Custom_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_Kill_Self_And_Sender_On_Custom_Registrant@@YAXXZ ENDP ; `dynamic initializer for 'JMG_Kill_Self_And_Sender_On_Custom_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::~ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::~ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0ED@HICJEPCL@ScriptRegistrant?$DMclass?5JMG_Kill_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_Kill_Self_And_Sender_On_Custom@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_Kill_Self_And_Sender_On_Custom@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>::ScriptRegistrant<JMG_Kill_Self_And_Sender_On_Custom>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_Cronie_AI_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_Cronie_AI_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'JMG_Cronie_AI_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_Cronie_AI_Registrant@@3V?$ScriptRegistrant@VJMG_Cronie_AI@@@@A ; JMG_Cronie_AI_Registrant
	call	??1?$ScriptRegistrant@VJMG_Cronie_AI@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_Cronie_AI_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'JMG_Cronie_AI_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_Cronie_AI_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_Cronie_AI_Registrant@@YAXXZ PROC		; `dynamic initializer for 'JMG_Cronie_AI_Registrant'', COMDAT

; 4440 : ScriptRegistrant<JMG_Cronie_AI> JMG_Cronie_AI_Registrant("JMG_Cronie_AI","");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0O@CMOIFFKF@JMG_Cronie_AI?$AA@
	mov	ecx, OFFSET ?JMG_Cronie_AI_Registrant@@3V?$ScriptRegistrant@VJMG_Cronie_AI@@@@A ; JMG_Cronie_AI_Registrant
	call	??0?$ScriptRegistrant@VJMG_Cronie_AI@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Cronie_AI>::ScriptRegistrant<JMG_Cronie_AI>
	push	OFFSET ??__FJMG_Cronie_AI_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_Cronie_AI_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_Cronie_AI_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'JMG_Cronie_AI_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_Cronie_AI@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_Cronie_AI@@@@UAEPAXI@Z PROC	; ScriptRegistrant<JMG_Cronie_AI>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_Cronie_AI@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_Cronie_AI@@@@UAEPAXI@Z ENDP	; ScriptRegistrant<JMG_Cronie_AI>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_Cronie_AI@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_Cronie_AI@@@@UAE@XZ PROC	; ScriptRegistrant<JMG_Cronie_AI>::~ScriptRegistrant<JMG_Cronie_AI>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_Cronie_AI@@@@UAE@XZ ENDP	; ScriptRegistrant<JMG_Cronie_AI>::~ScriptRegistrant<JMG_Cronie_AI>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_Cronie_AI@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_Cronie_AI@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_Cronie_AI>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0CO@HIPPMCNE@ScriptRegistrant?$DMclass?5JMG_Croni@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_Cronie_AI@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_Cronie_AI@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_Cronie_AI>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_Cronie_AI@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_Cronie_AI@@@@QAE@PBD0@Z PROC	; ScriptRegistrant<JMG_Cronie_AI>::ScriptRegistrant<JMG_Cronie_AI>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_Cronie_AI@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_Cronie_AI@@@@QAE@PBD0@Z ENDP	; ScriptRegistrant<JMG_Cronie_AI>::ScriptRegistrant<JMG_Cronie_AI>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_Return_Custom_When_Shot_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_Return_Custom_When_Shot_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_Return_Custom_When_Shot_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_Return_Custom_When_Shot_Registrant@@3V?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@A ; JMG_Return_Custom_When_Shot_Registrant
	call	??1?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_Return_Custom_When_Shot_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_Return_Custom_When_Shot_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_Return_Custom_When_Shot_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_Return_Custom_When_Shot_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_Return_Custom_When_Shot_Registrant'', COMDAT

; 4439 : ScriptRegistrant<JMG_Return_Custom_When_Shot> JMG_Return_Custom_When_Shot_Registrant("JMG_Return_Custom_When_Shot","");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BM@EIAAOEBK@JMG_Return_Custom_When_Shot?$AA@
	mov	ecx, OFFSET ?JMG_Return_Custom_When_Shot_Registrant@@3V?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@A ; JMG_Return_Custom_When_Shot_Registrant
	call	??0?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::ScriptRegistrant<JMG_Return_Custom_When_Shot>
	push	OFFSET ??__FJMG_Return_Custom_When_Shot_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_Return_Custom_When_Shot_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_Return_Custom_When_Shot_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_Return_Custom_When_Shot_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::~ScriptRegistrant<JMG_Return_Custom_When_Shot>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::~ScriptRegistrant<JMG_Return_Custom_When_Shot>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DM@CDLJMKLF@ScriptRegistrant?$DMclass?5JMG_Retur@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_Return_Custom_When_Shot@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::ScriptRegistrant<JMG_Return_Custom_When_Shot>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_Return_Custom_When_Shot@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_Return_Custom_When_Shot>::ScriptRegistrant<JMG_Return_Custom_When_Shot>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_Ship_Weapon_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_Ship_Weapon_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'JMG_Ship_Weapon_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_Ship_Weapon_Registrant@@3V?$ScriptRegistrant@VJMG_Ship_Weapon@@@@A ; JMG_Ship_Weapon_Registrant
	call	??1?$ScriptRegistrant@VJMG_Ship_Weapon@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_Ship_Weapon_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'JMG_Ship_Weapon_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_Ship_Weapon_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_Ship_Weapon_Registrant@@YAXXZ PROC		; `dynamic initializer for 'JMG_Ship_Weapon_Registrant'', COMDAT

; 4438 : ScriptRegistrant<JMG_Ship_Weapon> JMG_Ship_Weapon_Registrant("JMG_Ship_Weapon","");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BA@MMIEMBHJ@JMG_Ship_Weapon?$AA@
	mov	ecx, OFFSET ?JMG_Ship_Weapon_Registrant@@3V?$ScriptRegistrant@VJMG_Ship_Weapon@@@@A ; JMG_Ship_Weapon_Registrant
	call	??0?$ScriptRegistrant@VJMG_Ship_Weapon@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Ship_Weapon>::ScriptRegistrant<JMG_Ship_Weapon>
	push	OFFSET ??__FJMG_Ship_Weapon_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_Ship_Weapon_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_Ship_Weapon_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'JMG_Ship_Weapon_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_Ship_Weapon@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_Ship_Weapon@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_Ship_Weapon>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_Ship_Weapon@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_Ship_Weapon@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_Ship_Weapon>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_Ship_Weapon@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_Ship_Weapon@@@@UAE@XZ PROC	; ScriptRegistrant<JMG_Ship_Weapon>::~ScriptRegistrant<JMG_Ship_Weapon>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_Ship_Weapon@@@@UAE@XZ ENDP	; ScriptRegistrant<JMG_Ship_Weapon>::~ScriptRegistrant<JMG_Ship_Weapon>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_Ship_Weapon@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_Ship_Weapon@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_Ship_Weapon>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DA@LIJAAGCL@ScriptRegistrant?$DMclass?5JMG_Ship_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_Ship_Weapon@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_Ship_Weapon@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_Ship_Weapon>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_Ship_Weapon@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_Ship_Weapon@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_Ship_Weapon>::ScriptRegistrant<JMG_Ship_Weapon>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_Ship_Weapon@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_Ship_Weapon@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_Ship_Weapon>::ScriptRegistrant<JMG_Ship_Weapon>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_Random_Music_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_Random_Music_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'JMG_Random_Music_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_Random_Music_Registrant@@3V?$ScriptRegistrant@VJMG_Random_Music@@@@A ; JMG_Random_Music_Registrant
	call	??1?$ScriptRegistrant@VJMG_Random_Music@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_Random_Music_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'JMG_Random_Music_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_Random_Music_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_Random_Music_Registrant@@YAXXZ PROC		; `dynamic initializer for 'JMG_Random_Music_Registrant'', COMDAT

; 4437 : ScriptRegistrant<JMG_Random_Music> JMG_Random_Music_Registrant("JMG_Random_Music","Song1:string,Song1Time:float,Song2:string,Song2Time:float,Song3:string,Song3Time:float");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0FH@IANBPFPH@Song1?3string?0Song1Time?3float?0Son@
	push	OFFSET ??_C@_0BB@LBKFGDNM@JMG_Random_Music?$AA@
	mov	ecx, OFFSET ?JMG_Random_Music_Registrant@@3V?$ScriptRegistrant@VJMG_Random_Music@@@@A ; JMG_Random_Music_Registrant
	call	??0?$ScriptRegistrant@VJMG_Random_Music@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Random_Music>::ScriptRegistrant<JMG_Random_Music>
	push	OFFSET ??__FJMG_Random_Music_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_Random_Music_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_Random_Music_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'JMG_Random_Music_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_Random_Music@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_Random_Music@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_Random_Music>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_Random_Music@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_Random_Music@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_Random_Music>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_Random_Music@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_Random_Music@@@@UAE@XZ PROC	; ScriptRegistrant<JMG_Random_Music>::~ScriptRegistrant<JMG_Random_Music>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_Random_Music@@@@UAE@XZ ENDP	; ScriptRegistrant<JMG_Random_Music>::~ScriptRegistrant<JMG_Random_Music>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_Random_Music@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_Random_Music@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_Random_Music>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DB@PKHMAGHK@ScriptRegistrant?$DMclass?5JMG_Rando@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_Random_Music@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_Random_Music@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_Random_Music>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_Random_Music@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_Random_Music@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_Random_Music>::ScriptRegistrant<JMG_Random_Music>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_Random_Music@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_Random_Music@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_Random_Music>::ScriptRegistrant<JMG_Random_Music>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_Ship_Random_Hyperspace_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_Ship_Random_Hyperspace_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_Ship_Random_Hyperspace_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_Ship_Random_Hyperspace_Registrant@@3V?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@A ; JMG_Ship_Random_Hyperspace_Registrant
	call	??1?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_Ship_Random_Hyperspace_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_Ship_Random_Hyperspace_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_Ship_Random_Hyperspace_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_Ship_Random_Hyperspace_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_Ship_Random_Hyperspace_Registrant'', COMDAT

; 4436 : ScriptRegistrant<JMG_Ship_Random_Hyperspace> JMG_Ship_Random_Hyperspace_Registrant("JMG_Ship_Random_Hyperspace","HyperspacingModel=cometbshs:string,HyperSpaceSound=Ship_Teleport:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0EI@GPBNBBEO@HyperspacingModel?$DNcometbshs?3stri@
	push	OFFSET ??_C@_0BL@PAOMGHPC@JMG_Ship_Random_Hyperspace?$AA@
	mov	ecx, OFFSET ?JMG_Ship_Random_Hyperspace_Registrant@@3V?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@A ; JMG_Ship_Random_Hyperspace_Registrant
	call	??0?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::ScriptRegistrant<JMG_Ship_Random_Hyperspace>
	push	OFFSET ??__FJMG_Ship_Random_Hyperspace_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_Ship_Random_Hyperspace_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_Ship_Random_Hyperspace_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_Ship_Random_Hyperspace_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::~ScriptRegistrant<JMG_Ship_Random_Hyperspace>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::~ScriptRegistrant<JMG_Ship_Random_Hyperspace>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DL@BFEIIILC@ScriptRegistrant?$DMclass?5JMG_Ship_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_Ship_Random_Hyperspace@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::ScriptRegistrant<JMG_Ship_Random_Hyperspace>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_Ship_Random_Hyperspace@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_Ship_Random_Hyperspace>::ScriptRegistrant<JMG_Ship_Random_Hyperspace>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_Advanced_Bounce_Zone_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_Advanced_Bounce_Zone_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_Advanced_Bounce_Zone_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_Advanced_Bounce_Zone_Registrant@@3V?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@A ; JMG_Advanced_Bounce_Zone_Registrant
	call	??1?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_Advanced_Bounce_Zone_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_Advanced_Bounce_Zone_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_Advanced_Bounce_Zone_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_Advanced_Bounce_Zone_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_Advanced_Bounce_Zone_Registrant'', COMDAT

; 4435 : ScriptRegistrant<JMG_Advanced_Bounce_Zone> JMG_Advanced_Bounce_Zone_Registrant("JMG_Advanced_Bounce_Zone","XAmount=0:float,YAmount=0:float,ZAmount=0:float");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0DA@FEHDLNFG@XAmount?$DN0?3float?0YAmount?$DN0?3float?0@
	push	OFFSET ??_C@_0BJ@GEFDPELA@JMG_Advanced_Bounce_Zone?$AA@
	mov	ecx, OFFSET ?JMG_Advanced_Bounce_Zone_Registrant@@3V?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@A ; JMG_Advanced_Bounce_Zone_Registrant
	call	??0?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::ScriptRegistrant<JMG_Advanced_Bounce_Zone>
	push	OFFSET ??__FJMG_Advanced_Bounce_Zone_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_Advanced_Bounce_Zone_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_Advanced_Bounce_Zone_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_Advanced_Bounce_Zone_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::~ScriptRegistrant<JMG_Advanced_Bounce_Zone>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::~ScriptRegistrant<JMG_Advanced_Bounce_Zone>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DJ@LJGDPKPO@ScriptRegistrant?$DMclass?5JMG_Advan@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_Advanced_Bounce_Zone@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::ScriptRegistrant<JMG_Advanced_Bounce_Zone>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_Advanced_Bounce_Zone@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_Advanced_Bounce_Zone>::ScriptRegistrant<JMG_Advanced_Bounce_Zone>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FJMG_Create_Ship_On_Poke_Registrant@@YAXXZ
text$yd	SEGMENT
??__FJMG_Create_Ship_On_Poke_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'JMG_Create_Ship_On_Poke_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?JMG_Create_Ship_On_Poke_Registrant@@3V?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@A ; JMG_Create_Ship_On_Poke_Registrant
	call	??1?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FJMG_Create_Ship_On_Poke_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'JMG_Create_Ship_On_Poke_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__EJMG_Create_Ship_On_Poke_Registrant@@YAXXZ
text$yc	SEGMENT
??__EJMG_Create_Ship_On_Poke_Registrant@@YAXXZ PROC	; `dynamic initializer for 'JMG_Create_Ship_On_Poke_Registrant'', COMDAT

; 4434 : ScriptRegistrant<JMG_Create_Ship_On_Poke> JMG_Create_Ship_On_Poke_Registrant("JMG_Create_Ship_On_Poke","CreateSpot:vector3,ShipPreset=Comet_Busters_Ship_Blue:string,SpawnSpotExplosion=Explosion_Clear_Spawn_Point:string,InvisibleObject=Invisible_Spectator_Box:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0KC@KACPIFJF@CreateSpot?3vector3?0ShipPreset?$DNCo@
	push	OFFSET ??_C@_0BI@OCLAMLOP@JMG_Create_Ship_On_Poke?$AA@
	mov	ecx, OFFSET ?JMG_Create_Ship_On_Poke_Registrant@@3V?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@A ; JMG_Create_Ship_On_Poke_Registrant
	call	??0?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@QAE@PBD0@Z ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::ScriptRegistrant<JMG_Create_Ship_On_Poke>
	push	OFFSET ??__FJMG_Create_Ship_On_Poke_Registrant@@YAXXZ ; `dynamic atexit destructor for 'JMG_Create_Ship_On_Poke_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EJMG_Create_Ship_On_Poke_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'JMG_Create_Ship_On_Poke_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@UAEPAXI@Z PROC ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@UAE@XZ PROC ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::~ScriptRegistrant<JMG_Create_Ship_On_Poke>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@UAE@XZ ENDP ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::~ScriptRegistrant<JMG_Create_Ship_On_Poke>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DI@KILFNNFD@ScriptRegistrant?$DMclass?5JMG_Creat@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0JMG_Create_Ship_On_Poke@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::ScriptRegistrant<JMG_Create_Ship_On_Poke>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VJMG_Create_Ship_On_Poke@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<JMG_Create_Ship_On_Poke>::ScriptRegistrant<JMG_Create_Ship_On_Poke>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdio.h
;	COMDAT ??$sprintf_s@$0CA@@@YAHAAY0CA@DPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Dest$ = 8						; size = 4
__Format$ = 12						; size = 4
??$sprintf_s@$0CA@@@YAHAAY0CA@DPBDZZ PROC		; sprintf_s<32>, COMDAT

; 309  : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(int, sprintf_s, vsprintf_s, _Post_z_ char, _Dest, _In_z_ _Printf_format_string_ const char *, _Format)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	push	32					; 00000020H
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	DWORD PTR __imp__vsprintf_s
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$sprintf_s@$0CA@@@YAHAAY0CA@DPBDZZ ENDP		; sprintf_s<32>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?JMG_CMTB_Random_Ship_Powerup@@YAPAVScriptableGameObj@@VVector3@@H@Z
_TEXT	SEGMENT
tv269 = -280						; size = 4
tv253 = -280						; size = 4
tv242 = -280						; size = 4
tv231 = -280						; size = 4
tv221 = -280						; size = 4
tv209 = -280						; size = 4
tv198 = -280						; size = 4
_params$ = -212						; size = 200
_Random$ = -12						; size = 4
_PowerupType$ = -8					; size = 4
_Powerup$ = -4						; size = 4
_Position$ = 8						; size = 12
_LifeTime$ = 20						; size = 4
?JMG_CMTB_Random_Ship_Powerup@@YAPAVScriptableGameObj@@VVector3@@H@Z PROC ; JMG_CMTB_Random_Ship_Powerup, COMDAT

; 609  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi

; 610  : 	Position.Z = 0.25f;

	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR _Position$[ebp+8], xmm0

; 611  : 	GameObject *Powerup = Commands->Create_Object("CMTB_Powerup_Object",Position);

	lea	eax, DWORD PTR _Position$[ebp]
	push	eax
	push	OFFSET ??_C@_0BE@IAPNGHEF@CMTB_Powerup_Object?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Powerup$[ebp], eax

; 612  : 	int PowerupType = 0;

	mov	DWORD PTR _PowerupType$[ebp], 0

; 613  : 	float Random = Commands->Get_Random(0.0f,1.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR _Random$[ebp]

; 614  : 	if (Commands->Get_Random(0.0f,1.0f) > 0.94f)

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv198[ebp]
	movss	xmm0, DWORD PTR tv198[ebp]
	comiss	xmm0, DWORD PTR __real@3f70a3d7
	jbe	$LN34@JMG_CMTB_R

; 615  : 		if (Random < 0.33)

	cvtss2sd xmm0, DWORD PTR _Random$[ebp]
	movsd	xmm1, QWORD PTR __real@3fd51eb851eb851f
	comisd	xmm1, xmm0
	jbe	SHORT $LN33@JMG_CMTB_R

; 616  : 			if (Commands->Get_Random(0.0f,1.0f) < 0.75f)

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv209[ebp]
	movss	xmm0, DWORD PTR __real@3f400000
	comiss	xmm0, DWORD PTR tv209[ebp]
	jbe	SHORT $LN32@JMG_CMTB_R

; 617  : 				PowerupType = 10;

	mov	DWORD PTR _PowerupType$[ebp], 10	; 0000000aH

; 618  : 			else

	jmp	SHORT $LN31@JMG_CMTB_R
$LN32@JMG_CMTB_R:

; 619  : 				PowerupType = 14;

	mov	DWORD PTR _PowerupType$[ebp], 14	; 0000000eH
$LN31@JMG_CMTB_R:
	jmp	$LN24@JMG_CMTB_R
$LN33@JMG_CMTB_R:

; 620  : 		else if (Random < 0.66)

	cvtss2sd xmm0, DWORD PTR _Random$[ebp]
	movsd	xmm1, QWORD PTR __real@3fe51eb851eb851f
	comisd	xmm1, xmm0
	jbe	SHORT $LN29@JMG_CMTB_R

; 621  : 		{
; 622  : 			if (Commands->Get_Random(0.0f,1.0f) > 0.75f)

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv221[ebp]
	movss	xmm0, DWORD PTR tv221[ebp]
	comiss	xmm0, DWORD PTR __real@3f400000
	jbe	SHORT $LN28@JMG_CMTB_R

; 623  : 				PowerupType = 11;

	mov	DWORD PTR _PowerupType$[ebp], 11	; 0000000bH

; 624  : 			else

	jmp	SHORT $LN27@JMG_CMTB_R
$LN28@JMG_CMTB_R:

; 625  : 				PowerupType = 13;

	mov	DWORD PTR _PowerupType$[ebp], 13	; 0000000dH
$LN27@JMG_CMTB_R:

; 626  : 		}
; 627  : 		else

	jmp	SHORT $LN24@JMG_CMTB_R
$LN29@JMG_CMTB_R:

; 628  : 			if (Commands->Get_Random(0.0f,1.0f) < 0.5)

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv231[ebp]
	movss	xmm0, DWORD PTR tv231[ebp]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN25@JMG_CMTB_R

; 629  : 				PowerupType = 12;

	mov	DWORD PTR _PowerupType$[ebp], 12	; 0000000cH

; 630  : 			else

	jmp	SHORT $LN24@JMG_CMTB_R
$LN25@JMG_CMTB_R:

; 631  : 				PowerupType = 16;

	mov	DWORD PTR _PowerupType$[ebp], 16	; 00000010H
$LN24@JMG_CMTB_R:
	jmp	$LN1@JMG_CMTB_R
$LN34@JMG_CMTB_R:

; 632  : 	else if (Commands->Get_Random(0.0f,1.0f) < 0.97)

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv242[ebp]
	movss	xmm0, DWORD PTR tv242[ebp]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3fef0a3d70a3d70a
	comisd	xmm1, xmm0
	jbe	$LN22@JMG_CMTB_R

; 633  : 		if (Commands->Get_Random(0.0f,1.0f) < 0.4)

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv253[ebp]
	movss	xmm0, DWORD PTR tv253[ebp]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3fd999999999999a
	comisd	xmm1, xmm0
	jbe	SHORT $LN21@JMG_CMTB_R

; 634  : 			if (Random < 0.75)

	cvtss2sd xmm0, DWORD PTR _Random$[ebp]
	movsd	xmm1, QWORD PTR __real@3fe8000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN20@JMG_CMTB_R

; 635  : 				PowerupType = 0;

	mov	DWORD PTR _PowerupType$[ebp], 0
	jmp	SHORT $LN17@JMG_CMTB_R
$LN20@JMG_CMTB_R:

; 636  : 			else if (Random < 0.9)

	cvtss2sd xmm0, DWORD PTR _Random$[ebp]
	movsd	xmm1, QWORD PTR __real@3feccccccccccccd
	comisd	xmm1, xmm0
	jbe	SHORT $LN18@JMG_CMTB_R

; 637  : 				PowerupType = 1;

	mov	DWORD PTR _PowerupType$[ebp], 1

; 638  : 			else

	jmp	SHORT $LN17@JMG_CMTB_R
$LN18@JMG_CMTB_R:

; 639  : 				PowerupType = 2;

	mov	DWORD PTR _PowerupType$[ebp], 2
$LN17@JMG_CMTB_R:

; 640  : 		else

	jmp	SHORT $LN10@JMG_CMTB_R
$LN21@JMG_CMTB_R:

; 641  : 			if (Random < 0.5)

	cvtss2sd xmm0, DWORD PTR _Random$[ebp]
	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN15@JMG_CMTB_R

; 642  : 				PowerupType = 6;

	mov	DWORD PTR _PowerupType$[ebp], 6
	jmp	SHORT $LN10@JMG_CMTB_R
$LN15@JMG_CMTB_R:

; 643  : 			else if (Random < 0.8)

	cvtss2sd xmm0, DWORD PTR _Random$[ebp]
	movsd	xmm1, QWORD PTR __real@3fe999999999999a
	comisd	xmm1, xmm0
	jbe	SHORT $LN13@JMG_CMTB_R

; 644  : 				PowerupType = 7;

	mov	DWORD PTR _PowerupType$[ebp], 7
	jmp	SHORT $LN10@JMG_CMTB_R
$LN13@JMG_CMTB_R:

; 645  : 			else if (Random < 0.95)

	cvtss2sd xmm0, DWORD PTR _Random$[ebp]
	movsd	xmm1, QWORD PTR __real@3fee666666666666
	comisd	xmm1, xmm0
	jbe	SHORT $LN11@JMG_CMTB_R

; 646  : 				PowerupType = 8;

	mov	DWORD PTR _PowerupType$[ebp], 8

; 647  : 			else

	jmp	SHORT $LN10@JMG_CMTB_R
$LN11@JMG_CMTB_R:

; 648  : 				PowerupType = 9;

	mov	DWORD PTR _PowerupType$[ebp], 9
$LN10@JMG_CMTB_R:
	jmp	$LN1@JMG_CMTB_R
$LN22@JMG_CMTB_R:

; 649  : 	else if (Commands->Get_Random(0.0f,1.0f) < 95.0f)

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv269[ebp]
	movss	xmm0, DWORD PTR __real@42be0000
	comiss	xmm0, DWORD PTR tv269[ebp]
	jbe	SHORT $LN8@JMG_CMTB_R

; 650  : 		if (Random < 0.40)

	cvtss2sd xmm0, DWORD PTR _Random$[ebp]
	movsd	xmm1, QWORD PTR __real@3fd999999999999a
	comisd	xmm1, xmm0
	jbe	SHORT $LN7@JMG_CMTB_R

; 651  : 			PowerupType = 15;

	mov	DWORD PTR _PowerupType$[ebp], 15	; 0000000fH
	jmp	SHORT $LN2@JMG_CMTB_R
$LN7@JMG_CMTB_R:

; 652  : 		else if (Random < 0.70)

	cvtss2sd xmm0, DWORD PTR _Random$[ebp]
	movsd	xmm1, QWORD PTR __real@3fe6666666666666
	comisd	xmm1, xmm0
	jbe	SHORT $LN5@JMG_CMTB_R

; 653  : 			PowerupType = 3;

	mov	DWORD PTR _PowerupType$[ebp], 3
	jmp	SHORT $LN2@JMG_CMTB_R
$LN5@JMG_CMTB_R:

; 654  : 		else if (Random < 0.90)

	cvtss2sd xmm0, DWORD PTR _Random$[ebp]
	movsd	xmm1, QWORD PTR __real@3feccccccccccccd
	comisd	xmm1, xmm0
	jbe	SHORT $LN3@JMG_CMTB_R

; 655  : 			PowerupType = 4;

	mov	DWORD PTR _PowerupType$[ebp], 4

; 656  : 		else

	jmp	SHORT $LN2@JMG_CMTB_R
$LN3@JMG_CMTB_R:

; 657  : 			PowerupType = 5;

	mov	DWORD PTR _PowerupType$[ebp], 5
$LN2@JMG_CMTB_R:

; 658  : 	else

	jmp	SHORT $LN1@JMG_CMTB_R
$LN8@JMG_CMTB_R:

; 659  : 		PowerupType = 5;

	mov	DWORD PTR _PowerupType$[ebp], 5
$LN1@JMG_CMTB_R:

; 660  : 	char params[200];
; 661  : 	sprintf(params,"%d,%d",PowerupType,LifeTime);

	mov	eax, DWORD PTR _LifeTime$[ebp]
	push	eax
	mov	ecx, DWORD PTR _PowerupType$[ebp]
	push	ecx
	push	OFFSET ??_C@_05KABNCBHK@?$CFd?0?$CFd?$AA@
	lea	edx, DWORD PTR _params$[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 662  : 	Commands->Attach_Script(Powerup,"JMG_CMTB_Powerup_Script",params);

	lea	eax, DWORD PTR _params$[ebp]
	push	eax
	push	OFFSET ??_C@_0BI@KMNMLLME@JMG_CMTB_Powerup_Script?$AA@
	mov	ecx, DWORD PTR _Powerup$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+120]
	call	eax
	add	esp, 12					; 0000000cH

; 663  : 	return Powerup;

	mov	eax, DWORD PTR _Powerup$[ebp]

; 664  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?JMG_CMTB_Random_Ship_Powerup@@YAPAVScriptableGameObj@@VVector3@@H@Z ENDP ; JMG_CMTB_Random_Ship_Powerup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRenCometBustersList@@YAXXZ
text$yd	SEGMENT
??__FRenCometBustersList@@YAXXZ PROC			; `dynamic atexit destructor for 'RenCometBustersList'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??1RenCometBustersGameObjects@@QAE@XZ	; RenCometBustersGameObjects::~RenCometBustersGameObjects
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRenCometBustersList@@YAXXZ ENDP			; `dynamic atexit destructor for 'RenCometBustersList''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ??__ERenCometBustersList@@YAXXZ
text$yc	SEGMENT
??__ERenCometBustersList@@YAXXZ PROC			; `dynamic initializer for 'RenCometBustersList'', COMDAT

; 607  : RenCometBustersGameObjects RenCometBustersList = RenCometBustersGameObjects();

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??0RenCometBustersGameObjects@@QAE@XZ	; RenCometBustersGameObjects::RenCometBustersGameObjects
	push	OFFSET ??__FRenCometBustersList@@YAXXZ	; `dynamic atexit destructor for 'RenCometBustersList''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERenCometBustersList@@YAXXZ ENDP			; `dynamic initializer for 'RenCometBustersList''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_Poke_Change_Difficulty@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_Poke_Change_Difficulty@@UAEPAXI@Z PROC	; JMG_CMTB_Poke_Change_Difficulty::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_Poke_Change_Difficulty@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_Poke_Change_Difficulty@@UAEPAXI@Z ENDP	; JMG_CMTB_Poke_Change_Difficulty::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_Poke_Change_Difficulty@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_Poke_Change_Difficulty@@UAE@XZ PROC		; JMG_CMTB_Poke_Change_Difficulty::~JMG_CMTB_Poke_Change_Difficulty, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_Poke_Change_Difficulty@@UAE@XZ ENDP		; JMG_CMTB_Poke_Change_Difficulty::~JMG_CMTB_Poke_Change_Difficulty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_Poke_Change_Difficulty@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_Poke_Change_Difficulty@@QAE@XZ PROC		; JMG_CMTB_Poke_Change_Difficulty::JMG_CMTB_Poke_Change_Difficulty, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_Poke_Change_Difficulty@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_Poke_Change_Difficulty@@QAE@XZ ENDP		; JMG_CMTB_Poke_Change_Difficulty::JMG_CMTB_Poke_Change_Difficulty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Poked@JMG_CMTB_Poke_Change_Difficulty@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
tv92 = -96						; size = 4
$T1 = -92						; size = 12
_soundPos$ = -16					; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_poker$ = 12						; size = 4
?Poked@JMG_CMTB_Poke_Change_Difficulty@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_CMTB_Poke_Change_Difficulty::Poked, COMDAT
; _this$ = ecx

; 4384 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4385 : 	if (JMG_CMTB_Main_Game_Control::GameInProgress)

	movzx	eax, BYTE PTR ?GameInProgress@JMG_CMTB_Main_Game_Control@@2_NA ; JMG_CMTB_Main_Game_Control::GameInProgress
	test	eax, eax
	je	SHORT $LN8@Poked

; 4386 : 	{
; 4387 : 		JmgUtility::DisplayChatMessage(poker,0,255,0,"Please wait for the current game to end before pulling the switch.");

	push	OFFSET ??_C@_0ED@HKPPECPO@Please?5wait?5for?5the?5current?5game@
	push	0
	push	255					; 000000ffH
	push	0
	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 4388 : 		return;

	jmp	$LN9@Poked
$LN8@Poked:

; 4389 : 	}
; 4390 : 	Vector3 soundPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _soundPos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 4391 : 	soundPos.Z += 1.25f;

	movss	xmm0, DWORD PTR _soundPos$[ebp+8]
	addss	xmm0, DWORD PTR __real@3fa00000
	movss	DWORD PTR _soundPos$[ebp+8], xmm0

; 4392 : 	Commands->Create_Sound("SFX.Comet_Busters_Flip_Switch",soundPos,obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR _soundPos$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BO@PHHNAANH@SFX?4Comet_Busters_Flip_Switch?$AA@
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+172]
	call	eax
	add	esp, 12					; 0000000cH

; 4393 : 	difficulty++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], ecx

; 4394 : 	if (difficulty >= 4)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 4
	jl	SHORT $LN7@Poked

; 4395 : 		difficulty = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN7@Poked:

; 4396 : 	RenCometBustersScoreControl.SaveData();

	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?SaveData@RenCometBustersScoreSystem@@QAEXXZ ; RenCometBustersScoreSystem::SaveData

; 4397 : 	RenCometBustersScoreControl.Cleanup();

	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Cleanup@RenCometBustersScoreSystem@@QAEXXZ ; RenCometBustersScoreSystem::Cleanup

; 4398 : 	switch (difficulty)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR tv92[ebp], ecx
	cmp	DWORD PTR tv92[ebp], 3
	ja	$LN5@Poked
	mov	edx, DWORD PTR tv92[ebp]
	jmp	DWORD PTR $LN11@Poked[edx*4]
$LN4@Poked:

; 4399 : 	{
; 4400 : 	case 0:
; 4401 : 		Commands->Set_Animation(obj,"powerbox2.powerbox2",false,0,0.0f,0.0f,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BE@GHIJNOGP@powerbox2?4powerbox2?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 4402 : 		JMG_CMTB_Main_Game_Control::DifficultyMultiplier = 0.5f;

	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR ?DifficultyMultiplier@JMG_CMTB_Main_Game_Control@@2MA, xmm0

; 4403 : 		JMG_CMTB_Main_Game_Control::DifficultyMultiplierMine = 0.75f;

	movss	xmm0, DWORD PTR __real@3f400000
	movss	DWORD PTR ?DifficultyMultiplierMine@JMG_CMTB_Main_Game_Control@@2MA, xmm0

; 4404 : 		JMG_CMTB_Main_Game_Control::DifficultyMultiplierInv = 2.0f;

	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR ?DifficultyMultiplierInv@JMG_CMTB_Main_Game_Control@@2MA, xmm0

; 4405 : 		RenCometBustersScoreControl.LoadData(0);

	push	0
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?LoadData@RenCometBustersScoreSystem@@QAEXH@Z ; RenCometBustersScoreSystem::LoadData

; 4406 : 		JmgUtility::MessageAllPlayers(6,145,148,"[DIFFICULTY SET TO EASY]");

	push	OFFSET ??_C@_0BJ@DBOAFGKG@?$FLDIFFICULTY?5SET?5TO?5EASY?$FN?$AA@
	push	148					; 00000094H
	push	145					; 00000091H
	push	6
	call	?MessageAllPlayers@JmgUtility@@SAXHHHPBD@Z ; JmgUtility::MessageAllPlayers
	add	esp, 16					; 00000010H

; 4407 : 		break;

	jmp	$LN5@Poked
$LN3@Poked:

; 4408 : 	case 1:
; 4409 : 		Commands->Set_Animation(obj,"powerbox2.powerbox2",false,0,1.0f,1.0f,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BE@GHIJNOGP@powerbox2?4powerbox2?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 4410 : 		JMG_CMTB_Main_Game_Control::DifficultyMultiplier = 1.0f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ?DifficultyMultiplier@JMG_CMTB_Main_Game_Control@@2MA, xmm0

; 4411 : 		JMG_CMTB_Main_Game_Control::DifficultyMultiplierMine = 1.0f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ?DifficultyMultiplierMine@JMG_CMTB_Main_Game_Control@@2MA, xmm0

; 4412 : 		JMG_CMTB_Main_Game_Control::DifficultyMultiplierInv = 1.0f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ?DifficultyMultiplierInv@JMG_CMTB_Main_Game_Control@@2MA, xmm0

; 4413 : 		RenCometBustersScoreControl.LoadData(1);

	push	1
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?LoadData@RenCometBustersScoreSystem@@QAEXH@Z ; RenCometBustersScoreSystem::LoadData

; 4414 : 		JmgUtility::MessageAllPlayers(6,145,148,"DIFFICULTY SET TO NORMAL]");

	push	OFFSET ??_C@_0BK@HNDBPDLA@DIFFICULTY?5SET?5TO?5NORMAL?$FN?$AA@
	push	148					; 00000094H
	push	145					; 00000091H
	push	6
	call	?MessageAllPlayers@JmgUtility@@SAXHHHPBD@Z ; JmgUtility::MessageAllPlayers
	add	esp, 16					; 00000010H

; 4415 : 		break;

	jmp	$LN5@Poked
$LN2@Poked:

; 4416 : 	case 2:
; 4417 : 		Commands->Set_Animation(obj,"powerbox2.powerbox2",false,0,2.0f,2.0f,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BE@GHIJNOGP@powerbox2?4powerbox2?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 4418 : 		JMG_CMTB_Main_Game_Control::DifficultyMultiplier = 2.0f;

	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR ?DifficultyMultiplier@JMG_CMTB_Main_Game_Control@@2MA, xmm0

; 4419 : 		JMG_CMTB_Main_Game_Control::DifficultyMultiplierMine = 1.5f;

	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR ?DifficultyMultiplierMine@JMG_CMTB_Main_Game_Control@@2MA, xmm0

; 4420 : 		JMG_CMTB_Main_Game_Control::DifficultyMultiplierInv = 0.75f;

	movss	xmm0, DWORD PTR __real@3f400000
	movss	DWORD PTR ?DifficultyMultiplierInv@JMG_CMTB_Main_Game_Control@@2MA, xmm0

; 4421 : 		RenCometBustersScoreControl.LoadData(2);

	push	2
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?LoadData@RenCometBustersScoreSystem@@QAEXH@Z ; RenCometBustersScoreSystem::LoadData

; 4422 : 		JmgUtility::MessageAllPlayers(6,145,148,"[DIFFICULTY SET TO HARD]");

	push	OFFSET ??_C@_0BJ@CBDMBCDO@?$FLDIFFICULTY?5SET?5TO?5HARD?$FN?$AA@
	push	148					; 00000094H
	push	145					; 00000091H
	push	6
	call	?MessageAllPlayers@JmgUtility@@SAXHHHPBD@Z ; JmgUtility::MessageAllPlayers
	add	esp, 16					; 00000010H

; 4423 : 		break;

	jmp	$LN5@Poked
$LN1@Poked:

; 4424 : 	case 3:
; 4425 : 		Commands->Set_Animation(obj,"powerbox2.powerbox2",false,0,3.0f,3.0f,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BE@GHIJNOGP@powerbox2?4powerbox2?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 4426 : 		JMG_CMTB_Main_Game_Control::DifficultyMultiplier = 3.0f;

	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR ?DifficultyMultiplier@JMG_CMTB_Main_Game_Control@@2MA, xmm0

; 4427 : 		JMG_CMTB_Main_Game_Control::DifficultyMultiplierMine = 2.0f;

	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR ?DifficultyMultiplierMine@JMG_CMTB_Main_Game_Control@@2MA, xmm0

; 4428 : 		JMG_CMTB_Main_Game_Control::DifficultyMultiplierInv = 0.5f;

	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR ?DifficultyMultiplierInv@JMG_CMTB_Main_Game_Control@@2MA, xmm0

; 4429 : 		RenCometBustersScoreControl.LoadData(3);

	push	3
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?LoadData@RenCometBustersScoreSystem@@QAEXH@Z ; RenCometBustersScoreSystem::LoadData

; 4430 : 		JmgUtility::MessageAllPlayers(6,145,148,"[DIFFICULTY SET TO DOOMSDAY]");

	push	OFFSET ??_C@_0BN@EILNFNJP@?$FLDIFFICULTY?5SET?5TO?5DOOMSDAY?$FN?$AA@
	push	148					; 00000094H
	push	145					; 00000091H
	push	6
	call	?MessageAllPlayers@JmgUtility@@SAXHHHPBD@Z ; JmgUtility::MessageAllPlayers
	add	esp, 16					; 00000010H
$LN5@Poked:
$LN9@Poked:

; 4431 : 		break;
; 4432 : 	}
; 4433 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN11@Poked:
	DD	$LN4@Poked
	DD	$LN3@Poked
	DD	$LN2@Poked
	DD	$LN1@Poked
?Poked@JMG_CMTB_Poke_Change_Difficulty@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_CMTB_Poke_Change_Difficulty::Poked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_Poke_Change_Difficulty@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_Poke_Change_Difficulty@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Poke_Change_Difficulty::Created, COMDAT
; _this$ = ecx

; 4376 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4377 : 	difficulty = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 1

; 4378 : 	JMG_CMTB_Main_Game_Control::DifficultyMultiplier = 1.0f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ?DifficultyMultiplier@JMG_CMTB_Main_Game_Control@@2MA, xmm0

; 4379 : 	JMG_CMTB_Main_Game_Control::DifficultyMultiplierMine = 1.0f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ?DifficultyMultiplierMine@JMG_CMTB_Main_Game_Control@@2MA, xmm0

; 4380 : 	JMG_CMTB_Main_Game_Control::DifficultyMultiplierInv = 1.0f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ?DifficultyMultiplierInv@JMG_CMTB_Main_Game_Control@@2MA, xmm0

; 4381 : 	Commands->Set_Animation(obj,"powerbox2.powerbox2",false,0,1.0,1.0,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BE@GHIJNOGP@powerbox2?4powerbox2?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 4382 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_CMTB_Poke_Change_Difficulty@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Poke_Change_Difficulty::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_Poke_End_Map@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_Poke_End_Map@@UAEPAXI@Z PROC		; JMG_CMTB_Poke_End_Map::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_Poke_End_Map@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_Poke_End_Map@@UAEPAXI@Z ENDP		; JMG_CMTB_Poke_End_Map::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_Poke_End_Map@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_Poke_End_Map@@UAE@XZ PROC			; JMG_CMTB_Poke_End_Map::~JMG_CMTB_Poke_End_Map, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_Poke_End_Map@@UAE@XZ ENDP			; JMG_CMTB_Poke_End_Map::~JMG_CMTB_Poke_End_Map
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_Poke_End_Map@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_Poke_End_Map@@QAE@XZ PROC			; JMG_CMTB_Poke_End_Map::JMG_CMTB_Poke_End_Map, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_Poke_End_Map@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_Poke_End_Map@@QAE@XZ ENDP			; JMG_CMTB_Poke_End_Map::JMG_CMTB_Poke_End_Map
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?FlipSwitch@JMG_CMTB_Poke_End_Map@@AAEXPAVScriptableGameObj@@M@Z
_TEXT	SEGMENT
$T1 = -92						; size = 12
_soundPos$ = -16					; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_frame$ = 12						; size = 4
?FlipSwitch@JMG_CMTB_Poke_End_Map@@AAEXPAVScriptableGameObj@@M@Z PROC ; JMG_CMTB_Poke_End_Map::FlipSwitch, COMDAT
; _this$ = ecx

; 4369 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4370 : 	Vector3 soundPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _soundPos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 4371 : 	soundPos.Z += 1.25f;

	movss	xmm0, DWORD PTR _soundPos$[ebp+8]
	addss	xmm0, DWORD PTR __real@3fa00000
	movss	DWORD PTR _soundPos$[ebp+8], xmm0

; 4372 : 	Commands->Create_Sound("SFX.Comet_Busters_Flip_Switch",soundPos,obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR _soundPos$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BO@PHHNAANH@SFX?4Comet_Busters_Flip_Switch?$AA@
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+172]
	call	eax
	add	esp, 12					; 0000000cH

; 4373 : 	Commands->Set_Animation(obj,"powerbox.powerbox",false,0,frame,frame,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR _frame$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _frame$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BC@KDBOOJDO@powerbox?4powerbox?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 4374 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?FlipSwitch@JMG_CMTB_Poke_End_Map@@AAEXPAVScriptableGameObj@@M@Z ENDP ; JMG_CMTB_Poke_End_Map::FlipSwitch
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_CMTB_Poke_End_Map@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_CMTB_Poke_End_Map@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_CMTB_Poke_End_Map::Timer_Expired, COMDAT
; _this$ = ecx

; 4350 : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4351 : 	if (number == 1)

	cmp	DWORD PTR _number$[ebp], 1
	jne	$LN5@Timer_Expi

; 4352 : 	{
; 4353 : 		if (startDelay)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN3@Timer_Expi

; 4354 : 		{
; 4355 : 			startDelay--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], ecx

; 4356 : 			if (!startDelay)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	SHORT $LN3@Timer_Expi

; 4357 : 				FlipSwitch(obj,2.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlipSwitch@JMG_CMTB_Poke_End_Map@@AAEXPAVScriptableGameObj@@M@Z ; JMG_CMTB_Poke_End_Map::FlipSwitch
$LN3@Timer_Expi:

; 4358 : 		}
; 4359 : 		if (time)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN1@Timer_Expi

; 4360 : 		{
; 4361 : 			time--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], ecx

; 4362 : 			if (!time)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN1@Timer_Expi

; 4363 : 				FlipSwitch(obj,2.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlipSwitch@JMG_CMTB_Poke_End_Map@@AAEXPAVScriptableGameObj@@M@Z ; JMG_CMTB_Poke_End_Map::FlipSwitch
$LN1@Timer_Expi:

; 4364 : 		}
; 4365 : 		Commands->Start_Timer(obj,this,1.0f,1);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN5@Timer_Expi:

; 4366 : 	}
; 4367 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_CMTB_Poke_End_Map@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_CMTB_Poke_End_Map::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Poked@JMG_CMTB_Poke_End_Map@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_startDelayMsg$1 = -224					; size = 220
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_poker$ = 12						; size = 4
?Poked@JMG_CMTB_Poke_End_Map@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_CMTB_Poke_End_Map::Poked, COMDAT
; _this$ = ecx

; 4321 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4322 : 	if (!JMG_CMTB_Main_Game_Control::EndGameSwitchEnabled)

	movzx	eax, BYTE PTR ?EndGameSwitchEnabled@JMG_CMTB_Main_Game_Control@@2_NA ; JMG_CMTB_Main_Game_Control::EndGameSwitchEnabled
	test	eax, eax
	jne	SHORT $LN4@Poked

; 4323 : 	{
; 4324 : 		JmgUtility::DisplayChatMessage(poker,0,255,0,"Sorry, this switch is not enabled.");

	push	OFFSET ??_C@_0CD@HIMCCADD@Sorry?0?5this?5switch?5is?5not?5enable@
	push	0
	push	255					; 000000ffH
	push	0
	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 4325 : 		return;

	jmp	$LN5@Poked
$LN4@Poked:

; 4326 : 	}
; 4327 : 	if (JMG_CMTB_Main_Game_Control::GameInProgress)

	movzx	eax, BYTE PTR ?GameInProgress@JMG_CMTB_Main_Game_Control@@2_NA ; JMG_CMTB_Main_Game_Control::GameInProgress
	test	eax, eax
	je	SHORT $LN3@Poked

; 4328 : 	{
; 4329 : 		JmgUtility::DisplayChatMessage(poker,0,255,0,"Please wait for the current game to end before pulling the switch.");

	push	OFFSET ??_C@_0ED@HKPPECPO@Please?5wait?5for?5the?5current?5game@
	push	0
	push	255					; 000000ffH
	push	0
	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 4330 : 		return;

	jmp	$LN5@Poked
$LN3@Poked:

; 4331 : 	}
; 4332 : 	if (startDelay)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN2@Poked

; 4333 : 	{
; 4334 : 		char startDelayMsg[220];
; 4335 : 		sprintf(startDelayMsg,"Please wait %d seconds before pulling the switch.",startDelay);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	push	OFFSET ??_C@_0DC@ILNDMLLJ@Please?5wait?5?$CFd?5seconds?5before?5pu@
	lea	edx, DWORD PTR _startDelayMsg$1[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 4336 : 		JmgUtility::DisplayChatMessage(poker,0,255,0,startDelayMsg);

	lea	eax, DWORD PTR _startDelayMsg$1[ebp]
	push	eax
	push	0
	push	255					; 000000ffH
	push	0
	mov	ecx, DWORD PTR _poker$[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 4337 : 		return;

	jmp	SHORT $LN5@Poked
$LN2@Poked:

; 4338 : 	}
; 4339 : 	if (time)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN1@Poked

; 4340 : 	{
; 4341 : 		FlipSwitch(obj,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlipSwitch@JMG_CMTB_Poke_End_Map@@AAEXPAVScriptableGameObj@@M@Z ; JMG_CMTB_Poke_End_Map::FlipSwitch

; 4342 : 		Console_Input("win 0");

	push	OFFSET ??_C@_05PAMKIGDK@win?50?$AA@
	call	?Console_Input@@YAXPBD@Z		; Console_Input
	add	esp, 4

; 4343 : 		return;

	jmp	SHORT $LN5@Poked
$LN1@Poked:

; 4344 : 	}
; 4345 : 	time = 5;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 5

; 4346 : 	JmgUtility::DisplayChatMessage(poker,0,255,0,"Pull the switch all the way down to proceed to the next map.");

	push	OFFSET ??_C@_0DN@IBAOBLKH@Pull?5the?5switch?5all?5the?5way?5down@
	push	0
	push	255					; 000000ffH
	push	0
	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 4347 : 	FlipSwitch(obj,1.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlipSwitch@JMG_CMTB_Poke_End_Map@@AAEXPAVScriptableGameObj@@M@Z ; JMG_CMTB_Poke_End_Map::FlipSwitch
$LN5@Poked:

; 4348 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Poked@JMG_CMTB_Poke_End_Map@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_CMTB_Poke_End_Map::Poked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_Poke_End_Map@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_Poke_End_Map@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Poke_End_Map::Created, COMDAT
; _this$ = ecx

; 4314 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4315 : 	Commands->Set_Animation(obj,"powerbox.powerbox",false,0,0.0,0.0,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BC@KDBOOJDO@powerbox?4powerbox?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 4316 : 	startDelay = 25;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 25			; 00000019H

; 4317 : 	time = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 4318 : 	Commands->Start_Timer(obj,this,1.0f,1);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 4319 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_CMTB_Poke_End_Map@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Poke_End_Map::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_Vehicle_Face_Turret@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_Vehicle_Face_Turret@@UAEPAXI@Z PROC	; JMG_CMTB_Vehicle_Face_Turret::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_Vehicle_Face_Turret@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_Vehicle_Face_Turret@@UAEPAXI@Z ENDP	; JMG_CMTB_Vehicle_Face_Turret::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_Vehicle_Face_Turret@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_Vehicle_Face_Turret@@UAE@XZ PROC		; JMG_CMTB_Vehicle_Face_Turret::~JMG_CMTB_Vehicle_Face_Turret, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_Vehicle_Face_Turret@@UAE@XZ ENDP		; JMG_CMTB_Vehicle_Face_Turret::~JMG_CMTB_Vehicle_Face_Turret
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_Vehicle_Face_Turret@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_Vehicle_Face_Turret@@QAE@XZ PROC		; JMG_CMTB_Vehicle_Face_Turret::JMG_CMTB_Vehicle_Face_Turret, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_Vehicle_Face_Turret@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_Vehicle_Face_Turret@@QAE@XZ ENDP		; JMG_CMTB_Vehicle_Face_Turret::JMG_CMTB_Vehicle_Face_Turret
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Destroyed@JMG_CMTB_Vehicle_Face_Turret@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_davesArrow$ = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@JMG_CMTB_Vehicle_Face_Turret@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Vehicle_Face_Turret::Destroyed, COMDAT
; _this$ = ecx

; 4308 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4309 : 	GameObject *davesArrow = Commands->Find_Object(davesArrowId);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _davesArrow$[ebp], eax

; 4310 : 	if (davesArrow)

	cmp	DWORD PTR _davesArrow$[ebp], 0
	je	SHORT $LN2@Destroyed

; 4311 : 		Commands->Destroy_Object(davesArrow);

	mov	eax, DWORD PTR _davesArrow$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN2@Destroyed:

; 4312 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Destroyed@JMG_CMTB_Vehicle_Face_Turret@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Vehicle_Face_Turret::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_CMTB_Vehicle_Face_Turret@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_davesArrow$1 = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_CMTB_Vehicle_Face_Turret@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_CMTB_Vehicle_Face_Turret::Timer_Expired, COMDAT
; _this$ = ecx

; 4298 : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4299 : 	if (number == 1)

	cmp	DWORD PTR _number$[ebp], 1
	jne	SHORT $LN2@Timer_Expi

; 4300 : 	{
; 4301 : 		GameObject *davesArrow = Commands->Find_Object(davesArrowId);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _davesArrow$1[ebp], eax

; 4302 : 		if (davesArrow)

	cmp	DWORD PTR _davesArrow$1[ebp], 0
	je	SHORT $LN1@Timer_Expi

; 4303 : 			Commands->Set_Facing(obj,Commands->Get_Facing(davesArrow));

	mov	eax, DWORD PTR _davesArrow$1[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+72]
	call	edx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+76]
	call	edx
	add	esp, 8
$LN1@Timer_Expi:

; 4304 : 		Commands->Start_Timer(obj,this,0.1f,1);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN2@Timer_Expi:

; 4305 : 	}
; 4306 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_CMTB_Vehicle_Face_Turret@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_CMTB_Vehicle_Face_Turret::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_Vehicle_Face_Turret@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
$T1 = -84						; size = 12
_DavesArrow$ = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_Vehicle_Face_Turret@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Vehicle_Face_Turret::Created, COMDAT
; _this$ = ecx

; 4290 : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4291 : 	GameObject *DavesArrow = Commands->Create_Object("Daves Arrow",Commands->Get_Position(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _DavesArrow$[ebp], eax

; 4292 : 	Commands->Attach_To_Object_Bone(DavesArrow,obj,"Turret");

	push	OFFSET ??_C@_06KJINBPNG@Turret?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _DavesArrow$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 4293 : 	Commands->Set_Model(DavesArrow,"null");

	push	OFFSET ??_C@_04MLLLIHIP@null?$AA@
	mov	eax, DWORD PTR _DavesArrow$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 4294 : 	davesArrowId = Commands->Get_ID(DavesArrow);

	mov	eax, DWORD PTR _DavesArrow$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax

; 4295 : 	Commands->Start_Timer(obj,this,0.1f,1);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 4296 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_CMTB_Vehicle_Face_Turret@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Vehicle_Face_Turret::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_Apply_Damage_On_Timer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_Apply_Damage_On_Timer@@UAEPAXI@Z PROC		; JMG_Apply_Damage_On_Timer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_Apply_Damage_On_Timer@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_Apply_Damage_On_Timer@@UAEPAXI@Z ENDP		; JMG_Apply_Damage_On_Timer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_Apply_Damage_On_Timer@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_Apply_Damage_On_Timer@@UAE@XZ PROC		; JMG_Apply_Damage_On_Timer::~JMG_Apply_Damage_On_Timer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_Apply_Damage_On_Timer@@UAE@XZ ENDP		; JMG_Apply_Damage_On_Timer::~JMG_Apply_Damage_On_Timer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_Apply_Damage_On_Timer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_Apply_Damage_On_Timer@@QAE@XZ PROC		; JMG_Apply_Damage_On_Timer::JMG_Apply_Damage_On_Timer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_Apply_Damage_On_Timer@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_Apply_Damage_On_Timer@@QAE@XZ ENDP		; JMG_Apply_Damage_On_Timer::JMG_Apply_Damage_On_Timer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_Apply_Damage_On_Timer@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_Apply_Damage_On_Timer@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_Apply_Damage_On_Timer::Timer_Expired, COMDAT
; _this$ = ecx

; 598  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 599  : 	if (number == 453212)

	cmp	DWORD PTR _number$[ebp], 453212		; 0006ea5cH
	jne	SHORT $LN1@Timer_Expi

; 600  : 	{
; 601  : 		Commands->Apply_Damage(obj,9999.99f,"none",0);

	push	0
	push	OFFSET ??_C@_04CGFJFPFD@none?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@461c3ff6
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H
$LN1@Timer_Expi:

; 602  : 	}
; 603  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_Apply_Damage_On_Timer@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_Apply_Damage_On_Timer::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_Apply_Damage_On_Timer@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_Apply_Damage_On_Timer@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_Apply_Damage_On_Timer::Created, COMDAT
; _this$ = ecx

; 594  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 595  : 	Commands->Start_Timer(obj,this,0.1f,453212);

	push	453212					; 0006ea5cH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 596  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_Apply_Damage_On_Timer@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_Apply_Damage_On_Timer::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_User_Auto_Enter_Ship@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_User_Auto_Enter_Ship@@UAEPAXI@Z PROC		; JMG_User_Auto_Enter_Ship::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_User_Auto_Enter_Ship@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_User_Auto_Enter_Ship@@UAEPAXI@Z ENDP		; JMG_User_Auto_Enter_Ship::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_User_Auto_Enter_Ship@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_User_Auto_Enter_Ship@@UAE@XZ PROC		; JMG_User_Auto_Enter_Ship::~JMG_User_Auto_Enter_Ship, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_User_Auto_Enter_Ship@@UAE@XZ ENDP		; JMG_User_Auto_Enter_Ship::~JMG_User_Auto_Enter_Ship
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_User_Auto_Enter_Ship@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_User_Auto_Enter_Ship@@QAE@XZ PROC		; JMG_User_Auto_Enter_Ship::JMG_User_Auto_Enter_Ship, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_User_Auto_Enter_Ship@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_User_Auto_Enter_Ship@@QAE@XZ ENDP		; JMG_User_Auto_Enter_Ship::JMG_User_Auto_Enter_Ship
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_User_Auto_Enter_Ship@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_User_Auto_Enter_Ship@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_User_Auto_Enter_Ship::Timer_Expired, COMDAT
; _this$ = ecx

; 583  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 584  : 	if (number == 453435)

	cmp	DWORD PTR _number$[ebp], 453435		; 0006eb3bH
	jne	SHORT $LN1@Timer_Expi

; 585  : 	{
; 586  : 		Soldier_Transition_Vehicle(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Soldier_Transition_Vehicle@@YAXPAVScriptableGameObj@@@Z ; Soldier_Transition_Vehicle
	add	esp, 4

; 587  : 		if (Commands->Get_ID(Get_Vehicle_Return(obj)) == Commands->Get_ID(obj))

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Return@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Return
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	cmp	esi, eax
	jne	SHORT $LN1@Timer_Expi

; 588  : 		{
; 589  : 			Commands->Start_Timer(obj,this,0.1f,453435);

	push	453435					; 0006eb3bH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN1@Timer_Expi:

; 590  : 		}
; 591  : 	}
; 592  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_User_Auto_Enter_Ship@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_User_Auto_Enter_Ship::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_User_Auto_Enter_Ship@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
$T1 = -140						; size = 12
$T2 = -128						; size = 12
$T3 = -116						; size = 12
_pos$ = -40						; size = 12
_object$ = -28						; size = 4
_params$ = -24						; size = 20
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_User_Auto_Enter_Ship@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_User_Auto_Enter_Ship::Created, COMDAT
; _this$ = ecx

; 569  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 140				; 0000008cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 570  : 	char params[20];
; 571  : 	sprintf(params,"%d",Commands->Get_ID(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	lea	eax, DWORD PTR _params$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 572  : 	GameObject *object = Commands->Create_Object(Get_Parameter("Player_Ship"),Commands->Get_Position(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0M@HHIGELPC@Player_Ship?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _object$[ebp], eax

; 573  : 	Commands->Attach_Script(object,"JMG_Remove_Object_When_Creator_Destroyed",params);

	lea	eax, DWORD PTR _params$[ebp]
	push	eax
	push	OFFSET ??_C@_0CJ@JKMLHKIH@JMG_Remove_Object_When_Creator_D@
	mov	ecx, DWORD PTR _object$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+120]
	call	eax
	add	esp, 12					; 0000000cH

; 574  : 	Commands->Set_Model(object,Get_Model(object));

	mov	eax, DWORD PTR _object$[ebp]
	push	eax
	call	?Get_Model@@YAPBDPAVScriptableGameObj@@@Z ; Get_Model
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _object$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+160]
	call	eax
	add	esp, 8

; 575  : 	Soldier_Transition_Vehicle(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Soldier_Transition_Vehicle@@YAXPAVScriptableGameObj@@@Z ; Soldier_Transition_Vehicle
	add	esp, 4

; 576  : 	Vector3 pos = Commands->Get_Position(object);

	mov	eax, DWORD PTR _object$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 577  : 	pos.Z = 0.00;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _pos$[ebp+8], xmm0

; 578  : 	Commands->Set_Position(object,pos);

	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _object$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8

; 579  : 	Commands->Set_Position(obj,Commands->Get_Position(object));

	mov	eax, DWORD PTR _object$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8

; 580  : 	Commands->Start_Timer(obj,this,0.1f,453435);

	push	453435					; 0006eb3bH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 581  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_User_Auto_Enter_Ship@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_User_Auto_Enter_Ship::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_Attach_And_Remove@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_Attach_And_Remove@@UAEPAXI@Z PROC		; JMG_Attach_And_Remove::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_Attach_And_Remove@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_Attach_And_Remove@@UAEPAXI@Z ENDP		; JMG_Attach_And_Remove::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_Attach_And_Remove@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_Attach_And_Remove@@UAE@XZ PROC			; JMG_Attach_And_Remove::~JMG_Attach_And_Remove, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_Attach_And_Remove@@UAE@XZ ENDP			; JMG_Attach_And_Remove::~JMG_Attach_And_Remove
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_Attach_And_Remove@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_Attach_And_Remove@@QAE@XZ PROC			; JMG_Attach_And_Remove::JMG_Attach_And_Remove, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_Attach_And_Remove@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_Attach_And_Remove@@QAE@XZ ENDP			; JMG_Attach_And_Remove::JMG_Attach_And_Remove
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_Attach_And_Remove@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
$T1 = -92						; size = 12
$T2 = -80						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_Attach_And_Remove@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_Attach_And_Remove::Timer_Expired, COMDAT
; _this$ = ecx

; 560  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 561  : 	if (number == 581)

	cmp	DWORD PTR _number$[ebp], 581		; 00000245H
	jne	$LN2@Timer_Expi

; 562  : 	{
; 563  : 		Commands->Create_Object(Get_Parameter("Smaller_Comet"),Commands->Get_Bone_Position(obj,"SC1"));

	push	OFFSET ??_C@_03LDICLEIE@SC1?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+68]
	call	eax
	add	esp, 12					; 0000000cH
	push	eax
	push	OFFSET ??_C@_0O@GNKCNLNJ@Smaller_Comet?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8

; 564  : 		Commands->Create_Object(Get_Parameter("Smaller_Comet"),Commands->Get_Bone_Position(obj,"SC2"));

	push	OFFSET ??_C@_03JIKPOHEH@SC2?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+68]
	call	eax
	add	esp, 12					; 0000000cH
	push	eax
	push	OFFSET ??_C@_0O@GNKCNLNJ@Smaller_Comet?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8

; 565  : 		Commands->Destroy_Object(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN2@Timer_Expi:

; 566  : 	}
; 567  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_Attach_And_Remove@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_Attach_And_Remove::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_Attach_And_Remove@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_Attach_And_Remove@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_Attach_And_Remove::Created, COMDAT
; _this$ = ecx

; 556  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 	Commands->Start_Timer(obj,this,0.1f,581);

	push	581					; 00000245H
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 558  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_Attach_And_Remove@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_Attach_And_Remove::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_Comet_Control_Script@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_Comet_Control_Script@@UAEPAXI@Z PROC		; JMG_Comet_Control_Script::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_Comet_Control_Script@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_Comet_Control_Script@@UAEPAXI@Z ENDP		; JMG_Comet_Control_Script::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_Comet_Control_Script@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_Comet_Control_Script@@UAE@XZ PROC		; JMG_Comet_Control_Script::~JMG_Comet_Control_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_Comet_Control_Script@@UAE@XZ ENDP		; JMG_Comet_Control_Script::~JMG_Comet_Control_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_Comet_Control_Script@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_Comet_Control_Script@@QAE@XZ PROC		; JMG_Comet_Control_Script::JMG_Comet_Control_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_Comet_Control_Script@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_Comet_Control_Script@@QAE@XZ ENDP		; JMG_Comet_Control_Script::JMG_Comet_Control_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Killed@JMG_Comet_Control_Script@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
$T1 = -96						; size = 12
_object$2 = -20						; size = 4
_pos$3 = -16						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
?Killed@JMG_Comet_Control_Script@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_Comet_Control_Script::Killed, COMDAT
; _this$ = ecx

; 544  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 545  : 	if (Get_Int_Parameter("Spawn_Comets") == 1)

	push	OFFSET ??_C@_0N@ELBIIDGM@Spawn_Comets?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	eax, 1
	jne	$LN1@Killed

; 546  : 	{
; 547  : 		Commands->Set_Facing(obj,Commands->Get_Random(0.00,360.00));

	push	ecx
	movss	xmm0, DWORD PTR __real@43b40000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 4
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+76]
	call	ecx
	add	esp, 8

; 548  : 		Vector3 pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos$3[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 549  : 		pos.Z = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _pos$3[ebp+8], xmm0

; 550  : 		GameObject *object = Commands->Create_Object("Daves Arrow",pos);

	lea	eax, DWORD PTR _pos$3[ebp]
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _object$2[ebp], eax

; 551  : 		Commands->Set_Model(object,Get_Parameter("Comet_Holder"));

	push	OFFSET ??_C@_0N@BCBILOOP@Comet_Holder?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _object$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 552  : 		Commands->Attach_Script(object,"JMG_Attach_And_Remove",Get_Parameter("Smaller_Comet"));

	push	OFFSET ??_C@_0O@GNKCNLNJ@Smaller_Comet?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	push	OFFSET ??_C@_0BG@DEIDFEHH@JMG_Attach_And_Remove?$AA@
	mov	eax, DWORD PTR _object$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH
$LN1@Killed:

; 553  : 	}
; 554  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@JMG_Comet_Control_Script@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_Comet_Control_Script::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_Comet_Control_Script@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
$T1 = -80						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_Comet_Control_Script@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_Comet_Control_Script::Timer_Expired, COMDAT
; _this$ = ecx

; 535  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 536  : 	if (number == 24523)

	cmp	DWORD PTR _number$[ebp], 24523		; 00005fcbH
	jne	SHORT $LN2@Timer_Expi

; 537  : 	{
; 538  : 		if (Commands->Get_Position(obj).Z > 1.0)

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	cvtss2sd xmm0, DWORD PTR [eax+8]
	comisd	xmm0, QWORD PTR __real@3ff0000000000000
	jbe	SHORT $LN1@Timer_Expi

; 539  : 			Commands->Apply_Damage(obj,9999.99f,"none",0);

	push	0
	push	OFFSET ??_C@_04CGFJFPFD@none?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@461c3ff6
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H
$LN1@Timer_Expi:

; 540  : 		Commands->Start_Timer(obj,this,1.0f,24523);

	push	24523					; 00005fcbH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN2@Timer_Expi:

; 541  : 	}
; 542  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_Comet_Control_Script@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_Comet_Control_Script::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_Comet_Control_Script@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_params$ = -1004					; size = 1000
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_Comet_Control_Script@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_Comet_Control_Script::Created, COMDAT
; _this$ = ecx

; 527  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1068				; 0000042cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 528  : 	char params[1000];
; 529  : 	sprintf(params,"%f,911,0.10,453,2",Get_Float_Parameter("Comet_Size"));

	push	OFFSET ??_C@_0L@FDJHJHMA@Comet_Size?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_0BC@LLLHCPF@?$CFf?0911?00?410?0453?02?$AA@
	lea	eax, DWORD PTR _params$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 530  : 	Commands->Attach_Script(obj,"JFW_Send_Custom_Distance_Objects_Timer",params);

	lea	eax, DWORD PTR _params$[ebp]
	push	eax
	push	OFFSET ??_C@_0CH@MNFEONNH@JFW_Send_Custom_Distance_Objects@
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+120]
	call	eax
	add	esp, 12					; 0000000cH

; 531  : 	Set_Current_Clip_Bullets(obj,Commands->Get_Random_Int(1,3));

	push	3
	push	1
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8

; 532  : 	Commands->Start_Timer(obj,this,1.0f,24523);

	push	24523					; 00005fcbH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 533  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_Comet_Control_Script@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_Comet_Control_Script::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_New_Ship_Weapon_Control_System@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_New_Ship_Weapon_Control_System@@UAEPAXI@Z PROC	; JMG_New_Ship_Weapon_Control_System::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_New_Ship_Weapon_Control_System@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_New_Ship_Weapon_Control_System@@UAEPAXI@Z ENDP	; JMG_New_Ship_Weapon_Control_System::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_New_Ship_Weapon_Control_System@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_New_Ship_Weapon_Control_System@@UAE@XZ PROC	; JMG_New_Ship_Weapon_Control_System::~JMG_New_Ship_Weapon_Control_System, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_New_Ship_Weapon_Control_System@@UAE@XZ ENDP	; JMG_New_Ship_Weapon_Control_System::~JMG_New_Ship_Weapon_Control_System
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_New_Ship_Weapon_Control_System@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_New_Ship_Weapon_Control_System@@QAE@XZ PROC	; JMG_New_Ship_Weapon_Control_System::JMG_New_Ship_Weapon_Control_System, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_New_Ship_Weapon_Control_System@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_New_Ship_Weapon_Control_System@@QAE@XZ ENDP	; JMG_New_Ship_Weapon_Control_System::JMG_New_Ship_Weapon_Control_System
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Damaged@JMG_New_Ship_Weapon_Control_System@@EAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_damage$ = 16						; size = 4
?Damaged@JMG_New_Ship_Weapon_Control_System@@EAEXPAVScriptableGameObj@@0M@Z PROC ; JMG_New_Ship_Weapon_Control_System::Damaged, COMDAT
; _this$ = ecx

; 522  : {		

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 523  : 	if (Commands->Get_ID(Get_Vehicle(damager)) == Commands->Get_ID(obj) && damage == 0.0f && Get_Total_Bullets(obj,"Weapon_Ship_Plasma_Shot_Normal") < 4)

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	cmp	esi, eax
	jne	SHORT $LN1@Damaged
	movss	xmm0, DWORD PTR _damage$[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN1@Damaged
	push	OFFSET ??_C@_0BP@MDGHNFN@Weapon_Ship_Plasma_Shot_Normal?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Total_Bullets@@YAHPAVScriptableGameObj@@PBD@Z ; Get_Total_Bullets
	add	esp, 8
	cmp	eax, 4
	jge	SHORT $LN1@Damaged

; 524  : 		Set_Bullets(obj,"Weapon_Ship_Plasma_Shot_Normal",Get_Bullets(obj,"Weapon_Ship_Plasma_Shot_Normal")+1);

	push	OFFSET ??_C@_0BP@MDGHNFN@Weapon_Ship_Plasma_Shot_Normal?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Bullets@@YAHPAVScriptableGameObj@@PBD@Z ; Get_Bullets
	add	esp, 8
	add	eax, 1
	push	eax
	push	OFFSET ??_C@_0BP@MDGHNFN@Weapon_Ship_Plasma_Shot_Normal?$AA@
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	call	DWORD PTR ?Set_Bullets@@3P6AXPAVScriptableGameObj@@PBDH@ZA ; Set_Bullets
	add	esp, 12					; 0000000cH
$LN1@Damaged:

; 525  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@JMG_New_Ship_Weapon_Control_System@@EAEXPAVScriptableGameObj@@0M@Z ENDP ; JMG_New_Ship_Weapon_Control_System::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_Renetbusters_Object@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_Renetbusters_Object@@UAEPAXI@Z PROC		; JMG_Renetbusters_Object::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_Renetbusters_Object@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_Renetbusters_Object@@UAEPAXI@Z ENDP		; JMG_Renetbusters_Object::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_Renetbusters_Object@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_Renetbusters_Object@@UAE@XZ PROC			; JMG_Renetbusters_Object::~JMG_Renetbusters_Object, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_Renetbusters_Object@@UAE@XZ ENDP			; JMG_Renetbusters_Object::~JMG_Renetbusters_Object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_Renetbusters_Object@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_Renetbusters_Object@@QAE@XZ PROC			; JMG_Renetbusters_Object::JMG_Renetbusters_Object, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_Renetbusters_Object@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_Renetbusters_Object@@QAE@XZ ENDP			; JMG_Renetbusters_Object::JMG_Renetbusters_Object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Custom@JMG_Renetbusters_Object@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
tv148 = -100						; size = 4
$T1 = -96						; size = 12
$T2 = -84						; size = 12
_distance$3 = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_message$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@JMG_Renetbusters_Object@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; JMG_Renetbusters_Object::Custom, COMDAT
; _this$ = ecx

; 513  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 100				; 00000064H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 514  : 	if (message == 913)

	cmp	DWORD PTR _message$[ebp], 913		; 00000391H
	jne	$LN1@Custom

; 515  : 	{
; 516  : 		float distance = Commands->Get_Distance(Commands->Get_Position(obj),Commands->Get_Position(sender));

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR _distance$3[ebp]

; 517  : 		if (distance <= 6.53f - Get_Float_Parameter("size"))

	push	OFFSET ??_C@_04IAGNFIBA@size?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR tv148[ebp]
	movss	xmm0, DWORD PTR __real@40d0f5c3
	subss	xmm0, DWORD PTR tv148[ebp]
	comiss	xmm0, DWORD PTR _distance$3[ebp]
	jb	SHORT $LN1@Custom

; 518  : 			Commands->Send_Custom_Event(obj,sender,90111315,Get_Int_Parameter("Power_Drain"),0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0M@GKMNIJOO@Power_Drain?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	push	90111315				; 055efd53H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN1@Custom:

; 519  : 	}
; 520  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@JMG_Renetbusters_Object@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; JMG_Renetbusters_Object::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_Ship_Shield_Script@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_Ship_Shield_Script@@UAEPAXI@Z PROC		; JMG_Ship_Shield_Script::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_Ship_Shield_Script@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_Ship_Shield_Script@@UAEPAXI@Z ENDP		; JMG_Ship_Shield_Script::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_Ship_Shield_Script@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_Ship_Shield_Script@@UAE@XZ PROC			; JMG_Ship_Shield_Script::~JMG_Ship_Shield_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_Ship_Shield_Script@@UAE@XZ ENDP			; JMG_Ship_Shield_Script::~JMG_Ship_Shield_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_Ship_Shield_Script@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_Ship_Shield_Script@@QAE@XZ PROC			; JMG_Ship_Shield_Script::JMG_Ship_Shield_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_Ship_Shield_Script@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_Ship_Shield_Script@@QAE@XZ ENDP			; JMG_Ship_Shield_Script::JMG_Ship_Shield_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Damaged@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_damage$ = 16						; size = 4
?Damaged@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@0M@Z PROC ; JMG_Ship_Shield_Script::Damaged, COMDAT
; _this$ = ecx

; 503  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 504  : 	if (ReccentlyDamaged == 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 0
	jne	$LN1@Damaged

; 505  : 	{
; 506  : 		ReccentlyDamaged = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 1

; 507  : 		Commands->Send_Custom_Event(obj,Commands->Find_Object(Get_Int_Parameter("ID")),90111316,15,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	15					; 0000000fH
	push	90111316				; 055efd54H
	push	OFFSET ??_C@_02OLOABKKD@ID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H

; 508  : 		Commands->Set_Model(obj,"shipshieldw");

	push	OFFSET ??_C@_0M@FKEHAHKO@shipshieldw?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 509  : 		Commands->Start_Timer(obj,this,0.25f,54342443);

	push	54342443				; 033d332bH
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN1@Damaged:

; 510  : 	}
; 511  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@0M@Z ENDP ; JMG_Ship_Shield_Script::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
$T1 = -80						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_Ship_Shield_Script::Timer_Expired, COMDAT
; _this$ = ecx

; 475  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 476  : 	if (number == 54342442)

	cmp	DWORD PTR _number$[ebp], 54342442	; 033d332aH
	jne	SHORT $LN3@Timer_Expi

; 477  : 	{
; 478  : 		Send_Custom_All_Objects_Area(913,Commands->Get_Position(obj),6.53f,obj,2);

	push	2
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@40d0f5c3
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	push	913					; 00000391H
	call	?Send_Custom_All_Objects_Area@@YAXHABVVector3@@MPAVScriptableGameObj@@H@Z ; Send_Custom_All_Objects_Area
	add	esp, 20					; 00000014H

; 479  : 		Commands->Start_Timer(obj,this,0.01f,54342442);

	push	54342442				; 033d332aH
	push	ecx
	movss	xmm0, DWORD PTR __real@3c23d70a
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN3@Timer_Expi:

; 480  : 	}
; 481  : 	if (number == 54342443)

	cmp	DWORD PTR _number$[ebp], 54342443	; 033d332bH
	jne	SHORT $LN1@Timer_Expi

; 482  : 	{
; 483  : 		Commands->Set_Model(obj,ShieldModel);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+160]
	call	ecx
	add	esp, 8

; 484  : 		if (ReccentlyDamaged == 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 1
	jne	SHORT $LN1@Timer_Expi

; 485  : 		{
; 486  : 			ReccentlyDamaged = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
$LN1@Timer_Expi:

; 487  : 		}
; 488  : 	}
; 489  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_Ship_Shield_Script::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Custom@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_object$1 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_message$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; JMG_Ship_Shield_Script::Custom, COMDAT
; _this$ = ecx

; 491  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 492  : 	if (message == 90111315 && LastSenderID != Commands->Get_ID(sender))

	cmp	DWORD PTR _message$[ebp], 90111315	; 055efd53H
	jne	$LN1@Custom
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+32], eax
	je	$LN1@Custom

; 493  : 	{
; 494  : 		LastSenderID = Commands->Get_ID(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax

; 495  : 		GameObject *object = Commands->Find_Object(Get_Int_Parameter("ID"));

	push	OFFSET ??_C@_02OLOABKKD@ID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	mov	DWORD PTR _object$1[ebp], eax

; 496  : 		Commands->Send_Custom_Event(obj,object,90111316,param,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	push	90111316				; 055efd54H
	mov	ecx, DWORD PTR _object$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H

; 497  : 		Commands->Set_Model(obj,"shipshieldw");

	push	OFFSET ??_C@_0M@FKEHAHKO@shipshieldw?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 498  : 		Commands->Apply_Damage(sender,9999999.00f,"BlamoKiller",object);

	mov	eax, DWORD PTR _object$1[ebp]
	push	eax
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@4b18967f
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+616]
	call	eax
	add	esp, 16					; 00000010H

; 499  : 		Commands->Start_Timer(obj,this,0.25f,54342443);

	push	54342443				; 033d332bH
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN1@Custom:

; 500  : 	}
; 501  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; JMG_Ship_Shield_Script::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_Text$ = -520						; size = 512
_object$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_Ship_Shield_Script::Created, COMDAT
; _this$ = ecx

; 460  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 584				; 00000248H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 461  : 	LastSenderID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0

; 462  : 	ReccentlyDamaged = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0

; 463  : 	GameObject *object = Commands->Find_Object(Get_Int_Parameter("ID"));

	push	OFFSET ??_C@_02OLOABKKD@ID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	mov	DWORD PTR _object$[ebp], eax

; 464  : 	if (!_stricmp(Get_Model(object),"cometbsb")){ShieldModel = "shipshieldb";}

	push	OFFSET ??_C@_08FLIKPBEA@cometbsb?$AA@
	mov	eax, DWORD PTR _object$[ebp]
	push	eax
	call	?Get_Model@@YAPBDPAVScriptableGameObj@@@Z ; Get_Model
	add	esp, 4
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@Created
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], OFFSET ??_C@_0M@GNPCOBLK@shipshieldb?$AA@
	jmp	SHORT $LN1@Created
$LN7@Created:

; 465  : 	else if (!_stricmp(Get_Model(object),"cometbsg")){ShieldModel = "shipshieldg";}

	push	OFFSET ??_C@_08CGPNAFAF@cometbsg?$AA@
	mov	eax, DWORD PTR _object$[ebp]
	push	eax
	call	?Get_Model@@YAPBDPAVScriptableGameObj@@@Z ; Get_Model
	add	esp, 4
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@Created
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], OFFSET ??_C@_0M@BAIFBFPP@shipshieldg?$AA@
	jmp	SHORT $LN1@Created
$LN5@Created:

; 466  : 	else if (!_stricmp(Get_Model(object),"cometbsr")){ShieldModel = "shipshieldr";}

	push	OFFSET ??_C@_08BBEIODBB@cometbsr?$AA@
	mov	eax, DWORD PTR _object$[ebp]
	push	eax
	call	?Get_Model@@YAPBDPAVScriptableGameObj@@@Z ; Get_Model
	add	esp, 4
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@Created
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], OFFSET ??_C@_0M@CHDAPDOL@shipshieldr?$AA@
	jmp	SHORT $LN1@Created
$LN3@Created:

; 467  : 	else if (!_stricmp(Get_Model(object),"cometbsy")){ShieldModel = "shipshieldy";}

	push	OFFSET ??_C@_08PCLMDKNK@cometbsy?$AA@
	mov	eax, DWORD PTR _object$[ebp]
	push	eax
	call	?Get_Model@@YAPBDPAVScriptableGameObj@@@Z ; Get_Model
	add	esp, 4
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@Created
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], OFFSET ??_C@_0M@MEMECKCA@shipshieldy?$AA@
$LN1@Created:

; 468  : 	Commands->Set_Model(obj,ShieldModel);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+160]
	call	ecx
	add	esp, 8

; 469  : 	Commands->Start_Timer(obj,this,0.01f,54342442);

	push	54342442				; 033d332aH
	push	ecx
	movss	xmm0, DWORD PTR __real@3c23d70a
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 470  : 	char Text[512];
; 471  : 	sprintf(Text,"MESSAGE Shield Should Exist");

	push	OFFSET ??_C@_0BM@IDEGAHLP@MESSAGE?5Shield?5Should?5Exist?$AA@
	lea	eax, DWORD PTR _Text$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 8

; 472  : 	Console_Input(Text);

	lea	eax, DWORD PTR _Text$[ebp]
	push	eax
	call	?Console_Input@@YAXPBD@Z		; Console_Input
	add	esp, 4

; 473  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_Ship_Shield_Script@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_Ship_Shield_Script::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_Kill_Self_And_Sender_On_Custom_Ship@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_Kill_Self_And_Sender_On_Custom_Ship@@UAEPAXI@Z PROC ; JMG_Kill_Self_And_Sender_On_Custom_Ship::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_Kill_Self_And_Sender_On_Custom_Ship@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_Kill_Self_And_Sender_On_Custom_Ship@@UAEPAXI@Z ENDP ; JMG_Kill_Self_And_Sender_On_Custom_Ship::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_Kill_Self_And_Sender_On_Custom_Ship@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_Kill_Self_And_Sender_On_Custom_Ship@@UAE@XZ PROC	; JMG_Kill_Self_And_Sender_On_Custom_Ship::~JMG_Kill_Self_And_Sender_On_Custom_Ship, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_Kill_Self_And_Sender_On_Custom_Ship@@UAE@XZ ENDP	; JMG_Kill_Self_And_Sender_On_Custom_Ship::~JMG_Kill_Self_And_Sender_On_Custom_Ship
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_Kill_Self_And_Sender_On_Custom_Ship@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_Kill_Self_And_Sender_On_Custom_Ship@@QAE@XZ PROC	; JMG_Kill_Self_And_Sender_On_Custom_Ship::JMG_Kill_Self_And_Sender_On_Custom_Ship, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_Kill_Self_And_Sender_On_Custom_Ship@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_Kill_Self_And_Sender_On_Custom_Ship@@QAE@XZ ENDP	; JMG_Kill_Self_And_Sender_On_Custom_Ship::JMG_Kill_Self_And_Sender_On_Custom_Ship
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Custom@JMG_Kill_Self_And_Sender_On_Custom_Ship@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_message$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@JMG_Kill_Self_And_Sender_On_Custom_Ship@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; JMG_Kill_Self_And_Sender_On_Custom_Ship::Custom, COMDAT
; _this$ = ecx

; 444  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 445  : 	if ((message == Get_Int_Parameter("Message")) && (canbekilled == 1))

	push	OFFSET ??_C@_07BEIHKDLJ@Message?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	DWORD PTR _message$[ebp], eax
	jne	SHORT $LN3@Custom
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 1
	jne	SHORT $LN3@Custom

; 446  : 	{
; 447  : 		Commands->Apply_Damage(obj,9999999.00f,"BlamoKiller",0);

	push	0
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@4b18967f
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H

; 448  : 		Commands->Apply_Damage(sender,9999999.00f,"BlamoKiller",0);

	push	0
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@4b18967f
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H
$LN3@Custom:

; 449  : 	}
; 450  : 	if ((message == 45378221) && (canbekilled == 1))

	cmp	DWORD PTR _message$[ebp], 45378221	; 02b46aadH
	jne	SHORT $LN2@Custom
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 1
	jne	SHORT $LN2@Custom

; 451  : 	{
; 452  : 		canbekilled = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN2@Custom:

; 453  : 	}
; 454  : 	if ((message == 45378211) && (canbekilled == 0))

	cmp	DWORD PTR _message$[ebp], 45378211	; 02b46aa3H
	jne	SHORT $LN1@Custom
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN1@Custom

; 455  : 	{
; 456  : 		canbekilled = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 1
$LN1@Custom:

; 457  : 	}
; 458  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@JMG_Kill_Self_And_Sender_On_Custom_Ship@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; JMG_Kill_Self_And_Sender_On_Custom_Ship::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_Kill_Self_And_Sender_On_Custom_Ship@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_Kill_Self_And_Sender_On_Custom_Ship@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_Kill_Self_And_Sender_On_Custom_Ship::Created, COMDAT
; _this$ = ecx

; 440  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 441  : 	canbekilled = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 1

; 442  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_Kill_Self_And_Sender_On_Custom_Ship@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_Kill_Self_And_Sender_On_Custom_Ship::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_Ship_Shield_Control_Script@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_Ship_Shield_Control_Script@@UAEPAXI@Z PROC	; JMG_Ship_Shield_Control_Script::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_Ship_Shield_Control_Script@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_Ship_Shield_Control_Script@@UAEPAXI@Z ENDP	; JMG_Ship_Shield_Control_Script::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_Ship_Shield_Control_Script@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_Ship_Shield_Control_Script@@UAE@XZ PROC		; JMG_Ship_Shield_Control_Script::~JMG_Ship_Shield_Control_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_Ship_Shield_Control_Script@@UAE@XZ ENDP		; JMG_Ship_Shield_Control_Script::~JMG_Ship_Shield_Control_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_Ship_Shield_Control_Script@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_Ship_Shield_Control_Script@@QAE@XZ PROC		; JMG_Ship_Shield_Control_Script::JMG_Ship_Shield_Control_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_Ship_Shield_Control_Script@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_Ship_Shield_Control_Script@@QAE@XZ ENDP		; JMG_Ship_Shield_Control_Script::JMG_Ship_Shield_Control_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Killed@JMG_Ship_Shield_Control_Script@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_Text$1 = -520						; size = 512
_object$2 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
?Killed@JMG_Ship_Shield_Control_Script@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_Ship_Shield_Control_Script::Killed, COMDAT
; _this$ = ecx

; 427  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 584				; 00000248H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 428  : 	if (ison == 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 1
	jne	SHORT $LN1@Killed

; 429  : 	{
; 430  : 		ison = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 431  : 		GameObject *object = Commands->Find_Object(ObjID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _object$2[ebp], eax

; 432  : 		Commands->Apply_Damage(object,9999999.00f,"BlamoKiller",0);

	push	0
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@4b18967f
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _object$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H

; 433  : 		ObjID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0

; 434  : 		char Text[512];
; 435  : 		sprintf(Text,"MESSAGE DEAD, %s","Nod");

	push	OFFSET ??_C@_03OHGKCNFD@Nod?$AA@
	push	OFFSET ??_C@_0BB@CPMCEIFJ@MESSAGE?5DEAD?0?5?$CFs?$AA@
	lea	eax, DWORD PTR _Text$1[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 436  : 		Console_Input(Text);

	lea	eax, DWORD PTR _Text$1[ebp]
	push	eax
	call	?Console_Input@@YAXPBD@Z		; Console_Input
	add	esp, 4
$LN1@Killed:

; 437  : 	}
; 438  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@JMG_Ship_Shield_Control_Script@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_Ship_Shield_Control_Script::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Custom@JMG_Ship_Shield_Control_Script@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_Text$1 = -1560						; size = 512
_object$2 = -1048					; size = 4
_Text$3 = -1044						; size = 512
_params$4 = -532					; size = 512
_object$5 = -20						; size = 4
_pos$6 = -16						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_message$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@JMG_Ship_Shield_Control_Script@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; JMG_Ship_Shield_Control_Script::Custom, COMDAT
; _this$ = ecx

; 393  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1624				; 00000658H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 394  : 	if ((message == 1239464) && (ison == 0))

	cmp	DWORD PTR _message$[ebp], 1239464	; 0012e9a8H
	jne	$LN2@Custom
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	$LN2@Custom

; 395  : 	{
; 396  : 		ison = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 1

; 397  : 		Vector3 pos;

	lea	ecx, DWORD PTR _pos$6[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 398  : 		GameObject *object = Commands->Create_Object(Get_Parameter("Ship_Shield"),pos);

	lea	eax, DWORD PTR _pos$6[ebp]
	push	eax
	push	OFFSET ??_C@_0M@FKJDDLOD@Ship_Shield?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _object$5[ebp], eax

; 399  : 		Commands->Attach_To_Object_Bone(object,obj,"origin");

	push	OFFSET ??_C@_06NHCMNMEH@origin?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _object$5[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 400  : 		Commands->Set_Player_Type(object,Get_Player_Type(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Player_Type@@YAHPAVScriptableGameObj@@@Z ; Get_Player_Type
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _object$5[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+252]
	call	eax
	add	esp, 8

; 401  : 		ObjID = Commands->Get_ID(object);

	mov	eax, DWORD PTR _object$5[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax

; 402  : 		char params[512];
; 403  : 		sprintf(params,"%d",Commands->Get_ID(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	lea	eax, DWORD PTR _params$4[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 404  : 		Commands->Attach_Script(object,"JMG_Ship_Shield_Script",params);

	lea	eax, DWORD PTR _params$4[ebp]
	push	eax
	push	OFFSET ??_C@_0BH@OIEIGPLK@JMG_Ship_Shield_Script?$AA@
	mov	ecx, DWORD PTR _object$5[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+120]
	call	eax
	add	esp, 12					; 0000000cH

; 405  : 		Commands->Send_Custom_Event(obj,obj,4537822,1,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	1
	push	4537822					; 00453ddeH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 406  : 		//Commands->Send_Custom_Event(obj,obj,45378221,1,0);
; 407  : 		char Text[512];
; 408  : 		sprintf(Text,"MESSAGE on");

	push	OFFSET ??_C@_0L@BJLEKJKD@MESSAGE?5on?$AA@
	lea	eax, DWORD PTR _Text$3[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 8

; 409  : 		Console_Input(Text);

	lea	eax, DWORD PTR _Text$3[ebp]
	push	eax
	call	?Console_Input@@YAXPBD@Z		; Console_Input
	add	esp, 4
$LN2@Custom:

; 410  : 		//Commands->Start_Timer(obj,this,0.1f,543424420);
; 411  : 	}
; 412  : 	if ((message == 1239464) && (ison == 1))

	cmp	DWORD PTR _message$[ebp], 1239464	; 0012e9a8H
	jne	$LN1@Custom
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 1
	jne	$LN1@Custom

; 413  : 	{
; 414  : 		ison = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 415  : 		GameObject *object = Commands->Find_Object(ObjID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _object$2[ebp], eax

; 416  : 		Commands->Apply_Damage(object,9999999.00f,"BlamoKiller",0);

	push	0
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@4b18967f
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _object$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H

; 417  : 		ObjID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0

; 418  : 		Commands->Send_Custom_Event(obj,obj,4537821,1,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	1
	push	4537821					; 00453dddH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 419  : 		Commands->Send_Custom_Event(obj,obj,45378211,1,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	1
	push	45378211				; 02b46aa3H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 420  : 		char Text[512];
; 421  : 		sprintf(Text,"MESSAGE off");

	push	OFFSET ??_C@_0M@HCHCNLGC@MESSAGE?5off?$AA@
	lea	eax, DWORD PTR _Text$1[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 8

; 422  : 		Console_Input(Text);

	lea	eax, DWORD PTR _Text$1[ebp]
	push	eax
	call	?Console_Input@@YAXPBD@Z		; Console_Input
	add	esp, 4
$LN1@Custom:

; 423  : 		//Commands->Start_Timer(obj,this,0.1f,543424421);
; 424  : 	}
; 425  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@JMG_Ship_Shield_Control_Script@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; JMG_Ship_Shield_Control_Script::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_Ship_Shield_Control_Script@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_Ship_Shield_Control_Script@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_Ship_Shield_Control_Script::Created, COMDAT
; _this$ = ecx

; 388  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 389  : 	ison = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 390  : 	ObjID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0

; 391  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_Ship_Shield_Control_Script@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_Ship_Shield_Control_Script::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_Kill_Self_And_Sender_On_Custom@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_Kill_Self_And_Sender_On_Custom@@UAEPAXI@Z PROC	; JMG_Kill_Self_And_Sender_On_Custom::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_Kill_Self_And_Sender_On_Custom@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_Kill_Self_And_Sender_On_Custom@@UAEPAXI@Z ENDP	; JMG_Kill_Self_And_Sender_On_Custom::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_Kill_Self_And_Sender_On_Custom@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_Kill_Self_And_Sender_On_Custom@@UAE@XZ PROC	; JMG_Kill_Self_And_Sender_On_Custom::~JMG_Kill_Self_And_Sender_On_Custom, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_Kill_Self_And_Sender_On_Custom@@UAE@XZ ENDP	; JMG_Kill_Self_And_Sender_On_Custom::~JMG_Kill_Self_And_Sender_On_Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_Kill_Self_And_Sender_On_Custom@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_Kill_Self_And_Sender_On_Custom@@QAE@XZ PROC	; JMG_Kill_Self_And_Sender_On_Custom::JMG_Kill_Self_And_Sender_On_Custom, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_Kill_Self_And_Sender_On_Custom@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_Kill_Self_And_Sender_On_Custom@@QAE@XZ ENDP	; JMG_Kill_Self_And_Sender_On_Custom::JMG_Kill_Self_And_Sender_On_Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Custom@JMG_Kill_Self_And_Sender_On_Custom@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_message$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@JMG_Kill_Self_And_Sender_On_Custom@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; JMG_Kill_Self_And_Sender_On_Custom::Custom, COMDAT
; _this$ = ecx

; 380  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 381  : 	if (message == Get_Int_Parameter("Message"))

	push	OFFSET ??_C@_07BEIHKDLJ@Message?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	DWORD PTR _message$[ebp], eax
	jne	SHORT $LN1@Custom

; 382  : 	{
; 383  : 		Commands->Apply_Damage(obj,9999999.00f,"BlamoKiller",0);

	push	0
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@4b18967f
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H

; 384  : 		Commands->Apply_Damage(sender,9999999.00f,"BlamoKiller",0);

	push	0
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@4b18967f
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H
$LN1@Custom:

; 385  : 	}
; 386  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@JMG_Kill_Self_And_Sender_On_Custom@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; JMG_Kill_Self_And_Sender_On_Custom::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_Cronie_AI@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_Cronie_AI@@UAEPAXI@Z PROC			; JMG_Cronie_AI::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_Cronie_AI@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_Cronie_AI@@UAEPAXI@Z ENDP			; JMG_Cronie_AI::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_Cronie_AI@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_Cronie_AI@@UAE@XZ PROC				; JMG_Cronie_AI::~JMG_Cronie_AI, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_Cronie_AI@@UAE@XZ ENDP				; JMG_Cronie_AI::~JMG_Cronie_AI
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_Cronie_AI@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_Cronie_AI@@QAE@XZ PROC				; JMG_Cronie_AI::JMG_Cronie_AI, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_Cronie_AI@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_Cronie_AI@@QAE@XZ ENDP				; JMG_Cronie_AI::JMG_Cronie_AI
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_Cronie_AI@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
tv177 = -296						; size = 4
$T1 = -292						; size = 12
_params$2 = -216					; size = 196
_pos$3 = -20						; size = 12
_object$4 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_Cronie_AI@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_Cronie_AI::Timer_Expired, COMDAT
; _this$ = ecx

; 353  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 296				; 00000128H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 354  : 	if (number == 4586442)

	cmp	DWORD PTR _number$[ebp], 4586442	; 0045fbcaH
	jne	$LN5@Timer_Expi

; 355  : 	{
; 356  : 		if (target > 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jle	SHORT $LN3@Timer_Expi

; 357  : 		{
; 358  : 			GameObject *object = Commands->Find_Object(target);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _object$4[ebp], eax

; 359  : 			if (Commands->Get_Health(object) == 0)

	mov	eax, DWORD PTR _object$4[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv177[ebp]
	movss	xmm0, DWORD PTR tv177[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@Timer_Expi

; 360  : 				target = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN3@Timer_Expi:

; 361  : 		}
; 362  : 		Commands->Start_Timer(obj,this,0.1f,4586442);

	push	4586442					; 0045fbcaH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN5@Timer_Expi:

; 363  : 	}
; 364  : 	if (number == 4586443)

	cmp	DWORD PTR _number$[ebp], 4586443	; 0045fbcbH
	jne	$LN2@Timer_Expi

; 365  : 	{
; 366  : 		if (target == 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	$LN1@Timer_Expi

; 367  : 		{
; 368  : 			Vector3 pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos$3[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 369  : 			pos.X += Commands->Get_Random_Int(-5,5);

	push	5
	push	-5					; fffffffbH
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	cvtsi2ss xmm0, eax
	addss	xmm0, DWORD PTR _pos$3[ebp]
	movss	DWORD PTR _pos$3[ebp], xmm0

; 370  : 			pos.Y += Commands->Get_Random_Int(-5,5);

	push	5
	push	-5					; fffffffbH
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	cvtsi2ss xmm0, eax
	addss	xmm0, DWORD PTR _pos$3[ebp+4]
	movss	DWORD PTR _pos$3[ebp+4], xmm0

; 371  : 			ActionParamsStruct params;

	lea	ecx, DWORD PTR _params$2[ebp]
	call	??0ActionParamsStruct@@QAE@XZ		; ActionParamsStruct::ActionParamsStruct

; 372  : 			params.Set_Basic(this,100,911);

	push	-1
	push	911					; 0000038fH
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$2[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 373  : 			params.Set_Movement(pos,1.0f,0.0f,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR _pos$3[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$2[ebp]
	call	?Set_Movement@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ; ActionParamsStruct::Set_Movement

; 374  : 			Commands->Action_Goto(obj,params);

	lea	eax, DWORD PTR _params$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+16]
	call	eax
	add	esp, 8
$LN1@Timer_Expi:

; 375  : 		}
; 376  : 		Commands->Start_Timer(obj,this,2.5f,4586443);

	push	4586443					; 0045fbcbH
	push	ecx
	movss	xmm0, DWORD PTR __real@40200000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN2@Timer_Expi:

; 377  : 	}
; 378  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_Cronie_AI@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_Cronie_AI::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Enemy_Seen@JMG_Cronie_AI@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_params$1 = -200					; size = 196
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_seen$ = 12						; size = 4
?Enemy_Seen@JMG_Cronie_AI@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_Cronie_AI::Enemy_Seen, COMDAT
; _this$ = ecx

; 341  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 342  : 	if (target == 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	$LN1@Enemy_Seen

; 343  : 	{
; 344  : 		ActionParamsStruct params;

	lea	ecx, DWORD PTR _params$1[ebp]
	call	??0ActionParamsStruct@@QAE@XZ		; ActionParamsStruct::ActionParamsStruct

; 345  : 		params.MoveArrivedDistance = 0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _params$1[ebp+64], xmm0

; 346  : 		params.Set_Basic(this,100,131524);

	push	-1
	push	131524					; 000201c4H
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$1[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 347  : 		params.Set_Movement(seen,2.0f,0.0f,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _seen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$1[ebp]
	call	?Set_Movement@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z ; ActionParamsStruct::Set_Movement

; 348  : 		Commands->Action_Goto(obj,params);

	lea	eax, DWORD PTR _params$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+16]
	call	eax
	add	esp, 8

; 349  : 		target = Commands->Get_ID(seen);

	mov	eax, DWORD PTR _seen$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
$LN1@Enemy_Seen:

; 350  : 	}
; 351  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Enemy_Seen@JMG_Cronie_AI@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_Cronie_AI::Enemy_Seen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_Cronie_AI@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_Cronie_AI@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_Cronie_AI::Created, COMDAT
; _this$ = ecx

; 332  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 333  : 	target = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 334  : 	Commands->Innate_Enable(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+440]
	call	edx
	add	esp, 4

; 335  : 	Commands->Enable_Enemy_Seen(obj,true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+300]
	call	edx
	add	esp, 8

; 336  : 	Commands->Enable_Hibernation(obj,false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+568]
	call	edx
	add	esp, 8

; 337  : 	Commands->Start_Timer(obj,this,0.1f,4586442);

	push	4586442					; 0045fbcaH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 338  : 	Commands->Start_Timer(obj,this,5.0f,4586443);

	push	4586443					; 0045fbcbH
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 339  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_Cronie_AI@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_Cronie_AI::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_Return_Custom_When_Shot@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_Return_Custom_When_Shot@@UAEPAXI@Z PROC		; JMG_Return_Custom_When_Shot::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_Return_Custom_When_Shot@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_Return_Custom_When_Shot@@UAEPAXI@Z ENDP		; JMG_Return_Custom_When_Shot::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_Return_Custom_When_Shot@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_Return_Custom_When_Shot@@UAE@XZ PROC		; JMG_Return_Custom_When_Shot::~JMG_Return_Custom_When_Shot, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_Return_Custom_When_Shot@@UAE@XZ ENDP		; JMG_Return_Custom_When_Shot::~JMG_Return_Custom_When_Shot
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_Return_Custom_When_Shot@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_Return_Custom_When_Shot@@QAE@XZ PROC		; JMG_Return_Custom_When_Shot::JMG_Return_Custom_When_Shot, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_Return_Custom_When_Shot@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_Return_Custom_When_Shot@@QAE@XZ ENDP		; JMG_Return_Custom_When_Shot::JMG_Return_Custom_When_Shot
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Damaged@JMG_Return_Custom_When_Shot@@EAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_damage$ = 16						; size = 4
?Damaged@JMG_Return_Custom_When_Shot@@EAEXPAVScriptableGameObj@@0M@Z PROC ; JMG_Return_Custom_When_Shot::Damaged, COMDAT
; _this$ = ecx

; 327  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 328  : 	if ((CheckPlayerType(damager,0)) || (CheckPlayerType(damager,1)))

	push	0
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CheckPlayerType@ScriptImpClass@@QAEHPAVScriptableGameObj@@H@Z ; ScriptImpClass::CheckPlayerType
	test	eax, eax
	jne	SHORT $LN1@Damaged
	push	1
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CheckPlayerType@ScriptImpClass@@QAEHPAVScriptableGameObj@@H@Z ; ScriptImpClass::CheckPlayerType
	test	eax, eax
	je	SHORT $LN2@Damaged
$LN1@Damaged:

; 329  : 		Commands->Send_Custom_Event(obj,damager,4537823,1,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	1
	push	4537823					; 00453ddfH
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN2@Damaged:

; 330  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@JMG_Return_Custom_When_Shot@@EAEXPAVScriptableGameObj@@0M@Z ENDP ; JMG_Return_Custom_When_Shot::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_Ship_Weapon@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_Ship_Weapon@@UAEPAXI@Z PROC			; JMG_Ship_Weapon::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_Ship_Weapon@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_Ship_Weapon@@UAEPAXI@Z ENDP			; JMG_Ship_Weapon::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_Ship_Weapon@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_Ship_Weapon@@UAE@XZ PROC				; JMG_Ship_Weapon::~JMG_Ship_Weapon, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_Ship_Weapon@@UAE@XZ ENDP				; JMG_Ship_Weapon::~JMG_Ship_Weapon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_Ship_Weapon@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_Ship_Weapon@@QAE@XZ PROC				; JMG_Ship_Weapon::JMG_Ship_Weapon, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_Ship_Weapon@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_Ship_Weapon@@QAE@XZ ENDP				; JMG_Ship_Weapon::JMG_Ship_Weapon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_Ship_Weapon@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_Ship_Weapon@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_Ship_Weapon::Timer_Expired, COMDAT
; _this$ = ecx

; 292  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 293  : 	if (28557221 == number && Get_Current_Bullets(obj) < 4)

	cmp	DWORD PTR _number$[ebp], 28557221	; 01b3bfa5H
	jne	SHORT $LN7@Timer_Expi
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Current_Bullets@@YAHPAVScriptableGameObj@@@Z ; Get_Current_Bullets
	add	esp, 4
	cmp	eax, 4
	jge	SHORT $LN7@Timer_Expi

; 294  : 	{
; 295  : 		Ammo += 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], ecx

; 296  : 		Set_Current_Clip_Bullets(obj,Get_Current_Bullets(obj) + 1);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Current_Bullets@@YAHPAVScriptableGameObj@@@Z ; Get_Current_Bullets
	add	esp, 4
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8
$LN7@Timer_Expi:

; 297  : 	}
; 298  : 	if (28557222 == number)

	cmp	DWORD PTR _number$[ebp], 28557222	; 01b3bfa6H
	jne	SHORT $LN6@Timer_Expi

; 299  : 	{
; 300  : 		Commands->Start_Timer(obj,this,0.1f,28557222);

	push	28557222				; 01b3bfa6H
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN6@Timer_Expi:

; 301  : 	}
; 302  : 	if (28557223 == number)

	cmp	DWORD PTR _number$[ebp], 28557223	; 01b3bfa7H
	jne	$LN5@Timer_Expi

; 303  : 	{
; 304  : 		if (Get_Current_Bullets(obj) < newtotal)

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Current_Bullets@@YAHPAVScriptableGameObj@@@Z ; Get_Current_Bullets
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+28]
	jge	SHORT $LN4@Timer_Expi

; 305  : 		{
; 306  : 			ammocheck = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0

; 307  : 			Commands->Send_Custom_Event(obj,obj,4537824,1,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	1
	push	4537824					; 00453de0H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN4@Timer_Expi:

; 308  : 		}
; 309  : 		newtotal = Get_Current_Bullets(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Current_Bullets@@YAHPAVScriptableGameObj@@@Z ; Get_Current_Bullets
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax

; 310  : 
; 311  : 		if (ammocheck < 20)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 20			; 00000014H
	jge	SHORT $LN3@Timer_Expi

; 312  : 			ammocheck++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], ecx
$LN3@Timer_Expi:

; 313  : 		if (ammocheck > 20 && Get_Current_Bullets(obj) < 4)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 20			; 00000014H
	jle	SHORT $LN2@Timer_Expi
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Current_Bullets@@YAHPAVScriptableGameObj@@@Z ; Get_Current_Bullets
	add	esp, 4
	cmp	eax, 4
	jge	SHORT $LN2@Timer_Expi

; 314  : 		{
; 315  : 			Set_Current_Clip_Bullets(obj,4);

	push	4
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8

; 316  : 			Ammo = 4;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 4
$LN2@Timer_Expi:

; 317  : 		}
; 318  : 		Commands->Start_Timer(obj,this,0.1f,28557223);

	push	28557223				; 01b3bfa7H
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN5@Timer_Expi:

; 319  : 	}
; 320  : 	if (28557224 == number)

	cmp	DWORD PTR _number$[ebp], 28557224	; 01b3bfa8H
	jne	SHORT $LN1@Timer_Expi

; 321  : 	{
; 322  : 		Set_Current_Clip_Bullets(obj,Ammo);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8

; 323  : 		Commands->Start_Timer(obj,this,10.0,28557224);

	push	28557224				; 01b3bfa8H
	push	ecx
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN1@Timer_Expi:

; 324  : 	}
; 325  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_Ship_Weapon@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_Ship_Weapon::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Custom@JMG_Ship_Weapon@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_message$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@JMG_Ship_Weapon@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; JMG_Ship_Weapon::Custom, COMDAT
; _this$ = ecx

; 259  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 260  : 	if (message == 4537824 && cangainammo == 1)

	cmp	DWORD PTR _message$[ebp], 4537824	; 00453de0H
	jne	SHORT $LN5@Custom
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 1
	jne	SHORT $LN5@Custom

; 261  : 	{
; 262  : 		if (Ammo > 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jle	SHORT $LN5@Custom

; 263  : 		{
; 264  : 			Ammo -= 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], ecx

; 265  : 			Commands->Start_Timer(obj,this,2.00f,28557221);

	push	28557221				; 01b3bfa5H
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN5@Custom:

; 266  : 		}
; 267  : 	}
; 268  : 	if (message == 4537823 && cangainammo == 1)

	cmp	DWORD PTR _message$[ebp], 4537823	; 00453ddfH
	jne	SHORT $LN3@Custom
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 1
	jne	SHORT $LN3@Custom

; 269  : 	{
; 270  : 		if (Ammo < 4 && Get_Current_Bullets(obj) < 4)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 4
	jge	SHORT $LN3@Custom
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Current_Bullets@@YAHPAVScriptableGameObj@@@Z ; Get_Current_Bullets
	add	esp, 4
	cmp	eax, 4
	jge	SHORT $LN3@Custom

; 271  : 		{
; 272  : 			Ammo += 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], ecx

; 273  : 			Set_Current_Clip_Bullets(obj,Get_Current_Bullets(obj) + 1);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Current_Bullets@@YAHPAVScriptableGameObj@@@Z ; Get_Current_Bullets
	add	esp, 4
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8

; 274  : 			Commands->Start_Timer(obj,this,2.00f,28557221);

	push	28557221				; 01b3bfa5H
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN3@Custom:

; 275  : 		}
; 276  : 	}
; 277  : 	if (message == 4537822 && cangainammo == 1)

	cmp	DWORD PTR _message$[ebp], 4537822	; 00453ddeH
	jne	SHORT $LN2@Custom
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 1
	jne	SHORT $LN2@Custom

; 278  : 	{
; 279  : 		Currentammo = Get_Current_Bullets(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Current_Bullets@@YAHPAVScriptableGameObj@@@Z ; Get_Current_Bullets
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], eax

; 280  : 		cangainammo = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0

; 281  : 		Set_Current_Clip_Bullets(obj,0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8

; 282  : 		Commands->Enable_Engine(obj,false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+552]
	call	edx
	add	esp, 8
$LN2@Custom:

; 283  : 	}
; 284  : 	if (message == 4537821 && cangainammo == 0)

	cmp	DWORD PTR _message$[ebp], 4537821	; 00453dddH
	jne	SHORT $LN1@Custom
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 0
	jne	SHORT $LN1@Custom

; 285  : 	{
; 286  : 		cangainammo = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 1

; 287  : 		Set_Current_Clip_Bullets(obj,Currentammo);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8

; 288  : 		Commands->Enable_Engine(obj,true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+552]
	call	edx
	add	esp, 8
$LN1@Custom:

; 289  : 	}
; 290  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@JMG_Ship_Weapon@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; JMG_Ship_Weapon::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_Ship_Weapon@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_Ship_Weapon@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_Ship_Weapon::Created, COMDAT
; _this$ = ecx

; 249  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 250  : 	Commands->Start_Timer(obj,this,0.1f,28557222);

	push	28557222				; 01b3bfa6H
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 251  : 	Commands->Start_Timer(obj,this,0.1f,28557223);

	push	28557223				; 01b3bfa7H
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 252  : 	Commands->Start_Timer(obj,this,10.0f,28557224);

	push	28557224				; 01b3bfa8H
	push	ecx
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 253  : 	Ammo = 4;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 4

; 254  : 	ammocheck = 20;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 20			; 00000014H

; 255  : 	Currentammo = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 1

; 256  : 	cangainammo = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 1

; 257  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_Ship_Weapon@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_Ship_Weapon::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_Random_Music@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_Random_Music@@UAEPAXI@Z PROC			; JMG_Random_Music::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_Random_Music@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_Random_Music@@UAEPAXI@Z ENDP			; JMG_Random_Music::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_Random_Music@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_Random_Music@@UAE@XZ PROC			; JMG_Random_Music::~JMG_Random_Music, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_Random_Music@@UAE@XZ ENDP			; JMG_Random_Music::~JMG_Random_Music
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_Random_Music@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_Random_Music@@QAE@XZ PROC			; JMG_Random_Music::JMG_Random_Music, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_Random_Music@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_Random_Music@@QAE@XZ ENDP			; JMG_Random_Music::JMG_Random_Music
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_Random_Music@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_repeat$1 = -20						; size = 4
_tempsongnumber$2 = -16					; size = 4
_repeat$3 = -12						; size = 4
_repeat$4 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_Random_Music@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_Random_Music::Timer_Expired, COMDAT
; _this$ = ecx

; 189  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 190  : 	if (number == 48557224)

	cmp	DWORD PTR _number$[ebp], 48557224	; 02e4eca8H
	jne	$LN1@Timer_Expi

; 191  : 	{
; 192  : 		if (songnumber == 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	$LN11@Timer_Expi

; 193  : 		{
; 194  : 			Commands->Set_Background_Music(Get_Parameter("Song1"));

	push	OFFSET ??_C@_05IPHJJOLO@Song1?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+208]
	call	ecx
	add	esp, 4

; 195  : 			Commands->Start_Timer(obj,this,Get_Float_Parameter("Song1Time"),48557224);

	push	48557224				; 02e4eca8H
	push	OFFSET ??_C@_09FKOCOGEO@Song1Time?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 196  : 			int repeat = Commands->Get_Random_Int(0,1);

	push	1
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _repeat$4[ebp], eax

; 197  : 			if (repeat == 1)

	cmp	DWORD PTR _repeat$4[ebp], 1
	jne	SHORT $LN12@Timer_Expi

; 198  : 			{
; 199  : 				songnumber = Commands->Get_Random_Int(0,2);

	push	2
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], eax
$LN12@Timer_Expi:

; 200  : 			}
; 201  : 			if (repeat == 0)

	cmp	DWORD PTR _repeat$4[ebp], 0
	jne	SHORT $LN11@Timer_Expi

; 202  : 			{
; 203  : 				songnumber = Commands->Get_Random_Int(1,2);

	push	2
	push	1
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], eax
$LN11@Timer_Expi:

; 204  : 			}
; 205  : 		}
; 206  : 		if (songnumber == 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 1
	jne	$LN5@Timer_Expi

; 207  : 		{
; 208  : 			Commands->Set_Background_Music(Get_Parameter("Song2"));

	push	OFFSET ??_C@_05KEFEMNHN@Song2?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+208]
	call	ecx
	add	esp, 4

; 209  : 			Commands->Start_Timer(obj,this,Get_Float_Parameter("Song2Time"),48557224);

	push	48557224				; 02e4eca8H
	push	OFFSET ??_C@_09NMHGJEOA@Song2Time?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 210  : 			int repeat = Commands->Get_Random_Int(0,1);

	push	1
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _repeat$3[ebp], eax

; 211  : 			if (repeat == 1)

	cmp	DWORD PTR _repeat$3[ebp], 1
	jne	SHORT $LN9@Timer_Expi

; 212  : 			{
; 213  : 				songnumber = Commands->Get_Random_Int(0,2);

	push	2
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], eax
$LN9@Timer_Expi:

; 214  : 			}
; 215  : 			if (repeat == 0)

	cmp	DWORD PTR _repeat$3[ebp], 0
	jne	SHORT $LN5@Timer_Expi

; 216  : 			{
; 217  : 				int tempsongnumber = Commands->Get_Random_Int(0,2);

	push	2
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _tempsongnumber$2[ebp], eax

; 218  : 				if (tempsongnumber == 1)

	cmp	DWORD PTR _tempsongnumber$2[ebp], 1
	jne	SHORT $LN6@Timer_Expi

; 219  : 				{
; 220  : 					tempsongnumber = Commands->Get_Random_Int(0,2);

	push	2
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _tempsongnumber$2[ebp], eax

; 221  : 					if (tempsongnumber == 1)

	cmp	DWORD PTR _tempsongnumber$2[ebp], 1
	jne	SHORT $LN6@Timer_Expi

; 222  : 					{
; 223  : 						tempsongnumber = 2;

	mov	DWORD PTR _tempsongnumber$2[ebp], 2
$LN6@Timer_Expi:

; 224  : 					}
; 225  : 				}
; 226  : 				if ((tempsongnumber == 0) || (tempsongnumber == 2))

	cmp	DWORD PTR _tempsongnumber$2[ebp], 0
	je	SHORT $LN4@Timer_Expi
	cmp	DWORD PTR _tempsongnumber$2[ebp], 2
	jne	SHORT $LN5@Timer_Expi
$LN4@Timer_Expi:

; 227  : 				{
; 228  : 					songnumber = tempsongnumber;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tempsongnumber$2[ebp]
	mov	DWORD PTR [eax+28], ecx
$LN5@Timer_Expi:

; 229  : 				}
; 230  : 			}
; 231  : 		}
; 232  : 		if (songnumber == 2)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 2
	jne	$LN1@Timer_Expi

; 233  : 		{
; 234  : 			Commands->Set_Background_Music(Get_Parameter("Song3"));

	push	OFFSET ??_C@_05LNEPPMDM@Song3?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+208]
	call	ecx
	add	esp, 4

; 235  : 			Commands->Start_Timer(obj,this,Get_Float_Parameter("Song3Time"),48557224);

	push	48557224				; 02e4eca8H
	push	OFFSET ??_C@_09BHCKEHEF@Song3Time?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 236  : 			int repeat = Commands->Get_Random_Int(0,1);

	push	1
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _repeat$1[ebp], eax

; 237  : 			if (repeat == 1)

	cmp	DWORD PTR _repeat$1[ebp], 1
	jne	SHORT $LN2@Timer_Expi

; 238  : 			{
; 239  : 				songnumber = Commands->Get_Random_Int(0,2);

	push	2
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], eax
$LN2@Timer_Expi:

; 240  : 			}
; 241  : 			if (repeat == 0)

	cmp	DWORD PTR _repeat$1[ebp], 0
	jne	SHORT $LN1@Timer_Expi

; 242  : 			{
; 243  : 				songnumber = Commands->Get_Random_Int(0,1);

	push	1
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], eax
$LN1@Timer_Expi:

; 244  : 			}
; 245  : 		}
; 246  : 	}
; 247  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_Random_Music@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_Random_Music::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_Random_Music@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_Random_Music@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_Random_Music::Created, COMDAT
; _this$ = ecx

; 170  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 171  : 	songnumber = Commands->Get_Random_Int(0,2);

	push	2
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], eax

; 172  : 	if (songnumber == 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN3@Created

; 173  : 	{
; 174  : 		Commands->Set_Background_Music(Get_Parameter("Song1"));

	push	OFFSET ??_C@_05IPHJJOLO@Song1?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+208]
	call	ecx
	add	esp, 4

; 175  : 		Commands->Start_Timer(obj,this,Get_Float_Parameter("Song1Time"),48557224);

	push	48557224				; 02e4eca8H
	push	OFFSET ??_C@_09FKOCOGEO@Song1Time?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN3@Created:

; 176  : 	}
; 177  : 	if (songnumber == 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 1
	jne	SHORT $LN2@Created

; 178  : 	{
; 179  : 		Commands->Set_Background_Music(Get_Parameter("Song2"));

	push	OFFSET ??_C@_05KEFEMNHN@Song2?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+208]
	call	ecx
	add	esp, 4

; 180  : 		Commands->Start_Timer(obj,this,Get_Float_Parameter("Song2Time"),48557224);

	push	48557224				; 02e4eca8H
	push	OFFSET ??_C@_09NMHGJEOA@Song2Time?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN2@Created:

; 181  : 	}
; 182  : 	if (songnumber == 2)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 2
	jne	SHORT $LN1@Created

; 183  : 	{
; 184  : 		Commands->Set_Background_Music(Get_Parameter("Song3"));

	push	OFFSET ??_C@_05LNEPPMDM@Song3?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+208]
	call	ecx
	add	esp, 4

; 185  : 		Commands->Start_Timer(obj,this,Get_Float_Parameter("Song3Time"),48557224);

	push	48557224				; 02e4eca8H
	push	OFFSET ??_C@_09BHCKEHEF@Song3Time?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN1@Created:

; 186  : 	}
; 187  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_Random_Music@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_Random_Music::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_Ship_Random_Hyperspace@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_Ship_Random_Hyperspace@@UAEPAXI@Z PROC		; JMG_Ship_Random_Hyperspace::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_Ship_Random_Hyperspace@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_Ship_Random_Hyperspace@@UAEPAXI@Z ENDP		; JMG_Ship_Random_Hyperspace::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_Ship_Random_Hyperspace@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_Ship_Random_Hyperspace@@UAE@XZ PROC		; JMG_Ship_Random_Hyperspace::~JMG_Ship_Random_Hyperspace, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_Ship_Random_Hyperspace@@UAE@XZ ENDP		; JMG_Ship_Random_Hyperspace::~JMG_Ship_Random_Hyperspace
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_Ship_Random_Hyperspace@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_Ship_Random_Hyperspace@@QAE@XZ PROC		; JMG_Ship_Random_Hyperspace::JMG_Ship_Random_Hyperspace, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_Ship_Random_Hyperspace@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_Ship_Random_Hyperspace@@QAE@XZ ENDP		; JMG_Ship_Random_Hyperspace::JMG_Ship_Random_Hyperspace
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_Ship_Random_Hyperspace@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_Ship_Random_Hyperspace@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_Ship_Random_Hyperspace::Timer_Expired, COMDAT
; _this$ = ecx

; 159  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 160  : 	if (number == 586733)

	cmp	DWORD PTR _number$[ebp], 586733		; 0008f3edH
	jne	SHORT $LN2@Timer_Expi

; 161  : 	{
; 162  : 		Commands->Send_Custom_Event(obj,obj,48473852,1,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	1
	push	48473852				; 02e3a6fcH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN2@Timer_Expi:

; 163  : 	}
; 164  : 	if (number == 586734)

	cmp	DWORD PTR _number$[ebp], 586734		; 0008f3eeH
	jne	SHORT $LN1@Timer_Expi

; 165  : 	{
; 166  : 		Has_Recived_Message = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
$LN1@Timer_Expi:

; 167  : 	}
; 168  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_Ship_Random_Hyperspace@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_Ship_Random_Hyperspace::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Custom@JMG_Ship_Random_Hyperspace@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
$T1 = -116						; size = 12
$T2 = -104						; size = 12
_sound$3 = -28						; size = 12
_pos$4 = -16						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_message$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@JMG_Ship_Random_Hyperspace@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; JMG_Ship_Random_Hyperspace::Custom, COMDAT
; _this$ = ecx

; 134  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 116				; 00000074H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 135  : 	//Start Hyper Spacing
; 136  : 	if ((message == 48473851) && (Has_Recived_Message == 0))

	cmp	DWORD PTR _message$[ebp], 48473851	; 02e3a6fbH
	jne	$LN2@Custom
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	$LN2@Custom

; 137  : 	{
; 138  : 		Has_Recived_Message = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 1

; 139  : 		Commands->Set_Model(obj,Get_Parameter("HyperspacingModel"));

	push	OFFSET ??_C@_0BC@PNBOLPNL@HyperspacingModel?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 140  : 		Commands->Start_Timer(obj,this,2.0f,586733);

	push	586733					; 0008f3edH
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 141  : 		Commands->Send_Custom_Event(obj,obj,4537822,1,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	1
	push	4537822					; 00453ddeH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN2@Custom:

; 142  : 	}
; 143  : 	//go now
; 144  : 	if (message == 48473852)

	cmp	DWORD PTR _message$[ebp], 48473852	; 02e3a6fcH
	jne	$LN1@Custom

; 145  : 	{
; 146  : 		Vector3 pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos$4[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 147  : 		pos.X = Commands->Get_Random(-100,100);

	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c2c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR _pos$4[ebp]

; 148  : 		pos.Y = Commands->Get_Random(-100,100);

	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c2c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR _pos$4[ebp+4]

; 149  : 		pos.Z += 0.0f;

	movss	xmm0, DWORD PTR _pos$4[ebp+8]
	addss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _pos$4[ebp+8], xmm0

; 150  : 		Commands->Set_Position(obj,pos);

	lea	eax, DWORD PTR _pos$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8

; 151  : 		Commands->Set_Model(obj,OriginalModel);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+160]
	call	ecx
	add	esp, 8

; 152  : 		Vector3 sound = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _sound$3[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 153  : 		Commands->Create_Sound(Get_Parameter("HyperSpaceSound"),sound,obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sound$3[ebp]
	push	ecx
	push	OFFSET ??_C@_0BA@FKGDDIBN@HyperSpaceSound?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+172]
	call	eax
	add	esp, 12					; 0000000cH

; 154  : 		Commands->Start_Timer(obj,this,30.0f,586734);

	push	586734					; 0008f3eeH
	push	ecx
	movss	xmm0, DWORD PTR __real@41f00000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 155  : 		Commands->Send_Custom_Event(obj,obj,4537821,1,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	1
	push	4537821					; 00453dddH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN1@Custom:

; 156  : 	}
; 157  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@JMG_Ship_Random_Hyperspace@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; JMG_Ship_Random_Hyperspace::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_Ship_Random_Hyperspace@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_Ship_Random_Hyperspace@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_Ship_Random_Hyperspace::Created, COMDAT
; _this$ = ecx

; 128  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 129  : 	Has_Recived_Message = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0

; 130  : 	OriginalModel = Get_Model(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Model@@YAPBDPAVScriptableGameObj@@@Z ; Get_Model
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax

; 131  : 	Commands->Set_Model(obj,OriginalModel);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+160]
	call	ecx
	add	esp, 8

; 132  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_Ship_Random_Hyperspace@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_Ship_Random_Hyperspace::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_Advanced_Bounce_Zone@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_Advanced_Bounce_Zone@@UAEPAXI@Z PROC		; JMG_Advanced_Bounce_Zone::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_Advanced_Bounce_Zone@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_Advanced_Bounce_Zone@@UAEPAXI@Z ENDP		; JMG_Advanced_Bounce_Zone::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_Advanced_Bounce_Zone@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_Advanced_Bounce_Zone@@UAE@XZ PROC		; JMG_Advanced_Bounce_Zone::~JMG_Advanced_Bounce_Zone, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_Advanced_Bounce_Zone@@UAE@XZ ENDP		; JMG_Advanced_Bounce_Zone::~JMG_Advanced_Bounce_Zone
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_Advanced_Bounce_Zone@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_Advanced_Bounce_Zone@@QAE@XZ PROC		; JMG_Advanced_Bounce_Zone::JMG_Advanced_Bounce_Zone, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_Advanced_Bounce_Zone@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_Advanced_Bounce_Zone@@QAE@XZ ENDP		; JMG_Advanced_Bounce_Zone::JMG_Advanced_Bounce_Zone
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Entered@JMG_Advanced_Bounce_Zone@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
tv231 = -96						; size = 4
tv226 = -96						; size = 4
tv222 = -96						; size = 4
tv217 = -96						; size = 4
tv212 = -96						; size = 4
tv208 = -96						; size = 4
tv203 = -96						; size = 4
tv198 = -96						; size = 4
tv194 = -96						; size = 4
$T1 = -92						; size = 12
_pos$ = -16						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_enter$ = 12						; size = 4
?Entered@JMG_Advanced_Bounce_Zone@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_Advanced_Bounce_Zone::Entered, COMDAT
; _this$ = ecx

; 110  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 111  : 	Vector3 pos;

	lea	ecx, DWORD PTR _pos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 112  : 	pos = Commands->Get_Position(enter);

	mov	eax, DWORD PTR _enter$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 113  : 	if ((Get_Float_Parameter("ZAmount") > 0) || (Get_Float_Parameter("ZAmount") < 0))

	push	OFFSET ??_C@_07EGLEEHDL@ZAmount?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR tv194[ebp]
	movss	xmm0, DWORD PTR tv194[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	ja	SHORT $LN5@Entered
	push	OFFSET ??_C@_07EGLEEHDL@ZAmount?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR tv198[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR tv198[ebp]
	jbe	SHORT $LN6@Entered
$LN5@Entered:

; 114  : 	{
; 115  : 		pos.Z += Get_Float_Parameter("ZAmount");

	push	OFFSET ??_C@_07EGLEEHDL@ZAmount?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR tv203[ebp]
	movss	xmm0, DWORD PTR tv203[ebp]
	addss	xmm0, DWORD PTR _pos$[ebp+8]
	movss	DWORD PTR _pos$[ebp+8], xmm0
$LN6@Entered:

; 116  : 	}
; 117  : 	if ((Get_Float_Parameter("YAmount") > 0) || (Get_Float_Parameter("YAmount") < 0))

	push	OFFSET ??_C@_07MIDLEANI@YAmount?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR tv208[ebp]
	movss	xmm0, DWORD PTR tv208[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	ja	SHORT $LN3@Entered
	push	OFFSET ??_C@_07MIDLEANI@YAmount?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR tv212[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR tv212[ebp]
	jbe	SHORT $LN4@Entered
$LN3@Entered:

; 118  : 	{
; 119  : 		pos.Y += Get_Float_Parameter("YAmount");

	push	OFFSET ??_C@_07MIDLEANI@YAmount?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR tv217[ebp]
	movss	xmm0, DWORD PTR tv217[ebp]
	addss	xmm0, DWORD PTR _pos$[ebp+4]
	movss	DWORD PTR _pos$[ebp+4], xmm0
$LN4@Entered:

; 120  : 	}
; 121  : 	if ((Get_Float_Parameter("XAmount") > 0) || (Get_Float_Parameter("XAmount") < 0))

	push	OFFSET ??_C@_07EJBEAEG@XAmount?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR tv222[ebp]
	movss	xmm0, DWORD PTR tv222[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	ja	SHORT $LN1@Entered
	push	OFFSET ??_C@_07EJBEAEG@XAmount?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR tv226[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR tv226[ebp]
	jbe	SHORT $LN2@Entered
$LN1@Entered:

; 122  : 	{
; 123  : 		pos.X += Get_Float_Parameter("XAmount");

	push	OFFSET ??_C@_07EJBEAEG@XAmount?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR tv231[ebp]
	movss	xmm0, DWORD PTR tv231[ebp]
	addss	xmm0, DWORD PTR _pos$[ebp]
	movss	DWORD PTR _pos$[ebp], xmm0
$LN2@Entered:

; 124  : 	}
; 125  : 	Commands->Set_Position(enter,pos);

	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _enter$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8

; 126  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Entered@JMG_Advanced_Bounce_Zone@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_Advanced_Bounce_Zone::Entered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_Create_Ship_On_Poke@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_Create_Ship_On_Poke@@UAEPAXI@Z PROC		; JMG_Create_Ship_On_Poke::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_Create_Ship_On_Poke@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_Create_Ship_On_Poke@@UAEPAXI@Z ENDP		; JMG_Create_Ship_On_Poke::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_Create_Ship_On_Poke@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_Create_Ship_On_Poke@@UAE@XZ PROC			; JMG_Create_Ship_On_Poke::~JMG_Create_Ship_On_Poke, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_Create_Ship_On_Poke@@UAE@XZ ENDP			; JMG_Create_Ship_On_Poke::~JMG_Create_Ship_On_Poke
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_Create_Ship_On_Poke@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_Create_Ship_On_Poke@@QAE@XZ PROC			; JMG_Create_Ship_On_Poke::JMG_Create_Ship_On_Poke, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_Create_Ship_On_Poke@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_Create_Ship_On_Poke@@QAE@XZ ENDP			; JMG_Create_Ship_On_Poke::JMG_Create_Ship_On_Poke
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_Create_Ship_On_Poke@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
tv243 = -152						; size = 4
$T1 = -148						; size = 12
$T2 = -136						; size = 12
_object$3 = -60						; size = 4
_object$4 = -56						; size = 4
_pos$5 = -52						; size = 12
_object3$6 = -40					; size = 4
_object2$7 = -36					; size = 4
_object$8 = -32						; size = 4
_object2$9 = -28					; size = 4
_pos$10 = -24						; size = 12
_object$11 = -12					; size = 4
_Ship$12 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_Create_Ship_On_Poke@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_Create_Ship_On_Poke::Timer_Expired, COMDAT
; _this$ = ecx

; 63   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 152				; 00000098H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 64   : 	if (number == 6546585)

	cmp	DWORD PTR _number$[ebp], 6546585	; 0063e499H
	jne	$LN6@Timer_Expi

; 65   : 	{
; 66   : 		GameObject *Ship = Commands->Find_Object(ShipID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Ship$12[ebp], eax

; 67   : 		if ((Commands->Get_Health(Ship) == 0) && (ShipID > 0))

	mov	eax, DWORD PTR _Ship$12[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv243[ebp]
	movss	xmm0, DWORD PTR tv243[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	$LN5@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jle	$LN5@Timer_Expi

; 68   : 		{
; 69   : 			GameObject *object = Commands->Find_Object(YourID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _object$11[ebp], eax

; 70   : 			Vector3 pos = Commands->Get_Position(object);

	mov	eax, DWORD PTR _object$11[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos$10[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 71   : 			GameObject *object2 = Commands->Create_Object(Get_Parameter("InvisibleObject"),pos);

	lea	eax, DWORD PTR _pos$10[ebp]
	push	eax
	push	OFFSET ??_C@_0BA@HCADMAFB@InvisibleObject?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _object2$9[ebp], eax

; 72   : 			ViewingBoxID = Commands->Get_ID(object2);

	mov	eax, DWORD PTR _object2$9[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], eax

; 73   : 			cango = 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 1

; 74   : 			Commands->Start_Timer(obj,this,0.00f,6546588);	

	push	6546588					; 0063e49cH
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 75   : 			Commands->Start_Timer(obj,this,5.0f,6546586);

	push	6546586					; 0063e49aH
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 76   : 			Commands->Start_Timer(obj,this,0.5f,6546589);

	push	6546589					; 0063e49dH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN5@Timer_Expi:

; 77   : 		}
; 78   : 		Commands->Start_Timer(obj,this,0.1f,6546585);

	push	6546585					; 0063e499H
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN6@Timer_Expi:

; 79   : 	}
; 80   : 	if (number == 6546586)

	cmp	DWORD PTR _number$[ebp], 6546586	; 0063e49aH
	jne	$LN4@Timer_Expi

; 81   : 	{
; 82   : 		GameObject *object = Commands->Find_Object(YourID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _object$8[ebp], eax

; 83   : 		GameObject *object2 = Commands->Find_Object(ViewingBoxID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _object2$7[ebp], eax

; 84   : 		GameObject *object3 = Commands->Find_Object(BotID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _object3$6[ebp], eax

; 85   : 		Vector3 pos = Commands->Get_Position(object3);

	mov	eax, DWORD PTR _object3$6[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos$5[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 86   : 		Commands->Destroy_Object(object3);

	mov	eax, DWORD PTR _object3$6[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4

; 87   : 		Commands->Apply_Damage(object2,9999999.00f,"BlamoKiller",0);

	push	0
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@4b18967f
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _object2$7[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H

; 88   : 		Commands->Set_Position(object,pos);

	lea	eax, DWORD PTR _pos$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _object$8[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8

; 89   : 		Commands->Set_Shield_Type(object,armor);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR _object$8[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+244]
	call	ecx
	add	esp, 8

; 90   : 		Commands->Set_Model(object,Your3DModel);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	mov	edx, DWORD PTR _object$8[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+160]
	call	ecx
	add	esp, 8

; 91   : 		ShipID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN4@Timer_Expi:

; 92   : 	}
; 93   : 	if (number == 6546587)

	cmp	DWORD PTR _number$[ebp], 6546587	; 0063e49bH
	jne	SHORT $LN3@Timer_Expi

; 94   : 	{
; 95   : 		GameObject *object = Commands->Find_Object(YourID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _object$4[ebp], eax

; 96   : 		Soldier_Transition_Vehicle(object);

	mov	eax, DWORD PTR _object$4[ebp]
	push	eax
	call	?Soldier_Transition_Vehicle@@YAXPAVScriptableGameObj@@@Z ; Soldier_Transition_Vehicle
	add	esp, 4
$LN3@Timer_Expi:

; 97   : 	}
; 98   : 	if ((number == 6546588) && (cango == 1))

	cmp	DWORD PTR _number$[ebp], 6546588	; 0063e49cH
	jne	SHORT $LN2@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 1
	jne	SHORT $LN2@Timer_Expi

; 99   : 	{
; 100  : 		GameObject *object = Commands->Find_Object(YourID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _object$3[ebp], eax

; 101  : 		Soldier_Transition_Vehicle(object);

	mov	eax, DWORD PTR _object$3[ebp]
	push	eax
	call	?Soldier_Transition_Vehicle@@YAXPAVScriptableGameObj@@@Z ; Soldier_Transition_Vehicle
	add	esp, 4

; 102  : 		Commands->Start_Timer(obj,this,0.10f,6546588);

	push	6546588					; 0063e49cH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN2@Timer_Expi:

; 103  : 	}
; 104  : 	if ((number == 6546589))

	cmp	DWORD PTR _number$[ebp], 6546589	; 0063e49dH
	jne	SHORT $LN1@Timer_Expi

; 105  : 	{
; 106  : 		cango = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
$LN1@Timer_Expi:

; 107  : 	}
; 108  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_Create_Ship_On_Poke@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_Create_Ship_On_Poke::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Poked@JMG_Create_Ship_On_Poke@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
$T1 = -112						; size = 12
$T2 = -100						; size = 12
_object$3 = -24						; size = 4
_bot$4 = -20						; size = 4
_pos$5 = -16						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_poker$ = 12						; size = 4
?Poked@JMG_Create_Ship_On_Poke@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_Create_Ship_On_Poke::Poked, COMDAT
; _this$ = ecx

; 40   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 112				; 00000070H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 	if (ShipID == 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	$LN1@Poked

; 42   : 	{
; 43   : 		Vector3 pos = Get_Vector3_Parameter("CreateSpot");

	push	OFFSET ??_C@_0L@HPJBEPCP@CreateSpot?$AA@
	lea	eax, DWORD PTR _pos$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Vector3_Parameter@ScriptImpClass@@QAE?AVVector3@@PBD@Z ; ScriptImpClass::Get_Vector3_Parameter

; 44   : 		Commands->Create_Explosion(Get_Parameter("SpawnSpotExplosion"),pos,0);

	push	0
	lea	eax, DWORD PTR _pos$5[ebp]
	push	eax
	push	OFFSET ??_C@_0BD@PHBEHGCL@SpawnSpotExplosion?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+416]
	call	edx
	add	esp, 12					; 0000000cH

; 45   : 		Commands->Create_Explosion(Get_Parameter("SpawnSpotExplosion"),pos,0);

	push	0
	lea	eax, DWORD PTR _pos$5[ebp]
	push	eax
	push	OFFSET ??_C@_0BD@PHBEHGCL@SpawnSpotExplosion?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+416]
	call	edx
	add	esp, 12					; 0000000cH

; 46   : 		Commands->Create_Explosion(Get_Parameter("SpawnSpotExplosion"),pos,0);

	push	0
	lea	eax, DWORD PTR _pos$5[ebp]
	push	eax
	push	OFFSET ??_C@_0BD@PHBEHGCL@SpawnSpotExplosion?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+416]
	call	edx
	add	esp, 12					; 0000000cH

; 47   : 		Commands->Create_Explosion(Get_Parameter("SpawnSpotExplosion"),pos,0);

	push	0
	lea	eax, DWORD PTR _pos$5[ebp]
	push	eax
	push	OFFSET ??_C@_0BD@PHBEHGCL@SpawnSpotExplosion?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+416]
	call	edx
	add	esp, 12					; 0000000cH

; 48   : 		YourID = Commands->Get_ID(poker);

	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax

; 49   : 		Your3DModel = Get_Model(poker);

	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	call	?Get_Model@@YAPBDPAVScriptableGameObj@@@Z ; Get_Model
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], eax

; 50   : 		armor = Get_Shield_Type(poker);

	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	call	?Get_Shield_Type@@YAPBDPAVScriptableGameObj@@@Z ; Get_Shield_Type
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], eax

; 51   : 		Commands->Set_Shield_Type(poker,"blamo");

	push	OFFSET ??_C@_05HGDDNFDM@blamo?$AA@
	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+244]
	call	edx
	add	esp, 8

; 52   : 		Commands->Set_Model(poker,"NULL");

	push	OFFSET ??_C@_04HIBGFPH@NULL?$AA@
	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 53   : 		GameObject *bot = Commands->Create_Object(Commands->Get_Preset_Name(poker),Commands->Get_Position(poker));

	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _poker$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+116]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _bot$4[ebp], eax

; 54   : 		BotID = Commands->Get_ID(bot);

	mov	eax, DWORD PTR _bot$4[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], eax

; 55   : 		GameObject *object = Commands->Create_Object(Get_Parameter("ShipPreset"),pos);

	lea	eax, DWORD PTR _pos$5[ebp]
	push	eax
	push	OFFSET ??_C@_0L@KDKMBANG@ShipPreset?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _object$3[ebp], eax

; 56   : 		ShipID = Commands->Get_ID(object);

	mov	eax, DWORD PTR _object$3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax

; 57   : 		Commands->Set_Position(poker,Commands->Get_Position(object));

	mov	eax, DWORD PTR _object$3[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _poker$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8

; 58   : 		Commands->Start_Timer(obj,this,0.1f,6546585);

	push	6546585					; 0063e499H
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 59   : 		Commands->Start_Timer(obj,this,0.15f,6546587);

	push	6546587					; 0063e49bH
	push	ecx
	movss	xmm0, DWORD PTR __real@3e19999a
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN1@Poked:

; 60   : 	}
; 61   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Poked@JMG_Create_Ship_On_Poke@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_Create_Ship_On_Poke::Poked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_Create_Ship_On_Poke@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_Create_Ship_On_Poke@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_Create_Ship_On_Poke::Created, COMDAT
; _this$ = ecx

; 31   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 32   : 	ShipID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 33   : 	YourID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0

; 34   : 	armor = "null";

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], OFFSET ??_C@_04MLLLIHIP@null?$AA@

; 35   : 	BotID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0

; 36   : 	ViewingBoxID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0

; 37   : 	cango = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0

; 38   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_Create_Ship_On_Poke@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_Create_Ship_On_Poke::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_Player_Drone@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_Player_Drone@@UAEPAXI@Z PROC		; JMG_CMTB_Player_Drone::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_Player_Drone@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_Player_Drone@@UAEPAXI@Z ENDP		; JMG_CMTB_Player_Drone::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_Player_Drone@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_Player_Drone@@UAE@XZ PROC			; JMG_CMTB_Player_Drone::~JMG_CMTB_Player_Drone, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_Player_Drone@@UAE@XZ ENDP			; JMG_CMTB_Player_Drone::~JMG_CMTB_Player_Drone
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??0JMG_CMTB_Player_Drone@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_Player_Drone@@QAE@XZ PROC			; JMG_CMTB_Player_Drone::JMG_CMTB_Player_Drone, COMDAT
; _this$ = ecx

; 2368 : 	JMG_CMTB_Player_Drone()

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_Player_Drone@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 2369 : 	{
; 2370 : 		MyObject = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0

; 2371 : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_Player_Drone@@QAE@XZ ENDP			; JMG_CMTB_Player_Drone::JMG_CMTB_Player_Drone
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?ShieldOn@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?ShieldOn@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Player_Drone::ShieldOn, COMDAT
; _this$ = ecx

; 4278 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4279 : 	if (!MyObject)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 0
	jne	SHORT $LN2@ShieldOn

; 4280 : 		return;

	jmp	$LN3@ShieldOn
$LN2@ShieldOn:

; 4281 : 	MyObject->Type = PlayerDroneShield;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR [ecx+16], 13			; 0000000dH

; 4282 : 	MyObject->Size = 0.775f;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	movss	xmm0, DWORD PTR __real@3f466666
	movss	DWORD PTR [ecx+4], xmm0

; 4283 : 	Power -= Commands->Get_Random_Int(0,3);

	push	3
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+116]
	sub	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], ecx

; 4284 : 	if (Power < 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+116], 0
	jge	SHORT $LN1@ShieldOn

; 4285 : 		Power = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+116], 0
$LN1@ShieldOn:

; 4286 : 	Set_Skin(obj,"Blamo");

	push	OFFSET ??_C@_05HBJPNAAK@Blamo?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Set_Skin@@YAXPAVScriptableGameObj@@PBD@Z ; Set_Skin
	add	esp, 8

; 4287 : 	Commands->Set_Animation(obj,myAnimation,false,0,2,2,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH
$LN3@ShieldOn:

; 4288 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?ShieldOn@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Player_Drone::ShieldOn
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?ShieldOff@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?ShieldOff@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Player_Drone::ShieldOff, COMDAT
; _this$ = ecx

; 4269 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4270 : 	if (!MyObject || ShieldOverride)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 0
	je	SHORT $LN1@ShieldOff
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+48]
	test	ecx, ecx
	je	SHORT $LN2@ShieldOff
$LN1@ShieldOff:

; 4271 : 		return;

	jmp	SHORT $LN3@ShieldOff
$LN2@ShieldOff:

; 4272 : 	MyObject->Size = 0.105625f; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	movss	xmm0, DWORD PTR __real@3dd851ec
	movss	DWORD PTR [ecx+4], xmm0

; 4273 : 	MyObject->Type = PlayerDrone;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR [ecx+16], 12			; 0000000cH

; 4274 : 	Set_Skin(obj,"None");

	push	OFFSET ??_C@_04OHJIHAFH@None?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Set_Skin@@YAXPAVScriptableGameObj@@PBD@Z ; Set_Skin
	add	esp, 8

; 4275 : 	Commands->Set_Animation(obj,myAnimation,false,0,0,0,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH
$LN3@ShieldOff:

; 4276 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?ShieldOff@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Player_Drone::ShieldOff
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Position_At_Player@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
tv196 = -108						; size = 4
tv182 = -108						; size = 4
tv190 = -104						; size = 4
tv176 = -104						; size = 4
tv168 = -104						; size = 4
$T1 = -100						; size = 12
_Rotation$2 = -24					; size = 4
_CreateSpot$3 = -20					; size = 12
_PlayerShip$ = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Position_At_Player@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Player_Drone::Position_At_Player, COMDAT
; _this$ = ecx

; 4255 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4256 : 	if (!Get_Int_Parameter("PlayerEscort"))

	push	OFFSET ??_C@_0N@INKKNFJM@PlayerEscort?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN2@Position_A

; 4257 : 		return;

	jmp	$LN3@Position_A
$LN2@Position_A:

; 4258 : 	GameObject *PlayerShip = MiniGamePlayerControlSystem[Get_Int_Parameter("PlayerNumber")].PlayerShip;

	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	mov	eax, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	mov	DWORD PTR _PlayerShip$[ebp], eax

; 4259 : 	if (PlayerShip)

	cmp	DWORD PTR _PlayerShip$[ebp], 0
	je	$LN1@Position_A

; 4260 : 	{
; 4261 : 		Vector3 CreateSpot = Commands->Get_Position(PlayerShip);

	mov	eax, DWORD PTR _PlayerShip$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _CreateSpot$3[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 4262 : 		float Rotation = Commands->Get_Facing(PlayerShip)-(180+FollowAngle);

	mov	eax, DWORD PTR _PlayerShip$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+72]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv168[ebp]
	movss	xmm0, DWORD PTR tv168[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR __real@43340000
	addss	xmm1, DWORD PTR [eax+132]
	subss	xmm0, xmm1
	movss	DWORD PTR _Rotation$2[ebp], xmm0

; 4263 : 		CreateSpot.X += 15.0f*(cos(JmgUtility::MathClampDegrees(Rotation)*3.14159265f/180));

	push	ecx
	movss	xmm0, DWORD PTR _Rotation$2[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?MathClampDegrees@JmgUtility@@SAMM@Z	; JmgUtility::MathClampDegrees
	add	esp, 4
	fstp	DWORD PTR tv176[ebp]
	movss	xmm0, DWORD PTR tv176[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv182[ebp]
	movss	xmm0, DWORD PTR tv182[ebp]
	mulss	xmm0, DWORD PTR __real@41700000
	addss	xmm0, DWORD PTR _CreateSpot$3[ebp]
	movss	DWORD PTR _CreateSpot$3[ebp], xmm0

; 4264 : 		CreateSpot.Y += 15.0f*(sin(JmgUtility::MathClampDegrees(Rotation)*3.14159265f/180));

	push	ecx
	movss	xmm0, DWORD PTR _Rotation$2[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?MathClampDegrees@JmgUtility@@SAMM@Z	; JmgUtility::MathClampDegrees
	add	esp, 4
	fstp	DWORD PTR tv190[ebp]
	movss	xmm0, DWORD PTR tv190[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR tv196[ebp]
	movss	xmm0, DWORD PTR tv196[ebp]
	mulss	xmm0, DWORD PTR __real@41700000
	addss	xmm0, DWORD PTR _CreateSpot$3[ebp+4]
	movss	DWORD PTR _CreateSpot$3[ebp+4], xmm0

; 4265 : 		Commands->Set_Position(obj,CreateSpot);

	lea	eax, DWORD PTR _CreateSpot$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8
$LN1@Position_A:
$LN3@Position_A:

; 4266 : 	}
; 4267 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Position_At_Player@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Player_Drone::Position_At_Player
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Drone_Attack@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
tv194 = -296						; size = 4
$T1 = -292						; size = 12
$T2 = -280						; size = 12
_params$3 = -204					; size = 196
_Target$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Drone_Attack@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Player_Drone::Drone_Attack, COMDAT
; _this$ = ecx

; 4219 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 296				; 00000128H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4220 : 	GameObject *Target = Commands->Find_Object(TargetID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Target$[ebp], eax

; 4221 : 	if (Target)

	cmp	DWORD PTR _Target$[ebp], 0
	je	$LN6@Drone_Atta

; 4222 : 	{
; 4223 : 		if (JmgUtility::SimpleDistance(Commands->Get_Position(obj),Commands->Get_Position(Target)) > 2500.0f)

	mov	eax, DWORD PTR _Target$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR tv194[ebp]
	movss	xmm0, DWORD PTR tv194[ebp]
	comiss	xmm0, DWORD PTR __real@451c4000
	jbe	SHORT $LN5@Drone_Atta

; 4224 : 		{
; 4225 : 			TargetID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0

; 4226 : 			SearchTimeDelay = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 0

; 4227 : 			MyState = DroneGuarding;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 1
$LN5@Drone_Atta:

; 4228 : 		}
; 4229 : 
; 4230 : 		if (LastTargetID == TargetID && LastPrimaryFire == PrimaryFire)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+92]
	cmp	edx, DWORD PTR [ecx+88]
	jne	SHORT $LN4@Drone_Atta
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+129]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+128]
	cmp	ecx, eax
	jne	SHORT $LN4@Drone_Atta

; 4231 : 			return;

	jmp	$LN7@Drone_Atta
$LN4@Drone_Atta:

; 4232 : 		ActionParamsStruct params;

	lea	ecx, DWORD PTR _params$3[ebp]
	call	??0ActionParamsStruct@@QAE@XZ		; ActionParamsStruct::ActionParamsStruct

; 4233 : 		params.Set_Basic(this,100,10);

	push	-1
	push	10					; 0000000aH
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$3[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 4234 : 		params.Set_Movement(Target,1.0f,TargetSize+5.0f,false);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+140]
	addss	xmm0, DWORD PTR __real@40a00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Target$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _params$3[ebp]
	call	?Set_Movement@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z ; ActionParamsStruct::Set_Movement

; 4235 : 		params.MovePathfind=false;

	mov	BYTE PTR _params$3[ebp+71], 0

; 4236 : 		params.ShutdownEngineOnArrival = true;

	mov	BYTE PTR _params$3[ebp+72], 1

; 4237 : 		Commands->Action_Goto(obj,params);

	lea	eax, DWORD PTR _params$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+16]
	call	eax
	add	esp, 8

; 4238 : 		params.Set_Basic(this,100,1);

	push	-1
	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$3[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 4239 : 		if (PrimaryFire)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+128]
	test	ecx, ecx
	je	SHORT $LN3@Drone_Atta

; 4240 : 			params.Set_Attack(Target,50.0f,0,true);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@42480000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$3[ebp]
	call	?Set_Attack@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z ; ActionParamsStruct::Set_Attack

; 4241 : 		else

	jmp	SHORT $LN2@Drone_Atta
$LN3@Drone_Atta:

; 4242 : 			params.Set_Attack(Target,75.0f,0,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@42960000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$3[ebp]
	call	?Set_Attack@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z ; ActionParamsStruct::Set_Attack
$LN2@Drone_Atta:

; 4243 : 		Commands->Action_Attack(obj,params);

	lea	eax, DWORD PTR _params$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+20]
	call	eax
	add	esp, 8

; 4244 : 		LastTargetID = TargetID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR [eax+92], edx

; 4245 : 		LastPrimaryFire = PrimaryFire;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+128]
	mov	BYTE PTR [eax+129], dl

; 4246 : 	}
; 4247 : 	else

	jmp	SHORT $LN1@Drone_Atta
$LN6@Drone_Atta:

; 4248 : 	{
; 4249 : 		TargetID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0

; 4250 : 		SearchTimeDelay = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 0

; 4251 : 		MyState = DroneGuarding;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 1
$LN1@Drone_Atta:
$LN7@Drone_Atta:

; 4252 : 	}
; 4253 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Drone_Attack@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Player_Drone::Drone_Attack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?AI_Update@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@_N@Z
_TEXT	SEGMENT
tv532 = -420						; size = 4
tv527 = -416						; size = 4
tv731 = -412						; size = 4
tv615 = -412						; size = 4
tv599 = -412						; size = 4
tv710 = -408						; size = 4
tv698 = -408						; size = 4
tv634 = -408						; size = 4
tv609 = -408						; size = 4
tv593 = -408						; size = 4
tv567 = -408						; size = 4
tv548 = -408						; size = 4
tv538 = -408						; size = 4
tv517 = -408						; size = 4
tv496 = -408						; size = 4
tv81 = -408						; size = 4
$T1 = -404						; size = 12
$T2 = -392						; size = 12
$T3 = -380						; size = 12
$T4 = -368						; size = 12
$T5 = -356						; size = 12
$T6 = -344						; size = 12
$T7 = -332						; size = 12
$T8 = -320						; size = 12
_Distance$ = -244					; size = 4
_TargetDirection$ = -240				; size = 4
_Rotation$ = -236					; size = 4
_Facing$ = -232						; size = 4
_Pos$ = -228						; size = 12
_MyPos$ = -216						; size = 12
_AvoidObject$ = -204					; size = 4
_params$ = -200						; size = 196
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_Reset$ = 12						; size = 1
?AI_Update@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@_N@Z PROC ; JMG_CMTB_Player_Drone::AI_Update, COMDAT
; _this$ = ecx

; 4128 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 420				; 000001a4H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4129 : 	if (!MyObject)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 0
	jne	SHORT $LN16@AI_Update

; 4130 : 	{// Protect against crashes caused by accessing data nodes before ::Created has finished
; 4131 : 		return;

	jmp	$LN17@AI_Update
$LN16@AI_Update:

; 4132 : 	}
; 4133 : 	if (Reset)

	movzx	eax, BYTE PTR _Reset$[ebp]
	test	eax, eax
	je	SHORT $LN15@AI_Update

; 4134 : 	{
; 4135 : 		StateTimeOutTime = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 0

; 4136 : 		MyState = DroneGuarding;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 1
$LN15@AI_Update:

; 4137 : 	}
; 4138 : 	if (StateTimeOutTime)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+108], 0
	je	SHORT $LN14@AI_Update

; 4139 : 		return;

	jmp	$LN17@AI_Update
$LN14@AI_Update:

; 4140 : 	ActionParamsStruct params;

	lea	ecx, DWORD PTR _params$[ebp]
	call	??0ActionParamsStruct@@QAE@XZ		; ActionParamsStruct::ActionParamsStruct

; 4141 : 	GameObject *AvoidObject = NULL;

	mov	DWORD PTR _AvoidObject$[ebp], 0

; 4142 : 	Vector3 MyPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _MyPos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 4143 : 	Vector3 Pos;

	lea	ecx, DWORD PTR _Pos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 4144 : 	float Facing = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Facing$[ebp], xmm0

; 4145 : 	float Rotation;
; 4146 : 	float TargetDirection;
; 4147 : 	float Distance;
; 4148 : 	switch (MyState)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR tv81[ebp], ecx
	cmp	DWORD PTR tv81[ebp], 4
	ja	$LN12@AI_Update
	mov	edx, DWORD PTR tv81[ebp]
	jmp	DWORD PTR $LN19@AI_Update[edx*4]
$LN11@AI_Update:

; 4149 : 	{
; 4150 : 	case DroneIdle:
; 4151 : 		MyState = DroneGuarding;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 1

; 4152 : 		AI_Update(obj);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AI_Update@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@_N@Z ; JMG_CMTB_Player_Drone::AI_Update

; 4153 : 		break;

	jmp	$LN12@AI_Update
$LN10@AI_Update:

; 4154 : 	case DroneGuarding: case DroneReturning:
; 4155 : 		if (SearchTimeDelay)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+112], 0
	je	SHORT $LN9@AI_Update

; 4156 : 			SearchTimeDelay--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+112], ecx
$LN9@AI_Update:

; 4157 : 		if (MiniGamePlayerControlSystem[Get_Int_Parameter("PlayerNumber")].PlayerShip && Get_Int_Parameter("PlayerEscort"))

	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8], 0
	je	$LN8@AI_Update
	push	OFFSET ??_C@_0N@INKKNFJM@PlayerEscort?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	$LN8@AI_Update

; 4158 : 		{
; 4159 : 			Facing = Commands->Get_Facing(MiniGamePlayerControlSystem[Get_Int_Parameter("PlayerNumber")].PlayerShip);

	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	mov	eax, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+72]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _Facing$[ebp]

; 4160 : 			TargetPos = Commands->Get_Position(MiniGamePlayerControlSystem[Get_Int_Parameter("PlayerNumber")].PlayerShip);

	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	mov	eax, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 4161 : 			if (MyState == DroneReturning && JmgUtility::SimpleDistance(Commands->Get_Position(obj),TargetPos) < 400.0f)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 4
	jne	SHORT $LN7@AI_Update
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR tv496[ebp]
	movss	xmm0, DWORD PTR __real@43c80000
	comiss	xmm0, DWORD PTR tv496[ebp]
	jbe	SHORT $LN7@AI_Update

; 4162 : 				MyState = DroneGuarding;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 1
$LN7@AI_Update:

; 4163 : 		}
; 4164 : 		else

	jmp	$LN6@AI_Update
$LN8@AI_Update:

; 4165 : 		{
; 4166 : 			if (!SearchTimeDelay)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+112], 0
	jne	$LN5@AI_Update

; 4167 : 			{
; 4168 : 				SearchTimeDelay = Commands->Get_Random_Int(5,15);

	push	15					; 0000000fH
	push	5
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+112], eax

; 4169 : 				Distance = 100.0f;

	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _Distance$[ebp], xmm0

; 4170 : 				TargetPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 4171 : 				Rotation = JmgUtility::MathClampDegrees(Commands->Get_Facing(obj)-Commands->Get_Random(-45.0f,45.0f))*3.14159265f/180;

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+72]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv517[ebp]
	movss	xmm0, DWORD PTR tv517[ebp]
	push	ecx
	movss	xmm1, DWORD PTR __real@42340000
	movss	DWORD PTR [esp], xmm1
	push	ecx
	movss	xmm1, DWORD PTR __real@c2340000
	movss	DWORD PTR [esp], xmm1
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	movss	DWORD PTR tv731[ebp], xmm0
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv527[ebp]
	movss	xmm0, DWORD PTR tv731[ebp]
	subss	xmm0, DWORD PTR tv527[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?MathClampDegrees@JmgUtility@@SAMM@Z	; JmgUtility::MathClampDegrees
	add	esp, 4
	fstp	DWORD PTR tv532[ebp]
	movss	xmm0, DWORD PTR tv532[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	movss	DWORD PTR _Rotation$[ebp], xmm0

; 4172 : 				TargetPos.X += Distance*cos(Rotation);

	push	ecx
	movss	xmm0, DWORD PTR _Rotation$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv538[ebp]
	movss	xmm0, DWORD PTR tv538[ebp]
	mulss	xmm0, DWORD PTR _Distance$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [eax+76]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+76], xmm0

; 4173 : 				TargetPos.Y += Distance*sin(Rotation);

	push	ecx
	movss	xmm0, DWORD PTR _Rotation$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR tv548[ebp]
	movss	xmm0, DWORD PTR tv548[ebp]
	mulss	xmm0, DWORD PTR _Distance$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [eax+80]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+80], xmm0

; 4174 : 				params.Set_Basic(this,100,1);

	push	-1
	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 4175 : 				params.Set_Movement(TargetPos,JmgUtility::MathClamp(Commands->Get_Distance(Commands->Get_Position(obj),TargetPos)/10.0f,1.0,5),0.0f,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR tv567[ebp]
	movss	xmm0, DWORD PTR tv567[ebp]
	divss	xmm0, DWORD PTR __real@41200000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?MathClamp@JmgUtility@@SAMMMM@Z		; JmgUtility::MathClamp
	add	esp, 8
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	push	ecx
	lea	ecx, DWORD PTR _params$[ebp]
	call	?Set_Movement@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ; ActionParamsStruct::Set_Movement

; 4176 : 				params.ShutdownEngineOnArrival = true;

	mov	BYTE PTR _params$[ebp+72], 1

; 4177 : 				Commands->Action_Goto(obj,params);

	lea	eax, DWORD PTR _params$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+16]
	call	eax
	add	esp, 8
$LN5@AI_Update:

; 4178 : 			}
; 4179 : 			return;

	jmp	$LN17@AI_Update
$LN6@AI_Update:

; 4180 : 		}
; 4181 : 		Distance = 10.0f;//Commands->Get_Random(15.0f,20.0f);

	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _Distance$[ebp], xmm0

; 4182 : 		Rotation = Facing-(180+FollowAngle);

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@43340000
	addss	xmm0, DWORD PTR [eax+132]
	movss	xmm1, DWORD PTR _Facing$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _Rotation$[ebp], xmm1

; 4183 : 		TargetPos.X += Distance*(cos(JmgUtility::MathClampDegrees(Rotation)*3.14159265f/180));

	push	ecx
	movss	xmm0, DWORD PTR _Rotation$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?MathClampDegrees@JmgUtility@@SAMM@Z	; JmgUtility::MathClampDegrees
	add	esp, 4
	fstp	DWORD PTR tv593[ebp]
	movss	xmm0, DWORD PTR tv593[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv599[ebp]
	movss	xmm0, DWORD PTR tv599[ebp]
	mulss	xmm0, DWORD PTR _Distance$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [eax+76]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+76], xmm0

; 4184 : 		TargetPos.Y += Distance*(sin(JmgUtility::MathClampDegrees(Rotation)*3.14159265f/180));

	push	ecx
	movss	xmm0, DWORD PTR _Rotation$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?MathClampDegrees@JmgUtility@@SAMM@Z	; JmgUtility::MathClampDegrees
	add	esp, 4
	fstp	DWORD PTR tv609[ebp]
	movss	xmm0, DWORD PTR tv609[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR tv615[ebp]
	movss	xmm0, DWORD PTR tv615[ebp]
	mulss	xmm0, DWORD PTR _Distance$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [eax+80]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+80], xmm0

; 4185 : 		params.Set_Basic(this,100,1);

	push	-1
	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 4186 : 		params.Set_Movement(TargetPos,JmgUtility::MathClamp(Commands->Get_Distance(Commands->Get_Position(obj),TargetPos)/10.0f,1.0,5),0.0f,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR tv634[ebp]
	movss	xmm0, DWORD PTR tv634[ebp]
	divss	xmm0, DWORD PTR __real@41200000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?MathClamp@JmgUtility@@SAMMMM@Z		; JmgUtility::MathClamp
	add	esp, 8
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	push	ecx
	lea	ecx, DWORD PTR _params$[ebp]
	call	?Set_Movement@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ; ActionParamsStruct::Set_Movement

; 4187 : 		params.ShutdownEngineOnArrival = true;

	mov	BYTE PTR _params$[ebp+72], 1

; 4188 : 		Commands->Action_Goto(obj,params);

	lea	eax, DWORD PTR _params$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+16]
	call	eax
	add	esp, 8

; 4189 : 		break;

	jmp	$LN12@AI_Update
$LN4@AI_Update:

; 4190 : 	case DroneAvoiding:
; 4191 : 		AvoidObject = Commands->Find_Object(AvoidObjectID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _AvoidObject$[ebp], eax

; 4192 : 		if (AvoidObject)

	cmp	DWORD PTR _AvoidObject$[ebp], 0
	je	SHORT $LN3@AI_Update

; 4193 : 			Pos = Commands->Get_Position(AvoidObject);

	mov	eax, DWORD PTR _AvoidObject$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _Pos$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 4194 : 		else

	jmp	SHORT $LN2@AI_Update
$LN3@AI_Update:

; 4195 : 		{
; 4196 : 			AvoidObjectID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 0

; 4197 : 			Drone_Action_Complete(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Drone_Action_Complete@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::Drone_Action_Complete

; 4198 : 			AI_Update(obj);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AI_Update@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@_N@Z ; JMG_CMTB_Player_Drone::AI_Update

; 4199 : 			return;

	jmp	$LN17@AI_Update
$LN2@AI_Update:

; 4200 : 		}
; 4201 : 		Commands->Action_Reset(obj,100);

	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 8

; 4202 : 		MyPos.X -= Pos.X;

	movss	xmm0, DWORD PTR _MyPos$[ebp]
	subss	xmm0, DWORD PTR _Pos$[ebp]
	movss	DWORD PTR _MyPos$[ebp], xmm0

; 4203 : 		MyPos.Y -= Pos.Y;

	movss	xmm0, DWORD PTR _MyPos$[ebp+4]
	subss	xmm0, DWORD PTR _Pos$[ebp+4]
	movss	DWORD PTR _MyPos$[ebp+4], xmm0

; 4204 : 		TargetDirection = JmgUtility::MathClampDegrees(atan2(MyPos.X,MyPos.Y));

	push	ecx
	movss	xmm0, DWORD PTR _MyPos$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _MyPos$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?atan2@@YAMMM@Z				; atan2
	add	esp, 4
	fstp	DWORD PTR [esp]
	call	?MathClampDegrees@JmgUtility@@SAMM@Z	; JmgUtility::MathClampDegrees
	add	esp, 4
	fstp	DWORD PTR _TargetDirection$[ebp]

; 4205 : 		TargetDirection = JmgUtility::MathClampDegrees(TargetDirection+AvoidDegree);

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _TargetDirection$[ebp]
	addss	xmm0, DWORD PTR [eax+120]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?MathClampDegrees@JmgUtility@@SAMM@Z	; JmgUtility::MathClampDegrees
	add	esp, 4
	fstp	DWORD PTR _TargetDirection$[ebp]

; 4206 : 		TargetPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T8[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 4207 : 		TargetPos.X += AvoidDistance*(cos(TargetDirection*3.14159265f/180));

	movss	xmm0, DWORD PTR _TargetDirection$[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv698[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv698[ebp]
	mulss	xmm0, DWORD PTR [eax+124]
	mov	ecx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [ecx+76]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+76], xmm0

; 4208 : 		TargetPos.Y += AvoidDistance*(sin(TargetDirection*3.14159265f/180));

	movss	xmm0, DWORD PTR _TargetDirection$[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR tv710[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv710[ebp]
	mulss	xmm0, DWORD PTR [eax+124]
	mov	ecx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [ecx+80]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+80], xmm0

; 4209 : 		params.Set_Basic(this,100,1);

	push	-1
	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 4210 : 		params.Set_Movement(TargetPos,1.0f,2.0f,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	lea	ecx, DWORD PTR _params$[ebp]
	call	?Set_Movement@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ; ActionParamsStruct::Set_Movement

; 4211 : 		Commands->Action_Goto(obj,params);

	lea	eax, DWORD PTR _params$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+16]
	call	eax
	add	esp, 8

; 4212 : 		break;

	jmp	SHORT $LN12@AI_Update
$LN1@AI_Update:

; 4213 : 	case DroneAttacking:
; 4214 : 		Drone_Attack(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Drone_Attack@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::Drone_Attack
$LN12@AI_Update:
$LN17@AI_Update:

; 4215 : 		break;
; 4216 : 	}
; 4217 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN19@AI_Update:
	DD	$LN11@AI_Update
	DD	$LN10@AI_Update
	DD	$LN4@AI_Update
	DD	$LN1@AI_Update
	DD	$LN10@AI_Update
?AI_Update@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@_N@Z ENDP ; JMG_CMTB_Player_Drone::AI_Update
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Drone_Action_Complete@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Drone_Action_Complete@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Player_Drone::Drone_Action_Complete, COMDAT
; _this$ = ecx

; 4121 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4122 : 	if (LastState == MyState)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+60]
	cmp	edx, DWORD PTR [ecx+56]
	jne	SHORT $LN1@Drone_Acti

; 4123 : 		LastState = DroneIdle;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0
$LN1@Drone_Acti:

; 4124 : 	MyState = LastState;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	DWORD PTR [eax+56], edx

; 4125 : 	LastState = DroneIdle;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0

; 4126 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Drone_Action_Complete@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Player_Drone::Drone_Action_Complete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?ChangeState@JMG_CMTB_Player_Drone@@AAE_NW4AI_State@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_NewState$ = 8						; size = 4
?ChangeState@JMG_CMTB_Player_Drone@@AAE_NW4AI_State@1@@Z PROC ; JMG_CMTB_Player_Drone::ChangeState, COMDAT
; _this$ = ecx

; 4111 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4112 : 	if (AIStatePriorities[NewState] > AIStatePriorities[MyState])

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	edx, DWORD PTR _NewState$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+edx*4+28]
	cmp	edx, DWORD PTR [esi+ecx*4+28]
	jle	SHORT $LN1@ChangeStat

; 4113 : 	{
; 4114 : 		LastState = MyState;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR [eax+60], edx

; 4115 : 		MyState = NewState;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _NewState$[ebp]
	mov	DWORD PTR [eax+56], ecx

; 4116 : 		return true;

	mov	al, 1
	jmp	SHORT $LN2@ChangeStat
$LN1@ChangeStat:

; 4117 : 	}
; 4118 : 	return false;

	xor	al, al
$LN2@ChangeStat:

; 4119 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?ChangeState@JMG_CMTB_Player_Drone@@AAE_NW4AI_State@1@@Z ENDP ; JMG_CMTB_Player_Drone::ChangeState
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Destroyed@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_x$1 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Player_Drone::Destroyed, COMDAT
; _this$ = ecx

; 4099 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4100 : 	if (!Get_Int_Parameter("PlayerEscort"))

	push	OFFSET ??_C@_0N@INKKNFJM@PlayerEscort?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN6@Destroyed

; 4101 : 		JMG_CMTB_Main_Game_Control::DroneSwarmCount--;

	mov	eax, DWORD PTR ?DroneSwarmCount@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::DroneSwarmCount
	sub	eax, 1
	mov	DWORD PTR ?DroneSwarmCount@JMG_CMTB_Main_Game_Control@@2IA, eax ; JMG_CMTB_Main_Game_Control::DroneSwarmCount
$LN6@Destroyed:

; 4102 : 	MyObject = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0

; 4103 : 	RenCometBustersList -= obj;

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??ZRenCometBustersGameObjects@@QAEAAV0@PAVScriptableGameObj@@@Z ; RenCometBustersGameObjects::operator-=

; 4104 : 	for (int x = 0;x < 2;x++)

	mov	DWORD PTR _x$1[ebp], 0
	jmp	SHORT $LN5@Destroyed
$LN4@Destroyed:
	mov	eax, DWORD PTR _x$1[ebp]
	add	eax, 1
	mov	DWORD PTR _x$1[ebp], eax
$LN5@Destroyed:
	cmp	DWORD PTR _x$1[ebp], 2
	jge	SHORT $LN3@Destroyed

; 4105 : 		if (MiniGamePlayerControlSystem[Get_Int_Parameter("PlayerNumber")].Drones[x] == Commands->Get_ID(obj))

	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	esi, eax
	imul	esi, 596				; 00000254H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _x$1[ebp]
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[esi+ecx*4+368], eax
	jne	SHORT $LN2@Destroyed

; 4106 : 			MiniGamePlayerControlSystem[Get_Int_Parameter("PlayerNumber")].Drones[x] = 0;

	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR _x$1[ebp]
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+ecx*4+368], 0
$LN2@Destroyed:

; 4107 : 	if (Is_Script_Attached(obj,"JMG_CMTB_Player_Drone"))

	jmp	SHORT $LN4@Destroyed
$LN3@Destroyed:
	push	OFFSET ??_C@_0BG@DDDOADFB@JMG_CMTB_Player_Drone?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@Destroyed

; 4108 : 		Remove_Script(obj,"JMG_CMTB_Player_Drone");

	push	OFFSET ??_C@_0BG@DDDOADFB@JMG_CMTB_Player_Drone?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Remove_Script@@YAXPAVScriptableGameObj@@PBD@Z ; Remove_Script
	add	esp, 8
$LN7@Destroyed:

; 4109 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Destroyed@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Player_Drone::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Killed@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
$T1 = -80						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
?Killed@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_CMTB_Player_Drone::Killed, COMDAT
; _this$ = ecx

; 4092 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 4093 : 	RenCometBustersList -= obj;

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??ZRenCometBustersGameObjects@@QAEAAV0@PAVScriptableGameObj@@@Z ; RenCometBustersGameObjects::operator-=

; 4094 : 	Commands->Create_Explosion("Explosion_Comet_Small",Commands->Get_Position(obj),0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0BG@IJBPPJAA@Explosion_Comet_Small?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+416]
	call	edx
	add	esp, 12					; 0000000cH

; 4095 : 	RenCometBustersList.GrantScoreToKiller(damager,-300.0f,PlayerDrone);

	push	0
	push	12					; 0000000cH
	push	ecx
	movss	xmm0, DWORD PTR __real@c3960000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?GrantScoreToKiller@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MW4ObjectType@@H@Z ; RenCometBustersGameObjects::GrantScoreToKiller

; 4096 : 	Commands->Destroy_Object(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4

; 4097 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_CMTB_Player_Drone::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
tv763 = -252						; size = 4
tv719 = -252						; size = 4
tv663 = -252						; size = 4
tv605 = -252						; size = 4
$T1 = -248						; size = 12
$T2 = -236						; size = 12
$T3 = -224						; size = 12
$T4 = -212						; size = 12
$T5 = -200						; size = 12
$T6 = -188						; size = 12
$T7 = -176						; size = 12
$T8 = -164						; size = 12
_Drone$9 = -88						; size = 4
_params$10 = -84					; size = 32
_x$11 = -52						; size = 4
_Target$12 = -48					; size = 4
_AvoidObject$13 = -44					; size = 4
_ObjectID$14 = -40					; size = 4
_AvoidanceDistance$15 = -36				; size = 4
_Pos$16 = -32						; size = 12
_Object$17 = -20					; size = 4
_Pos$18 = -16						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_CMTB_Player_Drone::Timer_Expired, COMDAT
; _this$ = ecx

; 3942 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3943 : 	if (!MyObject)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 0
	jne	SHORT $LN49@Timer_Expi

; 3944 : 	{// Protect against crashes caused by accessing data nodes before ::Created has finished
; 3945 : 		Commands->Start_Timer(obj,this,0.1f,number);

	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+128]
	call	ecx
	add	esp, 16					; 00000010H

; 3946 : 		return;

	jmp	$LN50@Timer_Expi
$LN49@Timer_Expi:

; 3947 : 	}
; 3948 : 	if (number == 5434)

	cmp	DWORD PTR _number$[ebp], 5434		; 0000153aH
	jne	SHORT $LN48@Timer_Expi

; 3949 : 	{
; 3950 : 		PrimaryFire = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+128], 1

; 3951 : 		if (MyState == DroneAttacking)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 3
	jne	SHORT $LN47@Timer_Expi

; 3952 : 			Drone_Attack(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Drone_Attack@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::Drone_Attack
$LN47@Timer_Expi:

; 3953 : 		Set_Current_Bullets(obj,2);

	push	2
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Bullets
	add	esp, 8

; 3954 : 		Set_Current_Clip_Bullets(obj,0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8
$LN48@Timer_Expi:

; 3955 : 	}
; 3956 : 	if (number == 5435)

	cmp	DWORD PTR _number$[ebp], 5435		; 0000153bH
	jne	$LN46@Timer_Expi

; 3957 : 	{
; 3958 : 		if (MyState == DroneAttacking)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 3
	jne	SHORT $LN45@Timer_Expi

; 3959 : 		{
; 3960 : 			PrimaryFire = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+128], 0

; 3961 : 			Drone_Attack(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Drone_Attack@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::Drone_Attack
$LN45@Timer_Expi:

; 3962 : 		}
; 3963 : 		Commands->Start_Timer(obj,this,0.5f,5434);

	push	5434					; 0000153aH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 3964 : 		Commands->Start_Timer(obj,this,Commands->Get_Random(9.0f,11.0f),5435);

	push	5435					; 0000153bH
	push	ecx
	movss	xmm0, DWORD PTR __real@41300000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@41100000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 4
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+128]
	call	edx
	add	esp, 16					; 00000010H
$LN46@Timer_Expi:

; 3965 : 	}
; 3966 : 	if (number == 5436)

	cmp	DWORD PTR _number$[ebp], 5436		; 0000153cH
	jne	$LN44@Timer_Expi

; 3967 : 	{
; 3968 : 		if (Commands->Get_Random(0.0f,1.0f) < 0.15f)

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv605[ebp]
	movss	xmm0, DWORD PTR __real@3e19999a
	comiss	xmm0, DWORD PTR tv605[ebp]
	jbe	SHORT $LN43@Timer_Expi

; 3969 : 		{
; 3970 : 			AvoidDegree = Commands->Get_Random(-90.0f,90.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c2b40000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+120]

; 3971 : 			AvoidDistance = Commands->Get_Random(5.0f,20.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@41a00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+124]
$LN43@Timer_Expi:

; 3972 : 		}
; 3973 : 		Vector3 Pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _Pos$18[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 3974 : 		GameObject *Object = NULL;

	mov	DWORD PTR _Object$17[ebp], 0

; 3975 : 		if (MiniGamePlayerControlSystem[Get_Int_Parameter("PlayerNumber")].PlayerShip && Get_Int_Parameter("PlayerEscort"))

	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8], 0
	je	SHORT $LN42@Timer_Expi
	push	OFFSET ??_C@_0N@INKKNFJM@PlayerEscort?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	SHORT $LN42@Timer_Expi

; 3976 : 			Object = RenCometBustersList.CheckForDroneTarget(obj,Commands->Get_Position(MiniGamePlayerControlSystem[Get_Int_Parameter("PlayerNumber")].PlayerShip),&TargetSize);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 140				; 0000008cH
	push	eax
	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?CheckForDroneTarget@RenCometBustersGameObjects@@QAEPAVScriptableGameObj@@PAV2@ABVVector3@@PAM@Z ; RenCometBustersGameObjects::CheckForDroneTarget
	mov	DWORD PTR _Object$17[ebp], eax

; 3977 : 		else

	jmp	SHORT $LN41@Timer_Expi
$LN42@Timer_Expi:

; 3978 : 			Object = RenCometBustersList.CheckForDroneTarget(obj,Pos,&TargetSize);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 140				; 0000008cH
	push	eax
	lea	ecx, DWORD PTR _Pos$18[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?CheckForDroneTarget@RenCometBustersGameObjects@@QAEPAVScriptableGameObj@@PAV2@ABVVector3@@PAM@Z ; RenCometBustersGameObjects::CheckForDroneTarget
	mov	DWORD PTR _Object$17[ebp], eax
$LN41@Timer_Expi:

; 3979 : 		if (Object)

	cmp	DWORD PTR _Object$17[ebp], 0
	je	SHORT $LN39@Timer_Expi

; 3980 : 			if (ChangeState(DroneAttacking))

	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeState@JMG_CMTB_Player_Drone@@AAE_NW4AI_State@1@@Z ; JMG_CMTB_Player_Drone::ChangeState
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN39@Timer_Expi

; 3981 : 				TargetID = Commands->Get_ID(Object);

	mov	eax, DWORD PTR _Object$17[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+88], eax
$LN39@Timer_Expi:

; 3982 : 		Commands->Start_Timer(obj,this,1.0f,5436);

	push	5436					; 0000153cH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN44@Timer_Expi:

; 3983 : 	}
; 3984 : 	if (number == 5437)

	cmp	DWORD PTR _number$[ebp], 5437		; 0000153dH
	jne	$LN38@Timer_Expi

; 3985 : 	{
; 3986 : 		if (!Commands->Get_Health(obj))

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv663[ebp]
	movss	xmm0, DWORD PTR tv663[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN37@Timer_Expi

; 3987 : 			return;

	jmp	$LN50@Timer_Expi
$LN37@Timer_Expi:

; 3988 : 		if (StateTimeOutTime)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+108], 0
	je	SHORT $LN35@Timer_Expi

; 3989 : 		{
; 3990 : 			StateTimeOutTime--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+108], ecx

; 3991 : 			if (!StateTimeOutTime)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+108], 0
	jne	SHORT $LN35@Timer_Expi

; 3992 : 				Drone_Action_Complete(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Drone_Action_Complete@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::Drone_Action_Complete
$LN35@Timer_Expi:

; 3993 : 		}
; 3994 : 		Vector3 Pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _Pos$16[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 3995 : 		CurrentSpeed = JmgUtility::SimpleDistance(Pos,LastPosition);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	lea	ecx, DWORD PTR _Pos$16[ebp]
	push	ecx
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+144]

; 3996 : 		float AvoidanceDistance = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _AvoidanceDistance$15[ebp], xmm0

; 3997 : 		int ObjectID = RenCometBustersList.FindDroneAvoidObjectInRange(obj,&Pos,56.25f+CurrentSpeed,&AvoidanceDistance);

	lea	eax, DWORD PTR _AvoidanceDistance$15[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@42610000
	addss	xmm0, DWORD PTR [ecx+144]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR _Pos$16[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?FindDroneAvoidObjectInRange@RenCometBustersGameObjects@@QAEHPAVScriptableGameObj@@PAVVector3@@MPAM@Z ; RenCometBustersGameObjects::FindDroneAvoidObjectInRange
	mov	DWORD PTR _ObjectID$14[ebp], eax

; 3998 : 		if (ObjectID && !ShieldOverride)

	cmp	DWORD PTR _ObjectID$14[ebp], 0
	je	$LN34@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+48]
	test	ecx, ecx
	jne	$LN34@Timer_Expi

; 3999 : 		{
; 4000 : 			if  (LastTargetID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+92], 0
	je	SHORT $LN33@Timer_Expi

; 4001 : 				LastTargetID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
$LN33@Timer_Expi:

; 4002 : 			ChangeState(DroneAvoiding);

	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeState@JMG_CMTB_Player_Drone@@AAE_NW4AI_State@1@@Z ; JMG_CMTB_Player_Drone::ChangeState

; 4003 : 			AvoidObjectID = ObjectID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ObjectID$14[ebp]
	mov	DWORD PTR [eax+104], ecx

; 4004 : 			if (AvoidanceDistance < 100*CurrentSpeed*0.5)

	cvtss2sd xmm0, DWORD PTR _AvoidanceDistance$15[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR __real@42c80000
	mulss	xmm1, DWORD PTR [eax+144]
	cvtss2sd xmm1, xmm1
	mulsd	xmm1, QWORD PTR __real@3fe0000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN32@Timer_Expi

; 4005 : 			{
; 4006 : 				if (MyObject->Type != PlayerDroneShield && Power)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	cmp	DWORD PTR [ecx+16], 13			; 0000000dH
	je	SHORT $LN31@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+116], 0
	je	SHORT $LN31@Timer_Expi

; 4007 : 					ShieldOn(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShieldOn@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::ShieldOn
$LN31@Timer_Expi:

; 4008 : 			}

	jmp	SHORT $LN29@Timer_Expi
$LN32@Timer_Expi:

; 4009 : 			else if (MyObject->Type == PlayerDroneShield)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	cmp	DWORD PTR [ecx+16], 13			; 0000000dH
	jne	SHORT $LN29@Timer_Expi

; 4010 : 				ShieldOff(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShieldOff@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::ShieldOff
$LN29@Timer_Expi:

; 4011 : 		}

	jmp	SHORT $LN27@Timer_Expi
$LN34@Timer_Expi:

; 4012 : 		else if (MyObject->Type == PlayerDroneShield && !ShieldOverride)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	cmp	DWORD PTR [ecx+16], 13			; 0000000dH
	jne	SHORT $LN27@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+48]
	test	ecx, ecx
	jne	SHORT $LN27@Timer_Expi

; 4013 : 			ShieldOff(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShieldOff@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::ShieldOff
$LN27@Timer_Expi:

; 4014 : 		if (MyState == DroneAvoiding)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 2
	jne	SHORT $LN25@Timer_Expi

; 4015 : 		{
; 4016 : 			GameObject *AvoidObject = Commands->Find_Object(AvoidObjectID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _AvoidObject$13[ebp], eax

; 4017 : 			if (!AvoidObject || JmgUtility::SimpleDistance(Commands->Get_Position(AvoidObject),Pos) > 225)

	cmp	DWORD PTR _AvoidObject$13[ebp], 0
	je	SHORT $LN24@Timer_Expi
	lea	eax, DWORD PTR _Pos$16[ebp]
	push	eax
	mov	ecx, DWORD PTR _AvoidObject$13[ebp]
	push	ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR tv719[ebp]
	movss	xmm0, DWORD PTR tv719[ebp]
	comiss	xmm0, DWORD PTR __real@43610000
	jbe	SHORT $LN25@Timer_Expi
$LN24@Timer_Expi:

; 4018 : 			{
; 4019 : 				AvoidObjectID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 0

; 4020 : 				Drone_Action_Complete(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Drone_Action_Complete@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::Drone_Action_Complete
$LN25@Timer_Expi:

; 4021 : 			}
; 4022 : 		}
; 4023 : 		if (CurrentSpeed > 0.05)

	mov	eax, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+144]
	comisd	xmm0, QWORD PTR __real@3fa999999999999a
	jbe	SHORT $LN23@Timer_Expi

; 4024 : 			StuckCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+96], 0

; 4025 : 		else

	jmp	$LN19@Timer_Expi
$LN23@Timer_Expi:

; 4026 : 		{
; 4027 : 			StuckCount++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+96], ecx

; 4028 : 			if (!(StuckCount % 10))

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+96]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN19@Timer_Expi

; 4029 : 			{
; 4030 : 				AI_Update(obj,true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AI_Update@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@_N@Z ; JMG_CMTB_Player_Drone::AI_Update

; 4031 : 				ExtremeStuckCount++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+136], ecx

; 4032 : 				if (!(ExtremeStuckCount % 30))

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+136]
	cdq
	mov	ecx, 30					; 0000001eH
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN20@Timer_Expi

; 4033 : 					Position_At_Player(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Position_At_Player@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::Position_At_Player
$LN20@Timer_Expi:

; 4034 : 				if (ExtremeStuckCount > 100)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+136], 100		; 00000064H
	jle	SHORT $LN19@Timer_Expi

; 4035 : 					Commands->Apply_Damage(obj,10000,"BlamoKiller",0);

	push	0
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@461c4000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H
$LN19@Timer_Expi:

; 4036 : 			}
; 4037 : 		}
; 4038 : 		LastPosition = Pos;

	lea	eax, DWORD PTR _Pos$16[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 4039 : 		if (MyState != DroneReturning)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 4
	je	$LN16@Timer_Expi

; 4040 : 			if (MiniGamePlayerControlSystem[Get_Int_Parameter("PlayerNumber")].PlayerShip && Get_Int_Parameter("PlayerEscort"))

	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8], 0
	je	SHORT $LN16@Timer_Expi
	push	OFFSET ??_C@_0N@INKKNFJM@PlayerEscort?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	SHORT $LN16@Timer_Expi

; 4041 : 				if (JmgUtility::SimpleDistance(Commands->Get_Position(MiniGamePlayerControlSystem[Get_Int_Parameter("PlayerNumber")].PlayerShip),Pos) > 1000)

	lea	eax, DWORD PTR _Pos$16[ebp]
	push	eax
	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR tv763[ebp]
	movss	xmm0, DWORD PTR tv763[ebp]
	comiss	xmm0, DWORD PTR __real@447a0000
	jbe	SHORT $LN16@Timer_Expi

; 4042 : 					ChangeState(DroneReturning);

	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeState@JMG_CMTB_Player_Drone@@AAE_NW4AI_State@1@@Z ; JMG_CMTB_Player_Drone::ChangeState
$LN16@Timer_Expi:

; 4043 : 		if (MyState == DroneAttacking)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 3
	jne	SHORT $LN11@Timer_Expi

; 4044 : 		{
; 4045 : 			GameObject *Target = Commands->Find_Object(TargetID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Target$12[ebp], eax

; 4046 : 			if (Target)

	cmp	DWORD PTR _Target$12[ebp], 0
	je	SHORT $LN14@Timer_Expi

; 4047 : 			{
; 4048 : 				if (NewTargetTime)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN12@Timer_Expi

; 4049 : 				{
; 4050 : 					NewTargetTime--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+100], ecx

; 4051 : 					if (!NewTargetTime)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	jne	SHORT $LN12@Timer_Expi

; 4052 : 						Drone_Action_Complete(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Drone_Action_Complete@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::Drone_Action_Complete
$LN12@Timer_Expi:

; 4053 : 				}
; 4054 : 			}
; 4055 : 			else

	jmp	SHORT $LN11@Timer_Expi
$LN14@Timer_Expi:

; 4056 : 			{
; 4057 : 				MyState = DroneGuarding;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 1

; 4058 : 				Commands->Action_Reset(obj,100);

	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 8
$LN11@Timer_Expi:

; 4059 : 			}
; 4060 : 		}
; 4061 : 		AI_Update(obj);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AI_Update@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@_N@Z ; JMG_CMTB_Player_Drone::AI_Update

; 4062 : 		if ((Commands->Get_Bone_Position(obj,"LWing").Z > Pos.Z || Commands->Get_Bone_Position(obj,"RWing").Z > Pos.Z) && !ShieldOverride)

	push	OFFSET ??_C@_05JCEPCEFD@LWing?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+68]
	call	eax
	add	esp, 12					; 0000000cH
	movss	xmm0, DWORD PTR [eax+8]
	comiss	xmm0, DWORD PTR _Pos$16[ebp+8]
	ja	SHORT $LN9@Timer_Expi
	push	OFFSET ??_C@_05KLJDEHLI@RWing?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+68]
	call	eax
	add	esp, 12					; 0000000cH
	movss	xmm0, DWORD PTR [eax+8]
	comiss	xmm0, DWORD PTR _Pos$16[ebp+8]
	jbe	$LN10@Timer_Expi
$LN9@Timer_Expi:
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+48]
	test	ecx, ecx
	jne	$LN10@Timer_Expi

; 4063 : 		{
; 4064 : 			for (int x = 0;x < 2;x++)

	mov	DWORD PTR _x$11[ebp], 0
	jmp	SHORT $LN8@Timer_Expi
$LN7@Timer_Expi:
	mov	eax, DWORD PTR _x$11[ebp]
	add	eax, 1
	mov	DWORD PTR _x$11[ebp], eax
$LN8@Timer_Expi:
	cmp	DWORD PTR _x$11[ebp], 2
	jge	SHORT $LN6@Timer_Expi

; 4065 : 				if (MiniGamePlayerControlSystem[Get_Int_Parameter("PlayerNumber")].Drones[x] == Commands->Get_ID(obj))

	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	esi, eax
	imul	esi, 596				; 00000254H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _x$11[ebp]
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[esi+ecx*4+368], eax
	jne	SHORT $LN5@Timer_Expi

; 4066 : 					MiniGamePlayerControlSystem[Get_Int_Parameter("PlayerNumber")].Drones[x] = 0;

	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR _x$11[ebp]
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+ecx*4+368], 0
$LN5@Timer_Expi:

; 4067 : 			char params[32];

	jmp	SHORT $LN7@Timer_Expi
$LN6@Timer_Expi:

; 4068 : 			sprintf(params,"%d,%d,0,%d",Get_Int_Parameter("PlayerNumber"),Power,Get_Int_Parameter("PlayerEscort"));

	push	OFFSET ??_C@_0N@INKKNFJM@PlayerEscort?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	push	ecx
	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	push	OFFSET ??_C@_0L@BFKJPLBK@?$CFd?0?$CFd?00?0?$CFd?$AA@
	lea	edx, DWORD PTR _params$10[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H

; 4069 : 			GameObject *Drone = Commands->Create_Object("CMTB_Player_Attack_Drone",Commands->Get_Position(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T8[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0BJ@HMHDFFIC@CMTB_Player_Attack_Drone?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Drone$9[ebp], eax

; 4070 : 			Commands->Set_Facing(Drone,Commands->Get_Facing(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+72]
	call	edx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _Drone$9[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+76]
	call	edx
	add	esp, 8

; 4071 : 			Commands->Attach_Script(Drone,"JMG_CMTB_Player_Drone",params);

	lea	eax, DWORD PTR _params$10[ebp]
	push	eax
	push	OFFSET ??_C@_0BG@DDDOADFB@JMG_CMTB_Player_Drone?$AA@
	mov	ecx, DWORD PTR _Drone$9[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+120]
	call	eax
	add	esp, 12					; 0000000cH

; 4072 : 			Commands->Destroy_Object(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN10@Timer_Expi:

; 4073 : 		}
; 4074 : 		if (ShieldLightUp > 0 && !ShieldOverride)

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+148]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	$LN2@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+48]
	test	ecx, ecx
	jne	$LN2@Timer_Expi

; 4075 : 		{
; 4076 : 			ShieldLightUp -= 0.1f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+148]
	subss	xmm0, DWORD PTR __real@3dcccccd
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+148], xmm0

; 4077 : 			if (ShieldLightUp <= 0.0)

	mov	eax, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+148]
	movsd	xmm1, QWORD PTR __real@0000000000000000
	comisd	xmm1, xmm0
	jb	SHORT $LN2@Timer_Expi

; 4078 : 			{
; 4079 : 				ShieldLightUp = 0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+148], xmm0

; 4080 : 				if (MyObject->Type == PlayerDroneShield)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	cmp	DWORD PTR [ecx+16], 13			; 0000000dH
	jne	SHORT $LN2@Timer_Expi

; 4081 : 					Commands->Set_Animation(obj,myAnimation,false,0,2,2,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH
$LN2@Timer_Expi:

; 4082 : 			}
; 4083 : 		}
; 4084 : 		Commands->Start_Timer(obj,this,0.1f,5437);

	push	5437					; 0000153dH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN38@Timer_Expi:

; 4085 : 	}
; 4086 : 	if (number == 5438)

	cmp	DWORD PTR _number$[ebp], 5438		; 0000153eH
	jne	SHORT $LN1@Timer_Expi

; 4087 : 	{
; 4088 : 		Commands->Set_Model(obj,Get_Model(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Model@@YAPBDPAVScriptableGameObj@@@Z ; Get_Model
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+160]
	call	eax
	add	esp, 8
$LN1@Timer_Expi:
$LN50@Timer_Expi:

; 4089 : 	}
; 4090 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_CMTB_Player_Drone::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Custom@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_x$1 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_message$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; JMG_CMTB_Player_Drone::Custom, COMDAT
; _this$ = ecx

; 3905 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3906 : 	if (!MyObject)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 0
	jne	SHORT $LN11@Custom

; 3907 : 	{// Protect against crashes caused by accessing data nodes before ::Created has finished
; 3908 : 		Commands->Send_Custom_Event(sender,obj,message,param,0.1f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+140]
	call	edx
	add	esp, 20					; 00000014H

; 3909 : 		return;

	jmp	$LN12@Custom
$LN11@Custom:

; 3910 : 	}
; 3911 : 	if (message == 7043453 && !ShieldOverride)

	cmp	DWORD PTR _message$[ebp], 7043453	; 006b797dH
	jne	$LN10@Custom
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+48]
	test	ecx, ecx
	jne	$LN10@Custom

; 3912 : 	{
; 3913 : 		if (!ShieldLightUp)

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+148]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN9@Custom

; 3914 : 			Commands->Set_Animation(obj,myAnimation,false,0,4,4,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH
$LN9@Custom:

; 3915 : 		Power -= param;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	sub	ecx, DWORD PTR _param$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], ecx

; 3916 : 		if (Power <= 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+116], 0
	jg	SHORT $LN8@Custom

; 3917 : 		{
; 3918 : 			Power = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+116], 0

; 3919 : 			ShieldOff(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShieldOff@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::ShieldOff
$LN8@Custom:

; 3920 : 		}
; 3921 : 		ShieldLightUp = 0.35f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3eb33333
	movss	DWORD PTR [eax+148], xmm0
$LN10@Custom:

; 3922 : 	}
; 3923 : 	if (message == 7043454)

	cmp	DWORD PTR _message$[ebp], 7043454	; 006b797eH
	jne	$LN2@Custom

; 3924 : 	{
; 3925 : 		for (int x = 0;x < 3;x++)

	mov	DWORD PTR _x$1[ebp], 0
	jmp	SHORT $LN6@Custom
$LN5@Custom:
	mov	eax, DWORD PTR _x$1[ebp]
	add	eax, 1
	mov	DWORD PTR _x$1[ebp], eax
$LN6@Custom:
	cmp	DWORD PTR _x$1[ebp], 3
	jge	SHORT $LN4@Custom

; 3926 : 			Power -= Commands->Get_Random_Int(0,3);

	push	3
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+116]
	sub	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], ecx
	jmp	SHORT $LN5@Custom
$LN4@Custom:

; 3927 : 		if (Power <= 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+116], 0
	jg	SHORT $LN3@Custom

; 3928 : 			Power = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+116], 0
$LN3@Custom:

; 3929 : 		if (Power > 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+116], 0
	jle	SHORT $LN2@Custom

; 3930 : 		{
; 3931 : 			ShieldOverride = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 1

; 3932 : 			ShieldOn(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShieldOn@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::ShieldOn

; 3933 : 			Commands->Send_Custom_Event(obj,obj,7043455,0,3.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	7043455					; 006b797fH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN2@Custom:

; 3934 : 		}
; 3935 : 	}
; 3936 : 	if (message == 7043455)

	cmp	DWORD PTR _message$[ebp], 7043455	; 006b797fH
	jne	SHORT $LN1@Custom

; 3937 : 	{
; 3938 : 		ShieldOverride = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 0
$LN1@Custom:
$LN12@Custom:

; 3939 : 	}
; 3940 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; JMG_CMTB_Player_Drone::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
tv241 = -128						; size = 4
$T1 = -124						; size = 12
$T2 = -112						; size = 12
$T3 = -100						; size = 12
$T4 = -88						; size = 16
_x$5 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Player_Drone::Created, COMDAT
; _this$ = ecx

; 3841 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3842 : 	if (!Get_Int_Parameter("PlayerEscort"))

	push	OFFSET ??_C@_0N@INKKNFJM@PlayerEscort?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN9@Created

; 3843 : 		JMG_CMTB_Main_Game_Control::DroneSwarmCount++;

	mov	eax, DWORD PTR ?DroneSwarmCount@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::DroneSwarmCount
	add	eax, 1
	mov	DWORD PTR ?DroneSwarmCount@JMG_CMTB_Main_Game_Control@@2IA, eax ; JMG_CMTB_Main_Game_Control::DroneSwarmCount
$LN9@Created:

; 3844 : 	ShieldOverride = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 0

; 3845 : 	SearchTimeDelay = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 0

; 3846 : 	TargetSize = 0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+140], xmm0

; 3847 : 	ExtremeStuckCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+136], 0

; 3848 : 	Commands->Enable_Engine(obj,true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+552]
	call	edx
	add	esp, 8

; 3849 : 	sprintf(myAnimation,"FighterDrone%d",Get_Int_Parameter("PlayerNumber"));

	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	push	OFFSET ??_C@_0P@CCHHLEDH@FighterDrone?$CFd?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 3850 : 	Commands->Set_Model(obj,myAnimation);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+160]
	call	eax
	add	esp, 8

; 3851 : 	sprintf(myAnimation,"FighterDrone%d.FighterDrone%d",Get_Int_Parameter("PlayerNumber"),Get_Int_Parameter("PlayerNumber"));

	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	push	OFFSET ??_C@_0BO@GIMEHAME@FighterDrone?$CFd?4FighterDrone?$CFd?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 3852 : 	Commands->Set_Animation(obj,myAnimation,true,0,0,0,true);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH

; 3853 : 	MyState = DroneIdle;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0

; 3854 : 	LastState = DroneIdle;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0

; 3855 : 	AIStatePriorities[DroneIdle]=0;

	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+28], 0

; 3856 : 	AIStatePriorities[DroneGuarding] = 1;

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+28], 1

; 3857 : 	AIStatePriorities[DroneAvoiding] = 3;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+28], 3

; 3858 : 	AIStatePriorities[DroneAttacking] = 2;

	mov	eax, 4
	imul	eax, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+28], 2

; 3859 : 	AIStatePriorities[DroneReturning] = 2;

	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+28], 2

; 3860 : 	StuckCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+96], 0

; 3861 : 	LastTargetID = TargetID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+92], 0

; 3862 : 	NewTargetTime = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+100], 0

; 3863 : 	StateTimeOutTime = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 0

; 3864 : 	LastPrimaryFire = PrimaryFire = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+128], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+129], 1

; 3865 : 	AvoidDegree = Commands->Get_Random(-90.0f,90.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c2b40000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+120]

; 3866 : 	AvoidDistance = Commands->Get_Random(5.0f,20.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@41a00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+124]

; 3867 : 	TargetPos = Vector3(0.0f,0.0f,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 3868 : 	LastPosition = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 3869 : 	FollowAngle = 0;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+132], xmm0

; 3870 : 	CurrentSpeed = 0;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+144], xmm0

; 3871 : 	Power = Get_Int_Parameter("Power");

	push	OFFSET ??_C@_05PMCMDMKN@Power?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+116], eax

; 3872 : 	ShieldLightUp = 0;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+148], xmm0

; 3873 : 	if (Get_Int_Parameter("PlayerEscort"))

	push	OFFSET ??_C@_0N@INKKNFJM@PlayerEscort?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	$LN8@Created

; 3874 : 	{
; 3875 : 		for (int x = 0;x < 2;x++)

	mov	DWORD PTR _x$5[ebp], 0
	jmp	SHORT $LN7@Created
$LN6@Created:
	mov	eax, DWORD PTR _x$5[ebp]
	add	eax, 1
	mov	DWORD PTR _x$5[ebp], eax
$LN7@Created:
	cmp	DWORD PTR _x$5[ebp], 2
	jge	$LN5@Created

; 3876 : 			if (!MiniGamePlayerControlSystem[Get_Int_Parameter("PlayerNumber")].Drones[x])

	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR _x$5[ebp]
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+ecx*4+368], 0
	jne	SHORT $LN4@Created

; 3877 : 			{
; 3878 : 				FollowAngle = (!x ? -33.0f : 33.0f);

	cmp	DWORD PTR _x$5[ebp], 0
	jne	SHORT $LN12@Created
	movss	xmm0, DWORD PTR __real@c2040000
	movss	DWORD PTR tv241[ebp], xmm0
	jmp	SHORT $LN13@Created
$LN12@Created:
	movss	xmm0, DWORD PTR __real@42040000
	movss	DWORD PTR tv241[ebp], xmm0
$LN13@Created:
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv241[ebp]
	movss	DWORD PTR [eax+132], xmm0

; 3879 : 				MiniGamePlayerControlSystem[Get_Int_Parameter("PlayerNumber")].Drones[x] = Commands->Get_ID(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	esi, eax
	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR _x$5[ebp]
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+ecx*4+368], esi

; 3880 : 				break;

	jmp	SHORT $LN5@Created
$LN4@Created:

; 3881 : 			}
; 3882 : 	}

	jmp	$LN6@Created
$LN5@Created:

; 3883 : 	else

	jmp	$LN3@Created
$LN8@Created:

; 3884 : 	{
; 3885 : 		sprintf(myAnimation,"FighterDronez");

	push	OFFSET ??_C@_0O@CFOGKGM@FighterDronez?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 8

; 3886 : 		Commands->Set_Model(obj,myAnimation);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+160]
	call	eax
	add	esp, 8

; 3887 : 		sprintf(myAnimation,"FighterDronez.FighterDronez");

	push	OFFSET ??_C@_0BM@FGAOFIBA@FighterDronez?4FighterDronez?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 8

; 3888 : 		Commands->Set_Animation(obj,myAnimation,true,0,0,0,true);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH
$LN3@Created:

; 3889 : 	}
; 3890 : 	if (Get_Int_Parameter("RePosition"))

	push	OFFSET ??_C@_0L@PIAPLGDF@RePosition?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	SHORT $LN2@Created

; 3891 : 	{
; 3892 : 		Position_At_Player(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Position_At_Player@JMG_CMTB_Player_Drone@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Player_Drone::Position_At_Player

; 3893 : 		Commands->Create_Explosion("Explosion_Drone_Warp_In",Commands->Get_Position(obj),0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0BI@FAOCJFNP@Explosion_Drone_Warp_In?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+416]
	call	edx
	add	esp, 12					; 0000000cH
$LN2@Created:

; 3894 : 	}
; 3895 : 	RenCometBustersList += TypeObject(obj,0.105625f,0.325f,PlayerDrone);

	push	12					; 0000000cH
	push	ecx
	movss	xmm0, DWORD PTR __real@3ea66666
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3dd851ec
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 3896 : 	MyObject = RenCometBustersList.FindObject(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?FindObject@RenCometBustersGameObjects@@QAEPAUAnObject@@PAVScriptableGameObj@@@Z ; RenCometBustersGameObjects::FindObject
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], eax

; 3897 : 	if (!MyObject)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 0
	jne	SHORT $LN1@Created

; 3898 : 		return;

	jmp	$LN10@Created
$LN1@Created:

; 3899 : 	Commands->Start_Timer(obj,this,Commands->Get_Random(9.0f,11.0f),5435);

	push	5435					; 0000153bH
	push	ecx
	movss	xmm0, DWORD PTR __real@41300000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@41100000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 4
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+128]
	call	edx
	add	esp, 16					; 00000010H

; 3900 : 	Commands->Start_Timer(obj,this,1.0f,5436);

	push	5436					; 0000153cH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 3901 : 	Commands->Start_Timer(obj,this,0.25f,5437);

	push	5437					; 0000153dH
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 3902 : 	Commands->Start_Timer(obj,this,0.1f,5438);

	push	5438					; 0000153eH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN10@Created:

; 3903 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_CMTB_Player_Drone@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Player_Drone::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_Cargo_Ship_Turret@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_Cargo_Ship_Turret@@UAEPAXI@Z PROC		; JMG_CMTB_Cargo_Ship_Turret::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_Cargo_Ship_Turret@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_Cargo_Ship_Turret@@UAEPAXI@Z ENDP		; JMG_CMTB_Cargo_Ship_Turret::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_Cargo_Ship_Turret@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_Cargo_Ship_Turret@@UAE@XZ PROC		; JMG_CMTB_Cargo_Ship_Turret::~JMG_CMTB_Cargo_Ship_Turret, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_Cargo_Ship_Turret@@UAE@XZ ENDP		; JMG_CMTB_Cargo_Ship_Turret::~JMG_CMTB_Cargo_Ship_Turret
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_Cargo_Ship_Turret@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_Cargo_Ship_Turret@@QAE@XZ PROC		; JMG_CMTB_Cargo_Ship_Turret::JMG_CMTB_Cargo_Ship_Turret, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_Cargo_Ship_Turret@@6B@
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	3
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_Cargo_Ship_Turret@@QAE@XZ ENDP		; JMG_CMTB_Cargo_Ship_Turret::JMG_CMTB_Cargo_Ship_Turret
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?CheckIfInTargetableRange@JMG_CMTB_Cargo_Ship_Turret@@AAE_NPAVScriptableGameObj@@ABVVector3@@@Z
_TEXT	SEGMENT
tv136 = -104						; size = 4
$T1 = -100						; size = 12
_Facing$ = -24						; size = 4
_TargetDirection$ = -20					; size = 4
_MyPos$ = -16						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_Pos$ = 12						; size = 4
?CheckIfInTargetableRange@JMG_CMTB_Cargo_Ship_Turret@@AAE_NPAVScriptableGameObj@@ABVVector3@@@Z PROC ; JMG_CMTB_Cargo_Ship_Turret::CheckIfInTargetableRange, COMDAT
; _this$ = ecx

; 3830 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 104				; 00000068H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3831 : 	Vector3 MyPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _MyPos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 3832 : 	MyPos.X = Pos.X-MyPos.X;

	mov	eax, DWORD PTR _Pos$[ebp]
	movss	xmm0, DWORD PTR [eax]
	subss	xmm0, DWORD PTR _MyPos$[ebp]
	movss	DWORD PTR _MyPos$[ebp], xmm0

; 3833 : 	MyPos.Y = Pos.Y-MyPos.Y;

	mov	eax, DWORD PTR _Pos$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	subss	xmm0, DWORD PTR _MyPos$[ebp+4]
	movss	DWORD PTR _MyPos$[ebp+4], xmm0

; 3834 : 	float TargetDirection = atan2(MyPos.Y,MyPos.X)*180/PI;

	push	ecx
	movss	xmm0, DWORD PTR _MyPos$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _MyPos$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	call	?atan2@@YAMMM@Z				; atan2
	add	esp, 8
	fstp	DWORD PTR tv136[ebp]
	movss	xmm0, DWORD PTR tv136[ebp]
	mulss	xmm0, DWORD PTR __real@43340000
	divss	xmm0, DWORD PTR __real@40490fdb
	movss	DWORD PTR _TargetDirection$[ebp], xmm0

; 3835 : 	float Facing = Commands->Get_Facing(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+72]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _Facing$[ebp]

; 3836 : 	if (JmgUtility::DegreeDiff(TargetDirection,Facing,67.5f))

	push	ecx
	movss	xmm0, DWORD PTR __real@42870000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _Facing$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _TargetDirection$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?DegreeDiff@JmgUtility@@SA_NMMM@Z	; JmgUtility::DegreeDiff
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@CheckIfInT

; 3837 : 		return true;

	mov	al, 1
	jmp	SHORT $LN2@CheckIfInT
$LN1@CheckIfInT:

; 3838 : 	return false;

	xor	al, al
$LN2@CheckIfInT:

; 3839 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?CheckIfInTargetableRange@JMG_CMTB_Cargo_Ship_Turret@@AAE_NPAVScriptableGameObj@@ABVVector3@@@Z ENDP ; JMG_CMTB_Cargo_Ship_Turret::CheckIfInTargetableRange
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?EndAttack@JMG_CMTB_Cargo_Ship_Turret@@AAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?EndAttack@JMG_CMTB_Cargo_Ship_Turret@@AAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Cargo_Ship_Turret::EndAttack, COMDAT
; _this$ = ecx

; 3821 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3822 : 	PrimaryFire = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 1

; 3823 : 	GiveUpTime = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0

; 3824 : 	EnemyID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0

; 3825 : 	NearestDistance = 9999999.9f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@4b189680
	movss	DWORD PTR [eax+40], xmm0

; 3826 : 	ReaimRequired = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 1

; 3827 : 	Commands->Action_Reset(obj,100);

	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 8

; 3828 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?EndAttack@JMG_CMTB_Cargo_Ship_Turret@@AAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Cargo_Ship_Turret::EndAttack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?SafeDiv@JMG_CMTB_Cargo_Ship_Turret@@AAEMMM@Z
_TEXT	SEGMENT
tv72 = -72						; size = 4
_this$ = -4						; size = 4
_Number1$ = 8						; size = 4
_Number2$ = 12						; size = 4
?SafeDiv@JMG_CMTB_Cargo_Ship_Turret@@AAEMMM@Z PROC	; JMG_CMTB_Cargo_Ship_Turret::SafeDiv, COMDAT
; _this$ = ecx

; 3815 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3816 : 	if (!Number2)

	movss	xmm0, DWORD PTR _Number2$[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN1@SafeDiv

; 3817 : 		return 1.0f;

	fld1
	jmp	SHORT $LN2@SafeDiv
$LN1@SafeDiv:

; 3818 : 	return Number1/Number2;

	movss	xmm0, DWORD PTR _Number1$[ebp]
	divss	xmm0, DWORD PTR _Number2$[ebp]
	movss	DWORD PTR tv72[ebp], xmm0
	fld	DWORD PTR tv72[ebp]
$LN2@SafeDiv:

; 3819 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?SafeDiv@JMG_CMTB_Cargo_Ship_Turret@@AAEMMM@Z ENDP	; JMG_CMTB_Cargo_Ship_Turret::SafeDiv
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Destroyed@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Cargo_Ship_Turret::Destroyed, COMDAT
; _this$ = ecx

; 3812 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3813 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Destroyed@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Cargo_Ship_Turret::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
tv75 = -404						; size = 4
tv346 = -400						; size = 4
$T1 = -396						; size = 12
$T2 = -384						; size = 12
$T3 = -372						; size = 12
$T4 = -360						; size = 12
_params$5 = -284					; size = 196
_Acceleration$6 = -88					; size = 12
_Movement2$7 = -76					; size = 12
_Movement$8 = -64					; size = 12
_TravelTime$9 = -52					; size = 4
_TargetSpot$10 = -48					; size = 12
_TargetDistance$11 = -36				; size = 4
_EnemySpot$12 = -32					; size = 12
_MyPos$13 = -20						; size = 12
_Target$14 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_CMTB_Cargo_Ship_Turret::Timer_Expired, COMDAT
; _this$ = ecx

; 3742 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 404				; 00000194H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3743 : 	if (number == 92562143)

	cmp	DWORD PTR _number$[ebp], 92562143	; 058462dfH
	jne	$LN16@Timer_Expi

; 3744 : 	{
; 3745 : 		MissAmount = Commands->Get_Random(0.0f,1.0f) < 0.5f ? 1.0f : Commands->Get_Random(0.25f,0.75f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv346[ebp]
	movss	xmm0, DWORD PTR __real@3f000000
	comiss	xmm0, DWORD PTR tv346[ebp]
	jbe	SHORT $LN19@Timer_Expi
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv75[ebp], xmm0
	jmp	SHORT $LN20@Timer_Expi
$LN19@Timer_Expi:
	push	ecx
	movss	xmm0, DWORD PTR __real@3f400000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+148]
	call	eax
	add	esp, 8
	fstp	DWORD PTR tv75[ebp]
$LN20@Timer_Expi:
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv75[ebp]
	movss	DWORD PTR [ecx+28], xmm0

; 3746 : 		Commands->Start_Timer(obj,this,Commands->Get_Random(0.75f,1.25f),92562143);

	push	92562143				; 058462dfH
	push	ecx
	movss	xmm0, DWORD PTR __real@3fa00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f400000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 4
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+128]
	call	edx
	add	esp, 16					; 00000010H
$LN16@Timer_Expi:

; 3747 : 	}
; 3748 : 	if (92562142 == number)

	cmp	DWORD PTR _number$[ebp], 92562142	; 058462deH
	jne	$LN15@Timer_Expi

; 3749 : 	{
; 3750 : 		if (HuntingPlayer)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN13@Timer_Expi

; 3751 : 		{
; 3752 : 			HuntingPlayer--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], ecx

; 3753 : 			if (!HuntingPlayer)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 0
	jne	SHORT $LN13@Timer_Expi

; 3754 : 				EndAttack(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndAttack@JMG_CMTB_Cargo_Ship_Turret@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Cargo_Ship_Turret::EndAttack
$LN13@Timer_Expi:

; 3755 : 		}
; 3756 : 		GameObject *Target = Commands->Find_Object(EnemyID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Target$14[ebp], eax

; 3757 : 		if (!Target)

	cmp	DWORD PTR _Target$14[ebp], 0
	jne	SHORT $LN12@Timer_Expi

; 3758 : 		{
; 3759 : 			if (EnemyID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	je	SHORT $LN11@Timer_Expi

; 3760 : 				EndAttack(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndAttack@JMG_CMTB_Cargo_Ship_Turret@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Cargo_Ship_Turret::EndAttack
$LN11@Timer_Expi:

; 3761 : 		}
; 3762 : 		else

	jmp	$LN1@Timer_Expi
$LN12@Timer_Expi:

; 3763 : 		{
; 3764 : 			Vector3 MyPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _MyPos$13[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 3765 : 			Vector3 EnemySpot = Commands->Get_Position(Target);

	mov	eax, DWORD PTR _Target$14[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _EnemySpot$12[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 3766 : 			float TargetDistance = JmgUtility::SimpleDistance(MyPos,EnemySpot);

	lea	eax, DWORD PTR _EnemySpot$12[ebp]
	push	eax
	lea	ecx, DWORD PTR _MyPos$13[ebp]
	push	ecx
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR _TargetDistance$11[ebp]

; 3767 : 			if (GiveUpTime)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+88], 0
	je	SHORT $LN8@Timer_Expi

; 3768 : 			{
; 3769 : 				GiveUpTime -= 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+88], ecx

; 3770 : 				if (!GiveUpTime)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+88], 0
	jne	SHORT $LN8@Timer_Expi

; 3771 : 					EndAttack(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndAttack@JMG_CMTB_Cargo_Ship_Turret@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Cargo_Ship_Turret::EndAttack
$LN8@Timer_Expi:

; 3772 : 			}
; 3773 : 			if (TargetDistance > 10000)

	movss	xmm0, DWORD PTR _TargetDistance$11[ebp]
	comiss	xmm0, DWORD PTR __real@461c4000
	jbe	SHORT $LN7@Timer_Expi

; 3774 : 				EndAttack(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndAttack@JMG_CMTB_Cargo_Ship_Turret@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Cargo_Ship_Turret::EndAttack
	jmp	$LN1@Timer_Expi
$LN7@Timer_Expi:

; 3775 : 			else if (!CheckIfInTargetableRange(obj,EnemySpot))

	lea	eax, DWORD PTR _EnemySpot$12[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CheckIfInTargetableRange@JMG_CMTB_Cargo_Ship_Turret@@AAE_NPAVScriptableGameObj@@ABVVector3@@@Z ; JMG_CMTB_Cargo_Ship_Turret::CheckIfInTargetableRange
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN5@Timer_Expi

; 3776 : 				EndAttack(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndAttack@JMG_CMTB_Cargo_Ship_Turret@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Cargo_Ship_Turret::EndAttack
	jmp	$LN1@Timer_Expi
$LN5@Timer_Expi:

; 3777 : 			else if (ReaimRequired)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+48]
	test	ecx, ecx
	je	SHORT $LN3@Timer_Expi

; 3778 : 			{
; 3779 : 				ReaimRequired = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 0

; 3780 : 				LastPosition[0] = LastPosition[1] = LastPosition[2] = Commands->Get_Position(Target);

	mov	eax, DWORD PTR _Target$14[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+52]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	push	eax
	mov	eax, 12					; 0000000cH
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax+52]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	push	eax
	mov	edx, 12					; 0000000cH
	imul	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+52]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 3781 : 			}
; 3782 : 			else

	jmp	$LN1@Timer_Expi
$LN3@Timer_Expi:

; 3783 : 			{
; 3784 : 				Vector3 TargetSpot = EnemySpot;

	lea	eax, DWORD PTR _EnemySpot$12[ebp]
	push	eax
	lea	ecx, DWORD PTR _TargetSpot$10[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 3785 : 				LastPosition[2] = LastPosition[1];

	mov	eax, 12					; 0000000cH
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+52]
	push	edx
	mov	eax, 12					; 0000000cH
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax+52]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 3786 : 				LastPosition[1] = LastPosition[0];

	mov	eax, 12					; 0000000cH
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+52]
	push	edx
	mov	eax, 12					; 0000000cH
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax+52]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 3787 : 				LastPosition[0] = EnemySpot;

	lea	eax, DWORD PTR _EnemySpot$12[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+52]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 3788 : 				FireWeapons++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+92], ecx

; 3789 : 				if (FireWeapons > 3)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+92], 3
	jle	$LN1@Timer_Expi

; 3790 : 				{
; 3791 : 					FireWeapons = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0

; 3792 : 					float TravelTime = TargetDistance/(5625.0f*MissAmount);

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@45afc800
	mulss	xmm0, DWORD PTR [eax+28]
	movss	xmm1, DWORD PTR _TargetDistance$11[ebp]
	divss	xmm1, xmm0
	movss	DWORD PTR _TravelTime$9[ebp], xmm1

; 3793 : 					Vector3 Movement = Vector3(LastPosition[0].X - LastPosition[1].X,LastPosition[0].Y - LastPosition[1].Y,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, 12					; 0000000cH
	imul	eax, 0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+eax+56]
	subss	xmm0, DWORD PTR [esi+ecx+56]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, 12					; 0000000cH
	imul	eax, 0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+eax+52]
	subss	xmm0, DWORD PTR [esi+ecx+52]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _Movement$8[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3

; 3794 : 					Vector3 Movement2 = Vector3(LastPosition[1].X - LastPosition[2].X,LastPosition[1].Y - LastPosition[2].Y,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, 12					; 0000000cH
	shl	eax, 0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+eax+56]
	subss	xmm0, DWORD PTR [esi+ecx+56]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, 12					; 0000000cH
	shl	eax, 0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+eax+52]
	subss	xmm0, DWORD PTR [esi+ecx+52]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _Movement2$7[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3

; 3795 : 					Vector3 Acceleration = Vector3(SafeDiv(Movement.X,Movement2.X),SafeDiv(Movement.Y,Movement2.Y),0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _Movement2$7[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _Movement$8[ebp+4]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SafeDiv@JMG_CMTB_Cargo_Ship_Turret@@AAEMMM@Z ; JMG_CMTB_Cargo_Ship_Turret::SafeDiv
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _Movement2$7[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _Movement$8[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SafeDiv@JMG_CMTB_Cargo_Ship_Turret@@AAEMMM@Z ; JMG_CMTB_Cargo_Ship_Turret::SafeDiv
	push	ecx
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR _Acceleration$6[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3

; 3796 : 					TargetSpot.X += (10.0f * Movement.X * TravelTime);

	movss	xmm0, DWORD PTR __real@41200000
	mulss	xmm0, DWORD PTR _Movement$8[ebp]
	mulss	xmm0, DWORD PTR _TravelTime$9[ebp]
	addss	xmm0, DWORD PTR _TargetSpot$10[ebp]
	movss	DWORD PTR _TargetSpot$10[ebp], xmm0

; 3797 : 					TargetSpot.Y += (10.0f * Movement.Y * TravelTime);

	movss	xmm0, DWORD PTR __real@41200000
	mulss	xmm0, DWORD PTR _Movement$8[ebp+4]
	mulss	xmm0, DWORD PTR _TravelTime$9[ebp]
	addss	xmm0, DWORD PTR _TargetSpot$10[ebp+4]
	movss	DWORD PTR _TargetSpot$10[ebp+4], xmm0

; 3798 : 					TargetSpot.Z = Commands->Get_Bone_Position(obj,"Barrel").Z;

	push	OFFSET ??_C@_06LHNPGOPG@Barrel?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+68]
	call	eax
	add	esp, 12					; 0000000cH
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR _TargetSpot$10[ebp+8], xmm0

; 3799 : 
; 3800 : 					ActionParamsStruct params;

	lea	ecx, DWORD PTR _params$5[ebp]
	call	??0ActionParamsStruct@@QAE@XZ		; ActionParamsStruct::ActionParamsStruct

; 3801 : 					params.Set_Basic(this,0,100);

	push	-1
	push	100					; 00000064H
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$5[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 3802 : 					params.Set_Attack(TargetSpot,100.0f,0,PrimaryFire);

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR _TargetSpot$10[ebp]
	push	edx
	lea	ecx, DWORD PTR _params$5[ebp]
	call	?Set_Attack@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ; ActionParamsStruct::Set_Attack

; 3803 : 					params.AttackCheckBlocked = false;

	mov	BYTE PTR _params$5[ebp+108], 0

; 3804 : 					Commands->Action_Attack(obj,params);

	lea	eax, DWORD PTR _params$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+20]
	call	eax
	add	esp, 8
$LN1@Timer_Expi:

; 3805 : 				}
; 3806 : 			}
; 3807 : 		}
; 3808 : 		Commands->Start_Timer(obj,this,0.1f,92562142);

	push	92562142				; 058462deH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN15@Timer_Expi:

; 3809 : 	}
; 3810 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_CMTB_Cargo_Ship_Turret::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Custom@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_message$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; JMG_CMTB_Cargo_Ship_Turret::Custom, COMDAT
; _this$ = ecx

; 3732 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3733 : 	if (message == 95959500)

	cmp	DWORD PTR _message$[ebp], 95959500	; 05b839ccH
	jne	SHORT $LN2@Custom

; 3734 : 	{
; 3735 : 		EndAttack(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EndAttack@JMG_CMTB_Cargo_Ship_Turret@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Cargo_Ship_Turret::EndAttack

; 3736 : 		HuntingPlayer = 30;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 30			; 0000001eH

; 3737 : 		PrimaryFire = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 3738 : 		EnemyID = Commands->Get_ID(Get_Vehicle(sender));

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+44], eax
$LN2@Custom:

; 3739 : 	}
; 3740 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; JMG_CMTB_Cargo_Ship_Turret::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Enemy_Seen@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
$T1 = -116						; size = 12
$T2 = -104						; size = 12
_ShortDistance$ = -28					; size = 4
_TargetPos$ = -24					; size = 12
_TargetID$ = -12					; size = 4
_presetId$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_seen$ = 12						; size = 4
?Enemy_Seen@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_CMTB_Cargo_Ship_Turret::Enemy_Seen, COMDAT
; _this$ = ecx

; 3709 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 116				; 00000074H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3710 : 	int presetId = Commands->Get_Preset_ID(seen);

	mov	eax, DWORD PTR _seen$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+112]
	call	edx
	add	esp, 4
	mov	DWORD PTR _presetId$[ebp], eax

; 3711 : 	if (HuntingPlayer || Commands->Is_A_Star(seen) || Get_Vehicle_Driver(seen) || presetId == PLAYERDRONE_ID || presetId == 1000000074 || presetId == 1000000077)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 0
	jne	SHORT $LN5@Enemy_Seen
	mov	eax, DWORD PTR _seen$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@Enemy_Seen
	mov	eax, DWORD PTR _seen$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN5@Enemy_Seen
	cmp	DWORD PTR _presetId$[ebp], 1000000091	; 3b9aca5bH
	je	SHORT $LN5@Enemy_Seen
	cmp	DWORD PTR _presetId$[ebp], 1000000074	; 3b9aca4aH
	je	SHORT $LN5@Enemy_Seen
	cmp	DWORD PTR _presetId$[ebp], 1000000077	; 3b9aca4dH
	jne	SHORT $LN6@Enemy_Seen
$LN5@Enemy_Seen:

; 3712 : 		return;

	jmp	$LN7@Enemy_Seen
$LN6@Enemy_Seen:

; 3713 : 	int TargetID = Commands->Get_ID(seen);

	mov	eax, DWORD PTR _seen$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _TargetID$[ebp], eax

; 3714 : 	Vector3 TargetPos = Commands->Get_Position(seen);

	mov	eax, DWORD PTR _seen$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _TargetPos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 3715 : 	float ShortDistance = JmgUtility::SimpleDistance(Commands->Get_Position(obj),TargetPos);

	lea	eax, DWORD PTR _TargetPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR _ShortDistance$[ebp]

; 3716 : 	if (!CheckIfInTargetableRange(obj,TargetPos))

	lea	eax, DWORD PTR _TargetPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CheckIfInTargetableRange@JMG_CMTB_Cargo_Ship_Turret@@AAE_NPAVScriptableGameObj@@ABVVector3@@@Z ; JMG_CMTB_Cargo_Ship_Turret::CheckIfInTargetableRange
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@Enemy_Seen

; 3717 : 		return;

	jmp	SHORT $LN7@Enemy_Seen
$LN4@Enemy_Seen:

; 3718 : 	if (EnemyID == TargetID)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	cmp	ecx, DWORD PTR _TargetID$[ebp]
	jne	SHORT $LN3@Enemy_Seen

; 3719 : 	{
; 3720 : 		GiveUpTime = 30;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 30			; 0000001eH

; 3721 : 		NearestDistance = ShortDistance;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _ShortDistance$[ebp]
	movss	DWORD PTR [eax+40], xmm0
	jmp	SHORT $LN1@Enemy_Seen
$LN3@Enemy_Seen:

; 3722 : 	}
; 3723 : 	else if (ShortDistance <= 10000 && ShortDistance < NearestDistance)

	movss	xmm0, DWORD PTR __real@461c4000
	comiss	xmm0, DWORD PTR _ShortDistance$[ebp]
	jb	SHORT $LN1@Enemy_Seen
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+40]
	comiss	xmm0, DWORD PTR _ShortDistance$[ebp]
	jbe	SHORT $LN1@Enemy_Seen

; 3724 : 	{
; 3725 : 		GiveUpTime = 30;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 30			; 0000001eH

; 3726 : 		ReaimRequired = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 1

; 3727 : 		EnemyID = TargetID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _TargetID$[ebp]
	mov	DWORD PTR [eax+44], ecx

; 3728 : 		NearestDistance = ShortDistance;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _ShortDistance$[ebp]
	movss	DWORD PTR [eax+40], xmm0
$LN1@Enemy_Seen:
$LN7@Enemy_Seen:

; 3729 : 	}
; 3730 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Enemy_Seen@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_CMTB_Cargo_Ship_Turret::Enemy_Seen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Cargo_Ship_Turret::Created, COMDAT
; _this$ = ecx

; 3695 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3696 : 	MissAmount = 1.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+28], xmm0

; 3697 : 	HuntingPlayer = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0

; 3698 : 	PrimaryFire = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 1

; 3699 : 	FireWeapons = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0

; 3700 : 	GiveUpTime = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0

; 3701 : 	NearestDistance = 9999999.9f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@4b189680
	movss	DWORD PTR [eax+40], xmm0

; 3702 : 	EnemyID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0

; 3703 : 	ReaimRequired = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 0

; 3704 : 	Commands->Enable_Enemy_Seen(obj,true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+300]
	call	edx
	add	esp, 8

; 3705 : 	Commands->Start_Timer(obj,this,0.1f,92562142);

	push	92562142				; 058462deH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 3706 : 	Commands->Start_Timer(obj,this,Commands->Get_Random(0.75f,1.25f),92562143);

	push	92562143				; 058462dfH
	push	ecx
	movss	xmm0, DWORD PTR __real@3fa00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f400000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 4
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+128]
	call	edx
	add	esp, 16					; 00000010H

; 3707 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_CMTB_Cargo_Ship_Turret@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Cargo_Ship_Turret::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_Cargo_Ship_Script@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_Cargo_Ship_Script@@UAEPAXI@Z PROC		; JMG_CMTB_Cargo_Ship_Script::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_Cargo_Ship_Script@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_Cargo_Ship_Script@@UAEPAXI@Z ENDP		; JMG_CMTB_Cargo_Ship_Script::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_Cargo_Ship_Script@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_Cargo_Ship_Script@@UAE@XZ PROC		; JMG_CMTB_Cargo_Ship_Script::~JMG_CMTB_Cargo_Ship_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_Cargo_Ship_Script@@UAE@XZ ENDP		; JMG_CMTB_Cargo_Ship_Script::~JMG_CMTB_Cargo_Ship_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_Cargo_Ship_Script@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_Cargo_Ship_Script@@QAE@XZ PROC		; JMG_CMTB_Cargo_Ship_Script::JMG_CMTB_Cargo_Ship_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_Cargo_Ship_Script@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_Cargo_Ship_Script@@QAE@XZ ENDP		; JMG_CMTB_Cargo_Ship_Script::JMG_CMTB_Cargo_Ship_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Destroyed@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_x$1 = -28						; size = 4
_SPOT$ = -24						; size = 4
_SPOT$2 = -20						; size = 4
_x$3 = -16						; size = 4
_SPOT$4 = -12						; size = 4
_x$5 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Cargo_Ship_Script::Destroyed, COMDAT
; _this$ = ecx

; 3670 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3671 : 	RenCometBustersList -= obj;

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??ZRenCometBustersGameObjects@@QAEAAV0@PAVScriptableGameObj@@@Z ; RenCometBustersGameObjects::operator-=

; 3672 : 	for (int x = 0;x < 7;x++)

	mov	DWORD PTR _x$5[ebp], 0
	jmp	SHORT $LN13@Destroyed
$LN12@Destroyed:
	mov	eax, DWORD PTR _x$5[ebp]
	add	eax, 1
	mov	DWORD PTR _x$5[ebp], eax
$LN13@Destroyed:
	cmp	DWORD PTR _x$5[ebp], 7
	jge	SHORT $LN11@Destroyed

; 3673 : 	{
; 3674 : 		GameObject *SPOT = Commands->Find_Object(ShipCollideID[x]);

	mov	eax, DWORD PTR _x$5[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+28]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	mov	DWORD PTR _SPOT$4[ebp], eax

; 3675 : 		if (SPOT)

	cmp	DWORD PTR _SPOT$4[ebp], 0
	je	SHORT $LN10@Destroyed

; 3676 : 		{
; 3677 : 			RenCometBustersList -= SPOT;

	mov	eax, DWORD PTR _SPOT$4[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??ZRenCometBustersGameObjects@@QAEAAV0@PAVScriptableGameObj@@@Z ; RenCometBustersGameObjects::operator-=

; 3678 : 			Commands->Destroy_Object(SPOT);

	mov	eax, DWORD PTR _SPOT$4[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN10@Destroyed:

; 3679 : 		}
; 3680 : 	}

	jmp	SHORT $LN12@Destroyed
$LN11@Destroyed:

; 3681 : 	for (int x = 0;x < 6;x++)

	mov	DWORD PTR _x$3[ebp], 0
	jmp	SHORT $LN9@Destroyed
$LN8@Destroyed:
	mov	eax, DWORD PTR _x$3[ebp]
	add	eax, 1
	mov	DWORD PTR _x$3[ebp], eax
$LN9@Destroyed:
	cmp	DWORD PTR _x$3[ebp], 6
	jge	SHORT $LN7@Destroyed

; 3682 : 	{
; 3683 : 		GameObject *SPOT = Commands->Find_Object(Turrets[x]);

	mov	eax, DWORD PTR _x$3[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+60]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	mov	DWORD PTR _SPOT$2[ebp], eax

; 3684 : 		if (SPOT)

	cmp	DWORD PTR _SPOT$2[ebp], 0
	je	SHORT $LN6@Destroyed

; 3685 : 			Commands->Destroy_Object(SPOT);

	mov	eax, DWORD PTR _SPOT$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN6@Destroyed:

; 3686 : 	}

	jmp	SHORT $LN8@Destroyed
$LN7@Destroyed:

; 3687 : 	GameObject *SPOT = Commands->Find_Object(AnimationControllerID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _SPOT$[ebp], eax

; 3688 : 	if (SPOT)

	cmp	DWORD PTR _SPOT$[ebp], 0
	je	SHORT $LN5@Destroyed

; 3689 : 		Commands->Destroy_Object(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN5@Destroyed:

; 3690 : 	if (Get_Int_Parameter("PlayerNumber") != -1)

	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	eax, -1
	je	SHORT $LN14@Destroyed

; 3691 : 		for (int x = 0;x < 7;x++)

	mov	DWORD PTR _x$1[ebp], 0
	jmp	SHORT $LN3@Destroyed
$LN2@Destroyed:
	mov	eax, DWORD PTR _x$1[ebp]
	add	eax, 1
	mov	DWORD PTR _x$1[ebp], eax
$LN3@Destroyed:
	cmp	DWORD PTR _x$1[ebp], 7
	jge	SHORT $LN14@Destroyed

; 3692 : 			MiniGamePlayerControlSystem[Get_Int_Parameter("PlayerNumber")].CargoShipIDs[x] = 0;

	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR _x$1[ebp]
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+ecx*4+400], 0
	jmp	SHORT $LN2@Destroyed
$LN14@Destroyed:

; 3693 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Destroyed@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Cargo_Ship_Script::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Killed@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
tv182 = -128						; size = 4
tv226 = -124						; size = 4
tv210 = -120						; size = 4
tv199 = -120						; size = 4
tv177 = -120						; size = 4
$T1 = -116						; size = 12
_Player$2 = -36						; size = 4
_x$3 = -32						; size = 4
_Spot$4 = -28						; size = 12
_x$5 = -16						; size = 4
_Random$6 = -12						; size = 4
_SPOT$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
?Killed@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_CMTB_Cargo_Ship_Script::Killed, COMDAT
; _this$ = ecx

; 3647 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3648 : 	GameObject *SPOT = Commands->Find_Object(AnimationControllerID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _SPOT$[ebp], eax

; 3649 : 	if (SPOT)

	cmp	DWORD PTR _SPOT$[ebp], 0
	je	$LN2@Killed

; 3650 : 	{
; 3651 : 		int Random = (int)(Commands->Get_Random(20,25)*(Get_Animation_Frame(SPOT)/9000.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@41c80000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@41a00000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv177[ebp]
	movss	xmm0, DWORD PTR tv177[ebp]
	mov	edx, DWORD PTR _SPOT$[ebp]
	push	edx
	movss	DWORD PTR tv226[ebp], xmm0
	call	?Get_Animation_Frame@@YAMPAVScriptableGameObj@@@Z ; Get_Animation_Frame
	add	esp, 4
	fstp	DWORD PTR tv182[ebp]
	movss	xmm0, DWORD PTR tv182[ebp]
	divss	xmm0, DWORD PTR __real@460ca000
	movss	xmm1, DWORD PTR tv226[ebp]
	mulss	xmm1, xmm0
	cvttss2si eax, xmm1
	mov	DWORD PTR _Random$6[ebp], eax

; 3652 : 		for (int x = 0;x < Random;x++)

	mov	DWORD PTR _x$5[ebp], 0
	jmp	SHORT $LN7@Killed
$LN6@Killed:
	mov	eax, DWORD PTR _x$5[ebp]
	add	eax, 1
	mov	DWORD PTR _x$5[ebp], eax
$LN7@Killed:
	mov	eax, DWORD PTR _x$5[ebp]
	cmp	eax, DWORD PTR _Random$6[ebp]
	jge	$LN5@Killed

; 3653 : 		{
; 3654 : 			Vector3 Spot = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _Spot$4[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 3655 : 			Spot.X += Commands->Get_Random(-10.0f,10.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c1200000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv199[ebp]
	movss	xmm0, DWORD PTR tv199[ebp]
	addss	xmm0, DWORD PTR _Spot$4[ebp]
	movss	DWORD PTR _Spot$4[ebp], xmm0

; 3656 : 			Spot.Y += Commands->Get_Random(-10.0f,10.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c1200000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv210[ebp]
	movss	xmm0, DWORD PTR tv210[ebp]
	addss	xmm0, DWORD PTR _Spot$4[ebp+4]
	movss	DWORD PTR _Spot$4[ebp+4], xmm0

; 3657 : 			JMG_CMTB_Random_Ship_Powerup(Spot);

	push	0
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	lea	eax, DWORD PTR _Spot$4[ebp]
	push	eax
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	call	?JMG_CMTB_Random_Ship_Powerup@@YAPAVScriptableGameObj@@VVector3@@H@Z ; JMG_CMTB_Random_Ship_Powerup
	add	esp, 16					; 00000010H

; 3658 : 		}

	jmp	$LN6@Killed
$LN5@Killed:

; 3659 : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$3[ebp], 0
	jmp	SHORT $LN4@Killed
$LN3@Killed:
	mov	eax, DWORD PTR _x$3[ebp]
	add	eax, 1
	mov	DWORD PTR _x$3[ebp], eax
$LN4@Killed:
	cmp	DWORD PTR _x$3[ebp], 8
	jge	SHORT $LN2@Killed

; 3660 : 		{
; 3661 : 			GameObject *Player = Commands->Find_Object(MiniGamePlayerControlSystem[x].GamePlayerID);

	mov	eax, DWORD PTR _x$3[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Player$2[ebp], eax

; 3662 : 			if (!Player)

	cmp	DWORD PTR _Player$2[ebp], 0
	jne	SHORT $LN1@Killed

; 3663 : 				continue;

	jmp	SHORT $LN3@Killed
$LN1@Killed:

; 3664 : 			JmgUtility::DisplayChatMessage(Player,160,127,50,"Galactic Cargo Ship: Structural integrity failing, everyone abandon ship!");

	push	OFFSET ??_C@_0EK@LOOFKGAH@Galactic?5Cargo?5Ship?3?5Structural?5@
	push	50					; 00000032H
	push	127					; 0000007fH
	push	160					; 000000a0H
	mov	eax, DWORD PTR _Player$2[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 3665 : 		}

	jmp	SHORT $LN3@Killed
$LN2@Killed:

; 3666 : 	}
; 3667 : 	RenCometBustersList.GrantScoreToKiller(damager,0.0,CargoShip);

	push	0
	push	10					; 0000000aH
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?GrantScoreToKiller@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MW4ObjectType@@H@Z ; RenCometBustersGameObjects::GrantScoreToKiller

; 3668 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_CMTB_Cargo_Ship_Script::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Damaged@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
tv145 = -100						; size = 4
_SPOT$1 = -32						; size = 4
_x$2 = -28						; size = 4
_SPOT$3 = -24						; size = 4
_y$4 = -20						; size = 4
_Player$5 = -16						; size = 4
_x$6 = -12						; size = 4
_presetId$7 = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_damage$ = 16						; size = 4
?Damaged@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@0M@Z PROC ; JMG_CMTB_Cargo_Ship_Script::Damaged, COMDAT
; _this$ = ecx

; 3590 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 100				; 00000064H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3591 : 	if (damage && damager && Commands->Get_Player_Type(obj) != Commands->Get_Player_Type(damager))

	movss	xmm0, DWORD PTR _damage$[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	$LN2@Damaged
	cmp	DWORD PTR _damager$[ebp], 0
	je	$LN2@Damaged
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	cmp	esi, eax
	je	$LN2@Damaged

; 3592 : 	{
; 3593 : 		int presetId = Commands->Get_Preset_ID(damager);

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+112]
	call	edx
	add	esp, 4
	mov	DWORD PTR _presetId$7[ebp], eax

; 3594 : 		if (presetId == 1000000074 || presetId == 1000000077)

	cmp	DWORD PTR _presetId$7[ebp], 1000000074	; 3b9aca4aH
	je	SHORT $LN27@Damaged
	cmp	DWORD PTR _presetId$7[ebp], 1000000077	; 3b9aca4dH
	jne	SHORT $LN28@Damaged
$LN27@Damaged:

; 3595 : 			return;

	jmp	$LN30@Damaged
$LN28@Damaged:

; 3596 : 		if (Commands->Is_A_Star(damager))

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	$LN23@Damaged

; 3597 : 			for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$6[ebp], 0
	jmp	SHORT $LN25@Damaged
$LN24@Damaged:
	mov	eax, DWORD PTR _x$6[ebp]
	add	eax, 1
	mov	DWORD PTR _x$6[ebp], eax
$LN25@Damaged:
	cmp	DWORD PTR _x$6[ebp], 8
	jge	$LN23@Damaged

; 3598 : 			{
; 3599 : 				GameObject *Player = Commands->Find_Object(MiniGamePlayerControlSystem[x].GamePlayerID);

	mov	eax, DWORD PTR _x$6[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Player$5[ebp], eax

; 3600 : 				if (Player == damager)

	mov	eax, DWORD PTR _Player$5[ebp]
	cmp	eax, DWORD PTR _damager$[ebp]
	jne	$LN22@Damaged

; 3601 : 				{
; 3602 : 					MiniGamePlayerControlSystem[x].CargoWarnDecreaseDelay = 10;

	mov	eax, DWORD PTR _x$6[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+392], 10 ; 0000000aH

; 3603 : 					if (!MiniGamePlayerControlSystem[x].CargoWarnedCount)

	mov	eax, DWORD PTR _x$6[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+384], 0
	jne	$LN21@Damaged

; 3604 : 					{
; 3605 : 						Create_2D_Sound_Player(damager,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 3606 : 						if (MiniGamePlayerControlSystem[x].CargoWarnedCount > 5)

	mov	eax, DWORD PTR _x$6[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+384], 5
	jle	SHORT $LN20@Damaged

; 3607 : 							JmgUtility::DisplayChatMessage(damager,160,127,50,"Galactic Cargo Ship: You were warned, open fire men!");

	push	OFFSET ??_C@_0DF@FJDAIFEN@Galactic?5Cargo?5Ship?3?5You?5were?5wa@
	push	50					; 00000032H
	push	127					; 0000007fH
	push	160					; 000000a0H
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 3608 : 						else

	jmp	$LN17@Damaged
$LN20@Damaged:

; 3609 : 							switch (MiniGamePlayerControlSystem[x].CargoTotalWarnedCount)

	mov	eax, DWORD PTR _x$6[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+388]
	mov	DWORD PTR tv145[ebp], ecx
	cmp	DWORD PTR tv145[ebp], 3
	ja	SHORT $LN17@Damaged
	mov	edx, DWORD PTR tv145[ebp]
	jmp	DWORD PTR $LN32@Damaged[edx*4]
$LN16@Damaged:

; 3610 : 							{
; 3611 : 							case 0:
; 3612 : 								JmgUtility::DisplayChatMessage(damager,160,127,50,"Galactic Cargo Ship: Friendly fire! Repeat friendly fire! Please check your targets!");break;

	push	OFFSET ??_C@_0FF@FPBOBBNK@Galactic?5Cargo?5Ship?3?5Friendly?5fi@
	push	50					; 00000032H
	push	127					; 0000007fH
	push	160					; 000000a0H
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	SHORT $LN17@Damaged
$LN15@Damaged:

; 3613 : 							case 1:
; 3614 : 								JmgUtility::DisplayChatMessage(damager,160,127,50,"Galactic Cargo Ship: Stop firing immanently! We are not your enemies here!");break;

	push	OFFSET ??_C@_0EL@LBNHOGIK@Galactic?5Cargo?5Ship?3?5Stop?5firing@
	push	50					; 00000032H
	push	127					; 0000007fH
	push	160					; 000000a0H
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	SHORT $LN17@Damaged
$LN14@Damaged:

; 3615 : 							case 2:
; 3616 : 								JmgUtility::DisplayChatMessage(damager,160,127,50,"Galactic Cargo Ship: Final warning, stop firing or we will return fire!");break;

	push	OFFSET ??_C@_0EI@DOBEHKBJ@Galactic?5Cargo?5Ship?3?5Final?5warni@
	push	50					; 00000032H
	push	127					; 0000007fH
	push	160					; 000000a0H
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	SHORT $LN17@Damaged
$LN13@Damaged:

; 3617 : 							case 3:
; 3618 : 								JmgUtility::DisplayChatMessage(damager,160,127,50,"Galactic Cargo Ship: You were warned, open fire men!");break;

	push	OFFSET ??_C@_0DF@FJDAIFEN@Galactic?5Cargo?5Ship?3?5You?5were?5wa@
	push	50					; 00000032H
	push	127					; 0000007fH
	push	160					; 000000a0H
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN17@Damaged:

; 3619 : 							}

	jmp	SHORT $LN11@Damaged
$LN21@Damaged:

; 3620 : 					}
; 3621 : 					else if (MiniGamePlayerControlSystem[x].CargoWarnedCount == 4)

	mov	eax, DWORD PTR _x$6[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+384], 4
	jne	SHORT $LN11@Damaged

; 3622 : 					{
; 3623 : 						Create_2D_Sound_Player(damager,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 3624 : 						JmgUtility::DisplayChatMessage(damager,160,127,50,"Galactic Cargo Ship: You were warned, open fire men!");

	push	OFFSET ??_C@_0DF@FJDAIFEN@Galactic?5Cargo?5Ship?3?5You?5were?5wa@
	push	50					; 00000032H
	push	127					; 0000007fH
	push	160					; 000000a0H
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 3625 : 						MiniGamePlayerControlSystem[x].CargoTotalWarnedCount++;

	mov	eax, DWORD PTR _x$6[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+388]
	add	ecx, 1
	mov	edx, DWORD PTR _x$6[ebp]
	imul	edx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+388], ecx
$LN11@Damaged:

; 3626 : 					}
; 3627 : 					MiniGamePlayerControlSystem[x].CargoWarnedCount++;

	mov	eax, DWORD PTR _x$6[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+384]
	add	ecx, 1
	mov	edx, DWORD PTR _x$6[ebp]
	imul	edx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+384], ecx

; 3628 : 					if (MiniGamePlayerControlSystem[x].CargoWarnedCount > 5 || MiniGamePlayerControlSystem[x].CargoTotalWarnedCount > 2)

	mov	eax, DWORD PTR _x$6[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+384], 5
	jg	SHORT $LN9@Damaged
	mov	eax, DWORD PTR _x$6[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+388], 2
	jle	SHORT $LN6@Damaged
$LN9@Damaged:

; 3629 : 						for (int y = 0;y < 6;y++)

	mov	DWORD PTR _y$4[ebp], 0
	jmp	SHORT $LN8@Damaged
$LN7@Damaged:
	mov	eax, DWORD PTR _y$4[ebp]
	add	eax, 1
	mov	DWORD PTR _y$4[ebp], eax
$LN8@Damaged:
	cmp	DWORD PTR _y$4[ebp], 6
	jge	SHORT $LN6@Damaged

; 3630 : 						{
; 3631 : 							GameObject *SPOT = Commands->Find_Object(Turrets[y]);

	mov	eax, DWORD PTR _y$4[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+60]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	mov	DWORD PTR _SPOT$3[ebp], eax

; 3632 : 							if (SPOT)

	cmp	DWORD PTR _SPOT$3[ebp], 0
	je	SHORT $LN5@Damaged

; 3633 : 								Commands->Send_Custom_Event(damager,SPOT,95959500,0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	95959500				; 05b839ccH
	mov	eax, DWORD PTR _SPOT$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _damager$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN5@Damaged:

; 3634 : 						}

	jmp	SHORT $LN7@Damaged
$LN6@Damaged:

; 3635 : 					return;

	jmp	SHORT $LN30@Damaged
$LN22@Damaged:

; 3636 : 				}
; 3637 : 			}

	jmp	$LN24@Damaged
$LN23@Damaged:

; 3638 : 		for (int x = 0;x < 6;x++)

	mov	DWORD PTR _x$2[ebp], 0
	jmp	SHORT $LN4@Damaged
$LN3@Damaged:
	mov	eax, DWORD PTR _x$2[ebp]
	add	eax, 1
	mov	DWORD PTR _x$2[ebp], eax
$LN4@Damaged:
	cmp	DWORD PTR _x$2[ebp], 6
	jge	SHORT $LN2@Damaged

; 3639 : 		{
; 3640 : 			GameObject *SPOT = Commands->Find_Object(Turrets[x]);

	mov	eax, DWORD PTR _x$2[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+60]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	mov	DWORD PTR _SPOT$1[ebp], eax

; 3641 : 			if (SPOT)

	cmp	DWORD PTR _SPOT$1[ebp], 0
	je	SHORT $LN1@Damaged

; 3642 : 				Commands->Send_Custom_Event(damager,SPOT,95959500,0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	95959500				; 05b839ccH
	mov	eax, DWORD PTR _SPOT$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _damager$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN1@Damaged:

; 3643 : 		}

	jmp	SHORT $LN3@Damaged
$LN2@Damaged:
$LN30@Damaged:

; 3644 : 	}
; 3645 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN32@Damaged:
	DD	$LN16@Damaged
	DD	$LN15@Damaged
	DD	$LN14@Damaged
	DD	$LN13@Damaged
?Damaged@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@0M@Z ENDP ; JMG_CMTB_Cargo_Ship_Script::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_CMTB_Cargo_Ship_Script::Timer_Expired, COMDAT
; _this$ = ecx

; 3583 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3584 : 	if (number == 5437)

	cmp	DWORD PTR _number$[ebp], 5437		; 0000153dH
	jne	SHORT $LN2@Timer_Expi

; 3585 : 	{
; 3586 : 		Commands->Destroy_Object(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN2@Timer_Expi:

; 3587 : 	}
; 3588 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_CMTB_Cargo_Ship_Script::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
$T1 = -348						; size = 16
$T2 = -332						; size = 12
$T3 = -320						; size = 16
$T4 = -304						; size = 12
$T5 = -292						; size = 16
$T6 = -276						; size = 12
$T7 = -264						; size = 16
$T8 = -248						; size = 12
$T9 = -236						; size = 16
$T10 = -220						; size = 12
$T11 = -208						; size = 16
$T12 = -192						; size = 12
$T13 = -180						; size = 16
$T14 = -164						; size = 12
$T15 = -152						; size = 16
$T16 = -136						; size = 12
$T17 = -124						; size = 12
_TurretPosName$18 = -48					; size = 32
_x$19 = -16						; size = 4
_AAnimation$ = -12					; size = 4
_SPOT$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Cargo_Ship_Script::Created, COMDAT
; _this$ = ecx

; 3512 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 348				; 0000015cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3513 : 	Commands->Enable_Engine(obj,true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+552]
	call	edx
	add	esp, 8

; 3514 : 	RenCometBustersList += TypeObject(obj,0.0,0.0f,CargoShip);

	push	10					; 0000000aH
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 3515 : 	GameObject *SPOT = Commands->Create_Object("Daves Arrow",Vector3(0.0f,0.0f,0.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+100]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _SPOT$[ebp], eax

; 3516 : 	Commands->Set_Model(SPOT,"w_invs");

	push	OFFSET ??_C@_06KNDBNPNN@w_invs?$AA@
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3517 : 	RenCometBustersList += TypeObject(SPOT,2.25f,1.5f,CargoShip);

	push	10					; 0000000aH
	push	ecx
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40100000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 3518 : 	Commands->Attach_To_Object_Bone(SPOT,obj,"Colliders003");

	push	OFFSET ??_C@_0N@JOEDODEI@Colliders003?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SPOT$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 3519 : 	Commands->Disable_Physical_Collisions(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+84]
	call	edx
	add	esp, 4

; 3520 : 	ShipCollideID[0] = Commands->Get_ID(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+28], eax

; 3521 : 	SPOT = Commands->Create_Object("Daves Arrow",Vector3(0.0f,0.0f,0.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+100]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _SPOT$[ebp], eax

; 3522 : 	Commands->Set_Model(SPOT,"w_invs");

	push	OFFSET ??_C@_06KNDBNPNN@w_invs?$AA@
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3523 : 	RenCometBustersList += TypeObject(SPOT,2.25f,1.5f,CargoShip);

	push	10					; 0000000aH
	push	ecx
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40100000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 3524 : 	Commands->Attach_To_Object_Bone(SPOT,obj,"Colliders004");

	push	OFFSET ??_C@_0N@NBACHFIP@Colliders004?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SPOT$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 3525 : 	Commands->Disable_Physical_Collisions(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+84]
	call	edx
	add	esp, 4

; 3526 : 	ShipCollideID[1] = Commands->Get_ID(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+28], eax

; 3527 : 	SPOT = Commands->Create_Object("Daves Arrow",Vector3(0.0f,0.0f,0.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T6[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+100]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _SPOT$[ebp], eax

; 3528 : 	Commands->Set_Model(SPOT,"w_invs");

	push	OFFSET ??_C@_06KNDBNPNN@w_invs?$AA@
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3529 : 	RenCometBustersList += TypeObject(SPOT,2.25f,1.5f,CargoShip);

	push	10					; 0000000aH
	push	ecx
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40100000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T7[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 3530 : 	Commands->Attach_To_Object_Bone(SPOT,obj,"Colliders005");

	push	OFFSET ??_C@_0N@MIBJEEMO@Colliders005?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SPOT$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 3531 : 	Commands->Disable_Physical_Collisions(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+84]
	call	edx
	add	esp, 4

; 3532 : 	ShipCollideID[2] = Commands->Get_ID(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+28], eax

; 3533 : 	SPOT = Commands->Create_Object("Daves Arrow",Vector3(0.0f,0.0f,0.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T8[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+100]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _SPOT$[ebp], eax

; 3534 : 	Commands->Set_Model(SPOT,"w_invs");

	push	OFFSET ??_C@_06KNDBNPNN@w_invs?$AA@
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3535 : 	RenCometBustersList += TypeObject(SPOT,20.25f,4.5f,CargoShip);

	push	10					; 0000000aH
	push	ecx
	movss	xmm0, DWORD PTR __real@40900000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@41a20000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T9[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 3536 : 	Commands->Attach_To_Object_Bone(SPOT,obj,"Colliders001");

	push	OFFSET ??_C@_0N@KMHFIBMK@Colliders001?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SPOT$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 3537 : 	Commands->Disable_Physical_Collisions(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+84]
	call	edx
	add	esp, 4

; 3538 : 	ShipCollideID[3] = Commands->Get_ID(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, 4
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+28], eax

; 3539 : 	SPOT = Commands->Create_Object("Daves Arrow",Vector3(0.0f,0.0f,0.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T10[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+100]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _SPOT$[ebp], eax

; 3540 : 	Commands->Set_Model(SPOT,"w_invs");

	push	OFFSET ??_C@_06KNDBNPNN@w_invs?$AA@
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3541 : 	RenCometBustersList += TypeObject(SPOT,20.25f,4.5f,CargoShip);

	push	10					; 0000000aH
	push	ecx
	movss	xmm0, DWORD PTR __real@40900000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@41a20000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T11[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 3542 : 	Commands->Attach_To_Object_Bone(SPOT,obj,"Colliders000");

	push	OFFSET ??_C@_0N@LFGOLAIL@Colliders000?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SPOT$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 3543 : 	Commands->Disable_Physical_Collisions(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+84]
	call	edx
	add	esp, 4

; 3544 : 	ShipCollideID[4] = Commands->Get_ID(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, 4
	shl	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+28], eax

; 3545 : 	SPOT = Commands->Create_Object("Daves Arrow",Vector3(0.0f,0.0f,0.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T12[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+100]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _SPOT$[ebp], eax

; 3546 : 	Commands->Set_Model(SPOT,"w_invs");

	push	OFFSET ??_C@_06KNDBNPNN@w_invs?$AA@
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3547 : 	RenCometBustersList += TypeObject(SPOT,20.25f,4.5f,CargoShip);

	push	10					; 0000000aH
	push	ecx
	movss	xmm0, DWORD PTR __real@40900000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@41a20000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T13[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 3548 : 	Commands->Attach_To_Object_Bone(SPOT,obj,"Colliders002");

	push	OFFSET ??_C@_0N@IHFINCAJ@Colliders002?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SPOT$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 3549 : 	Commands->Disable_Physical_Collisions(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+84]
	call	edx
	add	esp, 4

; 3550 : 	ShipCollideID[5] = Commands->Get_ID(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, 4
	imul	ecx, 5
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+28], eax

; 3551 : 	SPOT = Commands->Create_Object("Daves Arrow",Vector3(0.0f,0.0f,0.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T14[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+100]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _SPOT$[ebp], eax

; 3552 : 	Commands->Set_Model(SPOT,"w_invs");

	push	OFFSET ??_C@_06KNDBNPNN@w_invs?$AA@
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3553 : 	RenCometBustersList += TypeObject(SPOT,2.25f,1.5f,CargoShip);

	push	10					; 0000000aH
	push	ecx
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40100000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T15[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 3554 : 	Commands->Attach_To_Object_Bone(SPOT,obj,"Colliders006");

	push	OFFSET ??_C@_0N@ODDEBHAN@Colliders006?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SPOT$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 3555 : 	Commands->Disable_Physical_Collisions(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+84]
	call	edx
	add	esp, 4

; 3556 : 	ShipCollideID[6] = Commands->Get_ID(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, 4
	imul	ecx, 6
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+28], eax

; 3557 : 	
; 3558 : 	GameObject *AAnimation = Commands->Create_Object("Daves Arrow",Commands->Get_Position(obj));//0.431f

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T16[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _AAnimation$[ebp], eax

; 3559 : 	Commands->Set_Facing(AAnimation,Commands->Get_Random(-180.0f,180.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@43340000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c3340000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 4
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _AAnimation$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+76]
	call	ecx
	add	esp, 8

; 3560 : 	Commands->Set_Model(AAnimation,"CMTBCShipAnim");

	push	OFFSET ??_C@_0O@FJALAOPP@CMTBCShipAnim?$AA@
	mov	eax, DWORD PTR _AAnimation$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3561 : 	Commands->Set_Animation(AAnimation,"CMTBCShipAnim.CMTBCShipAnim",false,0,0.0f,8999.0f,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@460c9c00
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BM@KFPGANGC@CMTBCShipAnim?4CMTBCShipAnim?$AA@
	mov	eax, DWORD PTR _AAnimation$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3562 : 	AnimationControllerID = Commands->Get_ID(AAnimation);

	mov	eax, DWORD PTR _AAnimation$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], eax

; 3563 : 	Commands->Attach_To_Object_Bone(obj,AAnimation,"Origin");

	push	OFFSET ??_C@_06BIJBOFNL@Origin?$AA@
	mov	eax, DWORD PTR _AAnimation$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 3564 : 	Commands->Disable_Physical_Collisions(AAnimation);

	mov	eax, DWORD PTR _AAnimation$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+84]
	call	edx
	add	esp, 4

; 3565 : 
; 3566 : 	if (Get_Int_Parameter("PlayerNumber") != -1)

	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	eax, -1
	je	SHORT $LN5@Created

; 3567 : 		MiniGamePlayerControlSystem[Get_Int_Parameter("PlayerNumber")].CargoShipIDs[6] = Commands->Get_ID(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	esi, eax
	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	mov	ecx, 4
	imul	ecx, 6
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+ecx+400], esi
$LN5@Created:

; 3568 : 	for (int x = 0;x < 6;x++)

	mov	DWORD PTR _x$19[ebp], 0
	jmp	SHORT $LN4@Created
$LN3@Created:
	mov	eax, DWORD PTR _x$19[ebp]
	add	eax, 1
	mov	DWORD PTR _x$19[ebp], eax
$LN4@Created:
	cmp	DWORD PTR _x$19[ebp], 6
	jge	$LN2@Created

; 3569 : 	{
; 3570 : 		char TurretPosName[32];
; 3571 : 		sprintf(TurretPosName,"TrtSpots%03d",x);

	mov	eax, DWORD PTR _x$19[ebp]
	push	eax
	push	OFFSET ??_C@_0N@FPFOLAOB@TrtSpots?$CF03d?$AA@
	lea	ecx, DWORD PTR _TurretPosName$18[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 3572 : 		SPOT = Commands->Create_Object("CMTB_Cargo_Ship_Turret",Vector3(0.0f,0.0f,0.0f));Commands->Attach_Script(SPOT,"JMG_CMTB_Cargo_Ship_Turret","");

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T17[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	push	OFFSET ??_C@_0BH@GDFCDMOF@CMTB_Cargo_Ship_Turret?$AA@
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+100]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _SPOT$[ebp], eax
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BL@CFBEJCMJ@JMG_CMTB_Cargo_Ship_Turret?$AA@
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3573 : 		Commands->Attach_To_Object_Bone(SPOT,AAnimation,TurretPosName);

	lea	eax, DWORD PTR _TurretPosName$18[ebp]
	push	eax
	mov	ecx, DWORD PTR _AAnimation$[ebp]
	push	ecx
	mov	edx, DWORD PTR _SPOT$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+572]
	call	ecx
	add	esp, 12					; 0000000cH

; 3574 : 		Commands->Disable_Physical_Collisions(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+84]
	call	edx
	add	esp, 4

; 3575 : 		Turrets[x] = Commands->Get_ID(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _x$19[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4+60], eax

; 3576 : 		if (Get_Int_Parameter("PlayerNumber") != -1)

	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	eax, -1
	je	SHORT $LN1@Created

; 3577 : 			MiniGamePlayerControlSystem[Get_Int_Parameter("PlayerNumber")].CargoShipIDs[x] = Commands->Get_ID(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	esi, eax
	push	OFFSET ??_C@_0N@FLJNBGLE@PlayerNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR _x$19[ebp]
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+ecx*4+400], esi
$LN1@Created:

; 3578 : 	}

	jmp	$LN3@Created
$LN2@Created:

; 3579 : 	Commands->Disable_Physical_Collisions(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+84]
	call	edx
	add	esp, 4

; 3580 : 	Commands->Start_Timer(obj,this,300.0f,5437);

	push	5437					; 0000153dH
	push	ecx
	movss	xmm0, DWORD PTR __real@43960000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 3581 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_CMTB_Cargo_Ship_Script@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Cargo_Ship_Script::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_Powerup_Script@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_Powerup_Script@@UAEPAXI@Z PROC		; JMG_CMTB_Powerup_Script::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_Powerup_Script@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_Powerup_Script@@UAEPAXI@Z ENDP		; JMG_CMTB_Powerup_Script::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_Powerup_Script@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_Powerup_Script@@UAE@XZ PROC			; JMG_CMTB_Powerup_Script::~JMG_CMTB_Powerup_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_Powerup_Script@@UAE@XZ ENDP			; JMG_CMTB_Powerup_Script::~JMG_CMTB_Powerup_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_Powerup_Script@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_Powerup_Script@@QAE@XZ PROC			; JMG_CMTB_Powerup_Script::JMG_CMTB_Powerup_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_Powerup_Script@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_Powerup_Script@@QAE@XZ ENDP			; JMG_CMTB_Powerup_Script::JMG_CMTB_Powerup_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Destroyed@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Powerup_Script::Destroyed, COMDAT
; _this$ = ecx

; 3508 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3509 : 	RenCometBustersList -= obj;

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??ZRenCometBustersGameObjects@@QAEAAV0@PAVScriptableGameObj@@@Z ; RenCometBustersGameObjects::operator-=

; 3510 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Destroyed@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Powerup_Script::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Killed@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
?Killed@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_CMTB_Powerup_Script::Killed, COMDAT
; _this$ = ecx

; 3504 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3505 : 	Commands->Send_Custom_Event(obj,damager,CMTBPowerUpCustomMessage+Get_Int_Parameter("Custom"),TimeRemaining,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	push	OFFSET ??_C@_06IFGIOHDE@Custom?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	add	eax, 90335490				; 05626902H
	push	eax
	mov	edx, DWORD PTR _damager$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+140]
	call	edx
	add	esp, 20					; 00000014H

; 3506 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_CMTB_Powerup_Script::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_CMTB_Powerup_Script::Timer_Expired, COMDAT
; _this$ = ecx

; 3494 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3495 : 	if (number == 92562143)

	cmp	DWORD PTR _number$[ebp], 92562143	; 058462dfH
	jne	SHORT $LN2@Timer_Expi

; 3496 : 	{
; 3497 : 		TimeRemaining++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], ecx

; 3498 : 		if (TimeRemaining >= 30)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 30			; 0000001eH
	jl	SHORT $LN1@Timer_Expi

; 3499 : 			Commands->Destroy_Object(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN1@Timer_Expi:

; 3500 : 		Commands->Start_Timer(obj,this,1.0f,92562143);

	push	92562143				; 058462dfH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN2@Timer_Expi:

; 3501 : 	}
; 3502 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_CMTB_Powerup_Script::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
tv71 = -88						; size = 4
$T1 = -84						; size = 16
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Powerup_Script::Created, COMDAT
; _this$ = ecx

; 3417 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3418 : 	switch (Get_Int_Parameter("Custom"))

	push	OFFSET ??_C@_06IFGIOHDE@Custom?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR tv71[ebp], eax
	cmp	DWORD PTR tv71[ebp], 16			; 00000010H
	ja	$LN18@Created
	mov	eax, DWORD PTR tv71[ebp]
	jmp	DWORD PTR $LN22@Created[eax*4]
$LN17@Created:

; 3419 : 	{
; 3420 : 	case 0:
; 3421 : 		Commands->Set_Model(obj,"p_Energy_0");

	push	OFFSET ??_C@_0L@GJMGOBFJ@p_Energy_0?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3422 : 		Commands->Set_Animation(obj,"p_Energy_0.p_Energy_0",false,0,Get_Int_Parameter("LifeTime")*30.0f,1899.0f,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@44ed6000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@41f00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BG@NDBEODBA@p_Energy_0?4p_Energy_0?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3423 : 		break;

	jmp	$LN18@Created
$LN16@Created:

; 3424 : 	case 1:
; 3425 : 		Commands->Set_Model(obj,"p_Energy_1");

	push	OFFSET ??_C@_0L@HANNNABI@p_Energy_1?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3426 : 		Commands->Set_Animation(obj,"p_Energy_1.p_Energy_1",false,0,Get_Int_Parameter("LifeTime")*30.0f,1899.0f,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@44ed6000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@41f00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BG@BHJJALNE@p_Energy_1?4p_Energy_1?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3427 : 		break;

	jmp	$LN18@Created
$LN15@Created:

; 3428 : 	case 2:
; 3429 : 		Commands->Set_Model(obj,"p_Energy_2");

	push	OFFSET ??_C@_0L@FLPAIDNL@p_Energy_2?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3430 : 		Commands->Set_Animation(obj,"p_Energy_2.p_Energy_2",false,0,Get_Int_Parameter("LifeTime")*30.0f,1899.0f,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@44ed6000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@41f00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BG@IBHODENJ@p_Energy_2?4p_Energy_2?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3431 : 		break;

	jmp	$LN18@Created
$LN14@Created:

; 3432 : 	case 3:
; 3433 : 		Commands->Set_Model(obj,"p_SOSBeacon");

	push	OFFSET ??_C@_0M@HNBOKCKD@p_SOSBeacon?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3434 : 		Commands->Set_Animation(obj,"p_SOSBeacon.p_SOSBeacon",false,0,Get_Int_Parameter("LifeTime")*30.0f,1899.0f,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@44ed6000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@41f00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BI@COFOCMMO@p_SOSBeacon?4p_SOSBeacon?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3435 : 		break;

	jmp	$LN18@Created
$LN13@Created:

; 3436 : 	case 4:
; 3437 : 		Commands->Set_Model(obj,"p_sw_HEW");

	push	OFFSET ??_C@_08MJLMJCFB@p_sw_HEW?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3438 : 		Commands->Set_Animation(obj,"p_sw_HEW.p_sw_HEW",false,0,Get_Int_Parameter("LifeTime")*30.0f,1899.0f,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@44ed6000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@41f00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BC@FIGAMGHC@p_sw_HEW?4p_sw_HEW?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3439 : 		break;

	jmp	$LN18@Created
$LN12@Created:

; 3440 : 	case 5:
; 3441 : 		Commands->Set_Model(obj,"p_ExtraShip");

	push	OFFSET ??_C@_0M@BJDFNJG@p_ExtraShip?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3442 : 		Commands->Set_Animation(obj,"p_ExtraShip.p_ExtraShip",false,0,Get_Int_Parameter("LifeTime")*30.0f,1899.0f,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@44ed6000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@41f00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BI@MBAOLDDF@p_ExtraShip?4p_ExtraShip?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3443 : 		break;

	jmp	$LN18@Created
$LN11@Created:

; 3444 : 	case 6:
; 3445 : 		Commands->Set_Model(obj,"p_Points_0");

	push	OFFSET ??_C@_0L@LIHCEDFL@p_Points_0?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3446 : 		Commands->Set_Animation(obj,"p_Points_0.p_Points_0",false,0,Get_Int_Parameter("LifeTime")*30.0f,1899.0f,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@44ed6000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@41f00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BG@CIFOMFCM@p_Points_0?4p_Points_0?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3447 : 		break;

	jmp	$LN18@Created
$LN10@Created:

; 3448 : 	case 7:
; 3449 : 		Commands->Set_Model(obj,"p_Points_1");

	push	OFFSET ??_C@_0L@KBGJHCBK@p_Points_1?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3450 : 		Commands->Set_Animation(obj,"p_Points_1.p_Points_1",false,0,Get_Int_Parameter("LifeTime")*30.0f,1899.0f,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@44ed6000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@41f00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BG@OMNDCNOI@p_Points_1?4p_Points_1?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3451 : 		break;

	jmp	$LN18@Created
$LN9@Created:

; 3452 : 	case 8:
; 3453 : 		Commands->Set_Model(obj,"p_Points_2");

	push	OFFSET ??_C@_0L@IKEECBNJ@p_Points_2?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3454 : 		Commands->Set_Animation(obj,"p_Points_2.p_Points_2",false,0,Get_Int_Parameter("LifeTime")*30.0f,1899.0f,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@44ed6000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@41f00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BG@HKDEBCOF@p_Points_2?4p_Points_2?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3455 : 		break;

	jmp	$LN18@Created
$LN8@Created:

; 3456 : 	case 9:
; 3457 : 		Commands->Set_Model(obj,"p_Points_3");

	push	OFFSET ??_C@_0L@JDFPBAJI@p_Points_3?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3458 : 		Commands->Set_Animation(obj,"p_Points_3.p_Points_3",false,0,Get_Int_Parameter("LifeTime")*30.0f,1899.0f,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@44ed6000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@41f00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BG@LOLJPKCB@p_Points_3?4p_Points_3?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3459 : 		break;

	jmp	$LN18@Created
$LN7@Created:

; 3460 : 	case 10:
; 3461 : 		Commands->Set_Model(obj,"p_Drone");

	push	OFFSET ??_C@_07MNENENBA@p_Drone?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3462 : 		Commands->Set_Animation(obj,"p_Drone.p_Drone",false,0,Get_Int_Parameter("LifeTime")*30.0f,1899.0f,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@44ed6000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@41f00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BA@OGIHCEPN@p_Drone?4p_Drone?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3463 : 		break;

	jmp	$LN18@Created
$LN6@Created:

; 3464 : 	case 11:
; 3465 : 		Commands->Set_Model(obj,"p_Points_4");

	push	OFFSET ??_C@_0L@NMBOIGFP@p_Points_4?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3466 : 		Commands->Set_Animation(obj,"p_Points_4.p_Points_4",false,0,Get_Int_Parameter("LifeTime")*30.0f,1899.0f,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@44ed6000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@41f00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BG@IMILGKLO@p_Points_4?4p_Points_4?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3467 : 		break;

	jmp	$LN18@Created
$LN5@Created:

; 3468 : 	case 12:
; 3469 : 		Commands->Set_Model(obj,"p_Energy_Regen");

	push	OFFSET ??_C@_0P@LAJGIFLP@p_Energy_Regen?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3470 : 		Commands->Set_Animation(obj,"p_Energy_Regen.p_Energy_Regen",false,0,Get_Int_Parameter("LifeTime")*30.0f,1899.0f,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@44ed6000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@41f00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BO@LOBJOCPN@p_Energy_Regen?4p_Energy_Regen?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3471 : 		break;

	jmp	$LN18@Created
$LN4@Created:

; 3472 : 	case 13:
; 3473 : 		Commands->Set_Model(obj,"P_DoublePoints");

	push	OFFSET ??_C@_0P@EKKFLCBL@P_DoublePoints?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3474 : 		Commands->Set_Animation(obj,"P_DoublePoints.P_DoublePoints",false,0,Get_Int_Parameter("LifeTime")*30.0f,1899.0f,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@44ed6000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@41f00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BO@NCAGBHPP@P_DoublePoints?4P_DoublePoints?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3475 : 		break;

	jmp	$LN18@Created
$LN3@Created:

; 3476 : 	case 14:
; 3477 : 		Commands->Set_Model(obj,"P_Deer");

	push	OFFSET ??_C@_06EOAAJIBD@P_Deer?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3478 : 		Commands->Set_Animation(obj,"P_Deer.P_Deer",false,0,Get_Int_Parameter("LifeTime")*30.0f,1899.0f,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@44ed6000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@41f00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0O@BMKHPFIF@P_Deer?4P_Deer?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3479 : 		break;

	jmp	$LN18@Created
$LN2@Created:

; 3480 : 	case 15:
; 3481 : 		Commands->Set_Model(obj,"p_Swarm");

	push	OFFSET ??_C@_07CGEEFHGM@p_Swarm?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3482 : 		Commands->Set_Animation(obj,"p_Swarm.p_Swarm",false,0,Get_Int_Parameter("LifeTime")*30.0f,1899.0f,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@44ed6000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@41f00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BA@ENNENONI@p_Swarm?4p_Swarm?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3483 : 		break;

	jmp	SHORT $LN18@Created
$LN1@Created:

; 3484 : 	case 16:
; 3485 : 		Commands->Set_Model(obj,"p_weapUpgrade");

	push	OFFSET ??_C@_0O@OGIFOEBP@p_weapUpgrade?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3486 : 		Commands->Set_Animation(obj,"p_weapUpgrade.p_weapUpgrade",false,0,Get_Int_Parameter("LifeTime")*30.0f,1899.0f,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@44ed6000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@41f00000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BM@MEJFCIJN@p_weapUpgrade?4p_weapUpgrade?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH
$LN18@Created:

; 3487 : 		break;
; 3488 : 	}
; 3489 : 	RenCometBustersList += TypeObject(obj,2.25,1.5f,CMTPowerup);

	push	9
	push	ecx
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40100000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 3490 : 	TimeRemaining = Get_Int_Parameter("LifeTime");

	push	OFFSET ??_C@_08INJDFBPH@LifeTime?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax

; 3491 : 	Commands->Start_Timer(obj,this,1.0f,92562143);

	push	92562143				; 058462dfH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 3492 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN22@Created:
	DD	$LN17@Created
	DD	$LN16@Created
	DD	$LN15@Created
	DD	$LN14@Created
	DD	$LN13@Created
	DD	$LN12@Created
	DD	$LN11@Created
	DD	$LN10@Created
	DD	$LN9@Created
	DD	$LN8@Created
	DD	$LN7@Created
	DD	$LN6@Created
	DD	$LN5@Created
	DD	$LN4@Created
	DD	$LN3@Created
	DD	$LN2@Created
	DD	$LN1@Created
?Created@JMG_CMTB_Powerup_Script@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Powerup_Script::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_Ship_Super_Weapon@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_Ship_Super_Weapon@@UAEPAXI@Z PROC		; JMG_CMTB_Ship_Super_Weapon::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_Ship_Super_Weapon@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_Ship_Super_Weapon@@UAEPAXI@Z ENDP		; JMG_CMTB_Ship_Super_Weapon::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_Ship_Super_Weapon@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_Ship_Super_Weapon@@UAE@XZ PROC		; JMG_CMTB_Ship_Super_Weapon::~JMG_CMTB_Ship_Super_Weapon, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_Ship_Super_Weapon@@UAE@XZ ENDP		; JMG_CMTB_Ship_Super_Weapon::~JMG_CMTB_Ship_Super_Weapon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_Ship_Super_Weapon@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_Ship_Super_Weapon@@QAE@XZ PROC		; JMG_CMTB_Ship_Super_Weapon::JMG_CMTB_Ship_Super_Weapon, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_Ship_Super_Weapon@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_Ship_Super_Weapon@@QAE@XZ ENDP		; JMG_CMTB_Ship_Super_Weapon::JMG_CMTB_Ship_Super_Weapon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_CMTB_Ship_Super_Weapon@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
tv282 = -140						; size = 4
$T1 = -136						; size = 12
$T2 = -124						; size = 12
$T3 = -112						; size = 12
$T4 = -100						; size = 12
_NewDistance$5 = -24					; size = 4
_Ship$6 = -20						; size = 4
_Drone$7 = -16						; size = 4
_y$8 = -12						; size = 4
_x$9 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_CMTB_Ship_Super_Weapon@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_CMTB_Ship_Super_Weapon::Timer_Expired, COMDAT
; _this$ = ecx

; 3386 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 140				; 0000008cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3387 : 	if (number == 5437)

	cmp	DWORD PTR _number$[ebp], 5437		; 0000153dH
	jne	$LN7@Timer_Expi

; 3388 : 	{
; 3389 : 		LastDistance = 0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+28], xmm0

; 3390 : 		Commands->Set_Model(obj,"CmtBSuperWeapon");

	push	OFFSET ??_C@_0BA@IHFLAFKF@CmtBSuperWeapon?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3391 : 		Commands->Set_Animation(obj,"CmtBSuperWeapon.CmtBSuperWeapon",0,0,0,89,0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@42b20000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0CA@EMKOFNEI@CmtBSuperWeapon?4CmtBSuperWeapon?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3392 : 		Commands->Create_Sound("SFX.Comet_Busters_Super_Weapon_Fire",Commands->Get_Position(obj),obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0CE@ICNBHODI@SFX?4Comet_Busters_Super_Weapon_F@
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+172]
	call	eax
	add	esp, 12					; 0000000cH

; 3393 : 		Commands->Start_Timer(obj,this,0.1f,5438);

	push	5438					; 0000153eH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 3394 : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$9[ebp], 0
	jmp	SHORT $LN9@Timer_Expi
$LN8@Timer_Expi:
	mov	eax, DWORD PTR _x$9[ebp]
	add	eax, 1
	mov	DWORD PTR _x$9[ebp], eax
$LN9@Timer_Expi:
	cmp	DWORD PTR _x$9[ebp], 8
	jge	SHORT $LN7@Timer_Expi

; 3395 : 			for (int y = 0;y < 2;y++)

	mov	DWORD PTR _y$8[ebp], 0
	jmp	SHORT $LN6@Timer_Expi
$LN5@Timer_Expi:
	mov	eax, DWORD PTR _y$8[ebp]
	add	eax, 1
	mov	DWORD PTR _y$8[ebp], eax
$LN6@Timer_Expi:
	cmp	DWORD PTR _y$8[ebp], 2
	jge	SHORT $LN4@Timer_Expi

; 3396 : 			{
; 3397 : 				GameObject *Drone = Commands->Find_Object(MiniGamePlayerControlSystem[x].Drones[y]);

	mov	eax, DWORD PTR _x$9[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR _y$8[ebp]
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+ecx*4+368]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	mov	DWORD PTR _Drone$7[ebp], eax

; 3398 : 				if (Drone)

	cmp	DWORD PTR _Drone$7[ebp], 0
	je	SHORT $LN3@Timer_Expi

; 3399 : 					Commands->Send_Custom_Event(obj,Drone,7043454,0,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	7043454					; 006b797eH
	mov	eax, DWORD PTR _Drone$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN3@Timer_Expi:

; 3400 : 			}

	jmp	SHORT $LN5@Timer_Expi
$LN4@Timer_Expi:
	jmp	$LN8@Timer_Expi
$LN7@Timer_Expi:

; 3401 : 	}
; 3402 : 	if (number == 5438)

	cmp	DWORD PTR _number$[ebp], 5438		; 0000153eH
	jne	$LN2@Timer_Expi

; 3403 : 	{
; 3404 : 		GameObject *Ship = Commands->Find_Object(Get_Int_Parameter("ControllerShipID"));

	push	OFFSET ??_C@_0BB@NIMKMEAF@ControllerShipID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	mov	DWORD PTR _Ship$6[ebp], eax

; 3405 : 		float NewDistance = Commands->Get_Distance(Commands->Get_Bone_Position(obj,"Pos150"),Commands->Get_Position(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_06LDOHGAOK@Pos150?$AA@
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+68]
	call	ecx
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR _NewDistance$5[ebp]

; 3406 : 		RenCometBustersList.KillInRange(Get_Vehicle_Driver(Ship),Commands->Get_Position(obj),LastDistance*LastDistance,NewDistance*NewDistance);

	movss	xmm0, DWORD PTR _NewDistance$5[ebp]
	mulss	xmm0, DWORD PTR _NewDistance$5[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+28]
	mulss	xmm0, DWORD PTR [ecx+28]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+64]
	call	edx
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _Ship$6[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?KillInRange@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@ABVVector3@@MM@Z ; RenCometBustersGameObjects::KillInRange

; 3407 : 		LastDistance = NewDistance;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _NewDistance$5[ebp]
	movss	DWORD PTR [eax+28], xmm0

; 3408 : 		if (Get_Animation_Frame(obj) > 88.0f)

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Animation_Frame@@YAMPAVScriptableGameObj@@@Z ; Get_Animation_Frame
	add	esp, 4
	fstp	DWORD PTR tv282[ebp]
	movss	xmm0, DWORD PTR tv282[ebp]
	comiss	xmm0, DWORD PTR __real@42b00000
	jbe	SHORT $LN1@Timer_Expi

; 3409 : 		{
; 3410 : 			Commands->Send_Custom_Event(obj,Ship,7043454,0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	7043454					; 006b797eH
	mov	eax, DWORD PTR _Ship$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 3411 : 			Commands->Destroy_Object(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN1@Timer_Expi:

; 3412 : 		}
; 3413 : 		Commands->Start_Timer(obj,this,0.1f,5438);

	push	5438					; 0000153eH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN2@Timer_Expi:

; 3414 : 	}
; 3415 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_CMTB_Ship_Super_Weapon@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_CMTB_Ship_Super_Weapon::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_Ship_Super_Weapon@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
$T1 = -96						; size = 12
$T2 = -84						; size = 12
_Player$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_Ship_Super_Weapon@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Ship_Super_Weapon::Created, COMDAT
; _this$ = ecx

; 3375 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3376 : 	LastDistance = 0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+28], xmm0

; 3377 : 	Commands->Set_Model(obj,"CMTBChargeSpark");

	push	OFFSET ??_C@_0BA@KOGFMHJH@CMTBChargeSpark?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3378 : 	Commands->Start_Timer(obj,this,4.0f,5437);

	push	5437					; 0000153dH
	push	ecx
	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 3379 : 	GameObject *Player = Commands->Find_Object(Get_Int_Parameter("ControllerShipID"));

	push	OFFSET ??_C@_0BB@NIMKMEAF@ControllerShipID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	mov	DWORD PTR _Player$[ebp], eax

; 3380 : 	Commands->Set_Facing(obj,Commands->Get_Facing(Player));

	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+72]
	call	edx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+76]
	call	edx
	add	esp, 8

; 3381 : 	Commands->Attach_To_Object_Bone(Player,obj,"origin");

	push	OFFSET ??_C@_06NHCMNMEH@origin?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Player$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 3382 : 	Commands->Create_Sound("SFX.Comet_Busters_Super_Weapon_Charge",Commands->Get_Position(obj),obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0CG@IGNKFOCA@SFX?4Comet_Busters_Super_Weapon_C@
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+172]
	call	eax
	add	esp, 12					; 0000000cH

; 3383 : 	Commands->Create_Sound("SFX.Comet_Busters_Super_Weapon_Warning",Commands->Get_Position(obj),obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0CH@LAOFOPJA@SFX?4Comet_Busters_Super_Weapon_W@
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+172]
	call	eax
	add	esp, 12					; 0000000cH

; 3384 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_CMTB_Ship_Super_Weapon@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Ship_Super_Weapon::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_The_Moon_Script@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_The_Moon_Script@@UAEPAXI@Z PROC		; JMG_CMTB_The_Moon_Script::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_The_Moon_Script@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_The_Moon_Script@@UAEPAXI@Z ENDP		; JMG_CMTB_The_Moon_Script::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_The_Moon_Script@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_The_Moon_Script@@UAE@XZ PROC		; JMG_CMTB_The_Moon_Script::~JMG_CMTB_The_Moon_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_The_Moon_Script@@UAE@XZ ENDP		; JMG_CMTB_The_Moon_Script::~JMG_CMTB_The_Moon_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_The_Moon_Script@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_The_Moon_Script@@QAE@XZ PROC		; JMG_CMTB_The_Moon_Script::JMG_CMTB_The_Moon_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_The_Moon_Script@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_The_Moon_Script@@QAE@XZ ENDP		; JMG_CMTB_The_Moon_Script::JMG_CMTB_The_Moon_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?EnableSpawnPositions@JMG_CMTB_The_Moon_Script@@AAE_NPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
$T1 = -132						; size = 12
_Pos$2 = -56						; size = 12
_BoneName$3 = -44					; size = 32
_y$4 = -12						; size = 4
_success$ = -5						; size = 1
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?EnableSpawnPositions@JMG_CMTB_The_Moon_Script@@AAE_NPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_The_Moon_Script::EnableSpawnPositions, COMDAT
; _this$ = ecx

; 3357 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 132				; 00000084H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3358 : 	bool success = false;

	mov	BYTE PTR _success$[ebp], 0

; 3359 : 	for (int y = 0;y < 16;y++)

	mov	DWORD PTR _y$4[ebp], 0
	jmp	SHORT $LN9@EnableSpaw
$LN8@EnableSpaw:
	mov	eax, DWORD PTR _y$4[ebp]
	add	eax, 1
	mov	DWORD PTR _y$4[ebp], eax
$LN9@EnableSpaw:
	cmp	DWORD PTR _y$4[ebp], 16			; 00000010H
	jge	$LN7@EnableSpaw

; 3360 : 	{
; 3361 : 		SpawnPoints[y] = true;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _y$4[ebp]
	mov	BYTE PTR [eax+29], 1

; 3362 : 		char BoneName[32];
; 3363 : 		sprintf(BoneName,"Comet%02d",y);

	mov	eax, DWORD PTR _y$4[ebp]
	push	eax
	push	OFFSET ??_C@_09DHIFDLCI@Comet?$CF02d?$AA@
	lea	ecx, DWORD PTR _BoneName$3[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 3364 : 		Vector3 Pos = Commands->Get_Bone_Position(obj,BoneName);

	lea	eax, DWORD PTR _BoneName$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+68]
	call	ecx
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _Pos$2[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 3365 : 		if (Pos.X < -85.0f || Pos.X > 85.0f)

	movss	xmm0, DWORD PTR __real@c2aa0000
	comiss	xmm0, DWORD PTR _Pos$2[ebp]
	ja	SHORT $LN5@EnableSpaw
	movss	xmm0, DWORD PTR _Pos$2[ebp]
	comiss	xmm0, DWORD PTR __real@42aa0000
	jbe	SHORT $LN6@EnableSpaw
$LN5@EnableSpaw:

; 3366 : 			SpawnPoints[y] = false;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _y$4[ebp]
	mov	BYTE PTR [eax+29], 0
	jmp	SHORT $LN1@EnableSpaw
$LN6@EnableSpaw:

; 3367 : 		else if (Pos.Y < -85.0f || Pos.Y > 85.0f)

	movss	xmm0, DWORD PTR __real@c2aa0000
	comiss	xmm0, DWORD PTR _Pos$2[ebp+4]
	ja	SHORT $LN2@EnableSpaw
	movss	xmm0, DWORD PTR _Pos$2[ebp+4]
	comiss	xmm0, DWORD PTR __real@42aa0000
	jbe	SHORT $LN3@EnableSpaw
$LN2@EnableSpaw:

; 3368 : 			SpawnPoints[y] = false;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _y$4[ebp]
	mov	BYTE PTR [eax+29], 0

; 3369 : 		else

	jmp	SHORT $LN1@EnableSpaw
$LN3@EnableSpaw:

; 3370 : 			success = true;

	mov	BYTE PTR _success$[ebp], 1
$LN1@EnableSpaw:

; 3371 : 	}

	jmp	$LN8@EnableSpaw
$LN7@EnableSpaw:

; 3372 : 	return success;

	mov	al, BYTE PTR _success$[ebp]

; 3373 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?EnableSpawnPositions@JMG_CMTB_The_Moon_Script@@AAE_NPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_The_Moon_Script::EnableSpawnPositions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Destroyed@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
tv130 = -88						; size = 4
_x$1 = -20						; size = 4
_MaxPlayerCount$2 = -16					; size = 4
_moon$3 = -12						; size = 4
_moonHolder$4 = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_The_Moon_Script::Destroyed, COMDAT
; _this$ = ecx

; 3337 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3338 : 	if (!moonKilled && JMG_CMTB_Main_Game_Control::GameInProgress)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	jne	$LN6@Destroyed
	movzx	eax, BYTE PTR ?GameInProgress@JMG_CMTB_Main_Game_Control@@2_NA ; JMG_CMTB_Main_Game_Control::GameInProgress
	test	eax, eax
	je	$LN6@Destroyed

; 3339 : 	{
; 3340 : 		GameObject *moonHolder = Commands->Find_Object(JMG_CMTB_Main_Game_Control::MoonHolderID);

	mov	eax, DWORD PTR ?MoonHolderID@JMG_CMTB_Main_Game_Control@@2HA ; JMG_CMTB_Main_Game_Control::MoonHolderID
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	mov	DWORD PTR _moonHolder$4[ebp], eax

; 3341 : 		if (moonHolder)

	cmp	DWORD PTR _moonHolder$4[ebp], 0
	je	$LN5@Destroyed

; 3342 : 		{
; 3343 : 			GameObject *moon = Commands->Create_Object_At_Bone(moonHolder,"TheMoon!","moon");

	push	OFFSET ??_C@_04IDMPJGHP@moon?$AA@
	push	OFFSET ??_C@_08OJPPMONF@TheMoon?$CB?$AA@
	mov	eax, DWORD PTR _moonHolder$4[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+104]
	call	edx
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _moon$3[ebp], eax

; 3344 : 			Commands->Attach_To_Object_Bone(moon,moonHolder,"moon");

	push	OFFSET ??_C@_04IDMPJGHP@moon?$AA@
	mov	eax, DWORD PTR _moonHolder$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _moon$3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 3345 : 			int MaxPlayerCount = 0;

	mov	DWORD PTR _MaxPlayerCount$2[ebp], 0

; 3346 : 			for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$1[ebp], 0
	jmp	SHORT $LN4@Destroyed
$LN3@Destroyed:
	mov	eax, DWORD PTR _x$1[ebp]
	add	eax, 1
	mov	DWORD PTR _x$1[ebp], eax
$LN4@Destroyed:
	cmp	DWORD PTR _x$1[ebp], 8
	jge	SHORT $LN2@Destroyed

; 3347 : 				if (MiniGamePlayerControlSystem[x].GamePlayerID)

	mov	eax, DWORD PTR _x$1[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20], 0
	je	SHORT $LN1@Destroyed

; 3348 : 					MaxPlayerCount++;

	mov	eax, DWORD PTR _MaxPlayerCount$2[ebp]
	add	eax, 1
	mov	DWORD PTR _MaxPlayerCount$2[ebp], eax
$LN1@Destroyed:

; 3349 : 			Set_Max_Health(moon,200.0f*MaxPlayerCount);

	jmp	SHORT $LN3@Destroyed
$LN2@Destroyed:
	cvtsi2ss xmm0, DWORD PTR _MaxPlayerCount$2[ebp]
	mulss	xmm0, DWORD PTR __real@43480000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _moon$3[ebp]
	push	eax
	call	?Set_Max_Health@@YAXPAVScriptableGameObj@@M@Z ; Set_Max_Health
	add	esp, 8

; 3350 : 			Commands->Set_Health(moon,lastHealth ? lastHealth+10 : 10);

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+48]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN9@Destroyed
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+48]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR tv130[ebp], xmm0
	jmp	SHORT $LN10@Destroyed
$LN9@Destroyed:
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR tv130[ebp], xmm0
$LN10@Destroyed:
	push	ecx
	movss	xmm0, DWORD PTR tv130[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _moon$3[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+228]
	call	ecx
	add	esp, 8
$LN5@Destroyed:

; 3351 : 		}
; 3352 : 		RenCometBustersList -= obj;

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??ZRenCometBustersGameObjects@@QAEAAV0@PAVScriptableGameObj@@@Z ; RenCometBustersGameObjects::operator-=
$LN6@Destroyed:

; 3353 : 		return;
; 3354 : 	}
; 3355 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Destroyed@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_The_Moon_Script::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Killed@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
tv185 = -672						; size = 8
tv181 = -664						; size = 4
$T1 = -660						; size = 12
$T2 = -648						; size = 12
$T3 = -636						; size = 12
$T4 = -624						; size = 12
$T5 = -612						; size = 12
_moonHolder$6 = -536					; size = 4
_Powerup$7 = -532					; size = 4
_Comet$8 = -528						; size = 4
_x$9 = -524						; size = 4
_params$10 = -520					; size = 512
_Number$11 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
?Killed@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_CMTB_The_Moon_Script::Killed, COMDAT
; _this$ = ecx

; 3313 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 672				; 000002a0H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3314 : 	if (damager || !JMG_CMTB_Main_Game_Control::GameInProgress)//TODO remove this to remove end game lage blast

	cmp	DWORD PTR _damager$[ebp], 0
	jne	SHORT $LN5@Killed
	movzx	eax, BYTE PTR ?GameInProgress@JMG_CMTB_Main_Game_Control@@2_NA ; JMG_CMTB_Main_Game_Control::GameInProgress
	test	eax, eax
	jne	$LN6@Killed
$LN5@Killed:

; 3315 : 	{
; 3316 : 		moonKilled = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 1

; 3317 : 		Commands->Create_Explosion_At_Bone("Explosion_Moon",obj,"Scale",0);

	push	0
	push	OFFSET ??_C@_05MAGIBEFI@Scale?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	push	OFFSET ??_C@_0P@OFBBCMBO@Explosion_Moon?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+420]
	call	edx
	add	esp, 16					; 00000010H

; 3318 : 		int Number = (int)(JMG_CMTB_Main_Game_Control::CMTBLevel*0.2f);

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	mov	DWORD PTR tv181[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv181[ebp]
	mov	ecx, DWORD PTR tv181[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv185[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv185[ebp]
	mulss	xmm0, DWORD PTR __real@3e4ccccd
	cvttss2si edx, xmm0
	mov	DWORD PTR _Number$11[ebp], edx

; 3319 : 		char params[512];
; 3320 : 		sprintf(params,"%d,%.3f %.3f %.3f",3,Commands->Get_Position(obj).X,Commands->Get_Position(obj).Y,Commands->Get_Position(obj).Z);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	cvtss2sd xmm0, DWORD PTR [eax+8]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	cvtss2sd xmm0, DWORD PTR [eax+4]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+64]
	call	edx
	add	esp, 8
	cvtss2sd xmm0, DWORD PTR [eax]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	3
	push	OFFSET ??_C@_0BC@IMNMANMB@?$CFd?0?$CF?43f?5?$CF?43f?5?$CF?43f?$AA@
	lea	eax, DWORD PTR _params$10[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 36					; 00000024H

; 3321 : 		for (int x = 0;x < Number;x++)

	mov	DWORD PTR _x$9[ebp], 0
	jmp	SHORT $LN4@Killed
$LN3@Killed:
	mov	eax, DWORD PTR _x$9[ebp]
	add	eax, 1
	mov	DWORD PTR _x$9[ebp], eax
$LN4@Killed:
	mov	eax, DWORD PTR _x$9[ebp]
	cmp	eax, DWORD PTR _Number$11[ebp]
	jge	$LN2@Killed

; 3322 : 		{
; 3323 : 			GameObject *Comet = Commands->Create_Object("Comet3",Random_Map_Position());

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	?Random_Map_Position@@YA?AVVector3@@XZ	; Random_Map_Position
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_06CEBLODJL@Comet3?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Comet$8[ebp], eax

; 3324 : 			Commands->Set_Facing(Comet,Commands->Get_Random(-180.0f,180.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@43340000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c3340000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 4
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _Comet$8[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+76]
	call	ecx
	add	esp, 8

; 3325 : 			Commands->Attach_Script(Comet,"JMG_CMTB_Comet_Script",params);

	lea	eax, DWORD PTR _params$10[ebp]
	push	eax
	push	OFFSET ??_C@_0BG@BOCOGEON@JMG_CMTB_Comet_Script?$AA@
	mov	ecx, DWORD PTR _Comet$8[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+120]
	call	eax
	add	esp, 12					; 0000000cH

; 3326 : 		}

	jmp	$LN3@Killed
$LN2@Killed:

; 3327 : 		GameObject *Powerup = Commands->Create_Object("CMTB_Powerup_Object",Commands->Get_Position(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0BE@IAPNGHEF@CMTB_Powerup_Object?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Powerup$7[ebp], eax

; 3328 : 		Commands->Attach_Script(Powerup,"JMG_CMTB_Powerup_Script","3,0");

	push	OFFSET ??_C@_03NCDEPONL@3?00?$AA@
	push	OFFSET ??_C@_0BI@KMNMLLME@JMG_CMTB_Powerup_Script?$AA@
	mov	eax, DWORD PTR _Powerup$7[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3329 : 		GameObject *moonHolder = Commands->Find_Object(JMG_CMTB_Main_Game_Control::MoonHolderID);

	mov	eax, DWORD PTR ?MoonHolderID@JMG_CMTB_Main_Game_Control@@2HA ; JMG_CMTB_Main_Game_Control::MoonHolderID
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	mov	DWORD PTR _moonHolder$6[ebp], eax

; 3330 : 		if (moonHolder)

	cmp	DWORD PTR _moonHolder$6[ebp], 0
	je	SHORT $LN1@Killed

; 3331 : 			Commands->Destroy_Object(moonHolder);

	mov	eax, DWORD PTR _moonHolder$6[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN1@Killed:

; 3332 : 		RenCometBustersList -= obj;

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??ZRenCometBustersGameObjects@@QAEAAV0@PAVScriptableGameObj@@@Z ; RenCometBustersGameObjects::operator-=

; 3333 : 		RenCometBustersList.GrantScoreToKiller(damager,0.0,TheMoon);

	push	0
	push	4
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?GrantScoreToKiller@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MW4ObjectType@@H@Z ; RenCometBustersGameObjects::GrantScoreToKiller
$LN6@Killed:

; 3334 : 	}
; 3335 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_CMTB_The_Moon_Script::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Damaged@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
_damagerId$ = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_damage$ = 16						; size = 4
?Damaged@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@0M@Z PROC ; JMG_CMTB_The_Moon_Script::Damaged, COMDAT
; _this$ = ecx

; 3304 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3305 : 	if (!damager || damage <= 0 || obj == damager)

	cmp	DWORD PTR _damager$[ebp], 0
	je	SHORT $LN2@Damaged
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _damage$[ebp]
	jae	SHORT $LN2@Damaged
	mov	eax, DWORD PTR _obj$[ebp]
	cmp	eax, DWORD PTR _damager$[ebp]
	jne	SHORT $LN3@Damaged
$LN2@Damaged:

; 3306 : 		return;

	jmp	$LN4@Damaged
$LN3@Damaged:

; 3307 : 	lastHealth = Commands->Get_Health(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+48]

; 3308 : 	int damagerId = Commands->Get_Preset_ID(damager);

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+112]
	call	edx
	add	esp, 4
	mov	DWORD PTR _damagerId$[ebp], eax

; 3309 : 	if (damagerId != 1000000077 && damagerId != 1000000091 && damagerId != 1000000250 && !Commands->Is_A_Star(damager))

	cmp	DWORD PTR _damagerId$[ebp], 1000000077	; 3b9aca4dH
	je	SHORT $LN1@Damaged
	cmp	DWORD PTR _damagerId$[ebp], 1000000091	; 3b9aca5bH
	je	SHORT $LN1@Damaged
	cmp	DWORD PTR _damagerId$[ebp], 1000000250	; 3b9acafaH
	je	SHORT $LN1@Damaged
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@Damaged

; 3310 : 		Commands->Apply_Damage(obj,-damage,"None",damager);

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	push	OFFSET ??_C@_04OHJIHAFH@None?$AA@
	movss	xmm0, DWORD PTR _damage$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+616]
	call	eax
	add	esp, 16					; 00000010H
$LN1@Damaged:
$LN4@Damaged:

; 3311 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@0M@Z ENDP ; JMG_CMTB_The_Moon_Script::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
tv198 = -152						; size = 4
tv307 = -148						; size = 4
tv193 = -148						; size = 4
tv148 = -148						; size = 4
$T1 = -144						; size = 12
_mphys$2 = -68						; size = 4
_Mine$3 = -64						; size = 4
_Pos$4 = -60						; size = 12
_Spot$5 = -48						; size = 32
_y$6 = -16						; size = 4
_Random$7 = -12						; size = 4
_x$8 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_CMTB_The_Moon_Script::Timer_Expired, COMDAT
; _this$ = ecx

; 3268 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 152				; 00000098H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3269 : 	if (number == 5437)

	cmp	DWORD PTR _number$[ebp], 5437		; 0000153dH
	jne	$LN13@Timer_Expi

; 3270 : 	{
; 3271 : 		if (!EnableSpawnPositions(obj))

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EnableSpawnPositions@JMG_CMTB_The_Moon_Script@@AAE_NPAVScriptableGameObj@@@Z ; JMG_CMTB_The_Moon_Script::EnableSpawnPositions
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN12@Timer_Expi

; 3272 : 		{
; 3273 : 			Commands->Start_Timer(obj,this,Commands->Get_Random(5.0f,8.75f),5437);

	push	5437					; 0000153dH
	push	ecx
	movss	xmm0, DWORD PTR __real@410c0000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 4
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+128]
	call	edx
	add	esp, 16					; 00000010H

; 3274 : 			return;

	jmp	$LN14@Timer_Expi
$LN12@Timer_Expi:

; 3275 : 		}
; 3276 : 		if (RenCometBustersList.CountType(Mine) < 150)

	push	3
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?CountType@RenCometBustersGameObjects@@QAEHW4ObjectType@@@Z ; RenCometBustersGameObjects::CountType
	cmp	eax, 150				; 00000096H
	jge	$LN8@Timer_Expi

; 3277 : 			for (int x = 0;x < 2;x++)

	mov	DWORD PTR _x$8[ebp], 0
	jmp	SHORT $LN10@Timer_Expi
$LN9@Timer_Expi:
	mov	eax, DWORD PTR _x$8[ebp]
	add	eax, 1
	mov	DWORD PTR _x$8[ebp], eax
$LN10@Timer_Expi:
	cmp	DWORD PTR _x$8[ebp], 2
	jge	$LN8@Timer_Expi

; 3278 : 			{
; 3279 : 				int Random = Commands->Get_Random_Int(0,16);

	push	16					; 00000010H
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _Random$7[ebp], eax

; 3280 : 				if (!SpawnPoints[Random])

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _Random$7[ebp]
	movzx	ecx, BYTE PTR [eax+29]
	test	ecx, ecx
	jne	SHORT $LN7@Timer_Expi

; 3281 : 					Random = Commands->Get_Random_Int(0,16);

	push	16					; 00000010H
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _Random$7[ebp], eax
$LN7@Timer_Expi:

; 3282 : 				if (!SpawnPoints[Random])

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _Random$7[ebp]
	movzx	ecx, BYTE PTR [eax+29]
	test	ecx, ecx
	jne	SHORT $LN6@Timer_Expi

; 3283 : 					Random = Commands->Get_Random_Int(0,16);

	push	16					; 00000010H
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _Random$7[ebp], eax
$LN6@Timer_Expi:

; 3284 : 				for (int y = (SpawnPoints[Random] ? Random : 0);y < 16;y++)

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _Random$7[ebp]
	movzx	ecx, BYTE PTR [eax+29]
	test	ecx, ecx
	je	SHORT $LN16@Timer_Expi
	mov	edx, DWORD PTR _Random$7[ebp]
	mov	DWORD PTR tv148[ebp], edx
	jmp	SHORT $LN17@Timer_Expi
$LN16@Timer_Expi:
	mov	DWORD PTR tv148[ebp], 0
$LN17@Timer_Expi:
	mov	eax, DWORD PTR tv148[ebp]
	mov	DWORD PTR _y$6[ebp], eax
	jmp	SHORT $LN5@Timer_Expi
$LN4@Timer_Expi:
	mov	eax, DWORD PTR _y$6[ebp]
	add	eax, 1
	mov	DWORD PTR _y$6[ebp], eax
$LN5@Timer_Expi:
	cmp	DWORD PTR _y$6[ebp], 16			; 00000010H
	jge	$LN3@Timer_Expi

; 3285 : 					if (SpawnPoints[y])

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _y$6[ebp]
	movzx	ecx, BYTE PTR [eax+29]
	test	ecx, ecx
	je	$LN2@Timer_Expi

; 3286 : 					{
; 3287 : 						char Spot[32];
; 3288 : 						sprintf(Spot,"Comet%02d",y);

	mov	eax, DWORD PTR _y$6[ebp]
	push	eax
	push	OFFSET ??_C@_09DHIFDLCI@Comet?$CF02d?$AA@
	lea	ecx, DWORD PTR _Spot$5[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 3289 : 						Vector3 Pos = Commands->Get_Bone_Position(obj,Spot);

	lea	eax, DWORD PTR _Spot$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+68]
	call	ecx
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _Pos$4[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 3290 : 						Pos.Z = 0.25f;

	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR _Pos$4[ebp+8], xmm0

; 3291 : 						GameObject *Mine = Commands->Create_Object("CMTB_Drone",Pos);

	lea	eax, DWORD PTR _Pos$4[ebp]
	push	eax
	push	OFFSET ??_C@_0L@PFAJEBB@CMTB_Drone?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Mine$3[ebp], eax

; 3292 : 						Commands->Attach_Script(Mine,"JMG_CMTB_Motion_Mine","0");

	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	push	OFFSET ??_C@_0BF@DPFEEIBF@JMG_CMTB_Motion_Mine?$AA@
	mov	eax, DWORD PTR _Mine$3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3293 : 						MoveablePhysClass *mphys = Mine->As_PhysicalGameObj() ? Mine->As_PhysicalGameObj()->Peek_Physical_Object()->As_MoveablePhysClass() : NULL;

	mov	eax, DWORD PTR _Mine$3[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _Mine$3[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	test	eax, eax
	je	SHORT $LN18@Timer_Expi
	mov	ecx, DWORD PTR _Mine$3[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _Mine$3[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	mov	ecx, eax
	call	?Peek_Physical_Object@PhysicalGameObj@@QBEPAVPhysClass@@XZ ; PhysicalGameObj::Peek_Physical_Object
	mov	DWORD PTR tv193[ebp], eax
	mov	ecx, DWORD PTR tv193[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv193[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	mov	DWORD PTR tv198[ebp], eax
	jmp	SHORT $LN19@Timer_Expi
$LN18@Timer_Expi:
	mov	DWORD PTR tv198[ebp], 0
$LN19@Timer_Expi:
	mov	ecx, DWORD PTR tv198[ebp]
	mov	DWORD PTR _mphys$2[ebp], ecx

; 3294 : 						if (mphys)

	cmp	DWORD PTR _mphys$2[ebp], 0
	je	SHORT $LN1@Timer_Expi

; 3295 : 							mphys->Find_Teleport_Location(Pos,1.0f,&Pos);

	lea	eax, DWORD PTR _Pos$4[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _Pos$4[ebp]
	push	ecx
	mov	edx, DWORD PTR _mphys$2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _mphys$2[ebp]
	mov	edx, DWORD PTR [eax+232]
	call	edx
$LN1@Timer_Expi:

; 3296 : 						Commands->Set_Position(Mine,Pos);

	lea	eax, DWORD PTR _Pos$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _Mine$3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8

; 3297 : 						break;

	jmp	SHORT $LN3@Timer_Expi
$LN2@Timer_Expi:

; 3298 : 					}
; 3299 : 			}

	jmp	$LN4@Timer_Expi
$LN3@Timer_Expi:
	jmp	$LN9@Timer_Expi
$LN8@Timer_Expi:

; 3300 : 		Commands->Start_Timer(obj,this,Commands->Get_Random(5.0f,8.75f)*JMG_CMTB_Main_Game_Control::DifficultyMultiplierInv,5437);

	push	5437					; 0000153dH
	push	ecx
	movss	xmm0, DWORD PTR __real@410c0000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv307[ebp]
	movss	xmm0, DWORD PTR tv307[ebp]
	mulss	xmm0, DWORD PTR ?DifficultyMultiplierInv@JMG_CMTB_Main_Game_Control@@2MA
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+128]
	call	edx
	add	esp, 16					; 00000010H
$LN13@Timer_Expi:
$LN14@Timer_Expi:

; 3301 : 	}
; 3302 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_CMTB_The_Moon_Script::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
$T1 = -84						; size = 16
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_The_Moon_Script::Created, COMDAT
; _this$ = ecx

; 3261 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3262 : 	lastHealth = Commands->Get_Health(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+48]

; 3263 : 	moonKilled = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0

; 3264 : 	RenCometBustersList += TypeObject(obj,2626.5625f,51.25f,TheMoon);

	push	4
	push	ecx
	movss	xmm0, DWORD PTR __real@424d0000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@45242900
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 3265 : 	Commands->Start_Timer(obj,this,Commands->Get_Random(5.0f,8.75f),5437);

	push	5437					; 0000153dH
	push	ecx
	movss	xmm0, DWORD PTR __real@410c0000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 4
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+128]
	call	edx
	add	esp, 16					; 00000010H

; 3266 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_CMTB_The_Moon_Script@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_The_Moon_Script::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_Motion_Mine@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_Motion_Mine@@UAEPAXI@Z PROC		; JMG_CMTB_Motion_Mine::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_Motion_Mine@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_Motion_Mine@@UAEPAXI@Z ENDP		; JMG_CMTB_Motion_Mine::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_Motion_Mine@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_Motion_Mine@@UAE@XZ PROC			; JMG_CMTB_Motion_Mine::~JMG_CMTB_Motion_Mine, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_Motion_Mine@@UAE@XZ ENDP			; JMG_CMTB_Motion_Mine::~JMG_CMTB_Motion_Mine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_Motion_Mine@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_Motion_Mine@@QAE@XZ PROC			; JMG_CMTB_Motion_Mine::JMG_CMTB_Motion_Mine, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_Motion_Mine@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_Motion_Mine@@QAE@XZ ENDP			; JMG_CMTB_Motion_Mine::JMG_CMTB_Motion_Mine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Clamp_Value@JMG_CMTB_Motion_Mine@@AAEMMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Value$ = 8						; size = 4
_Min$ = 12						; size = 4
_Max$ = 16						; size = 4
?Clamp_Value@JMG_CMTB_Motion_Mine@@AAEMMMM@Z PROC	; JMG_CMTB_Motion_Mine::Clamp_Value, COMDAT
; _this$ = ecx

; 3253 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3254 : 	if (Value > Max)

	movss	xmm0, DWORD PTR _Value$[ebp]
	comiss	xmm0, DWORD PTR _Max$[ebp]
	jbe	SHORT $LN2@Clamp_Valu

; 3255 : 		return Max;

	fld	DWORD PTR _Max$[ebp]
	jmp	SHORT $LN3@Clamp_Valu
$LN2@Clamp_Valu:

; 3256 : 	if (Value < Min)

	movss	xmm0, DWORD PTR _Min$[ebp]
	comiss	xmm0, DWORD PTR _Value$[ebp]
	jbe	SHORT $LN1@Clamp_Valu

; 3257 : 		return Min;

	fld	DWORD PTR _Min$[ebp]
	jmp	SHORT $LN3@Clamp_Valu
$LN1@Clamp_Valu:

; 3258 : 	return Value;

	fld	DWORD PTR _Value$[ebp]
$LN3@Clamp_Valu:

; 3259 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Clamp_Value@JMG_CMTB_Motion_Mine@@AAEMMMM@Z ENDP	; JMG_CMTB_Motion_Mine::Clamp_Value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Destroyed@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
$T1 = -84						; size = 12
_Powerup$2 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Motion_Mine::Destroyed, COMDAT
; _this$ = ecx

; 3243 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3244 : 	RenCometBustersList -= obj;

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??ZRenCometBustersGameObjects@@QAEAAV0@PAVScriptableGameObj@@@Z ; RenCometBustersGameObjects::operator-=

; 3245 : 	if (Get_Int_Parameter("Is_Boss"))

	push	OFFSET ??_C@_07JPIEJJIE@Is_Boss?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	SHORT $LN3@Destroyed

; 3246 : 		if (!RenCometBustersList.CountType(MineBoss))

	push	11					; 0000000bH
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?CountType@RenCometBustersGameObjects@@QAEHW4ObjectType@@@Z ; RenCometBustersGameObjects::CountType
	test	eax, eax
	jne	SHORT $LN3@Destroyed

; 3247 : 		{
; 3248 : 			GameObject *Powerup = Commands->Create_Object("CMTB_Powerup_Object",Commands->Get_Position(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0BE@IAPNGHEF@CMTB_Powerup_Object?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Powerup$2[ebp], eax

; 3249 : 			Commands->Attach_Script(Powerup,"JMG_CMTB_Powerup_Script","10,0");

	push	OFFSET ??_C@_04LLKGOIAC@10?00?$AA@
	push	OFFSET ??_C@_0BI@KMNMLLME@JMG_CMTB_Powerup_Script?$AA@
	mov	eax, DWORD PTR _Powerup$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH
$LN3@Destroyed:

; 3250 : 		}
; 3251 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Destroyed@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Motion_Mine::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Killed@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
tv153 = -100						; size = 4
$T1 = -92						; size = 12
$T2 = -80						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
?Killed@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_CMTB_Motion_Mine::Killed, COMDAT
; _this$ = ecx

; 3234 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 100				; 00000064H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3235 : 	if (!(Get_Int_Parameter("Is_Boss") && RenCometBustersList.CountType(MineBoss) == 1))

	push	OFFSET ??_C@_07JPIEJJIE@Is_Boss?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	SHORT $LN2@Killed
	push	11					; 0000000bH
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?CountType@RenCometBustersGameObjects@@QAEHW4ObjectType@@@Z ; RenCometBustersGameObjects::CountType
	cmp	eax, 1
	je	SHORT $LN1@Killed
$LN2@Killed:

; 3236 : 		if (Commands->Get_Random_Int(0,100) < 15+(JMG_CMTB_Main_Game_Control::CMTBLevel*0.2))// was 0.1 and 12

	push	100					; 00000064H
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	cvtsi2sd xmm0, eax
	mov	edx, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	mov	DWORD PTR tv153[ebp], edx
	cvtsi2sd xmm1, DWORD PTR tv153[ebp]
	mov	eax, DWORD PTR tv153[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	mulsd	xmm1, QWORD PTR __real@3fc999999999999a
	addsd	xmm1, QWORD PTR __real@402e000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN1@Killed

; 3237 : 			JMG_CMTB_Random_Ship_Powerup(Commands->Get_Position(obj));

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, -4					; fffffffcH
	mov	ecx, esp
	push	eax
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	call	?JMG_CMTB_Random_Ship_Powerup@@YAPAVScriptableGameObj@@VVector3@@H@Z ; JMG_CMTB_Random_Ship_Powerup
	add	esp, 16					; 00000010H
$LN1@Killed:

; 3238 : 	Commands->Create_Explosion("Explosion_Comet_Small",Commands->Get_Position(obj),0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0BG@IJBPPJAA@Explosion_Comet_Small?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+416]
	call	edx
	add	esp, 12					; 0000000cH

; 3239 : 	RenCometBustersList.GrantScoreToKiller(damager,200,Mine);

	push	0
	push	3
	push	ecx
	movss	xmm0, DWORD PTR __real@43480000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?GrantScoreToKiller@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MW4ObjectType@@H@Z ; RenCometBustersGameObjects::GrantScoreToKiller

; 3240 : 	Commands->Destroy_Object(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4

; 3241 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_CMTB_Motion_Mine::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
tv509 = -764						; size = 8
tv505 = -756						; size = 4
tv140 = -752						; size = 4
tv699 = -748						; size = 4
tv670 = -748						; size = 4
tv598 = -748						; size = 4
tv571 = -748						; size = 4
tv501 = -748						; size = 4
tv693 = -744						; size = 4
tv664 = -744						; size = 4
tv592 = -744						; size = 4
tv565 = -744						; size = 4
tv485 = -744						; size = 8
tv865 = -740						; size = 4
tv831 = -740						; size = 4
tv829 = -740						; size = 4
tv827 = -740						; size = 4
tv810 = -736						; size = 4
tv762 = -736						; size = 4
tv733 = -736						; size = 4
tv683 = -736						; size = 4
tv654 = -736						; size = 4
tv582 = -736						; size = 4
tv555 = -736						; size = 4
tv481 = -736						; size = 4
tv478 = -736						; size = 4
tv148 = -736						; size = 4
$T1 = -732						; size = 12
$T2 = -720						; size = 12
$T3 = -708						; size = 12
$T4 = -696						; size = 12
_newTargetObject$5 = -620				; size = 4
_params$6 = -616					; size = 196
_Target$7 = -420					; size = 4
_params$8 = -416					; size = 196
_params$9 = -220					; size = 196
_Target$10 = -24					; size = 4
_FollowObject$11 = -20					; size = 4
_Pos$12 = -16						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_CMTB_Motion_Mine::Timer_Expired, COMDAT
; _this$ = ecx

; 3135 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 764				; 000002fcH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3136 : 	if (number == 5437)

	cmp	DWORD PTR _number$[ebp], 5437		; 0000153dH
	jne	$LN23@Timer_Expi

; 3137 : 	{
; 3138 : 		Vector3 Pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _Pos$12[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 3139 : 		if (JmgUtility::SimpleDistance(Pos,LastPosition) > 0.05)

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	lea	ecx, DWORD PTR _Pos$12[ebp]
	push	ecx
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR tv478[ebp]
	movss	xmm0, DWORD PTR tv478[ebp]
	cvtss2sd xmm0, xmm0
	comisd	xmm0, QWORD PTR __real@3fa999999999999a
	jbe	$LN22@Timer_Expi

; 3140 : 		{
; 3141 : 			StuckCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0

; 3142 : 			Speed = max(0.1f,Clamp_Value(Speed+0.05f*JMG_CMTB_Main_Game_Control::DifficultyMultiplierMine,0.1f,(1.25f+JMG_CMTB_Main_Game_Control::CMTBLevel*0.01f)*JMG_CMTB_Main_Game_Control::DifficultyMultiplierMine));

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	mov	DWORD PTR tv481[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv481[ebp]
	mov	ecx, DWORD PTR tv481[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv485[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv485[ebp]
	mulss	xmm0, DWORD PTR __real@3c23d70a
	addss	xmm0, DWORD PTR __real@3fa00000
	mulss	xmm0, DWORD PTR ?DifficultyMultiplierMine@JMG_CMTB_Main_Game_Control@@2MA
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR __real@3d4ccccd
	mulss	xmm0, DWORD PTR ?DifficultyMultiplierMine@JMG_CMTB_Main_Game_Control@@2MA
	mov	edx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [edx+48]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clamp_Value@JMG_CMTB_Motion_Mine@@AAEMMMM@Z ; JMG_CMTB_Motion_Mine::Clamp_Value
	fstp	DWORD PTR tv501[ebp]
	movss	xmm0, DWORD PTR __real@3dcccccd
	comiss	xmm0, DWORD PTR tv501[ebp]
	jbe	SHORT $LN26@Timer_Expi
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR tv140[ebp], xmm0
	jmp	$LN27@Timer_Expi
$LN26@Timer_Expi:
	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	mov	DWORD PTR tv505[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv505[ebp]
	mov	ecx, DWORD PTR tv505[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv509[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv509[ebp]
	mulss	xmm0, DWORD PTR __real@3c23d70a
	addss	xmm0, DWORD PTR __real@3fa00000
	mulss	xmm0, DWORD PTR ?DifficultyMultiplierMine@JMG_CMTB_Main_Game_Control@@2MA
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR __real@3d4ccccd
	mulss	xmm0, DWORD PTR ?DifficultyMultiplierMine@JMG_CMTB_Main_Game_Control@@2MA
	mov	edx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [edx+48]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clamp_Value@JMG_CMTB_Motion_Mine@@AAEMMMM@Z ; JMG_CMTB_Motion_Mine::Clamp_Value
	fstp	DWORD PTR tv140[ebp]
$LN27@Timer_Expi:
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv140[ebp]
	movss	DWORD PTR [eax+48], xmm0

; 3143 : 		}
; 3144 : 		else

	jmp	$LN18@Timer_Expi
$LN22@Timer_Expi:

; 3145 : 		{
; 3146 : 			NewRandom = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+45], 1

; 3147 : 			Speed = max(0.1f,0.1f*JMG_CMTB_Main_Game_Control::DifficultyMultiplierMine);

	movss	xmm0, DWORD PTR __real@3dcccccd
	mulss	xmm0, DWORD PTR ?DifficultyMultiplierMine@JMG_CMTB_Main_Game_Control@@2MA
	movss	xmm1, DWORD PTR __real@3dcccccd
	comiss	xmm1, xmm0
	jbe	SHORT $LN28@Timer_Expi
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR tv148[ebp], xmm0
	jmp	SHORT $LN29@Timer_Expi
$LN28@Timer_Expi:
	movss	xmm0, DWORD PTR __real@3dcccccd
	mulss	xmm0, DWORD PTR ?DifficultyMultiplierMine@JMG_CMTB_Main_Game_Control@@2MA
	movss	DWORD PTR tv148[ebp], xmm0
$LN29@Timer_Expi:
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv148[ebp]
	movss	DWORD PTR [eax+48], xmm0

; 3148 : 			GameObject *FollowObject = Commands->Find_Object(FollowObjectID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _FollowObject$11[ebp], eax

; 3149 : 			if (FollowObject)

	cmp	DWORD PTR _FollowObject$11[ebp], 0
	je	$LN18@Timer_Expi

; 3150 : 			{
; 3151 : 				StuckCount++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+88], ecx

; 3152 : 				if (!(StuckCount % 10))

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+88]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	test	edx, edx
	jne	$LN19@Timer_Expi

; 3153 : 				{
; 3154 : 					Pos.X += Commands->Get_Random(1.0f,5.0f)*(cos(Commands->Get_Random(-180.0f,180.0f)*3.14159265f/180));

	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv555[ebp]
	movss	xmm0, DWORD PTR tv555[ebp]
	push	ecx
	movss	xmm1, DWORD PTR __real@43340000
	movss	DWORD PTR [esp], xmm1
	push	ecx
	movss	xmm1, DWORD PTR __real@c3340000
	movss	DWORD PTR [esp], xmm1
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+148]
	movss	DWORD PTR tv827[ebp], xmm0
	call	eax
	add	esp, 8
	fstp	DWORD PTR tv565[ebp]
	movss	xmm0, DWORD PTR tv565[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv571[ebp]
	movss	xmm0, DWORD PTR tv827[ebp]
	mulss	xmm0, DWORD PTR tv571[ebp]
	addss	xmm0, DWORD PTR _Pos$12[ebp]
	movss	DWORD PTR _Pos$12[ebp], xmm0

; 3155 : 					Pos.Y += Commands->Get_Random(1.0f,5.0f)*(sin(Commands->Get_Random(-180.0f,180.0f)*3.14159265f/180));

	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv582[ebp]
	movss	xmm0, DWORD PTR tv582[ebp]
	push	ecx
	movss	xmm1, DWORD PTR __real@43340000
	movss	DWORD PTR [esp], xmm1
	push	ecx
	movss	xmm1, DWORD PTR __real@c3340000
	movss	DWORD PTR [esp], xmm1
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+148]
	movss	DWORD PTR tv829[ebp], xmm0
	call	eax
	add	esp, 8
	fstp	DWORD PTR tv592[ebp]
	movss	xmm0, DWORD PTR tv592[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR tv598[ebp]
	movss	xmm0, DWORD PTR tv829[ebp]
	mulss	xmm0, DWORD PTR tv598[ebp]
	addss	xmm0, DWORD PTR _Pos$12[ebp+4]
	movss	DWORD PTR _Pos$12[ebp+4], xmm0

; 3156 : 					Commands->Set_Position(obj,Pos);

	lea	eax, DWORD PTR _Pos$12[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8

; 3157 : 					LastPosition = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
$LN19@Timer_Expi:

; 3158 : 				}
; 3159 : 				if (StuckCount == 24)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+88], 24			; 00000018H
	jne	SHORT $LN18@Timer_Expi

; 3160 : 					Commands->Apply_Damage(obj,99999.9f,"BlamoKiller",0);

	push	0
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@47c34ff3
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H
$LN18@Timer_Expi:

; 3161 : 			}
; 3162 : 		}
; 3163 : 		GameObject *Target = Commands->Find_Object(FollowObjectID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Target$10[ebp], eax

; 3164 : 		if (Target && !movingToLastSeenSpot)

	cmp	DWORD PTR _Target$10[ebp], 0
	je	$LN17@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+44]
	test	ecx, ecx
	jne	$LN17@Timer_Expi

; 3165 : 		{
; 3166 : 			if (NewTarget)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $LN15@Timer_Expi

; 3167 : 			{
; 3168 : 				NewTarget--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+84], ecx

; 3169 : 				if (!NewTarget)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jne	SHORT $LN15@Timer_Expi

; 3170 : 					NewRandom = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+45], 1
$LN15@Timer_Expi:

; 3171 : 			}
; 3172 : 			ActionParamsStruct params;

	lea	ecx, DWORD PTR _params$9[ebp]
	call	??0ActionParamsStruct@@QAE@XZ		; ActionParamsStruct::ActionParamsStruct

; 3173 : 			params.Set_Basic(this,100,10);

	push	-1
	push	10					; 0000000aH
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$9[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 3174 : 			if (!ArriveDistance)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	jne	SHORT $LN14@Timer_Expi

; 3175 : 				params.Set_Movement(Target,Speed,0.0f,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+48]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Target$10[ebp]
	push	ecx
	lea	ecx, DWORD PTR _params$9[ebp]
	call	?Set_Movement@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z ; ActionParamsStruct::Set_Movement

; 3176 : 			else

	jmp	$LN13@Timer_Expi
$LN14@Timer_Expi:

; 3177 : 			{
; 3178 : 				if (NewRandom)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+45]
	test	ecx, ecx
	je	$LN12@Timer_Expi

; 3179 : 				{
; 3180 : 					NewRandom = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+45], 0

; 3181 : 					TargetPos = Commands->Get_Position(Target);

	mov	eax, DWORD PTR _Target$10[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 3182 : 					TargetPos.X += Commands->Get_Random(5.0f,20.0f)*(cos(Commands->Get_Random(-180.0f,180.0f)*3.14159265f/180));

	push	ecx
	movss	xmm0, DWORD PTR __real@41a00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv654[ebp]
	movss	xmm0, DWORD PTR tv654[ebp]
	push	ecx
	movss	xmm1, DWORD PTR __real@43340000
	movss	DWORD PTR [esp], xmm1
	push	ecx
	movss	xmm1, DWORD PTR __real@c3340000
	movss	DWORD PTR [esp], xmm1
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+148]
	movss	DWORD PTR tv831[ebp], xmm0
	call	eax
	add	esp, 8
	fstp	DWORD PTR tv664[ebp]
	movss	xmm0, DWORD PTR tv664[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv670[ebp]
	movss	xmm0, DWORD PTR tv831[ebp]
	mulss	xmm0, DWORD PTR tv670[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [ecx+72]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+72], xmm0

; 3183 : 					TargetPos.Y += Commands->Get_Random(5.0f,20.0f)*(sin(Commands->Get_Random(-180.0f,180.0f)*3.14159265f/180));

	push	ecx
	movss	xmm0, DWORD PTR __real@41a00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv683[ebp]
	movss	xmm0, DWORD PTR tv683[ebp]
	push	ecx
	movss	xmm1, DWORD PTR __real@43340000
	movss	DWORD PTR [esp], xmm1
	push	ecx
	movss	xmm1, DWORD PTR __real@c3340000
	movss	DWORD PTR [esp], xmm1
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+148]
	movss	DWORD PTR tv865[ebp], xmm0
	call	eax
	add	esp, 8
	fstp	DWORD PTR tv693[ebp]
	movss	xmm0, DWORD PTR tv693[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR tv699[ebp]
	movss	xmm0, DWORD PTR tv865[ebp]
	mulss	xmm0, DWORD PTR tv699[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [ecx+76]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+76], xmm0

; 3184 : 					NewTarget = 40;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 40			; 00000028H
$LN12@Timer_Expi:

; 3185 : 				}
; 3186 : 				params.Set_Movement(TargetPos,Speed,0.0f,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+48]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	push	ecx
	lea	ecx, DWORD PTR _params$9[ebp]
	call	?Set_Movement@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ; ActionParamsStruct::Set_Movement
$LN13@Timer_Expi:

; 3187 : 			}
; 3188 : 			Commands->Action_Goto(obj,params);

	lea	eax, DWORD PTR _params$9[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+16]
	call	eax
	add	esp, 8
	jmp	$LN8@Timer_Expi
$LN17@Timer_Expi:

; 3189 : 		}
; 3190 : 		else if (movingToLastSeenSpot)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+44]
	test	ecx, ecx
	je	$LN10@Timer_Expi

; 3191 : 		{
; 3192 : 			ActionParamsStruct params;

	lea	ecx, DWORD PTR _params$8[ebp]
	call	??0ActionParamsStruct@@QAE@XZ		; ActionParamsStruct::ActionParamsStruct

; 3193 : 			params.Set_Basic(this,100,10);

	push	-1
	push	10					; 0000000aH
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$8[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 3194 : 			params.Set_Movement(lastTargetSpot,Speed,0,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+48]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	lea	ecx, DWORD PTR _params$8[ebp]
	call	?Set_Movement@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ; ActionParamsStruct::Set_Movement

; 3195 : 			Commands->Action_Goto(obj,params);

	lea	eax, DWORD PTR _params$8[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+16]
	call	eax
	add	esp, 8

; 3196 : 			if (JmgUtility::SimpleDistance(Pos,lastTargetSpot) < 25)

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	lea	ecx, DWORD PTR _Pos$12[ebp]
	push	ecx
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR tv733[ebp]
	movss	xmm0, DWORD PTR __real@41c80000
	comiss	xmm0, DWORD PTR tv733[ebp]
	jbe	SHORT $LN9@Timer_Expi

; 3197 : 				movingToLastSeenSpot = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+44], 0
$LN9@Timer_Expi:

; 3198 : 		}
; 3199 : 		else

	jmp	SHORT $LN8@Timer_Expi
$LN10@Timer_Expi:

; 3200 : 			Commands->Action_Reset(obj,100);

	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 8
$LN8@Timer_Expi:

; 3201 : 		LastPosition = Pos;

	lea	eax, DWORD PTR _Pos$12[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 3202 : 		Commands->Start_Timer(obj,this,0.25f,5437);

	push	5437					; 0000153dH
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN23@Timer_Expi:

; 3203 : 	}
; 3204 : 	if (number == 5436)

	cmp	DWORD PTR _number$[ebp], 5436		; 0000153cH
	jne	$LN7@Timer_Expi

; 3205 : 	{
; 3206 : 		ArriveDistance = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0

; 3207 : 		if (!movingToLastSeenSpot && LastTargetObject && LastTargetObject->Type == PlayerCloak && Commands->Get_Random(0.0f,1.0f) < 0.33f)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+44]
	test	ecx, ecx
	jne	$LN6@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	$LN6@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	DWORD PTR [ecx+16], 7
	jne	$LN6@Timer_Expi
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv762[ebp]
	movss	xmm0, DWORD PTR __real@3ea8f5c3
	comiss	xmm0, DWORD PTR tv762[ebp]
	jbe	$LN6@Timer_Expi

; 3208 : 		{
; 3209 : 			GameObject *Target = Commands->Find_Object(LastTargetObject->ObjectID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	mov	DWORD PTR _Target$7[ebp], eax

; 3210 : 			if (Target)

	cmp	DWORD PTR _Target$7[ebp], 0
	je	$LN5@Timer_Expi

; 3211 : 			{
; 3212 : 				movingToLastSeenSpot = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+44], 1

; 3213 : 				lastTargetSpot = Commands->Get_Position(Target);

	mov	eax, DWORD PTR _Target$7[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 3214 : 				ActionParamsStruct params;

	lea	ecx, DWORD PTR _params$6[ebp]
	call	??0ActionParamsStruct@@QAE@XZ		; ActionParamsStruct::ActionParamsStruct

; 3215 : 				params.Set_Basic(this,100,10);

	push	-1
	push	10					; 0000000aH
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$6[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 3216 : 				params.Set_Movement(lastTargetSpot,Speed,0.0f,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+48]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	lea	ecx, DWORD PTR _params$6[ebp]
	call	?Set_Movement@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ; ActionParamsStruct::Set_Movement

; 3217 : 				Commands->Action_Goto(obj,params);

	lea	eax, DWORD PTR _params$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+16]
	call	eax
	add	esp, 8
$LN5@Timer_Expi:

; 3218 : 			}
; 3219 : 			LastTargetObject = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN6@Timer_Expi:

; 3220 : 		}
; 3221 : 		AnObject *newTargetObject = RenCometBustersList.FindMineTarget(obj,&ArriveDistance);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 68					; 00000044H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?FindMineTarget@RenCometBustersGameObjects@@QAEPAUAnObject@@PAVScriptableGameObj@@PAH@Z ; RenCometBustersGameObjects::FindMineTarget
	mov	DWORD PTR _newTargetObject$5[ebp], eax

; 3222 : 		if (!movingToLastSeenSpot && (!LastTargetObject || (LastTargetObject->AllowReplaceTime || LastTargetObject->Type == Mine || LastTargetObject->Type == MineBoss) || (newTargetObject && newTargetObject->ObjectID != LastTargetObject->ObjectID && Commands->Get_Random(0.0f,1.0f) < 0.05f)))

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+44]
	test	ecx, ecx
	jne	$LN4@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	$LN3@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	DWORD PTR [ecx+20], 0
	jne	SHORT $LN3@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	DWORD PTR [ecx+16], 3
	je	SHORT $LN3@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	DWORD PTR [ecx+16], 11			; 0000000bH
	je	SHORT $LN3@Timer_Expi
	cmp	DWORD PTR _newTargetObject$5[ebp], 0
	je	SHORT $LN4@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _newTargetObject$5[ebp]
	mov	eax, DWORD PTR [edx+12]
	cmp	eax, DWORD PTR [ecx+12]
	je	SHORT $LN4@Timer_Expi
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv810[ebp]
	movss	xmm0, DWORD PTR __real@3d4ccccd
	comiss	xmm0, DWORD PTR tv810[ebp]
	jbe	SHORT $LN4@Timer_Expi
$LN3@Timer_Expi:

; 3223 : 		{
; 3224 : 			if (newTargetObject)

	cmp	DWORD PTR _newTargetObject$5[ebp], 0
	je	SHORT $LN2@Timer_Expi

; 3225 : 				FollowObjectID = newTargetObject->ObjectID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newTargetObject$5[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+52], edx
$LN2@Timer_Expi:

; 3226 : 			LastTargetObject = newTargetObject;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newTargetObject$5[ebp]
	mov	DWORD PTR [eax+28], ecx
$LN4@Timer_Expi:

; 3227 : 		}
; 3228 : 		if (!ArriveDistance)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	jne	SHORT $LN1@Timer_Expi

; 3229 : 			NewRandom = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+45], 1
$LN1@Timer_Expi:

; 3230 : 		Commands->Start_Timer(obj,this,1.0f,5436);

	push	5436					; 0000153cH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN7@Timer_Expi:

; 3231 : 	}
; 3232 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_CMTB_Motion_Mine::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
tv76 = -116						; size = 4
$T1 = -112						; size = 12
$T2 = -100						; size = 16
$T3 = -84						; size = 16
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Motion_Mine::Created, COMDAT
; _this$ = ecx

; 3113 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 116				; 00000074H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3114 : 	LastTargetObject = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 3115 : 	movingToLastSeenSpot = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+44], 0

; 3116 : 	StuckCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0

; 3117 : 	NewTarget = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0

; 3118 : 	NewRandom = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+45], 1

; 3119 : 	ArriveDistance = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0

; 3120 : 	Speed = max(0.1f,0.1f*JMG_CMTB_Main_Game_Control::DifficultyMultiplierMine);

	movss	xmm0, DWORD PTR __real@3dcccccd
	mulss	xmm0, DWORD PTR ?DifficultyMultiplierMine@JMG_CMTB_Main_Game_Control@@2MA
	movss	xmm1, DWORD PTR __real@3dcccccd
	comiss	xmm1, xmm0
	jbe	SHORT $LN5@Created
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR tv76[ebp], xmm0
	jmp	SHORT $LN6@Created
$LN5@Created:
	movss	xmm0, DWORD PTR __real@3dcccccd
	mulss	xmm0, DWORD PTR ?DifficultyMultiplierMine@JMG_CMTB_Main_Game_Control@@2MA
	movss	DWORD PTR tv76[ebp], xmm0
$LN6@Created:
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv76[ebp]
	movss	DWORD PTR [eax+48], xmm0

; 3121 : 	LastPosition = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 3122 : 	FollowObjectID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0

; 3123 : 	Commands->Set_Obj_Radar_Blip_Color(obj,RADAR_BLIP_COLOR_NOD);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+376]
	call	edx
	add	esp, 8

; 3124 : 	if (Get_Int_Parameter("Is_Boss"))

	push	OFFSET ??_C@_07JPIEJJIE@Is_Boss?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	SHORT $LN2@Created

; 3125 : 	{
; 3126 : 		RenCometBustersList += TypeObject(obj,2.0f,1.414f,MineBoss);

	push	11					; 0000000bH
	push	ecx
	movss	xmm0, DWORD PTR __real@3fb4fdf4
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 3127 : 		Commands->Set_Obj_Radar_Blip_Shape(obj,RADAR_BLIP_SHAPE_OBJECTIVE);

	push	4
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+372]
	call	edx
	add	esp, 8

; 3128 : 	}
; 3129 : 	else

	jmp	SHORT $LN1@Created
$LN2@Created:

; 3130 : 		RenCometBustersList += TypeObject(obj,2.0,1.414f,Mine);

	push	3
	push	ecx
	movss	xmm0, DWORD PTR __real@3fb4fdf4
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=
$LN1@Created:

; 3131 : 	Commands->Start_Timer(obj,this,1.0f,5436);

	push	5436					; 0000153cH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 3132 : 	Commands->Start_Timer(obj,this,0.25f,5437);

	push	5437					; 0000153dH
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 3133 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_CMTB_Motion_Mine@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Motion_Mine::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_Renegade_Code@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_Renegade_Code@@UAEPAXI@Z PROC		; JMG_CMTB_Renegade_Code::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_Renegade_Code@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_Renegade_Code@@UAEPAXI@Z ENDP		; JMG_CMTB_Renegade_Code::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_Renegade_Code@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_Renegade_Code@@UAE@XZ PROC			; JMG_CMTB_Renegade_Code::~JMG_CMTB_Renegade_Code, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_Renegade_Code@@UAE@XZ ENDP			; JMG_CMTB_Renegade_Code::~JMG_CMTB_Renegade_Code
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_Renegade_Code@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_Renegade_Code@@QAE@XZ PROC			; JMG_CMTB_Renegade_Code::JMG_CMTB_Renegade_Code, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_Renegade_Code@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_Renegade_Code@@QAE@XZ ENDP			; JMG_CMTB_Renegade_Code::JMG_CMTB_Renegade_Code
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Custom@JMG_CMTB_Renegade_Code@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_Weapon$1 = -16						; size = 4
_Weapon$2 = -12						; size = 4
_vehicle$3 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_message$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@JMG_CMTB_Renegade_Code@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; JMG_CMTB_Renegade_Code::Custom, COMDAT
; _this$ = ecx

; 3082 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3083 : 	if ((message >= 77454812 && message <= 77454819) || (message >= 77454820 && message <= 77454829) || message == 7154148 || message == 77454830 || message == 77454833)

	cmp	DWORD PTR _message$[ebp], 77454812	; 049ddddcH
	jl	SHORT $LN8@Custom
	cmp	DWORD PTR _message$[ebp], 77454819	; 049ddde3H
	jle	SHORT $LN9@Custom
$LN8@Custom:
	cmp	DWORD PTR _message$[ebp], 77454820	; 049ddde4H
	jl	SHORT $LN7@Custom
	cmp	DWORD PTR _message$[ebp], 77454829	; 049dddedH
	jle	SHORT $LN9@Custom
$LN7@Custom:
	cmp	DWORD PTR _message$[ebp], 7154148	; 006d29e4H
	je	SHORT $LN9@Custom
	cmp	DWORD PTR _message$[ebp], 77454830	; 049dddeeH
	je	SHORT $LN9@Custom
	cmp	DWORD PTR _message$[ebp], 77454833	; 049dddf1H
	jne	SHORT $LN10@Custom
$LN9@Custom:

; 3084 : 	{
; 3085 : 		if (sender != obj)

	mov	eax, DWORD PTR _sender$[ebp]
	cmp	eax, DWORD PTR _obj$[ebp]
	je	SHORT $LN6@Custom

; 3086 : 			return;

	jmp	$LN11@Custom
$LN6@Custom:

; 3087 : 		GameObject *vehicle = Get_Vehicle(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	mov	DWORD PTR _vehicle$3[ebp], eax

; 3088 : 		if (!vehicle)

	cmp	DWORD PTR _vehicle$3[ebp], 0
	jne	SHORT $LN5@Custom

; 3089 : 			return;

	jmp	$LN11@Custom
$LN5@Custom:

; 3090 : 		Commands->Send_Custom_Event(obj,vehicle,message,param,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	mov	edx, DWORD PTR _vehicle$3[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+140]
	call	edx
	add	esp, 20					; 00000014H
$LN10@Custom:

; 3091 : 	}
; 3092 : 	if (message == CUSTOM_EVENT_VEHICLE_EXITED)

	cmp	DWORD PTR _message$[ebp], 1000000029	; 3b9aca1dH
	jne	$LN3@Custom

; 3093 : 	{
; 3094 : 		Commands->Send_Custom_Event(obj,sender,CUSTOM_EVENT_VEHICLE_EXITED,0,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	1000000029				; 3b9aca1dH
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 3095 : 		const char *Weapon = Get_Current_Weapon(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Current_Weapon@@YAPBDPAVScriptableGameObj@@@Z ; Get_Current_Weapon
	add	esp, 4
	mov	DWORD PTR _Weapon$2[ebp], eax

; 3096 : 		if (Weapon)

	cmp	DWORD PTR _Weapon$2[ebp], 0
	je	SHORT $LN3@Custom

; 3097 : 		{
; 3098 : 			Commands->Select_Weapon(obj,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+136]
	call	edx
	add	esp, 8

; 3099 : 			Commands->Select_Weapon(obj,Weapon);

	mov	eax, DWORD PTR _Weapon$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+136]
	call	eax
	add	esp, 8

; 3100 : 			Commands->Send_Custom_Event(obj,obj,4564564,0,0.1f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	push	0
	push	4564564					; 0045a654H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN3@Custom:

; 3101 : 		}
; 3102 : 	}
; 3103 : 	if (message == 4564564)

	cmp	DWORD PTR _message$[ebp], 4564564	; 0045a654H
	jne	SHORT $LN2@Custom

; 3104 : 	{
; 3105 : 		const char *Weapon = Get_Current_Weapon(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Current_Weapon@@YAPBDPAVScriptableGameObj@@@Z ; Get_Current_Weapon
	add	esp, 4
	mov	DWORD PTR _Weapon$1[ebp], eax

; 3106 : 		if (Weapon)

	cmp	DWORD PTR _Weapon$1[ebp], 0
	je	SHORT $LN1@Custom

; 3107 : 			return;

	jmp	SHORT $LN11@Custom
$LN1@Custom:

; 3108 : 		Commands->Select_Weapon(obj,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+136]
	call	edx
	add	esp, 8

; 3109 : 		Commands->Select_Weapon(obj,Weapon);

	mov	eax, DWORD PTR _Weapon$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+136]
	call	eax
	add	esp, 8
$LN2@Custom:
$LN11@Custom:

; 3110 : 	}
; 3111 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@JMG_CMTB_Renegade_Code@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; JMG_CMTB_Renegade_Code::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_Renegade_Code@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_Renegade_Code@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Renegade_Code::Created, COMDAT
; _this$ = ecx

; 3056 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3057 : 	PlayerPerkSystemControl.FindPlayerPerkList(obj,0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, OFFSET ?PlayerPerkSystemControl@@3VPlayerPerksNodeControlSystem@@A ; PlayerPerkSystemControl
	call	?FindPlayerPerkList@PlayerPerksNodeControlSystem@@QAEXPAVScriptableGameObj@@H@Z ; PlayerPerksNodeControlSystem::FindPlayerPerkList

; 3058 : 	RenCometBustersScoreControl.Get_Current_Player_Score_Node(JmgUtility::JMG_Get_Player_ID(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?JMG_Get_Player_ID@JmgUtility@@SAJPAVScriptableGameObj@@@Z ; JmgUtility::JMG_Get_Player_ID
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node

; 3059 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-ShipShield,77454812,0");

	push	OFFSET ??_C@_0CA@HFHFGBGO@Astrogade?9ShipShield?077454812?00?$AA@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3060 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-ShipCloak,77454813,0");	

	push	OFFSET ??_C@_0BP@HEKCEGON@Astrogade?9ShipCloak?077454813?00?$AA@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3061 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-StartGame,77454814,0");

	push	OFFSET ??_C@_0BP@LPBEJMHI@Astrogade?9StartGame?077454814?00?$AA@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3062 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-ShipBomb,77454815,0");

	push	OFFSET ??_C@_0BO@EIDNLCPG@Astrogade?9ShipBomb?077454815?00?$AA@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3063 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-ShipOvercharge,77454816,0");

	push	OFFSET ??_C@_0CE@FGPPJENK@Astrogade?9ShipOvercharge?07745481@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3064 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-RequestALife,77454817,0");

	push	OFFSET ??_C@_0CC@HDAEAGKJ@Astrogade?9RequestALife?077454817?0@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3065 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-ShipSOSBeacon,77454818,0");

	push	OFFSET ??_C@_0CD@MIFKEDKF@Astrogade?9ShipSOSBeacon?077454818@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3066 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-ShipDrone,77454819,0");

	push	OFFSET ??_C@_0BP@FBFKKKLB@Astrogade?9ShipDrone?077454819?00?$AA@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3067 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-ForfeitLives,77454830,0");

	push	OFFSET ??_C@_0CC@PDFAEJL@Astrogade?9ForfeitLives?077454830?0@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3068 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-UseDroneSwarmCode,77454833,0");

	push	OFFSET ??_C@_0CH@NNJAPLNJ@Astrogade?9UseDroneSwarmCode?07745@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3069 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-OfferLifePlayer0,77454820,0");

	push	OFFSET ??_C@_0CG@PKFPKKIK@Astrogade?9OfferLifePlayer0?077454@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3070 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-OfferLifePlayer1,77454821,0");

	push	OFFSET ??_C@_0CG@JPHFBEGK@Astrogade?9OfferLifePlayer1?077454@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3071 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-OfferLifePlayer2,77454822,0");

	push	OFFSET ??_C@_0CG@DAAKNHEK@Astrogade?9OfferLifePlayer2?077454@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3072 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-OfferLifePlayer3,77454823,0");

	push	OFFSET ??_C@_0CG@FFCAGJKK@Astrogade?9OfferLifePlayer3?077454@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3073 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-OfferLifePlayer4,77454824,0");

	push	OFFSET ??_C@_0CG@LFIEFHEL@Astrogade?9OfferLifePlayer4?077454@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3074 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-OfferLifePlayer5,77454825,0");

	push	OFFSET ??_C@_0CG@NAKOOJKL@Astrogade?9OfferLifePlayer5?077454@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3075 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-OfferLifePlayer6,77454826,0");

	push	OFFSET ??_C@_0CG@HPNBCKIL@Astrogade?9OfferLifePlayer6?077454@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3076 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-OfferLifePlayer7,77454827,0");

	push	OFFSET ??_C@_0CG@BKPLJEGL@Astrogade?9OfferLifePlayer7?077454@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3077 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-OfferLifePlayer8,77454828,0");

	push	OFFSET ??_C@_0CG@GFOIFBAI@Astrogade?9OfferLifePlayer8?077454@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3078 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-OfferLifePlayer9,77454829,0");

	push	OFFSET ??_C@_0CG@MCOPOI@Astrogade?9OfferLifePlayer9?077454@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3079 : 	Commands->Attach_Script(obj,"JFW_Send_Self_Custom_On_Key","Astrogade-KeyListing,7154148,0");

	push	OFFSET ??_C@_0BP@KOEGJBOG@Astrogade?9KeyListing?07154148?00?$AA@
	push	OFFSET ??_C@_0BM@JBKOIDAD@JFW_Send_Self_Custom_On_Key?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 3080 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_CMTB_Renegade_Code@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Renegade_Code::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_Fake_Player_Attach_Script@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_Fake_Player_Attach_Script@@UAEPAXI@Z PROC	; JMG_CMTB_Fake_Player_Attach_Script::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_Fake_Player_Attach_Script@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_Fake_Player_Attach_Script@@UAEPAXI@Z ENDP	; JMG_CMTB_Fake_Player_Attach_Script::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_Fake_Player_Attach_Script@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_Fake_Player_Attach_Script@@UAE@XZ PROC	; JMG_CMTB_Fake_Player_Attach_Script::~JMG_CMTB_Fake_Player_Attach_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_Fake_Player_Attach_Script@@UAE@XZ ENDP	; JMG_CMTB_Fake_Player_Attach_Script::~JMG_CMTB_Fake_Player_Attach_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_Fake_Player_Attach_Script@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_Fake_Player_Attach_Script@@QAE@XZ PROC	; JMG_CMTB_Fake_Player_Attach_Script::JMG_CMTB_Fake_Player_Attach_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_Fake_Player_Attach_Script@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_Fake_Player_Attach_Script@@QAE@XZ ENDP	; JMG_CMTB_Fake_Player_Attach_Script::JMG_CMTB_Fake_Player_Attach_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Killed@JMG_CMTB_Fake_Player_Attach_Script@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
$T1 = -112						; size = 12
$T2 = -100						; size = 12
_Pos$3 = -24						; size = 12
_MyVehicle$ = -12					; size = 4
_Player$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
?Killed@JMG_CMTB_Fake_Player_Attach_Script@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_CMTB_Fake_Player_Attach_Script::Killed, COMDAT
; _this$ = ecx

; 3034 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 112				; 00000070H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3035 : 	GameObject *Player = Commands->Find_Object(Get_Int_Parameter("MySoldierID"));

	push	OFFSET ??_C@_0M@NCIMLPDC@MySoldierID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	mov	DWORD PTR _Player$[ebp], eax

; 3036 : 	if (!Player)

	cmp	DWORD PTR _Player$[ebp], 0
	jne	SHORT $LN2@Killed

; 3037 : 		return;

	jmp	$LN3@Killed
$LN2@Killed:

; 3038 : 	Fade_Background_Music_Player(Player,"null.mp3",2000,2000);

	push	2000					; 000007d0H
	push	2000					; 000007d0H
	push	OFFSET ??_C@_08ENOAHEPI@null?4mp3?$AA@
	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	call	DWORD PTR ?Fade_Background_Music_Player@@3P6AXPAVScriptableGameObj@@PBDHH@ZA ; Fade_Background_Music_Player
	add	esp, 16					; 00000010H

; 3039 : 	Commands->Set_Model(Player,Get_Model(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Model@@YAPBDPAVScriptableGameObj@@@Z ; Get_Model
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _Player$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+160]
	call	eax
	add	esp, 8

; 3040 : 	MiniGamePlayerControlSystem[Get_Int_Parameter("Number")].FakeSoldierID = 0;

	push	OFFSET ??_C@_06IONACMBM@Number?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+88], 0

; 3041 : 	MiniGamePlayerControlSystem[Get_Int_Parameter("Number")].PlayerID = 0;

	push	OFFSET ??_C@_06IONACMBM@Number?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348], 0

; 3042 : 	MiniGamePlayerControlSystem[Get_Int_Parameter("Number")].GamePlayerID = 0;

	push	OFFSET ??_C@_06IONACMBM@Number?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20], 0

; 3043 : 	GameObject *MyVehicle = Get_Vehicle(Player);

	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	mov	DWORD PTR _MyVehicle$[ebp], eax

; 3044 : 	if (MyVehicle)

	cmp	DWORD PTR _MyVehicle$[ebp], 0
	je	SHORT $LN1@Killed

; 3045 : 	{
; 3046 : 		Vector3 Pos = Commands->Get_Position(MyVehicle);

	mov	eax, DWORD PTR _MyVehicle$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _Pos$3[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 3047 : 		Commands->Set_Position(Player,Pos);

	lea	eax, DWORD PTR _Pos$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _Player$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8

; 3048 : 		Soldier_Transition_Vehicle(Player);

	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	call	?Soldier_Transition_Vehicle@@YAXPAVScriptableGameObj@@@Z ; Soldier_Transition_Vehicle
	add	esp, 4
$LN1@Killed:

; 3049 : 	}
; 3050 : 	Commands->Set_Position(Player,Commands->Get_Position(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _Player$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8

; 3051 : 	Commands->Set_Facing(Player,Commands->Get_Facing(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+72]
	call	edx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+76]
	call	edx
	add	esp, 8

; 3052 : 	Commands->Apply_Damage(Player,9999.9f,"BlamoKiller",0);

	push	0
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@461c3f9a
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H

; 3053 : 	Commands->Destroy_Object(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN3@Killed:

; 3054 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@JMG_CMTB_Fake_Player_Attach_Script@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_CMTB_Fake_Player_Attach_Script::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_CMTB_Fake_Player_Attach_Script@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_CMTB_Fake_Player_Attach_Script@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_CMTB_Fake_Player_Attach_Script::Timer_Expired, COMDAT
; _this$ = ecx

; 3025 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3026 : 	if (number == 5436)

	cmp	DWORD PTR _number$[ebp], 5436		; 0000153cH
	jne	SHORT $LN2@Timer_Expi

; 3027 : 	{
; 3028 : 		if (!Commands->Find_Object(Get_Int_Parameter("MySoldierID")))

	push	OFFSET ??_C@_0M@NCIMLPDC@MySoldierID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@Timer_Expi

; 3029 : 			Commands->Destroy_Object(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN1@Timer_Expi:

; 3030 : 		Commands->Start_Timer(obj,this,3.0f,5436);

	push	5436					; 0000153cH
	push	ecx
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN2@Timer_Expi:

; 3031 : 	}
; 3032 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_CMTB_Fake_Player_Attach_Script@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_CMTB_Fake_Player_Attach_Script::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_Fake_Player_Attach_Script@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_Fake_Player_Attach_Script@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Fake_Player_Attach_Script::Created, COMDAT
; _this$ = ecx

; 3021 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3022 : 	Commands->Start_Timer(obj,this,3.0f,5436);

	push	5436					; 0000153cH
	push	ecx
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 3023 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_CMTB_Fake_Player_Attach_Script@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Fake_Player_Attach_Script::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_Arcade_Machine@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_Arcade_Machine@@UAEPAXI@Z PROC		; JMG_CMTB_Arcade_Machine::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_Arcade_Machine@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_Arcade_Machine@@UAEPAXI@Z ENDP		; JMG_CMTB_Arcade_Machine::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_Arcade_Machine@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_Arcade_Machine@@UAE@XZ PROC			; JMG_CMTB_Arcade_Machine::~JMG_CMTB_Arcade_Machine, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_Arcade_Machine@@UAE@XZ ENDP			; JMG_CMTB_Arcade_Machine::~JMG_CMTB_Arcade_Machine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_Arcade_Machine@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_Arcade_Machine@@QAE@XZ PROC			; JMG_CMTB_Arcade_Machine::JMG_CMTB_Arcade_Machine, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_Arcade_Machine@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_Arcade_Machine@@QAE@XZ ENDP			; JMG_CMTB_Arcade_Machine::JMG_CMTB_Arcade_Machine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Poked@JMG_CMTB_Arcade_Machine@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_poker$ = 12						; size = 4
?Poked@JMG_CMTB_Arcade_Machine@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_CMTB_Arcade_Machine::Poked, COMDAT
; _this$ = ecx

; 3016 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3017 : 	Attach_Script_Once(poker,"JMG_CMTB_Renegade_Code","");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BH@JCPOMNIO@JMG_CMTB_Renegade_Code?$AA@
	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	call	?Attach_Script_Once@@YAXPAVScriptableGameObj@@PBD1@Z ; Attach_Script_Once
	add	esp, 12					; 0000000cH

; 3018 : 	Commands->Send_Custom_Event(poker,Commands->Find_Object(Get_Int_Parameter("ControllerID")),57448,Get_Int_Parameter("MachineNumber"),0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0O@HDKCBMAC@MachineNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	push	57448					; 0000e068H
	push	OFFSET ??_C@_0N@MIAODDCN@ControllerID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _poker$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H

; 3019 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Poked@JMG_CMTB_Arcade_Machine@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_CMTB_Arcade_Machine::Poked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_Arcade_Machine@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_Model$ = -36						; size = 32
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_Arcade_Machine@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Arcade_Machine::Created, COMDAT
; _this$ = ecx

; 3009 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 100				; 00000064H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3010 : 	char Model[32];
; 3011 : 	sprintf(Model,"ArcadeMachine_%d",Get_Int_Parameter("MachineNumber"));

	push	OFFSET ??_C@_0O@HDKCBMAC@MachineNumber?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	push	OFFSET ??_C@_0BB@BMHOELCO@ArcadeMachine_?$CFd?$AA@
	lea	eax, DWORD PTR _Model$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 3012 : 	Commands->Set_Model(obj,Model);

	lea	eax, DWORD PTR _Model$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+160]
	call	eax
	add	esp, 8

; 3013 : 	Commands->Enable_HUD_Pokable_Indicator(obj,true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+780]
	call	edx
	add	esp, 8

; 3014 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_CMTB_Arcade_Machine@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Arcade_Machine::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_Spectator_Object@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_Spectator_Object@@UAEPAXI@Z PROC		; JMG_CMTB_Spectator_Object::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_Spectator_Object@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_Spectator_Object@@UAEPAXI@Z ENDP		; JMG_CMTB_Spectator_Object::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_Spectator_Object@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_Spectator_Object@@UAE@XZ PROC		; JMG_CMTB_Spectator_Object::~JMG_CMTB_Spectator_Object, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_Spectator_Object@@UAE@XZ ENDP		; JMG_CMTB_Spectator_Object::~JMG_CMTB_Spectator_Object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_Spectator_Object@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_Spectator_Object@@QAE@XZ PROC		; JMG_CMTB_Spectator_Object::JMG_CMTB_Spectator_Object, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_Spectator_Object@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_Spectator_Object@@QAE@XZ ENDP		; JMG_CMTB_Spectator_Object::JMG_CMTB_Spectator_Object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?ResetCurrentAbility@JMG_CMTB_Spectator_Object@@AAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_player$ = 8						; size = 4
?ResetCurrentAbility@JMG_CMTB_Spectator_Object@@AAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Spectator_Object::ResetCurrentAbility, COMDAT
; _this$ = ecx

; 3001 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3002 : 	if (_stricmp(MiniGamePlayerControlSystem[machineNumber].PlayerName,Get_Player_Name(player)))

	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?Get_Player_Name@@YAPBDPAVScriptableGameObj@@@Z ; Get_Player_Name
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	imul	edx, 596				; 00000254H
	add	edx, OFFSET ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A+441
	push	edx
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@ResetCurre

; 3003 : 	{
; 3004 : 		MiniGamePlayerControlSystem[machineNumber].SelectedPerk = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+436], 0

; 3005 : 		sprintf(MiniGamePlayerControlSystem[machineNumber].PlayerName,"%s",Get_Player_Name(player));

	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?Get_Player_Name@@YAPBDPAVScriptableGameObj@@@Z ; Get_Player_Name
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	imul	edx, 596				; 00000254H
	add	edx, OFFSET ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A+441
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
$LN2@ResetCurre:

; 3006 : 	}
; 3007 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?ResetCurrentAbility@JMG_CMTB_Spectator_Object@@AAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Spectator_Object::ResetCurrentAbility
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?SpecialAbilitiesList@JMG_CMTB_Spectator_Object@@AAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_player$ = 8						; size = 4
?SpecialAbilitiesList@JMG_CMTB_Spectator_Object@@AAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Spectator_Object::SpecialAbilitiesList, COMDAT
; _this$ = ecx

; 2980 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2981 : 	if (CheckIfPlayerHasPerkUnlocked(player,105))

	push	105					; 00000069H
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?CheckIfPlayerHasPerkUnlocked@@YA_NPAVScriptableGameObj@@H@Z ; CheckIfPlayerHasPerkUnlocked
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@SpecialAbi

; 2982 : 		JmgUtility::DisplayChatMessage(player,200,200,125,"1 - Start the game with an Extra Life and get an additional one every 25 levels.");

	push	OFFSET ??_C@_0FB@KGHIDKIK@1?5?9?5Start?5the?5game?5with?5an?5Extra@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN9@SpecialAbi:

; 2983 : 	if (CheckIfPlayerHasPerkUnlocked(player,106))

	push	106					; 0000006aH
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?CheckIfPlayerHasPerkUnlocked@@YA_NPAVScriptableGameObj@@H@Z ; CheckIfPlayerHasPerkUnlocked
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@SpecialAbi

; 2984 : 		JmgUtility::DisplayChatMessage(player,200,200,125,"2 - Start the game with a fully charged Hyper Drive.");

	push	OFFSET ??_C@_0DF@IJOIHOGC@2?5?9?5Start?5the?5game?5with?5a?5fully?5@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN8@SpecialAbi:

; 2985 : 	if (CheckIfPlayerHasPerkUnlocked(player,107))

	push	107					; 0000006bH
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?CheckIfPlayerHasPerkUnlocked@@YA_NPAVScriptableGameObj@@H@Z ; CheckIfPlayerHasPerkUnlocked
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@SpecialAbi

; 2986 : 		JmgUtility::DisplayChatMessage(player,200,200,125,"3 - 16.5% chance of getting Double Points at the start of each level.");

	push	OFFSET ??_C@_0EG@JKIJOEC@3?5?9?516?45?$CF?5chance?5of?5getting?5Doub@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN7@SpecialAbi:

; 2987 : 	if (CheckIfPlayerHasPerkUnlocked(player,108))

	push	108					; 0000006cH
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?CheckIfPlayerHasPerkUnlocked@@YA_NPAVScriptableGameObj@@H@Z ; CheckIfPlayerHasPerkUnlocked
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@SpecialAbi

; 2988 : 		JmgUtility::DisplayChatMessage(player,200,200,125,"4 - 5% chance of getting Energy Regen at the start of each level.");

	push	OFFSET ??_C@_0EC@OHHPJHHI@4?5?9?55?$CF?5chance?5of?5getting?5Energy?5@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN6@SpecialAbi:

; 2989 : 	if (CheckIfPlayerHasPerkUnlocked(player,109))

	push	109					; 0000006dH
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?CheckIfPlayerHasPerkUnlocked@@YA_NPAVScriptableGameObj@@H@Z ; CheckIfPlayerHasPerkUnlocked
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@SpecialAbi

; 2990 : 		JmgUtility::DisplayChatMessage(player,200,200,125,"5 - 5% chance of getting Weapons Upgrade at the start of each level.");

	push	OFFSET ??_C@_0EF@FAMLNKNF@5?5?9?55?$CF?5chance?5of?5getting?5Weapons@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN5@SpecialAbi:

; 2991 : 	if (CheckIfPlayerHasPerkUnlocked(player,110))

	push	110					; 0000006eH
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?CheckIfPlayerHasPerkUnlocked@@YA_NPAVScriptableGameObj@@H@Z ; CheckIfPlayerHasPerkUnlocked
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@SpecialAbi

; 2992 : 		JmgUtility::DisplayChatMessage(player,200,200,125,"6 - 20% chance of being granted a Drone on spawn.");

	push	OFFSET ??_C@_0DC@EPGJIDBL@6?5?9?520?$CF?5chance?5of?5being?5granted?5@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN4@SpecialAbi:

; 2993 : 	if (CheckIfPlayerHasPerkUnlocked(player,111))

	push	111					; 0000006fH
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?CheckIfPlayerHasPerkUnlocked@@YA_NPAVScriptableGameObj@@H@Z ; CheckIfPlayerHasPerkUnlocked
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@SpecialAbi

; 2994 : 		JmgUtility::DisplayChatMessage(player,200,200,125,"7 - 5% chance of being granted a High Explosive Warhead on spawn.");

	push	OFFSET ??_C@_0EC@DHGPLMLE@7?5?9?55?$CF?5chance?5of?5being?5granted?5a@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN3@SpecialAbi:

; 2995 : 	if (CheckIfPlayerHasPerkUnlocked(player,112))

	push	112					; 00000070H
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?CheckIfPlayerHasPerkUnlocked@@YA_NPAVScriptableGameObj@@H@Z ; CheckIfPlayerHasPerkUnlocked
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@SpecialAbi

; 2996 : 		JmgUtility::DisplayChatMessage(player,200,200,125,"8 - 2.5% chance of being granted a SOS Beacon on spawn.");

	push	OFFSET ??_C@_0DI@BBLMAHPA@8?5?9?52?45?$CF?5chance?5of?5being?5granted@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN2@SpecialAbi:

; 2997 : 	if (CheckIfPlayerHasPerkUnlocked(player,113))

	push	113					; 00000071H
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?CheckIfPlayerHasPerkUnlocked@@YA_NPAVScriptableGameObj@@H@Z ; CheckIfPlayerHasPerkUnlocked
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@SpecialAbi

; 2998 : 		JmgUtility::DisplayChatMessage(player,200,200,125,"9 - 2.5% chance of being granted a Drone Swarm on spawn.");

	push	OFFSET ??_C@_0DJ@CMKFKPIC@9?5?9?52?45?$CF?5chance?5of?5being?5granted@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _player$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN10@SpecialAbi:

; 2999 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SpecialAbilitiesList@JMG_CMTB_Spectator_Object@@AAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Spectator_Object::SpecialAbilitiesList
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Custom@JMG_CMTB_Spectator_Object@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
tv495 = -100						; size = 4
tv90 = -100						; size = 4
_selectedPerk$1 = -28					; size = 4
_y$2 = -24						; size = 4
_AvailablePlayers$3 = -20				; size = 4
_FakeSoldier$4 = -16					; size = 4
_x$5 = -12						; size = 4
_hasPerksToSelect$6 = -5				; size = 1
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_message$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@JMG_CMTB_Spectator_Object@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; JMG_CMTB_Spectator_Object::Custom, COMDAT
; _this$ = ecx

; 2840 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 100				; 00000064H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2841 : 	if (message == 7154148)

	cmp	DWORD PTR _message$[ebp], 7154148	; 006d29e4H
	jne	$LN57@Custom

; 2842 : 	{
; 2843 : 		JmgUtility::DisplayChatMessage(sender,200,200,125,"Vehicle Special Keys:");

	push	OFFSET ??_C@_0BG@GIMHFNBL@Vehicle?5Special?5Keys?3?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2844 : 		JmgUtility::DisplayChatMessage(sender,200,200,125,"Spacebar - Vote to start game");

	push	OFFSET ??_C@_0BO@BOIDNEMN@Spacebar?5?9?5Vote?5to?5start?5game?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2845 : 		JmgUtility::DisplayChatMessage(sender,200,200,125,"Page Up - Request a life");

	push	OFFSET ??_C@_0BJ@EKECLBBE@Page?5Up?5?9?5Request?5a?5life?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2846 : 		JmgUtility::DisplayChatMessage(sender,200,200,125,"E - Quit game.");

	push	OFFSET ??_C@_0P@HDJECCFC@E?5?9?5Quit?5game?4?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2847 : 		switch (MiniGamePlayerControlSystem[machineNumber].SelectedPerk)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+436]
	mov	DWORD PTR tv90[ebp], edx
	mov	eax, DWORD PTR tv90[ebp]
	sub	eax, 1
	mov	DWORD PTR tv90[ebp], eax
	cmp	DWORD PTR tv90[ebp], 8
	ja	$LN45@Custom
	mov	ecx, DWORD PTR tv90[ebp]
	jmp	DWORD PTR $LN60@Custom[ecx*4]
$LN54@Custom:

; 2848 : 		{
; 2849 : 		case 1:	JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Extra Life");break;

	push	OFFSET ??_C@_0CF@PHEHLLGF@Selected?5Special?5Ability?3?5Extra?5@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	$LN55@Custom
$LN53@Custom:

; 2850 : 		case 2: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Hyperjump Powerup");break;

	push	OFFSET ??_C@_0CM@OOENGFNH@Selected?5Special?5Ability?3?5Hyperj@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	$LN55@Custom
$LN52@Custom:

; 2851 : 		case 3: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Double Points");break;

	push	OFFSET ??_C@_0CI@HFBFCNOB@Selected?5Special?5Ability?3?5Double@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	$LN55@Custom
$LN51@Custom:

; 2852 : 		case 4: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Energy Regen");break;

	push	OFFSET ??_C@_0CH@ILHHOMJH@Selected?5Special?5Ability?3?5Energy@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	$LN55@Custom
$LN50@Custom:

; 2853 : 		case 5 :JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Weapons Upgrade");break;

	push	OFFSET ??_C@_0CK@BEGAEGLB@Selected?5Special?5Ability?3?5Weapon@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	$LN55@Custom
$LN49@Custom:

; 2854 : 		case 6: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Drone");break;

	push	OFFSET ??_C@_0CA@FCHCAGLH@Selected?5Special?5Ability?3?5Drone?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	SHORT $LN55@Custom
$LN48@Custom:

; 2855 : 		case 7: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: High Explosive Warhead");break;

	push	OFFSET ??_C@_0DB@HFBEIFFK@Selected?5Special?5Ability?3?5High?5E@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	SHORT $LN55@Custom
$LN47@Custom:

; 2856 : 		case 8: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: SOS Beacon");break;

	push	OFFSET ??_C@_0CF@NBLBGGDG@Selected?5Special?5Ability?3?5SOS?5Be@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	SHORT $LN55@Custom
$LN46@Custom:

; 2857 : 		case 9: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Drone Swarm");break;

	push	OFFSET ??_C@_0CG@CMGIACAM@Selected?5Special?5Ability?3?5Drone?5@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	SHORT $LN55@Custom
$LN45@Custom:

; 2858 : 		default: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: None");break;

	push	OFFSET ??_C@_0BP@CNMJDAHL@Selected?5Special?5Ability?3?5None?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN55@Custom:

; 2859 : 		}
; 2860 : 		SpecialAbilitiesList(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SpecialAbilitiesList@JMG_CMTB_Spectator_Object@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Spectator_Object::SpecialAbilitiesList
$LN57@Custom:

; 2861 : 	}
; 2862 : 	if (message == 77454814)

	cmp	DWORD PTR _message$[ebp], 77454814	; 049ddddeH
	jne	$LN44@Custom

; 2863 : 	{
; 2864 : 		ResetCurrentAbility(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ResetCurrentAbility@JMG_CMTB_Spectator_Object@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Spectator_Object::ResetCurrentAbility

; 2865 : 		bool hasPerksToSelect = false;

	mov	BYTE PTR _hasPerksToSelect$6[ebp], 0

; 2866 : 		for (int x = 0;x < 8;x++)

	mov	DWORD PTR _x$5[ebp], 0
	jmp	SHORT $LN43@Custom
$LN42@Custom:
	mov	eax, DWORD PTR _x$5[ebp]
	add	eax, 1
	mov	DWORD PTR _x$5[ebp], eax
$LN43@Custom:
	cmp	DWORD PTR _x$5[ebp], 8
	jge	SHORT $LN41@Custom

; 2867 : 			if (CheckIfPlayerHasPerkUnlocked(sender,105+x))

	mov	eax, DWORD PTR _x$5[ebp]
	add	eax, 105				; 00000069H
	push	eax
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	call	?CheckIfPlayerHasPerkUnlocked@@YA_NPAVScriptableGameObj@@H@Z ; CheckIfPlayerHasPerkUnlocked
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN40@Custom

; 2868 : 			{
; 2869 : 				hasPerksToSelect = true;

	mov	BYTE PTR _hasPerksToSelect$6[ebp], 1

; 2870 : 				break;

	jmp	SHORT $LN41@Custom
$LN40@Custom:

; 2871 : 			}

	jmp	SHORT $LN42@Custom
$LN41@Custom:

; 2872 : 		if (hasPerksToSelect && !MiniGamePlayerControlSystem[machineNumber].SecondSpace && !MiniGamePlayerControlSystem[machineNumber].SelectedPerk)

	movzx	eax, BYTE PTR _hasPerksToSelect$6[ebp]
	test	eax, eax
	je	SHORT $LN39@Custom
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	movzx	edx, BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+440]
	test	edx, edx
	jne	SHORT $LN39@Custom
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+436], 0
	jne	SHORT $LN39@Custom

; 2873 : 		{
; 2874 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"You have special abilities that you could assign, or press space again to start the round:");

	push	OFFSET ??_C@_0FL@NKDBAEEJ@You?5have?5special?5abilities?5that?5@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2875 : 			SpecialAbilitiesList(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SpecialAbilitiesList@JMG_CMTB_Spectator_Object@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Spectator_Object::SpecialAbilitiesList

; 2876 : 			MiniGamePlayerControlSystem[machineNumber].SecondSpace = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+440], 1

; 2877 : 			return;

	jmp	$LN58@Custom
$LN39@Custom:

; 2878 : 		}
; 2879 : 		MiniGamePlayerControlSystem[machineNumber].isReady = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx], 1

; 2880 : 		Commands->Send_Custom_Event(Get_Vehicle_Driver(obj),Commands->Find_Object(Get_Int_Parameter("ControllerID")),57447,0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	57447					; 0000e067H
	push	OFFSET ??_C@_0N@MIAODDCN@ControllerID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H
$LN44@Custom:

; 2881 : 	}
; 2882 : 	if (message == CUSTOM_EVENT_VEHICLE_EXITED)

	cmp	DWORD PTR _message$[ebp], 1000000029	; 3b9aca1dH
	jne	$LN38@Custom

; 2883 : 	{
; 2884 : 		Commands->Set_Position(obj,MiniGamePlayerControlSystem[machineNumber].specCreateSpot);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	add	ecx, OFFSET ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A+580
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+60]
	call	ecx
	add	esp, 8

; 2885 : 		Commands->Enable_Engine(obj,true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+552]
	call	edx
	add	esp, 8

; 2886 : 		Commands->Send_Custom_Event(obj,sender,90000029,1,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	1
	push	90000029				; 055d4a9dH
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 2887 : 		if (!MiniGamePlayerControlSystem[machineNumber].RespawnTime)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+24], 0
	jne	SHORT $LN37@Custom

; 2888 : 			return;

	jmp	$LN58@Custom
$LN37@Custom:

; 2889 : 		Commands->Set_Position(sender,MiniGamePlayerControlSystem[machineNumber].OriginalLocation);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	add	ecx, OFFSET ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A+76
	push	ecx
	mov	edx, DWORD PTR _sender$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+60]
	call	ecx
	add	esp, 8

; 2890 : 		Set_Skin(sender,MiniGamePlayerControlSystem[machineNumber].OriginalSkin);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	add	ecx, OFFSET ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A+92
	push	ecx
	mov	edx, DWORD PTR _sender$[ebp]
	push	edx
	call	?Set_Skin@@YAXPAVScriptableGameObj@@PBD@Z ; Set_Skin
	add	esp, 8

; 2891 : 		Commands->Set_Shield_Type(sender,MiniGamePlayerControlSystem[machineNumber].OriginalArmor);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	add	ecx, OFFSET ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A+220
	push	ecx
	mov	edx, DWORD PTR _sender$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+244]
	call	ecx
	add	esp, 8

; 2892 : 		MiniGamePlayerControlSystem[machineNumber].GamePlayerID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+20], 0

; 2893 : 		MiniGamePlayerControlSystem[machineNumber].PlayerID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+348], 0

; 2894 : 		MiniGamePlayerControlSystem[machineNumber].RespawnTime = 30;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+24], 30 ; 0000001eH

; 2895 : 		GameObject *FakeSoldier = Commands->Find_Object(MiniGamePlayerControlSystem[machineNumber].FakeSoldierID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+88]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	mov	DWORD PTR _FakeSoldier$4[ebp], eax

; 2896 : 		MiniGamePlayerControlSystem[machineNumber].FakeSoldierID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+88], 0

; 2897 : 		if (!FakeSoldier)

	cmp	DWORD PTR _FakeSoldier$4[ebp], 0
	jne	SHORT $LN36@Custom

; 2898 : 			return;

	jmp	$LN58@Custom
$LN36@Custom:

; 2899 : 		Commands->Set_Model(sender,Get_Model(FakeSoldier));

	mov	eax, DWORD PTR _FakeSoldier$4[ebp]
	push	eax
	call	?Get_Model@@YAPBDPAVScriptableGameObj@@@Z ; Get_Model
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+160]
	call	eax
	add	esp, 8

; 2900 : 		Commands->Set_Shield_Strength(sender,Commands->Get_Shield_Strength(FakeSoldier));

	mov	eax, DWORD PTR _FakeSoldier$4[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+232]
	call	edx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+240]
	call	edx
	add	esp, 8

; 2901 : 		Commands->Set_Health(sender,Commands->Get_Health(FakeSoldier));

	mov	eax, DWORD PTR _FakeSoldier$4[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+228]
	call	edx
	add	esp, 8

; 2902 : 		Commands->Destroy_Object(FakeSoldier);

	mov	eax, DWORD PTR _FakeSoldier$4[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4

; 2903 : 		Fade_Background_Music_Player(sender,"null.mp3",2000,2000);

	push	2000					; 000007d0H
	push	2000					; 000007d0H
	push	OFFSET ??_C@_08ENOAHEPI@null?4mp3?$AA@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Fade_Background_Music_Player@@3P6AXPAVScriptableGameObj@@PBDHH@ZA ; Fade_Background_Music_Player
	add	esp, 16					; 00000010H
$LN38@Custom:

; 2904 : 	}
; 2905 : 	if (message == CUSTOM_EVENT_VEHICLE_ENTERED)

	cmp	DWORD PTR _message$[ebp], 1000000028	; 3b9aca1cH
	jne	$LN31@Custom

; 2906 : 	{
; 2907 : 		if (!JMG_CMTB_Main_Game_Control::GameInProgress)

	movzx	eax, BYTE PTR ?GameInProgress@JMG_CMTB_Main_Game_Control@@2_NA ; JMG_CMTB_Main_Game_Control::GameInProgress
	test	eax, eax
	jne	SHORT $LN34@Custom

; 2908 : 			ResetCurrentAbility(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ResetCurrentAbility@JMG_CMTB_Spectator_Object@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Spectator_Object::ResetCurrentAbility
$LN34@Custom:

; 2909 : 		if (MiniGamePlayerControlSystem[machineNumber].RespawnTime > 30)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+24], 30 ; 0000001eH
	jle	SHORT $LN33@Custom

; 2910 : 			MiniGamePlayerControlSystem[machineNumber].RespawnTime = 30;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+24], 30 ; 0000001eH
$LN33@Custom:

; 2911 : 		MiniGamePlayerControlSystem[machineNumber].kickoutOfSpecTime = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+572], 0

; 2912 : 		if (!JMG_CMTB_Main_Game_Control::GameInProgress)

	movzx	eax, BYTE PTR ?GameInProgress@JMG_CMTB_Main_Game_Control@@2_NA ; JMG_CMTB_Main_Game_Control::GameInProgress
	test	eax, eax
	jne	SHORT $LN31@Custom

; 2913 : 			if (!MiniGamePlayerControlSystem[machineNumber].endGamePadding)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+576], 0
	jne	SHORT $LN31@Custom

; 2914 : 			Set_HUD_Help_Text_Player_Text(sender,7233,"Press spacebar to start the game!",Vector3(0.19599999f,1.0f,0.19599999f));

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	push	ecx
	movss	xmm0, DWORD PTR __real@3e48b439
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3e48b439
	movss	DWORD PTR [esp], xmm0
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	OFFSET ??_C@_0CC@KDFPAFOO@Press?5spacebar?5to?5start?5the?5game@
	push	7233					; 00001c41H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Set_HUD_Help_Text_Player_Text@@3P6AXPAVScriptableGameObj@@HPBDVVector3@@@ZA ; Set_HUD_Help_Text_Player_Text
	add	esp, 24					; 00000018H
$LN31@Custom:

; 2915 : 	}
; 2916 : 	if (message == 77454817)

	cmp	DWORD PTR _message$[ebp], 77454817	; 049ddde1H
	jne	$LN16@Custom

; 2917 : 	{
; 2918 : 		if (!JMG_CMTB_Main_Game_Control::GameInProgress)

	movzx	eax, BYTE PTR ?GameInProgress@JMG_CMTB_Main_Game_Control@@2_NA ; JMG_CMTB_Main_Game_Control::GameInProgress
	test	eax, eax
	jne	SHORT $LN29@Custom

; 2919 : 		{
; 2920 : 			JmgUtility::DisplayChatMessage(sender,200,125,200,"A game must be in progress in order to request lives!");

	push	OFFSET ??_C@_0DG@LBDLKGPK@A?5game?5must?5be?5in?5progress?5in?5or@
	push	200					; 000000c8H
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2921 : 			return;

	jmp	$LN58@Custom
$LN29@Custom:

; 2922 : 		}
; 2923 : 		if (MiniGamePlayerControlSystem[machineNumber].SpectatorObject == obj)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+16]
	cmp	edx, DWORD PTR _obj$[ebp]
	jne	$LN16@Custom

; 2924 : 		{
; 2925 : 			if (PlayerRequestingALife[machineNumber])

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR ?PlayerRequestingALife@@3PA_NA[ecx]
	test	edx, edx
	je	SHORT $LN27@Custom

; 2926 : 			{
; 2927 : 				JmgUtility::DisplayChatMessage(sender,200,125,200,"Your request for a life has been withdrawn!");

	push	OFFSET ??_C@_0CM@LHGCIFLP@Your?5request?5for?5a?5life?5has?5been@
	push	200					; 000000c8H
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2928 : 				PlayerRequestingALife[machineNumber] = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	BYTE PTR ?PlayerRequestingALife@@3PA_NA[ecx], 0
	jmp	$LN16@Custom
$LN27@Custom:

; 2929 : 			}
; 2930 : 			else if (!MiniGamePlayerControlSystem[machineNumber].NumberOfLives && !MiniGamePlayerControlSystem[machineNumber].PlayerShip)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+4], 0
	jne	$LN25@Custom
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+8], 0
	jne	$LN25@Custom

; 2931 : 			{
; 2932 : 				int AvailablePlayers = 0;

	mov	DWORD PTR _AvailablePlayers$3[ebp], 0

; 2933 : 				for (int y = 0;y < MaxGamePlayerCount;y++)

	mov	DWORD PTR _y$2[ebp], 0
	jmp	SHORT $LN24@Custom
$LN23@Custom:
	mov	eax, DWORD PTR _y$2[ebp]
	add	eax, 1
	mov	DWORD PTR _y$2[ebp], eax
$LN24@Custom:
	cmp	DWORD PTR _y$2[ebp], 8
	jge	SHORT $LN22@Custom

; 2934 : 					if ((MiniGamePlayerControlSystem[y].NumberOfLives && MiniGamePlayerControlSystem[y].PlayerShip) || (!MiniGamePlayerControlSystem[y].PlayerShip && MiniGamePlayerControlSystem[y].NumberOfLives > 1))

	mov	eax, DWORD PTR _y$2[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4], 0
	je	SHORT $LN19@Custom
	mov	eax, DWORD PTR _y$2[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8], 0
	jne	SHORT $LN20@Custom
$LN19@Custom:
	mov	eax, DWORD PTR _y$2[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8], 0
	jne	SHORT $LN21@Custom
	mov	eax, DWORD PTR _y$2[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4], 1
	jle	SHORT $LN21@Custom
$LN20@Custom:

; 2935 : 						AvailablePlayers++;

	mov	eax, DWORD PTR _AvailablePlayers$3[ebp]
	add	eax, 1
	mov	DWORD PTR _AvailablePlayers$3[ebp], eax
$LN21@Custom:

; 2936 : 				if (AvailablePlayers)

	jmp	SHORT $LN23@Custom
$LN22@Custom:
	cmp	DWORD PTR _AvailablePlayers$3[ebp], 0
	je	SHORT $LN18@Custom

; 2937 : 				{
; 2938 : 					RequestLifeDelay = 5;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 5

; 2939 : 					PlayerRequestingALife[machineNumber] = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	BYTE PTR ?PlayerRequestingALife@@3PA_NA[ecx], 1

; 2940 : 					JmgUtility::DisplayChatMessage(sender,200,125,200,"Your request for a life has been dispatched to the other players in game!");

	push	OFFSET ??_C@_0EK@NJFPICI@Your?5request?5for?5a?5life?5has?5been@
	push	200					; 000000c8H
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2941 : 				}
; 2942 : 				else

	jmp	SHORT $LN17@Custom
$LN18@Custom:

; 2943 : 					JmgUtility::DisplayChatMessage(sender,200,125,200,"Sorry, no one in game has any lives to spare!");

	push	OFFSET ??_C@_0CO@OHLHLMME@Sorry?0?5no?5one?5in?5game?5has?5any?5li@
	push	200					; 000000c8H
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN17@Custom:

; 2944 : 			}
; 2945 : 			else

	jmp	SHORT $LN16@Custom
$LN25@Custom:

; 2946 : 				JmgUtility::DisplayChatMessage(sender,200,125,200,"Sorry, you must be out of lives before you can request more!");

	push	OFFSET ??_C@_0DN@ENGMNJLA@Sorry?0?5you?5must?5be?5out?5of?5lives?5@
	push	200					; 000000c8H
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN16@Custom:

; 2947 : 		}
; 2948 : 	}
; 2949 : 	if (message >= 77454820 && message <= 77454829)

	cmp	DWORD PTR _message$[ebp], 77454820	; 049ddde4H
	jl	$LN11@Custom
	cmp	DWORD PTR _message$[ebp], 77454829	; 049dddedH
	jg	$LN11@Custom

; 2950 : 	{
; 2951 : 		if (JMG_CMTB_Main_Game_Control::GameInProgress)

	movzx	eax, BYTE PTR ?GameInProgress@JMG_CMTB_Main_Game_Control@@2_NA ; JMG_CMTB_Main_Game_Control::GameInProgress
	test	eax, eax
	je	SHORT $LN14@Custom

; 2952 : 		{
; 2953 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Sorry, you cannot change your special ability once the game is in progress.");

	push	OFFSET ??_C@_0EM@PNECEIBN@Sorry?0?5you?5cannot?5change?5your?5sp@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2954 : 			return;

	jmp	$LN58@Custom
$LN14@Custom:

; 2955 : 		}
; 2956 : 		ResetCurrentAbility(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ResetCurrentAbility@JMG_CMTB_Spectator_Object@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Spectator_Object::ResetCurrentAbility

; 2957 : 		int selectedPerk = message-77454820;

	mov	eax, DWORD PTR _message$[ebp]
	sub	eax, 77454820				; 049ddde4H
	mov	DWORD PTR _selectedPerk$1[ebp], eax

; 2958 : 		if (!CheckIfPlayerHasPerkUnlocked(sender,104+selectedPerk))

	mov	eax, DWORD PTR _selectedPerk$1[ebp]
	add	eax, 104				; 00000068H
	push	eax
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	call	?CheckIfPlayerHasPerkUnlocked@@YA_NPAVScriptableGameObj@@H@Z ; CheckIfPlayerHasPerkUnlocked
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN13@Custom

; 2959 : 		{
; 2960 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Sorry, you do not have that perk unlocked yet!");

	push	OFFSET ??_C@_0CP@HAABCCHK@Sorry?0?5you?5do?5not?5have?5that?5perk@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2961 : 			return;

	jmp	$LN58@Custom
$LN13@Custom:

; 2962 : 		}
; 2963 : 		MiniGamePlayerControlSystem[machineNumber].SelectedPerk = selectedPerk;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR _selectedPerk$1[ebp]
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+436], edx

; 2964 : 		switch (MiniGamePlayerControlSystem[machineNumber].SelectedPerk)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+436]
	mov	DWORD PTR tv495[ebp], edx
	mov	eax, DWORD PTR tv495[ebp]
	sub	eax, 1
	mov	DWORD PTR tv495[ebp], eax
	cmp	DWORD PTR tv495[ebp], 8
	ja	$LN1@Custom
	mov	ecx, DWORD PTR tv495[ebp]
	jmp	DWORD PTR $LN61@Custom[ecx*4]
$LN10@Custom:

; 2965 : 		{
; 2966 : 		case 1:	JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Extra Life");break;

	push	OFFSET ??_C@_0CF@PHEHLLGF@Selected?5Special?5Ability?3?5Extra?5@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	$LN11@Custom
$LN9@Custom:

; 2967 : 		case 2: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Hyperjump Powerup");break;

	push	OFFSET ??_C@_0CM@OOENGFNH@Selected?5Special?5Ability?3?5Hyperj@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	$LN11@Custom
$LN8@Custom:

; 2968 : 		case 3: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Double Points");break;

	push	OFFSET ??_C@_0CI@HFBFCNOB@Selected?5Special?5Ability?3?5Double@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	$LN11@Custom
$LN7@Custom:

; 2969 : 		case 4: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Energy Regen");break;

	push	OFFSET ??_C@_0CH@ILHHOMJH@Selected?5Special?5Ability?3?5Energy@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	$LN11@Custom
$LN6@Custom:

; 2970 : 		case 5 :JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Weapons Upgrade");break;

	push	OFFSET ??_C@_0CK@BEGAEGLB@Selected?5Special?5Ability?3?5Weapon@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	$LN11@Custom
$LN5@Custom:

; 2971 : 		case 6: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Drone");break;

	push	OFFSET ??_C@_0CA@FCHCAGLH@Selected?5Special?5Ability?3?5Drone?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	SHORT $LN11@Custom
$LN4@Custom:

; 2972 : 		case 7: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: High Explosive Warhead");break;

	push	OFFSET ??_C@_0DB@HFBEIFFK@Selected?5Special?5Ability?3?5High?5E@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	SHORT $LN11@Custom
$LN3@Custom:

; 2973 : 		case 8: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: SOS Beacon");break;

	push	OFFSET ??_C@_0CF@NBLBGGDG@Selected?5Special?5Ability?3?5SOS?5Be@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	SHORT $LN11@Custom
$LN2@Custom:

; 2974 : 		case 9: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Drone Swarm");break;

	push	OFFSET ??_C@_0CG@CMGIACAM@Selected?5Special?5Ability?3?5Drone?5@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	SHORT $LN11@Custom
$LN1@Custom:

; 2975 : 		default: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: None");break;

	push	OFFSET ??_C@_0BP@CNMJDAHL@Selected?5Special?5Ability?3?5None?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN11@Custom:
$LN58@Custom:

; 2976 : 		}
; 2977 : 	}
; 2978 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN60@Custom:
	DD	$LN54@Custom
	DD	$LN53@Custom
	DD	$LN52@Custom
	DD	$LN51@Custom
	DD	$LN50@Custom
	DD	$LN49@Custom
	DD	$LN48@Custom
	DD	$LN47@Custom
	DD	$LN46@Custom
$LN61@Custom:
	DD	$LN10@Custom
	DD	$LN9@Custom
	DD	$LN8@Custom
	DD	$LN7@Custom
	DD	$LN6@Custom
	DD	$LN5@Custom
	DD	$LN4@Custom
	DD	$LN3@Custom
	DD	$LN2@Custom
?Custom@JMG_CMTB_Spectator_Object@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; JMG_CMTB_Spectator_Object::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_CMTB_Spectator_Object@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_kickoutMsg$1 = -468					; size = 220
_x$2 = -248						; size = 4
_readyPlayers$3 = -241					; size = 1
_player$4 = -240					; size = 4
_LifeMsg$5 = -236					; size = 220
_TempPlayer$6 = -16					; size = 4
_x$7 = -12						; size = 4
_Player$8 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_CMTB_Spectator_Object@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_CMTB_Spectator_Object::Timer_Expired, COMDAT
; _this$ = ecx

; 2780 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 536				; 00000218H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2781 : 	if (number == 5436)

	cmp	DWORD PTR _number$[ebp], 5436		; 0000153cH
	jne	$LN22@Timer_Expi

; 2782 : 	{
; 2783 : 		if (RequestLifeDelay && PlayerRequestingALife[machineNumber])

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	$LN15@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	movzx	edx, BYTE PTR ?PlayerRequestingALife@@3PA_NA[ecx]
	test	edx, edx
	je	$LN15@Timer_Expi

; 2784 : 		{
; 2785 : 			GameObject *Player = Commands->Find_Object(MiniGamePlayerControlSystem[machineNumber].GamePlayerID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+20]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	mov	DWORD PTR _Player$8[ebp], eax

; 2786 : 			if (!Player)

	cmp	DWORD PTR _Player$8[ebp], 0
	jne	SHORT $LN20@Timer_Expi

; 2787 : 				PlayerRequestingALife[machineNumber] = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	BYTE PTR ?PlayerRequestingALife@@3PA_NA[ecx], 0

; 2788 : 			else

	jmp	$LN15@Timer_Expi
$LN20@Timer_Expi:

; 2789 : 			{
; 2790 : 				RequestLifeDelay--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], ecx

; 2791 : 				if (!RequestLifeDelay)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	$LN15@Timer_Expi

; 2792 : 				{
; 2793 : 					RequestLifeDelay = 20;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 20			; 00000014H

; 2794 : 					for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$7[ebp], 0
	jmp	SHORT $LN17@Timer_Expi
$LN16@Timer_Expi:
	mov	eax, DWORD PTR _x$7[ebp]
	add	eax, 1
	mov	DWORD PTR _x$7[ebp], eax
$LN17@Timer_Expi:
	cmp	DWORD PTR _x$7[ebp], 8
	jge	$LN15@Timer_Expi

; 2795 : 					{
; 2796 : 						GameObject *TempPlayer = Commands->Find_Object(MiniGamePlayerControlSystem[x].GamePlayerID);

	mov	eax, DWORD PTR _x$7[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _TempPlayer$6[ebp], eax

; 2797 : 						if (TempPlayer && (MiniGamePlayerControlSystem[x].NumberOfLives && MiniGamePlayerControlSystem[x].PlayerShip) || (!MiniGamePlayerControlSystem[x].PlayerShip && MiniGamePlayerControlSystem[x].NumberOfLives > 1))

	cmp	DWORD PTR _TempPlayer$6[ebp], 0
	je	SHORT $LN11@Timer_Expi
	mov	eax, DWORD PTR _x$7[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4], 0
	je	SHORT $LN11@Timer_Expi
	mov	eax, DWORD PTR _x$7[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8], 0
	jne	SHORT $LN13@Timer_Expi
$LN11@Timer_Expi:
	mov	eax, DWORD PTR _x$7[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8], 0
	jne	SHORT $LN14@Timer_Expi
	mov	eax, DWORD PTR _x$7[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4], 1
	jle	SHORT $LN14@Timer_Expi
$LN13@Timer_Expi:

; 2798 : 						{
; 2799 : 							char LifeMsg[220];
; 2800 : 							sprintf(LifeMsg,"%s is out of lives, you can give them one of you own by pressing the ShipPlayer%d key!",Get_Player_Name_By_ID(MiniGamePlayerControlSystem[machineNumber].PlayerID),machineNumber);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	call	?Get_Player_Name_By_ID@@YAPBDH@Z	; Get_Player_Name_By_ID
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0FH@IIPKLMKK@?$CFs?5is?5out?5of?5lives?0?5you?5can?5give@
	lea	edx, DWORD PTR _LifeMsg$5[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 2801 : 							JmgUtility::DisplayChatMessage(TempPlayer,200,125,200,LifeMsg);

	lea	eax, DWORD PTR _LifeMsg$5[ebp]
	push	eax
	push	200					; 000000c8H
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	ecx, DWORD PTR _TempPlayer$6[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN14@Timer_Expi:

; 2802 : 						}
; 2803 : 					}

	jmp	$LN16@Timer_Expi
$LN15@Timer_Expi:

; 2804 : 				}
; 2805 : 			}
; 2806 : 		}
; 2807 : 		if (MiniGamePlayerControlSystem[machineNumber].endGamePadding)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+576], 0
	je	SHORT $LN10@Timer_Expi

; 2808 : 			MiniGamePlayerControlSystem[machineNumber].endGamePadding--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+576]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+576], edx
$LN10@Timer_Expi:

; 2809 : 		if (!JMG_CMTB_Main_Game_Control::GameInProgress)

	movzx	eax, BYTE PTR ?GameInProgress@JMG_CMTB_Main_Game_Control@@2_NA ; JMG_CMTB_Main_Game_Control::GameInProgress
	test	eax, eax
	jne	$LN1@Timer_Expi

; 2810 : 		{
; 2811 : 			GameObject *player = Get_Vehicle_Driver(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	mov	DWORD PTR _player$4[ebp], eax

; 2812 : 			if (player)

	cmp	DWORD PTR _player$4[ebp], 0
	je	$LN1@Timer_Expi

; 2813 : 			{
; 2814 : 				bool readyPlayers = false;

	mov	BYTE PTR _readyPlayers$3[ebp], 0

; 2815 : 				for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$2[ebp], 0
	jmp	SHORT $LN7@Timer_Expi
$LN6@Timer_Expi:
	mov	eax, DWORD PTR _x$2[ebp]
	add	eax, 1
	mov	DWORD PTR _x$2[ebp], eax
$LN7@Timer_Expi:
	cmp	DWORD PTR _x$2[ebp], 8
	jge	SHORT $LN5@Timer_Expi

; 2816 : 					if (MiniGamePlayerControlSystem[x].isReady)

	mov	eax, DWORD PTR _x$2[ebp]
	imul	eax, 596				; 00000254H
	movzx	ecx, BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax]
	test	ecx, ecx
	je	SHORT $LN4@Timer_Expi

; 2817 : 					{
; 2818 : 						readyPlayers = true;

	mov	BYTE PTR _readyPlayers$3[ebp], 1

; 2819 : 						break;

	jmp	SHORT $LN5@Timer_Expi
$LN4@Timer_Expi:

; 2820 : 					}

	jmp	SHORT $LN6@Timer_Expi
$LN5@Timer_Expi:

; 2821 : 				if (readyPlayers)

	movzx	eax, BYTE PTR _readyPlayers$3[ebp]
	test	eax, eax
	je	$LN1@Timer_Expi

; 2822 : 				{
; 2823 : 					MiniGamePlayerControlSystem[machineNumber].kickoutOfSpecTime++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+572]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+572], edx

; 2824 : 					if (!(MiniGamePlayerControlSystem[machineNumber].kickoutOfSpecTime % 10))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	eax, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+572]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN2@Timer_Expi

; 2825 : 						Set_HUD_Help_Text_Player_Text(player,7233,"Press spacebar to start the game!",Vector3(0.19599999f,1.0f,0.19599999f));

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	push	ecx
	movss	xmm0, DWORD PTR __real@3e48b439
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3e48b439
	movss	DWORD PTR [esp], xmm0
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	OFFSET ??_C@_0CC@KDFPAFOO@Press?5spacebar?5to?5start?5the?5game@
	push	7233					; 00001c41H
	mov	eax, DWORD PTR _player$4[ebp]
	push	eax
	call	DWORD PTR ?Set_HUD_Help_Text_Player_Text@@3P6AXPAVScriptableGameObj@@HPBDVVector3@@@ZA ; Set_HUD_Help_Text_Player_Text
	add	esp, 24					; 00000018H
$LN2@Timer_Expi:

; 2826 : 					if (MiniGamePlayerControlSystem[machineNumber].kickoutOfSpecTime >= 54)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+572], 54 ; 00000036H
	jl	SHORT $LN1@Timer_Expi

; 2827 : 					{
; 2828 : 						char kickoutMsg[220];
; 2829 : 						sprintf(kickoutMsg,"%s has been kicked out of the lobby!",Get_Player_Name(player));

	mov	eax, DWORD PTR _player$4[ebp]
	push	eax
	call	?Get_Player_Name@@YAPBDPAVScriptableGameObj@@@Z ; Get_Player_Name
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0CF@MIOOFHNA@?$CFs?5has?5been?5kicked?5out?5of?5the?5lo@
	lea	ecx, DWORD PTR _kickoutMsg$1[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 2830 : 						JmgUtility::MessageAllPlayers(255,255,128,kickoutMsg);

	lea	eax, DWORD PTR _kickoutMsg$1[ebp]
	push	eax
	push	128					; 00000080H
	push	255					; 000000ffH
	push	255					; 000000ffH
	call	?MessageAllPlayers@JmgUtility@@SAXHHHPBD@Z ; JmgUtility::MessageAllPlayers
	add	esp, 16					; 00000010H

; 2831 : 						Soldier_Transition_Vehicle(player);

	mov	eax, DWORD PTR _player$4[ebp]
	push	eax
	call	?Soldier_Transition_Vehicle@@YAXPAVScriptableGameObj@@@Z ; Soldier_Transition_Vehicle
	add	esp, 4
$LN1@Timer_Expi:

; 2832 : 					}
; 2833 : 				}
; 2834 : 			}
; 2835 : 		}
; 2836 : 		Commands->Start_Timer(obj,this,1.0f,5436);

	push	5436					; 0000153cH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN22@Timer_Expi:

; 2837 : 	}
; 2838 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_CMTB_Spectator_Object@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_CMTB_Spectator_Object::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_Spectator_Object@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_Spectator_Object@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Spectator_Object::Created, COMDAT
; _this$ = ecx

; 2773 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2774 : 	machineNumber = Get_Int_Parameter("Number");

	push	OFFSET ??_C@_06IONACMBM@Number?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax

; 2775 : 	MiniGamePlayerControlSystem[machineNumber].endGamePadding = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+576], 0

; 2776 : 	RequestLifeDelay = 30;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 30			; 0000001eH

; 2777 : 	Commands->Start_Timer(obj,this,1.0f,5436);

	push	5436					; 0000153cH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 2778 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_CMTB_Spectator_Object@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Spectator_Object::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_Zone_Realign_Enter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_Zone_Realign_Enter@@UAEPAXI@Z PROC		; JMG_CMTB_Zone_Realign_Enter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_Zone_Realign_Enter@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_Zone_Realign_Enter@@UAEPAXI@Z ENDP		; JMG_CMTB_Zone_Realign_Enter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_Zone_Realign_Enter@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_Zone_Realign_Enter@@UAE@XZ PROC		; JMG_CMTB_Zone_Realign_Enter::~JMG_CMTB_Zone_Realign_Enter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_Zone_Realign_Enter@@UAE@XZ ENDP		; JMG_CMTB_Zone_Realign_Enter::~JMG_CMTB_Zone_Realign_Enter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_Zone_Realign_Enter@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_Zone_Realign_Enter@@QAE@XZ PROC		; JMG_CMTB_Zone_Realign_Enter::JMG_CMTB_Zone_Realign_Enter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_Zone_Realign_Enter@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_Zone_Realign_Enter@@QAE@XZ ENDP		; JMG_CMTB_Zone_Realign_Enter::JMG_CMTB_Zone_Realign_Enter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Entered@JMG_CMTB_Zone_Realign_Enter@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
$T1 = -168						; size = 12
$T2 = -156						; size = 12
$T3 = -144						; size = 12
$T4 = -132						; size = 12
$T5 = -120						; size = 12
$T6 = -108						; size = 12
$T7 = -96						; size = 12
_Driver$8 = -20						; size = 4
_pos$ = -16						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_enter$ = 12						; size = 4
?Entered@JMG_CMTB_Zone_Realign_Enter@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_CMTB_Zone_Realign_Enter::Entered, COMDAT
; _this$ = ecx

; 2755 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 168				; 000000a8H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2756 : 	Vector3 pos = Commands->Get_Position(enter);

	mov	eax, DWORD PTR _enter$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2757 : 	if (Get_Vector3_Parameter("Position").X)

	push	OFFSET ??_C@_08GCJNLIKG@Position?$AA@
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Vector3_Parameter@ScriptImpClass@@QAE?AVVector3@@PBD@Z ; ScriptImpClass::Get_Vector3_Parameter
	movss	xmm0, DWORD PTR [eax]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN5@Entered

; 2758 : 		pos.X = Get_Vector3_Parameter("Position").X;

	push	OFFSET ??_C@_08GCJNLIKG@Position?$AA@
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Vector3_Parameter@ScriptImpClass@@QAE?AVVector3@@PBD@Z ; ScriptImpClass::Get_Vector3_Parameter
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _pos$[ebp], xmm0
$LN5@Entered:

; 2759 : 	if (Get_Vector3_Parameter("Position").Y)

	push	OFFSET ??_C@_08GCJNLIKG@Position?$AA@
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Vector3_Parameter@ScriptImpClass@@QAE?AVVector3@@PBD@Z ; ScriptImpClass::Get_Vector3_Parameter
	movss	xmm0, DWORD PTR [eax+4]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN4@Entered

; 2760 : 		pos.Y = Get_Vector3_Parameter("Position").Y;

	push	OFFSET ??_C@_08GCJNLIKG@Position?$AA@
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Vector3_Parameter@ScriptImpClass@@QAE?AVVector3@@PBD@Z ; ScriptImpClass::Get_Vector3_Parameter
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR _pos$[ebp+4], xmm0
$LN4@Entered:

; 2761 : 	if (Get_Vector3_Parameter("Position").Z)

	push	OFFSET ??_C@_08GCJNLIKG@Position?$AA@
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Vector3_Parameter@ScriptImpClass@@QAE?AVVector3@@PBD@Z ; ScriptImpClass::Get_Vector3_Parameter
	movss	xmm0, DWORD PTR [eax+8]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN3@Entered

; 2762 : 		pos.Z = Get_Vector3_Parameter("Position").Z;

	push	OFFSET ??_C@_08GCJNLIKG@Position?$AA@
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Vector3_Parameter@ScriptImpClass@@QAE?AVVector3@@PBD@Z ; ScriptImpClass::Get_Vector3_Parameter
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR _pos$[ebp+8], xmm0
$LN3@Entered:

; 2763 : 	Commands->Set_Position(enter,pos);

	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _enter$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8

; 2764 : 	if (Commands->Get_Preset_ID(enter) == 1000000250)

	mov	eax, DWORD PTR _enter$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+112]
	call	edx
	add	esp, 4
	cmp	eax, 1000000250				; 3b9acafaH
	jne	SHORT $LN1@Entered

; 2765 : 	{
; 2766 : 		GameObject *Driver = Get_Vehicle_Driver(enter);

	mov	eax, DWORD PTR _enter$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	mov	DWORD PTR _Driver$8[ebp], eax

; 2767 : 		if (Driver && Commands->Is_A_Star(Driver))

	cmp	DWORD PTR _Driver$8[ebp], 0
	je	SHORT $LN1@Entered
	mov	eax, DWORD PTR _Driver$8[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@Entered

; 2768 : 			Force_Position_Update(enter);

	mov	eax, DWORD PTR _enter$[ebp]
	push	eax
	call	DWORD PTR ?Force_Position_Update@@3P6AXPAVScriptableGameObj@@@ZA ; Force_Position_Update
	add	esp, 4
$LN1@Entered:

; 2769 : 	}
; 2770 : 	Commands->Set_Position(enter,pos);

	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _enter$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8

; 2771 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Entered@JMG_CMTB_Zone_Realign_Enter@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_CMTB_Zone_Realign_Enter::Entered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_Comet_Script@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_Comet_Script@@UAEPAXI@Z PROC		; JMG_CMTB_Comet_Script::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_Comet_Script@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_Comet_Script@@UAEPAXI@Z ENDP		; JMG_CMTB_Comet_Script::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_Comet_Script@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_Comet_Script@@UAE@XZ PROC			; JMG_CMTB_Comet_Script::~JMG_CMTB_Comet_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_Comet_Script@@UAE@XZ ENDP			; JMG_CMTB_Comet_Script::~JMG_CMTB_Comet_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_Comet_Script@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_Comet_Script@@QAE@XZ PROC			; JMG_CMTB_Comet_Script::JMG_CMTB_Comet_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_Comet_Script@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_Comet_Script@@QAE@XZ ENDP			; JMG_CMTB_Comet_Script::JMG_CMTB_Comet_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Destroyed@JMG_CMTB_Comet_Script@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
tv416 = -800						; size = 8
tv338 = -800						; size = 4
tv569 = -796						; size = 4
tv567 = -796						; size = 4
tv298 = -796						; size = 8
tv243 = -796						; size = 4
tv490 = -792						; size = 4
tv450 = -792						; size = 4
tv442 = -792						; size = 4
tv412 = -792						; size = 4
tv394 = -792						; size = 4
tv238 = -792						; size = 4
tv138 = -792						; size = 4
$T1 = -784						; size = 12
$T2 = -772						; size = 12
$T3 = -760						; size = 12
$T4 = -748						; size = 12
$T5 = -736						; size = 12
_BoneName$6 = -660					; size = 32
_BoneName$7 = -628					; size = 32
_Random$8 = -596					; size = 4
_Comet$9 = -592						; size = 4
_x$10 = -588						; size = 4
_params$ = -584						; size = 512
_CometPreset$ = -72					; size = 32
_UsedNumber$ = -40					; size = 4
_mphys$11 = -36						; size = 4
_Mine$12 = -32						; size = 4
_Random$13 = -28					; size = 4
_Pos$14 = -24						; size = 12
_x$15 = -12						; size = 4
_Number$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@JMG_CMTB_Comet_Script@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Comet_Script::Destroyed, COMDAT
; _this$ = ecx

; 2679 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 800				; 00000320H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2680 : 	RenCometBustersList -= obj;

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??ZRenCometBustersGameObjects@@QAEAAV0@PAVScriptableGameObj@@@Z ; RenCometBustersGameObjects::operator-=

; 2681 : 	if (!Get_Int_Parameter("Size"))

	push	OFFSET ??_C@_04EBKMHHBE@Size?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	$LN24@Destroyed

; 2682 : 	{
; 2683 : 		if (Commands->Get_Random_Int(0,100) < 10+(JMG_CMTB_Main_Game_Control::CMTBLevel*0.2))// was originally 0.1 and 8

	push	100					; 00000064H
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	cvtsi2sd xmm0, eax
	mov	edx, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	mov	DWORD PTR tv394[ebp], edx
	cvtsi2sd xmm1, DWORD PTR tv394[ebp]
	mov	eax, DWORD PTR tv394[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	mulsd	xmm1, QWORD PTR __real@3fc999999999999a
	addsd	xmm1, QWORD PTR __real@4024000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN23@Destroyed

; 2684 : 			JMG_CMTB_Random_Ship_Powerup(Commands->Get_Position(obj));

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, -4					; fffffffcH
	mov	ecx, esp
	push	eax
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	call	?JMG_CMTB_Random_Ship_Powerup@@YAPAVScriptableGameObj@@VVector3@@H@Z ; JMG_CMTB_Random_Ship_Powerup
	add	esp, 16					; 00000010H
$LN23@Destroyed:

; 2685 : 		return;

	jmp	$LN25@Destroyed
$LN24@Destroyed:

; 2686 : 	}
; 2687 : 	int Number = 2;

	mov	DWORD PTR _Number$[ebp], 2

; 2688 : 	switch (Get_Int_Parameter("Size"))

	push	OFFSET ??_C@_04EBKMHHBE@Size?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR tv138[ebp], eax
	cmp	DWORD PTR tv138[ebp], 3
	ja	SHORT $LN21@Destroyed
	mov	eax, DWORD PTR tv138[ebp]
	jmp	DWORD PTR $LN33@Destroyed[eax*4]
$LN20@Destroyed:

; 2689 : 	{
; 2690 : 	case 3://Huge
; 2691 : 		Number = 4;

	mov	DWORD PTR _Number$[ebp], 4

; 2692 : 		break;

	jmp	SHORT $LN21@Destroyed
$LN19@Destroyed:

; 2693 : 	case 2://Large
; 2694 : 		Number = 2;

	mov	DWORD PTR _Number$[ebp], 2

; 2695 : 		break;

	jmp	SHORT $LN21@Destroyed
$LN18@Destroyed:

; 2696 : 	case 1://Medium
; 2697 : 		Number = 2;

	mov	DWORD PTR _Number$[ebp], 2

; 2698 : 		break;

	jmp	SHORT $LN21@Destroyed
$LN17@Destroyed:

; 2699 : 	case 0://Small
; 2700 : 		Number = 0;

	mov	DWORD PTR _Number$[ebp], 0
$LN21@Destroyed:

; 2701 : 		break;
; 2702 : 	}
; 2703 : 	if (Get_Int_Parameter("Size") && JMG_CMTB_Main_Game_Control::CMTBLevel > 10 && Commands->Get_Random_Int(0,100) < (5.0f+JMG_CMTB_Main_Game_Control::CMTBLevel*0.1f))

	push	OFFSET ??_C@_04EBKMHHBE@Size?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	$LN13@Destroyed
	cmp	DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA, 10 ; JMG_CMTB_Main_Game_Control::CMTBLevel, 0000000aH
	jbe	$LN13@Destroyed
	push	100					; 00000064H
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	cvtsi2ss xmm0, eax
	mov	edx, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	mov	DWORD PTR tv412[ebp], edx
	cvtsi2sd xmm1, DWORD PTR tv412[ebp]
	mov	eax, DWORD PTR tv412[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv416[ebp], xmm1
	cvtsd2ss xmm1, QWORD PTR tv416[ebp]
	mulss	xmm1, DWORD PTR __real@3dcccccd
	addss	xmm1, DWORD PTR __real@40a00000
	comiss	xmm1, xmm0
	jbe	$LN13@Destroyed

; 2704 : 	{
; 2705 : 		for (int x = 0;x < Get_Int_Parameter("Size")*2;x++)

	mov	DWORD PTR _x$15[ebp], 0
	jmp	SHORT $LN15@Destroyed
$LN14@Destroyed:
	mov	eax, DWORD PTR _x$15[ebp]
	add	eax, 1
	mov	DWORD PTR _x$15[ebp], eax
$LN15@Destroyed:
	push	OFFSET ??_C@_04EBKMHHBE@Size?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	shl	eax, 1
	cmp	DWORD PTR _x$15[ebp], eax
	jge	$LN13@Destroyed

; 2706 : 		{
; 2707 : 			Vector3 Pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _Pos$14[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2708 : 			Pos.Z = 0.25f;

	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR _Pos$14[ebp+8], xmm0

; 2709 : 			float Random = Commands->Get_Random(-180.0f,180.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@43340000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c3340000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR _Random$13[ebp]

; 2710 : 			Pos.X += cos(Random*PI180)*(Get_Int_Parameter("Size")*2.0f);

	movss	xmm0, DWORD PTR _Random$13[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv442[ebp]
	movss	xmm0, DWORD PTR tv442[ebp]
	push	OFFSET ??_C@_04EBKMHHBE@Size?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv567[ebp], xmm0
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR tv567[ebp]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR _Pos$14[ebp]
	movss	DWORD PTR _Pos$14[ebp], xmm1

; 2711 : 			Pos.Y += sin(Random*PI180)*(Get_Int_Parameter("Size")*2.0f);

	movss	xmm0, DWORD PTR _Random$13[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR tv450[ebp]
	movss	xmm0, DWORD PTR tv450[ebp]
	push	OFFSET ??_C@_04EBKMHHBE@Size?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv569[ebp], xmm0
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR tv569[ebp]
	mulss	xmm1, xmm0
	addss	xmm1, DWORD PTR _Pos$14[ebp+4]
	movss	DWORD PTR _Pos$14[ebp+4], xmm1

; 2712 : 			GameObject *Mine = Commands->Create_Object("CMTB_Drone",Pos);

	lea	eax, DWORD PTR _Pos$14[ebp]
	push	eax
	push	OFFSET ??_C@_0L@PFAJEBB@CMTB_Drone?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Mine$12[ebp], eax

; 2713 : 				Commands->Attach_Script(Mine,"JMG_CMTB_Motion_Mine","0");

	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	push	OFFSET ??_C@_0BF@DPFEEIBF@JMG_CMTB_Motion_Mine?$AA@
	mov	eax, DWORD PTR _Mine$12[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 2714 : 			MoveablePhysClass *mphys = Mine->As_PhysicalGameObj() ? Mine->As_PhysicalGameObj()->Peek_Physical_Object()->As_MoveablePhysClass() : NULL;

	mov	eax, DWORD PTR _Mine$12[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _Mine$12[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	test	eax, eax
	je	SHORT $LN27@Destroyed
	mov	ecx, DWORD PTR _Mine$12[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _Mine$12[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	mov	ecx, eax
	call	?Peek_Physical_Object@PhysicalGameObj@@QBEPAVPhysClass@@XZ ; PhysicalGameObj::Peek_Physical_Object
	mov	DWORD PTR tv238[ebp], eax
	mov	ecx, DWORD PTR tv238[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv238[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	mov	DWORD PTR tv243[ebp], eax
	jmp	SHORT $LN28@Destroyed
$LN27@Destroyed:
	mov	DWORD PTR tv243[ebp], 0
$LN28@Destroyed:
	mov	ecx, DWORD PTR tv243[ebp]
	mov	DWORD PTR _mphys$11[ebp], ecx

; 2715 : 			if (mphys)

	cmp	DWORD PTR _mphys$11[ebp], 0
	je	SHORT $LN12@Destroyed

; 2716 : 				mphys->Find_Teleport_Location(Pos,1.0f,&Pos);

	lea	eax, DWORD PTR _Pos$14[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _Pos$14[ebp]
	push	ecx
	mov	edx, DWORD PTR _mphys$11[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _mphys$11[ebp]
	mov	edx, DWORD PTR [eax+232]
	call	edx
$LN12@Destroyed:

; 2717 : 			Commands->Set_Position(Mine,Pos);

	lea	eax, DWORD PTR _Pos$14[ebp]
	push	eax
	mov	ecx, DWORD PTR _Mine$12[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8

; 2718 : 		}

	jmp	$LN14@Destroyed
$LN13@Destroyed:

; 2719 : 	}
; 2720 : 	int UsedNumber = -1;

	mov	DWORD PTR _UsedNumber$[ebp], -1

; 2721 : 	char CometPreset[32];
; 2722 : 	if (Number == 4)

	cmp	DWORD PTR _Number$[ebp], 4
	jne	SHORT $LN11@Destroyed

; 2723 : 		if (Commands->Get_Random(0.0f,1.0f) < 0.5)

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv490[ebp]
	movss	xmm0, DWORD PTR tv490[ebp]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN10@Destroyed

; 2724 : 			sprintf(CometPreset,"Comet%d",Get_Int_Parameter("Size")-2);

	push	OFFSET ??_C@_04EBKMHHBE@Size?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	sub	eax, 2
	push	eax
	push	OFFSET ??_C@_07HOMDCAEO@Comet?$CFd?$AA@
	lea	eax, DWORD PTR _CometPreset$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 2725 : 		else

	jmp	SHORT $LN9@Destroyed
$LN10@Destroyed:

; 2726 : 			Number = 1;

	mov	DWORD PTR _Number$[ebp], 1
$LN9@Destroyed:

; 2727 : 	else

	jmp	SHORT $LN8@Destroyed
$LN11@Destroyed:

; 2728 : 		sprintf(CometPreset,"Comet%d",Get_Int_Parameter("Size")-1);

	push	OFFSET ??_C@_04EBKMHHBE@Size?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	sub	eax, 1
	push	eax
	push	OFFSET ??_C@_07HOMDCAEO@Comet?$CFd?$AA@
	lea	eax, DWORD PTR _CometPreset$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
$LN8@Destroyed:

; 2729 : 	char params[512];
; 2730 : 	sprintf(params,"%d,%.3f %.3f %.3f",Get_Int_Parameter("Size") == 3 ? Get_Int_Parameter("Size")-2 : Get_Int_Parameter("Size")-1,Commands->Get_Position(obj).X,Commands->Get_Position(obj).Y,Get_Int_Parameter("Size") == 3 ? 0.5 : Commands->Get_Position(obj).Z);

	push	OFFSET ??_C@_04EBKMHHBE@Size?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	eax, 3
	jne	SHORT $LN29@Destroyed
	movsd	xmm0, QWORD PTR __real@3fe0000000000000
	movsd	QWORD PTR tv298[ebp], xmm0
	jmp	SHORT $LN30@Destroyed
$LN29@Destroyed:
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	cvtss2sd xmm0, DWORD PTR [eax+8]
	movsd	QWORD PTR tv298[ebp], xmm0
$LN30@Destroyed:
	push	OFFSET ??_C@_04EBKMHHBE@Size?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	eax, 3
	jne	SHORT $LN31@Destroyed
	push	OFFSET ??_C@_04EBKMHHBE@Size?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	sub	eax, 2
	mov	DWORD PTR tv338[ebp], eax
	jmp	SHORT $LN32@Destroyed
$LN31@Destroyed:
	push	OFFSET ??_C@_04EBKMHHBE@Size?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	sub	eax, 1
	mov	DWORD PTR tv338[ebp], eax
$LN32@Destroyed:
	sub	esp, 8
	movsd	xmm0, QWORD PTR tv298[ebp]
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	cvtss2sd xmm0, DWORD PTR [eax+4]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+64]
	call	edx
	add	esp, 8
	cvtss2sd xmm0, DWORD PTR [eax]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR tv338[ebp]
	push	eax
	push	OFFSET ??_C@_0BC@IMNMANMB@?$CFd?0?$CF?43f?5?$CF?43f?5?$CF?43f?$AA@
	lea	ecx, DWORD PTR _params$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 36					; 00000024H

; 2731 : 	for (int x = 0;x < Number;x++)

	mov	DWORD PTR _x$10[ebp], 0
	jmp	SHORT $LN7@Destroyed
$LN6@Destroyed:
	mov	eax, DWORD PTR _x$10[ebp]
	add	eax, 1
	mov	DWORD PTR _x$10[ebp], eax
$LN7@Destroyed:
	mov	eax, DWORD PTR _x$10[ebp]
	cmp	eax, DWORD PTR _Number$[ebp]
	jge	$LN5@Destroyed

; 2732 : 	{
; 2733 : 		GameObject *Comet;
; 2734 : 		if (Number != 4 && Number != 16)

	cmp	DWORD PTR _Number$[ebp], 4
	je	$LN4@Destroyed
	cmp	DWORD PTR _Number$[ebp], 16		; 00000010H
	je	$LN4@Destroyed

; 2735 : 		{
; 2736 : 			int Random = Commands->Get_Random_Int(0,4);

	push	4
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _Random$8[ebp], eax
$LN3@Destroyed:

; 2737 : 			while (Random == UsedNumber)

	mov	eax, DWORD PTR _Random$8[ebp]
	cmp	eax, DWORD PTR _UsedNumber$[ebp]
	jne	SHORT $LN2@Destroyed

; 2738 : 				Random = Commands->Get_Random_Int(0,4);

	push	4
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _Random$8[ebp], eax
	jmp	SHORT $LN3@Destroyed
$LN2@Destroyed:

; 2739 : 			UsedNumber = Random;

	mov	eax, DWORD PTR _Random$8[ebp]
	mov	DWORD PTR _UsedNumber$[ebp], eax

; 2740 : 			char BoneName[32];
; 2741 : 			sprintf(BoneName,"Comet%02d",Random);

	mov	eax, DWORD PTR _Random$8[ebp]
	push	eax
	push	OFFSET ??_C@_09DHIFDLCI@Comet?$CF02d?$AA@
	lea	ecx, DWORD PTR _BoneName$7[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 2742 : 			Comet = Commands->Create_Object_At_Bone(obj,CometPreset,BoneName);

	lea	eax, DWORD PTR _BoneName$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _CometPreset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+104]
	call	ecx
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Comet$9[ebp], eax

; 2743 : 		}
; 2744 : 		else

	jmp	SHORT $LN1@Destroyed
$LN4@Destroyed:

; 2745 : 		{
; 2746 : 			char BoneName[32];
; 2747 : 			sprintf(BoneName,"Comet%02d",x);

	mov	eax, DWORD PTR _x$10[ebp]
	push	eax
	push	OFFSET ??_C@_09DHIFDLCI@Comet?$CF02d?$AA@
	lea	ecx, DWORD PTR _BoneName$6[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 2748 : 			Comet = Commands->Create_Object_At_Bone(obj,CometPreset,BoneName);

	lea	eax, DWORD PTR _BoneName$6[ebp]
	push	eax
	lea	ecx, DWORD PTR _CometPreset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+104]
	call	ecx
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Comet$9[ebp], eax
$LN1@Destroyed:

; 2749 : 		}
; 2750 : 		Commands->Set_Facing(Comet,Commands->Get_Random(-180.0f,180.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@43340000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c3340000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 4
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _Comet$9[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+76]
	call	ecx
	add	esp, 8

; 2751 : 		Commands->Attach_Script(Comet,"JMG_CMTB_Comet_Script",params);

	lea	eax, DWORD PTR _params$[ebp]
	push	eax
	push	OFFSET ??_C@_0BG@BOCOGEON@JMG_CMTB_Comet_Script?$AA@
	mov	ecx, DWORD PTR _Comet$9[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+120]
	call	eax
	add	esp, 12					; 0000000cH

; 2752 : 	}

	jmp	$LN6@Destroyed
$LN5@Destroyed:
$LN25@Destroyed:

; 2753 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN33@Destroyed:
	DD	$LN17@Destroyed
	DD	$LN18@Destroyed
	DD	$LN19@Destroyed
	DD	$LN20@Destroyed
?Destroyed@JMG_CMTB_Comet_Script@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Comet_Script::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Killed@JMG_CMTB_Comet_Script@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
tv71 = -76						; size = 4
_Score$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
?Killed@JMG_CMTB_Comet_Script@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_CMTB_Comet_Script::Killed, COMDAT
; _this$ = ecx

; 2660 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2661 : 	float Score = 0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Score$[ebp], xmm0

; 2662 : 	switch (Get_Int_Parameter("Size"))

	push	OFFSET ??_C@_04EBKMHHBE@Size?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR tv71[ebp], eax
	cmp	DWORD PTR tv71[ebp], 3
	ja	SHORT $LN1@Killed
	mov	eax, DWORD PTR tv71[ebp]
	jmp	DWORD PTR $LN10@Killed[eax*4]
$LN5@Killed:

; 2663 : 	{
; 2664 : 	case 3:
; 2665 : 		Score = 10.0f;break;

	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _Score$[ebp], xmm0
	jmp	SHORT $LN6@Killed
$LN4@Killed:

; 2666 : 	case 2:
; 2667 : 		Score = 20.0f;break;

	movss	xmm0, DWORD PTR __real@41a00000
	movss	DWORD PTR _Score$[ebp], xmm0
	jmp	SHORT $LN6@Killed
$LN3@Killed:

; 2668 : 	case 1:
; 2669 : 		Score = 50.0f;break;

	movss	xmm0, DWORD PTR __real@42480000
	movss	DWORD PTR _Score$[ebp], xmm0
	jmp	SHORT $LN6@Killed
$LN2@Killed:

; 2670 : 	case 0:
; 2671 : 		Score = 100.0f;break;

	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _Score$[ebp], xmm0
	jmp	SHORT $LN6@Killed
$LN1@Killed:

; 2672 : 	default:
; 2673 : 		Score = 0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Score$[ebp], xmm0
$LN6@Killed:

; 2674 : 		break;
; 2675 : 	}
; 2676 : 	RenCometBustersList.GrantScoreToKiller(damager,Score,Asteroid,Get_Int_Parameter("Size"));

	push	OFFSET ??_C@_04EBKMHHBE@Size?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	push	2
	push	ecx
	movss	xmm0, DWORD PTR _Score$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?GrantScoreToKiller@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MW4ObjectType@@H@Z ; RenCometBustersGameObjects::GrantScoreToKiller

; 2677 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN10@Killed:
	DD	$LN2@Killed
	DD	$LN3@Killed
	DD	$LN4@Killed
	DD	$LN5@Killed
?Killed@JMG_CMTB_Comet_Script@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_CMTB_Comet_Script::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_Comet_Script@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
tv148 = -320						; size = 4
tv334 = -316						; size = 8
tv330 = -308						; size = 4
tv325 = -304						; size = 8
tv265 = -300						; size = 4
tv487 = -296						; size = 4
tv321 = -296						; size = 4
tv309 = -296						; size = 4
tv277 = -296						; size = 4
tv260 = -296						; size = 4
tv239 = -296						; size = 4
tv180 = -296						; size = 4
tv138 = -296						; size = 4
$T1 = -292						; size = 12
$T2 = -280						; size = 16
$T3 = -264						; size = 16
$T4 = -248						; size = 16
$T5 = -232						; size = 16
$T6 = -216						; size = 16
_impulse$ = -136					; size = 12
_impulse_pos$ = -124					; size = 12
_muzzle$ = -112						; size = 48
_physicalGameObj$ = -64					; size = 4
_SPOT$ = -60						; size = 4
_Position$ = -56					; size = 12
_impulses$ = -44					; size = 4
_anim$7 = -40						; size = 32
_Random$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_Comet_Script@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Comet_Script::Created, COMDAT
; _this$ = ecx

; 2607 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 320				; 00000140H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2608 : 	int Random = Commands->Get_Random_Int(0,8);

	push	8
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _Random$[ebp], eax

; 2609 : 	if (Random <= 5)

	cmp	DWORD PTR _Random$[ebp], 5
	jg	SHORT $LN10@Created

; 2610 : 	{
; 2611 : 		char anim[32];
; 2612 : 		sprintf(anim,"CometSpin%d.CometSpin%d",Random,Random);

	mov	eax, DWORD PTR _Random$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Random$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BI@CDFHKPGF@CometSpin?$CFd?4CometSpin?$CFd?$AA@
	lea	edx, DWORD PTR _anim$7[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 2613 : 		Commands->Set_Animation(obj,anim,true,0,0,-1,true);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	1
	lea	eax, DWORD PTR _anim$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH
$LN10@Created:

; 2614 : 	}
; 2615 : 	int impulses = 1;

	mov	DWORD PTR _impulses$[ebp], 1

; 2616 : 	if (Commands->Get_Random(0.0f,1.0f) < 0.25f && JMG_CMTB_Main_Game_Control::CMTBLevel)

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv309[ebp]
	movss	xmm0, DWORD PTR __real@3e800000
	comiss	xmm0, DWORD PTR tv309[ebp]
	jbe	$LN9@Created
	cmp	DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA, 0 ; JMG_CMTB_Main_Game_Control::CMTBLevel
	je	SHORT $LN9@Created

; 2617 : 		impulses = max((int)((Commands->Get_Random_Int(0,JMG_CMTB_Main_Game_Control::CMTBLevel)+1)*JMG_CMTB_Main_Game_Control::DifficultyMultiplier),1);

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	push	eax
	push	0
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+152]
	call	edx
	add	esp, 8
	add	eax, 1
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR ?DifficultyMultiplier@JMG_CMTB_Main_Game_Control@@2MA
	cvttss2si eax, xmm0
	cmp	eax, 1
	jle	SHORT $LN13@Created
	mov	ecx, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	push	ecx
	push	0
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+152]
	call	eax
	add	esp, 8
	add	eax, 1
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR ?DifficultyMultiplier@JMG_CMTB_Main_Game_Control@@2MA
	cvttss2si ecx, xmm0
	mov	DWORD PTR tv138[ebp], ecx
	jmp	SHORT $LN14@Created
$LN13@Created:
	mov	DWORD PTR tv138[ebp], 1
$LN14@Created:
	mov	edx, DWORD PTR tv138[ebp]
	mov	DWORD PTR _impulses$[ebp], edx

; 2618 : 	else

	jmp	$LN8@Created
$LN9@Created:

; 2619 : 		impulses = max((int)(JMG_CMTB_Main_Game_Control::CMTBLevel*JMG_CMTB_Main_Game_Control::DifficultyMultiplier),1);

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	mov	DWORD PTR tv321[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv321[ebp]
	mov	ecx, DWORD PTR tv321[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv325[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv325[ebp]
	mulss	xmm0, DWORD PTR ?DifficultyMultiplier@JMG_CMTB_Main_Game_Control@@2MA
	cvttss2si edx, xmm0
	cmp	edx, 1
	jle	SHORT $LN15@Created
	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	mov	DWORD PTR tv330[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv330[ebp]
	mov	ecx, DWORD PTR tv330[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv334[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv334[ebp]
	mulss	xmm0, DWORD PTR ?DifficultyMultiplier@JMG_CMTB_Main_Game_Control@@2MA
	cvttss2si edx, xmm0
	mov	DWORD PTR tv148[ebp], edx
	jmp	SHORT $LN16@Created
$LN15@Created:
	mov	DWORD PTR tv148[ebp], 1
$LN16@Created:
	mov	eax, DWORD PTR tv148[ebp]
	mov	DWORD PTR _impulses$[ebp], eax
$LN8@Created:

; 2620 : 	Vector3 Position = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _Position$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2621 : 	Position.Z = 0.5;

	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR _Position$[ebp+8], xmm0

; 2622 : 	GameObject *SPOT = Commands->Create_Object("Daves Arrow",Position);

	lea	eax, DWORD PTR _Position$[ebp]
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _SPOT$[ebp], eax

; 2623 : 	Commands->Set_Facing(SPOT,Commands->Get_Facing(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+72]
	call	edx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+76]
	call	edx
	add	esp, 8

; 2624 : 	Commands->Attach_To_Object_Bone(obj,SPOT,"origin");

	push	OFFSET ??_C@_06NHCMNMEH@origin?$AA@
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 2625 : 	Commands->Attach_To_Object_Bone(obj,SPOT,"origin");

	push	OFFSET ??_C@_06NHCMNMEH@origin?$AA@
	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 2626 : 	switch (Get_Int_Parameter("Size"))

	push	OFFSET ??_C@_04EBKMHHBE@Size?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR tv180[ebp], eax
	cmp	DWORD PTR tv180[ebp], 4
	ja	$LN6@Created
	mov	eax, DWORD PTR tv180[ebp]
	jmp	DWORD PTR $LN19@Created[eax*4]
$LN5@Created:

; 2627 : 	{
; 2628 : 	case 4:
; 2629 : 		RenCometBustersList += TypeObject(obj,2626.5625f,51.25f,TheMoon);

	push	4
	push	ecx
	movss	xmm0, DWORD PTR __real@424d0000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@45242900
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 2630 : 		break;

	jmp	$LN6@Created
$LN4@Created:

; 2631 : 	case 3:
; 2632 : 		RenCometBustersList += TypeObject(obj,156.25f,12.5f,Asteroid);

	push	2
	push	ecx
	movss	xmm0, DWORD PTR __real@41480000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@431c4000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 2633 : 		break;

	jmp	$LN6@Created
$LN3@Created:

; 2634 : 	case 2:
; 2635 : 		RenCometBustersList += TypeObject(obj,25.0f,5.0f,Asteroid);

	push	2
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@41c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 2636 : 		break;

	jmp	$LN6@Created
$LN2@Created:

; 2637 : 	case 1:
; 2638 : 		RenCometBustersList += TypeObject(obj,6.25f,2.5f,Asteroid);

	push	2
	push	ecx
	movss	xmm0, DWORD PTR __real@40200000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 2639 : 		break;

	jmp	SHORT $LN6@Created
$LN1@Created:

; 2640 : 	case 0:
; 2641 : 		RenCometBustersList += TypeObject(obj,1.5625f,1.25f,Asteroid);

	push	2
	push	ecx
	movss	xmm0, DWORD PTR __real@3fa00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3fc80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T6[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=
$LN6@Created:

; 2642 : 		break;
; 2643 : 	}
; 2644 : 	Commands->Destroy_Object(SPOT);

	mov	eax, DWORD PTR _SPOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4

; 2645 : 
; 2646 : 	PhysicalGameObj *physicalGameObj = obj->As_PhysicalGameObj();

	mov	eax, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	mov	DWORD PTR _physicalGameObj$[ebp], eax

; 2647 : 	Matrix3D muzzle = physicalGameObj->As_ArmedGameObj()->Get_Muzzle();

	mov	eax, DWORD PTR _physicalGameObj$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _physicalGameObj$[ebp]
	mov	eax, DWORD PTR [edx+148]
	call	eax
	mov	DWORD PTR tv239[ebp], eax
	push	0
	mov	ecx, DWORD PTR tv239[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv239[ebp]
	mov	eax, DWORD PTR [edx+176]
	call	eax
	push	eax
	lea	ecx, DWORD PTR _muzzle$[ebp]
	call	??0Matrix3D@@QAE@ABV0@@Z		; Matrix3D::Matrix3D

; 2648 : 	Vector3 impulse_pos;

	lea	ecx, DWORD PTR _impulse_pos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 2649 : 	muzzle.Get_Translation(&impulse_pos);

	lea	eax, DWORD PTR _impulse_pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _muzzle$[ebp]
	call	?Get_Translation@Matrix3D@@QBEXPAVVector3@@@Z ; Matrix3D::Get_Translation

; 2650 : 	Vector3 impulse;

	lea	ecx, DWORD PTR _impulse$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 2651 : 	muzzle.Get_X_Vector(&impulse);

	lea	eax, DWORD PTR _impulse$[ebp]
	push	eax
	lea	ecx, DWORD PTR _muzzle$[ebp]
	call	?Get_X_Vector@Matrix3D@@QBEXPAVVector3@@@Z ; Matrix3D::Get_X_Vector

; 2652 : 	impulse *= Get_Mass(obj)*-0.630f*impulses;

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Mass@@YAMPAVScriptableGameObj@@@Z	; Get_Mass
	add	esp, 4
	fstp	DWORD PTR tv487[ebp]
	movss	xmm0, DWORD PTR tv487[ebp]
	mulss	xmm0, DWORD PTR __real@bf2147ae
	cvtsi2ss xmm1, DWORD PTR _impulses$[ebp]
	mulss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _impulse$[ebp]
	call	??XVector3@@QAEAAV0@M@Z			; Vector3::operator*=

; 2653 : 	physicalGameObj->Peek_Physical_Object()->As_RigidBodyClass()->Apply_Impulse(impulse,impulse_pos);

	mov	ecx, DWORD PTR _physicalGameObj$[ebp]
	call	?Peek_Physical_Object@PhysicalGameObj@@QBEPAVPhysClass@@XZ ; PhysicalGameObj::Peek_Physical_Object
	mov	DWORD PTR tv260[ebp], eax
	mov	eax, DWORD PTR tv260[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv260[ebp]
	mov	eax, DWORD PTR [edx+120]
	call	eax
	mov	DWORD PTR tv265[ebp], eax
	lea	ecx, DWORD PTR _impulse_pos$[ebp]
	push	ecx
	lea	edx, DWORD PTR _impulse$[ebp]
	push	edx
	mov	eax, DWORD PTR tv265[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv265[ebp]
	mov	eax, DWORD PTR [edx+268]
	call	eax

; 2654 : 	Force_Position_Update(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Force_Position_Update@@3P6AXPAVScriptableGameObj@@@ZA ; Force_Position_Update
	add	esp, 4

; 2655 : 	Force_Orientation_Update(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Force_Orientation_Update@@3P6AXPAVScriptableGameObj@@@ZA ; Force_Orientation_Update
	add	esp, 4

; 2656 : 	Force_Velocity_Update(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Force_Velocity_Update@@3P6AXPAVScriptableGameObj@@@ZA ; Force_Velocity_Update
	add	esp, 4

; 2657 : 	Update_Network_Object(obj);

	cmp	DWORD PTR _obj$[ebp], 0
	je	SHORT $LN17@Created
	mov	eax, DWORD PTR _obj$[ebp]
	add	eax, 8
	mov	DWORD PTR tv277[ebp], eax
	jmp	SHORT $LN18@Created
$LN17@Created:
	mov	DWORD PTR tv277[ebp], 0
$LN18@Created:
	mov	ecx, DWORD PTR tv277[ebp]
	push	ecx
	call	DWORD PTR ?Update_Network_Object@@3P6AXPAVNetworkObjectClass@@@ZA ; Update_Network_Object
	add	esp, 4

; 2658 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN19@Created:
	DD	$LN1@Created
	DD	$LN2@Created
	DD	$LN3@Created
	DD	$LN4@Created
	DD	$LN5@Created
?Created@JMG_CMTB_Comet_Script@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Comet_Script::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_Ship_Control_Script@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_Ship_Control_Script@@UAEPAXI@Z PROC	; JMG_CMTB_Ship_Control_Script::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_Ship_Control_Script@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_Ship_Control_Script@@UAEPAXI@Z ENDP	; JMG_CMTB_Ship_Control_Script::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_Ship_Control_Script@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_Ship_Control_Script@@UAE@XZ PROC		; JMG_CMTB_Ship_Control_Script::~JMG_CMTB_Ship_Control_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_Ship_Control_Script@@UAE@XZ ENDP		; JMG_CMTB_Ship_Control_Script::~JMG_CMTB_Ship_Control_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_Ship_Control_Script@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_Ship_Control_Script@@QAE@XZ PROC		; JMG_CMTB_Ship_Control_Script::JMG_CMTB_Ship_Control_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_Ship_Control_Script@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_Ship_Control_Script@@QAE@XZ ENDP		; JMG_CMTB_Ship_Control_Script::JMG_CMTB_Ship_Control_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?ReturnToNormalState@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_x$1 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?ReturnToNormalState@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Ship_Control_Script::ReturnToNormalState, COMDAT
; _this$ = ecx

; 2592 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2593 : 	for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$1[ebp], 0
	jmp	SHORT $LN6@ReturnToNo
$LN5@ReturnToNo:
	mov	eax, DWORD PTR _x$1[ebp]
	add	eax, 1
	mov	DWORD PTR _x$1[ebp], eax
$LN6@ReturnToNo:
	cmp	DWORD PTR _x$1[ebp], 8
	jge	SHORT $LN7@ReturnToNo

; 2594 : 		if (MiniGamePlayerControlSystem[x].PlayerShip == obj)

	mov	eax, DWORD PTR _x$1[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	SHORT $LN3@ReturnToNo

; 2595 : 			if (MiniGamePlayerControlSystem[x].HyperspaceDriveCharge)

	mov	eax, DWORD PTR _x$1[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+432], 0
	je	SHORT $LN2@ReturnToNo

; 2596 : 			{
; 2597 : 				MyObject->Type = PlayerShipJumpable;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR [ecx+16], 14			; 0000000eH

; 2598 : 				break;

	jmp	SHORT $LN7@ReturnToNo

; 2599 : 			}
; 2600 : 			else

	jmp	SHORT $LN3@ReturnToNo
$LN2@ReturnToNo:

; 2601 : 			{
; 2602 : 				MyObject->Type = NormalPlayerShip;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR [ecx+16], 0

; 2603 : 				break;

	jmp	SHORT $LN7@ReturnToNo
$LN3@ReturnToNo:

; 2604 : 			}
; 2605 : }

	jmp	SHORT $LN5@ReturnToNo
$LN7@ReturnToNo:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?ReturnToNormalState@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Ship_Control_Script::ReturnToNormalState
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?DrainPower@JMG_CMTB_Ship_Control_Script@@AAE_NPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
tv88 = -80						; size = 4
_x$1 = -12						; size = 4
_Player$2 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_Drain$ = 12						; size = 4
?DrainPower@JMG_CMTB_Ship_Control_Script@@AAE_NPAVScriptableGameObj@@H@Z PROC ; JMG_CMTB_Ship_Control_Script::DrainPower, COMDAT
; _this$ = ecx

; 2563 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2564 : 	if (Power)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	$LN8@DrainPower

; 2565 : 	{
; 2566 : 		Power -= Drain;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	sub	ecx, DWORD PTR _Drain$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], ecx

; 2567 : 		if (Power <= 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jg	$LN8@DrainPower

; 2568 : 		{
; 2569 : 			Power = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0

; 2570 : 			GameObject *Player = Get_Vehicle_Driver(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	mov	DWORD PTR _Player$2[ebp], eax

; 2571 : 			if (Player)

	cmp	DWORD PTR _Player$2[ebp], 0
	je	$LN6@DrainPower

; 2572 : 			{
; 2573 : 				for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$1[ebp], 0
	jmp	SHORT $LN5@DrainPower
$LN4@DrainPower:
	mov	eax, DWORD PTR _x$1[ebp]
	add	eax, 1
	mov	DWORD PTR _x$1[ebp], eax
$LN5@DrainPower:
	cmp	DWORD PTR _x$1[ebp], 8
	jge	SHORT $LN3@DrainPower

; 2574 : 					if (MiniGamePlayerControlSystem[x].PlayerShip == obj)

	mov	eax, DWORD PTR _x$1[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	SHORT $LN2@DrainPower

; 2575 : 						RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->RanOutOfPowerCount++;

	mov	eax, DWORD PTR _x$1[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 428				; 000001acH
	mov	DWORD PTR tv88[ebp], eax
	mov	edx, DWORD PTR tv88[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv88[ebp]
	mov	DWORD PTR [ecx], eax
$LN2@DrainPower:

; 2576 : 				JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),200,200,125,"Power levels critical! Deactivating auxiliary systems!");

	jmp	SHORT $LN4@DrainPower
$LN3@DrainPower:
	push	OFFSET ??_C@_0DH@GNDCJBOI@Power?5levels?5critical?$CB?5Deactivat@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2577 : 				Create_2D_Sound_Player(Get_Vehicle_Driver(obj),"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 2578 : 				if (OverPoweredWeapons)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+108]
	test	ecx, ecx
	je	SHORT $LN6@DrainPower

; 2579 : 				{
; 2580 : 					ChangingWeapons = 8;

	mov	eax, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+110], ax

; 2581 : 					Set_Current_Bullets(obj,0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Bullets
	add	esp, 8

; 2582 : 					Set_Current_Clip_Bullets(obj,0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8

; 2583 : 					OverPoweredWeapons = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+108], 0
$LN6@DrainPower:

; 2584 : 				}
; 2585 : 			}
; 2586 : 			return true;

	mov	al, 1
	jmp	SHORT $LN9@DrainPower
$LN8@DrainPower:

; 2587 : 		}
; 2588 : 	}
; 2589 : 	return false;

	xor	al, al
$LN9@DrainPower:

; 2590 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?DrainPower@JMG_CMTB_Ship_Control_Script@@AAE_NPAVScriptableGameObj@@H@Z ENDP ; JMG_CMTB_Ship_Control_Script::DrainPower
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?CloakOff@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?CloakOff@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Ship_Control_Script::CloakOff, COMDAT
; _this$ = ecx

; 2558 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2559 : 	ReturnToNormalState(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReturnToNormalState@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::ReturnToNormalState

; 2560 : 	Commands->Set_Animation(obj,Animation,false,0,3,0,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH

; 2561 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?CloakOff@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Ship_Control_Script::CloakOff
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?ShieldOff@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?ShieldOff@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Ship_Control_Script::ShieldOff, COMDAT
; _this$ = ecx

; 2551 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2552 : 	Set_Skin(obj,"None");

	push	OFFSET ??_C@_04OHJIHAFH@None?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Set_Skin@@YAXPAVScriptableGameObj@@PBD@Z ; Set_Skin
	add	esp, 8

; 2553 : 	MyObject->Size = 1.265625f;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	movss	xmm0, DWORD PTR __real@3fa20000
	movss	DWORD PTR [ecx+4], xmm0

; 2554 : 	ReturnToNormalState(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReturnToNormalState@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::ReturnToNormalState

; 2555 : 	Commands->Set_Animation(obj,Animation,false,0,0,0,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH

; 2556 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?ShieldOff@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Ship_Control_Script::ShieldOff
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Destroyed@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
tv565 = -456						; size = 4
tv558 = -456						; size = 4
tv528 = -456						; size = 4
tv521 = -456						; size = 4
tv491 = -456						; size = 4
tv484 = -456						; size = 4
tv454 = -456						; size = 4
tv447 = -456						; size = 4
tv147 = -456						; size = 4
tv78 = -456						; size = 4
$T1 = -452						; size = 12
$T2 = -440						; size = 12
$T3 = -428						; size = 12
$T4 = -416						; size = 12
$T5 = -404						; size = 12
_Portal$ = -328						; size = 4
_LifeMsg$6 = -324					; size = 220
_tempPlayer$7 = -104					; size = 4
_y$8 = -100						; size = 4
_Powerup$9 = -96					; size = 4
_Random$10 = -92					; size = 4
_Pos$11 = -88						; size = 12
_Powerup$12 = -76					; size = 4
_Random$13 = -72					; size = 4
_Pos$14 = -68						; size = 12
_Powerup$15 = -56					; size = 4
_Random$16 = -52					; size = 4
_Pos$17 = -48						; size = 12
_Powerup$18 = -36					; size = 4
_Random$19 = -32					; size = 4
_Pos$20 = -28						; size = 12
_y$21 = -16						; size = 4
_Player$22 = -12					; size = 4
_x$23 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Ship_Control_Script::Destroyed, COMDAT
; _this$ = ecx

; 2459 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 456				; 000001c8H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2460 : 	RenCometBustersList -= obj;

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??ZRenCometBustersGameObjects@@QAEAAV0@PAVScriptableGameObj@@@Z ; RenCometBustersGameObjects::operator-=

; 2461 : 	for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$23[ebp], 0
	jmp	SHORT $LN23@Destroyed
$LN22@Destroyed:
	mov	eax, DWORD PTR _x$23[ebp]
	add	eax, 1
	mov	DWORD PTR _x$23[ebp], eax
$LN23@Destroyed:
	cmp	DWORD PTR _x$23[ebp], 8
	jge	$LN21@Destroyed

; 2462 : 		if (MiniGamePlayerControlSystem[x].PlayerShip == obj)

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	$LN20@Destroyed

; 2463 : 		{
; 2464 : 			MiniGamePlayerControlSystem[x].RespawnTime = (!Get_Vehicle_Driver(obj) ? 1200 : 30);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN26@Destroyed
	mov	DWORD PTR tv78[ebp], 1200		; 000004b0H
	jmp	SHORT $LN27@Destroyed
$LN26@Destroyed:
	mov	DWORD PTR tv78[ebp], 30			; 0000001eH
$LN27@Destroyed:
	mov	ecx, DWORD PTR _x$23[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR tv78[ebp]
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+24], edx

; 2465 : 			MiniGamePlayerControlSystem[x].DeathLocation = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _x$23[ebp]
	imul	ecx, 596				; 00000254H
	add	ecx, OFFSET ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A+64
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 2466 : 			MiniGamePlayerControlSystem[x].PlayerShip = NULL;

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8], 0

; 2467 : 			MiniGamePlayerControlSystem[x].ShipObject = NULL;

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+592], 0

; 2468 : 			MiniGamePlayerControlSystem[x].HighestLevel = JMG_CMTB_Main_Game_Control::CMTBLevel;

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+352], ecx

; 2469 : 			if (!MiniGamePlayerControlSystem[x].GamePlayerID)

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20], 0
	jne	SHORT $LN19@Destroyed

; 2470 : 				continue;

	jmp	$LN22@Destroyed
$LN19@Destroyed:

; 2471 : 			GameObject *Player = Commands->Find_Object(MiniGamePlayerControlSystem[x].GamePlayerID);

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Player$22[ebp], eax

; 2472 : 			if (!Player)

	cmp	DWORD PTR _Player$22[ebp], 0
	jne	SHORT $LN18@Destroyed

; 2473 : 				continue;

	jmp	$LN22@Destroyed
$LN18@Destroyed:

; 2474 : 			RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->Deaths++;

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 264				; 00000108H
	mov	DWORD PTR tv147[ebp], eax
	mov	edx, DWORD PTR tv147[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv147[ebp]
	mov	DWORD PTR [ecx], eax

; 2475 : 			if (!MiniGamePlayerControlSystem[x].NumberOfLives)

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4], 0
	jne	$LN8@Destroyed

; 2476 : 			{
; 2477 : 				for (int y = 0;y < MiniGamePlayerControlSystem[x].SuperBombs;y++)

	mov	DWORD PTR _y$21[ebp], 0
	jmp	SHORT $LN16@Destroyed
$LN15@Destroyed:
	mov	eax, DWORD PTR _y$21[ebp]
	add	eax, 1
	mov	DWORD PTR _y$21[ebp], eax
$LN16@Destroyed:
	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR _y$21[ebp]
	cmp	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+356]
	jge	$LN14@Destroyed

; 2478 : 				{
; 2479 : 					Vector3 Pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _Pos$20[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2480 : 					Pos.Z = 0.25f;

	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR _Pos$20[ebp+8], xmm0

; 2481 : 					float Random = Commands->Get_Random(-180.0f,180.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@43340000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c3340000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR _Random$19[ebp]

; 2482 : 					Pos.X += cos(Random*PI180)*2.0f;

	movss	xmm0, DWORD PTR _Random$19[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv447[ebp]
	movss	xmm0, DWORD PTR tv447[ebp]
	mulss	xmm0, DWORD PTR __real@40000000
	addss	xmm0, DWORD PTR _Pos$20[ebp]
	movss	DWORD PTR _Pos$20[ebp], xmm0

; 2483 : 					Pos.Y += sin(Random*PI180)*2.0f;

	movss	xmm0, DWORD PTR _Random$19[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR tv454[ebp]
	movss	xmm0, DWORD PTR tv454[ebp]
	mulss	xmm0, DWORD PTR __real@40000000
	addss	xmm0, DWORD PTR _Pos$20[ebp+4]
	movss	DWORD PTR _Pos$20[ebp+4], xmm0

; 2484 : 					GameObject *Powerup = Commands->Create_Object("CMTB_Powerup_Object",Pos);

	lea	eax, DWORD PTR _Pos$20[ebp]
	push	eax
	push	OFFSET ??_C@_0BE@IAPNGHEF@CMTB_Powerup_Object?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Powerup$18[ebp], eax

; 2485 : 					Commands->Attach_Script(Powerup,"JMG_CMTB_Powerup_Script","4,0");

	push	OFFSET ??_C@_03EPODMGGC@4?00?$AA@
	push	OFFSET ??_C@_0BI@KMNMLLME@JMG_CMTB_Powerup_Script?$AA@
	mov	eax, DWORD PTR _Powerup$18[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 2486 : 				}

	jmp	$LN15@Destroyed
$LN14@Destroyed:

; 2487 : 				MiniGamePlayerControlSystem[x].SuperBombs = 0;

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+356], 0

; 2488 : 				if (MiniGamePlayerControlSystem[x].DronePowerup)

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	movzx	ecx, BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+376]
	test	ecx, ecx
	je	$LN13@Destroyed

; 2489 : 				{
; 2490 : 					Vector3 Pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _Pos$17[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2491 : 					Pos.Z = 0.25f;

	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR _Pos$17[ebp+8], xmm0

; 2492 : 					float Random = Commands->Get_Random(-180.0f,180.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@43340000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c3340000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR _Random$16[ebp]

; 2493 : 					Pos.X += cos(Random*PI180)*2.0f;

	movss	xmm0, DWORD PTR _Random$16[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv484[ebp]
	movss	xmm0, DWORD PTR tv484[ebp]
	mulss	xmm0, DWORD PTR __real@40000000
	addss	xmm0, DWORD PTR _Pos$17[ebp]
	movss	DWORD PTR _Pos$17[ebp], xmm0

; 2494 : 					Pos.Y += sin(Random*PI180)*2.0f;

	movss	xmm0, DWORD PTR _Random$16[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR tv491[ebp]
	movss	xmm0, DWORD PTR tv491[ebp]
	mulss	xmm0, DWORD PTR __real@40000000
	addss	xmm0, DWORD PTR _Pos$17[ebp+4]
	movss	DWORD PTR _Pos$17[ebp+4], xmm0

; 2495 : 					MiniGamePlayerControlSystem[x].DronePowerup = false;

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+376], 0

; 2496 : 					GameObject *Powerup = Commands->Create_Object("CMTB_Powerup_Object",Pos);

	lea	eax, DWORD PTR _Pos$17[ebp]
	push	eax
	push	OFFSET ??_C@_0BE@IAPNGHEF@CMTB_Powerup_Object?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Powerup$15[ebp], eax

; 2497 : 					Commands->Attach_Script(Powerup,"JMG_CMTB_Powerup_Script","10,0");

	push	OFFSET ??_C@_04LLKGOIAC@10?00?$AA@
	push	OFFSET ??_C@_0BI@KMNMLLME@JMG_CMTB_Powerup_Script?$AA@
	mov	eax, DWORD PTR _Powerup$15[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH
$LN13@Destroyed:

; 2498 : 				}
; 2499 : 				if (MiniGamePlayerControlSystem[x].DroneSwarmPowerup)

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	movzx	ecx, BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+377]
	test	ecx, ecx
	je	$LN12@Destroyed

; 2500 : 				{
; 2501 : 					Vector3 Pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _Pos$14[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2502 : 					Pos.Z = 0.25f;

	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR _Pos$14[ebp+8], xmm0

; 2503 : 					float Random = Commands->Get_Random(-180.0f,180.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@43340000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c3340000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR _Random$13[ebp]

; 2504 : 					Pos.X += cos(Random*PI180)*2.0f;

	movss	xmm0, DWORD PTR _Random$13[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv521[ebp]
	movss	xmm0, DWORD PTR tv521[ebp]
	mulss	xmm0, DWORD PTR __real@40000000
	addss	xmm0, DWORD PTR _Pos$14[ebp]
	movss	DWORD PTR _Pos$14[ebp], xmm0

; 2505 : 					Pos.Y += sin(Random*PI180)*2.0f;

	movss	xmm0, DWORD PTR _Random$13[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR tv528[ebp]
	movss	xmm0, DWORD PTR tv528[ebp]
	mulss	xmm0, DWORD PTR __real@40000000
	addss	xmm0, DWORD PTR _Pos$14[ebp+4]
	movss	DWORD PTR _Pos$14[ebp+4], xmm0

; 2506 : 					MiniGamePlayerControlSystem[x].DroneSwarmPowerup = false;

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+377], 0

; 2507 : 					GameObject *Powerup = Commands->Create_Object("CMTB_Powerup_Object",Pos);

	lea	eax, DWORD PTR _Pos$14[ebp]
	push	eax
	push	OFFSET ??_C@_0BE@IAPNGHEF@CMTB_Powerup_Object?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Powerup$12[ebp], eax

; 2508 : 					Commands->Attach_Script(Powerup,"JMG_CMTB_Powerup_Script","15,0");

	push	OFFSET ??_C@_04IMHIBIDA@15?00?$AA@
	push	OFFSET ??_C@_0BI@KMNMLLME@JMG_CMTB_Powerup_Script?$AA@
	mov	eax, DWORD PTR _Powerup$12[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH
$LN12@Destroyed:

; 2509 : 				}
; 2510 : 				if (MiniGamePlayerControlSystem[x].HasSOSBeacon)

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	movzx	ecx, BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+366]
	test	ecx, ecx
	je	$LN11@Destroyed

; 2511 : 				{
; 2512 : 					Vector3 Pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _Pos$11[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2513 : 					Pos.Z = 0.25f;

	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR _Pos$11[ebp+8], xmm0

; 2514 : 					float Random = Commands->Get_Random(-180.0f,180.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@43340000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c3340000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR _Random$10[ebp]

; 2515 : 					Pos.X += cos(Random*PI180)*2.0f;

	movss	xmm0, DWORD PTR _Random$10[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv558[ebp]
	movss	xmm0, DWORD PTR tv558[ebp]
	mulss	xmm0, DWORD PTR __real@40000000
	addss	xmm0, DWORD PTR _Pos$11[ebp]
	movss	DWORD PTR _Pos$11[ebp], xmm0

; 2516 : 					Pos.Y += sin(Random*PI180)*2.0f;

	movss	xmm0, DWORD PTR _Random$10[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR tv565[ebp]
	movss	xmm0, DWORD PTR tv565[ebp]
	mulss	xmm0, DWORD PTR __real@40000000
	addss	xmm0, DWORD PTR _Pos$11[ebp+4]
	movss	DWORD PTR _Pos$11[ebp+4], xmm0

; 2517 : 					MiniGamePlayerControlSystem[x].HasSOSBeacon = false;

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+366], 0

; 2518 : 					GameObject *Powerup = Commands->Create_Object("CMTB_Powerup_Object",Pos);

	lea	eax, DWORD PTR _Pos$11[ebp]
	push	eax
	push	OFFSET ??_C@_0BE@IAPNGHEF@CMTB_Powerup_Object?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Powerup$9[ebp], eax

; 2519 : 					Commands->Attach_Script(Powerup,"JMG_CMTB_Powerup_Script","3,0");

	push	OFFSET ??_C@_03NCDEPONL@3?00?$AA@
	push	OFFSET ??_C@_0BI@KMNMLLME@JMG_CMTB_Powerup_Script?$AA@
	mov	eax, DWORD PTR _Powerup$9[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH
$LN11@Destroyed:

; 2520 : 				}
; 2521 : 				for (int y = 0;y < MaxGamePlayerCount;y++)

	mov	DWORD PTR _y$8[ebp], 0
	jmp	SHORT $LN10@Destroyed
$LN9@Destroyed:
	mov	eax, DWORD PTR _y$8[ebp]
	add	eax, 1
	mov	DWORD PTR _y$8[ebp], eax
$LN10@Destroyed:
	cmp	DWORD PTR _y$8[ebp], 8
	jge	$LN8@Destroyed

; 2522 : 				{
; 2523 : 					GameObject *tempPlayer = Commands->Find_Object(MiniGamePlayerControlSystem[y].GamePlayerID);

	mov	eax, DWORD PTR _y$8[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _tempPlayer$7[ebp], eax

; 2524 : 					if (!tempPlayer)

	cmp	DWORD PTR _tempPlayer$7[ebp], 0
	jne	SHORT $LN7@Destroyed

; 2525 : 						continue;

	jmp	SHORT $LN9@Destroyed
$LN7@Destroyed:

; 2526 : 					if (y == x)

	mov	eax, DWORD PTR _y$8[ebp]
	cmp	eax, DWORD PTR _x$23[ebp]
	jne	SHORT $LN6@Destroyed

; 2527 : 						JmgUtility::DisplayChatMessage(tempPlayer,125,200,200,"You are out of lives!");

	push	OFFSET ??_C@_0BG@ONDGJMEB@You?5are?5out?5of?5lives?$CB?$AA@
	push	200					; 000000c8H
	push	200					; 000000c8H
	push	125					; 0000007dH
	mov	eax, DWORD PTR _tempPlayer$7[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2528 : 					else

	jmp	SHORT $LN5@Destroyed
$LN6@Destroyed:

; 2529 : 					{
; 2530 : 						char LifeMsg[220];
; 2531 : 						sprintf(LifeMsg,"Player %d (%s) is out of lives!",x,Get_Player_Name_By_ID(MiniGamePlayerControlSystem[x].PlayerID));

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	call	?Get_Player_Name_By_ID@@YAPBDH@Z	; Get_Player_Name_By_ID
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _x$23[ebp]
	push	edx
	push	OFFSET ??_C@_0CA@JMINELOO@Player?5?$CFd?5?$CI?$CFs?$CJ?5is?5out?5of?5lives?$CB?$AA@
	lea	eax, DWORD PTR _LifeMsg$6[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 2532 : 						JmgUtility::DisplayChatMessage(tempPlayer,125,200,200,LifeMsg);

	lea	eax, DWORD PTR _LifeMsg$6[ebp]
	push	eax
	push	200					; 000000c8H
	push	200					; 000000c8H
	push	125					; 0000007dH
	mov	ecx, DWORD PTR _tempPlayer$7[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN5@Destroyed:

; 2533 : 					}
; 2534 : 				}

	jmp	$LN9@Destroyed
$LN8@Destroyed:

; 2535 : 			}
; 2536 : 			break;

	jmp	SHORT $LN21@Destroyed
	jmp	SHORT $LN3@Destroyed
$LN20@Destroyed:

; 2537 : 		}
; 2538 : 		else if (MiniGamePlayerControlSystem[x].ReplacementShip == obj)

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+12]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	SHORT $LN3@Destroyed

; 2539 : 		{
; 2540 : 			MiniGamePlayerControlSystem[x].ReplacementShip = NULL;

	mov	eax, DWORD PTR _x$23[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+12], 0

; 2541 : 			break;

	jmp	SHORT $LN21@Destroyed
$LN3@Destroyed:

; 2542 : 		}

	jmp	$LN22@Destroyed
$LN21@Destroyed:

; 2543 : 	GameObject *Portal = Commands->Find_Object(PortalInID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Portal$[ebp], eax

; 2544 : 	if (Portal)

	cmp	DWORD PTR _Portal$[ebp], 0
	je	SHORT $LN2@Destroyed

; 2545 : 		Commands->Destroy_Object(Portal);

	mov	eax, DWORD PTR _Portal$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN2@Destroyed:

; 2546 : 	Portal = Commands->Find_Object(PortalOutID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Portal$[ebp], eax

; 2547 : 	if (Portal)

	cmp	DWORD PTR _Portal$[ebp], 0
	je	SHORT $LN1@Destroyed

; 2548 : 		Commands->Destroy_Object(Portal);

	mov	eax, DWORD PTR _Portal$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN1@Destroyed:

; 2549 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Destroyed@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Ship_Control_Script::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Killed@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_killObj$1 = -12					; size = 4
_Driver$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
?Killed@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_CMTB_Ship_Control_Script::Killed, COMDAT
; _this$ = ecx

; 2446 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2447 : 	RenCometBustersList.GrantScoreToKiller(damager,-1000.0f,NormalPlayerShip);

	push	0
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@c47a0000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?GrantScoreToKiller@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MW4ObjectType@@H@Z ; RenCometBustersGameObjects::GrantScoreToKiller

; 2448 : 	GameObject *Driver = Get_Vehicle_Driver(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	mov	DWORD PTR _Driver$[ebp], eax

; 2449 : 	if (Driver)

	cmp	DWORD PTR _Driver$[ebp], 0
	je	$LN2@Killed

; 2450 : 	{
; 2451 : 		AnObject *killObj = RenCometBustersList.FindObjectByID(Commands->Get_ID(damager));

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?FindObjectByID@RenCometBustersGameObjects@@QAEPAUAnObject@@H@Z ; RenCometBustersGameObjects::FindObjectByID
	mov	DWORD PTR _killObj$1[ebp], eax

; 2452 : 		if (killObj && killObj->Type == Asteroid)

	cmp	DWORD PTR _killObj$1[ebp], 0
	je	SHORT $LN1@Killed
	mov	eax, DWORD PTR _killObj$1[ebp]
	cmp	DWORD PTR [eax+16], 2
	jne	SHORT $LN1@Killed

; 2453 : 			PerkSystemIncreasePlayerPerkUnlockAmount(Driver,104,1);

	push	1
	push	104					; 00000068H
	mov	eax, DWORD PTR _Driver$[ebp]
	push	eax
	call	?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z ; PerkSystemIncreasePlayerPerkUnlockAmount
	add	esp, 12					; 0000000cH
$LN1@Killed:

; 2454 : 		Set_Screen_Fade_Color_Player(Driver,0,0,0,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Driver$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Color_Player@@3P6AXPAVScriptableGameObj@@MMMM@ZA ; Set_Screen_Fade_Color_Player
	add	esp, 20					; 00000014H

; 2455 : 		Set_Screen_Fade_Opacity_Player(Driver,0.0f,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Driver$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Opacity_Player@@3P6AXPAVScriptableGameObj@@MM@ZA ; Set_Screen_Fade_Opacity_Player
	add	esp, 12					; 0000000cH
$LN2@Killed:

; 2456 : 	}
; 2457 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_CMTB_Ship_Control_Script::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Damaged@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
tv129 = -72						; size = 4
tv78 = -72						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_damage$ = 16						; size = 4
?Damaged@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@0M@Z PROC ; JMG_CMTB_Ship_Control_Script::Damaged, COMDAT
; _this$ = ecx

; 2423 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2424 : 	if (!damage && damager == Get_Vehicle_Driver(obj) && !ChangingWeapons)

	movss	xmm0, DWORD PTR _damage$[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	$LN9@Damaged
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	cmp	DWORD PTR _damager$[ebp], eax
	jne	$LN9@Damaged
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+110]
	test	ecx, ecx
	jne	$LN9@Damaged

; 2425 : 	{
; 2426 : 		if (!OverPoweredWeapons)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+108]
	test	ecx, ecx
	jne	SHORT $LN5@Damaged

; 2427 : 		{
; 2428 : 			if (Get_Current_Total_Bullets(obj) < (ExtraShotActive ? 5 : 4))

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+116], 0
	je	SHORT $LN12@Damaged
	mov	DWORD PTR tv78[ebp], 5
	jmp	SHORT $LN13@Damaged
$LN12@Damaged:
	mov	DWORD PTR tv78[ebp], 4
$LN13@Damaged:
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	call	?Get_Current_Total_Bullets@@YAHPAVScriptableGameObj@@@Z ; Get_Current_Total_Bullets
	add	esp, 4
	cmp	eax, DWORD PTR tv78[ebp]
	jge	SHORT $LN5@Damaged

; 2429 : 				if (RemoveExtraShot)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+120]
	test	ecx, ecx
	je	SHORT $LN6@Damaged

; 2430 : 					RemoveExtraShot = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+120], 0

; 2431 : 				else

	jmp	SHORT $LN5@Damaged
$LN6@Damaged:

; 2432 : 					Set_Current_Clip_Bullets(obj,Get_Current_Clip_Bullets(obj)+1);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Current_Clip_Bullets@@YAHPAVScriptableGameObj@@@Z ; Get_Current_Clip_Bullets
	add	esp, 4
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8
$LN5@Damaged:

; 2433 : 		}
; 2434 : 		RenCometBustersScoreControl.Get_Current_Player_Score_Node(Get_Player_ID(Get_Vehicle_Driver(obj)))->RoundsFired++;

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 324				; 00000144H
	mov	DWORD PTR tv129[ebp], eax
	mov	ecx, DWORD PTR tv129[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR tv129[ebp]
	mov	DWORD PTR [eax], edx
	jmp	$LN3@Damaged
$LN9@Damaged:

; 2435 : 	}
; 2436 : 	else if (!Commands->Is_A_Star(damager))

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@Damaged

; 2437 : 	{
; 2438 : 		if (MyObject->Type != PlayerShield)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 5
	je	SHORT $LN2@Damaged

; 2439 : 			return;

	jmp	SHORT $LN10@Damaged
$LN2@Damaged:

; 2440 : 		if (!ShieldLightUp)

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+104]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN1@Damaged

; 2441 : 			Commands->Set_Animation(obj,Animation,false,0,2,2,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH
$LN1@Damaged:

; 2442 : 		ShieldLightUp = 0.35f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3eb33333
	movss	DWORD PTR [eax+104], xmm0
$LN3@Damaged:
$LN10@Damaged:

; 2443 : 	}
; 2444 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@0M@Z ENDP ; JMG_CMTB_Ship_Control_Script::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Custom@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
tv2792 = -2696						; size = 4
tv2780 = -2692						; size = 4
tv2614 = -2692						; size = 4
tv2051 = -2692						; size = 4
tv2020 = -2692						; size = 4
tv1790 = -2692						; size = 4
tv1779 = -2692						; size = 4
tv1712 = -2692						; size = 4
tv1643 = -2692						; size = 4
tv1504 = -2692						; size = 4
tv1418 = -2692						; size = 4
tv1299 = -2692						; size = 4
tv1271 = -2692						; size = 4
tv1223 = -2692						; size = 4
tv1218 = -2692						; size = 4
tv1149 = -2692						; size = 4
tv1123 = -2692						; size = 4
tv1095 = -2692						; size = 4
tv1037 = -2692						; size = 4
tv1028 = -2692						; size = 4
tv989 = -2692						; size = 4
tv902 = -2692						; size = 4
tv854 = -2692						; size = 4
tv805 = -2692						; size = 4
tv775 = -2692						; size = 4
tv741 = -2692						; size = 4
tv631 = -2692						; size = 4
tv572 = -2692						; size = 4
tv539 = -2692						; size = 4
tv468 = -2692						; size = 4
tv332 = -2692						; size = 4
tv84 = -2692						; size = 4
$T1 = -2688						; size = 12
$T2 = -2676						; size = 12
$T3 = -2664						; size = 12
$T4 = -2652						; size = 12
$T5 = -2640						; size = 12
$T6 = -2628						; size = 12
$T7 = -2616						; size = 12
$T8 = -2604						; size = 12
$T9 = -2592						; size = 12
$T10 = -2580						; size = 12
_Driver$11 = -2504					; size = 4
_PortalOut$12 = -2500					; size = 4
_PortalIn$13 = -2496					; size = 4
_killMe$14 = -2492					; size = 4
_drivemsg$15 = -2488					; size = 400
_Driver$16 = -2088					; size = 4
_percentMessage$17 = -2084				; size = 200
_x$18 = -1884						; size = 4
_Dist$19 = -1880					; size = 4
_y$20 = -1876						; size = 4
_x$21 = -1872						; size = 4
_Found$22 = -1865					; size = 1
_IdealPos$23 = -1864					; size = 12
_NearDist$24 = -1852					; size = 4
_Pos$25 = -1848						; size = 12
_OtherPlayer$26 = -1836					; size = 4
_LifeMsg$27 = -1832					; size = 220
_x$28 = -1612						; size = 4
_MyPlayerNumber$29 = -1608				; size = 4
_PlayerNumber$30 = -1604				; size = 4
_Drone$31 = -1600					; size = 4
_j$32 = -1596						; size = 4
_params$33 = -1592					; size = 32
_x$34 = -1560						; size = 4
_Drone$35 = -1556					; size = 4
_params$36 = -1552					; size = 32
_x$37 = -1520						; size = 4
_Ship$38 = -1516					; size = 4
_ShipBeacon$39 = -1512					; size = 4
_ShipTargetPos$40 = -1508				; size = 12
_x$41 = -1496						; size = 4
_Params$42 = -1492					; size = 32
_params$43 = -1460					; size = 256
_Powerup$44 = -1204					; size = 4
_Random$45 = -1200					; size = 4
_drivemsg$46 = -1196					; size = 220
_PointMsg$47 = -976					; size = 200
_EnergyCellMsg$48 = -776				; size = 200
_x$49 = -576						; size = 4
_ShipCharge$50 = -572					; size = 4
_CouldJump$51 = -565					; size = 1
_Points$52 = -564					; size = 4
_params$53 = -560					; size = 32
_SuperWeapon$54 = -528					; size = 4
_Player$55 = -524					; size = 4
_x$56 = -520						; size = 4
_x$57 = -516						; size = 4
_x$58 = -512						; size = 4
_x$59 = -508						; size = 4
_x$60 = -504						; size = 4
_Player$61 = -500					; size = 4
_y$62 = -496						; size = 4
_playermsg$63 = -492					; size = 256
_theplayer$64 = -236					; size = 4
_x$65 = -232						; size = 4
_inventory$66 = -228					; size = 220
_x$67 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_message$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; JMG_CMTB_Ship_Control_Script::Custom, COMDAT
; _this$ = ecx

; 1529 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 2696				; 00000a88H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1530 : 	if (message == CMTBPowerUpCustomMessage && !Get_Vehicle_Driver(obj))

	cmp	DWORD PTR _message$[ebp], 90335490	; 05626902H
	jne	SHORT $LN204@Custom
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN204@Custom

; 1531 : 	{
; 1532 : 		Commands->Send_Custom_Event(obj,obj,message,param,0.1f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+140]
	call	edx
	add	esp, 20					; 00000014H

; 1533 : 		return;

	jmp	$LN205@Custom
$LN204@Custom:

; 1534 : 	}
; 1535 : 	if (message == 7154148)

	cmp	DWORD PTR _message$[ebp], 7154148	; 006d29e4H
	jne	$LN200@Custom

; 1536 : 	{
; 1537 : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$67[ebp], 0
	jmp	SHORT $LN202@Custom
$LN201@Custom:
	mov	eax, DWORD PTR _x$67[ebp]
	add	eax, 1
	mov	DWORD PTR _x$67[ebp], eax
$LN202@Custom:
	cmp	DWORD PTR _x$67[ebp], 8
	jge	$LN200@Custom

; 1538 : 			if (MiniGamePlayerControlSystem[x].PlayerShip == obj)

	mov	eax, DWORD PTR _x$67[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	$LN199@Custom

; 1539 : 			{
; 1540 : 				switch (MiniGamePlayerControlSystem[x].SelectedPerk)

	mov	eax, DWORD PTR _x$67[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+436]
	mov	DWORD PTR tv84[ebp], ecx
	mov	edx, DWORD PTR tv84[ebp]
	sub	edx, 1
	mov	DWORD PTR tv84[ebp], edx
	cmp	DWORD PTR tv84[ebp], 8
	ja	$LN187@Custom
	mov	eax, DWORD PTR tv84[ebp]
	jmp	DWORD PTR $LN215@Custom[eax*4]
$LN196@Custom:

; 1541 : 				{
; 1542 : 				case 1:	JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Extra Life");break;

	push	OFFSET ??_C@_0CF@PHEHLLGF@Selected?5Special?5Ability?3?5Extra?5@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	$LN197@Custom
$LN195@Custom:

; 1543 : 				case 2: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Hyperjump Powerup");break;

	push	OFFSET ??_C@_0CM@OOENGFNH@Selected?5Special?5Ability?3?5Hyperj@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	$LN197@Custom
$LN194@Custom:

; 1544 : 				case 3: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Double Points");break;

	push	OFFSET ??_C@_0CI@HFBFCNOB@Selected?5Special?5Ability?3?5Double@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	$LN197@Custom
$LN193@Custom:

; 1545 : 				case 4: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Energy Regen");break;

	push	OFFSET ??_C@_0CH@ILHHOMJH@Selected?5Special?5Ability?3?5Energy@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	$LN197@Custom
$LN192@Custom:

; 1546 : 				case 5 :JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Weapons Upgrade");break;

	push	OFFSET ??_C@_0CK@BEGAEGLB@Selected?5Special?5Ability?3?5Weapon@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	$LN197@Custom
$LN191@Custom:

; 1547 : 				case 6: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Drone");break;

	push	OFFSET ??_C@_0CA@FCHCAGLH@Selected?5Special?5Ability?3?5Drone?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	SHORT $LN197@Custom
$LN190@Custom:

; 1548 : 				case 7: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: High Explosive Warhead");break;

	push	OFFSET ??_C@_0DB@HFBEIFFK@Selected?5Special?5Ability?3?5High?5E@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	SHORT $LN197@Custom
$LN189@Custom:

; 1549 : 				case 8: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: SOS Beacon");break;

	push	OFFSET ??_C@_0CF@NBLBGGDG@Selected?5Special?5Ability?3?5SOS?5Be@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	SHORT $LN197@Custom
$LN188@Custom:

; 1550 : 				case 9: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: Drone Swarm");break;

	push	OFFSET ??_C@_0CG@CMGIACAM@Selected?5Special?5Ability?3?5Drone?5@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
	jmp	SHORT $LN197@Custom
$LN187@Custom:

; 1551 : 				default: JmgUtility::DisplayChatMessage(sender,200,200,125,"Selected Special Ability: None");break;

	push	OFFSET ??_C@_0BP@CNMJDAHL@Selected?5Special?5Ability?3?5None?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN197@Custom:

; 1552 : 				}
; 1553 : 				char inventory[220];
; 1554 : 				sprintf(inventory,"Hyper Drive Charge %.0f.",MiniGamePlayerControlSystem[x].HyperspaceDriveCharge/5.0f*100.0f);

	mov	eax, DWORD PTR _x$67[ebp]
	imul	eax, 596				; 00000254H
	cvtsi2ss xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+432]
	divss	xmm0, DWORD PTR __real@40a00000
	mulss	xmm0, DWORD PTR __real@42c80000
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0BJ@FKKHHCEG@Hyper?5Drive?5Charge?5?$CF?40f?4?$AA@
	lea	ecx, DWORD PTR _inventory$66[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 1555 : 				JmgUtility::DisplayChatMessage(sender,200,200,125,inventory);

	lea	eax, DWORD PTR _inventory$66[ebp]
	push	eax
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1556 : 				if (RapidPowerRegen)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+112], 0
	je	SHORT $LN186@Custom

; 1557 : 				{
; 1558 : 					sprintf(inventory,"Rapid Energy Regen %d seconds.",RapidPowerRegen);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	push	OFFSET ??_C@_0BP@JGLNCOEL@Rapid?5Energy?5Regen?5?$CFd?5seconds?4?$AA@
	lea	edx, DWORD PTR _inventory$66[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1559 : 					JmgUtility::DisplayChatMessage(sender,200,200,125,inventory);

	lea	eax, DWORD PTR _inventory$66[ebp]
	push	eax
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN186@Custom:

; 1560 : 				}
; 1561 : 				if (ExtraShotActive)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+116], 0
	je	SHORT $LN185@Custom

; 1562 : 				{
; 1563 : 					sprintf(inventory,"Extra Shot %d seconds.",ExtraShotActive);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	push	ecx
	push	OFFSET ??_C@_0BH@GIPGGHOA@Extra?5Shot?5?$CFd?5seconds?4?$AA@
	lea	edx, DWORD PTR _inventory$66[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1564 : 					JmgUtility::DisplayChatMessage(sender,200,200,125,inventory);

	lea	eax, DWORD PTR _inventory$66[ebp]
	push	eax
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN185@Custom:

; 1565 : 				}
; 1566 : 				if (MiniGamePlayerControlSystem[x].DoublePointsTime)

	mov	eax, DWORD PTR _x$67[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+396], 0
	je	SHORT $LN184@Custom

; 1567 : 				{
; 1568 : 					sprintf(inventory,"Double Points time %d seconds.",MiniGamePlayerControlSystem[x].DoublePointsTime);

	mov	eax, DWORD PTR _x$67[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+396]
	push	ecx
	push	OFFSET ??_C@_0BP@GACIJABL@Double?5Points?5time?5?$CFd?5seconds?4?$AA@
	lea	edx, DWORD PTR _inventory$66[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1569 : 					JmgUtility::DisplayChatMessage(sender,200,200,125,inventory);

	lea	eax, DWORD PTR _inventory$66[ebp]
	push	eax
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN184@Custom:

; 1570 : 				}
; 1571 : 				JmgUtility::DisplayChatMessage(sender,200,200,125,"Ship Control Keys:");

	push	OFFSET ??_C@_0BD@JOLJGOHJ@Ship?5Control?5Keys?3?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1572 : 				JmgUtility::DisplayChatMessage(sender,200,200,125,"R - Toggle Rapid Fire");

	push	OFFSET ??_C@_0BG@BKLKMPPO@R?5?9?5Toggle?5Rapid?5Fire?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1573 : 				JmgUtility::DisplayChatMessage(sender,200,200,125,"Q - Shield");

	push	OFFSET ??_C@_0L@MGMBLIHC@Q?5?9?5Shield?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1574 : 				JmgUtility::DisplayChatMessage(sender,200,200,125,"Z - Cloak");

	push	OFFSET ??_C@_09OECLFLBA@Z?5?9?5Cloak?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1575 : 				sprintf(inventory,"G - Highly Explosive Warhead (x%d)",MiniGamePlayerControlSystem[x].SuperBombs);

	mov	eax, DWORD PTR _x$67[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+356]
	push	ecx
	push	OFFSET ??_C@_0CD@FECDCLBH@G?5?9?5Highly?5Explosive?5Warhead?5?$CIx?$CF@
	lea	edx, DWORD PTR _inventory$66[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1576 : 				JmgUtility::DisplayChatMessage(sender,200,200,125,inventory);

	lea	eax, DWORD PTR _inventory$66[ebp]
	push	eax
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1577 : 				sprintf(inventory,"T - SOS Beacon (x%d)",MiniGamePlayerControlSystem[x].HasSOSBeacon);

	mov	eax, DWORD PTR _x$67[ebp]
	imul	eax, 596				; 00000254H
	movzx	ecx, BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+366]
	push	ecx
	push	OFFSET ??_C@_0BF@FPAOCMMB@T?5?9?5SOS?5Beacon?5?$CIx?$CFd?$CJ?$AA@
	lea	edx, DWORD PTR _inventory$66[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1578 : 				JmgUtility::DisplayChatMessage(sender,200,200,125,inventory);

	lea	eax, DWORD PTR _inventory$66[ebp]
	push	eax
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1579 : 				sprintf(inventory,"F - Launch Drone (x%d)",MiniGamePlayerControlSystem[x].DroneSwarmPowerup);

	mov	eax, DWORD PTR _x$67[ebp]
	imul	eax, 596				; 00000254H
	movzx	ecx, BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+377]
	push	ecx
	push	OFFSET ??_C@_0BH@HDOEINJE@F?5?9?5Launch?5Drone?5?$CIx?$CFd?$CJ?$AA@
	lea	edx, DWORD PTR _inventory$66[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1580 : 				JmgUtility::DisplayChatMessage(sender,200,200,125,inventory);

	lea	eax, DWORD PTR _inventory$66[ebp]
	push	eax
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1581 : 				sprintf(inventory,"H - Call in Drone Swarm (x%d)",MiniGamePlayerControlSystem[x].DroneSwarmPowerup);

	mov	eax, DWORD PTR _x$67[ebp]
	imul	eax, 596				; 00000254H
	movzx	ecx, BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+377]
	push	ecx
	push	OFFSET ??_C@_0BO@NAKCKOAM@H?5?9?5Call?5in?5Drone?5Swarm?5?$CIx?$CFd?$CJ?$AA@
	lea	edx, DWORD PTR _inventory$66[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1582 : 				JmgUtility::DisplayChatMessage(sender,200,200,125,inventory);

	lea	eax, DWORD PTR _inventory$66[ebp]
	push	eax
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1583 : 				JmgUtility::DisplayChatMessage(sender,200,200,125,"Delete - Forfeit Lives");

	push	OFFSET ??_C@_0BH@NDBKPNIN@Delete?5?9?5Forfeit?5Lives?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1584 : 				JmgUtility::DisplayChatMessage(sender,200,200,125,"Numpad[0-9] - Grant Player Life");

	push	OFFSET ??_C@_0CA@OIAFCEKI@Numpad?$FL0?99?$FN?5?9?5Grant?5Player?5Life?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1585 : 				break;

	jmp	SHORT $LN200@Custom
$LN199@Custom:

; 1586 : 			}
; 1587 : 	}

	jmp	$LN201@Custom
$LN200@Custom:

; 1588 : 	if (message == 77454830)

	cmp	DWORD PTR _message$[ebp], 77454830	; 049dddeeH
	jne	$LN178@Custom

; 1589 : 	{
; 1590 : 		if (!ForfeitLives)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 0
	jne	SHORT $LN182@Custom

; 1591 : 		{
; 1592 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Press ForfeitLives key again to forfeit your lives!");

	push	OFFSET ??_C@_0DE@IDGONFFN@Press?5ForfeitLives?5key?5again?5to?5@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1593 : 			ForfeitLives = 5;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 5

; 1594 : 		}
; 1595 : 		else

	jmp	$LN178@Custom
$LN182@Custom:

; 1596 : 		{
; 1597 : 			for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$65[ebp], 0
	jmp	SHORT $LN180@Custom
$LN179@Custom:
	mov	eax, DWORD PTR _x$65[ebp]
	add	eax, 1
	mov	DWORD PTR _x$65[ebp], eax
$LN180@Custom:
	cmp	DWORD PTR _x$65[ebp], 8
	jge	$LN178@Custom

; 1598 : 				if (MiniGamePlayerControlSystem[x].PlayerShip == obj)

	mov	eax, DWORD PTR _x$65[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	$LN173@Custom

; 1599 : 				{
; 1600 : 					MiniGamePlayerControlSystem[x].NumberOfLives = 0;

	mov	eax, DWORD PTR _x$65[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4], 0

; 1601 : 					Commands->Apply_Damage(obj,9999.9f,"BlamoKiller",0);

	push	0
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@461c3f9a
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H

; 1602 : 					GameObject *theplayer = Get_GameObj(MiniGamePlayerControlSystem[x].PlayerID);

	mov	eax, DWORD PTR _x$65[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	mov	DWORD PTR _theplayer$64[ebp], eax

; 1603 : 					if (!theplayer)

	cmp	DWORD PTR _theplayer$64[ebp], 0
	jne	SHORT $LN176@Custom

; 1604 : 						return;

	jmp	$LN205@Custom
$LN176@Custom:

; 1605 : 					char playermsg[256];
; 1606 : 					sprintf(playermsg,"%s forfeited %s lives!",Get_Player_Name(theplayer),(JmgUtility::JMG_Get_Sex(theplayer) == 'A' ? "his" : "her"));

	mov	eax, DWORD PTR _theplayer$64[ebp]
	push	eax
	call	?JMG_Get_Sex@JmgUtility@@SADPAVScriptableGameObj@@@Z ; JmgUtility::JMG_Get_Sex
	add	esp, 4
	movsx	ecx, al
	cmp	ecx, 65					; 00000041H
	jne	SHORT $LN207@Custom
	mov	DWORD PTR tv332[ebp], OFFSET ??_C@_03GDDNCFJF@his?$AA@
	jmp	SHORT $LN208@Custom
$LN207@Custom:
	mov	DWORD PTR tv332[ebp], OFFSET ??_C@_03HDDMONLA@her?$AA@
$LN208@Custom:
	mov	edx, DWORD PTR tv332[ebp]
	push	edx
	mov	eax, DWORD PTR _theplayer$64[ebp]
	push	eax
	call	?Get_Player_Name@@YAPBDPAVScriptableGameObj@@@Z ; Get_Player_Name
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BH@KKFKOCIF@?$CFs?5forfeited?5?$CFs?5lives?$CB?$AA@
	lea	ecx, DWORD PTR _playermsg$63[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 1607 : 					for (int y = 1;y < 128;y++)

	mov	DWORD PTR _y$62[ebp], 1
	jmp	SHORT $LN175@Custom
$LN174@Custom:
	mov	eax, DWORD PTR _y$62[ebp]
	add	eax, 1
	mov	DWORD PTR _y$62[ebp], eax
$LN175@Custom:
	cmp	DWORD PTR _y$62[ebp], 128		; 00000080H
	jge	SHORT $LN173@Custom

; 1608 : 					{
; 1609 : 						GameObject *Player = Get_GameObj(y);

	mov	eax, DWORD PTR _y$62[ebp]
	push	eax
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	mov	DWORD PTR _Player$61[ebp], eax

; 1610 : 						if (!Player)

	cmp	DWORD PTR _Player$61[ebp], 0
	jne	SHORT $LN172@Custom

; 1611 : 							continue;	

	jmp	SHORT $LN174@Custom
$LN172@Custom:

; 1612 : 						JmgUtility::DisplayChatMessage(Player,200,125,125,playermsg);

	lea	eax, DWORD PTR _playermsg$63[ebp]
	push	eax
	push	125					; 0000007dH
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	ecx, DWORD PTR _Player$61[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1613 : 					}

	jmp	SHORT $LN174@Custom
$LN173@Custom:

; 1614 : 				}
; 1615 : 		}

	jmp	$LN179@Custom
$LN178@Custom:

; 1616 : 	}
; 1617 : 	if (message == 7043453)

	cmp	DWORD PTR _message$[ebp], 7043453	; 006b797dH
	jne	$LN171@Custom

; 1618 : 	{
; 1619 : 		if (param == 2142)

	cmp	DWORD PTR _param$[ebp], 2142		; 0000085eH
	jne	SHORT $LN170@Custom

; 1620 : 		{
; 1621 : 			param = 1;

	mov	DWORD PTR _param$[ebp], 1

; 1622 : 			EngineDisabled = 25;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 25			; 00000019H

; 1623 : 			Commands->Enable_Engine(obj,false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+552]
	call	edx
	add	esp, 8
$LN170@Custom:

; 1624 : 		}
; 1625 : 		if (MyObject->Type == PlayerSuper)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 8
	jne	SHORT $LN169@Custom

; 1626 : 			return;

	jmp	$LN205@Custom
$LN169@Custom:

; 1627 : 		if (!ShieldLightUp)

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+104]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN168@Custom

; 1628 : 			Commands->Set_Animation(obj,Animation,false,0,2,2,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH
$LN168@Custom:

; 1629 : 		Power -= param;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	sub	ecx, DWORD PTR _param$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], ecx

; 1630 : 		if (Power <= 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jg	SHORT $LN167@Custom

; 1631 : 		{
; 1632 : 			Power = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0

; 1633 : 			ShieldOff(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShieldOff@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::ShieldOff
$LN167@Custom:

; 1634 : 		}
; 1635 : 		ShieldLightUp = 0.35f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3eb33333
	movss	DWORD PTR [eax+104], xmm0
$LN171@Custom:

; 1636 : 	}
; 1637 : 	if (message == 77454812)

	cmp	DWORD PTR _message$[ebp], 77454812	; 049ddddcH
	jne	$LN155@Custom

; 1638 : 	{
; 1639 : 		if (MyObject->Type == PlayerShipDisrupter)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 16			; 00000010H
	jne	SHORT $LN165@Custom

; 1640 : 		{
; 1641 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Cannot active shield while disrupter is active!");

	push	OFFSET ??_C@_0DA@KGEIFEHM@Cannot?5active?5shield?5while?5disru@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1642 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1643 : 			return;

	jmp	$LN205@Custom
$LN165@Custom:

; 1644 : 		}
; 1645 : 		if (MyObject->Type == PlayerSuper || MyObject->Type == PlayerShipJumping)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 8
	je	SHORT $LN163@Custom
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 15			; 0000000fH
	jne	SHORT $LN164@Custom
$LN163@Custom:

; 1646 : 		{
; 1647 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Cannot active shields at this time!");

	push	OFFSET ??_C@_0CE@PCGHDDHP@Cannot?5active?5shields?5at?5this?5ti@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1648 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1649 : 			return;

	jmp	$LN205@Custom
$LN164@Custom:

; 1650 : 		}
; 1651 : 		if (MyObject->Type == PlayerShield)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 5
	jne	SHORT $LN162@Custom

; 1652 : 			ShieldOff(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShieldOff@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::ShieldOff
	jmp	$LN155@Custom
$LN162@Custom:

; 1653 : 		else if (Power >= 10)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 10			; 0000000aH
	jl	$LN160@Custom

; 1654 : 		{
; 1655 : 			Set_Skin(obj,"Blamo");

	push	OFFSET ??_C@_05HBJPNAAK@Blamo?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Set_Skin@@YAXPAVScriptableGameObj@@PBD@Z ; Set_Skin
	add	esp, 8

; 1656 : 			MyObject->Type = PlayerShield;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR [ecx+16], 5

; 1657 : 			MyObject->Size = 1.5625f;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	movss	xmm0, DWORD PTR __real@3fc80000
	movss	DWORD PTR [ecx+4], xmm0

; 1658 : 			Commands->Set_Animation(obj,Animation,false,0,1,1,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH

; 1659 : 			for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$60[ebp], 0
	jmp	SHORT $LN159@Custom
$LN158@Custom:
	mov	eax, DWORD PTR _x$60[ebp]
	add	eax, 1
	mov	DWORD PTR _x$60[ebp], eax
$LN159@Custom:
	cmp	DWORD PTR _x$60[ebp], 8
	jge	SHORT $LN157@Custom

; 1660 : 				if (MiniGamePlayerControlSystem[x].PlayerShip == obj)

	mov	eax, DWORD PTR _x$60[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	SHORT $LN156@Custom

; 1661 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->ShieldRaisedCount++;

	mov	eax, DWORD PTR _x$60[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 424				; 000001a8H
	mov	DWORD PTR tv468[ebp], eax
	mov	edx, DWORD PTR tv468[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv468[ebp]
	mov	DWORD PTR [ecx], eax
$LN156@Custom:

; 1662 : 		}

	jmp	SHORT $LN158@Custom
$LN157@Custom:

; 1663 : 		else

	jmp	SHORT $LN155@Custom
$LN160@Custom:

; 1664 : 		{
; 1665 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Insufficient power to activate shields!");

	push	OFFSET ??_C@_0CI@HLGDINOP@Insufficient?5power?5to?5activate?5s@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1666 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8
$LN155@Custom:

; 1667 : 		}
; 1668 : 	}
; 1669 : 	if (message == 77454813)

	cmp	DWORD PTR _message$[ebp], 77454813	; 049dddddH
	jne	$LN136@Custom

; 1670 : 	{
; 1671 : 		if (MyObject->Type == PlayerShipDisrupter)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 16			; 00000010H
	jne	SHORT $LN153@Custom

; 1672 : 		{
; 1673 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Cannot active cloak while disrupter is active!");

	push	OFFSET ??_C@_0CP@EDAJIGJF@Cannot?5active?5cloak?5while?5disrup@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1674 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1675 : 			return;

	jmp	$LN205@Custom
$LN153@Custom:

; 1676 : 		}
; 1677 : 		if (MyObject->Type == PlayerSuper || MyObject->Type == PlayerShipJumping)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 8
	je	SHORT $LN151@Custom
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 15			; 0000000fH
	jne	SHORT $LN152@Custom
$LN151@Custom:

; 1678 : 		{
; 1679 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Cannot active cloak at this time!");

	push	OFFSET ??_C@_0CC@DCLCEEDD@Cannot?5active?5cloak?5at?5this?5time@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1680 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1681 : 			return;

	jmp	$LN205@Custom
$LN152@Custom:

; 1682 : 		}
; 1683 : 		if (MyObject->Type == PlayerShield)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 5
	jne	$LN150@Custom

; 1684 : 		{
; 1685 : 			if (Power < 10)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 10			; 0000000aH
	jge	SHORT $LN149@Custom

; 1686 : 			{
; 1687 : 				JmgUtility::DisplayChatMessage(sender,200,200,125,"Insufficient power to activate cloak!");

	push	OFFSET ??_C@_0CG@BGOEAGGL@Insufficient?5power?5to?5activate?5c@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1688 : 				Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1689 : 				return;

	jmp	$LN205@Custom
$LN149@Custom:

; 1690 : 			}
; 1691 : 			ShieldOff(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShieldOff@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::ShieldOff

; 1692 : 			MyObject->Type = PlayerCloak;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR [ecx+16], 7

; 1693 : 			Commands->Set_Animation(obj,Animation,false,0,0,3,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH

; 1694 : 			for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$59[ebp], 0
	jmp	SHORT $LN148@Custom
$LN147@Custom:
	mov	eax, DWORD PTR _x$59[ebp]
	add	eax, 1
	mov	DWORD PTR _x$59[ebp], eax
$LN148@Custom:
	cmp	DWORD PTR _x$59[ebp], 8
	jge	SHORT $LN146@Custom

; 1695 : 				if (MiniGamePlayerControlSystem[x].PlayerShip == obj)

	mov	eax, DWORD PTR _x$59[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	SHORT $LN145@Custom

; 1696 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->ShipCloakedCount++;

	mov	eax, DWORD PTR _x$59[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 416				; 000001a0H
	mov	DWORD PTR tv539[ebp], eax
	mov	edx, DWORD PTR tv539[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv539[ebp]
	mov	DWORD PTR [ecx], eax
$LN145@Custom:

; 1697 : 		}

	jmp	SHORT $LN147@Custom
$LN146@Custom:

; 1698 : 		else if (MyObject->Type == PlayerCloak)

	jmp	$LN136@Custom
$LN150@Custom:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 7
	jne	SHORT $LN143@Custom

; 1699 : 			CloakOff(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CloakOff@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::CloakOff
	jmp	$LN136@Custom
$LN143@Custom:

; 1700 : 		else if (Power >= 10)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 10			; 0000000aH
	jl	$LN141@Custom

; 1701 : 		{
; 1702 : 			MyObject->Type = PlayerCloak;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR [ecx+16], 7

; 1703 : 			Commands->Set_Animation(obj,Animation,false,0,0,3,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH

; 1704 : 			for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$58[ebp], 0
	jmp	SHORT $LN140@Custom
$LN139@Custom:
	mov	eax, DWORD PTR _x$58[ebp]
	add	eax, 1
	mov	DWORD PTR _x$58[ebp], eax
$LN140@Custom:
	cmp	DWORD PTR _x$58[ebp], 8
	jge	SHORT $LN138@Custom

; 1705 : 				if (MiniGamePlayerControlSystem[x].PlayerShip == obj)

	mov	eax, DWORD PTR _x$58[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	SHORT $LN137@Custom

; 1706 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->ShipCloakedCount++;

	mov	eax, DWORD PTR _x$58[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 416				; 000001a0H
	mov	DWORD PTR tv572[ebp], eax
	mov	edx, DWORD PTR tv572[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv572[ebp]
	mov	DWORD PTR [ecx], eax
$LN137@Custom:

; 1707 : 		}

	jmp	SHORT $LN139@Custom
$LN138@Custom:

; 1708 : 		else

	jmp	SHORT $LN136@Custom
$LN141@Custom:

; 1709 : 		{
; 1710 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Insufficient power to activate cloak!");

	push	OFFSET ??_C@_0CG@BGOEAGGL@Insufficient?5power?5to?5activate?5c@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1711 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8
$LN136@Custom:

; 1712 : 		}
; 1713 : 	}
; 1714 : 	if (message == 77454815 && MyObject->Type != PlayerSuper)

	cmp	DWORD PTR _message$[ebp], 77454815	; 049ddddfH
	jne	$LN135@Custom
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 8
	je	$LN135@Custom

; 1715 : 	{
; 1716 : 		if (EngineDisabled)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN134@Custom

; 1717 : 		{
; 1718 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Cannot deploy a High Yield Warhead while engines are off-line!");

	push	OFFSET ??_C@_0DP@LIMOOHLM@Cannot?5deploy?5a?5High?5Yield?5Warhe@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1719 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1720 : 			return;

	jmp	$LN205@Custom
$LN134@Custom:

; 1721 : 		}
; 1722 : 		if (MyObject->Type == PlayerShipDisrupter)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 16			; 00000010H
	jne	SHORT $LN133@Custom

; 1723 : 		{
; 1724 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Cannot deploy a High Yield Warhead while disrupter is active!");

	push	OFFSET ??_C@_0DO@KDGMNIJG@Cannot?5deploy?5a?5High?5Yield?5Warhe@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1725 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1726 : 			return;

	jmp	$LN205@Custom
$LN133@Custom:

; 1727 : 		}
; 1728 : 		if (MyObject->Type == PlayerShipJumping)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 15			; 0000000fH
	jne	SHORT $LN132@Custom

; 1729 : 		{
; 1730 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Cannot use High Yield Warhead at this time!");

	push	OFFSET ??_C@_0CM@GIPOGOAC@Cannot?5use?5High?5Yield?5Warhead?5at@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1731 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1732 : 			return;

	jmp	$LN205@Custom
$LN132@Custom:

; 1733 : 		}
; 1734 : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$57[ebp], 0
	jmp	SHORT $LN131@Custom
$LN130@Custom:
	mov	eax, DWORD PTR _x$57[ebp]
	add	eax, 1
	mov	DWORD PTR _x$57[ebp], eax
$LN131@Custom:
	cmp	DWORD PTR _x$57[ebp], 8
	jge	$LN129@Custom

; 1735 : 			if (MiniGamePlayerControlSystem[x].PlayerShip == obj)

	mov	eax, DWORD PTR _x$57[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	$LN126@Custom

; 1736 : 				if (MiniGamePlayerControlSystem[x].SuperBombs)

	mov	eax, DWORD PTR _x$57[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+356], 0
	je	SHORT $LN127@Custom

; 1737 : 				{
; 1738 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->HEWUsed++;

	mov	eax, DWORD PTR _x$57[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 320				; 00000140H
	mov	DWORD PTR tv631[ebp], eax
	mov	edx, DWORD PTR tv631[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv631[ebp]
	mov	DWORD PTR [ecx], eax

; 1739 : 					MiniGamePlayerControlSystem[x].SuperBombs--;

	mov	eax, DWORD PTR _x$57[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+356]
	sub	ecx, 1
	mov	edx, DWORD PTR _x$57[ebp]
	imul	edx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+356], ecx

; 1740 : 				}
; 1741 : 				else

	jmp	SHORT $LN126@Custom
$LN127@Custom:

; 1742 : 				{
; 1743 : 					JmgUtility::DisplayChatMessage(sender,200,200,125,"You do not have any high yield warheads to deploy!");

	push	OFFSET ??_C@_0DD@GCNAPHJL@You?5do?5not?5have?5any?5high?5yield?5w@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1744 : 					Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1745 : 					return;

	jmp	$LN205@Custom
$LN126@Custom:

; 1746 : 				}

	jmp	$LN130@Custom
$LN129@Custom:

; 1747 : 		for (int x = 1;x < 128;x++)

	mov	DWORD PTR _x$56[ebp], 1
	jmp	SHORT $LN125@Custom
$LN124@Custom:
	mov	eax, DWORD PTR _x$56[ebp]
	add	eax, 1
	mov	DWORD PTR _x$56[ebp], eax
$LN125@Custom:
	cmp	DWORD PTR _x$56[ebp], 128		; 00000080H
	jge	SHORT $LN123@Custom

; 1748 : 		{
; 1749 : 			GameObject *Player = Get_GameObj(x);

	mov	eax, DWORD PTR _x$56[ebp]
	push	eax
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	mov	DWORD PTR _Player$55[ebp], eax

; 1750 : 			if (!Player)

	cmp	DWORD PTR _Player$55[ebp], 0
	jne	SHORT $LN122@Custom

; 1751 : 				continue;	

	jmp	SHORT $LN124@Custom
$LN122@Custom:

; 1752 : 			JmgUtility::DisplayChatMessage(Player,200,125,125,"//////Warning: A HIGH YIELD WARHEAD IS BEING CHARGED!\\\\\\\\\\\\");

	push	OFFSET ??_C@_0DM@DEONIBDK@?1?1?1?1?1?1Warning?3?5A?5HIGH?5YIELD?5WARH@
	push	125					; 0000007dH
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	eax, DWORD PTR _Player$55[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1753 : 			Create_2D_Sound_Player(Player,"SFX.Comet_Busters_UI_HYW_Fire_Sound");

	push	OFFSET ??_C@_0CE@DHKIKOO@SFX?4Comet_Busters_UI_HYW_Fire_So@
	mov	eax, DWORD PTR _Player$55[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1754 : 		}

	jmp	SHORT $LN124@Custom
$LN123@Custom:

; 1755 : 		ChangingWeapons = 24;

	mov	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+110], ax

; 1756 : 		Power = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0

; 1757 : 		Set_Skin(obj,"Blamo");

	push	OFFSET ??_C@_05HBJPNAAK@Blamo?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Set_Skin@@YAXPAVScriptableGameObj@@PBD@Z ; Set_Skin
	add	esp, 8

; 1758 : 		MyObject->Type = PlayerSuper;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR [ecx+16], 8

; 1759 : 		MyObject->Size = 1.5625f;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	movss	xmm0, DWORD PTR __real@3fc80000
	movss	DWORD PTR [ecx+4], xmm0

; 1760 : 		Commands->Set_Animation(obj,Animation,false,0,2,2,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH

; 1761 : 		OverPoweredWeapons = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+108], 0

; 1762 : 		Set_Current_Bullets(obj,0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Bullets
	add	esp, 8

; 1763 : 		Set_Current_Clip_Bullets(obj,0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8

; 1764 : 
; 1765 : 		GameObject *SuperWeapon = Commands->Create_Object("Daves Arrow",Commands->Get_Position(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _SuperWeapon$54[ebp], eax

; 1766 : 		char params[32];
; 1767 : 		sprintf(params,"%d",Commands->Get_ID(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	lea	eax, DWORD PTR _params$53[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1768 : 		Commands->Attach_Script(SuperWeapon,"JMG_CMTB_Ship_Super_Weapon",params);

	lea	eax, DWORD PTR _params$53[ebp]
	push	eax
	push	OFFSET ??_C@_0BL@ONMMODHJ@JMG_CMTB_Ship_Super_Weapon?$AA@
	mov	ecx, DWORD PTR _SuperWeapon$54[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+120]
	call	eax
	add	esp, 12					; 0000000cH
$LN135@Custom:

; 1769 : 	}
; 1770 : 	if (message == 7043454)

	cmp	DWORD PTR _message$[ebp], 7043454	; 006b797eH
	jne	$LN119@Custom

; 1771 : 	{
; 1772 : 		if (!param)

	cmp	DWORD PTR _param$[ebp], 0
	jne	SHORT $LN120@Custom

; 1773 : 		{
; 1774 : 			Commands->Set_Animation(obj,Animation,false,0,1,1,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH

; 1775 : 			Commands->Send_Custom_Event(obj,obj,7043454,1,2.5f);

	push	ecx
	movss	xmm0, DWORD PTR __real@40200000
	movss	DWORD PTR [esp], xmm0
	push	1
	push	7043454					; 006b797eH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 1776 : 		}
; 1777 : 		else

	jmp	SHORT $LN119@Custom
$LN120@Custom:

; 1778 : 			ShieldOff(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShieldOff@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::ShieldOff
$LN119@Custom:

; 1779 : 	}
; 1780 : 	if (message >= CMTBPowerUpCustomMessage && message <= CMTBPowerUpCustomMessage+20)

	cmp	DWORD PTR _message$[ebp], 90335490	; 05626902H
	jl	$LN114@Custom
	cmp	DWORD PTR _message$[ebp], 90335510	; 05626916H
	jg	$LN114@Custom

; 1781 : 	{
; 1782 : 		if (_stricmp(Commands->Get_Preset_Name(sender),"CMTB_Powerup_Object") && param != -1337)

	push	OFFSET ??_C@_0BE@IAPNGHEF@CMTB_Powerup_Object?$AA@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+116]
	call	edx
	add	esp, 4
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN117@Custom
	cmp	DWORD PTR _param$[ebp], -1337		; fffffac7H
	je	SHORT $LN117@Custom

; 1783 : 			return;

	jmp	$LN205@Custom
$LN117@Custom:

; 1784 : 		int Points = 0;

	mov	DWORD PTR _Points$52[ebp], 0

; 1785 : 		bool CouldJump = false;

	mov	BYTE PTR _CouldJump$51[ebp], 0

; 1786 : 		int ShipCharge = (message-CMTBPowerUpCustomMessage+1)*25;

	mov	eax, DWORD PTR _message$[ebp]
	sub	eax, 90335489				; 05626901H
	imul	eax, 25					; 00000019H
	mov	DWORD PTR _ShipCharge$50[ebp], eax

; 1787 : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$49[ebp], 0
	jmp	SHORT $LN116@Custom
$LN115@Custom:
	mov	eax, DWORD PTR _x$49[ebp]
	add	eax, 1
	mov	DWORD PTR _x$49[ebp], eax
$LN116@Custom:
	cmp	DWORD PTR _x$49[ebp], 8
	jge	$LN114@Custom

; 1788 : 			if (MiniGamePlayerControlSystem[x].PlayerShip == obj)

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	$LN113@Custom

; 1789 : 			{
; 1790 : 				switch (message-CMTBPowerUpCustomMessage)

	mov	eax, DWORD PTR _message$[ebp]
	sub	eax, 90335490				; 05626902H
	mov	DWORD PTR tv741[ebp], eax
	cmp	DWORD PTR tv741[ebp], 16		; 00000010H
	ja	$LN111@Custom
	mov	ecx, DWORD PTR tv741[ebp]
	jmp	DWORD PTR $LN216@Custom[ecx*4]
$LN110@Custom:

; 1791 : 				{
; 1792 : 				case 0: case 1: case 2:
; 1793 : 					if (Power >= 100)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 100			; 00000064H
	jl	SHORT $LN109@Custom

; 1794 : 					{
; 1795 : 						JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),127,255,0,"Energy Cell Stocks are full!");

	push	OFFSET ??_C@_0BN@CIJLFMGA@Energy?5Cell?5Stocks?5are?5full?$CB?$AA@
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1796 : 						goto SHIPFAILEDTOGETPOWERUP;

	jmp	$LN108@Custom
	jmp	$SHIPFAILEDTOGETPOWERUP$217
$LN109@Custom:

; 1797 : 					}
; 1798 : 					char EnergyCellMsg[200];
; 1799 : 					sprintf(EnergyCellMsg,"%d Energy Cells acquired.",ShipCharge);

	mov	eax, DWORD PTR _ShipCharge$50[ebp]
	push	eax
	push	OFFSET ??_C@_0BK@COFCHGJB@?$CFd?5Energy?5Cells?5acquired?4?$AA@
	lea	ecx, DWORD PTR _EnergyCellMsg$48[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1800 : 					JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),127,255,0,EnergyCellMsg);

	lea	eax, DWORD PTR _EnergyCellMsg$48[ebp]
	push	eax
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1801 : 					Power = JmgUtility::MathClampInt(Power+ShipCharge,0,100);

	push	100					; 00000064H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	add	ecx, DWORD PTR _ShipCharge$50[ebp]
	push	ecx
	call	?MathClampInt@JmgUtility@@SAHHHH@Z	; JmgUtility::MathClampInt
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], eax

; 1802 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->PowerPowerups++;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 356				; 00000164H
	mov	DWORD PTR tv775[ebp], eax
	mov	edx, DWORD PTR tv775[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv775[ebp]
	mov	DWORD PTR [ecx], eax

; 1803 : 					Create_2D_Sound_Player(Get_Vehicle_Driver(obj),"SFX.Comet_Busters_Pickup_Powerup_Health");

	push	OFFSET ??_C@_0CI@HCHEBKHH@SFX?4Comet_Busters_Pickup_Powerup@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1804 : 					break;

	jmp	$LN111@Custom
$LN107@Custom:

; 1805 : 				case 3:
; 1806 : 					if (MiniGamePlayerControlSystem[x].HasSOSBeacon)

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	movzx	ecx, BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+366]
	test	ecx, ecx
	je	SHORT $LN106@Custom

; 1807 : 					{
; 1808 : 						JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),127,255,0,"You can only carry one SOS Beacon at a time!");

	push	OFFSET ??_C@_0CN@OMBIKFLO@You?5can?5only?5carry?5one?5SOS?5Beaco@
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1809 : 						goto SHIPFAILEDTOGETPOWERUP;

	jmp	$LN105@Custom
	jmp	$SHIPFAILEDTOGETPOWERUP$217
$LN106@Custom:

; 1810 : 					}
; 1811 : 					PerkSystemIncreasePlayerPerkUnlockAmount(Get_Vehicle_Driver(obj),112,1);

	push	1
	push	112					; 00000070H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z ; PerkSystemIncreasePlayerPerkUnlockAmount
	add	esp, 12					; 0000000cH

; 1812 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->SOSBeacons++;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 352				; 00000160H
	mov	DWORD PTR tv805[ebp], eax
	mov	edx, DWORD PTR tv805[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv805[ebp]
	mov	DWORD PTR [ecx], eax

; 1813 : 					MiniGamePlayerControlSystem[x].HasSOSBeacon = true;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+366], 1

; 1814 : 					JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),127,255,0,"You have aquired a SOS Beacon!");

	push	OFFSET ??_C@_0BP@MHAMHGLL@You?5have?5aquired?5a?5SOS?5Beacon?$CB?$AA@
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1815 : 					Create_2D_Sound_Player(Get_Vehicle_Driver(obj),"SFX.Comet_Busters_Pickup_Powerup");

	push	OFFSET ??_C@_0CB@NJFDNEPI@SFX?4Comet_Busters_Pickup_Powerup@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1816 : 					break;

	jmp	$LN111@Custom
$LN104@Custom:

; 1817 : 				case 4:
; 1818 : 					if (MiniGamePlayerControlSystem[x].SuperBombs >= MaxNumberOfHighYieldWarheads)

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+356], 2
	jl	SHORT $LN103@Custom

; 1819 : 					{
; 1820 : 						JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),127,255,0,"Sorry, your cargo bay is full!");

	push	OFFSET ??_C@_0BP@NKIJMCPG@Sorry?0?5your?5cargo?5bay?5is?5full?$CB?$AA@
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1821 : 						goto SHIPFAILEDTOGETPOWERUP;

	jmp	$LN102@Custom
	jmp	$SHIPFAILEDTOGETPOWERUP$217
$LN103@Custom:

; 1822 : 					}
; 1823 : 					PerkSystemIncreasePlayerPerkUnlockAmount(Get_Vehicle_Driver(obj),111,1);

	push	1
	push	111					; 0000006fH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z ; PerkSystemIncreasePlayerPerkUnlockAmount
	add	esp, 12					; 0000000cH

; 1824 : 					MiniGamePlayerControlSystem[x].SuperBombs++;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+356]
	add	ecx, 1
	mov	edx, DWORD PTR _x$49[ebp]
	imul	edx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+356], ecx

; 1825 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->HEWPowerups++;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 316				; 0000013cH
	mov	DWORD PTR tv854[ebp], eax
	mov	edx, DWORD PTR tv854[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv854[ebp]
	mov	DWORD PTR [ecx], eax

; 1826 : 					JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),127,255,0,"You have aquired a high yield warhead!");

	push	OFFSET ??_C@_0CH@MIDLDNOD@You?5have?5aquired?5a?5high?5yield?5wa@
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1827 : 					Create_2D_Sound_Player(Get_Vehicle_Driver(obj),"SFX.Comet_Busters_Pickup_Powerup");

	push	OFFSET ??_C@_0CB@NJFDNEPI@SFX?4Comet_Busters_Pickup_Powerup@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1828 : 					break;

	jmp	$LN111@Custom
$LN101@Custom:

; 1829 : 				case 5:
; 1830 : 					PerkSystemIncreasePlayerPerkUnlockAmount(Get_Vehicle_Driver(obj),105,1);

	push	1
	push	105					; 00000069H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z ; PerkSystemIncreasePlayerPerkUnlockAmount
	add	esp, 12					; 0000000cH

; 1831 : 					JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),127,255,0,"You have aquired another life!");

	push	OFFSET ??_C@_0BP@IKJEMBEN@You?5have?5aquired?5another?5life?$CB?$AA@
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1832 : 					MiniGamePlayerControlSystem[x].NumberOfLives++;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _x$49[ebp]
	imul	edx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+4], ecx

; 1833 : 					MiniGamePlayerControlSystem[x].LastNewLifeScore = MiniGamePlayerControlSystem[x].Score;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR _x$49[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60]
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+360], edx

; 1834 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->ExtraLifePowerups++;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 360				; 00000168H
	mov	DWORD PTR tv902[ebp], eax
	mov	edx, DWORD PTR tv902[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv902[ebp]
	mov	DWORD PTR [ecx], eax

; 1835 : 					Set_Max_Shield_Strength(MiniGamePlayerControlSystem[x].SpectatorObject,(float)JmgUtility::MathClampInt(MiniGamePlayerControlSystem[x].NumberOfLives+1,5,100));

	push	100					; 00000064H
	push	5
	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	add	ecx, 1
	push	ecx
	call	?MathClampInt@JmgUtility@@SAHHHH@Z	; JmgUtility::MathClampInt
	add	esp, 12					; 0000000cH
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _x$49[ebp]
	imul	edx, 596				; 00000254H
	mov	eax, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+16]
	push	eax
	call	?Set_Max_Shield_Strength@@YAXPAVScriptableGameObj@@M@Z ; Set_Max_Shield_Strength
	add	esp, 8

; 1836 : 					Commands->Set_Shield_Strength(MiniGamePlayerControlSystem[x].SpectatorObject,(float)MiniGamePlayerControlSystem[x].NumberOfLives+1);

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	cvtsi2ss xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	addss	xmm0, DWORD PTR __real@3f800000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _x$49[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+16]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+240]
	call	ecx
	add	esp, 8

; 1837 : 					if (MiniGamePlayerControlSystem[x].PlayerShip)

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8], 0
	je	$LN100@Custom

; 1838 : 					{
; 1839 : 						if (Commands->Get_Max_Health(MiniGamePlayerControlSystem[x].PlayerShip) < MiniGamePlayerControlSystem[x].NumberOfLives+1)

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+224]
	call	eax
	add	esp, 4
	fstp	DWORD PTR tv2614[ebp]
	mov	ecx, DWORD PTR _x$49[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+4]
	add	edx, 1
	cvtsi2ss xmm0, edx
	comiss	xmm0, DWORD PTR tv2614[ebp]
	jbe	SHORT $LN99@Custom

; 1840 : 							Set_Max_Health(MiniGamePlayerControlSystem[x].PlayerShip,(float)MiniGamePlayerControlSystem[x].NumberOfLives+1);

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	cvtsi2ss xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	addss	xmm0, DWORD PTR __real@3f800000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _x$49[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+8]
	push	edx
	call	?Set_Max_Health@@YAXPAVScriptableGameObj@@M@Z ; Set_Max_Health
	add	esp, 8
$LN99@Custom:

; 1841 : 						Commands->Set_Health(MiniGamePlayerControlSystem[x].PlayerShip,(float)MiniGamePlayerControlSystem[x].NumberOfLives+1);

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	cvtsi2ss xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	addss	xmm0, DWORD PTR __real@3f800000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _x$49[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+8]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+228]
	call	ecx
	add	esp, 8
$LN100@Custom:

; 1842 : 					}
; 1843 : 					Create_2D_Sound_Player(Get_Vehicle_Driver(obj),"SFX.Comet_Busters_Pickup_Powerup");

	push	OFFSET ??_C@_0CB@NJFDNEPI@SFX?4Comet_Busters_Pickup_Powerup@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1844 : 					break;

	jmp	$LN111@Custom
$LN98@Custom:

; 1845 : 				case 6:	case 7:	case 8: case 9: case 11:
; 1846 : 					if (message-CMTBPowerUpCustomMessage == 6)

	mov	eax, DWORD PTR _message$[ebp]
	sub	eax, 90335490				; 05626902H
	cmp	eax, 6
	jne	SHORT $LN97@Custom

; 1847 : 						Points = 10;

	mov	DWORD PTR _Points$52[ebp], 10		; 0000000aH
	jmp	SHORT $LN90@Custom
$LN97@Custom:

; 1848 : 					else if (message-CMTBPowerUpCustomMessage == 7)

	mov	eax, DWORD PTR _message$[ebp]
	sub	eax, 90335490				; 05626902H
	cmp	eax, 7
	jne	SHORT $LN95@Custom

; 1849 : 						Points = 25;

	mov	DWORD PTR _Points$52[ebp], 25		; 00000019H
	jmp	SHORT $LN90@Custom
$LN95@Custom:

; 1850 : 					else if (message-CMTBPowerUpCustomMessage == 8)

	mov	eax, DWORD PTR _message$[ebp]
	sub	eax, 90335490				; 05626902H
	cmp	eax, 8
	jne	SHORT $LN93@Custom

; 1851 : 						Points = 100;

	mov	DWORD PTR _Points$52[ebp], 100		; 00000064H
	jmp	SHORT $LN90@Custom
$LN93@Custom:

; 1852 : 					else if (message-CMTBPowerUpCustomMessage == 9)

	mov	eax, DWORD PTR _message$[ebp]
	sub	eax, 90335490				; 05626902H
	cmp	eax, 9
	jne	SHORT $LN91@Custom

; 1853 : 						Points = 1000;

	mov	DWORD PTR _Points$52[ebp], 1000		; 000003e8H

; 1854 : 					else

	jmp	SHORT $LN90@Custom
$LN91@Custom:

; 1855 : 						Points = 10000;

	mov	DWORD PTR _Points$52[ebp], 10000	; 00002710H
$LN90@Custom:

; 1856 : 					if (MiniGamePlayerControlSystem[x].DoublePointsTime)

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+396], 0
	je	SHORT $LN89@Custom

; 1857 : 					{
; 1858 : 						RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->DoublePointsPoints += (int)Points;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 404				; 00000194H
	mov	DWORD PTR tv989[ebp], eax
	mov	edx, DWORD PTR tv989[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _Points$52[ebp]
	mov	ecx, DWORD PTR tv989[ebp]
	mov	DWORD PTR [ecx], eax

; 1859 : 						Points *= 2;

	mov	eax, DWORD PTR _Points$52[ebp]
	shl	eax, 1
	mov	DWORD PTR _Points$52[ebp], eax
$LN89@Custom:

; 1860 : 					}
; 1861 : 					MiniGamePlayerControlSystem[x].Score += (float)Points;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	cvtsi2ss xmm0, DWORD PTR _Points$52[ebp]
	addss	xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60]
	mov	ecx, DWORD PTR _x$49[ebp]
	imul	ecx, 596				; 00000254H
	movss	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+60], xmm0

; 1862 : 					Commands->Give_Points(Get_Vehicle_Driver(obj),(float)Points,false);

	push	0
	cvtsi2ss xmm0, DWORD PTR _Points$52[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+636]
	call	edx
	add	esp, 12					; 0000000cH

; 1863 : 					char PointMsg[200];
; 1864 : 					sprintf(PointMsg,"%d points acquired.",Points);

	mov	eax, DWORD PTR _Points$52[ebp]
	push	eax
	push	OFFSET ??_C@_0BE@HAEHJBND@?$CFd?5points?5acquired?4?$AA@
	lea	ecx, DWORD PTR _PointMsg$47[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1865 : 					JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),127,255,0,PointMsg);

	lea	eax, DWORD PTR _PointMsg$47[ebp]
	push	eax
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1866 : 					Create_2D_Sound_Player(Get_Vehicle_Driver(obj),"SFX.Comet_Busters_Pickup_Powerup_Points");

	push	OFFSET ??_C@_0CI@LEJBKDGI@SFX?4Comet_Busters_Pickup_Powerup@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1867 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->PointPowerups++;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 368				; 00000170H
	mov	DWORD PTR tv1028[ebp], eax
	mov	edx, DWORD PTR tv1028[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv1028[ebp]
	mov	DWORD PTR [ecx], eax

; 1868 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->PowerupPoints+=Points;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 372				; 00000174H
	mov	DWORD PTR tv1037[ebp], eax
	mov	edx, DWORD PTR tv1037[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _Points$52[ebp]
	mov	ecx, DWORD PTR tv1037[ebp]
	mov	DWORD PTR [ecx], eax

; 1869 : 					break;

	jmp	$LN111@Custom
$LN88@Custom:

; 1870 : 				case 10:
; 1871 : 					if (MiniGamePlayerControlSystem[x].DronePowerup)

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	movzx	ecx, BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+376]
	test	ecx, ecx
	je	SHORT $LN87@Custom

; 1872 : 					{
; 1873 : 						JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),127,255,0,"You can only carry one Drone at a time!");

	push	OFFSET ??_C@_0CI@BDHEFFLG@You?5can?5only?5carry?5one?5Drone?5at?5@
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1874 : 						goto SHIPFAILEDTOGETPOWERUP;

	jmp	$LN86@Custom
	jmp	$SHIPFAILEDTOGETPOWERUP$217
$LN87@Custom:

; 1875 : 					}
; 1876 : 					PerkSystemIncreasePlayerPerkUnlockAmount(Get_Vehicle_Driver(obj),110,1);

	push	1
	push	110					; 0000006eH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z ; PerkSystemIncreasePlayerPerkUnlockAmount
	add	esp, 12					; 0000000cH

; 1877 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->PickedUpDrone++;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 376				; 00000178H
	mov	DWORD PTR tv1095[ebp], eax
	mov	edx, DWORD PTR tv1095[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv1095[ebp]
	mov	DWORD PTR [ecx], eax

; 1878 : 					MiniGamePlayerControlSystem[x].DronePowerup = true;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+376], 1

; 1879 : 					JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),127,255,0,"You have aquired a Drone!");

	push	OFFSET ??_C@_0BK@HNFMDNNO@You?5have?5aquired?5a?5Drone?$CB?$AA@
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1880 : 					Create_2D_Sound_Player(Get_Vehicle_Driver(obj),"SFX.Comet_Busters_Pickup_Powerup");

	push	OFFSET ??_C@_0CB@NJFDNEPI@SFX?4Comet_Busters_Pickup_Powerup@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1881 : 					break;

	jmp	$LN111@Custom
$LN85@Custom:

; 1882 : 				case 12:
; 1883 : 					PerkSystemIncreasePlayerPerkUnlockAmount(Get_Vehicle_Driver(obj),50,1);

	push	1
	push	50					; 00000032H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z ; PerkSystemIncreasePlayerPerkUnlockAmount
	add	esp, 12					; 0000000cH

; 1884 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->RegenPowerups++;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 396				; 0000018cH
	mov	DWORD PTR tv1123[ebp], eax
	mov	edx, DWORD PTR tv1123[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv1123[ebp]
	mov	DWORD PTR [ecx], eax

; 1885 : 					RapidPowerRegen = 120;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 120		; 00000078H

; 1886 : 					JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),127,255,0,"You have aquired a rapid energy cell regen for 2 minutes!");

	push	OFFSET ??_C@_0DK@BMNBPLJM@You?5have?5aquired?5a?5rapid?5energy?5@
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1887 : 					Create_2D_Sound_Player(Get_Vehicle_Driver(obj),"SFX.Comet_Busters_Pickup_Powerup_Health");

	push	OFFSET ??_C@_0CI@HCHEBKHH@SFX?4Comet_Busters_Pickup_Powerup@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1888 : 					break;

	jmp	$LN111@Custom
$LN84@Custom:

; 1889 : 				case 13:
; 1890 : 					PerkSystemIncreasePlayerPerkUnlockAmount(Get_Vehicle_Driver(obj),107,1);

	push	1
	push	107					; 0000006bH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z ; PerkSystemIncreasePlayerPerkUnlockAmount
	add	esp, 12					; 0000000cH

; 1891 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->DoublePointsPowerups++;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 400				; 00000190H
	mov	DWORD PTR tv1149[ebp], eax
	mov	edx, DWORD PTR tv1149[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv1149[ebp]
	mov	DWORD PTR [ecx], eax

; 1892 : 					MiniGamePlayerControlSystem[x].DoublePointsTime = 60;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+396], 60 ; 0000003cH

; 1893 : 					JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),127,255,0,"You have aquired a double points powerup for 1 minute!");

	push	OFFSET ??_C@_0DH@HLMJACGM@You?5have?5aquired?5a?5double?5points@
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1894 : 					Create_2D_Sound_Player(Get_Vehicle_Driver(obj),"SFX.Comet_Busters_Pickup_Powerup_Points");

	push	OFFSET ??_C@_0CI@LEJBKDGI@SFX?4Comet_Busters_Pickup_Powerup@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1895 : 					break;

	jmp	$LN111@Custom
$LN83@Custom:

; 1896 : 				case 14:
; 1897 : 					if (MiniGamePlayerControlSystem[x].HyperspaceDriveCharge >= 5)

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+432], 5
	jl	SHORT $LN82@Custom

; 1898 : 					{
; 1899 : 						JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),127,255,0,"Sorry, your hyperdrive is already fully charged!");

	push	OFFSET ??_C@_0DB@EKOGLIED@Sorry?0?5your?5hyperdrive?5is?5alread@
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1900 : 						goto SHIPFAILEDTOGETPOWERUP;

	jmp	$LN81@Custom
	jmp	$SHIPFAILEDTOGETPOWERUP$217
$LN82@Custom:

; 1901 : 					}
; 1902 : 					PerkSystemIncreasePlayerPerkUnlockAmount(Get_Vehicle_Driver(obj),106,1);

	push	1
	push	106					; 0000006aH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z ; PerkSystemIncreasePlayerPerkUnlockAmount
	add	esp, 12					; 0000000cH

; 1903 : 					Create_2D_Sound_Player(Get_Vehicle_Driver(obj),"SFX.Comet_Busters_Pickup_Powerup");

	push	OFFSET ??_C@_0CB@NJFDNEPI@SFX?4Comet_Busters_Pickup_Powerup@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1904 : 					if (MiniGamePlayerControlSystem[x].HyperspaceDriveCharge)

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+432], 0
	je	SHORT $LN80@Custom

; 1905 : 						CouldJump = true;

	mov	BYTE PTR _CouldJump$51[ebp], 1
$LN80@Custom:

; 1906 : 					if (param == -1337)

	cmp	DWORD PTR _param$[ebp], -1337		; fffffac7H
	jne	SHORT $LN79@Custom

; 1907 : 						MiniGamePlayerControlSystem[x].HyperspaceDriveCharge += 5;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+432]
	add	ecx, 5
	mov	edx, DWORD PTR _x$49[ebp]
	imul	edx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+432], ecx

; 1908 : 					else

	jmp	SHORT $LN78@Custom
$LN79@Custom:

; 1909 : 						MiniGamePlayerControlSystem[x].HyperspaceDriveCharge += 2;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+432]
	add	ecx, 2
	mov	edx, DWORD PTR _x$49[ebp]
	imul	edx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+432], ecx
$LN78@Custom:

; 1910 : 					if (MiniGamePlayerControlSystem[x].HyperspaceDriveCharge > MaxHyperdriveCharge)

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+432], 5
	jle	SHORT $LN77@Custom

; 1911 : 						MiniGamePlayerControlSystem[x].HyperspaceDriveCharge = MaxHyperdriveCharge;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+432], 5
$LN77@Custom:

; 1912 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->DeerPowerups++;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 408				; 00000198H
	mov	DWORD PTR tv1218[ebp], eax
	mov	edx, DWORD PTR tv1218[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv1218[ebp]
	mov	DWORD PTR [ecx], eax

; 1913 : 					char drivemsg[220];
; 1914 : 					sprintf(drivemsg,"Hyperdrive %.0f%% charged%s",100.0f*(MiniGamePlayerControlSystem[x].HyperspaceDriveCharge/(1.00f*MaxHyperdriveCharge)),(CouldJump ? "." : "; automated systems are now on-line!"));

	movzx	eax, BYTE PTR _CouldJump$51[ebp]
	test	eax, eax
	je	SHORT $LN209@Custom
	mov	DWORD PTR tv1223[ebp], OFFSET ??_C@_01LFCBOECM@?4?$AA@
	jmp	SHORT $LN210@Custom
$LN209@Custom:
	mov	DWORD PTR tv1223[ebp], OFFSET ??_C@_0CF@HNAEINDB@?$DL?5automated?5systems?5are?5now?5on?9l@
$LN210@Custom:
	mov	ecx, DWORD PTR tv1223[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$49[ebp]
	imul	edx, 596				; 00000254H
	cvtsi2ss xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+432]
	divss	xmm0, DWORD PTR __real@40a00000
	mulss	xmm0, DWORD PTR __real@42c80000
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0BM@OMIBJMFG@Hyperdrive?5?$CF?40f?$CF?$CF?5charged?$CFs?$AA@
	lea	eax, DWORD PTR _drivemsg$46[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H

; 1915 : 					JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),127,255,0,drivemsg);

	lea	eax, DWORD PTR _drivemsg$46[ebp]
	push	eax
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1916 : 					if (MyObject->Type == NormalPlayerShip)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 0
	jne	SHORT $LN76@Custom

; 1917 : 						MyObject->Type = PlayerShipJumpable;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR [ecx+16], 14			; 0000000eH
$LN76@Custom:

; 1918 : 					break;

	jmp	$LN111@Custom
$LN75@Custom:

; 1919 : 				case 15:
; 1920 : 					if (MiniGamePlayerControlSystem[x].DroneSwarmPowerup)

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	movzx	ecx, BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+377]
	test	ecx, ecx
	je	SHORT $LN74@Custom

; 1921 : 					{
; 1922 : 						JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),127,255,0,"Your data base only has enough room for one drone swarm code!");

	push	OFFSET ??_C@_0DO@OMMMNLOB@Your?5data?5base?5only?5has?5enough?5r@
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1923 : 						goto SHIPFAILEDTOGETPOWERUP;

	jmp	$LN73@Custom
	jmp	$SHIPFAILEDTOGETPOWERUP$217
$LN74@Custom:

; 1924 : 					}
; 1925 : 					PerkSystemIncreasePlayerPerkUnlockAmount(Get_Vehicle_Driver(obj),113,1);

	push	1
	push	113					; 00000071H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z ; PerkSystemIncreasePlayerPerkUnlockAmount
	add	esp, 12					; 0000000cH

; 1926 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->PickedUpDroneSwarm++;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 444				; 000001bcH
	mov	DWORD PTR tv1271[ebp], eax
	mov	edx, DWORD PTR tv1271[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv1271[ebp]
	mov	DWORD PTR [ecx], eax

; 1927 : 					MiniGamePlayerControlSystem[x].DroneSwarmPowerup = true;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+377], 1

; 1928 : 					JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),127,255,0,"You have aquired drone swarm calling codes!");

	push	OFFSET ??_C@_0CM@KFNGBJLK@You?5have?5aquired?5drone?5swarm?5cal@
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1929 : 					Create_2D_Sound_Player(Get_Vehicle_Driver(obj),"SFX.Comet_Busters_Pickup_Powerup");

	push	OFFSET ??_C@_0CB@NJFDNEPI@SFX?4Comet_Busters_Pickup_Powerup@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1930 : 					break;

	jmp	$LN111@Custom
$LN72@Custom:

; 1931 : 				case 16:
; 1932 : 					PerkSystemIncreasePlayerPerkUnlockAmount(Get_Vehicle_Driver(obj),109,1);

	push	1
	push	109					; 0000006dH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z ; PerkSystemIncreasePlayerPerkUnlockAmount
	add	esp, 12					; 0000000cH

; 1933 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->RegenPowerups++;

	mov	eax, DWORD PTR _x$49[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 396				; 0000018cH
	mov	DWORD PTR tv1299[ebp], eax
	mov	edx, DWORD PTR tv1299[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv1299[ebp]
	mov	DWORD PTR [ecx], eax

; 1934 : 					ExtraShotActive = 120;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+116], 120		; 00000078H

; 1935 : 					JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),127,255,0,"You have aquired a 2 minute weapon upgrade!");

	push	OFFSET ??_C@_0CM@PHDJABCO@You?5have?5aquired?5a?52?5minute?5weap@
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1936 : 					Create_2D_Sound_Player(Get_Vehicle_Driver(obj),"SFX.Comet_Busters_Pickup_Powerup_Health");

	push	OFFSET ??_C@_0CI@HCHEBKHH@SFX?4Comet_Busters_Pickup_Powerup@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1937 : 					Set_Current_Clip_Bullets(obj,Get_Current_Clip_Bullets(obj)+1);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Current_Clip_Bullets@@YAHPAVScriptableGameObj@@@Z ; Get_Current_Clip_Bullets
	add	esp, 4
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8
$LN111@Custom:

; 1938 : 					break;
; 1939 : 				}
; 1940 : 				return;

	jmp	$LN205@Custom
$LN73@Custom:
$LN81@Custom:
$LN86@Custom:
$LN102@Custom:
$LN105@Custom:
$LN108@Custom:
$SHIPFAILEDTOGETPOWERUP$217:

; 1941 : SHIPFAILEDTOGETPOWERUP:
; 1942 : 				float Random = Commands->Get_Random(-180.0f,180.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@43340000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c3340000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR _Random$45[ebp]

; 1943 : 				GameObject *Powerup = Commands->Create_Object("CMTB_Powerup_Object",Vector3(Commands->Get_Position(obj).X+cos(Random*PI180)*3.0f,Commands->Get_Position(obj).Y+sin(Random*PI180)*3.0f,0.25));

	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T9[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	mov	esi, eax
	movss	xmm0, DWORD PTR _Random$45[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR tv2780[ebp]
	movss	xmm0, DWORD PTR tv2780[ebp]
	mulss	xmm0, DWORD PTR __real@40400000
	addss	xmm0, DWORD PTR [esi+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T10[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	mov	esi, eax
	movss	xmm0, DWORD PTR _Random$45[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv2792[ebp]
	movss	xmm0, DWORD PTR tv2792[ebp]
	mulss	xmm0, DWORD PTR __real@40400000
	addss	xmm0, DWORD PTR [esi]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T8[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	push	OFFSET ??_C@_0BE@IAPNGHEF@CMTB_Powerup_Object?$AA@
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+100]
	call	eax
	add	esp, 8
	mov	DWORD PTR _Powerup$44[ebp], eax

; 1944 : 				if (param == -1337)

	cmp	DWORD PTR _param$[ebp], -1337		; fffffac7H
	jne	SHORT $LN71@Custom

; 1945 : 					param = 0;

	mov	DWORD PTR _param$[ebp], 0
$LN71@Custom:

; 1946 : 				char params[256];
; 1947 : 				sprintf(params,"%d,%d",message-CMTBPowerUpCustomMessage,param+1);

	mov	eax, DWORD PTR _param$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	sub	ecx, 90335490				; 05626902H
	push	ecx
	push	OFFSET ??_C@_05KABNCBHK@?$CFd?0?$CFd?$AA@
	lea	edx, DWORD PTR _params$43[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 1948 : 				Commands->Attach_Script(Powerup,"JMG_CMTB_Powerup_Script",params);

	lea	eax, DWORD PTR _params$43[ebp]
	push	eax
	push	OFFSET ??_C@_0BI@KMNMLLME@JMG_CMTB_Powerup_Script?$AA@
	mov	ecx, DWORD PTR _Powerup$44[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+120]
	call	eax
	add	esp, 12					; 0000000cH

; 1949 : 				Create_2D_Sound_Player(Get_Vehicle_Driver(obj),"SFX.Comet_Busters_Pickup_Powerup_Failed");

	push	OFFSET ??_C@_0CI@DIPLOOLG@SFX?4Comet_Busters_Pickup_Powerup@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8
$LN113@Custom:

; 1950 : 			}
; 1951 : 	}

	jmp	$LN115@Custom
$LN114@Custom:

; 1952 : 	if (message == 77454816)

	cmp	DWORD PTR _message$[ebp], 77454816	; 049ddde0H
	jne	$LN67@Custom

; 1953 : 	{
; 1954 : 		if (!OverPoweredWeapons && Power < 10)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+108]
	test	ecx, ecx
	jne	SHORT $LN69@Custom
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 10			; 0000000aH
	jge	SHORT $LN69@Custom

; 1955 : 		{
; 1956 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Insufficient power to overcharge weapons!");

	push	OFFSET ??_C@_0CK@HCJEKJPP@Insufficient?5power?5to?5overcharge@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1957 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1958 : 			return;

	jmp	$LN205@Custom
$LN69@Custom:

; 1959 : 		}
; 1960 : 		OverPoweredWeapons = !OverPoweredWeapons;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+108]
	test	ecx, ecx
	jne	SHORT $LN211@Custom
	mov	DWORD PTR tv1418[ebp], 1
	jmp	SHORT $LN212@Custom
$LN211@Custom:
	mov	DWORD PTR tv1418[ebp], 0
$LN212@Custom:
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR tv1418[ebp]
	mov	BYTE PTR [edx+108], al

; 1961 : 		ChangingWeapons = 8;

	mov	eax, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+110], ax

; 1962 : 		Set_Current_Bullets(obj,0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Bullets
	add	esp, 8

; 1963 : 		Set_Current_Clip_Bullets(obj,0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8

; 1964 : 		if (OverPoweredWeapons)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+108]
	test	ecx, ecx
	je	SHORT $LN68@Custom

; 1965 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_Overcharged_Weapons_Enable");

	push	OFFSET ??_C@_0CN@JFPLAHAP@SFX?4Comet_Busters_Overcharged_We@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1966 : 		else

	jmp	SHORT $LN67@Custom
$LN68@Custom:

; 1967 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_Overcharged_Weapons_Disable");

	push	OFFSET ??_C@_0CO@GHBNNCJI@SFX?4Comet_Busters_Overcharged_We@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8
$LN67@Custom:

; 1968 : 	}
; 1969 : 	if (message == 77454818)

	cmp	DWORD PTR _message$[ebp], 77454818	; 049ddde2H
	jne	$LN66@Custom

; 1970 : 	{
; 1971 : 		if (MyObject->Type == PlayerShipJumping)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 15			; 0000000fH
	jne	SHORT $LN65@Custom

; 1972 : 		{
; 1973 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Cannot deploy SOS Beacon while in hyperspace!");

	push	OFFSET ??_C@_0CO@NAPILLOI@Cannot?5deploy?5SOS?5Beacon?5while?5i@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1974 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1975 : 			return;

	jmp	$LN205@Custom
$LN65@Custom:

; 1976 : 		}
; 1977 : 		if (JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID)

	cmp	DWORD PTR ?PlayerSOSBeaconID@JMG_CMTB_Main_Game_Control@@2IA, 0 ; JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID
	je	SHORT $LN64@Custom

; 1978 : 		{
; 1979 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Sorry, there is already a SOS Beacon deployed, please wait for it to burn out before deploying another!");

	push	OFFSET ??_C@_0GI@FOKLMDKF@Sorry?0?5there?5is?5already?5a?5SOS?5Be@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1980 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1981 : 			return;

	jmp	$LN205@Custom
$LN64@Custom:

; 1982 : 		}
; 1983 : 		if (!(JMG_CMTB_Main_Game_Control::CMTBLevel % 25))

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	xor	edx, edx
	mov	ecx, 25					; 00000019H
	div	ecx
	test	edx, edx
	jne	SHORT $LN63@Custom

; 1984 : 		{
; 1985 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Due to sensor interference, it would do no good to deploy a beacon on this level!");

	push	OFFSET ??_C@_0FC@KDHMBMMC@Due?5to?5sensor?5interference?0?5it?5w@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1986 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1987 : 			return;

	jmp	$LN205@Custom
$LN63@Custom:

; 1988 : 		}
; 1989 : 		char Params[32];
; 1990 : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$41[ebp], 0
	jmp	SHORT $LN62@Custom
$LN61@Custom:
	mov	eax, DWORD PTR _x$41[ebp]
	add	eax, 1
	mov	DWORD PTR _x$41[ebp], eax
$LN62@Custom:
	cmp	DWORD PTR _x$41[ebp], 8
	jge	$LN60@Custom

; 1991 : 			if (MiniGamePlayerControlSystem[x].PlayerShip == obj)

	mov	eax, DWORD PTR _x$41[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	$LN59@Custom

; 1992 : 			{
; 1993 : 				if (MiniGamePlayerControlSystem[x].HasSOSBeacon)

	mov	eax, DWORD PTR _x$41[ebp]
	imul	eax, 596				; 00000254H
	movzx	ecx, BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+366]
	test	ecx, ecx
	je	$LN58@Custom

; 1994 : 				{
; 1995 : 					if (MiniGamePlayerControlSystem[x].CargoShipIDs[6])

	mov	eax, DWORD PTR _x$41[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, 4
	imul	ecx, 6
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+ecx+400], 0
	je	SHORT $LN57@Custom

; 1996 : 					{
; 1997 : 						JmgUtility::DisplayChatMessage(sender,200,200,125,"Sorry, you can only deploy one SOS Beacon every 5 minutes!");

	push	OFFSET ??_C@_0DL@FEPJCPF@Sorry?0?5you?5can?5only?5deploy?5one?5S@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1998 : 						Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1999 : 						return;

	jmp	$LN205@Custom
$LN57@Custom:

; 2000 : 					}
; 2001 : 					sprintf(Params,"%d",x);

	mov	eax, DWORD PTR _x$41[ebp]
	push	eax
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	lea	ecx, DWORD PTR _Params$42[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 2002 : 					MiniGamePlayerControlSystem[x].Score += 10000.0f;

	mov	eax, DWORD PTR _x$41[ebp]
	imul	eax, 596				; 00000254H
	movss	xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60]
	addss	xmm0, DWORD PTR __real@461c4000
	mov	ecx, DWORD PTR _x$41[ebp]
	imul	ecx, 596				; 00000254H
	movss	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+60], xmm0

; 2003 : 					MiniGamePlayerControlSystem[x].HasSOSBeacon = false;

	mov	eax, DWORD PTR _x$41[ebp]
	imul	eax, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+366], 0

; 2004 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->UsedSOSBeacons++;

	mov	eax, DWORD PTR _x$41[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 364				; 0000016cH
	mov	DWORD PTR tv1504[ebp], eax
	mov	edx, DWORD PTR tv1504[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv1504[ebp]
	mov	DWORD PTR [ecx], eax

; 2005 : 				}
; 2006 : 				else

	jmp	SHORT $LN56@Custom
$LN58@Custom:

; 2007 : 				{
; 2008 : 					JmgUtility::DisplayChatMessage(sender,200,200,125,"Sorry, you don't have any SOS Beacons!");

	push	OFFSET ??_C@_0CH@EJNGBCHG@Sorry?0?5you?5don?8t?5have?5any?5SOS?5Be@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2009 : 					Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 2010 : 					return;

	jmp	$LN205@Custom
$LN56@Custom:

; 2011 : 				}
; 2012 : 				break;

	jmp	SHORT $LN60@Custom
$LN59@Custom:

; 2013 : 			}

	jmp	$LN61@Custom
$LN60@Custom:

; 2014 : 		Commands->Give_Points(sender,10000.0f,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@461c4000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+636]
	call	edx
	add	esp, 12					; 0000000cH

; 2015 : 		Create_2D_Sound_Player(sender,"SFX.Comet_Busters_Beacon_Deploy_Sound");

	push	OFFSET ??_C@_0CG@ILMBFACM@SFX?4Comet_Busters_Beacon_Deploy_@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 2016 : 		JmgUtility::DisplayChatMessage(sender,200,125,125,"SOS Beacon Deployed!");

	push	OFFSET ??_C@_0BF@JPIAOKNI@SOS?5Beacon?5Deployed?$CB?$AA@
	push	125					; 0000007dH
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2017 : 		Vector3 ShipTargetPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _ShipTargetPos$40[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2018 : 		ShipTargetPos.Z = 1.481f;

	movss	xmm0, DWORD PTR __real@3fbd9168
	movss	DWORD PTR _ShipTargetPos$40[ebp+8], xmm0

; 2019 : 		GameObject *ShipBeacon = Commands->Create_Object("Daves Arrow",ShipTargetPos);

	lea	eax, DWORD PTR _ShipTargetPos$40[ebp]
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _ShipBeacon$39[ebp], eax

; 2020 : 		Commands->Set_Model(ShipBeacon,"SOS_Beacon");

	push	OFFSET ??_C@_0L@GDNFADFP@SOS_Beacon?$AA@
	mov	eax, DWORD PTR _ShipBeacon$39[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 2021 : 		JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID = Commands->Get_ID(ShipBeacon);

	mov	eax, DWORD PTR _ShipBeacon$39[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR ?PlayerSOSBeaconID@JMG_CMTB_Main_Game_Control@@2IA, eax ; JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID

; 2022 : 
; 2023 : 		GameObject *Ship = Commands->Create_Object("CMTB_Cargo_Ship",ShipTargetPos);

	lea	eax, DWORD PTR _ShipTargetPos$40[ebp]
	push	eax
	push	OFFSET ??_C@_0BA@JDFEGNBJ@CMTB_Cargo_Ship?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Ship$38[ebp], eax

; 2024 : 		Commands->Attach_Script(Ship,"JMG_CMTB_Cargo_Ship_Script",Params);

	lea	eax, DWORD PTR _Params$42[ebp]
	push	eax
	push	OFFSET ??_C@_0BL@KIMJPMME@JMG_CMTB_Cargo_Ship_Script?$AA@
	mov	ecx, DWORD PTR _Ship$38[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+120]
	call	eax
	add	esp, 12					; 0000000cH

; 2025 : 		Set_Max_Health(Ship,800.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@44480000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Ship$38[ebp]
	push	eax
	call	?Set_Max_Health@@YAXPAVScriptableGameObj@@M@Z ; Set_Max_Health
	add	esp, 8

; 2026 : 		Commands->Set_Health(Ship,800.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@44480000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Ship$38[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+228]
	call	edx
	add	esp, 8
$LN66@Custom:

; 2027 : 	}
; 2028 : 	if (message == 77454819)

	cmp	DWORD PTR _message$[ebp], 77454819	; 049ddde3H
	jne	$LN51@Custom

; 2029 : 	{
; 2030 : 		if (MyObject->Type == PlayerShipJumping)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 15			; 0000000fH
	jne	SHORT $LN54@Custom

; 2031 : 		{
; 2032 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Cannot deploy drones while in hyperspace!");

	push	OFFSET ??_C@_0CK@GEKGNCFO@Cannot?5deploy?5drones?5while?5in?5hy@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2033 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 2034 : 			return;

	jmp	$LN205@Custom
$LN54@Custom:

; 2035 : 		}
; 2036 : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$37[ebp], 0
	jmp	SHORT $LN53@Custom
$LN52@Custom:
	mov	eax, DWORD PTR _x$37[ebp]
	add	eax, 1
	mov	DWORD PTR _x$37[ebp], eax
$LN53@Custom:
	cmp	DWORD PTR _x$37[ebp], 8
	jge	$LN51@Custom

; 2037 : 			if (MiniGamePlayerControlSystem[x].PlayerShip == obj)

	mov	eax, DWORD PTR _x$37[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	$LN50@Custom

; 2038 : 			{
; 2039 : 				if (MiniGamePlayerControlSystem[x].DronePowerup)

	mov	eax, DWORD PTR _x$37[ebp]
	imul	eax, 596				; 00000254H
	movzx	ecx, BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+376]
	test	ecx, ecx
	je	$LN49@Custom

; 2040 : 				{
; 2041 : 					if (MiniGamePlayerControlSystem[x].Drones[0] && MiniGamePlayerControlSystem[x].Drones[1])

	mov	eax, DWORD PTR _x$37[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, 4
	imul	ecx, 0
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+ecx+368], 0
	je	SHORT $LN48@Custom
	mov	eax, DWORD PTR _x$37[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, 4
	shl	ecx, 0
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+ecx+368], 0
	je	SHORT $LN48@Custom

; 2042 : 					{
; 2043 : 						JmgUtility::DisplayChatMessage(sender,200,200,125,"Sorry, you can only have two drones following you at a time!");

	push	OFFSET ??_C@_0DN@INCEHMJM@Sorry?0?5you?5can?5only?5have?5two?5dro@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2044 : 						Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 2045 : 						return;

	jmp	$LN205@Custom
$LN48@Custom:

; 2046 : 					}
; 2047 : 					JmgUtility::DisplayChatMessage(sender,200,125,125,"Drone Launched!");

	push	OFFSET ??_C@_0BA@EHNMPGMH@Drone?5Launched?$CB?$AA@
	push	125					; 0000007dH
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2048 : 					Create_2D_Sound_Player(sender,"SFX.Comet_Busters_Drone_Launch_Sound");

	push	OFFSET ??_C@_0CF@NPCKADHB@SFX?4Comet_Busters_Drone_Launch_S@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 2049 : 					MiniGamePlayerControlSystem[x].DronePowerup = false;

	mov	eax, DWORD PTR _x$37[ebp]
	imul	eax, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+376], 0

; 2050 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->UsedDrones++;

	mov	eax, DWORD PTR _x$37[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 380				; 0000017cH
	mov	DWORD PTR tv1643[ebp], eax
	mov	edx, DWORD PTR tv1643[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv1643[ebp]
	mov	DWORD PTR [ecx], eax

; 2051 : 					char params[32];
; 2052 : 					sprintf(params,"%d,100,1,1",x);

	mov	eax, DWORD PTR _x$37[ebp]
	push	eax
	push	OFFSET ??_C@_0L@IBKIKMNA@?$CFd?0100?01?01?$AA@
	lea	ecx, DWORD PTR _params$36[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 2053 : 					GameObject *Drone = Commands->Create_Object("CMTB_Player_Attack_Drone",Random_Map_Position());

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?Random_Map_Position@@YA?AVVector3@@XZ	; Random_Map_Position
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BJ@HMHDFFIC@CMTB_Player_Attack_Drone?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Drone$35[ebp], eax

; 2054 : 					Commands->Attach_Script(Drone,"JMG_CMTB_Player_Drone",params);

	lea	eax, DWORD PTR _params$36[ebp]
	push	eax
	push	OFFSET ??_C@_0BG@DDDOADFB@JMG_CMTB_Player_Drone?$AA@
	mov	ecx, DWORD PTR _Drone$35[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+120]
	call	eax
	add	esp, 12					; 0000000cH

; 2055 : 				}
; 2056 : 				else

	jmp	SHORT $LN47@Custom
$LN49@Custom:

; 2057 : 				{
; 2058 : 					JmgUtility::DisplayChatMessage(sender,200,200,125,"Sorry, you don't have any Drones to deploy!");

	push	OFFSET ??_C@_0CM@BCHOJKJO@Sorry?0?5you?5don?8t?5have?5any?5Drones@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2059 : 					Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 2060 : 					return;

	jmp	$LN205@Custom
$LN47@Custom:

; 2061 : 				}
; 2062 : 				break;

	jmp	SHORT $LN51@Custom
$LN50@Custom:

; 2063 : 			}
; 2064 : 	}

	jmp	$LN52@Custom
$LN51@Custom:

; 2065 : 	if (message == 77454833)

	cmp	DWORD PTR _message$[ebp], 77454833	; 049dddf1H
	jne	$LN41@Custom

; 2066 : 	{
; 2067 : 		if (JMG_CMTB_Main_Game_Control::DroneSwarmCount > 2)

	cmp	DWORD PTR ?DroneSwarmCount@JMG_CMTB_Main_Game_Control@@2IA, 2 ; JMG_CMTB_Main_Game_Control::DroneSwarmCount
	jbe	SHORT $LN45@Custom

; 2068 : 		{
; 2069 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Sorry, a drone swarm is already present in this sector!");

	push	OFFSET ??_C@_0DI@JOPOKIJI@Sorry?0?5a?5drone?5swarm?5is?5already?5@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2070 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 2071 : 			return;

	jmp	$LN205@Custom
$LN45@Custom:

; 2072 : 		}
; 2073 : 		if (MyObject->Type == PlayerShipJumping)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 15			; 0000000fH
	jne	SHORT $LN44@Custom

; 2074 : 		{
; 2075 : 			JmgUtility::DisplayChatMessage(sender,200,200,125,"Cannot transmit drone swarm call codes while in hyperspace!");

	push	OFFSET ??_C@_0DM@CPNCGFHK@Cannot?5transmit?5drone?5swarm?5call@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2076 : 			Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 2077 : 			return;

	jmp	$LN205@Custom
$LN44@Custom:

; 2078 : 		}
; 2079 : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$34[ebp], 0
	jmp	SHORT $LN43@Custom
$LN42@Custom:
	mov	eax, DWORD PTR _x$34[ebp]
	add	eax, 1
	mov	DWORD PTR _x$34[ebp], eax
$LN43@Custom:
	cmp	DWORD PTR _x$34[ebp], 8
	jge	$LN41@Custom

; 2080 : 			if (MiniGamePlayerControlSystem[x].PlayerShip == obj)

	mov	eax, DWORD PTR _x$34[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	$LN40@Custom

; 2081 : 			{
; 2082 : 				if (MiniGamePlayerControlSystem[x].DroneSwarmPowerup)

	mov	eax, DWORD PTR _x$34[ebp]
	imul	eax, 596				; 00000254H
	movzx	ecx, BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+377]
	test	ecx, ecx
	je	$LN39@Custom

; 2083 : 				{
; 2084 : 					JmgUtility::DisplayChatMessage(sender,200,125,125,"Drone Swarm Called!");

	push	OFFSET ??_C@_0BE@CGMPNBOF@Drone?5Swarm?5Called?$CB?$AA@
	push	125					; 0000007dH
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2085 : 					Create_2D_Sound_Player(sender,"SFX.Comet_Busters_Drone_Launch_Sound");

	push	OFFSET ??_C@_0CF@NPCKADHB@SFX?4Comet_Busters_Drone_Launch_S@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 2086 : 					MiniGamePlayerControlSystem[x].DroneSwarmPowerup = false;

	mov	eax, DWORD PTR _x$34[ebp]
	imul	eax, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+377], 0

; 2087 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->UsedDronesSwarm++;

	mov	eax, DWORD PTR _x$34[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 448				; 000001c0H
	mov	DWORD PTR tv1712[ebp], eax
	mov	edx, DWORD PTR tv1712[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv1712[ebp]
	mov	DWORD PTR [ecx], eax

; 2088 : 					char params[32];
; 2089 : 					sprintf(params,"%d,10,1,0",x);

	mov	eax, DWORD PTR _x$34[ebp]
	push	eax
	push	OFFSET ??_C@_09LCIOIFFB@?$CFd?010?01?00?$AA@
	lea	ecx, DWORD PTR _params$33[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 2090 : 					for (int j = 0;j < 10;j++)

	mov	DWORD PTR _j$32[ebp], 0
	jmp	SHORT $LN38@Custom
$LN37@Custom:
	mov	eax, DWORD PTR _j$32[ebp]
	add	eax, 1
	mov	DWORD PTR _j$32[ebp], eax
$LN38@Custom:
	cmp	DWORD PTR _j$32[ebp], 10		; 0000000aH
	jge	SHORT $LN36@Custom

; 2091 : 					{
; 2092 : 						GameObject *Drone = Commands->Create_Object("CMTB_Player_Attack_Drone",Random_Map_Position());

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?Random_Map_Position@@YA?AVVector3@@XZ	; Random_Map_Position
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BJ@HMHDFFIC@CMTB_Player_Attack_Drone?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Drone$31[ebp], eax

; 2093 : 						Commands->Attach_Script(Drone,"JMG_CMTB_Player_Drone",params);

	lea	eax, DWORD PTR _params$33[ebp]
	push	eax
	push	OFFSET ??_C@_0BG@DDDOADFB@JMG_CMTB_Player_Drone?$AA@
	mov	ecx, DWORD PTR _Drone$31[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+120]
	call	eax
	add	esp, 12					; 0000000cH

; 2094 : 					}

	jmp	SHORT $LN37@Custom
$LN36@Custom:

; 2095 : 				}
; 2096 : 				else

	jmp	SHORT $LN35@Custom
$LN39@Custom:

; 2097 : 				{
; 2098 : 					JmgUtility::DisplayChatMessage(sender,200,200,125,"Sorry, you don't have the codes to call a drone swarm!");

	push	OFFSET ??_C@_0DH@BKFDMGCF@Sorry?0?5you?5don?8t?5have?5the?5codes?5@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2099 : 					Create_2D_Sound_Player(sender,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 2100 : 					return;

	jmp	$LN205@Custom
$LN35@Custom:

; 2101 : 				}
; 2102 : 				break;

	jmp	SHORT $LN41@Custom
$LN40@Custom:

; 2103 : 			}
; 2104 : 	}

	jmp	$LN42@Custom
$LN41@Custom:

; 2105 : 	if (message >= 77454820 && message <= 77454827)

	cmp	DWORD PTR _message$[ebp], 77454820	; 049ddde4H
	jl	$LN26@Custom
	cmp	DWORD PTR _message$[ebp], 77454827	; 049dddebH
	jg	$LN26@Custom

; 2106 : 	{
; 2107 : 		int PlayerNumber = message-77454820;

	mov	eax, DWORD PTR _message$[ebp]
	sub	eax, 77454820				; 049ddde4H
	mov	DWORD PTR _PlayerNumber$30[ebp], eax

; 2108 : 		int MyPlayerNumber = 0;

	mov	DWORD PTR _MyPlayerNumber$29[ebp], 0

; 2109 : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$28[ebp], 0
	jmp	SHORT $LN33@Custom
$LN32@Custom:
	mov	eax, DWORD PTR _x$28[ebp]
	add	eax, 1
	mov	DWORD PTR _x$28[ebp], eax
$LN33@Custom:
	cmp	DWORD PTR _x$28[ebp], 8
	jge	SHORT $LN31@Custom

; 2110 : 			if (MiniGamePlayerControlSystem[x].PlayerShip == obj)

	mov	eax, DWORD PTR _x$28[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	SHORT $LN30@Custom

; 2111 : 			{
; 2112 : 				MyPlayerNumber = x;

	mov	eax, DWORD PTR _x$28[ebp]
	mov	DWORD PTR _MyPlayerNumber$29[ebp], eax

; 2113 : 				break;

	jmp	SHORT $LN31@Custom
$LN30@Custom:

; 2114 : 			}

	jmp	SHORT $LN32@Custom
$LN31@Custom:

; 2115 : 		if (!MiniGamePlayerControlSystem[MyPlayerNumber].NumberOfLives)

	mov	eax, DWORD PTR _MyPlayerNumber$29[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4], 0
	jne	SHORT $LN29@Custom

; 2116 : 		{
; 2117 : 			JmgUtility::DisplayChatMessage(sender,200,125,200,"Sorry, you don't have any extra lives to grant to other players!");

	push	OFFSET ??_C@_0EB@ODICOFHG@Sorry?0?5you?5don?8t?5have?5any?5extra?5@
	push	200					; 000000c8H
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2118 : 			return;

	jmp	$LN205@Custom
$LN29@Custom:

; 2119 : 		}
; 2120 : 		char LifeMsg[220];
; 2121 : 		GameObject *OtherPlayer = Commands->Find_Object(MiniGamePlayerControlSystem[PlayerNumber].GamePlayerID);

	mov	eax, DWORD PTR _PlayerNumber$30[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _OtherPlayer$26[ebp], eax

; 2122 : 		if (PlayerRequestingALife[PlayerNumber] && MiniGamePlayerControlSystem[MyPlayerNumber].PlayerShip && MiniGamePlayerControlSystem[MyPlayerNumber].NumberOfLives)

	mov	eax, DWORD PTR _PlayerNumber$30[ebp]
	movzx	ecx, BYTE PTR ?PlayerRequestingALife@@3PA_NA[eax]
	test	ecx, ecx
	je	$LN28@Custom
	mov	eax, DWORD PTR _MyPlayerNumber$29[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8], 0
	je	$LN28@Custom
	mov	eax, DWORD PTR _MyPlayerNumber$29[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4], 0
	je	$LN28@Custom

; 2123 : 		{
; 2124 : 			RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[MyPlayerNumber].PlayerID)->GrantedOtherPlayersLives++;

	mov	eax, DWORD PTR _MyPlayerNumber$29[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 332				; 0000014cH
	mov	DWORD PTR tv1779[ebp], eax
	mov	edx, DWORD PTR tv1779[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv1779[ebp]
	mov	DWORD PTR [ecx], eax

; 2125 : 			RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[Get_Player_ID(OtherPlayer)].PlayerID)->ReceivedOtherPlayersLives++;

	mov	eax, DWORD PTR _OtherPlayer$26[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 336				; 00000150H
	mov	DWORD PTR tv1790[ebp], eax
	mov	edx, DWORD PTR tv1790[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv1790[ebp]
	mov	DWORD PTR [ecx], eax

; 2126 : 			PlayerRequestingALife[PlayerNumber] = false;

	mov	eax, DWORD PTR _PlayerNumber$30[ebp]
	mov	BYTE PTR ?PlayerRequestingALife@@3PA_NA[eax], 0

; 2127 : 			MiniGamePlayerControlSystem[MyPlayerNumber].NumberOfLives--;

	mov	eax, DWORD PTR _MyPlayerNumber$29[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _MyPlayerNumber$29[ebp]
	imul	edx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+4], ecx

; 2128 : 			Set_Max_Health(MiniGamePlayerControlSystem[MyPlayerNumber].PlayerShip,(float)JmgUtility::MathClampInt(MiniGamePlayerControlSystem[MyPlayerNumber].NumberOfLives+1,5,100));

	push	100					; 00000064H
	push	5
	mov	eax, DWORD PTR _MyPlayerNumber$29[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	add	ecx, 1
	push	ecx
	call	?MathClampInt@JmgUtility@@SAHHHH@Z	; JmgUtility::MathClampInt
	add	esp, 12					; 0000000cH
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _MyPlayerNumber$29[ebp]
	imul	edx, 596				; 00000254H
	mov	eax, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+8]
	push	eax
	call	?Set_Max_Health@@YAXPAVScriptableGameObj@@M@Z ; Set_Max_Health
	add	esp, 8

; 2129 : 			Commands->Set_Health(MiniGamePlayerControlSystem[MyPlayerNumber].PlayerShip,(float)MiniGamePlayerControlSystem[MyPlayerNumber].NumberOfLives+1);

	mov	eax, DWORD PTR _MyPlayerNumber$29[ebp]
	imul	eax, 596				; 00000254H
	cvtsi2ss xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	addss	xmm0, DWORD PTR __real@3f800000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _MyPlayerNumber$29[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+8]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+228]
	call	ecx
	add	esp, 8

; 2130 : 			Set_Max_Shield_Strength(MiniGamePlayerControlSystem[MyPlayerNumber].SpectatorObject,(float)JmgUtility::MathClampInt(MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives+1,5,100));

	push	100					; 00000064H
	push	5
	mov	eax, DWORD PTR _PlayerNumber$30[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	add	ecx, 1
	push	ecx
	call	?MathClampInt@JmgUtility@@SAHHHH@Z	; JmgUtility::MathClampInt
	add	esp, 12					; 0000000cH
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _MyPlayerNumber$29[ebp]
	imul	edx, 596				; 00000254H
	mov	eax, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+16]
	push	eax
	call	?Set_Max_Shield_Strength@@YAXPAVScriptableGameObj@@M@Z ; Set_Max_Shield_Strength
	add	esp, 8

; 2131 : 			Commands->Set_Shield_Strength(MiniGamePlayerControlSystem[MyPlayerNumber].SpectatorObject,(float)MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives+1);

	mov	eax, DWORD PTR _PlayerNumber$30[ebp]
	imul	eax, 596				; 00000254H
	cvtsi2ss xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	addss	xmm0, DWORD PTR __real@3f800000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _MyPlayerNumber$29[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+16]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+240]
	call	ecx
	add	esp, 8

; 2132 : 			Commands->Apply_Damage(obj,0.0f,"None",0);

	push	0
	push	OFFSET ??_C@_04OHJIHAFH@None?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H

; 2133 : 			MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives++;

	mov	eax, DWORD PTR _PlayerNumber$30[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _PlayerNumber$30[ebp]
	imul	edx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+4], ecx

; 2134 : 			sprintf(LifeMsg,"You have granted player %d (%s) another life, thanks for being a team player!",PlayerNumber,Get_Player_Name_By_ID(Get_Player_ID(OtherPlayer)));

	mov	eax, DWORD PTR _OtherPlayer$26[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	call	?Get_Player_Name_By_ID@@YAPBDH@Z	; Get_Player_Name_By_ID
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _PlayerNumber$30[ebp]
	push	ecx
	push	OFFSET ??_C@_0EO@BMGJBAFN@You?5have?5granted?5player?5?$CFd?5?$CI?$CFs?$CJ?5@
	lea	edx, DWORD PTR _LifeMsg$27[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 2135 : 			JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),200,125,200,LifeMsg);

	lea	eax, DWORD PTR _LifeMsg$27[ebp]
	push	eax
	push	200					; 000000c8H
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2136 : 			if (Commands->Is_A_Star(OtherPlayer))

	mov	eax, DWORD PTR _OtherPlayer$26[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN27@Custom

; 2137 : 			{
; 2138 : 				sprintf(LifeMsg,"%s has granted you another life, try to make this one last!",Get_Player_Name_By_ID(Get_Player_ID(sender)));

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	call	?Get_Player_Name_By_ID@@YAPBDH@Z	; Get_Player_Name_By_ID
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0DM@JGDCJFMM@?$CFs?5has?5granted?5you?5another?5life?0@
	lea	ecx, DWORD PTR _LifeMsg$27[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 2139 : 				JmgUtility::DisplayChatMessage(OtherPlayer,200,125,200,LifeMsg);

	lea	eax, DWORD PTR _LifeMsg$27[ebp]
	push	eax
	push	200					; 000000c8H
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	ecx, DWORD PTR _OtherPlayer$26[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN27@Custom:

; 2140 : 			}
; 2141 : 		}
; 2142 : 		else

	jmp	SHORT $LN26@Custom
$LN28@Custom:

; 2143 : 		{
; 2144 : 			sprintf(LifeMsg,"Sorry, player %d is not requesting a extra life!",PlayerNumber);

	mov	eax, DWORD PTR _PlayerNumber$30[ebp]
	push	eax
	push	OFFSET ??_C@_0DB@FOFGKICD@Sorry?0?5player?5?$CFd?5is?5not?5requesti@
	lea	ecx, DWORD PTR _LifeMsg$27[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 2145 : 			JmgUtility::DisplayChatMessage(sender,200,125,200,LifeMsg);

	lea	eax, DWORD PTR _LifeMsg$27[ebp]
	push	eax
	push	200					; 000000c8H
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN26@Custom:

; 2146 : 		}
; 2147 : 	}
; 2148 : 	if (message == 1000000028)

	cmp	DWORD PTR _message$[ebp], 1000000028	; 3b9aca1cH
	jne	SHORT $LN25@Custom

; 2149 : 	{
; 2150 : 		ReturnToNormalState(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReturnToNormalState@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::ReturnToNormalState

; 2151 : 		Commands->Send_Custom_Event(obj,sender,90000028,1,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	1
	push	90000028				; 055d4a9cH
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 2152 : 		Commands->Set_Player_Type(sender,1);

	push	1
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+252]
	call	edx
	add	esp, 8

; 2153 : 		Commands->Set_Player_Type(obj,1);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+252]
	call	edx
	add	esp, 8
$LN25@Custom:

; 2154 : 	}
; 2155 : 	if (message == 1000000029)

	cmp	DWORD PTR _message$[ebp], 1000000029	; 3b9aca1dH
	jne	SHORT $LN24@Custom

; 2156 : 	{
; 2157 : 		Commands->Send_Custom_Event(obj,sender,90000029,1,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	1
	push	90000029				; 055d4a9dH
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 2158 : 		Commands->Set_Player_Type(sender,Get_Player_Type(sender));

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?Get_Player_Type@@YAHPAVScriptableGameObj@@@Z ; Get_Player_Type
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+252]
	call	eax
	add	esp, 8
$LN24@Custom:

; 2159 : 	}
; 2160 : 	if (message == 77454831)

	cmp	DWORD PTR _message$[ebp], 77454831	; 049dddefH
	jne	$LN23@Custom

; 2161 : 	{
; 2162 : 		if (prepingHyperjump)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	je	SHORT $LN22@Custom

; 2163 : 			return;

	jmp	$LN205@Custom
$LN22@Custom:

; 2164 : 		prepingHyperjump = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 1

; 2165 : 		Vector3 Pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _Pos$25[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2166 : 		float NearDist = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _NearDist$24[ebp], xmm0

; 2167 : 		Vector3 IdealPos = Vector3();

	lea	ecx, DWORD PTR _IdealPos$23[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 2168 : 		bool Found = false;

	mov	BYTE PTR _Found$22[ebp], 0

; 2169 : 		for (int x = -6;x <= 6;x++)

	mov	DWORD PTR _x$21[ebp], -6		; fffffffaH
	jmp	SHORT $LN21@Custom
$LN20@Custom:
	mov	eax, DWORD PTR _x$21[ebp]
	add	eax, 1
	mov	DWORD PTR _x$21[ebp], eax
$LN21@Custom:
	cmp	DWORD PTR _x$21[ebp], 6
	jg	$LN19@Custom

; 2170 : 			for (int y = -6;y <= 6;y++)

	mov	DWORD PTR _y$20[ebp], -6		; fffffffaH
	jmp	SHORT $LN18@Custom
$LN17@Custom:
	mov	eax, DWORD PTR _y$20[ebp]
	add	eax, 1
	mov	DWORD PTR _y$20[ebp], eax
$LN18@Custom:
	cmp	DWORD PTR _y$20[ebp], 6
	jg	$LN16@Custom

; 2171 : 			{
; 2172 : 				Pos.X = x*10.0f;

	cvtsi2ss xmm0, DWORD PTR _x$21[ebp]
	mulss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _Pos$25[ebp], xmm0

; 2173 : 				Pos.Y = y*10.0f;

	cvtsi2ss xmm0, DWORD PTR _y$20[ebp]
	mulss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _Pos$25[ebp+4], xmm0

; 2174 : 				float Dist = RenCometBustersList.FindNearestCollidableObject(obj,Pos);

	lea	eax, DWORD PTR _Pos$25[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?FindNearestCollidableObject@RenCometBustersGameObjects@@QAEMPAVScriptableGameObj@@ABVVector3@@@Z ; RenCometBustersGameObjects::FindNearestCollidableObject
	fstp	DWORD PTR _Dist$19[ebp]

; 2175 : 				if (!Found && Dist > 10)

	movzx	eax, BYTE PTR _Found$22[ebp]
	test	eax, eax
	jne	SHORT $LN15@Custom
	movss	xmm0, DWORD PTR _Dist$19[ebp]
	comiss	xmm0, DWORD PTR __real@41200000
	jbe	SHORT $LN15@Custom

; 2176 : 				{
; 2177 : 					Found = true;

	mov	BYTE PTR _Found$22[ebp], 1

; 2178 : 					NearDist = Dist;

	movss	xmm0, DWORD PTR _Dist$19[ebp]
	movss	DWORD PTR _NearDist$24[ebp], xmm0

; 2179 : 					IdealPos = Pos;

	lea	eax, DWORD PTR _Pos$25[ebp]
	push	eax
	lea	ecx, DWORD PTR _IdealPos$23[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	jmp	SHORT $LN13@Custom
$LN15@Custom:

; 2180 : 				}
; 2181 : 				else if (Dist > NearDist && Dist > 10)

	movss	xmm0, DWORD PTR _Dist$19[ebp]
	comiss	xmm0, DWORD PTR _NearDist$24[ebp]
	jbe	SHORT $LN13@Custom
	movss	xmm0, DWORD PTR _Dist$19[ebp]
	comiss	xmm0, DWORD PTR __real@41200000
	jbe	SHORT $LN13@Custom

; 2182 : 				{
; 2183 : 					NearDist = Dist;

	movss	xmm0, DWORD PTR _Dist$19[ebp]
	movss	DWORD PTR _NearDist$24[ebp], xmm0

; 2184 : 					IdealPos = Pos;

	lea	eax, DWORD PTR _Pos$25[ebp]
	push	eax
	lea	ecx, DWORD PTR _IdealPos$23[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
$LN13@Custom:

; 2185 : 				}
; 2186 : 			}

	jmp	$LN17@Custom
$LN16@Custom:
	jmp	$LN20@Custom
$LN19@Custom:

; 2187 : 		if (!Found)

	movzx	eax, BYTE PTR _Found$22[ebp]
	test	eax, eax
	jne	SHORT $LN12@Custom

; 2188 : 			return;

	jmp	$LN205@Custom
$LN12@Custom:

; 2189 : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$18[ebp], 0
	jmp	SHORT $LN11@Custom
$LN10@Custom:
	mov	eax, DWORD PTR _x$18[ebp]
	add	eax, 1
	mov	DWORD PTR _x$18[ebp], eax
$LN11@Custom:
	cmp	DWORD PTR _x$18[ebp], 8
	jge	$LN9@Custom

; 2190 : 			if (MiniGamePlayerControlSystem[x].PlayerShip == obj)

	mov	eax, DWORD PTR _x$18[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	$LN7@Custom

; 2191 : 				if (MiniGamePlayerControlSystem[x].HyperspaceDriveCharge)

	mov	eax, DWORD PTR _x$18[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+432], 0
	je	$LN7@Custom

; 2192 : 				{
; 2193 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->JumpsUsed++;

	mov	eax, DWORD PTR _x$18[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 440				; 000001b8H
	mov	DWORD PTR tv2020[ebp], eax
	mov	edx, DWORD PTR tv2020[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv2020[ebp]
	mov	DWORD PTR [ecx], eax

; 2194 : 					MiniGamePlayerControlSystem[x].HyperspaceDriveCharge--;

	mov	eax, DWORD PTR _x$18[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+432]
	sub	ecx, 1
	mov	edx, DWORD PTR _x$18[ebp]
	imul	edx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+432], ecx

; 2195 : 					char percentMessage[200];
; 2196 : 					sprintf(percentMessage,"(Hyperdrive charge at %.0f%%)",100.0f*(MiniGamePlayerControlSystem[x].HyperspaceDriveCharge/(1.00f*MaxHyperdriveCharge)));

	mov	eax, DWORD PTR _x$18[ebp]
	imul	eax, 596				; 00000254H
	cvtsi2ss xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+432]
	divss	xmm0, DWORD PTR __real@40a00000
	mulss	xmm0, DWORD PTR __real@42c80000
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0BO@IDHPPFKH@?$CIHyperdrive?5charge?5at?5?$CF?40f?$CF?$CF?$CJ?$AA@
	lea	ecx, DWORD PTR _percentMessage$17[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 2197 : 					GameObject *Driver = Get_Vehicle_Driver(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	mov	DWORD PTR _Driver$16[ebp], eax

; 2198 : 					if (Driver)

	cmp	DWORD PTR _Driver$16[ebp], 0
	je	SHORT $LN6@Custom

; 2199 : 					{
; 2200 : 						char drivemsg[400];
; 2201 : 						sprintf(drivemsg,"IMMINENT COLLISION CONDITION DETECTED! AUTOMATED HYPERSPACE JUMP TRIGGERED!%s",MiniGamePlayerControlSystem[x].HyperspaceDriveCharge ? percentMessage : " ");

	mov	eax, DWORD PTR _x$18[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+432], 0
	je	SHORT $LN213@Custom
	lea	ecx, DWORD PTR _percentMessage$17[ebp]
	mov	DWORD PTR tv2051[ebp], ecx
	jmp	SHORT $LN214@Custom
$LN213@Custom:
	mov	DWORD PTR tv2051[ebp], OFFSET ??_C@_01CLKCMJKC@?5?$AA@
$LN214@Custom:
	mov	edx, DWORD PTR tv2051[ebp]
	push	edx
	push	OFFSET ??_C@_0EO@HLGAJOEF@IMMINENT?5COLLISION?5CONDITION?5DET@
	lea	eax, DWORD PTR _drivemsg$15[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 2202 : 						JmgUtility::DisplayChatMessage(Driver,200,125,200,drivemsg);

	lea	eax, DWORD PTR _drivemsg$15[ebp]
	push	eax
	push	200					; 000000c8H
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	ecx, DWORD PTR _Driver$16[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN6@Custom:

; 2203 : 					}
; 2204 : 					if (!MiniGamePlayerControlSystem[x].HyperspaceDriveCharge)

	mov	eax, DWORD PTR _x$18[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+432], 0
	jne	SHORT $LN5@Custom

; 2205 : 					{
; 2206 : 						JmgUtility::DisplayChatMessage(Driver,200,125,125,"HYPER DRIVES DEPLETED, HYPERSPACE NO LONGER AVAILABLE!");

	push	OFFSET ??_C@_0DH@LKHLGGNO@HYPER?5DRIVES?5DEPLETED?0?5HYPERSPAC@
	push	125					; 0000007dH
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	eax, DWORD PTR _Driver$16[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2207 : 						Create_2D_Sound_Player(Driver,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _Driver$16[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8
$LN5@Custom:

; 2208 : 					}
; 2209 : 					break;

	jmp	SHORT $LN9@Custom
$LN7@Custom:

; 2210 : 				}

	jmp	$LN10@Custom
$LN9@Custom:

; 2211 : 		MyObject->Type = PlayerShipJumping;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR [ecx+16], 15			; 0000000fH

; 2212 : 		GameObject *killMe = Commands->Find_Object(PortalInID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _killMe$14[ebp], eax

; 2213 : 		if (killMe)

	cmp	DWORD PTR _killMe$14[ebp], 0
	je	SHORT $LN4@Custom

; 2214 : 			Commands->Destroy_Object(killMe);

	mov	eax, DWORD PTR _killMe$14[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN4@Custom:

; 2215 : 		killMe = Commands->Find_Object(PortalOutID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _killMe$14[ebp], eax

; 2216 : 		if (killMe)

	cmp	DWORD PTR _killMe$14[ebp], 0
	je	SHORT $LN3@Custom

; 2217 : 			Commands->Destroy_Object(killMe);

	mov	eax, DWORD PTR _killMe$14[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN3@Custom:

; 2218 : 		GameObject *PortalIn = Commands->Create_Object("Daves Arrow",Commands->Get_Position(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _PortalIn$13[ebp], eax

; 2219 : 		Commands->Set_Model(PortalIn,"HyperIn");

	push	OFFSET ??_C@_07GKGABLL@HyperIn?$AA@
	mov	eax, DWORD PTR _PortalIn$13[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 2220 : 		Commands->Attach_To_Object_Bone(obj,PortalIn,"origin");

	push	OFFSET ??_C@_06NHCMNMEH@origin?$AA@
	mov	eax, DWORD PTR _PortalIn$13[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 2221 : 		PortalInID = Commands->Get_ID(PortalIn);

	mov	eax, DWORD PTR _PortalIn$13[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], eax

; 2222 : 		GameObject *PortalOut = Commands->Create_Object("Daves Arrow",Commands->Get_Position(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _PortalOut$12[ebp], eax

; 2223 : 		Commands->Set_Model(PortalOut,"null");

	push	OFFSET ??_C@_04MLLLIHIP@null?$AA@
	mov	eax, DWORD PTR _PortalOut$12[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 2224 : 		Commands->Set_Facing(PortalOut,Commands->Get_Facing(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+72]
	call	edx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _PortalOut$12[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+76]
	call	edx
	add	esp, 8

; 2225 : 		PortalOutID = Commands->Get_ID(PortalOut);

	mov	eax, DWORD PTR _PortalOut$12[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], eax

; 2226 : 		Commands->Set_Is_Rendered(obj,false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+628]
	call	edx
	add	esp, 8

; 2227 : 		ChangingWeapons = 24;

	mov	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+110], ax

; 2228 : 		Set_Current_Bullets(obj,0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Bullets
	add	esp, 8

; 2229 : 		Set_Current_Clip_Bullets(obj,0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8

; 2230 : 		Commands->Set_Position(PortalOut,IdealPos);

	lea	eax, DWORD PTR _IdealPos$23[ebp]
	push	eax
	mov	ecx, DWORD PTR _PortalOut$12[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8

; 2231 : 		Commands->Create_Sound("SFX.Comet_Busters_Ship_Hyperspace",IdealPos,obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR _IdealPos$23[ebp]
	push	ecx
	push	OFFSET ??_C@_0CC@LHEOCOHM@SFX?4Comet_Busters_Ship_Hyperspac@
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+172]
	call	eax
	add	esp, 12					; 0000000cH

; 2232 : 		prepingHyperjump = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0

; 2233 : 		Commands->Start_Timer(obj,this,0.5,453217);

	push	453217					; 0006ea61H
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 2234 : 		Commands->Start_Timer(obj,this,1.0,453218);

	push	453218					; 0006ea62H
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN23@Custom:

; 2235 : 	}
; 2236 : 	if (message == 77454832)

	cmp	DWORD PTR _message$[ebp], 77454832	; 049dddf0H
	jne	$LN1@Custom

; 2237 : 	{
; 2238 : 		GameObject *Driver = Get_Vehicle_Driver(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	mov	DWORD PTR _Driver$11[ebp], eax

; 2239 : 		if (Driver)

	cmp	DWORD PTR _Driver$11[ebp], 0
	je	SHORT $LN1@Custom

; 2240 : 		{
; 2241 : 			Set_Screen_Fade_Color_Player(Driver,0,0,0,0.25f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Driver$11[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Color_Player@@3P6AXPAVScriptableGameObj@@MMMM@ZA ; Set_Screen_Fade_Color_Player
	add	esp, 20					; 00000014H

; 2242 : 			Set_Screen_Fade_Opacity_Player(Driver,0.0f,0.25f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Driver$11[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Opacity_Player@@3P6AXPAVScriptableGameObj@@MM@ZA ; Set_Screen_Fade_Opacity_Player
	add	esp, 12					; 0000000cH
$LN1@Custom:
$LN205@Custom:

; 2243 : 		}
; 2244 : 	}
; 2245 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN215@Custom:
	DD	$LN196@Custom
	DD	$LN195@Custom
	DD	$LN194@Custom
	DD	$LN193@Custom
	DD	$LN192@Custom
	DD	$LN191@Custom
	DD	$LN190@Custom
	DD	$LN189@Custom
	DD	$LN188@Custom
$LN216@Custom:
	DD	$LN110@Custom
	DD	$LN110@Custom
	DD	$LN110@Custom
	DD	$LN107@Custom
	DD	$LN104@Custom
	DD	$LN101@Custom
	DD	$LN98@Custom
	DD	$LN98@Custom
	DD	$LN98@Custom
	DD	$LN98@Custom
	DD	$LN88@Custom
	DD	$LN98@Custom
	DD	$LN85@Custom
	DD	$LN84@Custom
	DD	$LN83@Custom
	DD	$LN75@Custom
	DD	$LN72@Custom
?Custom@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; JMG_CMTB_Ship_Control_Script::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
tv629 = -132						; size = 4
tv264 = -132						; size = 4
tv177 = -132						; size = 4
$T1 = -128						; size = 12
$T2 = -116						; size = 12
_Portal$3 = -40						; size = 4
_Portal$4 = -36						; size = 4
_Driver$5 = -32						; size = 4
_Driver$6 = -28						; size = 4
_Direction$7 = -24					; size = 4
_BulletCount$8 = -20					; size = 4
_x$9 = -16						; size = 4
_Driver$10 = -12					; size = 4
_Driver$11 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_CMTB_Ship_Control_Script::Timer_Expired, COMDAT
; _this$ = ecx

; 2247 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 132				; 00000084H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2248 : 	if (number == 453214)

	cmp	DWORD PTR _number$[ebp], 453214		; 0006ea5eH
	jne	$LN54@Timer_Expi

; 2249 : 	{
; 2250 : 		Commands->Set_Model(obj,Get_Model(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Model@@YAPBDPAVScriptableGameObj@@@Z ; Get_Model
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+160]
	call	eax
	add	esp, 8

; 2251 : 		sprintf(Animation,"%s.%s",Get_Model(obj),Get_Model(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Model@@YAPBDPAVScriptableGameObj@@@Z ; Get_Model
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	call	?Get_Model@@YAPBDPAVScriptableGameObj@@@Z ; Get_Model
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_05NNFHCGPF@?$CFs?4?$CFs?$AA@
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 2252 : 		Commands->Set_Animation(obj,Animation,false,0,0,0,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH
$LN54@Timer_Expi:

; 2253 : 	}
; 2254 : 	if (number == 453216)

	cmp	DWORD PTR _number$[ebp], 453216		; 0006ea60H
	jne	$LN53@Timer_Expi

; 2255 : 	{
; 2256 : 		if (ForfeitLives)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 0
	je	SHORT $LN52@Timer_Expi

; 2257 : 			ForfeitLives--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx
$LN52@Timer_Expi:

; 2258 : 		if (RapidPowerRegen)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+112], 0
	je	SHORT $LN49@Timer_Expi

; 2259 : 		{
; 2260 : 			RapidPowerRegen--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+112], ecx

; 2261 : 			if (!RapidPowerRegen)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+112], 0
	jne	SHORT $LN49@Timer_Expi

; 2262 : 			{
; 2263 : 				GameObject *Driver = Get_Vehicle_Driver(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	mov	DWORD PTR _Driver$11[ebp], eax

; 2264 : 				if (Driver)

	cmp	DWORD PTR _Driver$11[ebp], 0
	je	SHORT $LN49@Timer_Expi

; 2265 : 				{
; 2266 : 					JmgUtility::DisplayChatMessage(Driver,200,200,125,"Your power regen powerup has expired!");

	push	OFFSET ??_C@_0CG@BIHDAKAG@Your?5power?5regen?5powerup?5has?5exp@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _Driver$11[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2267 : 					Create_2D_Sound_Player(Driver,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _Driver$11[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8
$LN49@Timer_Expi:

; 2268 : 				}
; 2269 : 			}
; 2270 : 		}
; 2271 : 		if (ExtraShotActive)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+116], 0
	je	$LN43@Timer_Expi

; 2272 : 		{
; 2273 : 			ExtraShotActive--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], ecx

; 2274 : 			if (!ExtraShotActive)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+116], 0
	jne	SHORT $LN47@Timer_Expi

; 2275 : 			{
; 2276 : 				GameObject *Driver = Get_Vehicle_Driver(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	mov	DWORD PTR _Driver$10[ebp], eax

; 2277 : 				if (Driver)

	cmp	DWORD PTR _Driver$10[ebp], 0
	je	SHORT $LN46@Timer_Expi

; 2278 : 				{
; 2279 : 					JmgUtility::DisplayChatMessage(Driver,200,200,125,"Your weapon upgrade powerup has expired!");

	push	OFFSET ??_C@_0CJ@KEMGGLAF@Your?5weapon?5upgrade?5powerup?5has?5@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _Driver$10[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2280 : 					Create_2D_Sound_Player(Driver,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _Driver$10[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8
$LN46@Timer_Expi:

; 2281 : 				}
; 2282 : 				RemoveExtraShot = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+120], 1
$LN47@Timer_Expi:

; 2283 : 			}
; 2284 : 			for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$9[ebp], 0
	jmp	SHORT $LN45@Timer_Expi
$LN44@Timer_Expi:
	mov	eax, DWORD PTR _x$9[ebp]
	add	eax, 1
	mov	DWORD PTR _x$9[ebp], eax
$LN45@Timer_Expi:
	cmp	DWORD PTR _x$9[ebp], 8
	jge	SHORT $LN43@Timer_Expi

; 2285 : 				if (MiniGamePlayerControlSystem[x].PlayerShip == obj)

	mov	eax, DWORD PTR _x$9[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	SHORT $LN42@Timer_Expi

; 2286 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->UpgadedWeaponTime++;

	mov	eax, DWORD PTR _x$9[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 460				; 000001ccH
	mov	DWORD PTR tv177[ebp], eax
	mov	edx, DWORD PTR tv177[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv177[ebp]
	mov	DWORD PTR [ecx], eax
$LN42@Timer_Expi:

; 2287 : 		}

	jmp	SHORT $LN44@Timer_Expi
$LN43@Timer_Expi:

; 2288 : 		if (OverPoweredWeapons)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+108]
	test	ecx, ecx
	je	SHORT $LN41@Timer_Expi

; 2289 : 			DrainPower(obj);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrainPower@JMG_CMTB_Ship_Control_Script@@AAE_NPAVScriptableGameObj@@H@Z ; JMG_CMTB_Ship_Control_Script::DrainPower
$LN41@Timer_Expi:

; 2290 : 		Commands->Start_Timer(obj,this,1.0,453216);

	push	453216					; 0006ea60H
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN53@Timer_Expi:

; 2291 : 	}
; 2292 : 	if (number == 453212)

	cmp	DWORD PTR _number$[ebp], 453212		; 0006ea5cH
	jne	$LN34@Timer_Expi

; 2293 : 	{
; 2294 : 		if ((MyObject->Type == NormalPlayerShip || MyObject->Type == PlayerShipJumpable) && !EngineDisabled)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN38@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 14			; 0000000eH
	jne	SHORT $LN37@Timer_Expi
$LN38@Timer_Expi:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	SHORT $LN37@Timer_Expi

; 2295 : 			if (Power < 100)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 100			; 00000064H
	jge	SHORT $LN37@Timer_Expi

; 2296 : 				Power++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], ecx
$LN37@Timer_Expi:

; 2297 : 		if (MyObject->Type == PlayerSuper)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 8
	jne	SHORT $LN36@Timer_Expi

; 2298 : 			Power = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
$LN36@Timer_Expi:

; 2299 : 		if (RapidPowerRegen)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+112], 0
	je	SHORT $LN35@Timer_Expi

; 2300 : 			Commands->Start_Timer(obj,this,0.5,453212);

	push	453212					; 0006ea5cH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 2301 : 		else

	jmp	SHORT $LN34@Timer_Expi
$LN35@Timer_Expi:

; 2302 : 			Commands->Start_Timer(obj,this,1.0,453212);

	push	453212					; 0006ea5cH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN34@Timer_Expi:

; 2303 : 	}
; 2304 : 	if (number == 453215)

	cmp	DWORD PTR _number$[ebp], 453215		; 0006ea5fH
	jne	$LN33@Timer_Expi

; 2305 : 	{
; 2306 : 		if (MyObject->Type == PlayerCloak)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 7
	jne	SHORT $LN31@Timer_Expi

; 2307 : 			if (DrainPower(obj))

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrainPower@JMG_CMTB_Ship_Control_Script@@AAE_NPAVScriptableGameObj@@H@Z ; JMG_CMTB_Ship_Control_Script::DrainPower
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN31@Timer_Expi

; 2308 : 				CloakOff(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CloakOff@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::CloakOff
$LN31@Timer_Expi:

; 2309 : 		if (ChangingWeapons)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+110]
	test	ecx, ecx
	je	SHORT $LN27@Timer_Expi

; 2310 : 		{
; 2311 : 			ChangingWeapons--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+110]
	sub	cx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+110], cx

; 2312 : 			if (!ChangingWeapons)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+110]
	test	ecx, ecx
	jne	SHORT $LN27@Timer_Expi

; 2313 : 			{
; 2314 : 				Set_Current_Bullets(obj,1);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Bullets
	add	esp, 8

; 2315 : 				if (OverPoweredWeapons)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+108]
	test	ecx, ecx
	je	SHORT $LN28@Timer_Expi

; 2316 : 					Set_Current_Clip_Bullets(obj,99);

	push	99					; 00000063H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8

; 2317 : 				else

	jmp	SHORT $LN27@Timer_Expi
$LN28@Timer_Expi:

; 2318 : 					Set_Current_Clip_Bullets(obj,ExtraShotActive ? 4 : 3);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+116], 0
	je	SHORT $LN57@Timer_Expi
	mov	DWORD PTR tv264[ebp], 4
	jmp	SHORT $LN58@Timer_Expi
$LN57@Timer_Expi:
	mov	DWORD PTR tv264[ebp], 3
$LN58@Timer_Expi:
	mov	ecx, DWORD PTR tv264[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8
$LN27@Timer_Expi:

; 2319 : 			}
; 2320 : 		}
; 2321 : 		Commands->Start_Timer(obj,this,0.25,453215);

	push	453215					; 0006ea5fH
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN33@Timer_Expi:

; 2322 : 	}
; 2323 : 	if (number == 453213)

	cmp	DWORD PTR _number$[ebp], 453213		; 0006ea5dH
	jne	$LN26@Timer_Expi

; 2324 : 	{
; 2325 : 		if (Commands->Get_Shield_Strength(obj) != (float)Power)

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+232]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv629[ebp]
	movss	xmm0, DWORD PTR tv629[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm1, DWORD PTR [eax+56]
	ucomiss	xmm0, xmm1
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN25@Timer_Expi

; 2326 : 			Commands->Set_Shield_Strength(obj,(float)Power);

	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+56]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+240]
	call	eax
	add	esp, 8
$LN25@Timer_Expi:

; 2327 : 		if (MyObject->Type == PlayerShield)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 5
	jne	SHORT $LN23@Timer_Expi

; 2328 : 			if (DrainPower(obj))

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrainPower@JMG_CMTB_Ship_Control_Script@@AAE_NPAVScriptableGameObj@@H@Z ; JMG_CMTB_Ship_Control_Script::DrainPower
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN23@Timer_Expi

; 2329 : 				ShieldOff(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShieldOff@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::ShieldOff
$LN23@Timer_Expi:

; 2330 : 		if (ShieldLightUp > 0)

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+104]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	$LN20@Timer_Expi

; 2331 : 		{
; 2332 : 			ShieldLightUp -= 0.1f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+104]
	subss	xmm0, DWORD PTR __real@3dcccccd
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+104], xmm0

; 2333 : 			if (ShieldLightUp <= 0.0)

	mov	eax, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+104]
	movsd	xmm1, QWORD PTR __real@0000000000000000
	comisd	xmm1, xmm0
	jb	SHORT $LN20@Timer_Expi

; 2334 : 			{
; 2335 : 				ShieldLightUp = 0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+104], xmm0

; 2336 : 				if (MyObject->Type == PlayerShield)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 5
	jne	SHORT $LN20@Timer_Expi

; 2337 : 					Commands->Set_Animation(obj,Animation,false,0,1,1,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH
$LN20@Timer_Expi:

; 2338 : 			}
; 2339 : 		}
; 2340 : 		int BulletCount = Get_Current_Total_Bullets(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Current_Total_Bullets@@YAHPAVScriptableGameObj@@@Z ; Get_Current_Total_Bullets
	add	esp, 4
	mov	DWORD PTR _BulletCount$8[ebp], eax

; 2341 : 		if (LastBulletCount > BulletCount && OverPoweredWeapons)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	cmp	ecx, DWORD PTR _BulletCount$8[ebp]
	jle	SHORT $LN18@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+108]
	test	ecx, ecx
	je	SHORT $LN18@Timer_Expi

; 2342 : 			if (DrainPower(obj,3))

	push	3
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrainPower@JMG_CMTB_Ship_Control_Script@@AAE_NPAVScriptableGameObj@@H@Z ; JMG_CMTB_Ship_Control_Script::DrainPower
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN18@Timer_Expi

; 2343 : 			{
; 2344 : 				Set_Current_Bullets(obj,0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Bullets
	add	esp, 8

; 2345 : 				Set_Current_Clip_Bullets(obj,0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8
$LN18@Timer_Expi:

; 2346 : 			}
; 2347 : 		LastBulletCount = BulletCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _BulletCount$8[ebp]
	mov	DWORD PTR [eax+60], ecx

; 2348 : 		float Direction = Commands->Get_Bone_Position(obj,"Backward").Z-Commands->Get_Bone_Position(obj,"Forward").Z;

	push	OFFSET ??_C@_08LDDCHHDA@Backward?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+68]
	call	eax
	add	esp, 12					; 0000000cH
	mov	esi, eax
	push	OFFSET ??_C@_07NALHMFBO@Forward?$AA@
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+68]
	call	ecx
	add	esp, 12					; 0000000cH
	movss	xmm0, DWORD PTR [esi+8]
	subss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR _Direction$7[ebp], xmm0

; 2349 : 		if (Direction < -0.01f && !EngineDisabled)

	movss	xmm0, DWORD PTR __real@bc23d70a
	comiss	xmm0, DWORD PTR _Direction$7[ebp]
	jbe	$LN17@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	$LN17@Timer_Expi

; 2350 : 		{
; 2351 : 			if (MyObject->Type != PlayerShipDisrupter && Power > 0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 16			; 00000010H
	je	$LN16@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jle	SHORT $LN16@Timer_Expi

; 2352 : 			{
; 2353 : 				ShieldOff(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShieldOff@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::ShieldOff

; 2354 : 				MyObject->Type = PlayerShipDisrupter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR [ecx+16], 16			; 00000010H

; 2355 : 				Commands->Set_Animation(obj,Animation,false,0,4,4,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH

; 2356 : 				JmgUtility::DisplayChatMessage(Get_Vehicle_Driver(obj),200,200,125,"Disruptor Engaged!");

	push	OFFSET ??_C@_0BD@NPONFOKH@Disruptor?5Engaged?$CB?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN16@Timer_Expi:

; 2357 : 			}
; 2358 : 			Power -= 3;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	sub	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], ecx

; 2359 : 			if (Power <= 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	jg	$LN15@Timer_Expi

; 2360 : 			{
; 2361 : 				Power = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0

; 2362 : 				Commands->Set_Animation(obj,Animation,false,0,0,0,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH

; 2363 : 				ReturnToNormalState(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReturnToNormalState@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::ReturnToNormalState

; 2364 : 				GameObject *Driver = Get_Vehicle_Driver(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	mov	DWORD PTR _Driver$6[ebp], eax

; 2365 : 				if (Driver)

	cmp	DWORD PTR _Driver$6[ebp], 0
	je	SHORT $LN14@Timer_Expi

; 2366 : 				{
; 2367 : 					JmgUtility::DisplayChatMessage(Driver,200,200,125,"Engine overload detected!");

	push	OFFSET ??_C@_0BK@PMLDBCIK@Engine?5overload?5detected?$CB?$AA@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _Driver$6[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 2368 : 					Create_2D_Sound_Player(Driver,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _Driver$6[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8
$LN14@Timer_Expi:

; 2369 : 				}
; 2370 : 				EngineDisabled = 25;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 25			; 00000019H

; 2371 : 				Commands->Enable_Engine(obj,false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+552]
	call	edx
	add	esp, 8
$LN15@Timer_Expi:

; 2372 : 			}
; 2373 : 		}

	jmp	$LN7@Timer_Expi
$LN17@Timer_Expi:

; 2374 : 		else if (MyObject->Type == PlayerShipDisrupter && !EngineDisabled)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR [ecx+16], 16			; 00000010H
	jne	SHORT $LN12@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	SHORT $LN12@Timer_Expi

; 2375 : 		{
; 2376 : 			Commands->Set_Animation(obj,Animation,false,0,0,0,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+164]
	call	eax
	add	esp, 28					; 0000001cH

; 2377 : 			ReturnToNormalState(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReturnToNormalState@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::ReturnToNormalState
	jmp	SHORT $LN7@Timer_Expi
$LN12@Timer_Expi:

; 2378 : 		}
; 2379 : 		else if (EngineDisabled > 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jle	SHORT $LN10@Timer_Expi

; 2380 : 		{
; 2381 : 			EngineDisabled--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], ecx

; 2382 : 			if (!EngineDisabled)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	SHORT $LN9@Timer_Expi

; 2383 : 			{
; 2384 : 				EngineDisabled = -10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], -10			; fffffff6H

; 2385 : 				Commands->Enable_Engine(obj,true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+552]
	call	edx
	add	esp, 8
$LN9@Timer_Expi:

; 2386 : 			}
; 2387 : 		}

	jmp	SHORT $LN7@Timer_Expi
$LN10@Timer_Expi:

; 2388 : 		else if (EngineDisabled < 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jge	SHORT $LN7@Timer_Expi

; 2389 : 			EngineDisabled++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], ecx
$LN7@Timer_Expi:

; 2390 : 		Commands->Start_Timer(obj,this,0.1f,453213);

	push	453213					; 0006ea5dH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN26@Timer_Expi:

; 2391 : 	}
; 2392 : 	if (number == 453217)

	cmp	DWORD PTR _number$[ebp], 453217		; 0006ea61H
	jne	$LN4@Timer_Expi

; 2393 : 	{
; 2394 : 		GameObject *Driver = Get_Vehicle_Driver(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	mov	DWORD PTR _Driver$5[ebp], eax

; 2395 : 		if (Driver)

	cmp	DWORD PTR _Driver$5[ebp], 0
	je	$LN5@Timer_Expi

; 2396 : 		{
; 2397 : 			Set_Screen_Fade_Color_Player(Driver,0.4588f,0.7294f,1.0f,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f3ab9f5
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3eeae7d5
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Driver$5[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Color_Player@@3P6AXPAVScriptableGameObj@@MMMM@ZA ; Set_Screen_Fade_Color_Player
	add	esp, 20					; 00000014H

; 2398 : 			Set_Screen_Fade_Opacity_Player(Driver,1.0f,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Driver$5[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Opacity_Player@@3P6AXPAVScriptableGameObj@@MM@ZA ; Set_Screen_Fade_Opacity_Player
	add	esp, 12					; 0000000cH

; 2399 : 			Commands->Send_Custom_Event(obj,obj,77454832,0,0.1f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	push	0
	push	77454832				; 049dddf0H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 2400 : 			Commands->Send_Custom_Event(obj,obj,77454832,0,0.25f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	77454832				; 049dddf0H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN5@Timer_Expi:

; 2401 : 		}
; 2402 : 		GameObject *Portal = Commands->Find_Object(PortalOutID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Portal$4[ebp], eax

; 2403 : 		if (Portal)

	cmp	DWORD PTR _Portal$4[ebp], 0
	je	SHORT $LN4@Timer_Expi

; 2404 : 		{
; 2405 : 			Commands->Attach_To_Object_Bone(obj,Portal,"origin");

	push	OFFSET ??_C@_06NHCMNMEH@origin?$AA@
	mov	eax, DWORD PTR _Portal$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 2406 : 			Commands->Set_Model(Portal,"HyperOut");

	push	OFFSET ??_C@_08CCPOGDLK@HyperOut?$AA@
	mov	eax, DWORD PTR _Portal$4[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8
$LN4@Timer_Expi:

; 2407 : 		}
; 2408 : 	}
; 2409 : 	if (number == 453218)

	cmp	DWORD PTR _number$[ebp], 453218		; 0006ea62H
	jne	$LN3@Timer_Expi

; 2410 : 	{
; 2411 : 		GameObject *Portal = Commands->Find_Object(PortalOutID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Portal$3[ebp], eax

; 2412 : 		if (Portal)

	cmp	DWORD PTR _Portal$3[ebp], 0
	je	SHORT $LN2@Timer_Expi

; 2413 : 			Commands->Destroy_Object(Portal);

	mov	eax, DWORD PTR _Portal$3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN2@Timer_Expi:

; 2414 : 		Portal = Commands->Find_Object(PortalInID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Portal$3[ebp], eax

; 2415 : 		if (Portal)

	cmp	DWORD PTR _Portal$3[ebp], 0
	je	SHORT $LN1@Timer_Expi

; 2416 : 			Commands->Destroy_Object(Portal);

	mov	eax, DWORD PTR _Portal$3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN1@Timer_Expi:

; 2417 : 		Commands->Set_Is_Rendered(obj,true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+628]
	call	edx
	add	esp, 8

; 2418 : 		ChangingWeapons = 1;

	mov	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+110], ax

; 2419 : 		ReturnToNormalState(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReturnToNormalState@JMG_CMTB_Ship_Control_Script@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Ship_Control_Script::ReturnToNormalState
$LN3@Timer_Expi:

; 2420 : 	}
; 2421 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_CMTB_Ship_Control_Script::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
$T1 = -96						; size = 12
$T2 = -84						; size = 16
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Ship_Control_Script::Created, COMDAT
; _this$ = ecx

; 1503 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1504 : 	prepingHyperjump = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0

; 1505 : 	EngineDisabled = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 1

; 1506 : 	OldPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 1507 : 	PortalInID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0

; 1508 : 	PortalOutID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0

; 1509 : 	ForfeitLives = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0

; 1510 : 	OverPoweredWeapons = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+108], 0

; 1511 : 	Power = 100;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 100			; 00000064H

; 1512 : 	ShieldLightUp = 0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+104], xmm0

; 1513 : 	ChangingWeapons = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+110], ax

; 1514 : 	RapidPowerRegen = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 0

; 1515 : 	ExtraShotActive = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+116], 0

; 1516 : 	RemoveExtraShot = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+120], 0

; 1517 : 	RenCometBustersList += TypeObject(obj,1.265625f,1.125f,NormalPlayerShip);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f900000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3fa20000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 1518 : 	MyObject = RenCometBustersList.FindObject(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?FindObject@RenCometBustersGameObjects@@QAEPAUAnObject@@PAVScriptableGameObj@@@Z ; RenCometBustersGameObjects::FindObject
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+68], eax

; 1519 : 	LastBulletCount = Get_Current_Total_Bullets(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Current_Total_Bullets@@YAHPAVScriptableGameObj@@@Z ; Get_Current_Total_Bullets
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], eax

; 1520 : 	Commands->Start_Timer(obj,this,0.1f,453212);

	push	453212					; 0006ea5cH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 1521 : 	Commands->Start_Timer(obj,this,0.1f,453213);

	push	453213					; 0006ea5dH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 1522 : 	Commands->Start_Timer(obj,this,0.1f,453214);

	push	453214					; 0006ea5eH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 1523 : 	Commands->Start_Timer(obj,this,0.25f,453215);

	push	453215					; 0006ea5fH
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 1524 : 	Commands->Start_Timer(obj,this,1.0f,453216);

	push	453216					; 0006ea60H
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 1525 : 	Commands->Disable_Physical_Collisions(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+84]
	call	edx
	add	esp, 4

; 1526 : 	Attach_Script_Once(obj,"JMG_RP2_Object_Send_Text_Message_On_Death",0);

	push	0
	push	OFFSET ??_C@_0CK@NFAFAOHK@JMG_RP2_Object_Send_Text_Message@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Attach_Script_Once@@YAXPAVScriptableGameObj@@PBD1@Z ; Attach_Script_Once
	add	esp, 12					; 0000000cH

; 1527 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_CMTB_Ship_Control_Script@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Ship_Control_Script::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_UFO_Random_Fire_Control@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_UFO_Random_Fire_Control@@UAEPAXI@Z PROC	; JMG_CMTB_UFO_Random_Fire_Control::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_UFO_Random_Fire_Control@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_UFO_Random_Fire_Control@@UAEPAXI@Z ENDP	; JMG_CMTB_UFO_Random_Fire_Control::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_UFO_Random_Fire_Control@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_UFO_Random_Fire_Control@@UAE@XZ PROC	; JMG_CMTB_UFO_Random_Fire_Control::~JMG_CMTB_UFO_Random_Fire_Control, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_UFO_Random_Fire_Control@@UAE@XZ ENDP	; JMG_CMTB_UFO_Random_Fire_Control::~JMG_CMTB_UFO_Random_Fire_Control
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_UFO_Random_Fire_Control@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_UFO_Random_Fire_Control@@QAE@XZ PROC	; JMG_CMTB_UFO_Random_Fire_Control::JMG_CMTB_UFO_Random_Fire_Control, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_UFO_Random_Fire_Control@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_UFO_Random_Fire_Control@@QAE@XZ ENDP	; JMG_CMTB_UFO_Random_Fire_Control::JMG_CMTB_UFO_Random_Fire_Control
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Destroyed@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
$T1 = -84						; size = 12
_Powerup$2 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_UFO_Random_Fire_Control::Destroyed, COMDAT
; _this$ = ecx

; 1493 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1494 : 	RenCometBustersList -= obj;

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??ZRenCometBustersGameObjects@@QAEAAV0@PAVScriptableGameObj@@@Z ; RenCometBustersGameObjects::operator-=

; 1495 : 	if (Get_Int_Parameter("UFOBoss"))

	push	OFFSET ??_C@_07ENBNDFIO@UFOBoss?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	SHORT $LN3@Destroyed

; 1496 : 		if (!RenCometBustersList.CountType(UFOBoss))

	push	6
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?CountType@RenCometBustersGameObjects@@QAEHW4ObjectType@@@Z ; RenCometBustersGameObjects::CountType
	test	eax, eax
	jne	SHORT $LN3@Destroyed

; 1497 : 		{
; 1498 : 			GameObject *Powerup = Commands->Create_Object("CMTB_Powerup_Object",Commands->Get_Position(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0BE@IAPNGHEF@CMTB_Powerup_Object?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Powerup$2[ebp], eax

; 1499 : 			Commands->Attach_Script(Powerup,"JMG_CMTB_Powerup_Script","4,0");

	push	OFFSET ??_C@_03EPODMGGC@4?00?$AA@
	push	OFFSET ??_C@_0BI@KMNMLLME@JMG_CMTB_Powerup_Script?$AA@
	mov	eax, DWORD PTR _Powerup$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH
$LN3@Destroyed:

; 1500 : 		}
; 1501 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Destroyed@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_UFO_Random_Fire_Control::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Killed@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
tv143 = -88						; size = 4
$T1 = -80						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
?Killed@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@0@Z PROC ; JMG_CMTB_UFO_Random_Fire_Control::Killed, COMDAT
; _this$ = ecx

; 1486 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1487 : 	if (!(Get_Int_Parameter("UFOBoss") && RenCometBustersList.CountType(UFOBoss) == 1))

	push	OFFSET ??_C@_07ENBNDFIO@UFOBoss?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	SHORT $LN2@Killed
	push	6
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?CountType@RenCometBustersGameObjects@@QAEHW4ObjectType@@@Z ; RenCometBustersGameObjects::CountType
	cmp	eax, 1
	je	SHORT $LN1@Killed
$LN2@Killed:

; 1488 : 		if (Commands->Get_Random_Int(0,100) < 20+(JMG_CMTB_Main_Game_Control::CMTBLevel*0.2))// was originally 0.1 and 10

	push	100					; 00000064H
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	cvtsi2sd xmm0, eax
	mov	edx, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	mov	DWORD PTR tv143[ebp], edx
	cvtsi2sd xmm1, DWORD PTR tv143[ebp]
	mov	eax, DWORD PTR tv143[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	mulsd	xmm1, QWORD PTR __real@3fc999999999999a
	addsd	xmm1, QWORD PTR __real@4034000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN1@Killed

; 1489 : 			JMG_CMTB_Random_Ship_Powerup(Commands->Get_Position(obj));

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, -4					; fffffffcH
	mov	ecx, esp
	push	eax
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	call	?JMG_CMTB_Random_Ship_Powerup@@YAPAVScriptableGameObj@@VVector3@@H@Z ; JMG_CMTB_Random_Ship_Powerup
	add	esp, 16					; 00000010H
$LN1@Killed:

; 1490 : 	RenCometBustersList.GrantScoreToKiller(damager,250.0f,UFO);

	push	0
	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@437a0000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?GrantScoreToKiller@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MW4ObjectType@@H@Z ; RenCometBustersGameObjects::GrantScoreToKiller

; 1491 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@0@Z ENDP ; JMG_CMTB_UFO_Random_Fire_Control::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
tv276 = -112						; size = 4
tv256 = -112						; size = 4
$T1 = -108						; size = 12
$T2 = -96						; size = 16
$T3 = -80						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_CMTB_UFO_Random_Fire_Control::Timer_Expired, COMDAT
; _this$ = ecx

; 1452 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 112				; 00000070H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1453 : 	if (number == 5432)

	cmp	DWORD PTR _number$[ebp], 5432		; 00001538H
	jne	SHORT $LN6@Timer_Expi

; 1454 : 	{
; 1455 : 		Commands->Create_Sound("SFX.Comet_Busters_Ship_Hyperspace",Commands->Get_Position(obj),obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0CC@LHEOCOHM@SFX?4Comet_Busters_Ship_Hyperspac@
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+172]
	call	eax
	add	esp, 12					; 0000000cH
$LN6@Timer_Expi:

; 1456 : 	}
; 1457 : 	if (number == 5433)

	cmp	DWORD PTR _number$[ebp], 5433		; 00001539H
	jne	$LN5@Timer_Expi

; 1458 : 	{
; 1459 : 		if (!Get_Int_Parameter("UFOBoss"))

	push	OFFSET ??_C@_07ENBNDFIO@UFOBoss?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN4@Timer_Expi

; 1460 : 			RenCometBustersList += TypeObject(obj,9.0f,3.0f,UFO);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@41100000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=
$LN4@Timer_Expi:

; 1461 : 		Commands->Set_Model(obj,"UFO");

	push	OFFSET ??_C@_03CBJOHNML@UFO?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 1462 : 		Commands->Set_Animation(obj,"UFO.UFO",true,0,0,-1,true);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	1
	push	OFFSET ??_C@_07NPBKOJID@UFO?4UFO?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 1463 : 		Commands->Start_Timer(obj,this,Commands->Get_Random(0.25,1.25)*JMG_CMTB_Main_Game_Control::DifficultyMultiplierInv,5434);

	push	5434					; 0000153aH
	push	ecx
	movss	xmm0, DWORD PTR __real@3fa00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv256[ebp]
	movss	xmm0, DWORD PTR tv256[ebp]
	mulss	xmm0, DWORD PTR ?DifficultyMultiplierInv@JMG_CMTB_Main_Game_Control@@2MA
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+128]
	call	edx
	add	esp, 16					; 00000010H
$LN5@Timer_Expi:

; 1464 : 	}
; 1465 : 	if (number == 5434)

	cmp	DWORD PTR _number$[ebp], 5434		; 0000153aH
	jne	$LN3@Timer_Expi

; 1466 : 	{
; 1467 : 		Set_Current_Bullets(obj,1);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Bullets
	add	esp, 8

; 1468 : 		Set_Current_Clip_Bullets(obj,Commands->Get_Random_Int(0,3));

	push	3
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8

; 1469 : 		Commands->Start_Timer(obj,this,Commands->Get_Random(0.25,1.25)*JMG_CMTB_Main_Game_Control::DifficultyMultiplierInv,5434);

	push	5434					; 0000153aH
	push	ecx
	movss	xmm0, DWORD PTR __real@3fa00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv276[ebp]
	movss	xmm0, DWORD PTR tv276[ebp]
	mulss	xmm0, DWORD PTR ?DifficultyMultiplierInv@JMG_CMTB_Main_Game_Control@@2MA
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+128]
	call	edx
	add	esp, 16					; 00000010H
$LN3@Timer_Expi:

; 1470 : 	}
; 1471 : 	if (number == 5435)

	cmp	DWORD PTR _number$[ebp], 5435		; 0000153bH
	jne	$LN2@Timer_Expi

; 1472 : 	{
; 1473 : 		RenCometBustersList -= obj;

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??ZRenCometBustersGameObjects@@QAEAAV0@PAVScriptableGameObj@@@Z ; RenCometBustersGameObjects::operator-=

; 1474 : 		Commands->Action_Reset(obj,99);

	push	ecx
	movss	xmm0, DWORD PTR __real@42c60000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 8

; 1475 : 		Commands->Set_Model(obj,"UFOJump");

	push	OFFSET ??_C@_07HPFMBEAN@UFOJump?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 1476 : 		Commands->Set_Animation(obj,"UFOJump.UFOJump",false,0,90,0,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BA@KHOIHPDE@UFOJump?4UFOJump?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 1477 : 		Commands->Create_Sound("SFX.Comet_Busters_Ship_Hyperspace",Commands->Get_Position(obj),obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0CC@LHEOCOHM@SFX?4Comet_Busters_Ship_Hyperspac@
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+172]
	call	eax
	add	esp, 12					; 0000000cH

; 1478 : 		Commands->Start_Timer(obj,this,3.0f,5436);

	push	5436					; 0000153cH
	push	ecx
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN2@Timer_Expi:

; 1479 : 	}
; 1480 : 	if (number == 5436)

	cmp	DWORD PTR _number$[ebp], 5436		; 0000153cH
	jne	SHORT $LN1@Timer_Expi

; 1481 : 	{
; 1482 : 		Commands->Destroy_Object(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN1@Timer_Expi:

; 1483 : 	}
; 1484 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_CMTB_UFO_Random_Fire_Control::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
tv260 = -312						; size = 4
tv253 = -312						; size = 4
$T1 = -308						; size = 16
$T2 = -292						; size = 12
_params$ = -216						; size = 196
_target$ = -20						; size = 12
_facing$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_UFO_Random_Fire_Control::Created, COMDAT
; _this$ = ecx

; 1427 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1428 : 	if (Get_Int_Parameter("UFOBoss"))

	push	OFFSET ??_C@_07ENBNDFIO@UFOBoss?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	SHORT $LN2@Created

; 1429 : 	{
; 1430 : 		RenCometBustersList += TypeObject(obj,9.0f,3.0f,UFOBoss);

	push	6
	push	ecx
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@41100000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; TypeObject::TypeObject
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ; RenCometBustersGameObjects::operator+=

; 1431 : 		Commands->Set_Obj_Radar_Blip_Shape(obj,RADAR_BLIP_SHAPE_OBJECTIVE);

	push	4
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+372]
	call	edx
	add	esp, 8

; 1432 : 	}
; 1433 : 	else

	jmp	SHORT $LN1@Created
$LN2@Created:

; 1434 : 		Commands->Start_Timer(obj,this,Commands->Get_Random(15.0f,45.0f),5435);

	push	5435					; 0000153bH
	push	ecx
	movss	xmm0, DWORD PTR __real@42340000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@41700000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 4
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+128]
	call	edx
	add	esp, 16					; 00000010H
$LN1@Created:

; 1435 : 	float facing = Commands->Get_Facing(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+72]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _facing$[ebp]

; 1436 : 	Vector3 target = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _target$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1437 : 	target.X += cos(facing*3.14159265f/180) * 10.0f;

	movss	xmm0, DWORD PTR _facing$[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv253[ebp]
	movss	xmm0, DWORD PTR tv253[ebp]
	mulss	xmm0, DWORD PTR __real@41200000
	addss	xmm0, DWORD PTR _target$[ebp]
	movss	DWORD PTR _target$[ebp], xmm0

; 1438 : 	target.Y += sin(facing*3.14159265f/180) * 10.0f;

	movss	xmm0, DWORD PTR _facing$[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR tv260[ebp]
	movss	xmm0, DWORD PTR tv260[ebp]
	mulss	xmm0, DWORD PTR __real@41200000
	addss	xmm0, DWORD PTR _target$[ebp+4]
	movss	DWORD PTR _target$[ebp+4], xmm0

; 1439 : 	target.Z += 2.0f;

	movss	xmm0, DWORD PTR _target$[ebp+8]
	addss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _target$[ebp+8], xmm0

; 1440 : 	ActionParamsStruct params;

	lea	ecx, DWORD PTR _params$[ebp]
	call	??0ActionParamsStruct@@QAE@XZ		; ActionParamsStruct::ActionParamsStruct

; 1441 : 	params.Set_Basic(this,99,1);

	push	-1
	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@42c60000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 1442 : 	params.Set_Attack(target,100.0f,0.0f,true);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR _target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$[ebp]
	call	?Set_Attack@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ; ActionParamsStruct::Set_Attack

; 1443 : 	params.AttackForceFire = true;

	mov	BYTE PTR _params$[ebp+112], 1

; 1444 : 	Commands->Action_Attack(obj,params);

	lea	eax, DWORD PTR _params$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+20]
	call	eax
	add	esp, 8

; 1445 : 	Set_Current_Clip_Bullets(obj,0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Current_Clip_Bullets@@3P6AXPAVScriptableGameObj@@H@ZA ; Set_Current_Clip_Bullets
	add	esp, 8

; 1446 : 	Commands->Set_Model(obj,"UFOJump");

	push	OFFSET ??_C@_07HPFMBEAN@UFOJump?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 1447 : 	Commands->Set_Animation(obj,"UFOJump.UFOJump",false,0,0,130,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@43020000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BA@KHOIHPDE@UFOJump?4UFOJump?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 1448 : 	Commands->Start_Timer(obj,this,1.5f,5432);

	push	5432					; 00001538H
	push	ecx
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 1449 : 	Commands->Start_Timer(obj,this,3.0f,5433);

	push	5433					; 00001539H
	push	ecx
	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 1450 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_CMTB_UFO_Random_Fire_Control@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_UFO_Random_Fire_Control::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJMG_CMTB_Main_Game_Control@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJMG_CMTB_Main_Game_Control@@UAEPAXI@Z PROC		; JMG_CMTB_Main_Game_Control::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JMG_CMTB_Main_Game_Control@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJMG_CMTB_Main_Game_Control@@UAEPAXI@Z ENDP		; JMG_CMTB_Main_Game_Control::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1JMG_CMTB_Main_Game_Control@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1JMG_CMTB_Main_Game_Control@@UAE@XZ PROC		; JMG_CMTB_Main_Game_Control::~JMG_CMTB_Main_Game_Control, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1JMG_CMTB_Main_Game_Control@@UAE@XZ ENDP		; JMG_CMTB_Main_Game_Control::~JMG_CMTB_Main_Game_Control
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JMG_CMTB_Main_Game_Control@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JMG_CMTB_Main_Game_Control@@QAE@XZ PROC		; JMG_CMTB_Main_Game_Control::JMG_CMTB_Main_Game_Control, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JMG_CMTB_Main_Game_Control@@6B@
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	8
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JMG_CMTB_Main_Game_Control@@QAE@XZ ENDP		; JMG_CMTB_Main_Game_Control::JMG_CMTB_Main_Game_Control
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?FadeMusic@JMG_CMTB_Main_Game_Control@@AAEXPBD@Z
_TEXT	SEGMENT
_player$1 = -12						; size = 4
_x$2 = -8						; size = 4
_this$ = -4						; size = 4
_music$ = 8						; size = 4
?FadeMusic@JMG_CMTB_Main_Game_Control@@AAEXPBD@Z PROC	; JMG_CMTB_Main_Game_Control::FadeMusic, COMDAT
; _this$ = ecx

; 1415 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1416 : 	for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$2[ebp], 0
	jmp	SHORT $LN5@FadeMusic
$LN4@FadeMusic:
	mov	eax, DWORD PTR _x$2[ebp]
	add	eax, 1
	mov	DWORD PTR _x$2[ebp], eax
$LN5@FadeMusic:
	cmp	DWORD PTR _x$2[ebp], 8
	jge	SHORT $LN6@FadeMusic

; 1417 : 	{
; 1418 : 		if (MiniGamePlayerControlSystem[x].GamePlayerID)

	mov	eax, DWORD PTR _x$2[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20], 0
	je	SHORT $LN2@FadeMusic

; 1419 : 		{
; 1420 : 			GameObject *player = Commands->Find_Object(MiniGamePlayerControlSystem[x].GamePlayerID);

	mov	eax, DWORD PTR _x$2[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _player$1[ebp], eax

; 1421 : 			if (player)

	cmp	DWORD PTR _player$1[ebp], 0
	je	SHORT $LN2@FadeMusic

; 1422 : 				Fade_Background_Music_Player(player,music,2000,2000);

	push	2000					; 000007d0H
	push	2000					; 000007d0H
	mov	eax, DWORD PTR _music$[ebp]
	push	eax
	mov	ecx, DWORD PTR _player$1[ebp]
	push	ecx
	call	DWORD PTR ?Fade_Background_Music_Player@@3P6AXPAVScriptableGameObj@@PBDHH@ZA ; Fade_Background_Music_Player
	add	esp, 16					; 00000010H
$LN2@FadeMusic:

; 1423 : 		}
; 1424 : 	}

	jmp	SHORT $LN4@FadeMusic
$LN6@FadeMusic:

; 1425 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?FadeMusic@JMG_CMTB_Main_Game_Control@@AAEXPBD@Z ENDP	; JMG_CMTB_Main_Game_Control::FadeMusic
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?DisableGun@JMG_CMTB_Main_Game_Control@@AAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_Weapon$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?DisableGun@JMG_CMTB_Main_Game_Control@@AAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Main_Game_Control::DisableGun, COMDAT
; _this$ = ecx

; 1407 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1408 : 	const char *Weapon = Get_Current_Weapon(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Current_Weapon@@YAPBDPAVScriptableGameObj@@@Z ; Get_Current_Weapon
	add	esp, 4
	mov	DWORD PTR _Weapon$[ebp], eax

; 1409 : 	if (Weapon)

	cmp	DWORD PTR _Weapon$[ebp], 0
	je	SHORT $LN1@DisableGun

; 1410 : 		return;

	jmp	SHORT $LN2@DisableGun
$LN1@DisableGun:

; 1411 : 	Commands->Select_Weapon(obj,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+136]
	call	edx
	add	esp, 8

; 1412 : 	Commands->Select_Weapon(obj,Weapon);

	mov	eax, DWORD PTR _Weapon$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+136]
	call	eax
	add	esp, 8
$LN2@DisableGun:

; 1413 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?DisableGun@JMG_CMTB_Main_Game_Control@@AAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Main_Game_Control::DisableGun
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Create_Player_Ship@JMG_CMTB_Main_Game_Control@@AAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
tv873 = -244						; size = 4
tv855 = -244						; size = 4
tv837 = -244						; size = 4
tv819 = -244						; size = 4
tv770 = -244						; size = 4
tv652 = -244						; size = 4
tv620 = -244						; size = 4
tv461 = -244						; size = 4
tv150 = -244						; size = 4
$T1 = -240						; size = 12
$T2 = -228						; size = 12
_ShipSpot$3 = -152					; size = 12
_ShipName$4 = -140					; size = 32
_Spot$5 = -108						; size = 32
_SpawnLocation$6 = -76					; size = 4
_ShipName$7 = -72					; size = 32
_Spot$8 = -40						; size = 32
_Player$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_PlayerNumber$ = 12					; size = 4
?Create_Player_Ship@JMG_CMTB_Main_Game_Control@@AAEXPAVScriptableGameObj@@H@Z PROC ; JMG_CMTB_Main_Game_Control::Create_Player_Ship, COMDAT
; _this$ = ecx

; 1285 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1286 : 	GameObject *Player = Commands->Find_Object(MiniGamePlayerControlSystem[PlayerNumber].GamePlayerID);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Player$[ebp], eax

; 1287 : 	if (MiniGamePlayerControlSystem[PlayerNumber].RespawnTime > 30 && Player)

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+24], 30 ; 0000001eH
	jle	SHORT $LN27@Create_Pla
	cmp	DWORD PTR _Player$[ebp], 0
	je	SHORT $LN27@Create_Pla

; 1288 : 		MiniGamePlayerControlSystem[PlayerNumber].RespawnTime = 30;

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+24], 30 ; 0000001eH
$LN27@Create_Pla:

; 1289 : 	if (abs(MiniGamePlayerControlSystem[PlayerNumber].LastNewLifeScore-MiniGamePlayerControlSystem[PlayerNumber].Score) > 100000.0f)

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	movss	xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+360]
	subss	xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+60]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?abs@@YAMM@Z				; abs
	add	esp, 4
	fstp	DWORD PTR tv620[ebp]
	movss	xmm0, DWORD PTR tv620[ebp]
	comiss	xmm0, DWORD PTR __real@47c35000
	jbe	$LN25@Create_Pla

; 1290 : 	{// Give a new life
; 1291 : 		JmgUtility::DisplayChatMessage(Player,127,255,0,"You have aquired another life!");

	push	OFFSET ??_C@_0BP@IKJEMBEN@You?5have?5aquired?5another?5life?$CB?$AA@
	push	0
	push	255					; 000000ffH
	push	127					; 0000007fH
	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1292 : 		Create_2D_Sound_Player(Player,"SFX.Comet_Busters_Pickup_Powerup");

	push	OFFSET ??_C@_0CB@NJFDNEPI@SFX?4Comet_Busters_Pickup_Powerup@
	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1293 : 		MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives++;

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _PlayerNumber$[ebp]
	imul	edx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+4], ecx

; 1294 : 		MiniGamePlayerControlSystem[PlayerNumber].LastNewLifeScore = MiniGamePlayerControlSystem[PlayerNumber].Score;

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60]
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+360], edx

; 1295 : 		RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[PlayerNumber].PlayerID)->NewLivesAcquired++;

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 344				; 00000158H
	mov	DWORD PTR tv150[ebp], eax
	mov	edx, DWORD PTR tv150[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv150[ebp]
	mov	DWORD PTR [ecx], eax

; 1296 : 		Set_Max_Shield_Strength(MiniGamePlayerControlSystem[PlayerNumber].SpectatorObject,(float)JmgUtility::MathClampInt(MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives+1,5,100));

	push	100					; 00000064H
	push	5
	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	add	ecx, 1
	push	ecx
	call	?MathClampInt@JmgUtility@@SAHHHH@Z	; JmgUtility::MathClampInt
	add	esp, 12					; 0000000cH
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _PlayerNumber$[ebp]
	imul	edx, 596				; 00000254H
	mov	eax, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+16]
	push	eax
	call	?Set_Max_Shield_Strength@@YAXPAVScriptableGameObj@@M@Z ; Set_Max_Shield_Strength
	add	esp, 8

; 1297 : 		Commands->Set_Shield_Strength(MiniGamePlayerControlSystem[PlayerNumber].SpectatorObject,(float)MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives+1);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cvtsi2ss xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	addss	xmm0, DWORD PTR __real@3f800000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+16]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+240]
	call	ecx
	add	esp, 8

; 1298 : 		if (MiniGamePlayerControlSystem[PlayerNumber].PlayerShip)

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8], 0
	je	$LN25@Create_Pla

; 1299 : 		{
; 1300 : 			if (Commands->Get_Max_Health(MiniGamePlayerControlSystem[PlayerNumber].PlayerShip) < MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives+1)

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+224]
	call	eax
	add	esp, 4
	fstp	DWORD PTR tv652[ebp]
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+4]
	add	edx, 1
	cvtsi2ss xmm0, edx
	comiss	xmm0, DWORD PTR tv652[ebp]
	jbe	SHORT $LN24@Create_Pla

; 1301 : 				Set_Max_Health(MiniGamePlayerControlSystem[PlayerNumber].PlayerShip,(float)MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives+1);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cvtsi2ss xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	addss	xmm0, DWORD PTR __real@3f800000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+8]
	push	edx
	call	?Set_Max_Health@@YAXPAVScriptableGameObj@@M@Z ; Set_Max_Health
	add	esp, 8
$LN24@Create_Pla:

; 1302 : 			Commands->Set_Health(MiniGamePlayerControlSystem[PlayerNumber].PlayerShip,(float)MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives+1);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cvtsi2ss xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	addss	xmm0, DWORD PTR __real@3f800000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+8]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+228]
	call	ecx
	add	esp, 8
$LN25@Create_Pla:

; 1303 : 		}
; 1304 : 	}
; 1305 : 	if (NextLevelDelay != -1 && MiniGamePlayerControlSystem[PlayerNumber].RespawnTime > 0 && MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives > 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], -1
	je	SHORT $LN23@Create_Pla
	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+24], 0
	jle	SHORT $LN23@Create_Pla
	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4], 0
	jle	SHORT $LN23@Create_Pla

; 1306 : 		MiniGamePlayerControlSystem[PlayerNumber].RespawnTime--;

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+24]
	sub	ecx, 1
	mov	edx, DWORD PTR _PlayerNumber$[ebp]
	imul	edx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+24], ecx
$LN23@Create_Pla:

; 1307 : 	if (!MiniGamePlayerControlSystem[PlayerNumber].ReplacementShip && MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives > 0)

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+12], 0
	jne	$LN22@Create_Pla
	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4], 0
	jle	$LN22@Create_Pla

; 1308 : 	{// Recreate the replacement ship if it was killed
; 1309 : 		char Spot[32];
; 1310 : 		sprintf(Spot,"CreateS%d",PlayerNumber);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	push	eax
	push	OFFSET ??_C@_09CFKJBEPJ@CreateS?$CFd?$AA@
	lea	ecx, DWORD PTR _Spot$8[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1311 : 		MiniGamePlayerControlSystem[PlayerNumber].ReplacementShip = Commands->Create_Object_At_Bone(obj,"Player_Ships",Spot);

	lea	eax, DWORD PTR _Spot$8[ebp]
	push	eax
	push	OFFSET ??_C@_0N@FHNGDPEO@Player_Ships?$AA@
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+104]
	call	eax
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+12], eax

; 1312 : 		char ShipName[32];
; 1313 : 		sprintf(ShipName,"P%d_SHIP",PlayerNumber);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	push	eax
	push	OFFSET ??_C@_08LMPADKBD@P?$CFd_SHIP?$AA@
	lea	ecx, DWORD PTR _ShipName$7[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1314 : 		Commands->Set_Model(MiniGamePlayerControlSystem[PlayerNumber].ReplacementShip,ShipName);

	lea	eax, DWORD PTR _ShipName$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+12]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+160]
	call	ecx
	add	esp, 8

; 1315 : 		sprintf(ShipName,"P%d_SHIP.P%d_SHIP",PlayerNumber,PlayerNumber);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	push	eax
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BC@HMKEDKPH@P?$CFd_SHIP?4P?$CFd_SHIP?$AA@
	lea	edx, DWORD PTR _ShipName$7[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 1316 : 		Commands->Set_Animation(MiniGamePlayerControlSystem[PlayerNumber].ReplacementShip,ShipName,false,0,0,0,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	lea	eax, DWORD PTR _ShipName$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+12]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+164]
	call	ecx
	add	esp, 28					; 0000001cH

; 1317 : 		Commands->Set_Health(MiniGamePlayerControlSystem[PlayerNumber].ReplacementShip,(float)MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cvtsi2ss xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+12]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+228]
	call	ecx
	add	esp, 8
$LN22@Create_Pla:

; 1318 : 	}//TODO enable end of line if spawning broken
; 1319 : 	if (NextLevelDelay != -1 && MiniGamePlayerControlSystem[PlayerNumber].RespawnTime <= 0 && MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives > 0 && !MiniGamePlayerControlSystem[PlayerNumber].PlayerShip)//5 && Get_Vehicle_Driver(MiniGamePlayerControlSystem[PlayerNumber].SpectatorObject))

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], -1
	je	$LN21@Create_Pla
	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+24], 0
	jg	$LN21@Create_Pla
	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4], 0
	jle	$LN21@Create_Pla
	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8], 0
	jne	$LN21@Create_Pla

; 1320 : 	{
; 1321 : 		int SpawnLocation = RenCometBustersList.AllowShipSpawn(PlayerNumber,SpawnLocations);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?AllowShipSpawn@RenCometBustersGameObjects@@QAEHHQAVVector3@@@Z ; RenCometBustersGameObjects::AllowShipSpawn
	mov	DWORD PTR _SpawnLocation$6[ebp], eax

; 1322 : 		if (SpawnLocation == MaxGamePlayerCount)

	cmp	DWORD PTR _SpawnLocation$6[ebp], 8
	jne	SHORT $LN20@Create_Pla

; 1323 : 		{
; 1324 : 			MiniGamePlayerControlSystem[PlayerNumber].RespawnTime = 10;

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+24], 10 ; 0000000aH

; 1325 : 			return;

	jmp	$LN28@Create_Pla
$LN20@Create_Pla:

; 1326 : 		}
; 1327 : 		Commands->Create_3D_Sound_At_Bone("SFX.Comet_Busters_Ship_Spawn",obj,"origin");

	push	OFFSET ??_C@_06NHCMNMEH@origin?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	push	OFFSET ??_C@_0BN@EKAIJPOG@SFX?4Comet_Busters_Ship_Spawn?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+188]
	call	edx
	add	esp, 12					; 0000000cH

; 1328 : 		MiniGamePlayerControlSystem[PlayerNumber].PlayerShip = MiniGamePlayerControlSystem[PlayerNumber].ReplacementShip;

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+12]
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+8], edx

; 1329 : 		MiniGamePlayerControlSystem[PlayerNumber].ShipObject = RenCometBustersList.FindObject(MiniGamePlayerControlSystem[PlayerNumber].PlayerShip);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?FindObject@RenCometBustersGameObjects@@QAEPAUAnObject@@PAVScriptableGameObj@@@Z ; RenCometBustersGameObjects::FindObject
	mov	edx, DWORD PTR _PlayerNumber$[ebp]
	imul	edx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+592], eax

; 1330 : 		Commands->Set_Position(MiniGamePlayerControlSystem[PlayerNumber].PlayerShip,SpawnLocations[SpawnLocation]);

	mov	eax, DWORD PTR _SpawnLocation$6[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+56]
	push	edx
	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8

; 1331 : 		char Spot[32];
; 1332 : 		sprintf(Spot,"CreateS%d",PlayerNumber);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	push	eax
	push	OFFSET ??_C@_09CFKJBEPJ@CreateS?$CFd?$AA@
	lea	ecx, DWORD PTR _Spot$5[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1333 : 		MiniGamePlayerControlSystem[PlayerNumber].ReplacementShip = Commands->Create_Object_At_Bone(obj,"Player_Ships",Spot);

	lea	eax, DWORD PTR _Spot$5[ebp]
	push	eax
	push	OFFSET ??_C@_0N@FHNGDPEO@Player_Ships?$AA@
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+104]
	call	eax
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+12], eax

; 1334 : 		/*int ReplacementShipID = Commands->Get_ID(MiniGamePlayerControlSystem[PlayerNumber].ReplacementShip);
; 1335 : 		int PlayerShipID = Commands->Get_ID(MiniGamePlayerControlSystem[PlayerNumber].PlayerShip);
; 1336 : 		for (int x = 1;x < 128;x++)
; 1337 : 		{
; 1338 : 			GameObject *Player = Get_GameObj(x);
; 1339 : 			if (!Player)
; 1340 : 				continue;
; 1341 : 			Set_Shader_Number_Vector(Player,PlayerShipID,Vector4(4920041.0f,0.0f,0.0f,0.0f));
; 1342 : 			Set_Shader_Number_Vector(Player,ReplacementShipID,Vector4(4920041.0f,0.0f,0.0f,0.0f));
; 1343 : 		}*/
; 1344 : 		Commands->Disable_Physical_Collisions(MiniGamePlayerControlSystem[PlayerNumber].ReplacementShip);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+12]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+84]
	call	eax
	add	esp, 4

; 1345 : 		Commands->Disable_Physical_Collisions(MiniGamePlayerControlSystem[PlayerNumber].PlayerShip);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+84]
	call	eax
	add	esp, 4

; 1346 : 		char ShipName[32];
; 1347 : 		sprintf(ShipName,"P%d_SHIP",PlayerNumber);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	push	eax
	push	OFFSET ??_C@_08LMPADKBD@P?$CFd_SHIP?$AA@
	lea	ecx, DWORD PTR _ShipName$4[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1348 : 		Commands->Set_Model(MiniGamePlayerControlSystem[PlayerNumber].ReplacementShip,ShipName);

	lea	eax, DWORD PTR _ShipName$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+12]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+160]
	call	ecx
	add	esp, 8

; 1349 : 		sprintf(ShipName,"P%d_SHIP.P%d_SHIP",PlayerNumber,PlayerNumber);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	push	eax
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BC@HMKEDKPH@P?$CFd_SHIP?4P?$CFd_SHIP?$AA@
	lea	edx, DWORD PTR _ShipName$4[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 1350 : 		Commands->Set_Animation(MiniGamePlayerControlSystem[PlayerNumber].ReplacementShip,ShipName,false,0,0,0,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	lea	eax, DWORD PTR _ShipName$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+12]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+164]
	call	ecx
	add	esp, 28					; 0000001cH

; 1351 : 		if (Commands->Get_Max_Health(MiniGamePlayerControlSystem[PlayerNumber].PlayerShip) < MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives)

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+224]
	call	eax
	add	esp, 4
	fstp	DWORD PTR tv770[ebp]
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	cvtsi2ss xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+4]
	comiss	xmm0, DWORD PTR tv770[ebp]
	jbe	SHORT $LN19@Create_Pla

; 1352 : 			Set_Max_Health(MiniGamePlayerControlSystem[PlayerNumber].PlayerShip,(float)MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cvtsi2ss xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+8]
	push	edx
	call	?Set_Max_Health@@YAXPAVScriptableGameObj@@M@Z ; Set_Max_Health
	add	esp, 8
$LN19@Create_Pla:

; 1353 : 		Commands->Set_Health(MiniGamePlayerControlSystem[PlayerNumber].PlayerShip,(float)MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cvtsi2ss xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+8]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+228]
	call	ecx
	add	esp, 8

; 1354 : 		Commands->Set_Obj_Radar_Blip_Shape(MiniGamePlayerControlSystem[PlayerNumber].PlayerShip,RADAR_BLIP_SHAPE_VEHICLE);

	push	2
	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+372]
	call	eax
	add	esp, 8

; 1355 : 		Commands->Set_Health(MiniGamePlayerControlSystem[PlayerNumber].ReplacementShip,5.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+12]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+228]
	call	eax
	add	esp, 8

; 1356 : 		Set_Max_Shield_Strength(MiniGamePlayerControlSystem[PlayerNumber].SpectatorObject,(float)JmgUtility::MathClampInt(MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives,5,100));

	push	100					; 00000064H
	push	5
	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	push	ecx
	call	?MathClampInt@JmgUtility@@SAHHHH@Z	; JmgUtility::MathClampInt
	add	esp, 12					; 0000000cH
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _PlayerNumber$[ebp]
	imul	edx, 596				; 00000254H
	mov	eax, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+16]
	push	eax
	call	?Set_Max_Shield_Strength@@YAXPAVScriptableGameObj@@M@Z ; Set_Max_Shield_Strength
	add	esp, 8

; 1357 : 		Commands->Set_Shield_Strength(MiniGamePlayerControlSystem[PlayerNumber].SpectatorObject,(float)MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cvtsi2ss xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+16]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+240]
	call	ecx
	add	esp, 8

; 1358 : 		MiniGamePlayerControlSystem[PlayerNumber].NumberOfLives--;

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _PlayerNumber$[ebp]
	imul	edx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+4], ecx

; 1359 : 		switch (MiniGamePlayerControlSystem[PlayerNumber].SelectedPerk)

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+436]
	mov	DWORD PTR tv461[ebp], ecx
	mov	edx, DWORD PTR tv461[ebp]
	sub	edx, 6
	mov	DWORD PTR tv461[ebp], edx
	cmp	DWORD PTR tv461[ebp], 3
	ja	$LN17@Create_Pla
	mov	eax, DWORD PTR tv461[ebp]
	jmp	DWORD PTR $LN30@Create_Pla[eax*4]
$LN16@Create_Pla:

; 1360 : 		{
; 1361 : 		case 6:
; 1362 : 			if (Commands->Get_Random(0.0f,1.0f) < 0.2)

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv819[ebp]
	movss	xmm0, DWORD PTR tv819[ebp]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3fc999999999999a
	comisd	xmm1, xmm0
	jbe	SHORT $LN15@Create_Pla

; 1363 : 				Commands->Send_Custom_Event(obj,MiniGamePlayerControlSystem[PlayerNumber].PlayerShip,CMTBPowerUpCustomMessage+10,-1337,1.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	-1337					; fffffac7H
	push	90335500				; 0562690cH
	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H
$LN15@Create_Pla:

; 1364 : 			break;

	jmp	$LN17@Create_Pla
$LN14@Create_Pla:

; 1365 : 		case 7:
; 1366 : 			if (Commands->Get_Random(0.0f,1.0f) < 0.05)

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv837[ebp]
	movss	xmm0, DWORD PTR tv837[ebp]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3fa999999999999a
	comisd	xmm1, xmm0
	jbe	SHORT $LN13@Create_Pla

; 1367 : 				Commands->Send_Custom_Event(obj,MiniGamePlayerControlSystem[PlayerNumber].PlayerShip,CMTBPowerUpCustomMessage+4,-1337,1.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	-1337					; fffffac7H
	push	90335494				; 05626906H
	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H
$LN13@Create_Pla:

; 1368 : 			break;

	jmp	$LN17@Create_Pla
$LN12@Create_Pla:

; 1369 : 		case 8:
; 1370 : 			if (Commands->Get_Random(0.0f,1.0f) < 0.025)

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv855[ebp]
	movss	xmm0, DWORD PTR tv855[ebp]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3f9999999999999a
	comisd	xmm1, xmm0
	jbe	SHORT $LN11@Create_Pla

; 1371 : 				Commands->Send_Custom_Event(obj,MiniGamePlayerControlSystem[PlayerNumber].PlayerShip,CMTBPowerUpCustomMessage+3,-1337,1.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	-1337					; fffffac7H
	push	90335493				; 05626905H
	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H
$LN11@Create_Pla:

; 1372 : 			break;

	jmp	$LN17@Create_Pla
$LN10@Create_Pla:

; 1373 : 		case 9:
; 1374 : 			if (Commands->Get_Random(0.0f,1.0f) < 0.025)

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv873[ebp]
	movss	xmm0, DWORD PTR tv873[ebp]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3f9999999999999a
	comisd	xmm1, xmm0
	jbe	SHORT $LN9@Create_Pla

; 1375 : 				Commands->Send_Custom_Event(obj,MiniGamePlayerControlSystem[PlayerNumber].PlayerShip,CMTBPowerUpCustomMessage+15,-1337,1.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	-1337					; fffffac7H
	push	90335505				; 05626911H
	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H
$LN9@Create_Pla:
$LN17@Create_Pla:

; 1376 : 			break;
; 1377 : 		}
; 1378 : 	}
; 1379 : 	else if (MiniGamePlayerControlSystem[PlayerNumber].PlayerShip && Get_Vehicle(Player) != MiniGamePlayerControlSystem[PlayerNumber].PlayerShip)

	jmp	$LN2@Create_Pla
$LN21@Create_Pla:
	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8], 0
	je	$LN7@Create_Pla
	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	cmp	eax, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+8]
	je	$LN7@Create_Pla

; 1380 : 	{
; 1381 : 		Vector3 ShipSpot = Commands->Get_Position(MiniGamePlayerControlSystem[PlayerNumber].PlayerShip);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _ShipSpot$3[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1382 : 		if (Player && Get_Vehicle(Player) != MiniGamePlayerControlSystem[PlayerNumber].PlayerShip)

	cmp	DWORD PTR _Player$[ebp], 0
	je	SHORT $LN6@Create_Pla
	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	mov	ecx, DWORD PTR _PlayerNumber$[ebp]
	imul	ecx, 596				; 00000254H
	cmp	eax, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+8]
	je	SHORT $LN6@Create_Pla

; 1383 : 		{
; 1384 : 			if (Get_Vehicle(Player))

	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@Create_Pla

; 1385 : 				Force_Occupants_Exit(Get_Vehicle(Player));

	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	push	eax
	call	?Force_Occupants_Exit@@YAXPAVScriptableGameObj@@@Z ; Force_Occupants_Exit
	add	esp, 4

; 1386 : 			else

	jmp	SHORT $LN4@Create_Pla
$LN5@Create_Pla:

; 1387 : 			{
; 1388 : 				Commands->Set_Position(Player,ShipSpot);

	lea	eax, DWORD PTR _ShipSpot$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _Player$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8

; 1389 : 				Soldier_Transition_Vehicle(Player);

	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	call	?Soldier_Transition_Vehicle@@YAXPAVScriptableGameObj@@@Z ; Soldier_Transition_Vehicle
	add	esp, 4
$LN4@Create_Pla:

; 1390 : 			}
; 1391 : 			Force_Camera_Look_Player(Player,ShipSpot);

	lea	eax, DWORD PTR _ShipSpot$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _Player$[ebp]
	push	ecx
	call	DWORD PTR ?Force_Camera_Look_Player@@3P6AXPAVScriptableGameObj@@ABVVector3@@@ZA ; Force_Camera_Look_Player
	add	esp, 8
$LN6@Create_Pla:

; 1392 : 		}
; 1393 : 		DisableGun(Player);

	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisableGun@JMG_CMTB_Main_Game_Control@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Main_Game_Control::DisableGun
	jmp	$LN2@Create_Pla
$LN7@Create_Pla:

; 1394 : 	}
; 1395 : 	else if (!MiniGamePlayerControlSystem[PlayerNumber].PlayerShip && !Get_Vehicle(Player))

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8], 0
	jne	$LN2@Create_Pla
	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	jne	$LN2@Create_Pla

; 1396 : 	{
; 1397 : 		if (Player)

	cmp	DWORD PTR _Player$[ebp], 0
	je	SHORT $LN1@Create_Pla

; 1398 : 		{
; 1399 : 			Commands->Set_Position(Player,Commands->Get_Position(MiniGamePlayerControlSystem[PlayerNumber].SpectatorObject));

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+16]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _Player$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+60]
	call	ecx
	add	esp, 8

; 1400 : 			Force_Vehicle_Entry(Player,MiniGamePlayerControlSystem[PlayerNumber].SpectatorObject);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+16]
	push	ecx
	mov	edx, DWORD PTR _Player$[ebp]
	push	edx
	call	?Force_Vehicle_Entry@@YAXPAVScriptableGameObj@@0@Z ; Force_Vehicle_Entry
	add	esp, 8

; 1401 : 			Force_Camera_Look_Player(Player,MiniGamePlayerControlSystem[PlayerNumber].DeathLocation);

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	imul	eax, 596				; 00000254H
	add	eax, OFFSET ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A+64
	push	eax
	mov	ecx, DWORD PTR _Player$[ebp]
	push	ecx
	call	DWORD PTR ?Force_Camera_Look_Player@@3P6AXPAVScriptableGameObj@@ABVVector3@@@ZA ; Force_Camera_Look_Player
	add	esp, 8
$LN1@Create_Pla:

; 1402 : 		}
; 1403 : 		DisableGun(Player);

	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisableGun@JMG_CMTB_Main_Game_Control@@AAEXPAVScriptableGameObj@@@Z ; JMG_CMTB_Main_Game_Control::DisableGun
$LN2@Create_Pla:
$LN28@Create_Pla:

; 1404 : 	}
; 1405 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN30@Create_Pla:
	DD	$LN16@Create_Pla
	DD	$LN14@Create_Pla
	DD	$LN12@Create_Pla
	DD	$LN10@Create_Pla
?Create_Player_Ship@JMG_CMTB_Main_Game_Control@@AAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_CMTB_Main_Game_Control::Create_Player_Ship
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Destroyed@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Main_Game_Control::Destroyed, COMDAT
; _this$ = ecx

; 1277 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1278 : 	JMG_CMTB_Main_Game_Control::CMTBLevel = 0;

	mov	DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA, 0 ; JMG_CMTB_Main_Game_Control::CMTBLevel

; 1279 : 	RenCometBustersScoreControl.Cleanup();

	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Cleanup@RenCometBustersScoreSystem@@QAEXXZ ; RenCometBustersScoreSystem::Cleanup

; 1280 : 	RenCometBustersList.ClearAllObjects();

	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?ClearAllObjects@RenCometBustersGameObjects@@QAEXXZ ; RenCometBustersGameObjects::ClearAllObjects

; 1281 : 	PlayerPerkSystemControl.ClearPerksList();

	mov	ecx, OFFSET ?PlayerPerkSystemControl@@3VPlayerPerksNodeControlSystem@@A ; PlayerPerkSystemControl
	call	?ClearPerksList@PlayerPerksNodeControlSystem@@QAEXXZ ; PlayerPerksNodeControlSystem::ClearPerksList

; 1282 : 	PerkTypeSystem.Clean_Up();

	mov	ecx, OFFSET ?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A ; PerkTypeSystem
	call	?Clean_Up@PerkSystemPerkTypeList@@QAEXXZ ; PerkSystemPerkTypeList::Clean_Up

; 1283 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Destroyed@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Main_Game_Control::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Custom@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
tv257 = -428						; size = 4
tv229 = -428						; size = 4
$T1 = -424						; size = 12
_params$2 = -348					; size = 32
_FakeSoldier$3 = -316					; size = 4
_SoldierPosition$4 = -312				; size = 12
_moonHolder$5 = -300					; size = 4
_Player$6 = -296					; size = 4
_y$7 = -292						; size = 4
_x$8 = -288						; size = 4
_Player$9 = -284					; size = 4
_x$10 = -280						; size = 4
_playermsg$11 = -276					; size = 256
_x$12 = -20						; size = 4
_TotalPlayerCount$13 = -16				; size = 4
_ReadyPlayerCount$14 = -12				; size = 4
_StartGame$15 = -5					; size = 1
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_message$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; JMG_CMTB_Main_Game_Control::Custom, COMDAT
; _this$ = ecx

; 718  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 428				; 000001acH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 719  : 	if (message == 57447 && NextLevelDelay == -1)

	cmp	DWORD PTR _message$[ebp], 57447		; 0000e067H
	jne	$LN33@Custom
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], -1
	jne	$LN33@Custom

; 720  : 	{
; 721  : 		bool StartGame = true;

	mov	BYTE PTR _StartGame$15[ebp], 1

; 722  : 		int ReadyPlayerCount = 0;

	mov	DWORD PTR _ReadyPlayerCount$14[ebp], 0

; 723  : 		int TotalPlayerCount = 0;

	mov	DWORD PTR _TotalPlayerCount$13[ebp], 0

; 724  : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$12[ebp], 0
	jmp	SHORT $LN32@Custom
$LN31@Custom:
	mov	eax, DWORD PTR _x$12[ebp]
	add	eax, 1
	mov	DWORD PTR _x$12[ebp], eax
$LN32@Custom:
	cmp	DWORD PTR _x$12[ebp], 8
	jge	$LN30@Custom

; 725  : 		{
; 726  : 			if (!Get_GameObj(MiniGamePlayerControlSystem[x].PlayerID) || !Commands->Find_Object(MiniGamePlayerControlSystem[x].GamePlayerID))

	mov	eax, DWORD PTR _x$12[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	test	eax, eax
	je	SHORT $LN28@Custom
	mov	eax, DWORD PTR _x$12[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN29@Custom
$LN28@Custom:

; 727  : 				MiniGamePlayerControlSystem[x].PlayerID = 0;

	mov	eax, DWORD PTR _x$12[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348], 0
$LN29@Custom:

; 728  : 			if (MiniGamePlayerControlSystem[x].PlayerID)

	mov	eax, DWORD PTR _x$12[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348], 0
	je	SHORT $LN27@Custom

; 729  : 				TotalPlayerCount++;

	mov	eax, DWORD PTR _TotalPlayerCount$13[ebp]
	add	eax, 1
	mov	DWORD PTR _TotalPlayerCount$13[ebp], eax
$LN27@Custom:

; 730  : 			if (!MiniGamePlayerControlSystem[x].isReady && MiniGamePlayerControlSystem[x].PlayerID)

	mov	eax, DWORD PTR _x$12[ebp]
	imul	eax, 596				; 00000254H
	movzx	ecx, BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax]
	test	ecx, ecx
	jne	SHORT $LN26@Custom
	mov	eax, DWORD PTR _x$12[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348], 0
	je	SHORT $LN26@Custom

; 731  : 				StartGame = false;

	mov	BYTE PTR _StartGame$15[ebp], 0
	jmp	SHORT $LN24@Custom
$LN26@Custom:

; 732  : 			else if (MiniGamePlayerControlSystem[x].PlayerID)

	mov	eax, DWORD PTR _x$12[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348], 0
	je	SHORT $LN24@Custom

; 733  : 				ReadyPlayerCount++;

	mov	eax, DWORD PTR _ReadyPlayerCount$14[ebp]
	add	eax, 1
	mov	DWORD PTR _ReadyPlayerCount$14[ebp], eax
$LN24@Custom:

; 734  : 		}

	jmp	$LN31@Custom
$LN30@Custom:

; 735  : 		if (!StartGame)

	movzx	eax, BYTE PTR _StartGame$15[ebp]
	test	eax, eax
	jne	$LN23@Custom

; 736  : 		{
; 737  : 			char playermsg[256];
; 738  : 			sprintf(playermsg,"%s is ready to start the game; however, %d others are not!",Get_Player_Name(sender),TotalPlayerCount-ReadyPlayerCount);

	mov	eax, DWORD PTR _TotalPlayerCount$13[ebp]
	sub	eax, DWORD PTR _ReadyPlayerCount$14[ebp]
	push	eax
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	call	?Get_Player_Name@@YAPBDPAVScriptableGameObj@@@Z ; Get_Player_Name
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0DL@CAEFBAEF@?$CFs?5is?5ready?5to?5start?5the?5game?$DL?5h@
	lea	edx, DWORD PTR _playermsg$11[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 739  : 			for (int x = 1;x < 128;x++)

	mov	DWORD PTR _x$10[ebp], 1
	jmp	SHORT $LN22@Custom
$LN21@Custom:
	mov	eax, DWORD PTR _x$10[ebp]
	add	eax, 1
	mov	DWORD PTR _x$10[ebp], eax
$LN22@Custom:
	cmp	DWORD PTR _x$10[ebp], 128		; 00000080H
	jge	SHORT $LN20@Custom

; 740  : 			{
; 741  : 				GameObject *Player = Get_GameObj(x);

	mov	eax, DWORD PTR _x$10[ebp]
	push	eax
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	mov	DWORD PTR _Player$9[ebp], eax

; 742  : 				if (!Player)

	cmp	DWORD PTR _Player$9[ebp], 0
	jne	SHORT $LN19@Custom

; 743  : 					continue;	

	jmp	SHORT $LN21@Custom
$LN19@Custom:

; 744  : 				JmgUtility::DisplayChatMessage(Player,200,125,125,playermsg);

	lea	eax, DWORD PTR _playermsg$11[ebp]
	push	eax
	push	125					; 0000007dH
	push	125					; 0000007dH
	push	200					; 000000c8H
	mov	ecx, DWORD PTR _Player$9[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 745  : 			}

	jmp	SHORT $LN21@Custom
$LN20@Custom:

; 746  : 			return;

	jmp	$LN34@Custom
$LN23@Custom:

; 747  : 		}
; 748  : 		JMG_CMTB_Main_Game_Control::GameInProgress = true;

	mov	BYTE PTR ?GameInProgress@JMG_CMTB_Main_Game_Control@@2_NA, 1 ; JMG_CMTB_Main_Game_Control::GameInProgress

; 749  : 		MaxPlayerCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0

; 750  : 		PlayerSOSBeaconDealy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 0

; 751  : 		if (JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID)

	cmp	DWORD PTR ?PlayerSOSBeaconID@JMG_CMTB_Main_Game_Control@@2IA, 0 ; JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID
	je	SHORT $LN18@Custom

; 752  : 		{
; 753  : 			Commands->Destroy_Object(Commands->Find_Object(JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID));

	mov	eax, DWORD PTR ?PlayerSOSBeaconID@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+92]
	call	ecx
	add	esp, 4

; 754  : 			JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID = 0;

	mov	DWORD PTR ?PlayerSOSBeaconID@JMG_CMTB_Main_Game_Control@@2IA, 0 ; JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID
$LN18@Custom:

; 755  : 		}
; 756  : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$8[ebp], 0
	jmp	SHORT $LN17@Custom
$LN16@Custom:
	mov	eax, DWORD PTR _x$8[ebp]
	add	eax, 1
	mov	DWORD PTR _x$8[ebp], eax
$LN17@Custom:
	cmp	DWORD PTR _x$8[ebp], 8
	jge	$LN15@Custom

; 757  : 		{
; 758  : 			PlayerRequestingALife[x] = false;

	mov	eax, DWORD PTR _x$8[ebp]
	mov	BYTE PTR ?PlayerRequestingALife@@3PA_NA[eax], 0

; 759  : 			MiniGamePlayerControlSystem[x].NotInGameTime = 0;

	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	xor	ecx, ecx
	mov	WORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+364], cx

; 760  : 			MiniGamePlayerControlSystem[x].SuperBombs = 0;

	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+356], 0

; 761  : 			MiniGamePlayerControlSystem[x].HasSOSBeacon = false;

	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+366], 0

; 762  : 			MiniGamePlayerControlSystem[x].DronePowerup = false;

	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+376], 0

; 763  : 			MiniGamePlayerControlSystem[x].DroneSwarmPowerup = false;

	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+377], 0

; 764  : 			MiniGamePlayerControlSystem[x].CargoWarnedCount = 0;

	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+384], 0

; 765  : 			MiniGamePlayerControlSystem[x].CargoTotalWarnedCount = 0;

	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+388], 0

; 766  : 			MiniGamePlayerControlSystem[x].CargoWarnDecreaseDelay = 0;

	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+392], 0

; 767  : 			MiniGamePlayerControlSystem[x].DoublePointsTime = 0;

	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+396], 0

; 768  : 			MiniGamePlayerControlSystem[x].isReady = false;

	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax], 0

; 769  : 			MiniGamePlayerControlSystem[x].HyperspaceDriveCharge = 0;

	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+432], 0

; 770  : 			for (int y = 0;y < 7;y++)

	mov	DWORD PTR _y$7[ebp], 0
	jmp	SHORT $LN14@Custom
$LN13@Custom:
	mov	eax, DWORD PTR _y$7[ebp]
	add	eax, 1
	mov	DWORD PTR _y$7[ebp], eax
$LN14@Custom:
	cmp	DWORD PTR _y$7[ebp], 7
	jge	SHORT $LN12@Custom

; 771  : 				MiniGamePlayerControlSystem[x].CargoShipIDs[y] = 0;

	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR _y$7[ebp]
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+ecx*4+400], 0
	jmp	SHORT $LN13@Custom
$LN12@Custom:

; 772  : 			if (!MiniGamePlayerControlSystem[x].GamePlayerID)

	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20], 0
	jne	SHORT $LN11@Custom

; 773  : 				continue;

	jmp	$LN16@Custom
$LN11@Custom:

; 774  : 			GameObject *Player = Commands->Find_Object(MiniGamePlayerControlSystem[x].GamePlayerID);

	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Player$6[ebp], eax

; 775  : 			if (!Player)

	cmp	DWORD PTR _Player$6[ebp], 0
	jne	SHORT $LN10@Custom

; 776  : 				continue;

	jmp	$LN16@Custom
$LN10@Custom:

; 777  : 			Set_Money(Get_Player_ID(Player),0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Player$6[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	call	?Set_Money@@YAXHM@Z			; Set_Money
	add	esp, 8

; 778  : 			RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->RoundsPlayed++;

	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 260				; 00000104H
	mov	DWORD PTR tv229[ebp], eax
	mov	edx, DWORD PTR tv229[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv229[ebp]
	mov	DWORD PTR [ecx], eax

; 779  : 			MaxPlayerCount++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+48], ecx

; 780  : 		}

	jmp	$LN16@Custom
$LN15@Custom:

; 781  : 		GameObject *moonHolder = Commands->Find_Object(MoonHolderID);

	mov	eax, DWORD PTR ?MoonHolderID@JMG_CMTB_Main_Game_Control@@2HA ; JMG_CMTB_Main_Game_Control::MoonHolderID
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	mov	DWORD PTR _moonHolder$5[ebp], eax

; 782  : 		if (moonHolder)

	cmp	DWORD PTR _moonHolder$5[ebp], 0
	je	SHORT $LN9@Custom

; 783  : 			Commands->Destroy_Object(moonHolder);

	mov	eax, DWORD PTR _moonHolder$5[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN9@Custom:

; 784  : 		RenCometBustersList.ClearAllObjects();

	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?ClearAllObjects@RenCometBustersGameObjects@@QAEXXZ ; RenCometBustersGameObjects::ClearAllObjects

; 785  : 		JMG_CMTB_Main_Game_Control::CMTBLevel = 0;

	mov	DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA, 0 ; JMG_CMTB_Main_Game_Control::CMTBLevel

; 786  : 		NextLevelDelay = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 787  : 		UFOSpawnTime = Commands->Get_Random_Int(600,1800);

	push	1800					; 00000708H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], eax
$LN33@Custom:

; 788  : 	}
; 789  : 	if (message == 57448)

	cmp	DWORD PTR _message$[ebp], 57448		; 0000e068H
	jne	$LN7@Custom

; 790  : 	{
; 791  : 		if (!Commands->Find_Object(MiniGamePlayerControlSystem[param].GamePlayerID))

	mov	eax, DWORD PTR _param$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	test	eax, eax
	jne	$LN7@Custom

; 792  : 		{
; 793  : 			switch (CurrentMusic)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR tv257[ebp], ecx
	cmp	DWORD PTR tv257[ebp], 1
	je	SHORT $LN4@Custom
	cmp	DWORD PTR tv257[ebp], 2
	je	SHORT $LN3@Custom
	cmp	DWORD PTR tv257[ebp], 3
	je	SHORT $LN2@Custom
	jmp	SHORT $LN5@Custom
$LN4@Custom:

; 794  : 			{
; 795  : 			case MusicGameOver:Set_Background_Music_Player(sender,"Thunder.mp3");break;

	push	OFFSET ??_C@_0M@JGDOJGG@Thunder?4mp3?$AA@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Set_Background_Music_Player@@3P6AXPAVScriptableGameObj@@PBD@ZA ; Set_Background_Music_Player
	add	esp, 8
	jmp	SHORT $LN5@Custom
$LN3@Custom:

; 796  : 			case MusicNormal:Set_Background_Music_Player(sender,"Android.mp3");break;

	push	OFFSET ??_C@_0M@LILAHFNO@Android?4mp3?$AA@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Set_Background_Music_Player@@3P6AXPAVScriptableGameObj@@PBD@ZA ; Set_Background_Music_Player
	add	esp, 8
	jmp	SHORT $LN5@Custom
$LN2@Custom:

; 797  : 			case MusicBoss:Set_Background_Music_Player(sender,"Escape.mp3");break;

	push	OFFSET ??_C@_0L@PEMACFHI@Escape?4mp3?$AA@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	DWORD PTR ?Set_Background_Music_Player@@3P6AXPAVScriptableGameObj@@PBD@ZA ; Set_Background_Music_Player
	add	esp, 8
$LN5@Custom:

; 798  : 			}
; 799  : 			MiniGamePlayerControlSystem[param].GamePlayerID = Commands->Get_ID(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _param$[ebp]
	imul	ecx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+20], eax

; 800  : 			MiniGamePlayerControlSystem[param].PlayerID = Get_Player_ID(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	mov	ecx, DWORD PTR _param$[ebp]
	imul	ecx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+348], eax

; 801  : 			MiniGamePlayerControlSystem[param].isReady = false;

	mov	eax, DWORD PTR _param$[ebp]
	imul	eax, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax], 0

; 802  : 			sprintf(MiniGamePlayerControlSystem[param].OriginalSkin,"%s",Get_Skin(sender));

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?Get_Skin@@YAPBDPAVScriptableGameObj@@@Z ; Get_Skin
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	mov	ecx, DWORD PTR _param$[ebp]
	imul	ecx, 596				; 00000254H
	add	ecx, OFFSET ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A+92
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 803  : 			sprintf(MiniGamePlayerControlSystem[param].OriginalArmor,"%s",Get_Shield_Type(sender));

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?Get_Shield_Type@@YAPBDPAVScriptableGameObj@@@Z ; Get_Shield_Type
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	mov	ecx, DWORD PTR _param$[ebp]
	imul	ecx, 596				; 00000254H
	add	ecx, OFFSET ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A+220
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 804  : 			Set_Skin(sender,"Blamo");

	push	OFFSET ??_C@_05HBJPNAAK@Blamo?$AA@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?Set_Skin@@YAXPAVScriptableGameObj@@PBD@Z ; Set_Skin
	add	esp, 8

; 805  : 			Commands->Set_Shield_Type(sender,"Blamo");

	push	OFFSET ??_C@_05HBJPNAAK@Blamo?$AA@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+244]
	call	edx
	add	esp, 8

; 806  : 			Vector3 SoldierPosition = Commands->Get_Position(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _SoldierPosition$4[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 807  : 			GameObject *FakeSoldier = Commands->Find_Object(MiniGamePlayerControlSystem[param].FakeSoldierID);

	mov	eax, DWORD PTR _param$[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+88]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _FakeSoldier$3[ebp], eax

; 808  : 			if (FakeSoldier)

	cmp	DWORD PTR _FakeSoldier$3[ebp], 0
	je	SHORT $LN1@Custom

; 809  : 				Commands->Destroy_Object(FakeSoldier);

	mov	eax, DWORD PTR _FakeSoldier$3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN1@Custom:

; 810  : 			FakeSoldier = Commands->Create_Object("CnC_Nod_MinigunnerN",SoldierPosition);

	lea	eax, DWORD PTR _SoldierPosition$4[ebp]
	push	eax
	push	OFFSET ??_C@_0BE@BFJLDGDA@CnC_Nod_MinigunnerN?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _FakeSoldier$3[ebp], eax

; 811  : 			Commands->Innate_Disable(FakeSoldier);

	mov	eax, DWORD PTR _FakeSoldier$3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+436]
	call	edx
	add	esp, 4

; 812  : 			Commands->Set_Model(FakeSoldier,Get_Model(sender));

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	call	?Get_Model@@YAPBDPAVScriptableGameObj@@@Z ; Get_Model
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _FakeSoldier$3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+160]
	call	eax
	add	esp, 8

; 813  : 			Commands->Set_Model(sender,"invisibleChar");

	push	OFFSET ??_C@_0O@MGLGPNNK@invisibleChar?$AA@
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 814  : 			Commands->Set_Facing(FakeSoldier,Commands->Get_Facing(sender));

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+72]
	call	edx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _FakeSoldier$3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+76]
	call	edx
	add	esp, 8

; 815  : 			Commands->Set_Health(FakeSoldier,Commands->Get_Health(sender));

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _FakeSoldier$3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+228]
	call	edx
	add	esp, 8

; 816  : 			Commands->Set_Shield_Strength(FakeSoldier,Commands->Get_Shield_Strength(sender));

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+232]
	call	edx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _FakeSoldier$3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+240]
	call	edx
	add	esp, 8

; 817  : 			Commands->Set_Innate_Is_Stationary(FakeSoldier,true);

	push	1
	mov	eax, DWORD PTR _FakeSoldier$3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+476]
	call	edx
	add	esp, 8

; 818  : 			char params[32];
; 819  : 			sprintf(params,"%d,%d",Commands->Get_ID(sender),param);

	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+108]
	call	eax
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_05KABNCBHK@?$CFd?0?$CFd?$AA@
	lea	ecx, DWORD PTR _params$2[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 820  : 			Commands->Attach_Script(FakeSoldier,"JMG_CMTB_Fake_Player_Attach_Script",params);

	lea	eax, DWORD PTR _params$2[ebp]
	push	eax
	push	OFFSET ??_C@_0CD@BNLFCCLE@JMG_CMTB_Fake_Player_Attach_Scri@
	mov	ecx, DWORD PTR _FakeSoldier$3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+120]
	call	eax
	add	esp, 12					; 0000000cH

; 821  : 			MiniGamePlayerControlSystem[param].OriginalLocation = SoldierPosition;

	lea	eax, DWORD PTR _SoldierPosition$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _param$[ebp]
	imul	ecx, 596				; 00000254H
	add	ecx, OFFSET ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A+76
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 822  : 			MiniGamePlayerControlSystem[param].FakeSoldierID = Commands->Get_ID(FakeSoldier);

	mov	eax, DWORD PTR _FakeSoldier$3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _param$[ebp]
	imul	ecx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+88], eax
$LN7@Custom:
$LN34@Custom:

; 823  : 		}
; 824  : 	}
; 825  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; JMG_CMTB_Main_Game_Control::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Timer_Expired@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
tv1742 = -1492						; size = 4
tv2394 = -1488						; size = 4
tv1727 = -1484						; size = 4
tv2392 = -1480						; size = 4
tv2390 = -1476						; size = 4
tv2104 = -1472						; size = 8
tv2094 = -1472						; size = 8
tv2084 = -1472						; size = 8
tv2074 = -1472						; size = 8
tv2063 = -1472						; size = 8
tv2053 = -1472						; size = 8
tv2043 = -1472						; size = 8
tv2033 = -1472						; size = 8
tv2010 = -1472						; size = 8
tv1999 = -1472						; size = 8
tv1988 = -1472						; size = 8
tv412 = -1472						; size = 4
tv1706 = -1468						; size = 4
tv2102 = -1464						; size = 4
tv2092 = -1464						; size = 4
tv2082 = -1464						; size = 4
tv2072 = -1464						; size = 4
tv2061 = -1464						; size = 4
tv2051 = -1464						; size = 4
tv2041 = -1464						; size = 4
tv2031 = -1464						; size = 4
tv2008 = -1464						; size = 4
tv1997 = -1464						; size = 4
tv1986 = -1464						; size = 4
tv1161 = -1464						; size = 4
tv455 = -1464						; size = 4
tv386 = -1464						; size = 4
tv323 = -1464						; size = 4
tv2290 = -1460						; size = 4
tv1941 = -1460						; size = 4
tv1695 = -1460						; size = 4
tv1604 = -1460						; size = 4
tv1590 = -1460						; size = 4
tv1572 = -1460						; size = 4
tv1554 = -1460						; size = 4
tv1156 = -1460						; size = 4
tv450 = -1460						; size = 4
tv361 = -1460						; size = 4
tv318 = -1460						; size = 4
tv211 = -1460						; size = 4
tv171 = -1460						; size = 4
tv162 = -1460						; size = 4
tv153 = -1460						; size = 4
tv145 = -1460						; size = 4
tv128 = -1460						; size = 4
tv2099 = -1458						; size = 2
tv2089 = -1458						; size = 2
tv2079 = -1458						; size = 2
tv2069 = -1458						; size = 2
tv2058 = -1458						; size = 2
tv2048 = -1458						; size = 2
tv2038 = -1458						; size = 2
tv2028 = -1458						; size = 2
tv2005 = -1458						; size = 2
tv1994 = -1458						; size = 2
tv1983 = -1458						; size = 2
$T1 = -1456						; size = 12
$T2 = -1444						; size = 48
$T3 = -1396						; size = 12
$T4 = -1384						; size = 12
$T5 = -1372						; size = 12
$T6 = -1360						; size = 12
$T7 = -1348						; size = 12
$T8 = -1336						; size = 12
$T9 = -1324						; size = 48
$T10 = -1276						; size = 12
$T11 = -1264						; size = 12
$T12 = -1252						; size = 12
$T13 = -1240						; size = 12
$T14 = -1228						; size = 12
$T15 = -1208						; size = 12
$T16 = -1196						; size = 48
$T17 = -1148						; size = 12
$T18 = -1136						; size = 12
$T19 = -1124						; size = 12
$T20 = -1112						; size = 12
$T21 = -1100						; size = 12
$T22 = -1088						; size = 12
_Driver$23 = -1012					; size = 4
_Object$24 = -1008					; size = 4
_Pos$25 = -1004						; size = 12
_x$26 = -992						; size = 4
_Current$27 = -988					; size = 4
_Pos$28 = -984						; size = 12
_mphys$29 = -972					; size = 4
_UFO$30 = -968						; size = 4
_CometCount$31 = -964					; size = 4
_x$32 = -960						; size = 4
_x$33 = -956						; size = 4
_Player$34 = -952					; size = 4
_x$35 = -948						; size = 4
_ContinueGame$36 = -944					; size = 4
_x$37 = -940						; size = 4
_Player$38 = -936					; size = 4
_x$39 = -932						; size = 4
_ScoreMessage$40 = -928					; size = 245
_TempNode$41 = -680					; size = 4
_Player$42 = -676					; size = 4
_x$43 = -672						; size = 4
_x$44 = -668						; size = 4
_teamHasPerks$45 = -661					; size = 1
_Player$46 = -660					; size = 4
_x$47 = -656						; size = 4
_ContinueGame$48 = -652					; size = 4
_Player$49 = -648					; size = 4
_x$50 = -644						; size = 4
_LevelString$51 = -640					; size = 32
_x$52 = -608						; size = 4
_Player$53 = -604					; size = 4
_x$54 = -600						; size = 4
_Ship$55 = -596						; size = 4
_Moon$56 = -592						; size = 4
_moonHolder$57 = -588					; size = 4
_mphys$58 = -584					; size = 4
_params$59 = -580					; size = 512
_Comet$60 = -68						; size = 4
_x$61 = -64						; size = 4
_Count$62 = -60						; size = 4
_mphys$63 = -56						; size = 4
_Comet$64 = -52						; size = 4
_x$65 = -48						; size = 4
_Count$66 = -44						; size = 4
_x$67 = -40						; size = 4
_x$68 = -36						; size = 4
_currentTime$69 = -32					; size = 28
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@H@Z PROC ; JMG_CMTB_Main_Game_Control::Timer_Expired, COMDAT
; _this$ = ecx

; 827  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1492				; 000005d4H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 828  : 	if (number == 5435)

	cmp	DWORD PTR _number$[ebp], 5435		; 0000153bH
	jne	$LN171@Timer_Expi

; 829  : 	{
; 830  : 		if (!PlayerSOSBeaconDealy && JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	jne	SHORT $LN170@Timer_Expi
	cmp	DWORD PTR ?PlayerSOSBeaconID@JMG_CMTB_Main_Game_Control@@2IA, 0 ; JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID
	je	SHORT $LN170@Timer_Expi

; 831  : 			PlayerSOSBeaconDealy = 140;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 140		; 0000008cH
$LN170@Timer_Expi:

; 832  : 		if (PlayerSOSBeaconDealy)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN168@Timer_Expi

; 833  : 		{
; 834  : 			PlayerSOSBeaconDealy--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+152], ecx

; 835  : 			if (!PlayerSOSBeaconDealy)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	jne	SHORT $LN168@Timer_Expi

; 836  : 			{
; 837  : 				Commands->Destroy_Object(Commands->Find_Object(JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID));

	mov	eax, DWORD PTR ?PlayerSOSBeaconID@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+92]
	call	ecx
	add	esp, 4

; 838  : 				JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID = 0;

	mov	DWORD PTR ?PlayerSOSBeaconID@JMG_CMTB_Main_Game_Control@@2IA, 0 ; JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID
$LN168@Timer_Expi:

; 839  : 			}
; 840  : 		}
; 841  : 		JmgUtility::GenericDateTime currentTime = JmgUtility::GenericDateTime();

	lea	ecx, DWORD PTR _currentTime$69[ebp]
	call	??0GenericDateTime@JmgUtility@@QAE@XZ	; JmgUtility::GenericDateTime::GenericDateTime

; 842  : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$68[ebp], 0
	jmp	SHORT $LN167@Timer_Expi
$LN166@Timer_Expi:
	mov	eax, DWORD PTR _x$68[ebp]
	add	eax, 1
	mov	DWORD PTR _x$68[ebp], eax
$LN167@Timer_Expi:
	cmp	DWORD PTR _x$68[ebp], 8
	jge	$LN165@Timer_Expi

; 843  : 		{
; 844  : 			if (!MiniGamePlayerControlSystem[x].GamePlayerID)

	mov	eax, DWORD PTR _x$68[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20], 0
	jne	SHORT $LN164@Timer_Expi

; 845  : 				continue;

	jmp	SHORT $LN166@Timer_Expi
$LN164@Timer_Expi:

; 846  : 			RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->PlayTime++;

	mov	eax, DWORD PTR _x$68[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 256				; 00000100H
	mov	DWORD PTR tv128[ebp], eax
	mov	edx, DWORD PTR tv128[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv128[ebp]
	mov	DWORD PTR [ecx], eax

; 847  : 			RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->LastPlayTime = currentTime;

	mov	eax, DWORD PTR _x$68[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 500				; 000001f4H
	mov	ecx, 7
	lea	esi, DWORD PTR _currentTime$69[ebp]
	mov	edi, eax
	rep movsd

; 848  : 			if (MiniGamePlayerControlSystem[x].ShipObject)

	mov	eax, DWORD PTR _x$68[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+592], 0
	je	$LN161@Timer_Expi

; 849  : 				switch(MiniGamePlayerControlSystem[x].ShipObject->Type)

	mov	eax, DWORD PTR _x$68[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+592]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR tv145[ebp], edx
	cmp	DWORD PTR tv145[ebp], 5
	je	SHORT $LN159@Timer_Expi
	cmp	DWORD PTR tv145[ebp], 7
	je	SHORT $LN160@Timer_Expi
	cmp	DWORD PTR tv145[ebp], 16		; 00000010H
	je	SHORT $LN158@Timer_Expi
	jmp	$LN161@Timer_Expi
$LN160@Timer_Expi:

; 850  : 				{
; 851  : 				case PlayerCloak:
; 852  : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->TimeCloaked++;break;

	mov	eax, DWORD PTR _x$68[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 412				; 0000019cH
	mov	DWORD PTR tv153[ebp], eax
	mov	edx, DWORD PTR tv153[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv153[ebp]
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN161@Timer_Expi
$LN159@Timer_Expi:

; 853  : 				case PlayerShield:
; 854  : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->TimeShielded++;break;

	mov	eax, DWORD PTR _x$68[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 420				; 000001a4H
	mov	DWORD PTR tv162[ebp], eax
	mov	edx, DWORD PTR tv162[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv162[ebp]
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN161@Timer_Expi
$LN158@Timer_Expi:

; 855  : 				case PlayerShipDisrupter:
; 856  : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->TimeDisrupted++;break;

	mov	eax, DWORD PTR _x$68[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 452				; 000001c4H
	mov	DWORD PTR tv171[ebp], eax
	mov	edx, DWORD PTR tv171[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv171[ebp]
	mov	DWORD PTR [ecx], eax
$LN161@Timer_Expi:

; 857  : 				}
; 858  : 		}

	jmp	$LN166@Timer_Expi
$LN165@Timer_Expi:

; 859  : 		Commands->Start_Timer(obj,this,1.0,5435);

	push	5435					; 0000153bH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN171@Timer_Expi:

; 860  : 	}
; 861  : 	if (number == 5434)

	cmp	DWORD PTR _number$[ebp], 5434		; 0000153aH
	jne	$LN157@Timer_Expi

; 862  : 	{
; 863  : 		BabySit = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0

; 864  : 		if (NextLevelDelay != -1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], -1
	je	$LN156@Timer_Expi

; 865  : 		{
; 866  : 			if (NextLevelDelay)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	$LN155@Timer_Expi

; 867  : 			{
; 868  : 				NextLevelDelay--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], ecx

; 869  : 				if (!NextLevelDelay)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	$LN117@Timer_Expi

; 870  : 				{
; 871  : 					for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$67[ebp], 0
	jmp	SHORT $LN153@Timer_Expi
$LN152@Timer_Expi:
	mov	eax, DWORD PTR _x$67[ebp]
	add	eax, 1
	mov	DWORD PTR _x$67[ebp], eax
$LN153@Timer_Expi:
	cmp	DWORD PTR _x$67[ebp], 8
	jge	$LN151@Timer_Expi

; 872  : 					{
; 873  : 						if (MiniGamePlayerControlSystem[x].NotInGameTime || !MiniGamePlayerControlSystem[x].PlayerShip)

	mov	eax, DWORD PTR _x$67[ebp]
	imul	eax, 596				; 00000254H
	movzx	ecx, WORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+364]
	test	ecx, ecx
	jne	SHORT $LN149@Timer_Expi
	mov	eax, DWORD PTR _x$67[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8], 0
	jne	SHORT $LN150@Timer_Expi
$LN149@Timer_Expi:

; 874  : 							continue;

	jmp	SHORT $LN152@Timer_Expi
$LN150@Timer_Expi:

; 875  : 						switch (MiniGamePlayerControlSystem[x].SelectedPerk)

	mov	eax, DWORD PTR _x$67[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+436]
	mov	DWORD PTR tv211[ebp], ecx
	mov	edx, DWORD PTR tv211[ebp]
	sub	edx, 1
	mov	DWORD PTR tv211[ebp], edx
	cmp	DWORD PTR tv211[ebp], 4
	ja	$LN147@Timer_Expi
	mov	eax, DWORD PTR tv211[ebp]
	jmp	DWORD PTR $LN186@Timer_Expi[eax*4]
$LN146@Timer_Expi:

; 876  : 						{
; 877  : 						case 1:
; 878  : 							if (JMG_CMTB_Main_Game_Control::CMTBLevel == 1 || !(JMG_CMTB_Main_Game_Control::CMTBLevel%25))

	cmp	DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA, 1 ; JMG_CMTB_Main_Game_Control::CMTBLevel
	je	SHORT $LN144@Timer_Expi
	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	xor	edx, edx
	mov	ecx, 25					; 00000019H
	div	ecx
	test	edx, edx
	jne	SHORT $LN145@Timer_Expi
$LN144@Timer_Expi:

; 879  : 								Commands->Send_Custom_Event(obj,MiniGamePlayerControlSystem[x].PlayerShip,CMTBPowerUpCustomMessage+5,-1337,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	-1337					; fffffac7H
	push	90335495				; 05626907H
	mov	eax, DWORD PTR _x$67[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H
$LN145@Timer_Expi:

; 880  : 							break;

	jmp	$LN147@Timer_Expi
$LN143@Timer_Expi:

; 881  : 						case 2:
; 882  : 							if (JMG_CMTB_Main_Game_Control::CMTBLevel == 1)

	cmp	DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA, 1 ; JMG_CMTB_Main_Game_Control::CMTBLevel
	jne	SHORT $LN142@Timer_Expi

; 883  : 								Commands->Send_Custom_Event(obj,MiniGamePlayerControlSystem[x].PlayerShip,CMTBPowerUpCustomMessage+14,-1337,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	-1337					; fffffac7H
	push	90335504				; 05626910H
	mov	eax, DWORD PTR _x$67[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H
$LN142@Timer_Expi:

; 884  : 							break;

	jmp	$LN147@Timer_Expi
$LN141@Timer_Expi:

; 885  : 						case 3:
; 886  : 							if (Commands->Get_Random(0.0f,1.0f) < 0.165)

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv1554[ebp]
	movss	xmm0, DWORD PTR tv1554[ebp]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3fc51eb851eb851f
	comisd	xmm1, xmm0
	jbe	SHORT $LN140@Timer_Expi

; 887  : 								Commands->Send_Custom_Event(obj,MiniGamePlayerControlSystem[x].PlayerShip,CMTBPowerUpCustomMessage+13,-1337,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	-1337					; fffffac7H
	push	90335503				; 0562690fH
	mov	eax, DWORD PTR _x$67[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H
$LN140@Timer_Expi:

; 888  : 							break;

	jmp	$LN147@Timer_Expi
$LN139@Timer_Expi:

; 889  : 						case 4:
; 890  : 							if (Commands->Get_Random(0.0f,1.0f) < 0.05)

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv1572[ebp]
	movss	xmm0, DWORD PTR tv1572[ebp]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3fa999999999999a
	comisd	xmm1, xmm0
	jbe	SHORT $LN138@Timer_Expi

; 891  : 								Commands->Send_Custom_Event(obj,MiniGamePlayerControlSystem[x].PlayerShip,CMTBPowerUpCustomMessage+12,-1337,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	-1337					; fffffac7H
	push	90335502				; 0562690eH
	mov	eax, DWORD PTR _x$67[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H
$LN138@Timer_Expi:

; 892  : 							break;

	jmp	$LN147@Timer_Expi
$LN137@Timer_Expi:

; 893  : 						case 5:
; 894  : 							if (Commands->Get_Random(0.0f,1.0f) < 0.05)

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv1590[ebp]
	movss	xmm0, DWORD PTR tv1590[ebp]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3fa999999999999a
	comisd	xmm1, xmm0
	jbe	SHORT $LN136@Timer_Expi

; 895  : 								Commands->Send_Custom_Event(obj,MiniGamePlayerControlSystem[x].PlayerShip,CMTBPowerUpCustomMessage+16,-1337,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	-1337					; fffffac7H
	push	90335506				; 05626912H
	mov	eax, DWORD PTR _x$67[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H
$LN136@Timer_Expi:
$LN147@Timer_Expi:

; 896  : 							break;
; 897  : 						}
; 898  : 					}

	jmp	$LN152@Timer_Expi
$LN151@Timer_Expi:

; 899  : 					if (!(JMG_CMTB_Main_Game_Control::CMTBLevel % 6))

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	xor	edx, edx
	mov	ecx, 6
	div	ecx
	test	edx, edx
	jne	$LN135@Timer_Expi

; 900  : 					{
; 901  : 						unsigned int Count = (int)(JMG_CMTB_Main_Game_Control::CMTBLevel * 0.5);

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	mov	DWORD PTR tv1604[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv1604[ebp]
	mov	ecx, DWORD PTR tv1604[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	cvttsd2si edx, xmm0
	mov	DWORD PTR _Count$66[ebp], edx

; 902  : 						for (unsigned int x = 0;x < Count;x++)

	mov	DWORD PTR _x$65[ebp], 0
	jmp	SHORT $LN134@Timer_Expi
$LN133@Timer_Expi:
	mov	eax, DWORD PTR _x$65[ebp]
	add	eax, 1
	mov	DWORD PTR _x$65[ebp], eax
$LN134@Timer_Expi:
	mov	eax, DWORD PTR _x$65[ebp]
	cmp	eax, DWORD PTR _Count$66[ebp]
	jae	$LN132@Timer_Expi

; 903  : 						{//Drones
; 904  : 							GameObject *Comet = Commands->Create_Object("CMTB_Drone",Random_Map_Position());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?Random_Map_Position@@YA?AVVector3@@XZ	; Random_Map_Position
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0L@PFAJEBB@CMTB_Drone?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Comet$64[ebp], eax

; 905  : 							Commands->Attach_Script(Comet,"JMG_CMTB_Motion_Mine","1");

	push	OFFSET ??_C@_01HIHLOKLC@1?$AA@
	push	OFFSET ??_C@_0BF@DPFEEIBF@JMG_CMTB_Motion_Mine?$AA@
	mov	eax, DWORD PTR _Comet$64[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 906  : 							MoveablePhysClass *mphys = obj->As_PhysicalGameObj() ? Comet->As_PhysicalGameObj()->Peek_Physical_Object()->As_MoveablePhysClass() : NULL;

	mov	eax, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	test	eax, eax
	je	SHORT $LN174@Timer_Expi
	mov	ecx, DWORD PTR _Comet$64[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _Comet$64[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	mov	ecx, eax
	call	?Peek_Physical_Object@PhysicalGameObj@@QBEPAVPhysClass@@XZ ; PhysicalGameObj::Peek_Physical_Object
	mov	DWORD PTR tv318[ebp], eax
	mov	ecx, DWORD PTR tv318[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv318[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	mov	DWORD PTR tv323[ebp], eax
	jmp	SHORT $LN175@Timer_Expi
$LN174@Timer_Expi:
	mov	DWORD PTR tv323[ebp], 0
$LN175@Timer_Expi:
	mov	ecx, DWORD PTR tv323[ebp]
	mov	DWORD PTR _mphys$63[ebp], ecx
$LN131@Timer_Expi:

; 907  : 							while (mphys && !mphys->Can_Teleport(Matrix3D(Commands->Get_Position(Comet))))

	cmp	DWORD PTR _mphys$63[ebp], 0
	je	SHORT $LN130@Timer_Expi
	push	0
	push	0
	mov	eax, DWORD PTR _Comet$64[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0Matrix3D@@QAE@ABVVector3@@@Z		; Matrix3D::Matrix3D
	push	eax
	mov	ecx, DWORD PTR _mphys$63[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _mphys$63[ebp]
	mov	eax, DWORD PTR [edx+224]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN130@Timer_Expi

; 908  : 								Commands->Set_Position(Comet,Random_Map_Position());

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	?Random_Map_Position@@YA?AVVector3@@XZ	; Random_Map_Position
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _Comet$64[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8
	jmp	SHORT $LN131@Timer_Expi
$LN130@Timer_Expi:

; 909  : 						}

	jmp	$LN133@Timer_Expi
$LN132@Timer_Expi:

; 910  : 					}
; 911  : 					else

	jmp	$LN123@Timer_Expi
$LN135@Timer_Expi:

; 912  : 					{
; 913  : 						unsigned int Count = JMG_CMTB_Main_Game_Control::CMTBLevel;

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	mov	DWORD PTR _Count$62[ebp], eax

; 914  : 						if (!(JMG_CMTB_Main_Game_Control::CMTBLevel % 25))

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	xor	edx, edx
	mov	ecx, 25					; 00000019H
	div	ecx
	test	edx, edx
	jne	SHORT $LN128@Timer_Expi

; 915  : 							Count = JMG_CMTB_Main_Game_Control::CMTBLevel/4;

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	shr	eax, 2
	mov	DWORD PTR _Count$62[ebp], eax
	jmp	SHORT $LN126@Timer_Expi
$LN128@Timer_Expi:

; 916  : 						else if (!(JMG_CMTB_Main_Game_Control::CMTBLevel % 10))

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	xor	edx, edx
	mov	ecx, 10					; 0000000aH
	div	ecx
	test	edx, edx
	jne	SHORT $LN126@Timer_Expi

; 917  : 							Count = JMG_CMTB_Main_Game_Control::CMTBLevel/3;

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	DWORD PTR _Count$62[ebp], eax
$LN126@Timer_Expi:

; 918  : 						for (unsigned int x = 0;x < Count;x++)

	mov	DWORD PTR _x$61[ebp], 0
	jmp	SHORT $LN125@Timer_Expi
$LN124@Timer_Expi:
	mov	eax, DWORD PTR _x$61[ebp]
	add	eax, 1
	mov	DWORD PTR _x$61[ebp], eax
$LN125@Timer_Expi:
	mov	eax, DWORD PTR _x$61[ebp]
	cmp	eax, DWORD PTR _Count$62[ebp]
	jae	$LN123@Timer_Expi

; 919  : 						{//Comet2
; 920  : 							GameObject *Comet = Commands->Create_Object(((JMG_CMTB_Main_Game_Control::CMTBLevel % 10) ? "Comet2" : "CMTB_UFO"),Random_Map_Position());

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	xor	edx, edx
	mov	ecx, 10					; 0000000aH
	div	ecx
	test	edx, edx
	je	SHORT $LN176@Timer_Expi
	mov	DWORD PTR tv361[ebp], OFFSET ??_C@_06DNAANCNK@Comet2?$AA@
	jmp	SHORT $LN177@Timer_Expi
$LN176@Timer_Expi:
	mov	DWORD PTR tv361[ebp], OFFSET ??_C@_08JMBNGAFO@CMTB_UFO?$AA@
$LN177@Timer_Expi:
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	call	?Random_Map_Position@@YA?AVVector3@@XZ	; Random_Map_Position
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR tv361[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Comet$60[ebp], eax

; 921  : 							Commands->Set_Facing(Comet,Commands->Get_Random(-180.0f,180.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@43340000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c3340000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 4
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _Comet$60[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+76]
	call	ecx
	add	esp, 8

; 922  : 							if (JMG_CMTB_Main_Game_Control::CMTBLevel % 10)

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	xor	edx, edx
	mov	ecx, 10					; 0000000aH
	div	ecx
	test	edx, edx
	je	$LN122@Timer_Expi

; 923  : 							{
; 924  : 								char params[512];
; 925  : 								sprintf(params,"2,%.3f %.3f %.3f",Commands->Get_Position(Comet).X+(Commands->Get_Random(0.0,1.0f) < 0.5 ? 1 : -1)*Commands->Get_Random(15,25),(Commands->Get_Random(0.0,1.0f) < 0.5 ? 1 : -1)*Commands->Get_Position(Comet).Y+Commands->Get_Random(15,25),Commands->Get_Position(Comet).Z);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv1695[ebp]
	movss	xmm0, DWORD PTR tv1695[ebp]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN178@Timer_Expi
	mov	DWORD PTR tv386[ebp], 1
	jmp	SHORT $LN179@Timer_Expi
$LN178@Timer_Expi:
	mov	DWORD PTR tv386[ebp], -1
$LN179@Timer_Expi:
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+148]
	call	eax
	add	esp, 8
	fstp	DWORD PTR tv1706[ebp]
	movss	xmm0, DWORD PTR tv1706[ebp]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN180@Timer_Expi
	mov	DWORD PTR tv412[ebp], 1
	jmp	SHORT $LN181@Timer_Expi
$LN180@Timer_Expi:
	mov	DWORD PTR tv412[ebp], -1
$LN181@Timer_Expi:
	mov	ecx, DWORD PTR _Comet$60[ebp]
	push	ecx
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	cvtss2sd xmm0, DWORD PTR [eax+8]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtsi2ss xmm0, DWORD PTR tv386[ebp]
	mov	edx, DWORD PTR _Comet$60[ebp]
	push	edx
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+64]
	movss	DWORD PTR tv2390[ebp], xmm0
	call	edx
	add	esp, 8
	movss	xmm0, DWORD PTR tv2390[ebp]
	mulss	xmm0, DWORD PTR [eax+4]
	push	ecx
	movss	xmm1, DWORD PTR __real@41c80000
	movss	DWORD PTR [esp], xmm1
	push	ecx
	movss	xmm1, DWORD PTR __real@41700000
	movss	DWORD PTR [esp], xmm1
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	movss	DWORD PTR tv2392[ebp], xmm0
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv1727[ebp]
	movss	xmm0, DWORD PTR tv2392[ebp]
	addss	xmm0, DWORD PTR tv1727[ebp]
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _Comet$60[ebp]
	push	edx
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+64]
	call	edx
	add	esp, 8
	mov	esi, eax
	cvtsi2ss xmm0, DWORD PTR tv412[ebp]
	push	ecx
	movss	xmm1, DWORD PTR __real@41c80000
	movss	DWORD PTR [esp], xmm1
	push	ecx
	movss	xmm1, DWORD PTR __real@41700000
	movss	DWORD PTR [esp], xmm1
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	movss	DWORD PTR tv2394[ebp], xmm0
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv1742[ebp]
	movss	xmm0, DWORD PTR tv2394[ebp]
	mulss	xmm0, DWORD PTR tv1742[ebp]
	addss	xmm0, DWORD PTR [esi]
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0BB@HGLHKBGH@2?0?$CF?43f?5?$CF?43f?5?$CF?43f?$AA@
	lea	edx, DWORD PTR _params$59[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 32					; 00000020H

; 926  : 								Commands->Attach_Script(Comet,"JMG_CMTB_Comet_Script",params);

	lea	eax, DWORD PTR _params$59[ebp]
	push	eax
	push	OFFSET ??_C@_0BG@BOCOGEON@JMG_CMTB_Comet_Script?$AA@
	mov	ecx, DWORD PTR _Comet$60[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+120]
	call	eax
	add	esp, 12					; 0000000cH

; 927  : 							}
; 928  : 							else

	jmp	SHORT $LN121@Timer_Expi
$LN122@Timer_Expi:

; 929  : 								Commands->Attach_Script(Comet,"JMG_CMTB_UFO_Random_Fire_Control","1");

	push	OFFSET ??_C@_01HIHLOKLC@1?$AA@
	push	OFFSET ??_C@_0CB@NKFKHNHH@JMG_CMTB_UFO_Random_Fire_Control@
	mov	eax, DWORD PTR _Comet$60[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH
$LN121@Timer_Expi:

; 930  : 							MoveablePhysClass *mphys = Comet->As_PhysicalGameObj() ? Comet->As_PhysicalGameObj()->Peek_Physical_Object()->As_MoveablePhysClass() : NULL;

	mov	eax, DWORD PTR _Comet$60[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _Comet$60[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	test	eax, eax
	je	SHORT $LN182@Timer_Expi
	mov	ecx, DWORD PTR _Comet$60[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _Comet$60[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	mov	ecx, eax
	call	?Peek_Physical_Object@PhysicalGameObj@@QBEPAVPhysClass@@XZ ; PhysicalGameObj::Peek_Physical_Object
	mov	DWORD PTR tv450[ebp], eax
	mov	ecx, DWORD PTR tv450[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv450[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	mov	DWORD PTR tv455[ebp], eax
	jmp	SHORT $LN183@Timer_Expi
$LN182@Timer_Expi:
	mov	DWORD PTR tv455[ebp], 0
$LN183@Timer_Expi:
	mov	ecx, DWORD PTR tv455[ebp]
	mov	DWORD PTR _mphys$58[ebp], ecx
$LN120@Timer_Expi:

; 931  : 							while (mphys && !mphys->Can_Teleport(Matrix3D(Commands->Get_Position(Comet))))

	cmp	DWORD PTR _mphys$58[ebp], 0
	je	SHORT $LN119@Timer_Expi
	push	0
	push	0
	mov	eax, DWORD PTR _Comet$60[ebp]
	push	eax
	lea	ecx, DWORD PTR $T10[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR $T9[ebp]
	call	??0Matrix3D@@QAE@ABVVector3@@@Z		; Matrix3D::Matrix3D
	push	eax
	mov	ecx, DWORD PTR _mphys$58[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _mphys$58[ebp]
	mov	eax, DWORD PTR [edx+224]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN119@Timer_Expi

; 932  : 								Commands->Set_Position(Comet,Random_Map_Position());

	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	call	?Random_Map_Position@@YA?AVVector3@@XZ	; Random_Map_Position
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _Comet$60[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8
	jmp	SHORT $LN120@Timer_Expi
$LN119@Timer_Expi:

; 933  : 						}

	jmp	$LN124@Timer_Expi
$LN123@Timer_Expi:

; 934  : 					}
; 935  : 					if (!(JMG_CMTB_Main_Game_Control::CMTBLevel % 25))

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	xor	edx, edx
	mov	ecx, 25					; 00000019H
	div	ecx
	test	edx, edx
	jne	$LN118@Timer_Expi

; 936  : 					{
; 937  : 						GameObject *moonHolder = Commands->Create_Object("Daves Arrow",Vector3(0.0f,-50.0f,0.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c2480000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T12[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+100]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _moonHolder$57[ebp], eax

; 938  : 						Commands->Set_Model(moonHolder,"TheMoon!ANIM");

	push	OFFSET ??_C@_0N@OEINIMLP@TheMoon?$CBANIM?$AA@
	mov	eax, DWORD PTR _moonHolder$57[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 939  : 						Commands->Set_Animation(moonHolder,"TheMoon!ANIM.TheMoon!ANIM",true,0,0.0f,-1,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	1
	push	OFFSET ??_C@_0BK@HFCLPCGF@TheMoon?$CBANIM?4TheMoon?$CBANIM?$AA@
	mov	eax, DWORD PTR _moonHolder$57[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 940  : 						MoonHolderID = Commands->Get_ID(moonHolder);

	mov	eax, DWORD PTR _moonHolder$57[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR ?MoonHolderID@JMG_CMTB_Main_Game_Control@@2HA, eax ; JMG_CMTB_Main_Game_Control::MoonHolderID

; 941  : 						GameObject *Moon = Commands->Create_Object("TheMoon!",Vector3(0.0f,-50.0f,0.0f));

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c2480000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T13[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	push	OFFSET ??_C@_08OJPPMONF@TheMoon?$CB?$AA@
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+100]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _Moon$56[ebp], eax

; 942  : 						Commands->Attach_To_Object_Bone(Moon,moonHolder,"moon");

	push	OFFSET ??_C@_04IDMPJGHP@moon?$AA@
	mov	eax, DWORD PTR _moonHolder$57[ebp]
	push	eax
	mov	ecx, DWORD PTR _Moon$56[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 943  : 						Set_Max_Health(Moon,200.0f*MaxPlayerCount);

	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+48]
	mulss	xmm0, DWORD PTR __real@43480000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Moon$56[ebp]
	push	ecx
	call	?Set_Max_Health@@YAXPAVScriptableGameObj@@M@Z ; Set_Max_Health
	add	esp, 8

; 944  : 						Commands->Set_Health(Moon,200.0f*MaxPlayerCount);

	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+48]
	mulss	xmm0, DWORD PTR __real@43480000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Moon$56[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+228]
	call	eax
	add	esp, 8
$LN118@Timer_Expi:

; 945  : 					}
; 946  : 					if (!(JMG_CMTB_Main_Game_Control::CMTBLevel % 15))

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	xor	edx, edx
	mov	ecx, 15					; 0000000fH
	div	ecx
	test	edx, edx
	jne	$LN117@Timer_Expi

; 947  : 					{
; 948  : 						GameObject *Ship = Commands->Create_Object("CMTB_Cargo_Ship",Vector3(0.0f,0.0f,1.481f));

	push	ecx
	movss	xmm0, DWORD PTR __real@3fbd9168
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T14[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	push	OFFSET ??_C@_0BA@JDFEGNBJ@CMTB_Cargo_Ship?$AA@
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+100]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _Ship$55[ebp], eax

; 949  : 						Commands->Attach_Script(Ship,"JMG_CMTB_Cargo_Ship_Script","-1");

	push	OFFSET ??_C@_02PGHGPEOM@?91?$AA@
	push	OFFSET ??_C@_0BL@KIMJPMME@JMG_CMTB_Cargo_Ship_Script?$AA@
	mov	eax, DWORD PTR _Ship$55[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 950  : 						Set_Max_Health(Ship,100.0f*MaxPlayerCount);

	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+48]
	mulss	xmm0, DWORD PTR __real@42c80000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Ship$55[ebp]
	push	ecx
	call	?Set_Max_Health@@YAXPAVScriptableGameObj@@M@Z ; Set_Max_Health
	add	esp, 8

; 951  : 						Commands->Set_Health(Ship,100.0f*MaxPlayerCount);

	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+48]
	mulss	xmm0, DWORD PTR __real@42c80000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Ship$55[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+228]
	call	eax
	add	esp, 8
$LN117@Timer_Expi:

; 952  : 					}
; 953  : 				}
; 954  : 			}

	jmp	$LN115@Timer_Expi
$LN155@Timer_Expi:

; 955  : 			else if (RenCometBustersList.CheckIfLevelComplete())

	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?CheckIfLevelComplete@RenCometBustersGameObjects@@QAE_NXZ ; RenCometBustersGameObjects::CheckIfLevelComplete
	movzx	eax, al
	test	eax, eax
	je	$LN115@Timer_Expi

; 956  : 			{
; 957  : 				JMG_CMTB_Main_Game_Control::CMTBLevel++;

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	add	eax, 1
	mov	DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA, eax ; JMG_CMTB_Main_Game_Control::CMTBLevel

; 958  : 				if (JMG_CMTB_Main_Game_Control::CMTBLevel == 11)

	cmp	DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA, 11 ; JMG_CMTB_Main_Game_Control::CMTBLevel, 0000000bH
	jne	$LN111@Timer_Expi

; 959  : 				{
; 960  : 					for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$54[ebp], 0
	jmp	SHORT $LN113@Timer_Expi
$LN112@Timer_Expi:
	mov	eax, DWORD PTR _x$54[ebp]
	add	eax, 1
	mov	DWORD PTR _x$54[ebp], eax
$LN113@Timer_Expi:
	cmp	DWORD PTR _x$54[ebp], 8
	jge	SHORT $LN111@Timer_Expi

; 961  : 					{
; 962  : 						if (!MiniGamePlayerControlSystem[x].GamePlayerID)

	mov	eax, DWORD PTR _x$54[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20], 0
	jne	SHORT $LN110@Timer_Expi

; 963  : 							continue;

	jmp	SHORT $LN112@Timer_Expi
$LN110@Timer_Expi:

; 964  : 						GameObject *Player = Commands->Find_Object(MiniGamePlayerControlSystem[x].GamePlayerID);

	mov	eax, DWORD PTR _x$54[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Player$53[ebp], eax

; 965  : 						if (!Player)

	cmp	DWORD PTR _Player$53[ebp], 0
	jne	SHORT $LN109@Timer_Expi

; 966  : 							continue;

	jmp	SHORT $LN112@Timer_Expi
$LN109@Timer_Expi:

; 967  : 						PerkSystemIncreasePlayerPerkUnlockAmount(Player,63,1);

	push	1
	push	63					; 0000003fH
	mov	eax, DWORD PTR _Player$53[ebp]
	push	eax
	call	?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z ; PerkSystemIncreasePlayerPerkUnlockAmount
	add	esp, 12					; 0000000cH

; 968  : 					}

	jmp	SHORT $LN112@Timer_Expi
$LN111@Timer_Expi:

; 969  : 				}
; 970  : 				LastCometCount = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], -1

; 971  : 				if (JMG_CMTB_Main_Game_Control::CMTBLevel == 1)

	cmp	DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA, 1 ; JMG_CMTB_Main_Game_Control::CMTBLevel
	jne	$LN105@Timer_Expi

; 972  : 					for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$52[ebp], 0
	jmp	SHORT $LN107@Timer_Expi
$LN106@Timer_Expi:
	mov	eax, DWORD PTR _x$52[ebp]
	add	eax, 1
	mov	DWORD PTR _x$52[ebp], eax
$LN107@Timer_Expi:
	cmp	DWORD PTR _x$52[ebp], 8
	jge	$LN105@Timer_Expi

; 973  : 					{
; 974  : 						MiniGamePlayerControlSystem[x].NumberOfLives = 0;

	mov	eax, DWORD PTR _x$52[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4], 0

; 975  : 						MiniGamePlayerControlSystem[x].RespawnTime = 30;

	mov	eax, DWORD PTR _x$52[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+24], 30 ; 0000001eH

; 976  : 						if (!MiniGamePlayerControlSystem[x].GamePlayerID)

	mov	eax, DWORD PTR _x$52[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20], 0
	jne	SHORT $LN104@Timer_Expi

; 977  : 							continue;

	jmp	SHORT $LN106@Timer_Expi
$LN104@Timer_Expi:

; 978  : 						if (!Commands->Find_Object(MiniGamePlayerControlSystem[x].GamePlayerID))

	mov	eax, DWORD PTR _x$52[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN103@Timer_Expi

; 979  : 							continue;

	jmp	$LN106@Timer_Expi
$LN103@Timer_Expi:

; 980  : 						MiniGamePlayerControlSystem[x].NumberOfLives = 5;

	mov	eax, DWORD PTR _x$52[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4], 5

; 981  : 						MiniGamePlayerControlSystem[x].RespawnTime = 0;

	mov	eax, DWORD PTR _x$52[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+24], 0

; 982  : 					}

	jmp	$LN106@Timer_Expi
$LN105@Timer_Expi:

; 983  : 				char LevelString[32];
; 984  : 				sprintf(LevelString,"***********Level %d***********",JMG_CMTB_Main_Game_Control::CMTBLevel);

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	push	eax
	push	OFFSET ??_C@_0BP@OPFJBCLD@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CKLevel?5?$CFd?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$AA@
	lea	ecx, DWORD PTR _LevelString$51[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 985  : 				for (int x = 1;x < 128;x++)

	mov	DWORD PTR _x$50[ebp], 1
	jmp	SHORT $LN102@Timer_Expi
$LN101@Timer_Expi:
	mov	eax, DWORD PTR _x$50[ebp]
	add	eax, 1
	mov	DWORD PTR _x$50[ebp], eax
$LN102@Timer_Expi:
	cmp	DWORD PTR _x$50[ebp], 128		; 00000080H
	jge	$LN100@Timer_Expi

; 986  : 				{
; 987  : 					GameObject *Player = Get_GameObj(x);

	mov	eax, DWORD PTR _x$50[ebp]
	push	eax
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	mov	DWORD PTR _Player$49[ebp], eax

; 988  : 					if (!Player)

	cmp	DWORD PTR _Player$49[ebp], 0
	jne	SHORT $LN99@Timer_Expi

; 989  : 						continue;

	jmp	SHORT $LN101@Timer_Expi
$LN99@Timer_Expi:

; 990  : 					JmgUtility::DisplayChatMessage(Player,6,145,148,LevelString);

	lea	eax, DWORD PTR _LevelString$51[ebp]
	push	eax
	push	148					; 00000094H
	push	145					; 00000091H
	push	6
	mov	ecx, DWORD PTR _Player$49[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 991  : 					sprintf_s(LevelString,"Level %d",JMG_CMTB_Main_Game_Control::CMTBLevel);

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	push	eax
	push	OFFSET ??_C@_08KNDNNBLP@Level?5?$CFd?$AA@
	lea	ecx, DWORD PTR _LevelString$51[ebp]
	push	ecx
	call	??$sprintf_s@$0CA@@@YAHAAY0CA@DPBDZZ	; sprintf_s<32>
	add	esp, 12					; 0000000cH

; 992  : 					Set_HUD_Help_Text_Player_Text(Player,7233,LevelString,Vector3(0.19599999f,1.0f,0.19599999f));

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	push	ecx
	movss	xmm0, DWORD PTR __real@3e48b439
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3e48b439
	movss	DWORD PTR [esp], xmm0
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	lea	eax, DWORD PTR _LevelString$51[ebp]
	push	eax
	push	7233					; 00001c41H
	mov	ecx, DWORD PTR _Player$49[ebp]
	push	ecx
	call	DWORD PTR ?Set_HUD_Help_Text_Player_Text@@3P6AXPAVScriptableGameObj@@HPBDVVector3@@@ZA ; Set_HUD_Help_Text_Player_Text
	add	esp, 24					; 00000018H

; 993  : 					if ((JMG_CMTB_Main_Game_Control::CMTBLevel-1) % 10 && (JMG_CMTB_Main_Game_Control::CMTBLevel-1) % 25)

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	sub	eax, 1
	xor	edx, edx
	mov	ecx, 10					; 0000000aH
	div	ecx
	test	edx, edx
	je	SHORT $LN98@Timer_Expi
	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	sub	eax, 1
	xor	edx, edx
	mov	ecx, 25					; 00000019H
	div	ecx
	test	edx, edx
	je	SHORT $LN98@Timer_Expi

; 994  : 						Create_2D_Sound_Player(Player,"SFX.Bonus_Mission_Update");

	push	OFFSET ??_C@_0BJ@HMLJENEK@SFX?4Bonus_Mission_Update?$AA@
	mov	eax, DWORD PTR _Player$49[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 995  : 					else

	jmp	SHORT $LN97@Timer_Expi
$LN98@Timer_Expi:

; 996  : 						Create_2D_Sound_Player(Player,"SFX.Primary_Mission_Update");

	push	OFFSET ??_C@_0BL@DNDPJPGA@SFX?4Primary_Mission_Update?$AA@
	mov	eax, DWORD PTR _Player$49[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8
$LN97@Timer_Expi:

; 997  : 				}

	jmp	$LN101@Timer_Expi
$LN100@Timer_Expi:

; 998  : 				if (JMG_CMTB_Main_Game_Control::CMTBLevel % 10 && JMG_CMTB_Main_Game_Control::CMTBLevel % 25)

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	xor	edx, edx
	mov	ecx, 10					; 0000000aH
	div	ecx
	test	edx, edx
	je	SHORT $LN96@Timer_Expi
	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	xor	edx, edx
	mov	ecx, 25					; 00000019H
	div	ecx
	test	edx, edx
	je	SHORT $LN96@Timer_Expi

; 999  : 				{
; 1000 : 					if (CurrentMusic != MusicNormal)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 2
	je	SHORT $LN95@Timer_Expi

; 1001 : 					{
; 1002 : 						CurrentMusic = MusicNormal;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 2

; 1003 : 						FadeMusic("Android.mp3");

	push	OFFSET ??_C@_0M@LILAHFNO@Android?4mp3?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FadeMusic@JMG_CMTB_Main_Game_Control@@AAEXPBD@Z ; JMG_CMTB_Main_Game_Control::FadeMusic
$LN95@Timer_Expi:

; 1004 : 					}
; 1005 : 				}

	jmp	SHORT $LN93@Timer_Expi
$LN96@Timer_Expi:

; 1006 : 				else if (CurrentMusic != MusicBoss)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 3
	je	SHORT $LN93@Timer_Expi

; 1007 : 				{
; 1008 : 					CurrentMusic = MusicBoss;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 3

; 1009 : 					FadeMusic("Escape.mp3");

	push	OFFSET ??_C@_0L@PEMACFHI@Escape?4mp3?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FadeMusic@JMG_CMTB_Main_Game_Control@@AAEXPBD@Z ; JMG_CMTB_Main_Game_Control::FadeMusic
$LN93@Timer_Expi:

; 1010 : 				}
; 1011 : 				NextLevelDelay = 40;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 40			; 00000028H
$LN115@Timer_Expi:

; 1012 : 			}
; 1013 : 			int ContinueGame = 0;

	mov	DWORD PTR _ContinueGame$48[ebp], 0

; 1014 : 			for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$47[ebp], 0
	jmp	SHORT $LN92@Timer_Expi
$LN91@Timer_Expi:
	mov	eax, DWORD PTR _x$47[ebp]
	add	eax, 1
	mov	DWORD PTR _x$47[ebp], eax
$LN92@Timer_Expi:
	cmp	DWORD PTR _x$47[ebp], 8
	jge	$LN90@Timer_Expi

; 1015 : 			{
; 1016 : 				if (!MiniGamePlayerControlSystem[x].GamePlayerID)

	mov	eax, DWORD PTR _x$47[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20], 0
	jne	SHORT $LN89@Timer_Expi

; 1017 : 					continue;

	jmp	SHORT $LN91@Timer_Expi
$LN89@Timer_Expi:

; 1018 : 				GameObject *Player = Commands->Find_Object(MiniGamePlayerControlSystem[x].GamePlayerID);

	mov	eax, DWORD PTR _x$47[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Player$46[ebp], eax

; 1019 : 				if (!Player)

	cmp	DWORD PTR _Player$46[ebp], 0
	jne	SHORT $LN88@Timer_Expi

; 1020 : 					continue;

	jmp	SHORT $LN91@Timer_Expi
$LN88@Timer_Expi:

; 1021 : 				if (!MiniGamePlayerControlSystem[x].PlayerShip && !MiniGamePlayerControlSystem[x].NumberOfLives)

	mov	eax, DWORD PTR _x$47[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8], 0
	jne	$LN87@Timer_Expi
	mov	eax, DWORD PTR _x$47[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+4], 0
	jne	$LN87@Timer_Expi

; 1022 : 				{
; 1023 : 					if (MiniGamePlayerControlSystem[x].SpectatorObject && Commands->Get_Shield_Strength(MiniGamePlayerControlSystem[x].SpectatorObject) != 0.0f)

	mov	eax, DWORD PTR _x$47[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+16], 0
	je	SHORT $LN86@Timer_Expi
	mov	eax, DWORD PTR _x$47[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+16]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+232]
	call	eax
	add	esp, 4
	fstp	DWORD PTR tv1941[ebp]
	movss	xmm0, DWORD PTR tv1941[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN86@Timer_Expi

; 1024 : 						Commands->Set_Shield_Strength(MiniGamePlayerControlSystem[x].SpectatorObject,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _x$47[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+16]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+240]
	call	eax
	add	esp, 8
$LN86@Timer_Expi:

; 1025 : 					continue;

	jmp	$LN91@Timer_Expi
$LN87@Timer_Expi:

; 1026 : 				}
; 1027 : 				ContinueGame++;

	mov	eax, DWORD PTR _ContinueGame$48[ebp]
	add	eax, 1
	mov	DWORD PTR _ContinueGame$48[ebp], eax

; 1028 : 			}

	jmp	$LN91@Timer_Expi
$LN90@Timer_Expi:

; 1029 : 			LastPlayerCount = ContinueGame;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ContinueGame$48[ebp]
	mov	DWORD PTR [eax+44], ecx

; 1030 : 			if (!ContinueGame)

	cmp	DWORD PTR _ContinueGame$48[ebp], 0
	jne	$LN85@Timer_Expi

; 1031 : 			{
; 1032 : 				JMG_CMTB_Main_Game_Control::GameInProgress = false;

	mov	BYTE PTR ?GameInProgress@JMG_CMTB_Main_Game_Control@@2_NA, 0 ; JMG_CMTB_Main_Game_Control::GameInProgress

; 1033 : 				bool teamHasPerks = false;

	mov	BYTE PTR _teamHasPerks$45[ebp], 0

; 1034 : 				for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$44[ebp], 0
	jmp	SHORT $LN84@Timer_Expi
$LN83@Timer_Expi:
	mov	eax, DWORD PTR _x$44[ebp]
	add	eax, 1
	mov	DWORD PTR _x$44[ebp], eax
$LN84@Timer_Expi:
	cmp	DWORD PTR _x$44[ebp], 8
	jge	SHORT $LN82@Timer_Expi

; 1035 : 					if (MiniGamePlayerControlSystem[x].SelectedPerk)

	mov	eax, DWORD PTR _x$44[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+436], 0
	je	SHORT $LN81@Timer_Expi

; 1036 : 					{
; 1037 : 						teamHasPerks = true;

	mov	BYTE PTR _teamHasPerks$45[ebp], 1

; 1038 : 						break;

	jmp	SHORT $LN82@Timer_Expi
$LN81@Timer_Expi:

; 1039 : 					}

	jmp	SHORT $LN83@Timer_Expi
$LN82@Timer_Expi:

; 1040 : 				for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$43[ebp], 0
	jmp	SHORT $LN80@Timer_Expi
$LN79@Timer_Expi:
	mov	eax, DWORD PTR _x$43[ebp]
	add	eax, 1
	mov	DWORD PTR _x$43[ebp], eax
$LN80@Timer_Expi:
	cmp	DWORD PTR _x$43[ebp], 8
	jge	$LN78@Timer_Expi

; 1041 : 				{
; 1042 : 					MiniGamePlayerControlSystem[x].RespawnTime = 30;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+24], 30 ; 0000001eH

; 1043 : 					if (!MiniGamePlayerControlSystem[x].GamePlayerID)

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20], 0
	jne	SHORT $LN77@Timer_Expi

; 1044 : 					{
; 1045 : 						MiniGamePlayerControlSystem[x].Score = 0;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60], xmm0

; 1046 : 						MiniGamePlayerControlSystem[x].DroneScore = 0;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+380], xmm0

; 1047 : 						MiniGamePlayerControlSystem[x].CargoScore = 0;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+428], xmm0

; 1048 : 						MiniGamePlayerControlSystem[x].SecondSpace = false;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+440], 0

; 1049 : 						continue;

	jmp	$LN79@Timer_Expi
$LN77@Timer_Expi:

; 1050 : 					}
; 1051 : 					GameObject *Player = Commands->Find_Object(MiniGamePlayerControlSystem[x].GamePlayerID);

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Player$42[ebp], eax

; 1052 : 					if (!Player)

	cmp	DWORD PTR _Player$42[ebp], 0
	jne	SHORT $LN76@Timer_Expi

; 1053 : 					{
; 1054 : 						MiniGamePlayerControlSystem[x].Score = 0;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60], xmm0

; 1055 : 						MiniGamePlayerControlSystem[x].DroneScore = 0;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+380], xmm0

; 1056 : 						MiniGamePlayerControlSystem[x].CargoScore = 0;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+428], xmm0

; 1057 : 						MiniGamePlayerControlSystem[x].SecondSpace = false;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+440], 0

; 1058 : 						continue;

	jmp	$LN79@Timer_Expi
$LN76@Timer_Expi:

; 1059 : 					}
; 1060 : 					RenCometBustersScoreSystem::CMTBHighScoresNode *TempNode = RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID);

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	mov	DWORD PTR _TempNode$41[ebp], eax

; 1061 : 					TempNode->TotalScore += (unsigned long)MiniGamePlayerControlSystem[x].Score;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	fld	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60]
	fnstcw	WORD PTR tv1983[ebp]
	movzx	eax, WORD PTR tv1983[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv1986[ebp], eax
	fldcw	WORD PTR tv1986[ebp]
	fistp	QWORD PTR tv1988[ebp]
	fldcw	WORD PTR tv1983[ebp]
	mov	ecx, DWORD PTR tv1988[ebp]
	mov	edx, DWORD PTR _TempNode$41[ebp]
	add	ecx, DWORD PTR [edx+304]
	mov	eax, DWORD PTR _TempNode$41[ebp]
	mov	DWORD PTR [eax+304], ecx

; 1062 : 					TempNode->DronePoints += (unsigned long)MiniGamePlayerControlSystem[x].DroneScore;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	fld	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+380]
	fnstcw	WORD PTR tv1994[ebp]
	movzx	eax, WORD PTR tv1994[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv1997[ebp], eax
	fldcw	WORD PTR tv1997[ebp]
	fistp	QWORD PTR tv1999[ebp]
	fldcw	WORD PTR tv1994[ebp]
	mov	ecx, DWORD PTR tv1999[ebp]
	mov	edx, DWORD PTR _TempNode$41[ebp]
	add	ecx, DWORD PTR [edx+392]
	mov	eax, DWORD PTR _TempNode$41[ebp]
	mov	DWORD PTR [eax+392], ecx

; 1063 : 					TempNode->CargoShipScore += (unsigned long)MiniGamePlayerControlSystem[x].CargoScore;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	fld	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+428]
	fnstcw	WORD PTR tv2005[ebp]
	movzx	eax, WORD PTR tv2005[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv2008[ebp], eax
	fldcw	WORD PTR tv2008[ebp]
	fistp	QWORD PTR tv2010[ebp]
	fldcw	WORD PTR tv2005[ebp]
	mov	ecx, DWORD PTR tv2010[ebp]
	mov	edx, DWORD PTR _TempNode$41[ebp]
	add	ecx, DWORD PTR [edx+432]
	mov	eax, DWORD PTR _TempNode$41[ebp]
	mov	DWORD PTR [eax+432], ecx

; 1064 : 					if (MaxPlayerCount > 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 1
	jle	SHORT $LN75@Timer_Expi

; 1065 : 					{
; 1066 : 						if (teamHasPerks)

	movzx	eax, BYTE PTR _teamHasPerks$45[ebp]
	test	eax, eax
	je	SHORT $LN74@Timer_Expi

; 1067 : 							TempNode->LevelsPlayedWithPerksAsATeam++;

	mov	eax, DWORD PTR _TempNode$41[ebp]
	mov	ecx, DWORD PTR [eax+492]
	add	ecx, 1
	mov	edx, DWORD PTR _TempNode$41[ebp]
	mov	DWORD PTR [edx+492], ecx

; 1068 : 						else

	jmp	SHORT $LN73@Timer_Expi
$LN74@Timer_Expi:

; 1069 : 							TempNode->LevelsPlayedWithOutPerksAsATeam++;

	mov	eax, DWORD PTR _TempNode$41[ebp]
	mov	ecx, DWORD PTR [eax+496]
	add	ecx, 1
	mov	edx, DWORD PTR _TempNode$41[ebp]
	mov	DWORD PTR [edx+496], ecx
$LN73@Timer_Expi:

; 1070 : 					}
; 1071 : 					else

	jmp	SHORT $LN70@Timer_Expi
$LN75@Timer_Expi:

; 1072 : 						if (MiniGamePlayerControlSystem[x].SelectedPerk)

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+436], 0
	je	SHORT $LN71@Timer_Expi

; 1073 : 							TempNode->LevelsPlayedWithPerks++;

	mov	eax, DWORD PTR _TempNode$41[ebp]
	mov	ecx, DWORD PTR [eax+484]
	add	ecx, 1
	mov	edx, DWORD PTR _TempNode$41[ebp]
	mov	DWORD PTR [edx+484], ecx

; 1074 : 						else

	jmp	SHORT $LN70@Timer_Expi
$LN71@Timer_Expi:

; 1075 : 							TempNode->LevelsPlayedWithOutPerks++;

	mov	eax, DWORD PTR _TempNode$41[ebp]
	mov	ecx, DWORD PTR [eax+488]
	add	ecx, 1
	mov	edx, DWORD PTR _TempNode$41[ebp]
	mov	DWORD PTR [edx+488], ecx
$LN70@Timer_Expi:

; 1076 : 					if (MaxPlayerCount > 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 1
	jle	$LN69@Timer_Expi

; 1077 : 					{
; 1078 : 						if (!MiniGamePlayerControlSystem[x].SelectedPerk)

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+436], 0
	jne	$LN68@Timer_Expi

; 1079 : 						{
; 1080 : 							if (TempNode->HighestCleanTeamScore < (unsigned long)MiniGamePlayerControlSystem[x].Score)

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	fld	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60]
	fnstcw	WORD PTR tv2028[ebp]
	movzx	eax, WORD PTR tv2028[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv2031[ebp], eax
	fldcw	WORD PTR tv2031[ebp]
	fistp	QWORD PTR tv2033[ebp]
	fldcw	WORD PTR tv2028[ebp]
	mov	ecx, DWORD PTR tv2033[ebp]
	mov	edx, DWORD PTR _TempNode$41[ebp]
	cmp	DWORD PTR [edx+468], ecx
	jae	SHORT $LN67@Timer_Expi

; 1081 : 								TempNode->HighestCleanTeamScore = (unsigned long)MiniGamePlayerControlSystem[x].Score;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	fld	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60]
	fnstcw	WORD PTR tv2038[ebp]
	movzx	eax, WORD PTR tv2038[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv2041[ebp], eax
	fldcw	WORD PTR tv2041[ebp]
	fistp	QWORD PTR tv2043[ebp]
	fldcw	WORD PTR tv2038[ebp]
	mov	ecx, DWORD PTR tv2043[ebp]
	mov	edx, DWORD PTR _TempNode$41[ebp]
	mov	DWORD PTR [edx+468], ecx
$LN67@Timer_Expi:

; 1082 : 						}

	jmp	$LN65@Timer_Expi
$LN68@Timer_Expi:

; 1083 : 						else if (TempNode->HighestTeamScore < (unsigned long)MiniGamePlayerControlSystem[x].Score)

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	fld	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60]
	fnstcw	WORD PTR tv2048[ebp]
	movzx	eax, WORD PTR tv2048[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv2051[ebp], eax
	fldcw	WORD PTR tv2051[ebp]
	fistp	QWORD PTR tv2053[ebp]
	fldcw	WORD PTR tv2048[ebp]
	mov	ecx, DWORD PTR tv2053[ebp]
	mov	edx, DWORD PTR _TempNode$41[ebp]
	cmp	DWORD PTR [edx+480], ecx
	jae	SHORT $LN65@Timer_Expi

; 1084 : 								TempNode->HighestTeamScore = (unsigned long)MiniGamePlayerControlSystem[x].Score;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	fld	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60]
	fnstcw	WORD PTR tv2058[ebp]
	movzx	eax, WORD PTR tv2058[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv2061[ebp], eax
	fldcw	WORD PTR tv2061[ebp]
	fistp	QWORD PTR tv2063[ebp]
	fldcw	WORD PTR tv2058[ebp]
	mov	ecx, DWORD PTR tv2063[ebp]
	mov	edx, DWORD PTR _TempNode$41[ebp]
	mov	DWORD PTR [edx+480], ecx
$LN65@Timer_Expi:

; 1085 : 					}
; 1086 : 					else

	jmp	$LN60@Timer_Expi
$LN69@Timer_Expi:

; 1087 : 					{
; 1088 : 						if (!MiniGamePlayerControlSystem[x].SelectedPerk)

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+436], 0
	jne	$LN63@Timer_Expi

; 1089 : 						{
; 1090 : 							if (TempNode->HighestCleanScore < (unsigned long)MiniGamePlayerControlSystem[x].Score)

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	fld	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60]
	fnstcw	WORD PTR tv2069[ebp]
	movzx	eax, WORD PTR tv2069[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv2072[ebp], eax
	fldcw	WORD PTR tv2072[ebp]
	fistp	QWORD PTR tv2074[ebp]
	fldcw	WORD PTR tv2069[ebp]
	mov	ecx, DWORD PTR tv2074[ebp]
	mov	edx, DWORD PTR _TempNode$41[ebp]
	cmp	DWORD PTR [edx+464], ecx
	jae	SHORT $LN62@Timer_Expi

; 1091 : 								TempNode->HighestCleanScore = (unsigned long)MiniGamePlayerControlSystem[x].Score;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	fld	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60]
	fnstcw	WORD PTR tv2079[ebp]
	movzx	eax, WORD PTR tv2079[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv2082[ebp], eax
	fldcw	WORD PTR tv2082[ebp]
	fistp	QWORD PTR tv2084[ebp]
	fldcw	WORD PTR tv2079[ebp]
	mov	ecx, DWORD PTR tv2084[ebp]
	mov	edx, DWORD PTR _TempNode$41[ebp]
	mov	DWORD PTR [edx+464], ecx
$LN62@Timer_Expi:

; 1092 : 						}

	jmp	$LN60@Timer_Expi
$LN63@Timer_Expi:

; 1093 : 						else if (TempNode->HighestScore < (unsigned long)MiniGamePlayerControlSystem[x].Score)

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	fld	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60]
	fnstcw	WORD PTR tv2089[ebp]
	movzx	eax, WORD PTR tv2089[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv2092[ebp], eax
	fldcw	WORD PTR tv2092[ebp]
	fistp	QWORD PTR tv2094[ebp]
	fldcw	WORD PTR tv2089[ebp]
	mov	ecx, DWORD PTR tv2094[ebp]
	mov	edx, DWORD PTR _TempNode$41[ebp]
	cmp	DWORD PTR [edx+300], ecx
	jae	SHORT $LN60@Timer_Expi

; 1094 : 								TempNode->HighestScore = (unsigned long)MiniGamePlayerControlSystem[x].Score;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	fld	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60]
	fnstcw	WORD PTR tv2099[ebp]
	movzx	eax, WORD PTR tv2099[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv2102[ebp], eax
	fldcw	WORD PTR tv2102[ebp]
	fistp	QWORD PTR tv2104[ebp]
	fldcw	WORD PTR tv2099[ebp]
	mov	ecx, DWORD PTR tv2104[ebp]
	mov	edx, DWORD PTR _TempNode$41[ebp]
	mov	DWORD PTR [edx+300], ecx
$LN60@Timer_Expi:

; 1095 : 					}
; 1096 : 					char ScoreMessage[245];
; 1097 : 					if (MaxPlayerCount > 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 1
	jle	$LN59@Timer_Expi

; 1098 : 						if (teamHasPerks)

	movzx	eax, BYTE PTR _teamHasPerks$45[ebp]
	test	eax, eax
	je	$LN58@Timer_Expi

; 1099 : 						{
; 1100 : 							if (TempNode->TeamHighestLevel < JMG_CMTB_Main_Game_Control::CMTBLevel)

	mov	eax, DWORD PTR _TempNode$41[ebp]
	mov	ecx, DWORD PTR [eax+328]
	cmp	ecx, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	jae	SHORT $LN57@Timer_Expi

; 1101 : 							{
; 1102 : 								Create_2D_Sound_Player(Player,"SFX.Primary_Mission_Complete");

	push	OFFSET ??_C@_0BN@DJPMNHPB@SFX?4Primary_Mission_Complete?$AA@
	mov	eax, DWORD PTR _Player$42[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1103 : 								sprintf(ScoreMessage,"You scored %.2f points and through teamwork made it to a new high level as a team: Level %d while using perks!",MiniGamePlayerControlSystem[x].Score,JMG_CMTB_Main_Game_Control::CMTBLevel);

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	push	eax
	mov	ecx, DWORD PTR _x$43[ebp]
	imul	ecx, 596				; 00000254H
	cvtss2sd xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+60]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0GP@OAILEGEN@You?5scored?5?$CF?42f?5points?5and?5throu@
	lea	edx, DWORD PTR _ScoreMessage$40[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H

; 1104 : 								TempNode->TeamHighestLevel = JMG_CMTB_Main_Game_Control::CMTBLevel;

	mov	eax, DWORD PTR _TempNode$41[ebp]
	mov	ecx, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	mov	DWORD PTR [eax+328], ecx

; 1105 : 								PerkSystemIncreasePlayerPerkUnlockAmount(Player,61,JMG_CMTB_Main_Game_Control::CMTBLevel);

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	push	eax
	push	61					; 0000003dH
	mov	ecx, DWORD PTR _Player$42[ebp]
	push	ecx
	call	?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z ; PerkSystemIncreasePlayerPerkUnlockAmount
	add	esp, 12					; 0000000cH

; 1106 : 							}
; 1107 : 							else

	jmp	SHORT $LN56@Timer_Expi
$LN57@Timer_Expi:

; 1108 : 								sprintf(ScoreMessage,"You scored %.2f points and through teamwork made it to Level %d while using perks!",MiniGamePlayerControlSystem[x].Score,JMG_CMTB_Main_Game_Control::CMTBLevel);

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	push	eax
	mov	ecx, DWORD PTR _x$43[ebp]
	imul	ecx, 596				; 00000254H
	cvtss2sd xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+60]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0FD@FEOOFKHE@You?5scored?5?$CF?42f?5points?5and?5throu@
	lea	edx, DWORD PTR _ScoreMessage$40[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H
$LN56@Timer_Expi:

; 1109 : 						}
; 1110 : 						else

	jmp	$LN53@Timer_Expi
$LN58@Timer_Expi:

; 1111 : 						{
; 1112 : 							if (TempNode->HighestCleanTeamLevel < JMG_CMTB_Main_Game_Control::CMTBLevel)

	mov	eax, DWORD PTR _TempNode$41[ebp]
	mov	ecx, DWORD PTR [eax+476]
	cmp	ecx, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	jae	SHORT $LN54@Timer_Expi

; 1113 : 							{
; 1114 : 								Create_2D_Sound_Player(Player,"SFX.Primary_Mission_Complete");

	push	OFFSET ??_C@_0BN@DJPMNHPB@SFX?4Primary_Mission_Complete?$AA@
	mov	eax, DWORD PTR _Player$42[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1115 : 								sprintf(ScoreMessage,"You scored %.2f points and through teamwork made it to a new high level as a team: Level %d!",MiniGamePlayerControlSystem[x].Score,JMG_CMTB_Main_Game_Control::CMTBLevel);

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	push	eax
	mov	ecx, DWORD PTR _x$43[ebp]
	imul	ecx, 596				; 00000254H
	cvtss2sd xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+60]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0FN@NOIOEAIC@You?5scored?5?$CF?42f?5points?5and?5throu@
	lea	edx, DWORD PTR _ScoreMessage$40[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H

; 1116 : 								TempNode->HighestCleanTeamLevel = JMG_CMTB_Main_Game_Control::CMTBLevel;

	mov	eax, DWORD PTR _TempNode$41[ebp]
	mov	ecx, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	mov	DWORD PTR [eax+476], ecx

; 1117 : 								PerkSystemIncreasePlayerPerkUnlockAmount(Player,61,JMG_CMTB_Main_Game_Control::CMTBLevel);

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	push	eax
	push	61					; 0000003dH
	mov	ecx, DWORD PTR _Player$42[ebp]
	push	ecx
	call	?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z ; PerkSystemIncreasePlayerPerkUnlockAmount
	add	esp, 12					; 0000000cH

; 1118 : 							}
; 1119 : 							else

	jmp	SHORT $LN53@Timer_Expi
$LN54@Timer_Expi:

; 1120 : 								sprintf(ScoreMessage,"You scored %.2f points and through teamwork made it to Level %d!",MiniGamePlayerControlSystem[x].Score,JMG_CMTB_Main_Game_Control::CMTBLevel);

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	push	eax
	mov	ecx, DWORD PTR _x$43[ebp]
	imul	ecx, 596				; 00000254H
	cvtss2sd xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+60]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0EB@MNBPFAEN@You?5scored?5?$CF?42f?5points?5and?5throu@
	lea	edx, DWORD PTR _ScoreMessage$40[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H
$LN53@Timer_Expi:

; 1121 : 						}
; 1122 : 					else

	jmp	$LN46@Timer_Expi
$LN59@Timer_Expi:

; 1123 : 						if (teamHasPerks)

	movzx	eax, BYTE PTR _teamHasPerks$45[ebp]
	test	eax, eax
	je	$LN51@Timer_Expi

; 1124 : 						{
; 1125 : 							if (TempNode->HighestLevel < JMG_CMTB_Main_Game_Control::CMTBLevel)

	mov	eax, DWORD PTR _TempNode$41[ebp]
	mov	ecx, DWORD PTR [eax+308]
	cmp	ecx, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	jae	SHORT $LN50@Timer_Expi

; 1126 : 							{
; 1127 : 								Create_2D_Sound_Player(Player,"SFX.Primary_Mission_Complete");

	push	OFFSET ??_C@_0BN@DJPMNHPB@SFX?4Primary_Mission_Complete?$AA@
	mov	eax, DWORD PTR _Player$42[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1128 : 								sprintf(ScoreMessage,"You scored %.2f points and made it to a new personal highest level: Level %d while using perks!",MiniGamePlayerControlSystem[x].Score,JMG_CMTB_Main_Game_Control::CMTBLevel);

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	push	eax
	mov	ecx, DWORD PTR _x$43[ebp]
	imul	ecx, 596				; 00000254H
	cvtss2sd xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+60]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0GA@BBOALNAI@You?5scored?5?$CF?42f?5points?5and?5made?5@
	lea	edx, DWORD PTR _ScoreMessage$40[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H

; 1129 : 								TempNode->HighestLevel = JMG_CMTB_Main_Game_Control::CMTBLevel;

	mov	eax, DWORD PTR _TempNode$41[ebp]
	mov	ecx, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	mov	DWORD PTR [eax+308], ecx

; 1130 : 								PerkSystemIncreasePlayerPerkUnlockAmount(Player,61,JMG_CMTB_Main_Game_Control::CMTBLevel);

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	push	eax
	push	61					; 0000003dH
	mov	ecx, DWORD PTR _Player$42[ebp]
	push	ecx
	call	?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z ; PerkSystemIncreasePlayerPerkUnlockAmount
	add	esp, 12					; 0000000cH

; 1131 : 							}
; 1132 : 							else

	jmp	SHORT $LN49@Timer_Expi
$LN50@Timer_Expi:

; 1133 : 								sprintf(ScoreMessage,"You scored %.2f points and made it to level %d while using perks!",MiniGamePlayerControlSystem[x].Score,MiniGamePlayerControlSystem[x].HighestLevel);

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+352]
	push	ecx
	mov	edx, DWORD PTR _x$43[ebp]
	imul	edx, 596				; 00000254H
	cvtss2sd xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+60]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0EC@MNMLHPG@You?5scored?5?$CF?42f?5points?5and?5made?5@
	lea	eax, DWORD PTR _ScoreMessage$40[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H
$LN49@Timer_Expi:

; 1134 : 						}
; 1135 : 						else

	jmp	$LN46@Timer_Expi
$LN51@Timer_Expi:

; 1136 : 						{
; 1137 : 							if (TempNode->HighestCleanLevel < JMG_CMTB_Main_Game_Control::CMTBLevel)

	mov	eax, DWORD PTR _TempNode$41[ebp]
	mov	ecx, DWORD PTR [eax+472]
	cmp	ecx, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	jae	SHORT $LN47@Timer_Expi

; 1138 : 							{
; 1139 : 								Create_2D_Sound_Player(Player,"SFX.Primary_Mission_Complete");

	push	OFFSET ??_C@_0BN@DJPMNHPB@SFX?4Primary_Mission_Complete?$AA@
	mov	eax, DWORD PTR _Player$42[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8

; 1140 : 								sprintf(ScoreMessage,"You scored %.2f points and made it to a new personal highest level: Level %d!",MiniGamePlayerControlSystem[x].Score,JMG_CMTB_Main_Game_Control::CMTBLevel);

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	push	eax
	mov	ecx, DWORD PTR _x$43[ebp]
	imul	ecx, 596				; 00000254H
	cvtss2sd xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+60]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0EO@IGADHMMP@You?5scored?5?$CF?42f?5points?5and?5made?5@
	lea	edx, DWORD PTR _ScoreMessage$40[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H

; 1141 : 								TempNode->HighestCleanLevel = JMG_CMTB_Main_Game_Control::CMTBLevel;

	mov	eax, DWORD PTR _TempNode$41[ebp]
	mov	ecx, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	mov	DWORD PTR [eax+472], ecx

; 1142 : 								PerkSystemIncreasePlayerPerkUnlockAmount(Player,61,JMG_CMTB_Main_Game_Control::CMTBLevel);

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	push	eax
	push	61					; 0000003dH
	mov	ecx, DWORD PTR _Player$42[ebp]
	push	ecx
	call	?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z ; PerkSystemIncreasePlayerPerkUnlockAmount
	add	esp, 12					; 0000000cH

; 1143 : 							}
; 1144 : 							else

	jmp	SHORT $LN46@Timer_Expi
$LN47@Timer_Expi:

; 1145 : 								sprintf(ScoreMessage,"You scored %.2f points and made it to level %d",MiniGamePlayerControlSystem[x].Score,JMG_CMTB_Main_Game_Control::CMTBLevel);

	mov	eax, DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA ; JMG_CMTB_Main_Game_Control::CMTBLevel
	push	eax
	mov	ecx, DWORD PTR _x$43[ebp]
	imul	ecx, 596				; 00000254H
	cvtss2sd xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+60]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0CP@DHLGHGHD@You?5scored?5?$CF?42f?5points?5and?5made?5@
	lea	edx, DWORD PTR _ScoreMessage$40[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H
$LN46@Timer_Expi:

; 1146 : 						}
; 1147 : 					JmgUtility::DisplayChatMessage(Player,6,145,148,ScoreMessage);

	lea	eax, DWORD PTR _ScoreMessage$40[ebp]
	push	eax
	push	148					; 00000094H
	push	145					; 00000091H
	push	6
	mov	ecx, DWORD PTR _Player$42[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1148 : 					MiniGamePlayerControlSystem[x].Score = 0;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60], xmm0

; 1149 : 					MiniGamePlayerControlSystem[x].DroneScore = 0;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+380], xmm0

; 1150 : 					MiniGamePlayerControlSystem[x].CargoScore = 0;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+428], xmm0

; 1151 : 					MiniGamePlayerControlSystem[x].SecondSpace = false;

	mov	eax, DWORD PTR _x$43[ebp]
	imul	eax, 596				; 00000254H
	mov	BYTE PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+440], 0

; 1152 : 				}

	jmp	$LN79@Timer_Expi
$LN78@Timer_Expi:

; 1153 : 				RenCometBustersScoreControl.SaveData();

	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?SaveData@RenCometBustersScoreSystem@@QAEXXZ ; RenCometBustersScoreSystem::SaveData

; 1154 : 				PlayerPerkSystemControl.SaveData();

	mov	ecx, OFFSET ?PlayerPerkSystemControl@@3VPlayerPerksNodeControlSystem@@A ; PlayerPerkSystemControl
	call	?SaveData@PlayerPerksNodeControlSystem@@QAEXXZ ; PlayerPerksNodeControlSystem::SaveData

; 1155 : 				//Commands->Set_HUD_Help_Text(13194,Vector3(0.19599999,1.0,0.19599999));//0.88200003
; 1156 : 				for (int x = 1;x < 128;x++)

	mov	DWORD PTR _x$39[ebp], 1
	jmp	SHORT $LN45@Timer_Expi
$LN44@Timer_Expi:
	mov	eax, DWORD PTR _x$39[ebp]
	add	eax, 1
	mov	DWORD PTR _x$39[ebp], eax
$LN45@Timer_Expi:
	cmp	DWORD PTR _x$39[ebp], 128		; 00000080H
	jge	$LN43@Timer_Expi

; 1157 : 				{
; 1158 : 					GameObject *Player = Get_GameObj(x);

	mov	eax, DWORD PTR _x$39[ebp]
	push	eax
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	mov	DWORD PTR _Player$38[ebp], eax

; 1159 : 					if (Player)

	cmp	DWORD PTR _Player$38[ebp], 0
	je	SHORT $LN42@Timer_Expi

; 1160 : 						JmgUtility::DisplayChatMessage(Player,6,145,148,"Game Over!");

	push	OFFSET ??_C@_0L@PADKNPLL@Game?5Over?$CB?$AA@
	push	148					; 00000094H
	push	145					; 00000091H
	push	6
	mov	eax, DWORD PTR _Player$38[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN42@Timer_Expi:

; 1161 : 					Set_HUD_Help_Text_Player_Text(Player,7233,"Game Over!",Vector3(0.19599999f,1.0f,0.19599999f));

	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	push	ecx
	movss	xmm0, DWORD PTR __real@3e48b439
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3e48b439
	movss	DWORD PTR [esp], xmm0
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	OFFSET ??_C@_0L@PADKNPLL@Game?5Over?$CB?$AA@
	push	7233					; 00001c41H
	mov	eax, DWORD PTR _Player$38[ebp]
	push	eax
	call	DWORD PTR ?Set_HUD_Help_Text_Player_Text@@3P6AXPAVScriptableGameObj@@HPBDVVector3@@@ZA ; Set_HUD_Help_Text_Player_Text
	add	esp, 24					; 00000018H

; 1162 : 				}

	jmp	$LN44@Timer_Expi
$LN43@Timer_Expi:

; 1163 : 				for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$37[ebp], 0
	jmp	SHORT $LN41@Timer_Expi
$LN40@Timer_Expi:
	mov	eax, DWORD PTR _x$37[ebp]
	add	eax, 1
	mov	DWORD PTR _x$37[ebp], eax
$LN41@Timer_Expi:
	cmp	DWORD PTR _x$37[ebp], 8
	jge	SHORT $LN39@Timer_Expi

; 1164 : 					MiniGamePlayerControlSystem[x].endGamePadding = 3;

	mov	eax, DWORD PTR _x$37[ebp]
	imul	eax, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+576], 3
	jmp	SHORT $LN40@Timer_Expi
$LN39@Timer_Expi:

; 1165 : 				CurrentMusic = MusicGameOver;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 1

; 1166 : 				FadeMusic("Thunder.mp3");

	push	OFFSET ??_C@_0M@JGDOJGG@Thunder?4mp3?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FadeMusic@JMG_CMTB_Main_Game_Control@@AAEXPBD@Z ; JMG_CMTB_Main_Game_Control::FadeMusic

; 1167 : 				NextLevelDelay = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], -1
$LN85@Timer_Expi:

; 1168 : 			}
; 1169 : 		}
; 1170 : 		else

	jmp	$LN38@Timer_Expi
$LN156@Timer_Expi:

; 1171 : 		{
; 1172 : 			int ContinueGame = 0;

	mov	DWORD PTR _ContinueGame$36[ebp], 0

; 1173 : 			for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$35[ebp], 0
	jmp	SHORT $LN37@Timer_Expi
$LN36@Timer_Expi:
	mov	eax, DWORD PTR _x$35[ebp]
	add	eax, 1
	mov	DWORD PTR _x$35[ebp], eax
$LN37@Timer_Expi:
	cmp	DWORD PTR _x$35[ebp], 8
	jge	SHORT $LN35@Timer_Expi

; 1174 : 			{
; 1175 : 				if (!MiniGamePlayerControlSystem[x].GamePlayerID)

	mov	eax, DWORD PTR _x$35[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20], 0
	jne	SHORT $LN34@Timer_Expi

; 1176 : 					continue;

	jmp	SHORT $LN36@Timer_Expi
$LN34@Timer_Expi:

; 1177 : 				GameObject *Player = Commands->Find_Object(MiniGamePlayerControlSystem[x].GamePlayerID);

	mov	eax, DWORD PTR _x$35[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Player$34[ebp], eax

; 1178 : 				if (!Player)

	cmp	DWORD PTR _Player$34[ebp], 0
	jne	SHORT $LN33@Timer_Expi

; 1179 : 					continue;

	jmp	SHORT $LN36@Timer_Expi
$LN33@Timer_Expi:

; 1180 : 				ContinueGame++;

	mov	eax, DWORD PTR _ContinueGame$36[ebp]
	add	eax, 1
	mov	DWORD PTR _ContinueGame$36[ebp], eax

; 1181 : 			}

	jmp	SHORT $LN36@Timer_Expi
$LN35@Timer_Expi:

; 1182 : 			ContinueGame = JmgUtility::MathClampInt(ContinueGame,1,8);

	push	8
	push	1
	mov	eax, DWORD PTR _ContinueGame$36[ebp]
	push	eax
	call	?MathClampInt@JmgUtility@@SAHHHH@Z	; JmgUtility::MathClampInt
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ContinueGame$36[ebp], eax

; 1183 : 			if (LastPlayerCount != ContinueGame)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	cmp	ecx, DWORD PTR _ContinueGame$36[ebp]
	je	SHORT $LN29@Timer_Expi

; 1184 : 				for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$33[ebp], 0
	jmp	SHORT $LN31@Timer_Expi
$LN30@Timer_Expi:
	mov	eax, DWORD PTR _x$33[ebp]
	add	eax, 1
	mov	DWORD PTR _x$33[ebp], eax
$LN31@Timer_Expi:
	cmp	DWORD PTR _x$33[ebp], 8
	jge	SHORT $LN29@Timer_Expi

; 1185 : 					Commands->Set_Health(MiniGamePlayerControlSystem[x].SpectatorObject,(float)JmgUtility::MathClampInt(ContinueGame,1,8));

	push	8
	push	1
	mov	eax, DWORD PTR _ContinueGame$36[ebp]
	push	eax
	call	?MathClampInt@JmgUtility@@SAHHHH@Z	; JmgUtility::MathClampInt
	add	esp, 12					; 0000000cH
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _x$33[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+16]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+228]
	call	ecx
	add	esp, 8
	jmp	SHORT $LN30@Timer_Expi
$LN29@Timer_Expi:

; 1186 : 			LastPlayerCount = ContinueGame;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ContinueGame$36[ebp]
	mov	DWORD PTR [eax+44], ecx
$LN38@Timer_Expi:

; 1187 : 		}
; 1188 : 		RenCometBustersList.UpdateCollisions();

	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?UpdateCollisions@RenCometBustersGameObjects@@QAEXXZ ; RenCometBustersGameObjects::UpdateCollisions

; 1189 : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$32[ebp], 0
	jmp	SHORT $LN28@Timer_Expi
$LN27@Timer_Expi:
	mov	eax, DWORD PTR _x$32[ebp]
	add	eax, 1
	mov	DWORD PTR _x$32[ebp], eax
$LN28@Timer_Expi:
	cmp	DWORD PTR _x$32[ebp], 8
	jge	SHORT $LN26@Timer_Expi

; 1190 : 			Create_Player_Ship(obj,x);

	mov	eax, DWORD PTR _x$32[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Create_Player_Ship@JMG_CMTB_Main_Game_Control@@AAEXPAVScriptableGameObj@@H@Z ; JMG_CMTB_Main_Game_Control::Create_Player_Ship
	jmp	SHORT $LN27@Timer_Expi
$LN26@Timer_Expi:

; 1191 : 		if (UFOSpawnTime)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	$LN24@Timer_Expi

; 1192 : 		{
; 1193 : 			UFOSpawnTime--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], ecx

; 1194 : 			if (!UFOSpawnTime)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	$LN24@Timer_Expi

; 1195 : 			{
; 1196 : 				int CometCount = RenCometBustersList.CountType(Asteroid);

	push	2
	mov	ecx, OFFSET ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	call	?CountType@RenCometBustersGameObjects@@QAEHW4ObjectType@@@Z ; RenCometBustersGameObjects::CountType
	mov	DWORD PTR _CometCount$31[ebp], eax

; 1197 : 				if (CometCount != LastCometCount || NextLevelDelay == -1)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _CometCount$31[ebp]
	cmp	ecx, DWORD PTR [eax+52]
	jne	SHORT $LN22@Timer_Expi
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], -1
	jne	$LN20@Timer_Expi
$LN22@Timer_Expi:

; 1198 : 				{
; 1199 : 					GameObject *UFO = Commands->Create_Object("CMTB_UFO",Random_Map_Position());

	lea	eax, DWORD PTR $T15[ebp]
	push	eax
	call	?Random_Map_Position@@YA?AVVector3@@XZ	; Random_Map_Position
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_08JMBNGAFO@CMTB_UFO?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _UFO$30[ebp], eax

; 1200 : 					Commands->Attach_Script(UFO,"JMG_CMTB_UFO_Random_Fire_Control","0");

	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	push	OFFSET ??_C@_0CB@NKFKHNHH@JMG_CMTB_UFO_Random_Fire_Control@
	mov	eax, DWORD PTR _UFO$30[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 1201 : 					MoveablePhysClass *mphys = UFO->As_PhysicalGameObj() ? UFO->As_PhysicalGameObj()->Peek_Physical_Object()->As_MoveablePhysClass() : NULL;

	mov	eax, DWORD PTR _UFO$30[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _UFO$30[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	test	eax, eax
	je	SHORT $LN184@Timer_Expi
	mov	ecx, DWORD PTR _UFO$30[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _UFO$30[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	mov	ecx, eax
	call	?Peek_Physical_Object@PhysicalGameObj@@QBEPAVPhysClass@@XZ ; PhysicalGameObj::Peek_Physical_Object
	mov	DWORD PTR tv1156[ebp], eax
	mov	ecx, DWORD PTR tv1156[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv1156[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	mov	DWORD PTR tv1161[ebp], eax
	jmp	SHORT $LN185@Timer_Expi
$LN184@Timer_Expi:
	mov	DWORD PTR tv1161[ebp], 0
$LN185@Timer_Expi:
	mov	ecx, DWORD PTR tv1161[ebp]
	mov	DWORD PTR _mphys$29[ebp], ecx
$LN21@Timer_Expi:

; 1202 : 					while (mphys && !mphys->Can_Teleport(Matrix3D(Commands->Get_Position(UFO))))

	cmp	DWORD PTR _mphys$29[ebp], 0
	je	SHORT $LN20@Timer_Expi
	push	0
	push	0
	mov	eax, DWORD PTR _UFO$30[ebp]
	push	eax
	lea	ecx, DWORD PTR $T17[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR $T16[ebp]
	call	??0Matrix3D@@QAE@ABVVector3@@@Z		; Matrix3D::Matrix3D
	push	eax
	mov	ecx, DWORD PTR _mphys$29[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _mphys$29[ebp]
	mov	eax, DWORD PTR [edx+224]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN20@Timer_Expi

; 1203 : 						Commands->Set_Position(UFO,Random_Map_Position());

	lea	eax, DWORD PTR $T18[ebp]
	push	eax
	call	?Random_Map_Position@@YA?AVVector3@@XZ	; Random_Map_Position
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _UFO$30[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+60]
	call	eax
	add	esp, 8
	jmp	SHORT $LN21@Timer_Expi
$LN20@Timer_Expi:

; 1204 : 				}
; 1205 : 				LastCometCount = CometCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _CometCount$31[ebp]
	mov	DWORD PTR [eax+52], ecx

; 1206 : 				UFOSpawnTime = Commands->Get_Random_Int(600,1800);

	push	1800					; 00000708H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], eax
$LN24@Timer_Expi:

; 1207 : 			}
; 1208 : 		}
; 1209 : 		Commands->Start_Timer(obj,this,0.1f,5434);

	push	5434					; 0000153aH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN157@Timer_Expi:

; 1210 : 	}
; 1211 : 	if (number == 5436)

	cmp	DWORD PTR _number$[ebp], 5436		; 0000153cH
	jne	$LN19@Timer_Expi

; 1212 : 	{//OutOfBoundsObjectsCheck
; 1213 : 		Vector3 Pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T19[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _Pos$28[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1214 : 		AnObject *Current = RenCometBustersList.ObjectsList;

	mov	eax, DWORD PTR ?RenCometBustersList@@3VRenCometBustersGameObjects@@A ; RenCometBustersList
	mov	DWORD PTR _Current$27[ebp], eax
$LN18@Timer_Expi:

; 1215 : 		while(Current)

	cmp	DWORD PTR _Current$27[ebp], 0
	je	$LN17@Timer_Expi

; 1216 : 		{
; 1217 : 			if (!Current->AllowReplaceTime && Current->Type != TheMoon && Current->Type != CargoShip)

	mov	eax, DWORD PTR _Current$27[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	$LN15@Timer_Expi
	mov	eax, DWORD PTR _Current$27[ebp]
	cmp	DWORD PTR [eax+16], 4
	je	$LN15@Timer_Expi
	mov	eax, DWORD PTR _Current$27[ebp]
	cmp	DWORD PTR [eax+16], 10			; 0000000aH
	je	$LN15@Timer_Expi

; 1218 : 				if (JmgUtility::SimpleDistance(Pos,Commands->Get_Position(Current->Object)) > 28000.00)

	mov	eax, DWORD PTR _Current$27[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T20[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	lea	edx, DWORD PTR _Pos$28[ebp]
	push	edx
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR tv2290[ebp]
	movss	xmm0, DWORD PTR tv2290[ebp]
	cvtss2sd xmm0, xmm0
	comisd	xmm0, QWORD PTR __real@40db580000000000
	jbe	SHORT $LN15@Timer_Expi

; 1219 : 				{
; 1220 : 					Current->AllowReplaceTime = 1;

	mov	eax, DWORD PTR _Current$27[ebp]
	mov	DWORD PTR [eax+20], 1

; 1221 : 					Commands->Apply_Damage(Current->Object,9999.9f,"BlamoKiller",obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@461c3f9a
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Current$27[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+616]
	call	ecx
	add	esp, 16					; 00000010H
$LN15@Timer_Expi:

; 1222 : 				}
; 1223 : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$27[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$27[ebp], ecx

; 1224 : 		}

	jmp	$LN18@Timer_Expi
$LN17@Timer_Expi:

; 1225 : 		Commands->Start_Timer(obj,this,10.0,5436);

	push	5436					; 0000153cH
	push	ecx
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN19@Timer_Expi:

; 1226 : 	}
; 1227 : 	if (number == 5437)

	cmp	DWORD PTR _number$[ebp], 5437		; 0000153dH
	jne	SHORT $LN14@Timer_Expi

; 1228 : 	{
; 1229 : 		RenCometBustersScoreControl.StateHighScore();

	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?StateHighScore@RenCometBustersScoreSystem@@QAEXXZ ; RenCometBustersScoreSystem::StateHighScore

; 1230 : 		Commands->Start_Timer(obj,this,300.0f,5437);

	push	5437					; 0000153dH
	push	ecx
	movss	xmm0, DWORD PTR __real@43960000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN14@Timer_Expi:

; 1231 : 	}
; 1232 : 	if (number == 5438)

	cmp	DWORD PTR _number$[ebp], 5438		; 0000153eH
	jne	$LN13@Timer_Expi

; 1233 : 	{
; 1234 : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$26[ebp], 0
	jmp	SHORT $LN12@Timer_Expi
$LN11@Timer_Expi:
	mov	eax, DWORD PTR _x$26[ebp]
	add	eax, 1
	mov	DWORD PTR _x$26[ebp], eax
$LN12@Timer_Expi:
	cmp	DWORD PTR _x$26[ebp], 8
	jge	$LN10@Timer_Expi

; 1235 : 		{
; 1236 : 			if (MiniGamePlayerControlSystem[x].PlayerShip)

	mov	eax, DWORD PTR _x$26[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8], 0
	je	$LN8@Timer_Expi

; 1237 : 				if (Commands->Get_Position(MiniGamePlayerControlSystem[x].PlayerShip).Z > 0.45)

	mov	eax, DWORD PTR _x$26[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	lea	edx, DWORD PTR $T21[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	cvtss2sd xmm0, DWORD PTR [eax+8]
	comisd	xmm0, QWORD PTR __real@3fdccccccccccccd
	jbe	$LN8@Timer_Expi

; 1238 : 				{
; 1239 : 					Vector3 Pos = Commands->Get_Position(MiniGamePlayerControlSystem[x].PlayerShip);

	mov	eax, DWORD PTR _x$26[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	lea	edx, DWORD PTR $T22[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _Pos$25[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1240 : 					Pos.Z = 0.36f;

	movss	xmm0, DWORD PTR __real@3eb851ec
	movss	DWORD PTR _Pos$25[ebp+8], xmm0

; 1241 : 					GameObject *Object = Commands->Create_Object("Daves Arrow",Pos);

	lea	eax, DWORD PTR _Pos$25[ebp]
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Object$24[ebp], eax

; 1242 : 					Commands->Set_Facing(Object,Commands->Get_Facing(MiniGamePlayerControlSystem[x].PlayerShip));

	mov	eax, DWORD PTR _x$26[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+72]
	call	eax
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _Object$24[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+76]
	call	eax
	add	esp, 8

; 1243 : 					Commands->Attach_To_Object_Bone(MiniGamePlayerControlSystem[x].PlayerShip,Object,"Origin");

	push	OFFSET ??_C@_06BIJBOFNL@Origin?$AA@
	mov	eax, DWORD PTR _Object$24[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$26[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+8]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+572]
	call	ecx
	add	esp, 12					; 0000000cH

; 1244 : 					Commands->Attach_To_Object_Bone(MiniGamePlayerControlSystem[x].PlayerShip,Object,"Origin");

	push	OFFSET ??_C@_06BIJBOFNL@Origin?$AA@
	mov	eax, DWORD PTR _Object$24[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$26[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+8]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+572]
	call	ecx
	add	esp, 12					; 0000000cH

; 1245 : 					Commands->Destroy_Object(Object);

	mov	eax, DWORD PTR _Object$24[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN8@Timer_Expi:

; 1246 : 				}
; 1247 : 			if (MiniGamePlayerControlSystem[x].CargoWarnDecreaseDelay)

	mov	eax, DWORD PTR _x$26[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+392], 0
	je	SHORT $LN7@Timer_Expi

; 1248 : 				MiniGamePlayerControlSystem[x].CargoWarnDecreaseDelay--;

	mov	eax, DWORD PTR _x$26[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+392]
	sub	ecx, 1
	mov	edx, DWORD PTR _x$26[ebp]
	imul	edx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+392], ecx
$LN7@Timer_Expi:

; 1249 : 			if (!MiniGamePlayerControlSystem[x].CargoWarnDecreaseDelay)

	mov	eax, DWORD PTR _x$26[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+392], 0
	jne	SHORT $LN5@Timer_Expi

; 1250 : 				if (MiniGamePlayerControlSystem[x].CargoWarnedCount)

	mov	eax, DWORD PTR _x$26[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+384], 0
	je	SHORT $LN5@Timer_Expi

; 1251 : 					MiniGamePlayerControlSystem[x].CargoWarnedCount--;

	mov	eax, DWORD PTR _x$26[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+384]
	sub	ecx, 1
	mov	edx, DWORD PTR _x$26[ebp]
	imul	edx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+384], ecx
$LN5@Timer_Expi:

; 1252 : 			if (MiniGamePlayerControlSystem[x].DoublePointsTime)

	mov	eax, DWORD PTR _x$26[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+396], 0
	je	$LN2@Timer_Expi

; 1253 : 			{
; 1254 : 				MiniGamePlayerControlSystem[x].DoublePointsTime--;

	mov	eax, DWORD PTR _x$26[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+396]
	sub	ecx, 1
	mov	edx, DWORD PTR _x$26[ebp]
	imul	edx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+396], ecx

; 1255 : 				if (!MiniGamePlayerControlSystem[x].DoublePointsTime)

	mov	eax, DWORD PTR _x$26[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+396], 0
	jne	SHORT $LN2@Timer_Expi

; 1256 : 				{
; 1257 : 					GameObject *Driver = Get_Vehicle_Driver(MiniGamePlayerControlSystem[x].PlayerShip);

	mov	eax, DWORD PTR _x$26[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+8]
	push	ecx
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	mov	DWORD PTR _Driver$23[ebp], eax

; 1258 : 					if (Driver)

	cmp	DWORD PTR _Driver$23[ebp], 0
	je	SHORT $LN2@Timer_Expi

; 1259 : 					{
; 1260 : 						JmgUtility::DisplayChatMessage(Driver,200,200,125,"Your double points powerup has expired!");

	push	OFFSET ??_C@_0CI@IMOGNOKK@Your?5double?5points?5powerup?5has?5e@
	push	125					; 0000007dH
	push	200					; 000000c8H
	push	200					; 000000c8H
	mov	eax, DWORD PTR _Driver$23[ebp]
	push	eax
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 1261 : 						Create_2D_Sound_Player(Driver,"SFX.Comet_Busters_UI_Failed_Sound");

	push	OFFSET ??_C@_0CC@PFNHFIPM@SFX?4Comet_Busters_UI_Failed_Soun@
	mov	eax, DWORD PTR _Driver$23[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_Sound_Player
	add	esp, 8
$LN2@Timer_Expi:

; 1262 : 					}
; 1263 : 				}
; 1264 : 			}
; 1265 : 		}

	jmp	$LN11@Timer_Expi
$LN10@Timer_Expi:

; 1266 : 		BabySit++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], ecx

; 1267 : 		if (BabySit >= 5)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 5
	jb	SHORT $LN1@Timer_Expi

; 1268 : 		{
; 1269 : 			//JeradTrace("CRITICAL MINIGAME ERROR DETECTED: Main timing loop stopped! Attempting to correct!",true);
; 1270 : 			Commands->Start_Timer(obj,this,0.1f,5434);

	push	5434					; 0000153aH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 1271 : 			BabySit = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
$LN1@Timer_Expi:

; 1272 : 		}
; 1273 : 		Commands->Start_Timer(obj,this,1.0f,5438);

	push	5438					; 0000153eH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN13@Timer_Expi:

; 1274 : 	}
; 1275 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN186@Timer_Expi:
	DD	$LN146@Timer_Expi
	DD	$LN143@Timer_Expi
	DD	$LN141@Timer_Expi
	DD	$LN139@Timer_Expi
	DD	$LN137@Timer_Expi
?Timer_Expired@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@H@Z ENDP ; JMG_CMTB_Main_Game_Control::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbusters.cpp
;	COMDAT ?Created@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
$T1 = -824						; size = 596
$T2 = -228						; size = 12
$T3 = -216						; size = 12
_Spot$4 = -140						; size = 32
_x$5 = -108						; size = 4
_ShipName$6 = -104					; size = 32
_Spot$7 = -72						; size = 32
_x$8 = -40						; size = 4
_params$ = -36						; size = 32
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@@Z PROC ; JMG_CMTB_Main_Game_Control::Created, COMDAT
; _this$ = ecx

; 666  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 824				; 00000338H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 667  : 	MoonHolderID = 0;

	mov	DWORD PTR ?MoonHolderID@JMG_CMTB_Main_Game_Control@@2HA, 0 ; JMG_CMTB_Main_Game_Control::MoonHolderID

; 668  : 	PlayerSOSBeaconDealy = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 0

; 669  : 	JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID = 0;

	mov	DWORD PTR ?PlayerSOSBeaconID@JMG_CMTB_Main_Game_Control@@2IA, 0 ; JMG_CMTB_Main_Game_Control::PlayerSOSBeaconID

; 670  : 	JMG_CMTB_Main_Game_Control::DroneSwarmCount = 0;

	mov	DWORD PTR ?DroneSwarmCount@JMG_CMTB_Main_Game_Control@@2IA, 0 ; JMG_CMTB_Main_Game_Control::DroneSwarmCount

; 671  : 	CurrentMusic = MusicNone;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0

; 672  : 	BabySit = 20;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 20			; 00000014H

; 673  : 	Commands->Start_Timer(obj,this,5.0,5438);

	push	5438					; 0000153eH
	push	ecx
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 674  : 	UFOSpawnTime = Commands->Get_Random_Int(600,1800);

	push	1800					; 00000708H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], eax

; 675  : 	AddPerkTypes();

	call	?AddPerkTypes@@YAXXZ			; AddPerkTypes

; 676  : 	RenCometBustersScoreControl.Cleanup();

	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Cleanup@RenCometBustersScoreSystem@@QAEXXZ ; RenCometBustersScoreSystem::Cleanup

; 677  : 	RenCometBustersScoreControl.LoadData(1);

	push	1
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?LoadData@RenCometBustersScoreSystem@@QAEXH@Z ; RenCometBustersScoreSystem::LoadData

; 678  : 	PlayerPerkSystemControl.LoadData();

	mov	ecx, OFFSET ?PlayerPerkSystemControl@@3VPlayerPerksNodeControlSystem@@A ; PlayerPerkSystemControl
	call	?LoadData@PlayerPerksNodeControlSystem@@QAEXXZ ; PlayerPerksNodeControlSystem::LoadData

; 679  : 	JMG_CMTB_Main_Game_Control::CMTBLevel = 0;

	mov	DWORD PTR ?CMTBLevel@JMG_CMTB_Main_Game_Control@@2IA, 0 ; JMG_CMTB_Main_Game_Control::CMTBLevel

; 680  : 	NextLevelDelay = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], -1

; 681  : 	LastPlayerCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0

; 682  : 	LastCometCount = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], -1

; 683  : 	Commands->Set_Model(obj,"RenRoidsBones");

	push	OFFSET ??_C@_0O@ILEENPHG@RenRoidsBones?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 684  : 	char params[32];
; 685  : 	for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$8[ebp], 0
	jmp	SHORT $LN6@Created
$LN5@Created:
	mov	eax, DWORD PTR _x$8[ebp]
	add	eax, 1
	mov	DWORD PTR _x$8[ebp], eax
$LN6@Created:
	cmp	DWORD PTR _x$8[ebp], 8
	jge	$LN4@Created

; 686  : 	{
; 687  : 		MiniGamePlayerControlSystem[x] = RenCometBustersPlayerNode();

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0RenCometBustersPlayerNode@@QAE@XZ	; RenCometBustersPlayerNode::RenCometBustersPlayerNode
	push	eax
	mov	ecx, DWORD PTR _x$8[ebp]
	imul	ecx, 596				; 00000254H
	add	ecx, OFFSET ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A ; MiniGamePlayerControlSystem
	call	??4RenCometBustersPlayerNode@@QAEAAU0@ABU0@@Z

; 688  : 		char Spot[32];
; 689  : 		sprintf(Spot,"SpecSpot0%d",x);

	mov	eax, DWORD PTR _x$8[ebp]
	push	eax
	push	OFFSET ??_C@_0M@GOMAJMEN@SpecSpot0?$CFd?$AA@
	lea	ecx, DWORD PTR _Spot$7[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 690  : 		MiniGamePlayerControlSystem[x].SpectatorObject = Commands->Create_Object_At_Bone(obj,"Spectator_Vehicle",Spot);

	lea	eax, DWORD PTR _Spot$7[ebp]
	push	eax
	push	OFFSET ??_C@_0BC@EDKELIGB@Spectator_Vehicle?$AA@
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+104]
	call	eax
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _x$8[ebp]
	imul	ecx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+16], eax

; 691  : 		Commands->Attach_Script(MiniGamePlayerControlSystem[x].SpectatorObject,"JMG_CMTB_Vehicle_Face_Turret","");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BN@GNJLFKOF@JMG_CMTB_Vehicle_Face_Turret?$AA@
	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+16]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+120]
	call	eax
	add	esp, 12					; 0000000cH

; 692  : 		MiniGamePlayerControlSystem[x].specCreateSpot = Commands->Get_Position(MiniGamePlayerControlSystem[x].SpectatorObject);

	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+16]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _x$8[ebp]
	imul	ecx, 596				; 00000254H
	add	ecx, OFFSET ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A+580
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 693  : 		MiniGamePlayerControlSystem[x].SpectatorObject->As_PhysicalGameObj()->Peek_Physical_Object()->Set_Collision_Group(TERRAIN_ONLY_COLLISION_GROUP);

	push	2
	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+16]
	mov	edx, DWORD PTR _x$8[ebp]
	imul	edx, 596				; 00000254H
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[edx+16]
	mov	edx, DWORD PTR [eax+36]
	call	edx
	mov	ecx, eax
	call	?Peek_Physical_Object@PhysicalGameObj@@QBEPAVPhysClass@@XZ ; PhysicalGameObj::Peek_Physical_Object
	mov	ecx, eax
	call	?Set_Collision_Group@PhysClass@@QAEXW4Collision_Group_Type@@@Z ; PhysClass::Set_Collision_Group

; 694  : 		Set_Max_Shield_Strength(MiniGamePlayerControlSystem[x].SpectatorObject,8.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@41000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _x$8[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+16]
	push	ecx
	call	?Set_Max_Shield_Strength@@YAXPAVScriptableGameObj@@M@Z ; Set_Max_Shield_Strength
	add	esp, 8

; 695  : 		sprintf(params,"%d,%d",Commands->Get_ID(obj),x);

	mov	eax, DWORD PTR _x$8[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+108]
	call	eax
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_05KABNCBHK@?$CFd?0?$CFd?$AA@
	lea	ecx, DWORD PTR _params$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 696  : 		Commands->Attach_Script(MiniGamePlayerControlSystem[x].SpectatorObject,"JMG_CMTB_Spectator_Object",params);

	lea	eax, DWORD PTR _params$[ebp]
	push	eax
	push	OFFSET ??_C@_0BK@IMCJNJOP@JMG_CMTB_Spectator_Object?$AA@
	mov	ecx, DWORD PTR _x$8[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+16]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+120]
	call	ecx
	add	esp, 12					; 0000000cH

; 697  : 		sprintf(Spot,"CreateS%d",x);

	mov	eax, DWORD PTR _x$8[ebp]
	push	eax
	push	OFFSET ??_C@_09CFKJBEPJ@CreateS?$CFd?$AA@
	lea	ecx, DWORD PTR _Spot$7[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 698  : 		MiniGamePlayerControlSystem[x].ReplacementShip = Commands->Create_Object_At_Bone(obj,"Player_Ships",Spot);

	lea	eax, DWORD PTR _Spot$7[ebp]
	push	eax
	push	OFFSET ??_C@_0N@FHNGDPEO@Player_Ships?$AA@
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+104]
	call	eax
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _x$8[ebp]
	imul	ecx, 596				; 00000254H
	mov	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+12], eax

; 699  : 		char ShipName[32];
; 700  : 		sprintf(ShipName,"P%d_SHIP",x);

	mov	eax, DWORD PTR _x$8[ebp]
	push	eax
	push	OFFSET ??_C@_08LMPADKBD@P?$CFd_SHIP?$AA@
	lea	ecx, DWORD PTR _ShipName$6[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 701  : 		Commands->Set_Model(MiniGamePlayerControlSystem[x].ReplacementShip,ShipName);

	lea	eax, DWORD PTR _ShipName$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$8[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+12]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+160]
	call	ecx
	add	esp, 8

; 702  : 		sprintf(ShipName,"P%d_SHIP.P%d_SHIP",x,x);

	mov	eax, DWORD PTR _x$8[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$8[ebp]
	push	ecx
	push	OFFSET ??_C@_0BC@HMKEDKPH@P?$CFd_SHIP?4P?$CFd_SHIP?$AA@
	lea	edx, DWORD PTR _ShipName$6[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 703  : 		Commands->Set_Animation(MiniGamePlayerControlSystem[x].ReplacementShip,ShipName,false,0,0,0,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	lea	eax, DWORD PTR _ShipName$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$8[ebp]
	imul	ecx, 596				; 00000254H
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+12]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+164]
	call	ecx
	add	esp, 28					; 0000001cH

; 704  : 
; 705  : 	}

	jmp	$LN5@Created
$LN4@Created:

; 706  : 	for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$5[ebp], 0
	jmp	SHORT $LN3@Created
$LN2@Created:
	mov	eax, DWORD PTR _x$5[ebp]
	add	eax, 1
	mov	DWORD PTR _x$5[ebp], eax
$LN3@Created:
	cmp	DWORD PTR _x$5[ebp], 8
	jge	SHORT $LN1@Created

; 707  : 	{
; 708  : 		char Spot[32];
; 709  : 		sprintf(Spot,"SpawnS0%d",x);

	mov	eax, DWORD PTR _x$5[ebp]
	push	eax
	push	OFFSET ??_C@_09JAKCOKP@SpawnS0?$CFd?$AA@
	lea	ecx, DWORD PTR _Spot$4[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 710  : 		SpawnLocations[x] = Commands->Get_Bone_Position(obj,Spot);

	lea	eax, DWORD PTR _Spot$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+68]
	call	ecx
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _x$5[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+56]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 711  : 	}

	jmp	SHORT $LN2@Created
$LN1@Created:

; 712  : 	Commands->Start_Timer(obj,this,0.1f,5434);

	push	5434					; 0000153aH
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 713  : 	Commands->Start_Timer(obj,this,1.0f,5435);

	push	5435					; 0000153bH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 714  : 	Commands->Start_Timer(obj,this,10.0f,5436);

	push	5436					; 0000153cH
	push	ecx
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 715  : 	Commands->Start_Timer(obj,this,300.0f,5437);

	push	5437					; 0000153dH
	push	ecx
	movss	xmm0, DWORD PTR __real@43960000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 716  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@JMG_CMTB_Main_Game_Control@@EAEXPAVScriptableGameObj@@@Z ENDP ; JMG_CMTB_Main_Game_Control::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?Random_Map_Position@@YA?AVVector3@@XZ
_TEXT	SEGMENT
tv141 = -108						; size = 4
tv199 = -104						; size = 4
tv218 = -100						; size = 4
tv130 = -96						; size = 4
tv188 = -92						; size = 4
tv89 = -88						; size = 4
tv170 = -84						; size = 4
tv216 = -80						; size = 4
tv77 = -76						; size = 4
tv159 = -72						; size = 4
_Random$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Random_Map_Position@@YA?AVVector3@@XZ PROC		; Random_Map_Position, COMDAT

; 2135 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	push	ebx
	push	esi
	push	edi

; 2136 : 	int Random = Commands->Get_Random_Int(0,2);

	push	2
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _Random$[ebp], eax

; 2137 : 	return Vector3((!Random ? (Commands->Get_Random(0.0,1.0f) < 0.5 ? 1 : -1)*Commands->Get_Random(75.0f,80.0f) : Commands->Get_Random(-80.0f,80.0f)),(Random ? (Commands->Get_Random(0.0,1.0f) < 0.5 ? 1 : -1)*Commands->Get_Random(75.0f,80.0f) : Commands->Get_Random(-80.0f,80.0f)),0.5);

	cmp	DWORD PTR _Random$[ebp], 0
	je	$LN5@Random_Map
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv159[ebp]
	movss	xmm0, DWORD PTR tv159[ebp]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN3@Random_Map
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN4@Random_Map
$LN3@Random_Map:
	mov	DWORD PTR tv77[ebp], -1
$LN4@Random_Map:
	cvtsi2ss xmm0, DWORD PTR tv77[ebp]
	push	ecx
	movss	xmm1, DWORD PTR __real@42a00000
	movss	DWORD PTR [esp], xmm1
	push	ecx
	movss	xmm1, DWORD PTR __real@42960000
	movss	DWORD PTR [esp], xmm1
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+148]
	movss	DWORD PTR tv216[ebp], xmm0
	call	eax
	add	esp, 8
	fstp	DWORD PTR tv170[ebp]
	movss	xmm0, DWORD PTR tv216[ebp]
	mulss	xmm0, DWORD PTR tv170[ebp]
	movss	DWORD PTR tv89[ebp], xmm0
	jmp	SHORT $LN6@Random_Map
$LN5@Random_Map:
	push	ecx
	movss	xmm0, DWORD PTR __real@42a00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c2a00000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+148]
	call	edx
	add	esp, 8
	fstp	DWORD PTR tv89[ebp]
$LN6@Random_Map:
	cmp	DWORD PTR _Random$[ebp], 0
	jne	$LN9@Random_Map
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv188[ebp]
	movss	xmm0, DWORD PTR tv188[ebp]
	cvtss2sd xmm0, xmm0
	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN7@Random_Map
	mov	DWORD PTR tv130[ebp], 1
	jmp	SHORT $LN8@Random_Map
$LN7@Random_Map:
	mov	DWORD PTR tv130[ebp], -1
$LN8@Random_Map:
	cvtsi2ss xmm0, DWORD PTR tv130[ebp]
	push	ecx
	movss	xmm1, DWORD PTR __real@42a00000
	movss	DWORD PTR [esp], xmm1
	push	ecx
	movss	xmm1, DWORD PTR __real@42960000
	movss	DWORD PTR [esp], xmm1
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+148]
	movss	DWORD PTR tv218[ebp], xmm0
	call	eax
	add	esp, 8
	fstp	DWORD PTR tv199[ebp]
	movss	xmm0, DWORD PTR tv218[ebp]
	mulss	xmm0, DWORD PTR tv199[ebp]
	movss	DWORD PTR tv141[ebp], xmm0
	jmp	SHORT $LN10@Random_Map
$LN9@Random_Map:
	push	ecx
	movss	xmm0, DWORD PTR __real@42a00000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c2a00000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+148]
	call	edx
	add	esp, 8
	fstp	DWORD PTR tv141[ebp]
$LN10@Random_Map:
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR tv89[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR tv141[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2138 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Random_Map_Position@@YA?AVVector3@@XZ ENDP		; Random_Map_Position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?CheckForDroneTarget@RenCometBustersGameObjects@@QAEPAVScriptableGameObj@@PAV2@ABVVector3@@PAM@Z
_TEXT	SEGMENT
tv172 = -100						; size = 4
$T1 = -96						; size = 12
_Dist$2 = -20						; size = 4
_Closest$ = -16						; size = 4
_Current$ = -12						; size = 4
_MinDist$ = -8						; size = 4
_this$ = -4						; size = 4
_Obj$ = 8						; size = 4
_Position$ = 12						; size = 4
_TargetSize$ = 16					; size = 4
?CheckForDroneTarget@RenCometBustersGameObjects@@QAEPAVScriptableGameObj@@PAV2@ABVVector3@@PAM@Z PROC ; RenCometBustersGameObjects::CheckForDroneTarget, COMDAT
; _this$ = ecx

; 2103 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 100				; 00000064H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2104 : 		if (!ObjectsList)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN9@CheckForDr

; 2105 : 			return NULL;

	xor	eax, eax
	jmp	$LN10@CheckForDr
$LN9@CheckForDr:

; 2106 : 		float MinDist = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _MinDist$[ebp], xmm0

; 2107 : 		AnObject *Current = ObjectsList,*Closest = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Current$[ebp], ecx
	mov	DWORD PTR _Closest$[ebp], 0
$LN8@CheckForDr:

; 2108 : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	$LN7@CheckForDr

; 2109 : 		{
; 2110 : 			if (!Current->AllowReplaceTime && Obj != Current->Object && Current->Type != TheMoon && Current->Type != CMTPowerup && Current->Type != CargoShip && Current->Type != PlayerDrone && Current->Type != PlayerDroneShield && Current->Type != NormalPlayerShip && Current->Type != PlayerShield && Current->Type != PlayerCloak && Current->Type != PlayerSuper && Current->Type != PlayerShipJumpable && Current->Type != PlayerShipDisrupter)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	$LN3@CheckForDr
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR _Obj$[ebp]
	cmp	ecx, DWORD PTR [eax]
	je	$LN3@CheckForDr
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 4
	je	$LN3@CheckForDr
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 9
	je	$LN3@CheckForDr
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 10			; 0000000aH
	je	$LN3@CheckForDr
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 12			; 0000000cH
	je	$LN3@CheckForDr
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 13			; 0000000dH
	je	$LN3@CheckForDr
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	$LN3@CheckForDr
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 5
	je	$LN3@CheckForDr
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 7
	je	$LN3@CheckForDr
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 8
	je	SHORT $LN3@CheckForDr
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 14			; 0000000eH
	je	SHORT $LN3@CheckForDr
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 16			; 00000010H
	je	SHORT $LN3@CheckForDr

; 2111 : 			{
; 2112 : 				float Dist = JmgUtility::SimpleDistance(Position,Commands->Get_Position(Current->Object))-Current->Size;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _Position$[ebp]
	push	edx
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR tv172[ebp]
	movss	xmm0, DWORD PTR tv172[ebp]
	mov	eax, DWORD PTR _Current$[ebp]
	subss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR _Dist$2[ebp], xmm0

; 2113 : 				if (!Closest)

	cmp	DWORD PTR _Closest$[ebp], 0
	jne	SHORT $LN5@CheckForDr

; 2114 : 				{
; 2115 : 					Closest = Current;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	DWORD PTR _Closest$[ebp], eax

; 2116 : 					MinDist = Dist;

	movss	xmm0, DWORD PTR _Dist$2[ebp]
	movss	DWORD PTR _MinDist$[ebp], xmm0
	jmp	SHORT $LN3@CheckForDr
$LN5@CheckForDr:

; 2117 : 				}
; 2118 : 				else if (MinDist > Dist)

	movss	xmm0, DWORD PTR _MinDist$[ebp]
	comiss	xmm0, DWORD PTR _Dist$2[ebp]
	jbe	SHORT $LN3@CheckForDr

; 2119 : 				{
; 2120 : 					Closest = Current;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	DWORD PTR _Closest$[ebp], eax

; 2121 : 					MinDist = Dist;

	movss	xmm0, DWORD PTR _Dist$2[ebp]
	movss	DWORD PTR _MinDist$[ebp], xmm0
$LN3@CheckForDr:

; 2122 : 				}
; 2123 : 			}
; 2124 : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$[ebp], ecx

; 2125 : 		}

	jmp	$LN8@CheckForDr
$LN7@CheckForDr:

; 2126 : 		if (!Closest || 2500 < MinDist)

	cmp	DWORD PTR _Closest$[ebp], 0
	je	SHORT $LN1@CheckForDr
	movss	xmm0, DWORD PTR _MinDist$[ebp]
	comiss	xmm0, DWORD PTR __real@451c4000
	jbe	SHORT $LN2@CheckForDr
$LN1@CheckForDr:

; 2127 : 			return NULL;

	xor	eax, eax
	jmp	SHORT $LN10@CheckForDr
$LN2@CheckForDr:

; 2128 : 		*TargetSize = Closest->RealSize;

	mov	eax, DWORD PTR _TargetSize$[ebp]
	mov	ecx, DWORD PTR _Closest$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx

; 2129 : 		return Closest->Object;

	mov	eax, DWORD PTR _Closest$[ebp]
	mov	eax, DWORD PTR [eax]
$LN10@CheckForDr:

; 2130 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CheckForDroneTarget@RenCometBustersGameObjects@@QAEPAVScriptableGameObj@@PAV2@ABVVector3@@PAM@Z ENDP ; RenCometBustersGameObjects::CheckForDroneTarget
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?FindDroneAvoidObjectInRange@RenCometBustersGameObjects@@QAEHPAVScriptableGameObj@@PAVVector3@@MPAM@Z
_TEXT	SEGMENT
tv166 = -108						; size = 4
$T1 = -104						; size = 12
_Dist$2 = -28						; size = 4
_Target$3 = -24						; size = 4
_TempID$4 = -20						; size = 4
_Current$ = -16						; size = 4
_MinDist$ = -12						; size = 4
_ReturnID$ = -8						; size = 4
_this$ = -4						; size = 4
_Obj$ = 8						; size = 4
_Position$ = 12						; size = 4
_Range$ = 16						; size = 4
__MinDist$ = 20						; size = 4
?FindDroneAvoidObjectInRange@RenCometBustersGameObjects@@QAEHPAVScriptableGameObj@@PAVVector3@@MPAM@Z PROC ; RenCometBustersGameObjects::FindDroneAvoidObjectInRange, COMDAT
; _this$ = ecx

; 2071 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2072 : 		if (!ObjectsList)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN8@FindDroneA

; 2073 : 			return 0;

	xor	eax, eax
	jmp	$LN9@FindDroneA
$LN8@FindDroneA:

; 2074 : 		int ReturnID = 0;

	mov	DWORD PTR _ReturnID$[ebp], 0

; 2075 : 		float MinDist = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _MinDist$[ebp], xmm0

; 2076 : 		AnObject *Current = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Current$[ebp], ecx
$LN7@FindDroneA:

; 2077 : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	$LN6@FindDroneA

; 2078 : 		{
; 2079 : 			int TempID = Current->ObjectID;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _TempID$4[ebp], ecx

; 2080 : 			GameObject *Target = Current->Object;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Target$3[ebp], ecx

; 2081 : 			if (Target && !Current->AllowReplaceTime && (Obj != Target && Current->Type != PlayerDrone && Current->Type != PlayerDroneShield && Current->Type != CMTPowerup && Current->Type != NormalPlayerShip && Current->Type != PlayerShield && Current->Type != PlayerCloak && Current->Type != PlayerSuper && Current->Type != PlayerShipJumpable && Current->Type != PlayerShipDisrupter))

	cmp	DWORD PTR _Target$3[ebp], 0
	je	$LN2@FindDroneA
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	$LN2@FindDroneA
	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	eax, DWORD PTR _Target$3[ebp]
	je	$LN2@FindDroneA
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 12			; 0000000cH
	je	$LN2@FindDroneA
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 13			; 0000000dH
	je	$LN2@FindDroneA
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 9
	je	$LN2@FindDroneA
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	$LN2@FindDroneA
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 5
	je	$LN2@FindDroneA
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 7
	je	$LN2@FindDroneA
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 8
	je	SHORT $LN2@FindDroneA
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 14			; 0000000eH
	je	SHORT $LN2@FindDroneA
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 16			; 00000010H
	je	SHORT $LN2@FindDroneA

; 2082 : 			{
; 2083 : 				float Dist = JmgUtility::SimpleDistance(*Position,Commands->Get_Position(Target))-Current->Size;

	mov	eax, DWORD PTR _Target$3[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _Position$[ebp]
	push	ecx
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR tv166[ebp]
	movss	xmm0, DWORD PTR tv166[ebp]
	mov	edx, DWORD PTR _Current$[ebp]
	subss	xmm0, DWORD PTR [edx+4]
	movss	DWORD PTR _Dist$2[ebp], xmm0

; 2084 : 				if (!ReturnID)

	cmp	DWORD PTR _ReturnID$[ebp], 0
	jne	SHORT $LN4@FindDroneA

; 2085 : 				{
; 2086 : 					ReturnID = TempID;

	mov	eax, DWORD PTR _TempID$4[ebp]
	mov	DWORD PTR _ReturnID$[ebp], eax

; 2087 : 					MinDist = Dist;

	movss	xmm0, DWORD PTR _Dist$2[ebp]
	movss	DWORD PTR _MinDist$[ebp], xmm0
	jmp	SHORT $LN2@FindDroneA
$LN4@FindDroneA:

; 2088 : 				}
; 2089 : 				else if (MinDist > Dist)

	movss	xmm0, DWORD PTR _MinDist$[ebp]
	comiss	xmm0, DWORD PTR _Dist$2[ebp]
	jbe	SHORT $LN2@FindDroneA

; 2090 : 				{
; 2091 : 					ReturnID = TempID;

	mov	eax, DWORD PTR _TempID$4[ebp]
	mov	DWORD PTR _ReturnID$[ebp], eax

; 2092 : 					MinDist = Dist;

	movss	xmm0, DWORD PTR _Dist$2[ebp]
	movss	DWORD PTR _MinDist$[ebp], xmm0
$LN2@FindDroneA:

; 2093 : 				}
; 2094 : 			}
; 2095 : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$[ebp], ecx

; 2096 : 		}

	jmp	$LN7@FindDroneA
$LN6@FindDroneA:

; 2097 : 		*_MinDist = MinDist;

	mov	eax, DWORD PTR __MinDist$[ebp]
	movss	xmm0, DWORD PTR _MinDist$[ebp]
	movss	DWORD PTR [eax], xmm0

; 2098 : 		if (Range < MinDist)

	movss	xmm0, DWORD PTR _MinDist$[ebp]
	comiss	xmm0, DWORD PTR _Range$[ebp]
	jbe	SHORT $LN1@FindDroneA

; 2099 : 			return 0;

	xor	eax, eax
	jmp	SHORT $LN9@FindDroneA
$LN1@FindDroneA:

; 2100 : 		return ReturnID;

	mov	eax, DWORD PTR _ReturnID$[ebp]
$LN9@FindDroneA:

; 2101 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?FindDroneAvoidObjectInRange@RenCometBustersGameObjects@@QAEHPAVScriptableGameObj@@PAVVector3@@MPAM@Z ENDP ; RenCometBustersGameObjects::FindDroneAvoidObjectInRange
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?KillInRange@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@ABVVector3@@MM@Z
_TEXT	SEGMENT
$T1 = -88						; size = 12
_Dist$2 = -12						; size = 4
_Current$ = -8						; size = 4
_this$ = -4						; size = 4
_Player$ = 8						; size = 4
_Position$ = 12						; size = 4
_MinRange$ = 16						; size = 4
_MaxRange$ = 20						; size = 4
?KillInRange@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@ABVVector3@@MM@Z PROC ; RenCometBustersGameObjects::KillInRange, COMDAT
; _this$ = ecx

; 2024 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
$KillInRangeCheckStart$9:

; 2025 : KillInRangeCheckStart:
; 2026 : 		AnObject *Current = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Current$[ebp], ecx
$LN6@KillInRang:

; 2027 : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	$LN5@KillInRang

; 2028 : 		{
; 2029 : 			if (!Current->AllowReplaceTime && (Current->Type == Asteroid || Current->Type == UFO || Current->Type == UFOBoss || Current->Type == PlayerDrone || Current->Type == Mine || Current->Type == MineBoss || Current->Type == PlayerCloak || Current->Type == NormalPlayerShip || Current->Type == PlayerShipJumpable || Current->Type == PlayerShipDisrupter))

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	$LN1@KillInRang
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 2
	je	SHORT $LN3@KillInRang
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 1
	je	SHORT $LN3@KillInRang
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 6
	je	SHORT $LN3@KillInRang
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 12			; 0000000cH
	je	SHORT $LN3@KillInRang
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 3
	je	SHORT $LN3@KillInRang
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 11			; 0000000bH
	je	SHORT $LN3@KillInRang
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 7
	je	SHORT $LN3@KillInRang
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN3@KillInRang
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 14			; 0000000eH
	je	SHORT $LN3@KillInRang
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 16			; 00000010H
	jne	$LN1@KillInRang
$LN3@KillInRang:

; 2030 : 			{
; 2031 : 				float Dist = JmgUtility::SimpleDistance(Position,Commands->Get_Position(Current->Object));

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _Position$[ebp]
	push	edx
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR _Dist$2[ebp]

; 2032 : 				if (Dist <= MaxRange && Dist >= MinRange)

	movss	xmm0, DWORD PTR _MaxRange$[ebp]
	comiss	xmm0, DWORD PTR _Dist$2[ebp]
	jb	SHORT $LN1@KillInRang
	movss	xmm0, DWORD PTR _Dist$2[ebp]
	comiss	xmm0, DWORD PTR _MinRange$[ebp]
	jb	SHORT $LN1@KillInRang

; 2033 : 				{
; 2034 : 					if (_stricmp(Get_Skin(Current->Object),"Blamo"))

	push	OFFSET ??_C@_05HBJPNAAK@Blamo?$AA@
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?Get_Skin@@YAPBDPAVScriptableGameObj@@@Z ; Get_Skin
	add	esp, 4
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN1@KillInRang

; 2035 : 					{
; 2036 : 						SpecialApplyDamage(Current->Object,1.0f,"None",Player);

	mov	eax, DWORD PTR _Player$[ebp]
	push	eax
	push	OFFSET ??_C@_04OHJIHAFH@None?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SpecialApplyDamage@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MPBD0@Z ; RenCometBustersGameObjects::SpecialApplyDamage

; 2037 : 						goto KillInRangeCheckStart;

	jmp	$KillInRangeCheckStart$9
$LN1@KillInRang:

; 2038 : 					}
; 2039 : 				}
; 2040 : 			}
; 2041 : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$[ebp], ecx

; 2042 : 		}

	jmp	$LN6@KillInRang
$LN5@KillInRang:

; 2043 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?KillInRange@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@ABVVector3@@MM@Z ENDP ; RenCometBustersGameObjects::KillInRange
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?FindMineTarget@RenCometBustersGameObjects@@QAEPAUAnObject@@PAVScriptableGameObj@@PAH@Z
_TEXT	SEGMENT
$T1 = -128						; size = 12
$T2 = -116						; size = 12
_TempPriority$3 = -40					; size = 4
_TempDistance$4 = -36					; size = 4
_Current$ = -32						; size = 4
_TargetType$ = -28					; size = 4
_Target$ = -24						; size = 4
_NearestDistance$ = -20					; size = 4
_MyPos$ = -16						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_MinDistance$ = 12					; size = 4
?FindMineTarget@RenCometBustersGameObjects@@QAEPAUAnObject@@PAVScriptableGameObj@@PAH@Z PROC ; RenCometBustersGameObjects::FindMineTarget, COMDAT
; _this$ = ecx

; 1969 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1970 : 		Vector3 MyPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _MyPos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1971 : 		float NearestDistance = 9999999.9f;

	movss	xmm0, DWORD PTR __real@4b189680
	movss	DWORD PTR _NearestDistance$[ebp], xmm0

; 1972 : 		AnObject *Target = NULL;

	mov	DWORD PTR _Target$[ebp], 0

; 1973 : 		ObjectType TargetType = NormalPlayerShip;

	mov	DWORD PTR _TargetType$[ebp], 0

; 1974 : 		AnObject *Current = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Current$[ebp], ecx
$LN16@FindMineTa:

; 1975 : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	$LN15@FindMineTa

; 1976 : 		{
; 1977 : 			if (!Current->AllowReplaceTime && Current->Object != obj && (Current->Type != PlayerCloak && Current->Type != Asteroid && Current->Type != TheMoon && Current->Type != CMTPowerup))

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	$LN4@FindMineTa
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _obj$[ebp]
	je	$LN4@FindMineTa
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 7
	je	$LN4@FindMineTa
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 2
	je	$LN4@FindMineTa
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 4
	je	$LN4@FindMineTa
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 9
	je	$LN4@FindMineTa

; 1978 : 			{
; 1979 : 				float TempDistance = JmgUtility::SimpleDistance(Commands->Get_Position(Current->Object),MyPos);

	lea	eax, DWORD PTR _MyPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+64]
	call	edx
	add	esp, 8
	push	eax
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR _TempDistance$4[ebp]

; 1980 : 				if (TempDistance <= 22500)

	movss	xmm0, DWORD PTR __real@46afc800
	comiss	xmm0, DWORD PTR _TempDistance$4[ebp]
	jb	$LN4@FindMineTa

; 1981 : 				{
; 1982 : 					if (!Target)

	cmp	DWORD PTR _Target$[ebp], 0
	jne	SHORT $LN12@FindMineTa

; 1983 : 					{	
; 1984 : 						Target = Current;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	DWORD PTR _Target$[ebp], eax

; 1985 : 						TargetType = Current->Type;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _TargetType$[ebp], ecx

; 1986 : 						NearestDistance = TempDistance;

	movss	xmm0, DWORD PTR _TempDistance$4[ebp]
	movss	DWORD PTR _NearestDistance$[ebp], xmm0

; 1987 : 					}
; 1988 : 					else

	jmp	$LN4@FindMineTa
$LN12@FindMineTa:

; 1989 : 					{
; 1990 : 						int TempPriority = PrioritizeTargets[Current->Type];

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR ?PrioritizeTargets@RenCometBustersGameObjects@@0PAHA[ecx*4]
	mov	DWORD PTR _TempPriority$3[ebp], edx

; 1991 : 						if (TempPriority > PrioritizeTargets[TargetType])

	mov	eax, DWORD PTR _TargetType$[ebp]
	mov	ecx, DWORD PTR _TempPriority$3[ebp]
	cmp	ecx, DWORD PTR ?PrioritizeTargets@RenCometBustersGameObjects@@0PAHA[eax*4]
	jle	SHORT $LN10@FindMineTa

; 1992 : 						{
; 1993 : 							Target = Current;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	DWORD PTR _Target$[ebp], eax

; 1994 : 							TargetType = Current->Type;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _TargetType$[ebp], ecx

; 1995 : 							NearestDistance = TempDistance;

	movss	xmm0, DWORD PTR _TempDistance$4[ebp]
	movss	DWORD PTR _NearestDistance$[ebp], xmm0
	jmp	SHORT $LN4@FindMineTa
$LN10@FindMineTa:

; 1996 : 						}
; 1997 : 						else if (TempPriority == PrioritizeTargets[TargetType])

	mov	eax, DWORD PTR _TargetType$[ebp]
	mov	ecx, DWORD PTR _TempPriority$3[ebp]
	cmp	ecx, DWORD PTR ?PrioritizeTargets@RenCometBustersGameObjects@@0PAHA[eax*4]
	jne	SHORT $LN4@FindMineTa

; 1998 : 						{
; 1999 : 							if ((Current->Type == Mine || Current->Type == MineBoss) && TempDistance > NearestDistance)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 3
	je	SHORT $LN6@FindMineTa
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 11			; 0000000bH
	jne	SHORT $LN7@FindMineTa
$LN6@FindMineTa:
	movss	xmm0, DWORD PTR _TempDistance$4[ebp]
	comiss	xmm0, DWORD PTR _NearestDistance$[ebp]
	jbe	SHORT $LN7@FindMineTa

; 2000 : 							{
; 2001 : 								Target = Current;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	DWORD PTR _Target$[ebp], eax

; 2002 : 								TargetType = Current->Type;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _TargetType$[ebp], ecx

; 2003 : 								NearestDistance = TempDistance;

	movss	xmm0, DWORD PTR _TempDistance$4[ebp]
	movss	DWORD PTR _NearestDistance$[ebp], xmm0
	jmp	SHORT $LN4@FindMineTa
$LN7@FindMineTa:

; 2004 : 							}
; 2005 : 							else if ((Current->Type != Mine && Current->Type != MineBoss) && TempDistance < NearestDistance)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 3
	je	SHORT $LN4@FindMineTa
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 11			; 0000000bH
	je	SHORT $LN4@FindMineTa
	movss	xmm0, DWORD PTR _NearestDistance$[ebp]
	comiss	xmm0, DWORD PTR _TempDistance$4[ebp]
	jbe	SHORT $LN4@FindMineTa

; 2006 : 							{
; 2007 : 								Target = Current;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	DWORD PTR _Target$[ebp], eax

; 2008 : 								TargetType = Current->Type;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _TargetType$[ebp], ecx

; 2009 : 								NearestDistance = TempDistance;

	movss	xmm0, DWORD PTR _TempDistance$4[ebp]
	movss	DWORD PTR _NearestDistance$[ebp], xmm0
$LN4@FindMineTa:

; 2010 : 							}
; 2011 : 						}
; 2012 : 					}
; 2013 : 				}
; 2014 : 			}
; 2015 : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$[ebp], ecx

; 2016 : 		}

	jmp	$LN16@FindMineTa
$LN15@FindMineTa:

; 2017 : 		if (TargetType == Mine || TargetType == MineBoss)

	cmp	DWORD PTR _TargetType$[ebp], 3
	je	SHORT $LN2@FindMineTa
	cmp	DWORD PTR _TargetType$[ebp], 11		; 0000000bH
	jne	SHORT $LN3@FindMineTa
$LN2@FindMineTa:

; 2018 : 			*MinDistance = Commands->Get_Random_Int(2,6);

	push	6
	push	2
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	edx, DWORD PTR _MinDistance$[ebp]
	mov	DWORD PTR [edx], eax
$LN3@FindMineTa:

; 2019 : 		if (Target)

	cmp	DWORD PTR _Target$[ebp], 0
	je	SHORT $LN1@FindMineTa

; 2020 : 			return Target;

	mov	eax, DWORD PTR _Target$[ebp]
	jmp	SHORT $LN17@FindMineTa
$LN1@FindMineTa:

; 2021 : 		return NULL;

	xor	eax, eax
$LN17@FindMineTa:

; 2022 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?FindMineTarget@RenCometBustersGameObjects@@QAEPAUAnObject@@PAVScriptableGameObj@@PAH@Z ENDP ; RenCometBustersGameObjects::FindMineTarget
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?GrantScoreToKiller@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MW4ObjectType@@H@Z
_TEXT	SEGMENT
tv380 = -120						; size = 4
tv363 = -120						; size = 4
tv348 = -120						; size = 4
tv340 = -120						; size = 4
tv332 = -120						; size = 4
tv321 = -120						; size = 4
tv313 = -120						; size = 4
tv305 = -120						; size = 4
tv297 = -120						; size = 4
tv290 = -120						; size = 4
tv288 = -120						; size = 4
tv280 = -120						; size = 4
tv272 = -120						; size = 4
tv264 = -120						; size = 4
tv257 = -120						; size = 4
tv243 = -120						; size = 4
tv214 = -120						; size = 4
tv179 = -120						; size = 4
tv142 = -120						; size = 4
_Player$1 = -52						; size = 4
_x$2 = -48						; size = 4
_x$3 = -44						; size = 4
_ID$4 = -40						; size = 4
_y$5 = -36						; size = 4
_x$6 = -32						; size = 4
_ID$7 = -28						; size = 4
_y$8 = -24						; size = 4
_x$9 = -20						; size = 4
_ID$10 = -16						; size = 4
_PresetID$11 = -12					; size = 4
_Driver$ = -8						; size = 4
_this$ = -4						; size = 4
_killer$ = 8						; size = 4
_Score$ = 12						; size = 4
_Type$ = 16						; size = 4
_Size$ = 20						; size = 4
?GrantScoreToKiller@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MW4ObjectType@@H@Z PROC ; RenCometBustersGameObjects::GrantScoreToKiller, COMDAT
; _this$ = ecx

; 1854 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 120				; 00000078H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1855 : 		if (!killer || !Score)

	cmp	DWORD PTR _killer$[ebp], 0
	je	SHORT $LN49@GrantScore
	movss	xmm0, DWORD PTR _Score$[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN50@GrantScore
$LN49@GrantScore:

; 1856 : 			return;

	jmp	$LN51@GrantScore
$LN50@GrantScore:

; 1857 : 		GameObject *Driver = Get_Vehicle_Driver(killer);

	mov	eax, DWORD PTR _killer$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	mov	DWORD PTR _Driver$[ebp], eax

; 1858 : 		if (!Commands->Is_A_Star(Driver) && !Commands->Is_A_Star(killer))

	mov	eax, DWORD PTR _Driver$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	jne	$LN26@GrantScore
	mov	eax, DWORD PTR _killer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	jne	$LN26@GrantScore

; 1859 : 		{
; 1860 : 			int PresetID = Commands->Get_Preset_ID(killer);

	mov	eax, DWORD PTR _killer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+112]
	call	edx
	add	esp, 4
	mov	DWORD PTR _PresetID$11[ebp], eax

; 1861 : 			if (PresetID == PLAYERDRONE_ID)

	cmp	DWORD PTR _PresetID$11[ebp], 1000000091	; 3b9aca5bH
	jne	$LN47@GrantScore

; 1862 : 			{// Killer was a player's drone
; 1863 : 				int ID = Commands->Get_ID(killer);

	mov	eax, DWORD PTR _killer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _ID$10[ebp], eax

; 1864 : 				Score *= 0.1f;

	movss	xmm0, DWORD PTR _Score$[ebp]
	mulss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR _Score$[ebp], xmm0

; 1865 : 				for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$9[ebp], 0
	jmp	SHORT $LN46@GrantScore
$LN45@GrantScore:
	mov	eax, DWORD PTR _x$9[ebp]
	add	eax, 1
	mov	DWORD PTR _x$9[ebp], eax
$LN46@GrantScore:
	cmp	DWORD PTR _x$9[ebp], 8
	jge	$LN44@GrantScore

; 1866 : 					for (int y = 0;y < 2;y++)

	mov	DWORD PTR _y$8[ebp], 0
	jmp	SHORT $LN43@GrantScore
$LN42@GrantScore:
	mov	eax, DWORD PTR _y$8[ebp]
	add	eax, 1
	mov	DWORD PTR _y$8[ebp], eax
$LN43@GrantScore:
	cmp	DWORD PTR _y$8[ebp], 2
	jge	$LN41@GrantScore

; 1867 : 						if (MiniGamePlayerControlSystem[x].Drones[y] == ID)

	mov	eax, DWORD PTR _x$9[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR _y$8[ebp]
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+ecx*4+368]
	cmp	edx, DWORD PTR _ID$10[ebp]
	jne	$LN40@GrantScore

; 1868 : 						{
; 1869 : 							MiniGamePlayerControlSystem[x].DroneScore += Score;

	mov	eax, DWORD PTR _x$9[ebp]
	imul	eax, 596				; 00000254H
	movss	xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+380]
	addss	xmm0, DWORD PTR _Score$[ebp]
	mov	ecx, DWORD PTR _x$9[ebp]
	imul	ecx, 596				; 00000254H
	movss	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+380], xmm0

; 1870 : 							RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->DroneKills++;

	mov	eax, DWORD PTR _x$9[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 384				; 00000180H
	mov	DWORD PTR tv142[ebp], eax
	mov	edx, DWORD PTR tv142[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv142[ebp]
	mov	DWORD PTR [ecx], eax

; 1871 : 							killer = Commands->Find_Object(MiniGamePlayerControlSystem[x].GamePlayerID);

	mov	eax, DWORD PTR _x$9[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _killer$[ebp], eax

; 1872 : 							x = MaxGamePlayerCount+1;

	mov	DWORD PTR _x$9[ebp], 9

; 1873 : 							break;

	jmp	SHORT $LN41@GrantScore
$LN40@GrantScore:

; 1874 : 						}
; 1875 : 			}

	jmp	$LN42@GrantScore
$LN41@GrantScore:
	jmp	$LN45@GrantScore
$LN44@GrantScore:

; 1876 : 			else if (PresetID == CARGOSHIPTURRET_ID)

	jmp	$LN26@GrantScore
$LN47@GrantScore:
	cmp	DWORD PTR _PresetID$11[ebp], 1000000077	; 3b9aca4dH
	jne	$LN38@GrantScore

; 1877 : 			{// Killer was a Cargo Ships Turret
; 1878 : 				int ID = Commands->Get_ID(killer);

	mov	eax, DWORD PTR _killer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _ID$7[ebp], eax

; 1879 : 				for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$6[ebp], 0
	jmp	SHORT $LN37@GrantScore
$LN36@GrantScore:
	mov	eax, DWORD PTR _x$6[ebp]
	add	eax, 1
	mov	DWORD PTR _x$6[ebp], eax
$LN37@GrantScore:
	cmp	DWORD PTR _x$6[ebp], 8
	jge	$LN35@GrantScore

; 1880 : 					for (int y = 0;y < 6;y++)

	mov	DWORD PTR _y$5[ebp], 0
	jmp	SHORT $LN34@GrantScore
$LN33@GrantScore:
	mov	eax, DWORD PTR _y$5[ebp]
	add	eax, 1
	mov	DWORD PTR _y$5[ebp], eax
$LN34@GrantScore:
	cmp	DWORD PTR _y$5[ebp], 6
	jge	$LN32@GrantScore

; 1881 : 						if (MiniGamePlayerControlSystem[x].CargoShipIDs[y] == ID)

	mov	eax, DWORD PTR _x$6[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR _y$5[ebp]
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+ecx*4+400]
	cmp	edx, DWORD PTR _ID$7[ebp]
	jne	$LN31@GrantScore

; 1882 : 						{
; 1883 : 							Score *= 0.05f;

	movss	xmm0, DWORD PTR _Score$[ebp]
	mulss	xmm0, DWORD PTR __real@3d4ccccd
	movss	DWORD PTR _Score$[ebp], xmm0

; 1884 : 							MiniGamePlayerControlSystem[x].CargoScore += Score;

	mov	eax, DWORD PTR _x$6[ebp]
	imul	eax, 596				; 00000254H
	movss	xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+428]
	addss	xmm0, DWORD PTR _Score$[ebp]
	mov	ecx, DWORD PTR _x$6[ebp]
	imul	ecx, 596				; 00000254H
	movss	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+428], xmm0

; 1885 : 							RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->CargoShipKills++;

	mov	eax, DWORD PTR _x$6[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 436				; 000001b4H
	mov	DWORD PTR tv179[ebp], eax
	mov	edx, DWORD PTR tv179[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv179[ebp]
	mov	DWORD PTR [ecx], eax

; 1886 : 							killer = Commands->Find_Object(MiniGamePlayerControlSystem[x].GamePlayerID);

	mov	eax, DWORD PTR _x$6[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _killer$[ebp], eax

; 1887 : 							x = MaxGamePlayerCount+1;

	mov	DWORD PTR _x$6[ebp], 9

; 1888 : 							break;

	jmp	SHORT $LN32@GrantScore
$LN31@GrantScore:

; 1889 : 						}
; 1890 : 			}

	jmp	$LN33@GrantScore
$LN32@GrantScore:
	jmp	$LN36@GrantScore
$LN35@GrantScore:

; 1891 : 			else if (PresetID == CARGOSHIP_ID)

	jmp	$LN26@GrantScore
$LN38@GrantScore:
	cmp	DWORD PTR _PresetID$11[ebp], 1000000074	; 3b9aca4aH
	jne	$LN26@GrantScore

; 1892 : 			{// Killer was a Cargo Ship
; 1893 : 				int ID = Commands->Get_ID(killer);

	mov	eax, DWORD PTR _killer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _ID$4[ebp], eax

; 1894 : 				for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$3[ebp], 0
	jmp	SHORT $LN28@GrantScore
$LN27@GrantScore:
	mov	eax, DWORD PTR _x$3[ebp]
	add	eax, 1
	mov	DWORD PTR _x$3[ebp], eax
$LN28@GrantScore:
	cmp	DWORD PTR _x$3[ebp], 8
	jge	$LN26@GrantScore

; 1895 : 					if (MiniGamePlayerControlSystem[x].CargoShipIDs[6] == ID)

	mov	eax, DWORD PTR _x$3[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, 4
	imul	ecx, 6
	mov	edx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+ecx+400]
	cmp	edx, DWORD PTR _ID$4[ebp]
	jne	$LN25@GrantScore

; 1896 : 					{
; 1897 : 						Score *= 0.025f;

	movss	xmm0, DWORD PTR _Score$[ebp]
	mulss	xmm0, DWORD PTR __real@3ccccccd
	movss	DWORD PTR _Score$[ebp], xmm0

; 1898 : 						MiniGamePlayerControlSystem[x].CargoScore += Score;

	mov	eax, DWORD PTR _x$3[ebp]
	imul	eax, 596				; 00000254H
	movss	xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+428]
	addss	xmm0, DWORD PTR _Score$[ebp]
	mov	ecx, DWORD PTR _x$3[ebp]
	imul	ecx, 596				; 00000254H
	movss	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+428], xmm0

; 1899 : 						RenCometBustersScoreControl.Get_Current_Player_Score_Node(MiniGamePlayerControlSystem[x].PlayerID)->CargoShipKills++;

	mov	eax, DWORD PTR _x$3[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+348]
	push	ecx
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 436				; 000001b4H
	mov	DWORD PTR tv214[ebp], eax
	mov	edx, DWORD PTR tv214[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv214[ebp]
	mov	DWORD PTR [ecx], eax

; 1900 : 						killer = Commands->Find_Object(MiniGamePlayerControlSystem[x].GamePlayerID);

	mov	eax, DWORD PTR _x$3[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _killer$[ebp], eax

; 1901 : 						break;

	jmp	SHORT $LN26@GrantScore
$LN25@GrantScore:

; 1902 : 					}
; 1903 : 			}

	jmp	$LN27@GrantScore
$LN26@GrantScore:

; 1904 : 		}
; 1905 : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$2[ebp], 0
	jmp	SHORT $LN24@GrantScore
$LN23@GrantScore:
	mov	eax, DWORD PTR _x$2[ebp]
	add	eax, 1
	mov	DWORD PTR _x$2[ebp], eax
$LN24@GrantScore:
	cmp	DWORD PTR _x$2[ebp], 8
	jge	$LN22@GrantScore

; 1906 : 		{
; 1907 : 			GameObject *Player = Commands->Find_Object(MiniGamePlayerControlSystem[x].GamePlayerID);

	mov	eax, DWORD PTR _x$2[ebp]
	imul	eax, 596				; 00000254H
	mov	ecx, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+20]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _Player$1[ebp], eax

; 1908 : 			if (!Player)

	cmp	DWORD PTR _Player$1[ebp], 0
	jne	SHORT $LN21@GrantScore

; 1909 : 				continue;

	jmp	SHORT $LN23@GrantScore
$LN21@GrantScore:

; 1910 : 			if (Player == killer)

	mov	eax, DWORD PTR _Player$1[ebp]
	cmp	eax, DWORD PTR _killer$[ebp]
	jne	$LN20@GrantScore

; 1911 : 			{
; 1912 : 				if (MiniGamePlayerControlSystem[x].DoublePointsTime)

	mov	eax, DWORD PTR _x$2[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+396], 0
	je	SHORT $LN19@GrantScore

; 1913 : 				{
; 1914 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(Get_Player_ID(Player))->DoublePointsPoints += (int)Score;

	mov	eax, DWORD PTR _Player$1[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 404				; 00000194H
	mov	DWORD PTR tv243[ebp], eax
	cvttss2si ecx, DWORD PTR _Score$[ebp]
	mov	edx, DWORD PTR tv243[ebp]
	add	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR tv243[ebp]
	mov	DWORD PTR [eax], ecx

; 1915 : 					Score *= 2;

	movss	xmm0, DWORD PTR _Score$[ebp]
	mulss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _Score$[ebp], xmm0
$LN19@GrantScore:

; 1916 : 				}
; 1917 : 				MiniGamePlayerControlSystem[x].Score += Score;

	mov	eax, DWORD PTR _x$2[ebp]
	imul	eax, 596				; 00000254H
	movss	xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60]
	addss	xmm0, DWORD PTR _Score$[ebp]
	mov	ecx, DWORD PTR _x$2[ebp]
	imul	ecx, 596				; 00000254H
	movss	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+60], xmm0

; 1918 : 				Commands->Give_Points(Player,Score,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR _Score$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Player$1[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+636]
	call	edx
	add	esp, 12					; 0000000cH
$AddKilledObjctToPlayersScoreListSwitch$55:

; 1919 : AddKilledObjctToPlayersScoreListSwitch:
; 1920 : 				switch (Type)

	mov	eax, DWORD PTR _Type$[ebp]
	mov	DWORD PTR tv257[ebp], eax
	cmp	DWORD PTR tv257[ebp], 16		; 00000010H
	ja	$LN17@GrantScore
	mov	ecx, DWORD PTR tv257[ebp]
	movzx	edx, BYTE PTR $LN53@GrantScore[ecx]
	jmp	DWORD PTR $LN54@GrantScore[edx*4]
$LN16@GrantScore:

; 1921 : 				{
; 1922 : 				case NormalPlayerShip:
; 1923 : 				case PlayerShield:
; 1924 : 				case PlayerCloak:
; 1925 : 				case PlayerSuper:
; 1926 : 				case PlayerShipJumpable:
; 1927 : 				case PlayerShipDisrupter:
; 1928 : 				case PlayerShipJumping:
; 1929 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(Get_Player_ID(Player))->OtherPlayers++;break;

	mov	eax, DWORD PTR _Player$1[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 296				; 00000128H
	mov	DWORD PTR tv264[ebp], eax
	mov	ecx, DWORD PTR tv264[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR tv264[ebp]
	mov	DWORD PTR [eax], edx
	jmp	$LN17@GrantScore
$LN15@GrantScore:

; 1930 : 				case UFO:case UFOBoss:
; 1931 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(Get_Player_ID(Player))->UFO++;break;

	mov	eax, DWORD PTR _Player$1[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 288				; 00000120H
	mov	DWORD PTR tv272[ebp], eax
	mov	ecx, DWORD PTR tv272[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR tv272[ebp]
	mov	DWORD PTR [eax], edx
	jmp	$LN17@GrantScore
$LN14@GrantScore:

; 1932 : 				case Mine:case MineBoss:
; 1933 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(Get_Player_ID(Player))->Mine++;break;

	mov	eax, DWORD PTR _Player$1[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 292				; 00000124H
	mov	DWORD PTR tv280[ebp], eax
	mov	ecx, DWORD PTR tv280[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR tv280[ebp]
	mov	DWORD PTR [eax], edx
	jmp	$LN17@GrantScore
$LN13@GrantScore:

; 1934 : 				case Asteroid:
; 1935 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(Get_Player_ID(Player))->TotalComets++;

	mov	eax, DWORD PTR _Player$1[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 312				; 00000138H
	mov	DWORD PTR tv288[ebp], eax
	mov	ecx, DWORD PTR tv288[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR tv288[ebp]
	mov	DWORD PTR [eax], edx

; 1936 : 					switch (Size)

	mov	eax, DWORD PTR _Size$[ebp]
	mov	DWORD PTR tv290[ebp], eax
	cmp	DWORD PTR tv290[ebp], 0
	je	SHORT $LN10@GrantScore
	cmp	DWORD PTR tv290[ebp], 1
	je	SHORT $LN9@GrantScore
	cmp	DWORD PTR tv290[ebp], 2
	je	SHORT $LN8@GrantScore
	jmp	$LN7@GrantScore
$LN10@GrantScore:

; 1937 : 					{
; 1938 : 					case 0: RenCometBustersScoreControl.Get_Current_Player_Score_Node(Get_Player_ID(Player))->CometSmall++;break;

	mov	eax, DWORD PTR _Player$1[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 268				; 0000010cH
	mov	DWORD PTR tv297[ebp], eax
	mov	ecx, DWORD PTR tv297[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR tv297[ebp]
	mov	DWORD PTR [eax], edx
	jmp	$LN11@GrantScore
$LN9@GrantScore:

; 1939 : 					case 1: RenCometBustersScoreControl.Get_Current_Player_Score_Node(Get_Player_ID(Player))->CometMedium++;break;

	mov	eax, DWORD PTR _Player$1[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 272				; 00000110H
	mov	DWORD PTR tv305[ebp], eax
	mov	ecx, DWORD PTR tv305[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR tv305[ebp]
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN11@GrantScore
$LN8@GrantScore:

; 1940 : 					case 2: RenCometBustersScoreControl.Get_Current_Player_Score_Node(Get_Player_ID(Player))->CometLarge++;break;

	mov	eax, DWORD PTR _Player$1[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 276				; 00000114H
	mov	DWORD PTR tv313[ebp], eax
	mov	ecx, DWORD PTR tv313[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR tv313[ebp]
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN11@GrantScore
$LN7@GrantScore:

; 1941 : 					default: RenCometBustersScoreControl.Get_Current_Player_Score_Node(Get_Player_ID(Player))->CometHuge++;break;

	mov	eax, DWORD PTR _Player$1[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 280				; 00000118H
	mov	DWORD PTR tv321[ebp], eax
	mov	ecx, DWORD PTR tv321[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR tv321[ebp]
	mov	DWORD PTR [eax], edx
$LN11@GrantScore:

; 1942 : 					}break;

	jmp	$LN17@GrantScore
$LN6@GrantScore:

; 1943 : 				case TheMoon:
; 1944 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(Get_Player_ID(Player))->TheMoon++;break;

	mov	eax, DWORD PTR _Player$1[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 284				; 0000011cH
	mov	DWORD PTR tv332[ebp], eax
	mov	ecx, DWORD PTR tv332[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR tv332[ebp]
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN17@GrantScore
$LN5@GrantScore:

; 1945 : 				case CargoShip:
; 1946 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(Get_Player_ID(Player))->CargoShip++;break;

	mov	eax, DWORD PTR _Player$1[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 340				; 00000154H
	mov	DWORD PTR tv340[ebp], eax
	mov	ecx, DWORD PTR tv340[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR tv340[ebp]
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN17@GrantScore
$LN4@GrantScore:

; 1947 : 				case PlayerDrone: case PlayerDroneShield:
; 1948 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(Get_Player_ID(Player))->DronesKilled++;break;

	mov	eax, DWORD PTR _Player$1[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 388				; 00000184H
	mov	DWORD PTR tv348[ebp], eax
	mov	ecx, DWORD PTR tv348[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR tv348[ebp]
	mov	DWORD PTR [eax], edx
$LN17@GrantScore:

; 1949 : 				case CMTPowerup:break;
; 1950 : 				}
; 1951 : 				return;

	jmp	$LN51@GrantScore
$LN20@GrantScore:

; 1952 : 			}
; 1953 : 			if (Player == Driver)

	mov	eax, DWORD PTR _Player$1[ebp]
	cmp	eax, DWORD PTR _Driver$[ebp]
	jne	$LN2@GrantScore

; 1954 : 			{// shield or ram kill
; 1955 : 				if (MiniGamePlayerControlSystem[x].DoublePointsTime)

	mov	eax, DWORD PTR _x$2[ebp]
	imul	eax, 596				; 00000254H
	cmp	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+396], 0
	je	SHORT $LN1@GrantScore

; 1956 : 				{
; 1957 : 					RenCometBustersScoreControl.Get_Current_Player_Score_Node(Get_Player_ID(Player))->DoublePointsPoints += (int)Score;

	mov	eax, DWORD PTR _Player$1[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 404				; 00000194H
	mov	DWORD PTR tv363[ebp], eax
	cvttss2si ecx, DWORD PTR _Score$[ebp]
	mov	edx, DWORD PTR tv363[ebp]
	add	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR tv363[ebp]
	mov	DWORD PTR [eax], ecx

; 1958 : 					Score *= 2;

	movss	xmm0, DWORD PTR _Score$[ebp]
	mulss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _Score$[ebp], xmm0
$LN1@GrantScore:

; 1959 : 				}
; 1960 : 				Score *= 0.5f;

	movss	xmm0, DWORD PTR _Score$[ebp]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR _Score$[ebp], xmm0

; 1961 : 				MiniGamePlayerControlSystem[x].Score += Score;

	mov	eax, DWORD PTR _x$2[ebp]
	imul	eax, 596				; 00000254H
	movss	xmm0, DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[eax+60]
	addss	xmm0, DWORD PTR _Score$[ebp]
	mov	ecx, DWORD PTR _x$2[ebp]
	imul	ecx, 596				; 00000254H
	movss	DWORD PTR ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A[ecx+60], xmm0

; 1962 : 				RenCometBustersScoreControl.Get_Current_Player_Score_Node(Get_Player_ID(Player))->ObjectsRammed++;

	mov	eax, DWORD PTR _Player$1[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	push	eax
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
	add	eax, 348				; 0000015cH
	mov	DWORD PTR tv380[ebp], eax
	mov	ecx, DWORD PTR tv380[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR tv380[ebp]
	mov	DWORD PTR [eax], edx

; 1963 : 				Commands->Give_Points(Player,Score,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR _Score$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Player$1[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+636]
	call	edx
	add	esp, 12					; 0000000cH

; 1964 : 				goto AddKilledObjctToPlayersScoreListSwitch;

	jmp	$AddKilledObjctToPlayersScoreListSwitch$55
$LN2@GrantScore:

; 1965 : 			}
; 1966 : 		}

	jmp	$LN23@GrantScore
$LN22@GrantScore:
$LN51@GrantScore:

; 1967 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN54@GrantScore:
	DD	$LN16@GrantScore
	DD	$LN15@GrantScore
	DD	$LN13@GrantScore
	DD	$LN14@GrantScore
	DD	$LN6@GrantScore
	DD	$LN5@GrantScore
	DD	$LN4@GrantScore
	DD	$LN17@GrantScore
$LN53@GrantScore:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	4
	DB	0
	DB	1
	DB	0
	DB	0
	DB	7
	DB	5
	DB	3
	DB	6
	DB	6
	DB	0
	DB	0
	DB	0
?GrantScoreToKiller@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MW4ObjectType@@H@Z ENDP ; RenCometBustersGameObjects::GrantScoreToKiller
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?ClearAllObjects@RenCometBustersGameObjects@@QAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_Temp$ = -12						; size = 4
_Current$ = -8						; size = 4
_this$ = -4						; size = 4
?ClearAllObjects@RenCometBustersGameObjects@@QAEXXZ PROC ; RenCometBustersGameObjects::ClearAllObjects, COMDAT
; _this$ = ecx

; 1839 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1840 : 		AnObject *Current = ObjectsList,*Temp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Current$[ebp], ecx

; 1841 : 		ObjectsList = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN4@ClearAllOb:

; 1842 : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	$LN3@ClearAllOb

; 1843 : 		{
; 1844 : 			Temp = Current;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	DWORD PTR _Temp$[ebp], eax

; 1845 : 			if (!Current->AllowReplaceTime)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN2@ClearAllOb

; 1846 : 				Commands->Apply_Damage(Current->Object,99999.99f,"BlamoKiller",0);

	push	0
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@47c34fff
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+616]
	call	eax
	add	esp, 16					; 00000010H
$LN2@ClearAllOb:

; 1847 : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$[ebp], ecx

; 1848 : 			delete Temp;

	push	OFFSET ??_C@_0CM@IGIBBGO@RenCometBustersGameObjects?3?3Clea@
	push	1848					; 00000738H
	push	OFFSET ??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN8@ClearAllOb
	xor	ecx, ecx
	jne	SHORT $LN7@ClearAllOb
	push	1848					; 00000738H
	push	OFFSET ??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN7@ClearAllOb:
	jmp	SHORT $LN9@ClearAllOb
$LN8@ClearAllOb:
	mov	eax, DWORD PTR _Temp$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN9@ClearAllOb:

; 1849 : 		}

	jmp	$LN4@ClearAllOb
$LN3@ClearAllOb:

; 1850 : 		if (ObjectsList)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@ClearAllOb

; 1851 : 			ClearAllObjects();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearAllObjects@RenCometBustersGameObjects@@QAEXXZ ; RenCometBustersGameObjects::ClearAllObjects
$LN1@ClearAllOb:

; 1852 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearAllObjects@RenCometBustersGameObjects@@QAEXXZ ENDP ; RenCometBustersGameObjects::ClearAllObjects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?CheckIfLevelComplete@RenCometBustersGameObjects@@QAE_NXZ
_TEXT	SEGMENT
_Current$ = -8						; size = 4
_this$ = -4						; size = 4
?CheckIfLevelComplete@RenCometBustersGameObjects@@QAE_NXZ PROC ; RenCometBustersGameObjects::CheckIfLevelComplete, COMDAT
; _this$ = ecx

; 1828 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1829 : 		AnObject *Current = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Current$[ebp], ecx
$LN4@CheckIfLev:

; 1830 : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	SHORT $LN3@CheckIfLev

; 1831 : 		{
; 1832 : 			if (Current->AllowReplaceTime <= 0 && (Current->Type == Asteroid || Current->Type == UFOBoss || Current->Type == TheMoon || Current->Type == MineBoss))

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jg	SHORT $LN2@CheckIfLev
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 2
	je	SHORT $LN1@CheckIfLev
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 6
	je	SHORT $LN1@CheckIfLev
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 4
	je	SHORT $LN1@CheckIfLev
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 11			; 0000000bH
	jne	SHORT $LN2@CheckIfLev
$LN1@CheckIfLev:

; 1833 : 				return false;

	xor	al, al
	jmp	SHORT $LN5@CheckIfLev
$LN2@CheckIfLev:

; 1834 : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$[ebp], ecx

; 1835 : 		}

	jmp	SHORT $LN4@CheckIfLev
$LN3@CheckIfLev:

; 1836 : 		return true;

	mov	al, 1
$LN5@CheckIfLev:

; 1837 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?CheckIfLevelComplete@RenCometBustersGameObjects@@QAE_NXZ ENDP ; RenCometBustersGameObjects::CheckIfLevelComplete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?CountType@RenCometBustersGameObjects@@QAEHW4ObjectType@@@Z
_TEXT	SEGMENT
_Current$ = -12						; size = 4
_Count$ = -8						; size = 4
_this$ = -4						; size = 4
_Type$ = 8						; size = 4
?CountType@RenCometBustersGameObjects@@QAEHW4ObjectType@@@Z PROC ; RenCometBustersGameObjects::CountType, COMDAT
; _this$ = ecx

; 1816 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1817 : 		int Count = 0;

	mov	DWORD PTR _Count$[ebp], 0

; 1818 : 		AnObject *Current = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Current$[ebp], ecx
$LN3@CountType:

; 1819 : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	SHORT $LN2@CountType

; 1820 : 		{
; 1821 : 			if (Current->AllowReplaceTime <= 0 && Current->Type == Type)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jg	SHORT $LN1@CountType
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR _Type$[ebp]
	jne	SHORT $LN1@CountType

; 1822 : 				Count++;

	mov	eax, DWORD PTR _Count$[ebp]
	add	eax, 1
	mov	DWORD PTR _Count$[ebp], eax
$LN1@CountType:

; 1823 : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$[ebp], ecx

; 1824 : 		}

	jmp	SHORT $LN3@CountType
$LN2@CountType:

; 1825 : 		return Count;

	mov	eax, DWORD PTR _Count$[ebp]

; 1826 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?CountType@RenCometBustersGameObjects@@QAEHW4ObjectType@@@Z ENDP ; RenCometBustersGameObjects::CountType
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?AllowShipSpawn@RenCometBustersGameObjects@@QAEHHQAVVector3@@@Z
_TEXT	SEGMENT
$T1 = -144						; size = 12
$T2 = -132						; size = 12
_Temp$3 = -56						; size = 4
_x$4 = -52						; size = 4
_Temp$5 = -48						; size = 4
_Current$ = -44						; size = 4
_x$6 = -40						; size = 4
_Distance$ = -36					; size = 32
_this$ = -4						; size = 4
_PlayerNumber$ = 8					; size = 4
_SpawnSpots$ = 12					; size = 4
?AllowShipSpawn@RenCometBustersGameObjects@@QAEHHQAVVector3@@@Z PROC ; RenCometBustersGameObjects::AllowShipSpawn, COMDAT
; _this$ = ecx

; 1768 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 144				; 00000090H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1769 : 		float Distance[MaxGamePlayerCount];
; 1770 : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$6[ebp], 0
	jmp	SHORT $LN19@AllowShipS
$LN18@AllowShipS:
	mov	eax, DWORD PTR _x$6[ebp]
	add	eax, 1
	mov	DWORD PTR _x$6[ebp], eax
$LN19@AllowShipS:
	cmp	DWORD PTR _x$6[ebp], 8
	jge	SHORT $LN17@AllowShipS

; 1771 : 			Distance[x] = 9999999.0f;

	mov	eax, DWORD PTR _x$6[ebp]
	movss	xmm0, DWORD PTR __real@4b18967f
	movss	DWORD PTR _Distance$[ebp+eax*4], xmm0
	jmp	SHORT $LN18@AllowShipS
$LN17@AllowShipS:

; 1772 : 		AnObject *Current = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Current$[ebp], ecx
$LN16@AllowShipS:

; 1773 : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	$LN15@AllowShipS

; 1774 : 		{
; 1775 : 			if (!Current->AllowReplaceTime)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN12@AllowShipS

; 1776 : 			{
; 1777 : 				float Temp = JmgUtility::SimpleDistance(SpawnSpots[PlayerNumber],Commands->Get_Position(Current->Object));

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _PlayerNumber$[ebp]
	imul	edx, 12					; 0000000cH
	add	edx, DWORD PTR _SpawnSpots$[ebp]
	push	edx
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR _Temp$5[ebp]

; 1778 : 				if (Current->Type == TheMoon && Temp < 2626.5625f)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 4
	jne	SHORT $LN13@AllowShipS
	movss	xmm0, DWORD PTR __real@45242900
	comiss	xmm0, DWORD PTR _Temp$5[ebp]
	jbe	SHORT $LN13@AllowShipS

; 1779 : 				{
; 1780 : 					Distance[PlayerNumber] = 0;

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Distance$[ebp+eax*4], xmm0

; 1781 : 					break;

	jmp	SHORT $LN15@AllowShipS
$LN13@AllowShipS:

; 1782 : 				}
; 1783 : 				if (Current->Object && Temp < Distance[PlayerNumber])

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN12@AllowShipS
	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	movss	xmm0, DWORD PTR _Distance$[ebp+eax*4]
	comiss	xmm0, DWORD PTR _Temp$5[ebp]
	jbe	SHORT $LN12@AllowShipS

; 1784 : 					Distance[PlayerNumber] = Temp;

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	movss	xmm0, DWORD PTR _Temp$5[ebp]
	movss	DWORD PTR _Distance$[ebp+eax*4], xmm0
$LN12@AllowShipS:

; 1785 : 			}
; 1786 : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$[ebp], ecx

; 1787 : 		}

	jmp	$LN16@AllowShipS
$LN15@AllowShipS:

; 1788 : 		if (Distance[PlayerNumber] >= 625)

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	movss	xmm0, DWORD PTR _Distance$[ebp+eax*4]
	comiss	xmm0, DWORD PTR __real@441c4000
	jb	SHORT $LN11@AllowShipS

; 1789 : 			return PlayerNumber;

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	jmp	$LN20@AllowShipS
$LN11@AllowShipS:

; 1790 : 		for (int x = 0;x < MaxGamePlayerCount;x++)

	mov	DWORD PTR _x$4[ebp], 0
	jmp	SHORT $LN10@AllowShipS
$LN9@AllowShipS:
	mov	eax, DWORD PTR _x$4[ebp]
	add	eax, 1
	mov	DWORD PTR _x$4[ebp], eax
$LN10@AllowShipS:
	cmp	DWORD PTR _x$4[ebp], 8
	jge	$LN8@AllowShipS

; 1791 : 		{
; 1792 : 			Current = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Current$[ebp], ecx

; 1793 : 			if (PlayerNumber == x)

	mov	eax, DWORD PTR _PlayerNumber$[ebp]
	cmp	eax, DWORD PTR _x$4[ebp]
	jne	SHORT $LN7@AllowShipS

; 1794 : 				continue;

	jmp	SHORT $LN9@AllowShipS
$LN7@AllowShipS:

; 1795 : 			while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	$LN5@AllowShipS

; 1796 : 			{
; 1797 : 				if (!Current->AllowReplaceTime)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN2@AllowShipS

; 1798 : 				{
; 1799 : 					float Temp = JmgUtility::SimpleDistance(SpawnSpots[x],Commands->Get_Position(Current->Object));

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _x$4[ebp]
	imul	edx, 12					; 0000000cH
	add	edx, DWORD PTR _SpawnSpots$[ebp]
	push	edx
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR _Temp$3[ebp]

; 1800 : 					if (Current->Type == TheMoon && Temp < 2626.5625f)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 4
	jne	SHORT $LN3@AllowShipS
	movss	xmm0, DWORD PTR __real@45242900
	comiss	xmm0, DWORD PTR _Temp$3[ebp]
	jbe	SHORT $LN3@AllowShipS

; 1801 : 					{
; 1802 : 						Distance[x] = 0;

	mov	eax, DWORD PTR _x$4[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Distance$[ebp+eax*4], xmm0

; 1803 : 						break;

	jmp	SHORT $LN5@AllowShipS
$LN3@AllowShipS:

; 1804 : 					}
; 1805 : 					if (Temp < Distance[x])

	mov	eax, DWORD PTR _x$4[ebp]
	movss	xmm0, DWORD PTR _Distance$[ebp+eax*4]
	comiss	xmm0, DWORD PTR _Temp$3[ebp]
	jbe	SHORT $LN2@AllowShipS

; 1806 : 						Distance[x] = Temp;

	mov	eax, DWORD PTR _x$4[ebp]
	movss	xmm0, DWORD PTR _Temp$3[ebp]
	movss	DWORD PTR _Distance$[ebp+eax*4], xmm0
$LN2@AllowShipS:

; 1807 : 				}
; 1808 : 				Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$[ebp], ecx

; 1809 : 			}

	jmp	$LN7@AllowShipS
$LN5@AllowShipS:

; 1810 : 			if (Distance[x] >= 625)

	mov	eax, DWORD PTR _x$4[ebp]
	movss	xmm0, DWORD PTR _Distance$[ebp+eax*4]
	comiss	xmm0, DWORD PTR __real@441c4000
	jb	SHORT $LN1@AllowShipS

; 1811 : 				return x;

	mov	eax, DWORD PTR _x$4[ebp]
	jmp	SHORT $LN20@AllowShipS
$LN1@AllowShipS:

; 1812 : 		}

	jmp	$LN9@AllowShipS
$LN8@AllowShipS:

; 1813 : 		return MaxGamePlayerCount;

	mov	eax, 8
$LN20@AllowShipS:

; 1814 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?AllowShipSpawn@RenCometBustersGameObjects@@QAEHHQAVVector3@@@Z ENDP ; RenCometBustersGameObjects::AllowShipSpawn
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?FindNearestCollidableObject@RenCometBustersGameObjects@@QAEMPAVScriptableGameObj@@ABVVector3@@@Z
_TEXT	SEGMENT
tv144 = -100						; size = 4
$T1 = -96						; size = 12
_Dist$2 = -20						; size = 4
_Closest$ = -16						; size = 4
_Current$ = -12						; size = 4
_MinDist$ = -8						; size = 4
_this$ = -4						; size = 4
_Obj$ = 8						; size = 4
_Position$ = 12						; size = 4
?FindNearestCollidableObject@RenCometBustersGameObjects@@QAEMPAVScriptableGameObj@@ABVVector3@@@Z PROC ; RenCometBustersGameObjects::FindNearestCollidableObject, COMDAT
; _this$ = ecx

; 1742 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 100				; 00000064H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1743 : 		if (!ObjectsList)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN7@FindNeares

; 1744 : 			return 0.0f;

	fldz
	jmp	$LN8@FindNeares
$LN7@FindNeares:

; 1745 : 		float MinDist = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _MinDist$[ebp], xmm0

; 1746 : 		AnObject *Current = ObjectsList,*Closest = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Current$[ebp], ecx
	mov	DWORD PTR _Closest$[ebp], 0
$LN6@FindNeares:

; 1747 : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	$LN5@FindNeares

; 1748 : 		{
; 1749 : 			if (!Current->AllowReplaceTime && Obj != Current->Object && Current->Type != CMTPowerup && Current->Type != PlayerDrone && Current->Type != PlayerDroneShield)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	$LN1@FindNeares
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR _Obj$[ebp]
	cmp	ecx, DWORD PTR [eax]
	je	$LN1@FindNeares
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 9
	je	SHORT $LN1@FindNeares
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 12			; 0000000cH
	je	SHORT $LN1@FindNeares
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 13			; 0000000dH
	je	SHORT $LN1@FindNeares

; 1750 : 			{
; 1751 : 				float Dist = JmgUtility::SimpleDistance(Position,Commands->Get_Position(Current->Object))-Current->Size;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _Position$[ebp]
	push	edx
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR tv144[ebp]
	movss	xmm0, DWORD PTR tv144[ebp]
	mov	eax, DWORD PTR _Current$[ebp]
	subss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR _Dist$2[ebp], xmm0

; 1752 : 				if (!Closest)

	cmp	DWORD PTR _Closest$[ebp], 0
	jne	SHORT $LN3@FindNeares

; 1753 : 				{
; 1754 : 					Closest = Current;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	DWORD PTR _Closest$[ebp], eax

; 1755 : 					MinDist = Dist;

	movss	xmm0, DWORD PTR _Dist$2[ebp]
	movss	DWORD PTR _MinDist$[ebp], xmm0
	jmp	SHORT $LN1@FindNeares
$LN3@FindNeares:

; 1756 : 				}
; 1757 : 				else if (Dist < MinDist)

	movss	xmm0, DWORD PTR _MinDist$[ebp]
	comiss	xmm0, DWORD PTR _Dist$2[ebp]
	jbe	SHORT $LN1@FindNeares

; 1758 : 				{
; 1759 : 					Closest = Current;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	DWORD PTR _Closest$[ebp], eax

; 1760 : 					MinDist = Dist;

	movss	xmm0, DWORD PTR _Dist$2[ebp]
	movss	DWORD PTR _MinDist$[ebp], xmm0
$LN1@FindNeares:

; 1761 : 				}
; 1762 : 			}
; 1763 : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$[ebp], ecx

; 1764 : 		}

	jmp	$LN6@FindNeares
$LN5@FindNeares:

; 1765 : 		return MinDist;

	fld	DWORD PTR _MinDist$[ebp]
$LN8@FindNeares:

; 1766 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?FindNearestCollidableObject@RenCometBustersGameObjects@@QAEMPAVScriptableGameObj@@ABVVector3@@@Z ENDP ; RenCometBustersGameObjects::FindNearestCollidableObject
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?UpdateCollisions@RenCometBustersGameObjects@@QAEXXZ
_TEXT	SEGMENT
_OtherObjs$1 = -24					; size = 4
_OtherObjs$2 = -20					; size = 4
_OtherObjs$3 = -16					; size = 4
_OtherObjs$4 = -12					; size = 4
_Current$ = -8						; size = 4
_this$ = -4						; size = 4
?UpdateCollisions@RenCometBustersGameObjects@@QAEXXZ PROC ; RenCometBustersGameObjects::UpdateCollisions, COMDAT
; _this$ = ecx

; 1669 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1670 : 		AnObject *Current = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Current$[ebp], ecx
$LN42@UpdateColl:

; 1671 : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	SHORT $CollisionCheckStart$47

; 1672 : 		{
; 1673 : 			if (Current->AllowReplaceTime)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN40@UpdateColl

; 1674 : 			{
; 1675 : 				if (Current->AllowReplaceTime < 30 && Current->AllowReplaceTime != -1)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+20], 30			; 0000001eH
	jge	SHORT $LN40@UpdateColl
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+20], -1
	je	SHORT $LN40@UpdateColl

; 1676 : 					Current->AllowReplaceTime++;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	mov	edx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR [edx+20], ecx
$LN40@UpdateColl:

; 1677 : 			}
; 1678 : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$[ebp], ecx

; 1679 : 		}

	jmp	SHORT $LN42@UpdateColl
$CollisionCheckStart$47:

; 1680 : CollisionCheckStart:
; 1681 : 		Current = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Current$[ebp], ecx
$UpdateCollisions$48:

; 1682 : UpdateCollisions:
; 1683 : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	$LN43@UpdateColl

; 1684 : 		{
; 1685 : 			if (!Current->AllowReplaceTime)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	$LN36@UpdateColl

; 1686 : 			{
; 1687 : 				if (Current->Type == CargoShip || Current->Type == TheMoon || Current->Type == NormalPlayerShip || Current->Type == PlayerShield || Current->Type == PlayerCloak || Current->Type == PlayerSuper || Current->Type == PlayerShipJumpable || Current->Type == PlayerShipDisrupter)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 10			; 0000000aH
	je	SHORT $LN34@UpdateColl
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 4
	je	SHORT $LN34@UpdateColl
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN34@UpdateColl
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 5
	je	SHORT $LN34@UpdateColl
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 7
	je	SHORT $LN34@UpdateColl
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 8
	je	SHORT $LN34@UpdateColl
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 14			; 0000000eH
	je	SHORT $LN34@UpdateColl
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 16			; 00000010H
	jne	$LN35@UpdateColl
$LN34@UpdateColl:

; 1688 : 				{
; 1689 : 					AnObject *OtherObjs = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _OtherObjs$4[ebp], ecx
$LN33@UpdateColl:

; 1690 : 					while (OtherObjs)

	cmp	DWORD PTR _OtherObjs$4[ebp], 0
	je	$LN32@UpdateColl

; 1691 : 					{
; 1692 : 						if (Current->Type == CargoShip && OtherObjs->Type == TheMoon)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 10			; 0000000aH
	jne	SHORT $LN31@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$4[ebp]
	cmp	DWORD PTR [eax+16], 4
	jne	SHORT $LN31@UpdateColl

; 1693 : 							DoesCollide(Current,OtherObjs);

	mov	eax, DWORD PTR _OtherObjs$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoesCollide@RenCometBustersGameObjects@@QAE_NPAUAnObject@@0@Z ; RenCometBustersGameObjects::DoesCollide
	jmp	SHORT $LN30@UpdateColl
$LN31@UpdateColl:

; 1694 : 						else if (!OtherObjs->AllowReplaceTime && (OtherObjs->Type != PlayerDrone && OtherObjs->Type != PlayerDroneShield) || (Current->Type == CargoShip || Current->Type == TheMoon))

	mov	eax, DWORD PTR _OtherObjs$4[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN27@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$4[ebp]
	cmp	DWORD PTR [eax+16], 12			; 0000000cH
	je	SHORT $LN27@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$4[ebp]
	cmp	DWORD PTR [eax+16], 13			; 0000000dH
	jne	SHORT $LN28@UpdateColl
$LN27@UpdateColl:
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 10			; 0000000aH
	je	SHORT $LN28@UpdateColl
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 4
	jne	SHORT $LN30@UpdateColl
$LN28@UpdateColl:

; 1695 : 							if (Current != OtherObjs && OtherObjs->Type != TheMoon && OtherObjs->Type != CargoShip && OtherObjs->Type != CMTPowerup)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	eax, DWORD PTR _OtherObjs$4[ebp]
	je	SHORT $LN30@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$4[ebp]
	cmp	DWORD PTR [eax+16], 4
	je	SHORT $LN30@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$4[ebp]
	cmp	DWORD PTR [eax+16], 10			; 0000000aH
	je	SHORT $LN30@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$4[ebp]
	cmp	DWORD PTR [eax+16], 9
	je	SHORT $LN30@UpdateColl

; 1696 : 								if (DoesCollide(Current,OtherObjs))

	mov	eax, DWORD PTR _OtherObjs$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoesCollide@RenCometBustersGameObjects@@QAE_NPAUAnObject@@0@Z ; RenCometBustersGameObjects::DoesCollide
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN30@UpdateColl

; 1697 : 									goto CollisionCheckStart;

	jmp	$CollisionCheckStart$47
$LN30@UpdateColl:

; 1698 : 						OtherObjs = OtherObjs->next;

	mov	eax, DWORD PTR _OtherObjs$4[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _OtherObjs$4[ebp], ecx

; 1699 : 					}

	jmp	$LN33@UpdateColl
$LN32@UpdateColl:

; 1700 : 				}
; 1701 : 				else if (Current->Type == PlayerDrone || Current->Type == PlayerDroneShield)

	jmp	$LN36@UpdateColl
$LN35@UpdateColl:
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 12			; 0000000cH
	je	SHORT $LN20@UpdateColl
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 13			; 0000000dH
	jne	$LN21@UpdateColl
$LN20@UpdateColl:

; 1702 : 				{
; 1703 : 					AnObject *OtherObjs = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _OtherObjs$3[ebp], ecx
$LN19@UpdateColl:

; 1704 : 					while (OtherObjs)

	cmp	DWORD PTR _OtherObjs$3[ebp], 0
	je	$LN18@UpdateColl

; 1705 : 					{
; 1706 : 						if (!OtherObjs->AllowReplaceTime && (Current != OtherObjs && OtherObjs->Type != NormalPlayerShip && OtherObjs->Type != PlayerShipJumpable && OtherObjs->Type != PlayerShield && OtherObjs->Type != PlayerCloak && OtherObjs->Type != PlayerSuper && OtherObjs->Type != CMTPowerup && OtherObjs->Type != PlayerShipDisrupter))

	mov	eax, DWORD PTR _OtherObjs$3[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN17@UpdateColl
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	eax, DWORD PTR _OtherObjs$3[ebp]
	je	SHORT $LN17@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$3[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN17@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$3[ebp]
	cmp	DWORD PTR [eax+16], 14			; 0000000eH
	je	SHORT $LN17@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$3[ebp]
	cmp	DWORD PTR [eax+16], 5
	je	SHORT $LN17@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$3[ebp]
	cmp	DWORD PTR [eax+16], 7
	je	SHORT $LN17@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$3[ebp]
	cmp	DWORD PTR [eax+16], 8
	je	SHORT $LN17@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$3[ebp]
	cmp	DWORD PTR [eax+16], 9
	je	SHORT $LN17@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$3[ebp]
	cmp	DWORD PTR [eax+16], 16			; 00000010H
	je	SHORT $LN17@UpdateColl

; 1707 : 							if (DoesCollide(Current,OtherObjs))

	mov	eax, DWORD PTR _OtherObjs$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoesCollide@RenCometBustersGameObjects@@QAE_NPAUAnObject@@0@Z ; RenCometBustersGameObjects::DoesCollide
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN17@UpdateColl

; 1708 : 							{
; 1709 : 								Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$[ebp], ecx

; 1710 : 								goto UpdateCollisions;

	jmp	$UpdateCollisions$48
$LN17@UpdateColl:

; 1711 : 							}
; 1712 : 						OtherObjs = OtherObjs->next;

	mov	eax, DWORD PTR _OtherObjs$3[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _OtherObjs$3[ebp], ecx

; 1713 : 					}

	jmp	$LN19@UpdateColl
$LN18@UpdateColl:

; 1714 : 				}
; 1715 : 				else if (Current->Type == UFO || Current->Type == UFOBoss)

	jmp	$LN36@UpdateColl
$LN21@UpdateColl:
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 1
	je	SHORT $LN13@UpdateColl
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 6
	jne	SHORT $LN14@UpdateColl
$LN13@UpdateColl:

; 1716 : 				{
; 1717 : 					AnObject *OtherObjs = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _OtherObjs$2[ebp], ecx
$LN12@UpdateColl:

; 1718 : 					while (OtherObjs)

	cmp	DWORD PTR _OtherObjs$2[ebp], 0
	je	SHORT $LN11@UpdateColl

; 1719 : 					{
; 1720 : 						if (!OtherObjs->AllowReplaceTime && (OtherObjs->Type == Mine || OtherObjs->Type == MineBoss))

	mov	eax, DWORD PTR _OtherObjs$2[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN10@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$2[ebp]
	cmp	DWORD PTR [eax+16], 3
	je	SHORT $LN9@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$2[ebp]
	cmp	DWORD PTR [eax+16], 11			; 0000000bH
	jne	SHORT $LN10@UpdateColl
$LN9@UpdateColl:

; 1721 : 							if (DoesCollide(Current,OtherObjs))

	mov	eax, DWORD PTR _OtherObjs$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoesCollide@RenCometBustersGameObjects@@QAE_NPAUAnObject@@0@Z ; RenCometBustersGameObjects::DoesCollide
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN10@UpdateColl

; 1722 : 								goto CollisionCheckStart;

	jmp	$CollisionCheckStart$47
$LN10@UpdateColl:

; 1723 : 						OtherObjs = OtherObjs->next;

	mov	eax, DWORD PTR _OtherObjs$2[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _OtherObjs$2[ebp], ecx

; 1724 : 					}

	jmp	SHORT $LN12@UpdateColl
$LN11@UpdateColl:

; 1725 : 				}
; 1726 : 				else if (Current->Type == CMTPowerup)

	jmp	SHORT $LN36@UpdateColl
$LN14@UpdateColl:
	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+16], 9
	jne	SHORT $LN36@UpdateColl

; 1727 : 				{
; 1728 : 					AnObject *OtherObjs = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _OtherObjs$1[ebp], ecx
$LN5@UpdateColl:

; 1729 : 					while (OtherObjs)

	cmp	DWORD PTR _OtherObjs$1[ebp], 0
	je	SHORT $LN36@UpdateColl

; 1730 : 					{
; 1731 : 						if (!OtherObjs->AllowReplaceTime && (OtherObjs->Type == NormalPlayerShip || OtherObjs->Type == PlayerShield || OtherObjs->Type == PlayerCloak || OtherObjs->Type == PlayerSuper || OtherObjs->Type == PlayerShipJumpable || OtherObjs->Type == PlayerShipDisrupter))

	mov	eax, DWORD PTR _OtherObjs$1[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN3@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$1[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$1[ebp]
	cmp	DWORD PTR [eax+16], 5
	je	SHORT $LN2@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$1[ebp]
	cmp	DWORD PTR [eax+16], 7
	je	SHORT $LN2@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$1[ebp]
	cmp	DWORD PTR [eax+16], 8
	je	SHORT $LN2@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$1[ebp]
	cmp	DWORD PTR [eax+16], 14			; 0000000eH
	je	SHORT $LN2@UpdateColl
	mov	eax, DWORD PTR _OtherObjs$1[ebp]
	cmp	DWORD PTR [eax+16], 16			; 00000010H
	jne	SHORT $LN3@UpdateColl
$LN2@UpdateColl:

; 1732 : 							if (PickupPowerup(Current,OtherObjs))

	mov	eax, DWORD PTR _OtherObjs$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PickupPowerup@RenCometBustersGameObjects@@QAE_NPAUAnObject@@0@Z ; RenCometBustersGameObjects::PickupPowerup
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@UpdateColl

; 1733 : 								goto CollisionCheckStart;

	jmp	$CollisionCheckStart$47
$LN3@UpdateColl:

; 1734 : 						OtherObjs = OtherObjs->next;

	mov	eax, DWORD PTR _OtherObjs$1[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _OtherObjs$1[ebp], ecx

; 1735 : 					}

	jmp	SHORT $LN5@UpdateColl
$LN36@UpdateColl:

; 1736 : 				}
; 1737 : 			}
; 1738 : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$[ebp], ecx

; 1739 : 		}

	jmp	$UpdateCollisions$48
$LN43@UpdateColl:

; 1740 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateCollisions@RenCometBustersGameObjects@@QAEXXZ ENDP ; RenCometBustersGameObjects::UpdateCollisions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?PickupPowerup@RenCometBustersGameObjects@@QAE_NPAUAnObject@@0@Z
_TEXT	SEGMENT
tv144 = -104						; size = 4
$T1 = -100						; size = 12
$T2 = -88						; size = 12
_Other$ = -12						; size = 4
_Hitter$ = -8						; size = 4
_this$ = -4						; size = 4
_Obj$ = 8						; size = 4
_OtherObj$ = 12						; size = 4
?PickupPowerup@RenCometBustersGameObjects@@QAE_NPAUAnObject@@0@Z PROC ; RenCometBustersGameObjects::PickupPowerup, COMDAT
; _this$ = ecx

; 1656 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 104				; 00000068H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1657 : 		if (!Obj || !OtherObj || Obj->AllowReplaceTime || OtherObj->AllowReplaceTime)

	cmp	DWORD PTR _Obj$[ebp], 0
	je	SHORT $LN2@PickupPowe
	cmp	DWORD PTR _OtherObj$[ebp], 0
	je	SHORT $LN2@PickupPowe
	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN2@PickupPowe
	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN3@PickupPowe
$LN2@PickupPowe:

; 1658 : 			return true;

	mov	al, 1
	jmp	$LN4@PickupPowe
$LN3@PickupPowe:

; 1659 : 		GameObject *Hitter = Obj->Object;

	mov	eax, DWORD PTR _Obj$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Hitter$[ebp], ecx

; 1660 : 		GameObject *Other = OtherObj->Object;

	mov	eax, DWORD PTR _OtherObj$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Other$[ebp], ecx

; 1661 : 		if (JmgUtility::SimpleDistance(Commands->Get_Position(Hitter),Commands->Get_Position(Other)) <= Obj->Size+OtherObj->Size)

	mov	eax, DWORD PTR _Other$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _Hitter$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR tv144[ebp]
	mov	edx, DWORD PTR _Obj$[ebp]
	mov	eax, DWORD PTR _OtherObj$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	addss	xmm0, DWORD PTR [eax+4]
	comiss	xmm0, DWORD PTR tv144[ebp]
	jb	SHORT $LN1@PickupPowe

; 1662 : 		{
; 1663 : 			Commands->Apply_Damage(Hitter,99999.9f,"BlamoKiller",Other);

	mov	eax, DWORD PTR _Other$[ebp]
	push	eax
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@47c34ff3
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Hitter$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+616]
	call	eax
	add	esp, 16					; 00000010H

; 1664 : 			return true;

	mov	al, 1
	jmp	SHORT $LN4@PickupPowe
$LN1@PickupPowe:

; 1665 : 		}
; 1666 : 		return false;

	xor	al, al
$LN4@PickupPowe:

; 1667 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?PickupPowerup@RenCometBustersGameObjects@@QAE_NPAUAnObject@@0@Z ENDP ; RenCometBustersGameObjects::PickupPowerup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?DoesCollide@RenCometBustersGameObjects@@QAE_NPAUAnObject@@0@Z
_TEXT	SEGMENT
tv707 = -220						; size = 4
tv700 = -220						; size = 4
tv689 = -220						; size = 4
tv682 = -220						; size = 4
tv670 = -220						; size = 4
tv643 = -220						; size = 4
tv563 = -220						; size = 4
tv544 = -220						; size = 4
tv519 = -220						; size = 4
$T1 = -216						; size = 12
$T2 = -204						; size = 12
$T3 = -192						; size = 12
$T4 = -180						; size = 12
$T5 = -168						; size = 12
$T6 = -156						; size = 12
$T7 = -144						; size = 12
$T8 = -132						; size = 12
$T9 = -120						; size = 12
_Lockdown$10 = -44					; size = 4
_TempRotation$11 = -40					; size = 4
_OtherPos$12 = -36					; size = 12
_Pos$13 = -24						; size = 12
_Other$ = -12						; size = 4
_Hitter$ = -8						; size = 4
_this$ = -4						; size = 4
_Obj$ = 8						; size = 4
_OtherObj$ = 12						; size = 4
?DoesCollide@RenCometBustersGameObjects@@QAE_NPAUAnObject@@0@Z PROC ; RenCometBustersGameObjects::DoesCollide, COMDAT
; _this$ = ecx

; 1536 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1537 : 		if (!Obj || !OtherObj || Obj->AllowReplaceTime || OtherObj->AllowReplaceTime)

	cmp	DWORD PTR _Obj$[ebp], 0
	je	SHORT $LN45@DoesCollid
	cmp	DWORD PTR _OtherObj$[ebp], 0
	je	SHORT $LN45@DoesCollid
	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN45@DoesCollid
	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN46@DoesCollid
$LN45@DoesCollid:

; 1538 : 			return false;

	xor	al, al
	jmp	$LN47@DoesCollid
$LN46@DoesCollid:

; 1539 : 		GameObject *Hitter = Obj->Object;

	mov	eax, DWORD PTR _Obj$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Hitter$[ebp], ecx

; 1540 : 		GameObject *Other = OtherObj->Object;

	mov	eax, DWORD PTR _OtherObj$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Other$[ebp], ecx

; 1541 : 		if (Obj->Type == PlayerDroneShield && OtherObj->Type == PlayerDroneShield)

	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 13			; 0000000dH
	jne	SHORT $LN44@DoesCollid
	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 13			; 0000000dH
	jne	SHORT $LN44@DoesCollid

; 1542 : 			return false;

	xor	al, al
	jmp	$LN47@DoesCollid
$LN44@DoesCollid:

; 1543 : 		if (OtherObj->Type == PlayerShipJumping || Obj->Type == PlayerShipJumping)

	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 15			; 0000000fH
	je	SHORT $LN42@DoesCollid
	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 15			; 0000000fH
	jne	SHORT $LN43@DoesCollid
$LN42@DoesCollid:

; 1544 : 			return false;

	xor	al, al
	jmp	$LN47@DoesCollid
$LN43@DoesCollid:

; 1545 : 		if (Obj->Type == CargoShip && OtherObj->Type == TheMoon)

	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 10			; 0000000aH
	jne	$LN41@DoesCollid
	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 4
	jne	$LN41@DoesCollid

; 1546 : 		{
; 1547 : 			if (JmgUtility::SimpleDistance(Commands->Get_Position(Hitter),Commands->Get_Position(Other)) <= Obj->Size+OtherObj->Size-225.0f)

	mov	eax, DWORD PTR _Other$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _Hitter$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR tv519[ebp]
	mov	edx, DWORD PTR _Obj$[ebp]
	mov	eax, DWORD PTR _OtherObj$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	addss	xmm0, DWORD PTR [eax+4]
	subss	xmm0, DWORD PTR __real@43610000
	comiss	xmm0, DWORD PTR tv519[ebp]
	jb	SHORT $LN40@DoesCollid

; 1548 : 			{
; 1549 : 				Commands->Apply_Damage(Hitter,99999.9f,"BlamoKiller",Other);

	mov	eax, DWORD PTR _Other$[ebp]
	push	eax
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@47c34ff3
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Hitter$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+616]
	call	eax
	add	esp, 16					; 00000010H

; 1550 : 				return true;

	mov	al, 1
	jmp	$LN47@DoesCollid
$LN40@DoesCollid:

; 1551 : 			}
; 1552 : 			return false;

	xor	al, al
	jmp	$LN47@DoesCollid
$LN41@DoesCollid:

; 1553 : 		}
; 1554 : 		if (JmgUtility::SimpleDistance(Commands->Get_Position(Hitter),Commands->Get_Position(Other)) <= Obj->Size+OtherObj->Size)

	mov	eax, DWORD PTR _Other$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _Hitter$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	call	?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ; JmgUtility::SimpleDistance
	add	esp, 8
	fstp	DWORD PTR tv544[ebp]
	mov	edx, DWORD PTR _Obj$[ebp]
	mov	eax, DWORD PTR _OtherObj$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	addss	xmm0, DWORD PTR [eax+4]
	comiss	xmm0, DWORD PTR tv544[ebp]
	jb	$LN39@DoesCollid

; 1555 : 		{
; 1556 : 			if (Obj->Type == TheMoon && OtherObj->Type == CargoShip)

	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 4
	jne	SHORT $LN38@DoesCollid
	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 10			; 0000000aH
	jne	SHORT $LN38@DoesCollid

; 1557 : 				return false;

	xor	al, al
	jmp	$LN47@DoesCollid
$LN38@DoesCollid:

; 1558 : 			if (OtherObj->Type == PlayerShipJumpable || Obj->Type == PlayerShipJumpable)

	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 14			; 0000000eH
	je	SHORT $LN36@DoesCollid
	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 14			; 0000000eH
	jne	$LN37@DoesCollid
$LN36@DoesCollid:

; 1559 : 			{
; 1560 : 				if (OtherObj->Type == PlayerShipJumpable && Commands->Get_Random(0.0f,1.0f) < 0.5f)

	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 14			; 0000000eH
	jne	SHORT $LN35@DoesCollid
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	add	esp, 8
	fstp	DWORD PTR tv563[ebp]
	movss	xmm0, DWORD PTR __real@3f000000
	comiss	xmm0, DWORD PTR tv563[ebp]
	jbe	SHORT $LN35@DoesCollid

; 1561 : 					Commands->Send_Custom_Event(Obj->Object,OtherObj->Object,77454831,0,0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	77454831				; 049dddefH
	mov	eax, DWORD PTR _OtherObj$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _Obj$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+140]
	call	edx
	add	esp, 20					; 00000014H
	jmp	SHORT $LN31@DoesCollid
$LN35@DoesCollid:

; 1562 : 				else if (Obj->Type == PlayerShipJumpable)

	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 14			; 0000000eH
	jne	SHORT $LN33@DoesCollid

; 1563 : 					Commands->Send_Custom_Event(OtherObj->Object,Obj->Object,77454831,0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	77454831				; 049dddefH
	mov	eax, DWORD PTR _Obj$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _OtherObj$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+140]
	call	edx
	add	esp, 20					; 00000014H
	jmp	SHORT $LN31@DoesCollid
$LN33@DoesCollid:

; 1564 : 				else if (OtherObj->Type == PlayerShipJumpable)

	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 14			; 0000000eH
	jne	SHORT $LN31@DoesCollid

; 1565 : 					Commands->Send_Custom_Event(Obj->Object,OtherObj->Object,77454831,0,0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	77454831				; 049dddefH
	mov	eax, DWORD PTR _OtherObj$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _Obj$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+140]
	call	edx
	add	esp, 20					; 00000014H
$LN31@DoesCollid:

; 1566 : 				return false;

	xor	al, al
	jmp	$LN47@DoesCollid
$LN37@DoesCollid:

; 1567 : 			}
; 1568 : 			if (Obj->Type == TheMoon || Obj->Type == CargoShip)

	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 4
	je	SHORT $LN29@DoesCollid
	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 10			; 0000000aH
	jne	$LN30@DoesCollid
$LN29@DoesCollid:

; 1569 : 			{
; 1570 : 				if (OtherObj->Type == PlayerShipJumpable)

	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 14			; 0000000eH
	jne	SHORT $LN28@DoesCollid

; 1571 : 				{
; 1572 : 					Commands->Send_Custom_Event(Obj->Object,OtherObj->Object,77454831,0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	77454831				; 049dddefH
	mov	eax, DWORD PTR _OtherObj$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _Obj$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+140]
	call	edx
	add	esp, 20					; 00000014H

; 1573 : 					return false;

	xor	al, al
	jmp	$LN47@DoesCollid
$LN28@DoesCollid:

; 1574 : 				}
; 1575 : 				if (OtherObj->Type == Mine || OtherObj->Type == MineBoss || OtherObj->Type == TheMoon)

	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 3
	je	SHORT $LN26@DoesCollid
	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 11			; 0000000bH
	je	SHORT $LN26@DoesCollid
	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 4
	jne	SHORT $LN27@DoesCollid
$LN26@DoesCollid:

; 1576 : 					return false;

	xor	al, al
	jmp	$LN47@DoesCollid
$LN27@DoesCollid:

; 1577 : 				if (OtherObj->Type == PlayerDroneShield)

	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 13			; 0000000dH
	jne	SHORT $LN25@DoesCollid

; 1578 : 				{
; 1579 : 					Commands->Apply_Damage(Other,99999.9f,"BlamoKiller",Hitter);

	mov	eax, DWORD PTR _Hitter$[ebp]
	push	eax
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@47c34ff3
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Other$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+616]
	call	eax
	add	esp, 16					; 00000010H

; 1580 : 					return true;

	mov	al, 1
	jmp	$LN47@DoesCollid
$LN25@DoesCollid:

; 1581 : 				}
; 1582 : 				if (OtherObj->Type != Asteroid)

	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 2
	je	SHORT $LN24@DoesCollid

; 1583 : 					Commands->Apply_Damage(Hitter,1.0f,"none",Other);

	mov	eax, DWORD PTR _Other$[ebp]
	push	eax
	push	OFFSET ??_C@_04CGFJFPFD@none?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Hitter$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+616]
	call	eax
	add	esp, 16					; 00000010H
$LN24@DoesCollid:

; 1584 : 				if (OtherObj->Type != PlayerShield && OtherObj->Type != PlayerSuper)

	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 5
	je	SHORT $LN23@DoesCollid
	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 8
	je	SHORT $LN23@DoesCollid

; 1585 : 					Commands->Apply_Damage(Other,99999.9f,"BlamoKiller",Hitter);

	mov	eax, DWORD PTR _Hitter$[ebp]
	push	eax
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@47c34ff3
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Other$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+616]
	call	eax
	add	esp, 16					; 00000010H

; 1586 : 				else

	jmp	SHORT $LN21@DoesCollid
$LN23@DoesCollid:

; 1587 : 				{
; 1588 : 					Commands->Send_Custom_Event(Other,Other,7043453,25,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	25					; 00000019H
	push	7043453					; 006b797dH
	mov	eax, DWORD PTR _Other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Other$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 1589 : 					if (Commands->Get_Health(Hitter))

	mov	eax, DWORD PTR _Hitter$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv643[ebp]
	movss	xmm0, DWORD PTR tv643[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN21@DoesCollid

; 1590 : 						return false;

	xor	al, al
	jmp	$LN47@DoesCollid
$LN21@DoesCollid:

; 1591 : 				}
; 1592 : 			}
; 1593 : 			else

	jmp	$LN1@DoesCollid
$LN30@DoesCollid:

; 1594 : 			{
; 1595 : 				if (OtherObj->Type == PlayerShield && Obj->Type == PlayerShield)

	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 5
	jne	$LN19@DoesCollid
	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 5
	jne	$LN19@DoesCollid

; 1596 : 				{
; 1597 : 					Vector3 Pos = Commands->Get_Position(Obj->Object);

	mov	eax, DWORD PTR _Obj$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _Pos$13[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1598 : 					Vector3 OtherPos = Commands->Get_Position(OtherObj->Object);

	mov	eax, DWORD PTR _OtherObj$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _OtherPos$12[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1599 : 					Pos.X -= OtherPos.X;

	movss	xmm0, DWORD PTR _Pos$13[ebp]
	subss	xmm0, DWORD PTR _OtherPos$12[ebp]
	movss	DWORD PTR _Pos$13[ebp], xmm0

; 1600 : 					Pos.Y -= OtherPos.Y;

	movss	xmm0, DWORD PTR _Pos$13[ebp+4]
	subss	xmm0, DWORD PTR _OtherPos$12[ebp+4]
	movss	DWORD PTR _Pos$13[ebp+4], xmm0

; 1601 : 					float TempRotation = atan2(Pos.Y,Pos.X) * 180 / PI;

	push	ecx
	movss	xmm0, DWORD PTR _Pos$13[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _Pos$13[ebp+4]
	movss	DWORD PTR [esp], xmm0
	call	?atan2@@YAMMM@Z				; atan2
	add	esp, 8
	fstp	DWORD PTR tv670[ebp]
	movss	xmm0, DWORD PTR tv670[ebp]
	mulss	xmm0, DWORD PTR __real@43340000
	divss	xmm0, DWORD PTR __real@40490fdb
	movss	DWORD PTR _TempRotation$11[ebp], xmm0

; 1602 : 					Pos = Commands->Get_Position(Obj->Object);

	mov	eax, DWORD PTR _Obj$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T7[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _Pos$13[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 1603 : 					Pos.X += cos(TempRotation*PI180)*0.025f;

	movss	xmm0, DWORD PTR _TempRotation$11[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv682[ebp]
	movss	xmm0, DWORD PTR tv682[ebp]
	mulss	xmm0, DWORD PTR __real@3ccccccd
	addss	xmm0, DWORD PTR _Pos$13[ebp]
	movss	DWORD PTR _Pos$13[ebp], xmm0

; 1604 : 					Pos.Y += sin(TempRotation*PI180)*0.025f;

	movss	xmm0, DWORD PTR _TempRotation$11[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR tv689[ebp]
	movss	xmm0, DWORD PTR tv689[ebp]
	mulss	xmm0, DWORD PTR __real@3ccccccd
	addss	xmm0, DWORD PTR _Pos$13[ebp+4]
	movss	DWORD PTR _Pos$13[ebp+4], xmm0

; 1605 : 					TempRotation = JmgUtility::MathClampDegrees(TempRotation-180.0f);

	movss	xmm0, DWORD PTR _TempRotation$11[ebp]
	subss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?MathClampDegrees@JmgUtility@@SAMM@Z	; JmgUtility::MathClampDegrees
	add	esp, 4
	fstp	DWORD PTR _TempRotation$11[ebp]

; 1606 : 					OtherPos.X += cos(TempRotation*PI180)*0.025f;

	movss	xmm0, DWORD PTR _TempRotation$11[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv700[ebp]
	movss	xmm0, DWORD PTR tv700[ebp]
	mulss	xmm0, DWORD PTR __real@3ccccccd
	addss	xmm0, DWORD PTR _OtherPos$12[ebp]
	movss	DWORD PTR _OtherPos$12[ebp], xmm0

; 1607 : 					OtherPos.Y += sin(TempRotation*PI180)*0.025f;

	movss	xmm0, DWORD PTR _TempRotation$11[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR tv707[ebp]
	movss	xmm0, DWORD PTR tv707[ebp]
	mulss	xmm0, DWORD PTR __real@3ccccccd
	addss	xmm0, DWORD PTR _OtherPos$12[ebp+4]
	movss	DWORD PTR _OtherPos$12[ebp+4], xmm0

; 1608 : 					GameObject *Lockdown = Commands->Create_Object("Daves Arrow",Pos);

	lea	eax, DWORD PTR _Pos$13[ebp]
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Lockdown$10[ebp], eax

; 1609 : 					Commands->Set_Facing(Lockdown,Commands->Get_Facing(Obj->Object));

	mov	eax, DWORD PTR _Obj$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+72]
	call	eax
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _Lockdown$10[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+76]
	call	eax
	add	esp, 8

; 1610 : 					Commands->Attach_To_Object_Bone(Obj->Object,Lockdown,"origin");

	push	OFFSET ??_C@_06NHCMNMEH@origin?$AA@
	mov	eax, DWORD PTR _Lockdown$10[ebp]
	push	eax
	mov	ecx, DWORD PTR _Obj$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+572]
	call	ecx
	add	esp, 12					; 0000000cH

; 1611 : 					Commands->Attach_To_Object_Bone(Obj->Object,Lockdown,"origin");

	push	OFFSET ??_C@_06NHCMNMEH@origin?$AA@
	mov	eax, DWORD PTR _Lockdown$10[ebp]
	push	eax
	mov	ecx, DWORD PTR _Obj$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+572]
	call	ecx
	add	esp, 12					; 0000000cH

; 1612 : 					Commands->Destroy_Object(Lockdown);

	mov	eax, DWORD PTR _Lockdown$10[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4

; 1613 : 					Lockdown = Commands->Create_Object("Daves Arrow",OtherPos);

	lea	eax, DWORD PTR _OtherPos$12[ebp]
	push	eax
	push	OFFSET ??_C@_0M@IDABADGB@Daves?5Arrow?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _Lockdown$10[ebp], eax

; 1614 : 					Commands->Set_Facing(Lockdown,Commands->Get_Facing(OtherObj->Object));

	mov	eax, DWORD PTR _OtherObj$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+72]
	call	eax
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _Lockdown$10[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+76]
	call	eax
	add	esp, 8

; 1615 : 					Commands->Attach_To_Object_Bone(OtherObj->Object,Lockdown,"origin");

	push	OFFSET ??_C@_06NHCMNMEH@origin?$AA@
	mov	eax, DWORD PTR _Lockdown$10[ebp]
	push	eax
	mov	ecx, DWORD PTR _OtherObj$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+572]
	call	ecx
	add	esp, 12					; 0000000cH

; 1616 : 					Commands->Attach_To_Object_Bone(OtherObj->Object,Lockdown,"origin");

	push	OFFSET ??_C@_06NHCMNMEH@origin?$AA@
	mov	eax, DWORD PTR _Lockdown$10[ebp]
	push	eax
	mov	ecx, DWORD PTR _OtherObj$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+572]
	call	ecx
	add	esp, 12					; 0000000cH

; 1617 : 					Commands->Destroy_Object(Lockdown);

	mov	eax, DWORD PTR _Lockdown$10[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4

; 1618 : 					Commands->Send_Custom_Event(Hitter,Hitter,7043453,2142,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	2142					; 0000085eH
	push	7043453					; 006b797dH
	mov	eax, DWORD PTR _Hitter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Hitter$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 1619 : 					Commands->Send_Custom_Event(Other,Other,7043453,2142,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	2142					; 0000085eH
	push	7043453					; 006b797dH
	mov	eax, DWORD PTR _Other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Other$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 1620 : 					return false;

	xor	al, al
	jmp	$LN47@DoesCollid
$LN19@DoesCollid:

; 1621 : 				}
; 1622 : 				if (OtherObj->Type == Mine || OtherObj->Type == MineBoss)

	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 3
	je	SHORT $LN17@DoesCollid
	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 11			; 0000000bH
	jne	$LN16@DoesCollid
$LN17@DoesCollid:

; 1623 : 				{
; 1624 : 					Commands->Create_Explosion("Explosion_Drone",Commands->Get_Position(OtherObj->Object),0);

	push	0
	mov	eax, DWORD PTR _OtherObj$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T8[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0BA@FNBPLBFG@Explosion_Drone?$AA@
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+416]
	call	eax
	add	esp, 12					; 0000000cH

; 1625 : 					Commands->Destroy_Object(OtherObj->Object);

	mov	eax, DWORD PTR _OtherObj$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+92]
	call	eax
	add	esp, 4

; 1626 : 					if (Obj->Type == PlayerShield || Obj->Type == PlayerDroneShield)

	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 5
	je	SHORT $LN15@DoesCollid
	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 13			; 0000000dH
	jne	SHORT $LN16@DoesCollid
$LN15@DoesCollid:

; 1627 : 						Commands->Send_Custom_Event(Hitter,Hitter,7043453,10,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	10					; 0000000aH
	push	7043453					; 006b797dH
	mov	eax, DWORD PTR _Hitter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Hitter$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN16@DoesCollid:

; 1628 : 				}
; 1629 : 				if (Obj->Type == Mine || Obj->Type == MineBoss)

	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 3
	je	SHORT $LN13@DoesCollid
	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 11			; 0000000bH
	jne	$LN12@DoesCollid
$LN13@DoesCollid:

; 1630 : 				{
; 1631 : 					Commands->Create_Explosion("Explosion_Drone",Commands->Get_Position(Obj->Object),0);

	push	0
	mov	eax, DWORD PTR _Obj$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T9[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0BA@FNBPLBFG@Explosion_Drone?$AA@
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+416]
	call	eax
	add	esp, 12					; 0000000cH

; 1632 : 					Commands->Destroy_Object(Obj->Object);

	mov	eax, DWORD PTR _Obj$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+92]
	call	eax
	add	esp, 4

; 1633 : 					if (OtherObj->Type == PlayerShield || OtherObj->Type == PlayerDroneShield)

	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 5
	je	SHORT $LN11@DoesCollid
	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 13			; 0000000dH
	jne	SHORT $LN12@DoesCollid
$LN11@DoesCollid:

; 1634 : 						Commands->Send_Custom_Event(Other,Other,7043453,10,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	10					; 0000000aH
	push	7043453					; 006b797dH
	mov	eax, DWORD PTR _Other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Other$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN12@DoesCollid:

; 1635 : 				}
; 1636 : 				if (OtherObj->Type != PlayerShield && OtherObj->Type != PlayerSuper && OtherObj->Type != PlayerDroneShield && OtherObj->Type != TheMoon)

	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 5
	je	SHORT $LN10@DoesCollid
	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 8
	je	SHORT $LN10@DoesCollid
	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 13			; 0000000dH
	je	SHORT $LN10@DoesCollid
	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 4
	je	SHORT $LN10@DoesCollid

; 1637 : 					SpecialApplyDamage(Other,99999.9f,"BlamoKiller",Hitter);

	mov	eax, DWORD PTR _Hitter$[ebp]
	push	eax
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@47c34ff3
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Other$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SpecialApplyDamage@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MPBD0@Z ; RenCometBustersGameObjects::SpecialApplyDamage

; 1638 : 				else

	jmp	$LN6@DoesCollid
$LN10@DoesCollid:

; 1639 : 					if (Obj->Type == NormalPlayerShip || Obj->Type == PlayerCloak || Obj->Type == PlayerShipJumpable || Obj->Type == PlayerShipDisrupter)

	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN7@DoesCollid
	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 7
	je	SHORT $LN7@DoesCollid
	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 14			; 0000000eH
	je	SHORT $LN7@DoesCollid
	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 16			; 00000010H
	jne	SHORT $LN8@DoesCollid
$LN7@DoesCollid:

; 1640 : 						Commands->Send_Custom_Event(Other,Other,7043453,33,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	33					; 00000021H
	push	7043453					; 006b797dH
	mov	eax, DWORD PTR _Other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Other$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 1641 : 					else

	jmp	SHORT $LN6@DoesCollid
$LN8@DoesCollid:

; 1642 : 						Commands->Send_Custom_Event(Other,Other,7043453,5,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	5
	push	7043453					; 006b797dH
	mov	eax, DWORD PTR _Other$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Other$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN6@DoesCollid:

; 1643 : 				if (Obj->Type != PlayerShield && Obj->Type != PlayerSuper && Obj->Type != PlayerDroneShield && OtherObj->Type != TheMoon)

	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 5
	je	SHORT $LN5@DoesCollid
	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 8
	je	SHORT $LN5@DoesCollid
	mov	eax, DWORD PTR _Obj$[ebp]
	cmp	DWORD PTR [eax+16], 13			; 0000000dH
	je	SHORT $LN5@DoesCollid
	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 4
	je	SHORT $LN5@DoesCollid

; 1644 : 					SpecialApplyDamage(Hitter,99999.9f,"BlamoKiller",Other);

	mov	eax, DWORD PTR _Other$[ebp]
	push	eax
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@47c34ff3
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Hitter$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SpecialApplyDamage@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MPBD0@Z ; RenCometBustersGameObjects::SpecialApplyDamage

; 1645 : 				else

	jmp	$LN1@DoesCollid
$LN5@DoesCollid:

; 1646 : 					if (OtherObj->Type == NormalPlayerShip || OtherObj->Type == PlayerCloak || OtherObj->Type == PlayerShipJumpable  || OtherObj->Type == PlayerShipDisrupter)

	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@DoesCollid
	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 7
	je	SHORT $LN2@DoesCollid
	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 14			; 0000000eH
	je	SHORT $LN2@DoesCollid
	mov	eax, DWORD PTR _OtherObj$[ebp]
	cmp	DWORD PTR [eax+16], 16			; 00000010H
	jne	SHORT $LN3@DoesCollid
$LN2@DoesCollid:

; 1647 : 						Commands->Send_Custom_Event(Hitter,Hitter,7043453,33,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	33					; 00000021H
	push	7043453					; 006b797dH
	mov	eax, DWORD PTR _Hitter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Hitter$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 1648 : 					else

	jmp	SHORT $LN1@DoesCollid
$LN3@DoesCollid:

; 1649 : 						Commands->Send_Custom_Event(Hitter,Hitter,7043453,5,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	5
	push	7043453					; 006b797dH
	mov	eax, DWORD PTR _Hitter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Hitter$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN1@DoesCollid:

; 1650 : 			}
; 1651 : 			return true;

	mov	al, 1
	jmp	SHORT $LN47@DoesCollid
$LN39@DoesCollid:

; 1652 : 		}
; 1653 : 		return false;

	xor	al, al
$LN47@DoesCollid:

; 1654 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?DoesCollide@RenCometBustersGameObjects@@QAE_NPAUAnObject@@0@Z ENDP ; RenCometBustersGameObjects::DoesCollide
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?SpecialApplyDamage@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MPBD0@Z
_TEXT	SEGMENT
tv69 = -80						; size = 4
_originalDriverTeam$ = -12				; size = 4
_driver$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damage$ = 12						; size = 4
_warhead$ = 16						; size = 4
_damager$ = 20						; size = 4
?SpecialApplyDamage@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MPBD0@Z PROC ; RenCometBustersGameObjects::SpecialApplyDamage, COMDAT
; _this$ = ecx

; 1526 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1527 : 		GameObject *driver = Get_Vehicle_Driver(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	mov	DWORD PTR _driver$[ebp], eax

; 1528 : 		int originalDriverTeam = driver ? Get_Player_Type(driver) : 1;

	cmp	DWORD PTR _driver$[ebp], 0
	je	SHORT $LN4@SpecialApp
	mov	eax, DWORD PTR _driver$[ebp]
	push	eax
	call	?Get_Player_Type@@YAHPAVScriptableGameObj@@@Z ; Get_Player_Type
	add	esp, 4
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN5@SpecialApp
$LN4@SpecialApp:
	mov	DWORD PTR tv69[ebp], 1
$LN5@SpecialApp:
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR _originalDriverTeam$[ebp], ecx

; 1529 : 		Commands->Set_Player_Type(obj,-2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+252]
	call	edx
	add	esp, 8

; 1530 : 		Commands->Set_Player_Type(driver,-2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _driver$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+252]
	call	edx
	add	esp, 8

; 1531 : 		Commands->Apply_Damage(obj,damage,warhead,damager);

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR _warhead$[ebp]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _damage$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+616]
	call	ecx
	add	esp, 16					; 00000010H

; 1532 : 		if (driver)

	cmp	DWORD PTR _driver$[ebp], 0
	je	SHORT $LN1@SpecialApp

; 1533 : 			Commands->Set_Player_Type(driver,originalDriverTeam);

	mov	eax, DWORD PTR _originalDriverTeam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _driver$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+252]
	call	eax
	add	esp, 8
$LN1@SpecialApp:

; 1534 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SpecialApplyDamage@RenCometBustersGameObjects@@QAEXPAVScriptableGameObj@@MPBD0@Z ENDP ; RenCometBustersGameObjects::SpecialApplyDamage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?FindObjectByID@RenCometBustersGameObjects@@QAEPAUAnObject@@H@Z
_TEXT	SEGMENT
_Current$ = -8						; size = 4
_this$ = -4						; size = 4
_objectID$ = 8						; size = 4
?FindObjectByID@RenCometBustersGameObjects@@QAEPAUAnObject@@H@Z PROC ; RenCometBustersGameObjects::FindObjectByID, COMDAT
; _this$ = ecx

; 1513 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1514 : 		if (!ObjectsList || !objectID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@FindObject
	cmp	DWORD PTR _objectID$[ebp], 0
	jne	SHORT $LN5@FindObject
$LN4@FindObject:

; 1515 : 			return NULL;

	xor	eax, eax
	jmp	SHORT $LN6@FindObject
$LN5@FindObject:

; 1516 : 		AnObject *Current = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Current$[ebp], ecx
$LN3@FindObject:

; 1517 : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	SHORT $LN2@FindObject

; 1518 : 		{
; 1519 : 			if (Current->ObjectID == objectID)

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _objectID$[ebp]
	jne	SHORT $LN1@FindObject

; 1520 : 				return Current;

	mov	eax, DWORD PTR _Current$[ebp]
	jmp	SHORT $LN6@FindObject
$LN1@FindObject:

; 1521 : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$[ebp], ecx

; 1522 : 		}

	jmp	SHORT $LN3@FindObject
$LN2@FindObject:

; 1523 : 		return NULL;

	xor	eax, eax
$LN6@FindObject:

; 1524 : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?FindObjectByID@RenCometBustersGameObjects@@QAEPAUAnObject@@H@Z ENDP ; RenCometBustersGameObjects::FindObjectByID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?FindObject@RenCometBustersGameObjects@@QAEPAUAnObject@@PAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_Current$ = -8						; size = 4
_this$ = -4						; size = 4
_object$ = 8						; size = 4
?FindObject@RenCometBustersGameObjects@@QAEPAUAnObject@@PAVScriptableGameObj@@@Z PROC ; RenCometBustersGameObjects::FindObject, COMDAT
; _this$ = ecx

; 1500 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1501 : 		if (!ObjectsList || !object)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@FindObject
	cmp	DWORD PTR _object$[ebp], 0
	jne	SHORT $LN5@FindObject
$LN4@FindObject:

; 1502 : 			return NULL;

	xor	eax, eax
	jmp	SHORT $LN6@FindObject
$LN5@FindObject:

; 1503 : 		AnObject *Current = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Current$[ebp], ecx
$LN3@FindObject:

; 1504 : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	SHORT $LN2@FindObject

; 1505 : 		{
; 1506 : 			if (Current->Object == object)

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _object$[ebp]
	jne	SHORT $LN1@FindObject

; 1507 : 				return Current;

	mov	eax, DWORD PTR _Current$[ebp]
	jmp	SHORT $LN6@FindObject
$LN1@FindObject:

; 1508 : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$[ebp], ecx

; 1509 : 		}

	jmp	SHORT $LN3@FindObject
$LN2@FindObject:

; 1510 : 		return NULL;

	xor	eax, eax
$LN6@FindObject:

; 1511 : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?FindObject@RenCometBustersGameObjects@@QAEPAUAnObject@@PAVScriptableGameObj@@@Z ENDP ; RenCometBustersGameObjects::FindObject
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??ZRenCometBustersGameObjects@@QAEAAV0@PAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_Current$ = -8						; size = 4
_this$ = -4						; size = 4
_object$ = 8						; size = 4
??ZRenCometBustersGameObjects@@QAEAAV0@PAVScriptableGameObj@@@Z PROC ; RenCometBustersGameObjects::operator-=, COMDAT
; _this$ = ecx

; 1485 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1486 : 		if (!ObjectsList || !object)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@operator
	cmp	DWORD PTR _object$[ebp], 0
	jne	SHORT $LN5@operator
$LN4@operator:

; 1487 : 			return *this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN6@operator
$LN5@operator:

; 1488 : 		AnObject *Current = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Current$[ebp], ecx
$LN3@operator:

; 1489 : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	SHORT $LN2@operator

; 1490 : 		{
; 1491 : 			if (Current->Object == object)

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _object$[ebp]
	jne	SHORT $LN1@operator

; 1492 : 			{
; 1493 : 				Current->AllowReplaceTime = 1;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	DWORD PTR [eax+20], 1
$LN1@operator:

; 1494 : 			}
; 1495 : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$[ebp], ecx

; 1496 : 		}

	jmp	SHORT $LN3@operator
$LN2@operator:

; 1497 : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]
$LN6@operator:

; 1498 : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??ZRenCometBustersGameObjects@@QAEAAV0@PAVScriptableGameObj@@@Z ENDP ; RenCometBustersGameObjects::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z
_TEXT	SEGMENT
tv159 = -88						; size = 4
tv86 = -88						; size = 4
tv161 = -84						; size = 4
tv88 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
_Current$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 16
??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z PROC ; RenCometBustersGameObjects::operator+=, COMDAT
; _this$ = ecx

; 1448 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1449 : 		if (!obj.obj)

	cmp	DWORD PTR _obj$[ebp], 0
	jne	SHORT $LN7@operator

; 1450 : 			return *this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN8@operator
$LN7@operator:

; 1451 : 		AnObject *Current = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Current$[ebp], ecx

; 1452 : 		if (!ObjectsList)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	$LN6@operator

; 1453 : 		{
; 1454 : 			ObjectsList = new AnObject(obj.obj,obj.Size,obj.RealSize,obj.Type);

	push	OFFSET ??_C@_0CI@LOKEAPHJ@RenCometBustersGameObjects?3?3oper@
	push	1454					; 000005aeH
	push	OFFSET ??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN13@operator
	xor	ecx, ecx
	jne	SHORT $LN10@operator
	push	1454					; 000005aeH
	push	OFFSET ??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN10@operator:
	mov	DWORD PTR tv88[ebp], 0
	jmp	SHORT $LN14@operator
$LN13@operator:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN11@operator
	mov	eax, DWORD PTR _obj$[ebp+12]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _obj$[ebp+8]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _obj$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0AnObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; AnObject::AnObject
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN12@operator
$LN11@operator:
	mov	DWORD PTR tv86[ebp], 0
$LN12@operator:
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR tv88[ebp], edx
$LN14@operator:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv88[ebp]
	mov	DWORD PTR [eax], ecx

; 1455 : 			return *this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN8@operator
$LN6@operator:

; 1456 : 		}
; 1457 : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	$LN4@operator

; 1458 : 		{
; 1459 : 			if (Current->AllowReplaceTime == 30)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+20], 30			; 0000001eH
	jne	SHORT $LN3@operator

; 1460 : 			{
; 1461 : 				Current->AllowReplaceTime = -1;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	DWORD PTR [eax+20], -1

; 1462 : 				Current->Object = obj.obj;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	DWORD PTR [eax], ecx

; 1463 : 				Current->ObjectID = Commands->Get_ID(obj.obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 1464 : 				Current->Size = obj.Size;

	mov	eax, DWORD PTR _Current$[ebp]
	movss	xmm0, DWORD PTR _obj$[ebp+4]
	movss	DWORD PTR [eax+4], xmm0

; 1465 : 				Current->RealSize = obj.RealSize;

	mov	eax, DWORD PTR _Current$[ebp]
	movss	xmm0, DWORD PTR _obj$[ebp+8]
	movss	DWORD PTR [eax+8], xmm0

; 1466 : 				Current->Type = obj.Type;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR _obj$[ebp+12]
	mov	DWORD PTR [eax+16], ecx

; 1467 : 				Current->AllowReplaceTime = 0;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	DWORD PTR [eax+20], 0

; 1468 : 				return *this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN8@operator
$LN3@operator:

; 1469 : 			}
; 1470 : 			if (!Current->AllowReplaceTime && Current->Object == obj.obj)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN2@operator
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _obj$[ebp]
	jne	SHORT $LN2@operator

; 1471 : 			{
; 1472 : 				Console_Input("msg already in list!");

	push	OFFSET ??_C@_0BF@CAPOKMCA@msg?5already?5in?5list?$CB?$AA@
	call	?Console_Input@@YAXPBD@Z		; Console_Input
	add	esp, 4

; 1473 : 				return *this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN8@operator
$LN2@operator:

; 1474 : 			}
; 1475 : 			if (!Current->next)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+24], 0
	jne	$LN1@operator

; 1476 : 			{
; 1477 : 				Current->next = new AnObject(obj.obj,obj.Size,obj.RealSize,obj.Type);

	push	OFFSET ??_C@_0CI@LOKEAPHJ@RenCometBustersGameObjects?3?3oper@
	push	1477					; 000005c5H
	push	OFFSET ??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN18@operator
	xor	ecx, ecx
	jne	SHORT $LN15@operator
	push	1477					; 000005c5H
	push	OFFSET ??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN15@operator:
	mov	DWORD PTR tv161[ebp], 0
	jmp	SHORT $LN19@operator
$LN18@operator:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN16@operator
	mov	eax, DWORD PTR _obj$[ebp+12]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _obj$[ebp+8]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _obj$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0AnObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ; AnObject::AnObject
	mov	DWORD PTR tv159[ebp], eax
	jmp	SHORT $LN17@operator
$LN16@operator:
	mov	DWORD PTR tv159[ebp], 0
$LN17@operator:
	mov	edx, DWORD PTR tv159[ebp]
	mov	DWORD PTR tv161[ebp], edx
$LN19@operator:
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR tv161[ebp]
	mov	DWORD PTR [eax+24], ecx

; 1478 : 				return *this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN8@operator
$LN1@operator:

; 1479 : 			}
; 1480 : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _Current$[ebp], ecx

; 1481 : 		}

	jmp	$LN6@operator
$LN4@operator:

; 1482 : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]
$LN8@operator:

; 1483 : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??YRenCometBustersGameObjects@@QAEAAV0@UTypeObject@@@Z ENDP ; RenCometBustersGameObjects::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??1RenCometBustersGameObjects@@QAE@XZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_die$2 = -12						; size = 4
_temp$3 = -8						; size = 4
_this$ = -4						; size = 4
??1RenCometBustersGameObjects@@QAE@XZ PROC		; RenCometBustersGameObjects::~RenCometBustersGameObjects, COMDAT
; _this$ = ecx

; 1433 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1434 : 		if (ObjectsList)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@RenCometBu

; 1435 : 		{
; 1436 : 			AnObject *temp,*die;
; 1437 : 			temp = ObjectsList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$3[ebp], ecx
$LN2@RenCometBu:

; 1438 : 			while (temp != NULL)

	cmp	DWORD PTR _temp$3[ebp], 0
	je	SHORT $LN1@RenCometBu

; 1439 : 			{
; 1440 : 				die = temp;

	mov	eax, DWORD PTR _temp$3[ebp]
	mov	DWORD PTR _die$2[ebp], eax

; 1441 : 				temp = temp->next;

	mov	eax, DWORD PTR _temp$3[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _temp$3[ebp], ecx

; 1442 : 				delete die;

	push	OFFSET ??_C@_0DI@LLNCPLBC@RenCometBustersGameObjects?3?3?$HORen@
	push	1442					; 000005a2H
	push	OFFSET ??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN7@RenCometBu
	xor	ecx, ecx
	jne	SHORT $LN6@RenCometBu
	push	1442					; 000005a2H
	push	OFFSET ??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN6@RenCometBu:
	jmp	SHORT $LN8@RenCometBu
$LN7@RenCometBu:
	mov	eax, DWORD PTR _die$2[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@RenCometBu:

; 1443 : 			}

	jmp	SHORT $LN2@RenCometBu
$LN1@RenCometBu:

; 1444 : 			ObjectsList = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN4@RenCometBu:

; 1445 : 		}
; 1446 : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RenCometBustersGameObjects@@QAE@XZ ENDP		; RenCometBustersGameObjects::~RenCometBustersGameObjects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??0RenCometBustersGameObjects@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RenCometBustersGameObjects@@QAE@XZ PROC		; RenCometBustersGameObjects::RenCometBustersGameObjects, COMDAT
; _this$ = ecx

; 1428 : 	RenCometBustersGameObjects()

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1429 : 	{
; 1430 : 		ObjectsList = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 1431 : 	};

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RenCometBustersGameObjects@@QAE@XZ ENDP		; RenCometBustersGameObjects::RenCometBustersGameObjects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??__EMiniGamePlayerControlSystem@@YAXXZ
text$yc	SEGMENT
??__EMiniGamePlayerControlSystem@@YAXXZ PROC		; `dynamic initializer for 'MiniGamePlayerControlSystem'', COMDAT

; 1420 : struct RenCometBustersPlayerNode MiniGamePlayerControlSystem[MaxGamePlayerCount] = {RenCometBustersPlayerNode()};

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A ; MiniGamePlayerControlSystem
	call	??0RenCometBustersPlayerNode@@QAE@XZ	; RenCometBustersPlayerNode::RenCometBustersPlayerNode
	push	OFFSET ??0RenCometBustersPlayerNode@@QAE@XZ ; RenCometBustersPlayerNode::RenCometBustersPlayerNode
	push	7
	push	596					; 00000254H
	push	OFFSET ?MiniGamePlayerControlSystem@@3PAURenCometBustersPlayerNode@@A+596
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EMiniGamePlayerControlSystem@@YAXXZ ENDP		; `dynamic initializer for 'MiniGamePlayerControlSystem''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4RenCometBustersPlayerNode@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
_$S12$1 = -28						; size = 4
_$S11$2 = -24						; size = 4
_$S10$3 = -20						; size = 4
_$S9$4 = -16						; size = 4
_$S8$5 = -12						; size = 4
_$S7$6 = -8						; size = 4
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4RenCometBustersPlayerNode@@QAEAAU0@ABU0@@Z PROC	; RenCometBustersPlayerNode::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	DWORD PTR _$S7$6[ebp], 0
	jmp	SHORT $LN18@operator
$LN17@operator:
	mov	eax, DWORD PTR _$S7$6[ebp]
	add	eax, 1
	mov	DWORD PTR _$S7$6[ebp], eax
$LN18@operator:
	cmp	DWORD PTR _$S7$6[ebp], 32		; 00000020H
	jae	SHORT $LN16@operator
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S7$6[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S7$6[ebp]
	mov	dl, BYTE PTR [ecx+28]
	mov	BYTE PTR [eax+28], dl
	jmp	SHORT $LN17@operator
$LN16@operator:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	DWORD PTR [eax+60], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR [eax+88], edx
	mov	DWORD PTR _$S8$5[ebp], 0
	jmp	SHORT $LN15@operator
$LN14@operator:
	mov	eax, DWORD PTR _$S8$5[ebp]
	add	eax, 1
	mov	DWORD PTR _$S8$5[ebp], eax
$LN15@operator:
	cmp	DWORD PTR _$S8$5[ebp], 128		; 00000080H
	jae	SHORT $LN13@operator
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S8$5[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S8$5[ebp]
	mov	dl, BYTE PTR [ecx+92]
	mov	BYTE PTR [eax+92], dl
	jmp	SHORT $LN14@operator
$LN13@operator:
	mov	DWORD PTR _$S9$4[ebp], 0
	jmp	SHORT $LN12@operator
$LN11@operator:
	mov	eax, DWORD PTR _$S9$4[ebp]
	add	eax, 1
	mov	DWORD PTR _$S9$4[ebp], eax
$LN12@operator:
	cmp	DWORD PTR _$S9$4[ebp], 128		; 00000080H
	jae	SHORT $LN10@operator
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S9$4[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S9$4[ebp]
	mov	dl, BYTE PTR [ecx+220]
	mov	BYTE PTR [eax+220], dl
	jmp	SHORT $LN11@operator
$LN10@operator:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+348]
	mov	DWORD PTR [eax+348], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+352]
	mov	DWORD PTR [eax+352], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+356]
	mov	DWORD PTR [eax+356], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	mov	DWORD PTR [eax+360], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+364]
	mov	WORD PTR [eax+364], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+366]
	mov	BYTE PTR [eax+366], dl
	mov	DWORD PTR _$S10$3[ebp], 0
	jmp	SHORT $LN9@operator
$LN8@operator:
	mov	eax, DWORD PTR _$S10$3[ebp]
	add	eax, 1
	mov	DWORD PTR _$S10$3[ebp], eax
$LN9@operator:
	cmp	DWORD PTR _$S10$3[ebp], 2
	jae	SHORT $LN7@operator
	mov	eax, DWORD PTR _$S10$3[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _$S10$3[ebp]
	mov	esi, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [esi+edx*4+368]
	mov	DWORD PTR [ecx+eax*4+368], edx
	jmp	SHORT $LN8@operator
$LN7@operator:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+376]
	mov	BYTE PTR [eax+376], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+377]
	mov	BYTE PTR [eax+377], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+380]
	mov	DWORD PTR [eax+380], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+384]
	mov	DWORD PTR [eax+384], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+388]
	mov	DWORD PTR [eax+388], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+392]
	mov	DWORD PTR [eax+392], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+396]
	mov	DWORD PTR [eax+396], edx
	mov	DWORD PTR _$S11$2[ebp], 0
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	eax, DWORD PTR _$S11$2[ebp]
	add	eax, 1
	mov	DWORD PTR _$S11$2[ebp], eax
$LN6@operator:
	cmp	DWORD PTR _$S11$2[ebp], 7
	jae	SHORT $LN4@operator
	mov	eax, DWORD PTR _$S11$2[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _$S11$2[ebp]
	mov	esi, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [esi+edx*4+400]
	mov	DWORD PTR [ecx+eax*4+400], edx
	jmp	SHORT $LN5@operator
$LN4@operator:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+428]
	mov	DWORD PTR [eax+428], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+432]
	mov	DWORD PTR [eax+432], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+436]
	mov	DWORD PTR [eax+436], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+440]
	mov	BYTE PTR [eax+440], dl
	mov	DWORD PTR _$S12$1[ebp], 0
	jmp	SHORT $LN3@operator
$LN2@operator:
	mov	eax, DWORD PTR _$S12$1[ebp]
	add	eax, 1
	mov	DWORD PTR _$S12$1[ebp], eax
$LN3@operator:
	cmp	DWORD PTR _$S12$1[ebp], 128		; 00000080H
	jae	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S12$1[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S12$1[ebp]
	mov	dl, BYTE PTR [ecx+441]
	mov	BYTE PTR [eax+441], dl
	jmp	SHORT $LN2@operator
$LN1@operator:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+572]
	mov	DWORD PTR [eax+572], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+576]
	mov	DWORD PTR [eax+576], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 580				; 00000244H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 580				; 00000244H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+592]
	mov	DWORD PTR [eax+592], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4RenCometBustersPlayerNode@@QAEAAU0@ABU0@@Z ENDP	; RenCometBustersPlayerNode::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??0RenCometBustersPlayerNode@@QAE@XZ
_TEXT	SEGMENT
$T1 = -108						; size = 12
$T2 = -96						; size = 12
$T3 = -84						; size = 12
_x$4 = -8						; size = 4
_this$ = -4						; size = 4
??0RenCometBustersPlayerNode@@QAE@XZ PROC		; RenCometBustersPlayerNode::RenCometBustersPlayerNode, COMDAT
; _this$ = ecx

; 1377 : 	RenCometBustersPlayerNode()

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 580				; 00000244H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 1378 : 	{
; 1379 : 		isReady = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0

; 1380 : 		NumberOfLives = 5;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 5

; 1381 : 		PlayerShip = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 1382 : 		ReplacementShip = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 1383 : 		SpectatorObject = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 1384 : 		GamePlayerID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0

; 1385 : 		RespawnTime = 30;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 30			; 0000001eH

; 1386 : 		Score = 0;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+60], xmm0

; 1387 : 		DeathLocation = Vector3(0.0f,0.0f,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 1388 : 		OriginalLocation = Vector3(0.0f,0.0f,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 1389 : 		FakeSoldierID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0

; 1390 : 		PlayerID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+348], 0

; 1391 : 		HighestLevel = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+352], 0

; 1392 : 		SuperBombs = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+356], 0

; 1393 : 		LastNewLifeScore = 0;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+360], xmm0

; 1394 : 		NotInGameTime = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+364], ax

; 1395 : 		HasSOSBeacon = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+366], 0

; 1396 : 		DronePowerup = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+376], 0

; 1397 : 		DroneSwarmPowerup = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+377], 0

; 1398 : 		Drones[0] = Drones[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+368], 0
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx+368], 0

; 1399 : 		CargoWarnedCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+384], 0

; 1400 : 		CargoTotalWarnedCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+388], 0

; 1401 : 		CargoWarnDecreaseDelay = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+392], 0

; 1402 : 		DoublePointsTime = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+396], 0

; 1403 : 		CargoScore = 0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+428], xmm0

; 1404 : 		HyperspaceDriveCharge = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+432], 0

; 1405 : 		SelectedPerk = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+436], 0

; 1406 : 		SecondSpace = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+440], 0

; 1407 : 		ShipObject = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+592], 0

; 1408 : 		sprintf(PlayerName,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 441				; 000001b9H
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 8

; 1409 : 		for (int x = 0;x < 7;x++)

	mov	DWORD PTR _x$4[ebp], 0
	jmp	SHORT $LN3@RenCometBu
$LN2@RenCometBu:
	mov	eax, DWORD PTR _x$4[ebp]
	add	eax, 1
	mov	DWORD PTR _x$4[ebp], eax
$LN3@RenCometBu:
	cmp	DWORD PTR _x$4[ebp], 7
	jge	SHORT $LN1@RenCometBu

; 1410 : 			CargoShipIDs[x] = 0;

	mov	eax, DWORD PTR _x$4[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+400], 0
	jmp	SHORT $LN2@RenCometBu
$LN1@RenCometBu:

; 1411 : 		sprintf(PlayerModel,"\0");

	push	OFFSET ??_C@_01LOCGONAA@?$AA?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 8

; 1412 : 		sprintf(OriginalSkin,"\0");

	push	OFFSET ??_C@_01LOCGONAA@?$AA?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 92					; 0000005cH
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 8

; 1413 : 		sprintf(OriginalArmor,"\0");

	push	OFFSET ??_C@_01LOCGONAA@?$AA?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 220				; 000000dcH
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 8

; 1414 : 		kickoutOfSpecTime = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+572], 0

; 1415 : 		endGamePadding = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+576], 0

; 1416 : 		specCreateSpot = Vector3();

	lea	ecx, DWORD PTR $T3[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 580				; 00000244H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 1417 : 	};

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RenCometBustersPlayerNode@@QAE@XZ ENDP		; RenCometBustersPlayerNode::RenCometBustersPlayerNode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??0AnObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_Size$ = 12						; size = 4
_RealSize$ = 16						; size = 4
_Type$ = 20						; size = 4
??0AnObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z PROC ; AnObject::AnObject, COMDAT
; _this$ = ecx

; 1324 : 	AnObject(GameObject *obj,float Size,float RealSize,ObjectType Type)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1325 : 	{
; 1326 : 		this->AllowReplaceTime = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], -1

; 1327 : 		this->Object = obj;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	DWORD PTR [eax], ecx

; 1328 : 		this->ObjectID = Commands->Get_ID(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 1329 : 		this->Size = Size;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _Size$[ebp]
	movss	DWORD PTR [eax+4], xmm0

; 1330 : 		this->RealSize = RealSize;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _RealSize$[ebp]
	movss	DWORD PTR [eax+8], xmm0

; 1331 : 		this->Type = Type;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Type$[ebp]
	mov	DWORD PTR [eax+16], ecx

; 1332 : 		this->AllowReplaceTime = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0

; 1333 : 		this->next = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0

; 1334 : 	};

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0AnObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ENDP ; AnObject::AnObject
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__obj$ = 8						; size = 4
__SquaredSize$ = 12					; size = 4
__RealSize$ = 16					; size = 4
__Type$ = 20						; size = 4
??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z PROC ; TypeObject::TypeObject, COMDAT
; _this$ = ecx

; 1306 : 	TypeObject(GameObject *_obj,float _SquaredSize,float _RealSize,ObjectType _Type)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1307 : 	{
; 1308 : 		obj = _obj;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __obj$[ebp]
	mov	DWORD PTR [eax], ecx

; 1309 : 		Size = _SquaredSize;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __SquaredSize$[ebp]
	movss	DWORD PTR [eax+4], xmm0

; 1310 : 		RealSize = _RealSize;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __RealSize$[ebp]
	movss	DWORD PTR [eax+8], xmm0

; 1311 : 		Type = _Type;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Type$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 1312 : 	};

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0TypeObject@@QAE@PAVScriptableGameObj@@MMW4ObjectType@@@Z ENDP ; TypeObject::TypeObject
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??__ERenCometBustersScoreControl@@YAXXZ
text$yc	SEGMENT
??__ERenCometBustersScoreControl@@YAXXZ PROC		; `dynamic initializer for 'RenCometBustersScoreControl'', COMDAT

; 1297 : RenCometBustersScoreSystem RenCometBustersScoreControl = RenCometBustersScoreSystem();

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RenCometBustersScoreControl@@3URenCometBustersScoreSystem@@A ; RenCometBustersScoreControl
	call	??0RenCometBustersScoreSystem@@QAE@XZ	; RenCometBustersScoreSystem::RenCometBustersScoreSystem
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERenCometBustersScoreControl@@YAXXZ ENDP		; `dynamic initializer for 'RenCometBustersScoreControl''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?StateHighScore@RenCometBustersScoreSystem@@QAEXXZ
_TEXT	SEGMENT
_Player$1 = -160					; size = 4
_x$2 = -156						; size = 4
_DisplayMessage$ = -152					; size = 128
_Best$ = -24						; size = 4
_Current$ = -20						; size = 4
_Random$ = -16						; size = 4
_LastHighScoreList$ = -12				; size = 4
_maxRetry$ = -8						; size = 4
_this$ = -4						; size = 4
?StateHighScore@RenCometBustersScoreSystem@@QAEXXZ PROC	; RenCometBustersScoreSystem::StateHighScore, COMDAT
; _this$ = ecx

; 1254 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1255 : 		int maxRetry = 0;

	mov	DWORD PTR _maxRetry$[ebp], 0

; 1256 : 		int LastHighScoreList = 1;

	mov	DWORD PTR _LastHighScoreList$[ebp], 1

; 1257 : 		int Random = Commands->Get_Random_Int(0,RCMTBHIGHSCORELISTCOUNT+1);

	push	62					; 0000003eH
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	DWORD PTR _Random$[ebp], eax
$MAStartOfHighScoreSelectProcess$15:

; 1258 : MAStartOfHighScoreSelectProcess:
; 1259 : 		if (maxRetry > 10000)

	cmp	DWORD PTR _maxRetry$[ebp], 10000	; 00002710H
	jle	SHORT $LN12@StateHighS

; 1260 : 			return;

	jmp	$LN13@StateHighS
$LN12@StateHighS:

; 1261 : 		CMTBHighScoresNode *Current = CMTBHighScoresNodeList,*Best = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _Current$[ebp], ecx
	mov	DWORD PTR _Best$[ebp], 0
$LN11@StateHighS:

; 1262 : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	SHORT $LN10@StateHighS

; 1263 : 		{
; 1264 : 			Best = CompareHighScoreNodes(Best,Current,Random);

	mov	eax, DWORD PTR _Random$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Best$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CompareHighScoreNodes@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@PAU21@0H@Z ; RenCometBustersScoreSystem::CompareHighScoreNodes
	mov	DWORD PTR _Best$[ebp], eax

; 1265 : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+528]
	mov	DWORD PTR _Current$[ebp], ecx

; 1266 : 		}

	jmp	SHORT $LN11@StateHighS
$LN10@StateHighS:

; 1267 : 		if (!ReturnHighScoreNodeValue(Best,Random))

	mov	eax, DWORD PTR _Random$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Best$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReturnHighScoreNodeValue@RenCometBustersScoreSystem@@QAE_NPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::ReturnHighScoreNodeValue
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN9@StateHighS

; 1268 : 		{
; 1269 : 			if (LastHighScoreList <= 5)

	cmp	DWORD PTR _LastHighScoreList$[ebp], 5
	jg	SHORT $LN8@StateHighS

; 1270 : 			{
; 1271 : 				LastHighScoreList++;

	mov	eax, DWORD PTR _LastHighScoreList$[ebp]
	add	eax, 1
	mov	DWORD PTR _LastHighScoreList$[ebp], eax

; 1272 : 				if (Random+1 < RCMTBHIGHSCORELISTCOUNT)

	mov	eax, DWORD PTR _Random$[ebp]
	add	eax, 1
	cmp	eax, 61					; 0000003dH
	jge	SHORT $LN7@StateHighS

; 1273 : 					Random++;

	mov	eax, DWORD PTR _Random$[ebp]
	add	eax, 1
	mov	DWORD PTR _Random$[ebp], eax

; 1274 : 				else

	jmp	SHORT $LN6@StateHighS
$LN7@StateHighS:

; 1275 : 					Random = 1;

	mov	DWORD PTR _Random$[ebp], 1
$LN6@StateHighS:

; 1276 : 			}
; 1277 : 			else

	jmp	SHORT $LN5@StateHighS
$LN8@StateHighS:

; 1278 : 			{
; 1279 : 				LastHighScoreList = 0;

	mov	DWORD PTR _LastHighScoreList$[ebp], 0

; 1280 : 				Random = 0;

	mov	DWORD PTR _Random$[ebp], 0
$LN5@StateHighS:

; 1281 : 			}
; 1282 : 			maxRetry++;

	mov	eax, DWORD PTR _maxRetry$[ebp]
	add	eax, 1
	mov	DWORD PTR _maxRetry$[ebp], eax

; 1283 : 			goto MAStartOfHighScoreSelectProcess;

	jmp	$MAStartOfHighScoreSelectProcess$15
$LN9@StateHighS:

; 1284 : 		}
; 1285 : 		sprintf(HighScoreHolderName[Random],"%s",Best->PlayerName);

	mov	eax, DWORD PTR _Best$[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	mov	ecx, DWORD PTR _Random$[ebp]
	shl	ecx, 7
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+528]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1286 : 		char DisplayMessage[128];
; 1287 : 		sprintf(DisplayMessage,"%s",ReturnScore(Best,Random));

	mov	eax, DWORD PTR _Random$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Best$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@1@H@Z ; RenCometBustersScoreSystem::ReturnScore
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	lea	edx, DWORD PTR _DisplayMessage$[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1288 : 		for (int x = 1;x < 128;x++)

	mov	DWORD PTR _x$2[ebp], 1
	jmp	SHORT $LN4@StateHighS
$LN3@StateHighS:
	mov	eax, DWORD PTR _x$2[ebp]
	add	eax, 1
	mov	DWORD PTR _x$2[ebp], eax
$LN4@StateHighS:
	cmp	DWORD PTR _x$2[ebp], 128		; 00000080H
	jge	SHORT $LN13@StateHighS

; 1289 : 		{
; 1290 : 			GameObject *Player = Get_GameObj(x);

	mov	eax, DWORD PTR _x$2[ebp]
	push	eax
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	mov	DWORD PTR _Player$1[ebp], eax

; 1291 : 			if (Player)

	cmp	DWORD PTR _Player$1[ebp], 0
	je	SHORT $LN1@StateHighS

; 1292 : 				JmgUtility::DisplayChatMessage(Player,6,145,148,DisplayMessage);

	lea	eax, DWORD PTR _DisplayMessage$[ebp]
	push	eax
	push	148					; 00000094H
	push	145					; 00000091H
	push	6
	mov	ecx, DWORD PTR _Player$1[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN1@StateHighS:

; 1293 : 		}

	jmp	SHORT $LN3@StateHighS
$LN13@StateHighS:

; 1294 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?StateHighScore@RenCometBustersScoreSystem@@QAEXXZ ENDP	; RenCometBustersScoreSystem::StateHighScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@1@H@Z
_TEXT	SEGMENT
tv724 = -80						; size = 8
tv679 = -80						; size = 8
tv646 = -80						; size = 8
tv631 = -80						; size = 8
tv720 = -72						; size = 4
tv675 = -72						; size = 4
tv642 = -72						; size = 4
tv627 = -72						; size = 4
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_High$ = 8						; size = 4
_CompVal$ = 12						; size = 4
?ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@1@H@Z PROC ; RenCometBustersScoreSystem::ReturnScore, COMDAT
; _this$ = ecx

; 1121 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1122 : 		static char RetChar[200];
; 1123 : 		if (!High)

	cmp	DWORD PTR _High$[ebp], 0
	jne	SHORT $LN64@ReturnScor

; 1124 : 			return " ";

	mov	eax, OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	jmp	$LN62@ReturnScor
$LN64@ReturnScor:

; 1125 : 		switch (CompVal)

	mov	eax, DWORD PTR _CompVal$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 59			; 0000003bH
	ja	$LN1@ReturnScor
	mov	ecx, DWORD PTR tv65[ebp]
	jmp	DWORD PTR $LN67@ReturnScor[ecx*4]
$LN61@ReturnScor:

; 1126 : 		{
; 1127 : 		case 0:
; 1128 : 			sprintf(RetChar,"Server Record: %s has played %lu rounds of Renegade Comet Busters.",High->PlayerName,High->RoundsPlayed);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+260]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0ED@DPHHABPP@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN60@ReturnScor:

; 1129 : 		case 1:
; 1130 : 			sprintf(RetChar,"Server Record: %s has lost %lu ships playing Renegade Comet Busters.",High->PlayerName,High->Deaths);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+264]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0EF@JBCNBGOG@Server?5Record?3?5?$CFs?5has?5lost?5?$CFlu?5s@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN59@ReturnScor:

; 1131 : 		case 2:
; 1132 : 			sprintf(RetChar,"Server Record: %s has destroyed %lu small comets.",High->PlayerName,High->CometSmall);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+268]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DC@OBCPKPMJ@Server?5Record?3?5?$CFs?5has?5destroyed?5@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN58@ReturnScor:

; 1133 : 		case 3:
; 1134 : 			sprintf(RetChar,"Server Record: %s has destroyed %lu medium comets.",High->PlayerName,High->CometMedium);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+272]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DD@CHCKPFGH@Server?5Record?3?5?$CFs?5has?5destroyed?5@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN57@ReturnScor:

; 1135 : 		case 4:
; 1136 : 			sprintf(RetChar,"Server Record: %s has destroyed %lu large comets.",High->PlayerName,High->CometLarge);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+276]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DC@OPABANCK@Server?5Record?3?5?$CFs?5has?5destroyed?5@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN56@ReturnScor:

; 1137 : 		case 5:
; 1138 : 			sprintf(RetChar,"Server Record: %s has destroyed %lu huge comets.",High->PlayerName,High->CometHuge);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DB@HHMIAPLD@Server?5Record?3?5?$CFs?5has?5destroyed?5@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN55@ReturnScor:

; 1139 : 		case 6:
; 1140 : 			sprintf(RetChar,"Server Record: %s has destroyed the moon %lu times.",High->PlayerName,High->TheMoon);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+284]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DE@GAPAHGBJ@Server?5Record?3?5?$CFs?5has?5destroyed?5@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN54@ReturnScor:

; 1141 : 		case 7:
; 1142 : 			sprintf(RetChar,"Server Record: %s has destroyed %lu UFOs.",High->PlayerName,High->UFO);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+288]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0CK@HJEFGBEE@Server?5Record?3?5?$CFs?5has?5destroyed?5@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN53@ReturnScor:

; 1143 : 		case 8:
; 1144 : 			sprintf(RetChar,"Server Record: %s has destroyed %lu Mines.",High->PlayerName,High->Mine);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+292]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0CL@DFLDBPJK@Server?5Record?3?5?$CFs?5has?5destroyed?5@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN52@ReturnScor:

; 1145 : 		case 9:
; 1146 : 			sprintf(RetChar,"Server Record: %s has killed %lu other players.",High->PlayerName,High->OtherPlayers);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DA@HIGGHANH@Server?5Record?3?5?$CFs?5has?5killed?5?$CFlu@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN51@ReturnScor:

; 1147 : 		case 10:
; 1148 : 			sprintf(RetChar,"Server Record: %s has scored %lu points playing Renegade Comet Busters in a single round.",High->PlayerName,High->HighestScore);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0FK@IMFOLIBD@Server?5Record?3?5?$CFs?5has?5scored?5?$CFlu@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN50@ReturnScor:

; 1149 : 		case 11:
; 1150 : 			sprintf(RetChar,"Server Record: %s has scored a total of %lu points playing Renegade Comet Busters.",High->PlayerName,High->TotalScore);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+304]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0FD@IEKCIDFK@Server?5Record?3?5?$CFs?5has?5scored?5a?5t@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN49@ReturnScor:

; 1151 : 		case 12:
; 1152 : 			sprintf(RetChar,"Server Record: %s has made it to level %lu in Renegade Comet Busters.",High->PlayerName,High->HighestLevel);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+308]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0EG@KPAFONBF@Server?5Record?3?5?$CFs?5has?5made?5it?5to@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN48@ReturnScor:

; 1153 : 		case 13:
; 1154 : 			sprintf(RetChar,"Server Record: %s has destroyed %lu comets total.",High->PlayerName,High->TotalComets);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+312]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DC@EEBOLIKG@Server?5Record?3?5?$CFs?5has?5destroyed?5@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN47@ReturnScor:

; 1155 : 		case 14:
; 1156 : 			sprintf(RetChar,"Server Record: %s has acquired %lu Highly Explosive Warhead powerups.",High->PlayerName,High->HEWPowerups);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+316]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0EG@EFEOBEBH@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN46@ReturnScor:

; 1157 : 		case 15:
; 1158 : 			sprintf(RetChar,"Server Record: %s has used %lu Highly Explosive Warheads.",High->PlayerName,High->HEWUsed);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DK@OBKLLKEM@Server?5Record?3?5?$CFs?5has?5used?5?$CFlu?5H@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN45@ReturnScor:

; 1159 : 		case 16:
; 1160 : 			sprintf(RetChar,"Server Record: %s has fired a total of %lu rounds.",High->PlayerName,High->RoundsFired);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DD@LENFCILH@Server?5Record?3?5?$CFs?5has?5fired?5a?5to@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN44@ReturnScor:

; 1161 : 		case 17:
; 1162 : 			sprintf(RetChar,"Server Record: %s has made it to level %lu through teamwork.",High->PlayerName,High->TeamHighestLevel);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DN@LGKHNOIO@Server?5Record?3?5?$CFs?5has?5made?5it?5to@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN43@ReturnScor:

; 1163 : 		case 18:
; 1164 : 			sprintf(RetChar,"Server Record: %s has given %lu lives to other players.",High->PlayerName,High->GrantedOtherPlayersLives);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+332]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DI@KKJLFLDK@Server?5Record?3?5?$CFs?5has?5given?5?$CFlu?5@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN42@ReturnScor:

; 1165 : 		case 19:
; 1166 : 			sprintf(RetChar,"Server Record: %s has received %lu lives from other players.",High->PlayerName,High->ReceivedOtherPlayersLives);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+336]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DN@DNEBFNGH@Server?5Record?3?5?$CFs?5has?5received?5?$CF@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN41@ReturnScor:

; 1167 : 		case 20:
; 1168 : 			sprintf(RetChar,"Server Record: %s has destroyed %lu cargo ships.",High->PlayerName,High->CargoShip);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+340]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DB@FIFDMKKA@Server?5Record?3?5?$CFs?5has?5destroyed?5@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN40@ReturnScor:

; 1169 : 		case 21:
; 1170 : 			sprintf(RetChar,"Server Record: %s has acquired %lu extra lives.",High->PlayerName,High->NewLivesAcquired);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+344]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DA@DCAKIMBD@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN39@ReturnScor:

; 1171 : 		case 22:
; 1172 : 			sprintf(RetChar,"Server Record: %s has rammed %lu objects.",High->PlayerName,High->ObjectsRammed);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+348]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0CK@CIGOPGGB@Server?5Record?3?5?$CFs?5has?5rammed?5?$CFlu@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN38@ReturnScor:

; 1173 : 		case 23:
; 1174 : 			sprintf(RetChar,"Server Record: %s has acquired %lu SOS Beacon powerups.",High->PlayerName,High->SOSBeacons);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+352]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DI@LFOHENLA@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN37@ReturnScor:

; 1175 : 		case 24:
; 1176 : 			sprintf(RetChar,"Server Record: %s has acquired %lu power cell powerups.",High->PlayerName,High->PowerPowerups);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DI@LODGFIOM@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN36@ReturnScor:

; 1177 : 		case 25:
; 1178 : 			sprintf(RetChar,"Server Record: %s has acquired %lu extra life powerups.",High->PlayerName,High->ExtraLifePowerups);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+360]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DI@IIOINMLI@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN35@ReturnScor:

; 1179 : 		case 26:
; 1180 : 			sprintf(RetChar,"Server Record: %s has deployed %lu SOS Beacons.",High->PlayerName,High->UsedSOSBeacons);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+364]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DA@NGAPCIJD@Server?5Record?3?5?$CFs?5has?5deployed?5?$CF@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN34@ReturnScor:

; 1181 : 		case 27:
; 1182 : 			sprintf(RetChar,"Server Record: %s has acquired %lu points powerups.",High->PlayerName,High->PointPowerups);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+368]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DE@DHJHFPLK@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN33@ReturnScor:

; 1183 : 		case 28:
; 1184 : 			sprintf(RetChar,"Server Record: %s has %lu points from powerups.",High->PlayerName,High->PowerupPoints);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+372]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DA@MDDOEMBF@Server?5Record?3?5?$CFs?5has?5?$CFlu?5points@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN32@ReturnScor:

; 1185 : 		case 29:
; 1186 : 			sprintf(RetChar,"Server Record: %s has acquired %lu Drones.",High->PlayerName,High->PickedUpDrone);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+376]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0CL@BEEAOLM@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN31@ReturnScor:

; 1187 : 		case 30:
; 1188 : 			sprintf(RetChar,"Server Record: %s has launched %lu Drones.",High->PlayerName,High->UsedDrones);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+380]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0CL@HJPPIPBM@Server?5Record?3?5?$CFs?5has?5launched?5?$CF@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN30@ReturnScor:

; 1189 : 		case 31:
; 1190 : 			sprintf(RetChar,"Server Record: %s has destroyed %lu objects with Drones.",High->PlayerName,High->DroneKills);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+384]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DJ@IDKKONAG@Server?5Record?3?5?$CFs?5has?5destroyed?5@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN29@ReturnScor:

; 1191 : 		case 32:
; 1192 : 			sprintf(RetChar,"Server Record: %s has destroyed %lu Drones.",High->PlayerName,High->DronesKilled);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+388]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0CM@MMOEEEGC@Server?5Record?3?5?$CFs?5has?5destroyed?5@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN28@ReturnScor:

; 1193 : 		case 33:
; 1194 : 			sprintf(RetChar,"Server Record: %s has scored %lu points with Drones.",High->PlayerName,High->DronePoints);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+392]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DF@NCDHEIBB@Server?5Record?3?5?$CFs?5has?5scored?5?$CFlu@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN27@ReturnScor:

; 1195 : 		case 34:
; 1196 : 			sprintf(RetChar,"Server Record: %s has acquired %lu power regen powerups.",High->PlayerName,High->RegenPowerups);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+396]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DJ@HNGFLFDI@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN26@ReturnScor:

; 1197 : 		case 35:
; 1198 : 			sprintf(RetChar,"Server Record: %s has acquired %lu double points powerups.",High->PlayerName,High->DoublePointsPowerups);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+400]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DL@CECKDPDK@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN25@ReturnScor:

; 1199 : 		case 36:
; 1200 : 			sprintf(RetChar,"Server Record: %s has scored %lu points from double points powerups.",High->PlayerName,High->DoublePointsPoints);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+404]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0EF@BPINKGDI@Server?5Record?3?5?$CFs?5has?5scored?5?$CFlu@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN24@ReturnScor:

; 1201 : 		case 37:
; 1202 : 			sprintf(RetChar,"Server Record: %s has acquired %lu hyperspace recharges.",High->PlayerName,High->DeerPowerups);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+408]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DJ@MOLBNNLO@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN23@ReturnScor:

; 1203 : 		case 38:
; 1204 : 			sprintf(RetChar,"Server Record: %s has spent %.0lf minutes cloaked.",High->PlayerName,High->TimeCloaked/60.0f);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+412]
	mov	DWORD PTR tv627[ebp], ecx
	cvtsi2sd xmm0, DWORD PTR tv627[ebp]
	mov	edx, DWORD PTR tv627[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv631[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv631[ebp]
	divss	xmm0, DWORD PTR __real@42700000
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _High$[ebp]
	push	eax
	push	OFFSET ??_C@_0DD@OEPBIMNK@Server?5Record?3?5?$CFs?5has?5spent?5?$CF?40l@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN22@ReturnScor:

; 1205 : 		case 39:
; 1206 : 			sprintf(RetChar,"Server Record: %s has cloaked %lu times.",High->PlayerName,High->ShipCloakedCount);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0CJ@ECHLBDIE@Server?5Record?3?5?$CFs?5has?5cloaked?5?$CFl@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN21@ReturnScor:

; 1207 : 		case 40:
; 1208 : 			sprintf(RetChar,"Server Record: %s has spent %.0lf minutes with shields up.",High->PlayerName,High->TimeShielded/60.0f);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+420]
	mov	DWORD PTR tv642[ebp], ecx
	cvtsi2sd xmm0, DWORD PTR tv642[ebp]
	mov	edx, DWORD PTR tv642[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv646[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv646[ebp]
	divss	xmm0, DWORD PTR __real@42700000
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _High$[ebp]
	push	eax
	push	OFFSET ??_C@_0DL@JPAFHEPO@Server?5Record?3?5?$CFs?5has?5spent?5?$CF?40l@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN20@ReturnScor:

; 1209 : 		case 41:
; 1210 : 			sprintf(RetChar,"Server Record: %s has raised their shield %lu times.",High->PlayerName,High->ShieldRaisedCount);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+424]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DF@DMFGBHAH@Server?5Record?3?5?$CFs?5has?5raised?5the@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN19@ReturnScor:

; 1211 : 		case 42:
; 1212 : 			sprintf(RetChar,"Server Record: %s has ran out of power %lu times.",High->PlayerName,High->RanOutOfPowerCount);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DC@KHHPHFGD@Server?5Record?3?5?$CFs?5has?5ran?5out?5of@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN18@ReturnScor:

; 1213 : 		case 43:
; 1214 : 			sprintf(RetChar,"Server Record: %s has scored %lu points by calling in Galatic Cargo Ships.",High->PlayerName,High->CargoShipScore);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+432]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0EL@PDJFJLGA@Server?5Record?3?5?$CFs?5has?5scored?5?$CFlu@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN17@ReturnScor:

; 1215 : 		case 44:
; 1216 : 			sprintf(RetChar,"Server Record: %s has destroyed %lu objects with Galatic Cargo Ships.",High->PlayerName,High->CargoShipKills);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+436]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0EG@HIMLHNHP@Server?5Record?3?5?$CFs?5has?5destroyed?5@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN16@ReturnScor:

; 1217 : 		case 45:
; 1218 : 			sprintf(RetChar,"Server Record: %s jumped out of danger %lu times.",High->PlayerName,High->JumpsUsed);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+440]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DC@BHEIBAME@Server?5Record?3?5?$CFs?5jumped?5out?5of?5@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN15@ReturnScor:

; 1219 : 		case 46:
; 1220 : 			sprintf(RetChar,"Server Record: %s has acquired %lu Drones Swarm Transmission Codes.",High->PlayerName,High->PickedUpDroneSwarm);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+444]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0EE@EMELICEB@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN14@ReturnScor:

; 1221 : 		case 47:
; 1222 : 			sprintf(RetChar,"Server Record: %s has used %lu Drones Swarm Transmission Codes.",High->PlayerName,High->UsedDronesSwarm);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+448]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0EA@DEKFDIMD@Server?5Record?3?5?$CFs?5has?5used?5?$CFlu?5D@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN13@ReturnScor:

; 1223 : 		case 48:
; 1224 : 			sprintf(RetChar,"Server Record: %s has used the disrupter for %.0lf minutes.",High->PlayerName,High->TimeDisrupted/60.0f);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+452]
	mov	DWORD PTR tv675[ebp], ecx
	cvtsi2sd xmm0, DWORD PTR tv675[ebp]
	mov	edx, DWORD PTR tv675[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv679[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv679[ebp]
	divss	xmm0, DWORD PTR __real@42700000
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _High$[ebp]
	push	eax
	push	OFFSET ??_C@_0DM@GLCLBJGE@Server?5Record?3?5?$CFs?5has?5used?5the?5d@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN12@ReturnScor:

; 1225 : 		case 49:
; 1226 : 			sprintf(RetChar,"Server Record: %s has used the disrupter for %lu minutes.",High->PlayerName,High->UpgadedWeaponPowerups);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+456]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DK@DMKGKKDP@Server?5Record?3?5?$CFs?5has?5used?5the?5d@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN11@ReturnScor:

; 1227 : 		case 50:
; 1228 : 			sprintf(RetChar,"Server Record: %s has acquired %lu weapon upgrade powerups.",High->PlayerName,High->UpgadedWeaponPowerups);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+456]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DM@HFEPMBHP@Server?5Record?3?5?$CFs?5has?5acquired?5?$CF@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN10@ReturnScor:

; 1229 : 		case 51:
; 1230 : 			sprintf(RetChar,"Server Record: %s has gained a total score of %lu without any special abilities.",High->PlayerName,High->HighestCleanScore);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+464]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0FB@HJAMHEGP@Server?5Record?3?5?$CFs?5has?5gained?5a?5t@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN9@ReturnScor:

; 1231 : 		case 52:
; 1232 : 			sprintf(RetChar,"Server Record: %s has acquired a team score of %lu without any special abilities.",High->PlayerName,High->HighestCleanTeamScore);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+468]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0FC@LKOPDGAN@Server?5Record?3?5?$CFs?5has?5acquired?5a@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN8@ReturnScor:

; 1233 : 		case 53:
; 1234 : 			sprintf(RetChar,"Server Record: %s has made it to level %lu without any special abilities.",High->PlayerName,High->HighestCleanLevel);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+472]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0EK@EJAOIFKK@Server?5Record?3?5?$CFs?5has?5made?5it?5to@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN7@ReturnScor:

; 1235 : 		case 54:
; 1236 : 			sprintf(RetChar,"Server Record: %s has made it to level %lu with teamwork and without any special abilities.",High->PlayerName,High->HighestCleanTeamLevel);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+476]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0FM@JFAIJNJM@Server?5Record?3?5?$CFs?5has?5made?5it?5to@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN6@ReturnScor:

; 1237 : 		case 55:
; 1238 : 			sprintf(RetChar,"Server Record: %s has acquired a team score of %lu.",High->PlayerName,High->HighestTeamScore);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+480]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0DE@BNPLGNGL@Server?5Record?3?5?$CFs?5has?5acquired?5a@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN5@ReturnScor:

; 1239 : 		case 56:
; 1240 : 			sprintf(RetChar,"Server Record: %s has played %lu levels with special abilities.",High->PlayerName,High->LevelsPlayedWithPerks);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+484]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0EA@HMKFKMDK@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN4@ReturnScor:

; 1241 : 		case 57:
; 1242 : 			sprintf(RetChar,"Server Record: %s has played %lu levels without special abilities.",High->PlayerName,High->LevelsPlayedWithOutPerks);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+488]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0ED@BEMCOBMI@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN3@ReturnScor:

; 1243 : 		case 58:
; 1244 : 			sprintf(RetChar,"Server Record: %s has played %lu levels with a team using perks.",High->PlayerName,High->LevelsPlayedWithPerksAsATeam);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+492]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0EB@KDCCDDHB@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	$LN62@ReturnScor
$LN2@ReturnScor:

; 1245 : 		case 59:
; 1246 : 			sprintf(RetChar,"Server Record: %s has played %lu levels with a team not using perks.",High->PlayerName,High->LevelsPlayedWithOutPerksAsATeam);return RetChar;

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+496]
	push	ecx
	mov	edx, DWORD PTR _High$[ebp]
	push	edx
	push	OFFSET ??_C@_0EF@IKOELIKK@Server?5Record?3?5?$CFs?5has?5played?5?$CFlu@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	jmp	SHORT $LN62@ReturnScor
$LN1@ReturnScor:

; 1247 : 		default:
; 1248 : 			sprintf(RetChar,"Server Record: %s has played Renegade Comet Busters for %.0lf minutes on this server.",High->PlayerName,High->PlayTime/60.0f);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR [eax+256]
	mov	DWORD PTR tv720[ebp], ecx
	cvtsi2sd xmm0, DWORD PTR tv720[ebp]
	mov	edx, DWORD PTR tv720[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv724[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv724[ebp]
	divss	xmm0, DWORD PTR __real@42700000
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _High$[ebp]
	push	eax
	push	OFFSET ??_C@_0FG@JGAHDHJ@Server?5Record?3?5?$CFs?5has?5played?5Ren@
	push	OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H

; 1249 : 			return RetChar;

	mov	eax, OFFSET ?RetChar@?1??ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@2@H@Z@4PADA ; `RenCometBustersScoreSystem::ReturnScore'::`2'::RetChar
$LN62@ReturnScor:

; 1250 : 		}
; 1251 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN67@ReturnScor:
	DD	$LN61@ReturnScor
	DD	$LN60@ReturnScor
	DD	$LN59@ReturnScor
	DD	$LN58@ReturnScor
	DD	$LN57@ReturnScor
	DD	$LN56@ReturnScor
	DD	$LN55@ReturnScor
	DD	$LN54@ReturnScor
	DD	$LN53@ReturnScor
	DD	$LN52@ReturnScor
	DD	$LN51@ReturnScor
	DD	$LN50@ReturnScor
	DD	$LN49@ReturnScor
	DD	$LN48@ReturnScor
	DD	$LN47@ReturnScor
	DD	$LN46@ReturnScor
	DD	$LN45@ReturnScor
	DD	$LN44@ReturnScor
	DD	$LN43@ReturnScor
	DD	$LN42@ReturnScor
	DD	$LN41@ReturnScor
	DD	$LN40@ReturnScor
	DD	$LN39@ReturnScor
	DD	$LN38@ReturnScor
	DD	$LN37@ReturnScor
	DD	$LN36@ReturnScor
	DD	$LN35@ReturnScor
	DD	$LN34@ReturnScor
	DD	$LN33@ReturnScor
	DD	$LN32@ReturnScor
	DD	$LN31@ReturnScor
	DD	$LN30@ReturnScor
	DD	$LN29@ReturnScor
	DD	$LN28@ReturnScor
	DD	$LN27@ReturnScor
	DD	$LN26@ReturnScor
	DD	$LN25@ReturnScor
	DD	$LN24@ReturnScor
	DD	$LN23@ReturnScor
	DD	$LN22@ReturnScor
	DD	$LN21@ReturnScor
	DD	$LN20@ReturnScor
	DD	$LN19@ReturnScor
	DD	$LN18@ReturnScor
	DD	$LN17@ReturnScor
	DD	$LN16@ReturnScor
	DD	$LN15@ReturnScor
	DD	$LN14@ReturnScor
	DD	$LN13@ReturnScor
	DD	$LN12@ReturnScor
	DD	$LN11@ReturnScor
	DD	$LN10@ReturnScor
	DD	$LN9@ReturnScor
	DD	$LN8@ReturnScor
	DD	$LN7@ReturnScor
	DD	$LN6@ReturnScor
	DD	$LN5@ReturnScor
	DD	$LN4@ReturnScor
	DD	$LN3@ReturnScor
	DD	$LN2@ReturnScor
?ReturnScore@RenCometBustersScoreSystem@@QAEPADPAUCMTBHighScoresNode@1@H@Z ENDP ; RenCometBustersScoreSystem::ReturnScore
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?ReturnHighScoreNodeValue@RenCometBustersScoreSystem@@QAE_NPAUCMTBHighScoresNode@1@H@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
tv280 = -69						; size = 1
tv277 = -69						; size = 1
tv274 = -69						; size = 1
tv271 = -69						; size = 1
tv268 = -69						; size = 1
tv265 = -69						; size = 1
tv262 = -69						; size = 1
tv259 = -69						; size = 1
tv256 = -69						; size = 1
tv253 = -69						; size = 1
tv250 = -69						; size = 1
tv247 = -69						; size = 1
tv244 = -69						; size = 1
tv241 = -69						; size = 1
tv238 = -69						; size = 1
tv235 = -69						; size = 1
tv232 = -69						; size = 1
tv229 = -69						; size = 1
tv226 = -69						; size = 1
tv223 = -69						; size = 1
tv220 = -69						; size = 1
tv217 = -69						; size = 1
tv214 = -69						; size = 1
tv211 = -69						; size = 1
tv208 = -69						; size = 1
tv205 = -69						; size = 1
tv202 = -69						; size = 1
tv199 = -69						; size = 1
tv196 = -69						; size = 1
tv193 = -69						; size = 1
tv190 = -69						; size = 1
tv187 = -69						; size = 1
tv184 = -69						; size = 1
tv181 = -69						; size = 1
tv178 = -69						; size = 1
tv175 = -69						; size = 1
tv172 = -69						; size = 1
tv169 = -69						; size = 1
tv166 = -69						; size = 1
tv163 = -69						; size = 1
tv160 = -69						; size = 1
tv157 = -69						; size = 1
tv154 = -69						; size = 1
tv151 = -69						; size = 1
tv148 = -69						; size = 1
tv145 = -69						; size = 1
tv142 = -69						; size = 1
tv139 = -69						; size = 1
tv136 = -69						; size = 1
tv133 = -69						; size = 1
tv130 = -69						; size = 1
tv95 = -69						; size = 1
tv92 = -69						; size = 1
tv89 = -69						; size = 1
tv86 = -69						; size = 1
tv83 = -69						; size = 1
tv80 = -69						; size = 1
tv77 = -69						; size = 1
tv74 = -69						; size = 1
tv71 = -69						; size = 1
tv68 = -69						; size = 1
_this$ = -4						; size = 4
_Node$ = 8						; size = 4
_CompVal$ = 12						; size = 4
?ReturnHighScoreNodeValue@RenCometBustersScoreSystem@@QAE_NPAUCMTBHighScoresNode@1@H@Z PROC ; RenCometBustersScoreSystem::ReturnHighScoreNodeValue, COMDAT
; _this$ = ecx

; 990  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 991  : 		if (!Node)

	cmp	DWORD PTR _Node$[ebp], 0
	jne	SHORT $LN64@ReturnHigh

; 992  : 			return false;

	xor	al, al
	jmp	$LN65@ReturnHigh
$LN64@ReturnHigh:

; 993  : 		switch (CompVal)

	mov	eax, DWORD PTR _CompVal$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 59			; 0000003bH
	ja	$LN1@ReturnHigh
	mov	ecx, DWORD PTR tv65[ebp]
	jmp	DWORD PTR $LN189@ReturnHigh[ecx*4]
$LN61@ReturnHigh:

; 994  : 		{
; 995  : 		case 0:
; 996  : 			return Node->RoundsPlayed ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+260], 0
	je	SHORT $LN67@ReturnHigh
	mov	BYTE PTR tv68[ebp], 1
	jmp	SHORT $LN68@ReturnHigh
$LN67@ReturnHigh:
	mov	BYTE PTR tv68[ebp], 0
$LN68@ReturnHigh:
	mov	al, BYTE PTR tv68[ebp]
	jmp	$LN65@ReturnHigh
$LN60@ReturnHigh:

; 997  : 		case 1:
; 998  : 			return Node->Deaths ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+264], 0
	je	SHORT $LN69@ReturnHigh
	mov	BYTE PTR tv71[ebp], 1
	jmp	SHORT $LN70@ReturnHigh
$LN69@ReturnHigh:
	mov	BYTE PTR tv71[ebp], 0
$LN70@ReturnHigh:
	mov	al, BYTE PTR tv71[ebp]
	jmp	$LN65@ReturnHigh
$LN59@ReturnHigh:

; 999  : 		case 2:
; 1000 : 			return Node->CometSmall ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+268], 0
	je	SHORT $LN71@ReturnHigh
	mov	BYTE PTR tv74[ebp], 1
	jmp	SHORT $LN72@ReturnHigh
$LN71@ReturnHigh:
	mov	BYTE PTR tv74[ebp], 0
$LN72@ReturnHigh:
	mov	al, BYTE PTR tv74[ebp]
	jmp	$LN65@ReturnHigh
$LN58@ReturnHigh:

; 1001 : 		case 3:
; 1002 : 			return Node->CometMedium ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+272], 0
	je	SHORT $LN73@ReturnHigh
	mov	BYTE PTR tv77[ebp], 1
	jmp	SHORT $LN74@ReturnHigh
$LN73@ReturnHigh:
	mov	BYTE PTR tv77[ebp], 0
$LN74@ReturnHigh:
	mov	al, BYTE PTR tv77[ebp]
	jmp	$LN65@ReturnHigh
$LN57@ReturnHigh:

; 1003 : 		case 4:
; 1004 : 			return Node->CometLarge ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+276], 0
	je	SHORT $LN75@ReturnHigh
	mov	BYTE PTR tv80[ebp], 1
	jmp	SHORT $LN76@ReturnHigh
$LN75@ReturnHigh:
	mov	BYTE PTR tv80[ebp], 0
$LN76@ReturnHigh:
	mov	al, BYTE PTR tv80[ebp]
	jmp	$LN65@ReturnHigh
$LN56@ReturnHigh:

; 1005 : 		case 5:
; 1006 : 			return Node->CometHuge ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+280], 0
	je	SHORT $LN77@ReturnHigh
	mov	BYTE PTR tv83[ebp], 1
	jmp	SHORT $LN78@ReturnHigh
$LN77@ReturnHigh:
	mov	BYTE PTR tv83[ebp], 0
$LN78@ReturnHigh:
	mov	al, BYTE PTR tv83[ebp]
	jmp	$LN65@ReturnHigh
$LN55@ReturnHigh:

; 1007 : 		case 6:
; 1008 : 			return Node->TheMoon ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+284], 0
	je	SHORT $LN79@ReturnHigh
	mov	BYTE PTR tv86[ebp], 1
	jmp	SHORT $LN80@ReturnHigh
$LN79@ReturnHigh:
	mov	BYTE PTR tv86[ebp], 0
$LN80@ReturnHigh:
	mov	al, BYTE PTR tv86[ebp]
	jmp	$LN65@ReturnHigh
$LN54@ReturnHigh:

; 1009 : 		case 7:
; 1010 : 			return Node->UFO ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+288], 0
	je	SHORT $LN81@ReturnHigh
	mov	BYTE PTR tv89[ebp], 1
	jmp	SHORT $LN82@ReturnHigh
$LN81@ReturnHigh:
	mov	BYTE PTR tv89[ebp], 0
$LN82@ReturnHigh:
	mov	al, BYTE PTR tv89[ebp]
	jmp	$LN65@ReturnHigh
$LN53@ReturnHigh:

; 1011 : 		case 8:
; 1012 : 			return Node->Mine ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+292], 0
	je	SHORT $LN83@ReturnHigh
	mov	BYTE PTR tv92[ebp], 1
	jmp	SHORT $LN84@ReturnHigh
$LN83@ReturnHigh:
	mov	BYTE PTR tv92[ebp], 0
$LN84@ReturnHigh:
	mov	al, BYTE PTR tv92[ebp]
	jmp	$LN65@ReturnHigh
$LN52@ReturnHigh:

; 1013 : 		case 9:
; 1014 : 			return Node->OtherPlayers ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+296], 0
	je	SHORT $LN85@ReturnHigh
	mov	BYTE PTR tv95[ebp], 1
	jmp	SHORT $LN86@ReturnHigh
$LN85@ReturnHigh:
	mov	BYTE PTR tv95[ebp], 0
$LN86@ReturnHigh:
	mov	al, BYTE PTR tv95[ebp]
	jmp	$LN65@ReturnHigh
$LN51@ReturnHigh:

; 1015 : 		case 10:
; 1016 : 			return Node->HighestScore ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+300], 0
	je	SHORT $LN87@ReturnHigh
	mov	BYTE PTR tv130[ebp], 1
	jmp	SHORT $LN88@ReturnHigh
$LN87@ReturnHigh:
	mov	BYTE PTR tv130[ebp], 0
$LN88@ReturnHigh:
	mov	al, BYTE PTR tv130[ebp]
	jmp	$LN65@ReturnHigh
$LN50@ReturnHigh:

; 1017 : 		case 11:
; 1018 : 			return Node->TotalScore ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+304], 0
	je	SHORT $LN89@ReturnHigh
	mov	BYTE PTR tv133[ebp], 1
	jmp	SHORT $LN90@ReturnHigh
$LN89@ReturnHigh:
	mov	BYTE PTR tv133[ebp], 0
$LN90@ReturnHigh:
	mov	al, BYTE PTR tv133[ebp]
	jmp	$LN65@ReturnHigh
$LN49@ReturnHigh:

; 1019 : 		case 12:
; 1020 : 			return Node->HighestLevel ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+308], 0
	je	SHORT $LN91@ReturnHigh
	mov	BYTE PTR tv136[ebp], 1
	jmp	SHORT $LN92@ReturnHigh
$LN91@ReturnHigh:
	mov	BYTE PTR tv136[ebp], 0
$LN92@ReturnHigh:
	mov	al, BYTE PTR tv136[ebp]
	jmp	$LN65@ReturnHigh
$LN48@ReturnHigh:

; 1021 : 		case 13:
; 1022 : 			return Node->TotalComets ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+312], 0
	je	SHORT $LN93@ReturnHigh
	mov	BYTE PTR tv139[ebp], 1
	jmp	SHORT $LN94@ReturnHigh
$LN93@ReturnHigh:
	mov	BYTE PTR tv139[ebp], 0
$LN94@ReturnHigh:
	mov	al, BYTE PTR tv139[ebp]
	jmp	$LN65@ReturnHigh
$LN47@ReturnHigh:

; 1023 : 		case 14:
; 1024 : 			return Node->HEWPowerups ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+316], 0
	je	SHORT $LN95@ReturnHigh
	mov	BYTE PTR tv142[ebp], 1
	jmp	SHORT $LN96@ReturnHigh
$LN95@ReturnHigh:
	mov	BYTE PTR tv142[ebp], 0
$LN96@ReturnHigh:
	mov	al, BYTE PTR tv142[ebp]
	jmp	$LN65@ReturnHigh
$LN46@ReturnHigh:

; 1025 : 		case 15:
; 1026 : 			return Node->HEWUsed ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+320], 0
	je	SHORT $LN97@ReturnHigh
	mov	BYTE PTR tv145[ebp], 1
	jmp	SHORT $LN98@ReturnHigh
$LN97@ReturnHigh:
	mov	BYTE PTR tv145[ebp], 0
$LN98@ReturnHigh:
	mov	al, BYTE PTR tv145[ebp]
	jmp	$LN65@ReturnHigh
$LN45@ReturnHigh:

; 1027 : 		case 16:
; 1028 : 			return Node->RoundsFired ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+324], 0
	je	SHORT $LN99@ReturnHigh
	mov	BYTE PTR tv148[ebp], 1
	jmp	SHORT $LN100@ReturnHigh
$LN99@ReturnHigh:
	mov	BYTE PTR tv148[ebp], 0
$LN100@ReturnHigh:
	mov	al, BYTE PTR tv148[ebp]
	jmp	$LN65@ReturnHigh
$LN44@ReturnHigh:

; 1029 : 		case 17:
; 1030 : 			return Node->TeamHighestLevel ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+328], 0
	je	SHORT $LN101@ReturnHigh
	mov	BYTE PTR tv151[ebp], 1
	jmp	SHORT $LN102@ReturnHigh
$LN101@ReturnHigh:
	mov	BYTE PTR tv151[ebp], 0
$LN102@ReturnHigh:
	mov	al, BYTE PTR tv151[ebp]
	jmp	$LN65@ReturnHigh
$LN43@ReturnHigh:

; 1031 : 		case 18:
; 1032 : 			return Node->GrantedOtherPlayersLives ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+332], 0
	je	SHORT $LN103@ReturnHigh
	mov	BYTE PTR tv154[ebp], 1
	jmp	SHORT $LN104@ReturnHigh
$LN103@ReturnHigh:
	mov	BYTE PTR tv154[ebp], 0
$LN104@ReturnHigh:
	mov	al, BYTE PTR tv154[ebp]
	jmp	$LN65@ReturnHigh
$LN42@ReturnHigh:

; 1033 : 		case 19:
; 1034 : 			return Node->ReceivedOtherPlayersLives ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+336], 0
	je	SHORT $LN105@ReturnHigh
	mov	BYTE PTR tv157[ebp], 1
	jmp	SHORT $LN106@ReturnHigh
$LN105@ReturnHigh:
	mov	BYTE PTR tv157[ebp], 0
$LN106@ReturnHigh:
	mov	al, BYTE PTR tv157[ebp]
	jmp	$LN65@ReturnHigh
$LN41@ReturnHigh:

; 1035 : 		case 20:
; 1036 : 			return Node->CargoShip ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+340], 0
	je	SHORT $LN107@ReturnHigh
	mov	BYTE PTR tv160[ebp], 1
	jmp	SHORT $LN108@ReturnHigh
$LN107@ReturnHigh:
	mov	BYTE PTR tv160[ebp], 0
$LN108@ReturnHigh:
	mov	al, BYTE PTR tv160[ebp]
	jmp	$LN65@ReturnHigh
$LN40@ReturnHigh:

; 1037 : 		case 21:
; 1038 : 			return Node->NewLivesAcquired ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+344], 0
	je	SHORT $LN109@ReturnHigh
	mov	BYTE PTR tv163[ebp], 1
	jmp	SHORT $LN110@ReturnHigh
$LN109@ReturnHigh:
	mov	BYTE PTR tv163[ebp], 0
$LN110@ReturnHigh:
	mov	al, BYTE PTR tv163[ebp]
	jmp	$LN65@ReturnHigh
$LN39@ReturnHigh:

; 1039 : 		case 22:
; 1040 : 			return Node->ObjectsRammed ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+348], 0
	je	SHORT $LN111@ReturnHigh
	mov	BYTE PTR tv166[ebp], 1
	jmp	SHORT $LN112@ReturnHigh
$LN111@ReturnHigh:
	mov	BYTE PTR tv166[ebp], 0
$LN112@ReturnHigh:
	mov	al, BYTE PTR tv166[ebp]
	jmp	$LN65@ReturnHigh
$LN38@ReturnHigh:

; 1041 : 		case 23:
; 1042 : 			return Node->SOSBeacons ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+352], 0
	je	SHORT $LN113@ReturnHigh
	mov	BYTE PTR tv169[ebp], 1
	jmp	SHORT $LN114@ReturnHigh
$LN113@ReturnHigh:
	mov	BYTE PTR tv169[ebp], 0
$LN114@ReturnHigh:
	mov	al, BYTE PTR tv169[ebp]
	jmp	$LN65@ReturnHigh
$LN37@ReturnHigh:

; 1043 : 		case 24:
; 1044 : 			return Node->PowerPowerups ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+356], 0
	je	SHORT $LN115@ReturnHigh
	mov	BYTE PTR tv172[ebp], 1
	jmp	SHORT $LN116@ReturnHigh
$LN115@ReturnHigh:
	mov	BYTE PTR tv172[ebp], 0
$LN116@ReturnHigh:
	mov	al, BYTE PTR tv172[ebp]
	jmp	$LN65@ReturnHigh
$LN36@ReturnHigh:

; 1045 : 		case 25:
; 1046 : 			return Node->ExtraLifePowerups ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+360], 0
	je	SHORT $LN117@ReturnHigh
	mov	BYTE PTR tv175[ebp], 1
	jmp	SHORT $LN118@ReturnHigh
$LN117@ReturnHigh:
	mov	BYTE PTR tv175[ebp], 0
$LN118@ReturnHigh:
	mov	al, BYTE PTR tv175[ebp]
	jmp	$LN65@ReturnHigh
$LN35@ReturnHigh:

; 1047 : 		case 26:
; 1048 : 			return Node->UsedSOSBeacons ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+364], 0
	je	SHORT $LN119@ReturnHigh
	mov	BYTE PTR tv178[ebp], 1
	jmp	SHORT $LN120@ReturnHigh
$LN119@ReturnHigh:
	mov	BYTE PTR tv178[ebp], 0
$LN120@ReturnHigh:
	mov	al, BYTE PTR tv178[ebp]
	jmp	$LN65@ReturnHigh
$LN34@ReturnHigh:

; 1049 : 		case 27:
; 1050 : 			return Node->PointPowerups ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+368], 0
	je	SHORT $LN121@ReturnHigh
	mov	BYTE PTR tv181[ebp], 1
	jmp	SHORT $LN122@ReturnHigh
$LN121@ReturnHigh:
	mov	BYTE PTR tv181[ebp], 0
$LN122@ReturnHigh:
	mov	al, BYTE PTR tv181[ebp]
	jmp	$LN65@ReturnHigh
$LN33@ReturnHigh:

; 1051 : 		case 28:
; 1052 : 			return Node->PowerupPoints ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+372], 0
	je	SHORT $LN123@ReturnHigh
	mov	BYTE PTR tv184[ebp], 1
	jmp	SHORT $LN124@ReturnHigh
$LN123@ReturnHigh:
	mov	BYTE PTR tv184[ebp], 0
$LN124@ReturnHigh:
	mov	al, BYTE PTR tv184[ebp]
	jmp	$LN65@ReturnHigh
$LN32@ReturnHigh:

; 1053 : 		case 29:
; 1054 : 			return Node->PickedUpDrone ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+376], 0
	je	SHORT $LN125@ReturnHigh
	mov	BYTE PTR tv187[ebp], 1
	jmp	SHORT $LN126@ReturnHigh
$LN125@ReturnHigh:
	mov	BYTE PTR tv187[ebp], 0
$LN126@ReturnHigh:
	mov	al, BYTE PTR tv187[ebp]
	jmp	$LN65@ReturnHigh
$LN31@ReturnHigh:

; 1055 : 		case 30:
; 1056 : 			return Node->UsedDrones ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+380], 0
	je	SHORT $LN127@ReturnHigh
	mov	BYTE PTR tv190[ebp], 1
	jmp	SHORT $LN128@ReturnHigh
$LN127@ReturnHigh:
	mov	BYTE PTR tv190[ebp], 0
$LN128@ReturnHigh:
	mov	al, BYTE PTR tv190[ebp]
	jmp	$LN65@ReturnHigh
$LN30@ReturnHigh:

; 1057 : 		case 31:
; 1058 : 			return Node->DroneKills ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+384], 0
	je	SHORT $LN129@ReturnHigh
	mov	BYTE PTR tv193[ebp], 1
	jmp	SHORT $LN130@ReturnHigh
$LN129@ReturnHigh:
	mov	BYTE PTR tv193[ebp], 0
$LN130@ReturnHigh:
	mov	al, BYTE PTR tv193[ebp]
	jmp	$LN65@ReturnHigh
$LN29@ReturnHigh:

; 1059 : 		case 32:
; 1060 : 			return Node->DronesKilled ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+388], 0
	je	SHORT $LN131@ReturnHigh
	mov	BYTE PTR tv196[ebp], 1
	jmp	SHORT $LN132@ReturnHigh
$LN131@ReturnHigh:
	mov	BYTE PTR tv196[ebp], 0
$LN132@ReturnHigh:
	mov	al, BYTE PTR tv196[ebp]
	jmp	$LN65@ReturnHigh
$LN28@ReturnHigh:

; 1061 : 		case 33:
; 1062 : 			return Node->DronePoints ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+392], 0
	je	SHORT $LN133@ReturnHigh
	mov	BYTE PTR tv199[ebp], 1
	jmp	SHORT $LN134@ReturnHigh
$LN133@ReturnHigh:
	mov	BYTE PTR tv199[ebp], 0
$LN134@ReturnHigh:
	mov	al, BYTE PTR tv199[ebp]
	jmp	$LN65@ReturnHigh
$LN27@ReturnHigh:

; 1063 : 		case 34:
; 1064 : 			return Node->RegenPowerups ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+396], 0
	je	SHORT $LN135@ReturnHigh
	mov	BYTE PTR tv202[ebp], 1
	jmp	SHORT $LN136@ReturnHigh
$LN135@ReturnHigh:
	mov	BYTE PTR tv202[ebp], 0
$LN136@ReturnHigh:
	mov	al, BYTE PTR tv202[ebp]
	jmp	$LN65@ReturnHigh
$LN26@ReturnHigh:

; 1065 : 		case 35:
; 1066 : 			return Node->DoublePointsPowerups ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+400], 0
	je	SHORT $LN137@ReturnHigh
	mov	BYTE PTR tv205[ebp], 1
	jmp	SHORT $LN138@ReturnHigh
$LN137@ReturnHigh:
	mov	BYTE PTR tv205[ebp], 0
$LN138@ReturnHigh:
	mov	al, BYTE PTR tv205[ebp]
	jmp	$LN65@ReturnHigh
$LN25@ReturnHigh:

; 1067 : 		case 36:
; 1068 : 			return Node->DoublePointsPoints ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+404], 0
	je	SHORT $LN139@ReturnHigh
	mov	BYTE PTR tv208[ebp], 1
	jmp	SHORT $LN140@ReturnHigh
$LN139@ReturnHigh:
	mov	BYTE PTR tv208[ebp], 0
$LN140@ReturnHigh:
	mov	al, BYTE PTR tv208[ebp]
	jmp	$LN65@ReturnHigh
$LN24@ReturnHigh:

; 1069 : 		case 37:
; 1070 : 			return Node->DeerPowerups ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+408], 0
	je	SHORT $LN141@ReturnHigh
	mov	BYTE PTR tv211[ebp], 1
	jmp	SHORT $LN142@ReturnHigh
$LN141@ReturnHigh:
	mov	BYTE PTR tv211[ebp], 0
$LN142@ReturnHigh:
	mov	al, BYTE PTR tv211[ebp]
	jmp	$LN65@ReturnHigh
$LN23@ReturnHigh:

; 1071 : 		case 38:
; 1072 : 			return Node->TimeCloaked ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+412], 0
	je	SHORT $LN143@ReturnHigh
	mov	BYTE PTR tv214[ebp], 1
	jmp	SHORT $LN144@ReturnHigh
$LN143@ReturnHigh:
	mov	BYTE PTR tv214[ebp], 0
$LN144@ReturnHigh:
	mov	al, BYTE PTR tv214[ebp]
	jmp	$LN65@ReturnHigh
$LN22@ReturnHigh:

; 1073 : 		case 39:
; 1074 : 			return Node->ShipCloakedCount ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+416], 0
	je	SHORT $LN145@ReturnHigh
	mov	BYTE PTR tv217[ebp], 1
	jmp	SHORT $LN146@ReturnHigh
$LN145@ReturnHigh:
	mov	BYTE PTR tv217[ebp], 0
$LN146@ReturnHigh:
	mov	al, BYTE PTR tv217[ebp]
	jmp	$LN65@ReturnHigh
$LN21@ReturnHigh:

; 1075 : 		case 40:
; 1076 : 			return Node->TimeShielded ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+420], 0
	je	SHORT $LN147@ReturnHigh
	mov	BYTE PTR tv220[ebp], 1
	jmp	SHORT $LN148@ReturnHigh
$LN147@ReturnHigh:
	mov	BYTE PTR tv220[ebp], 0
$LN148@ReturnHigh:
	mov	al, BYTE PTR tv220[ebp]
	jmp	$LN65@ReturnHigh
$LN20@ReturnHigh:

; 1077 : 		case 41:
; 1078 : 			return Node->ShieldRaisedCount ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+424], 0
	je	SHORT $LN149@ReturnHigh
	mov	BYTE PTR tv223[ebp], 1
	jmp	SHORT $LN150@ReturnHigh
$LN149@ReturnHigh:
	mov	BYTE PTR tv223[ebp], 0
$LN150@ReturnHigh:
	mov	al, BYTE PTR tv223[ebp]
	jmp	$LN65@ReturnHigh
$LN19@ReturnHigh:

; 1079 : 		case 42:
; 1080 : 			return Node->RanOutOfPowerCount ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+428], 0
	je	SHORT $LN151@ReturnHigh
	mov	BYTE PTR tv226[ebp], 1
	jmp	SHORT $LN152@ReturnHigh
$LN151@ReturnHigh:
	mov	BYTE PTR tv226[ebp], 0
$LN152@ReturnHigh:
	mov	al, BYTE PTR tv226[ebp]
	jmp	$LN65@ReturnHigh
$LN18@ReturnHigh:

; 1081 : 		case 43:
; 1082 : 			return Node->CargoShipScore ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+432], 0
	je	SHORT $LN153@ReturnHigh
	mov	BYTE PTR tv229[ebp], 1
	jmp	SHORT $LN154@ReturnHigh
$LN153@ReturnHigh:
	mov	BYTE PTR tv229[ebp], 0
$LN154@ReturnHigh:
	mov	al, BYTE PTR tv229[ebp]
	jmp	$LN65@ReturnHigh
$LN17@ReturnHigh:

; 1083 : 		case 44:
; 1084 : 			return Node->CargoShipKills ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+436], 0
	je	SHORT $LN155@ReturnHigh
	mov	BYTE PTR tv232[ebp], 1
	jmp	SHORT $LN156@ReturnHigh
$LN155@ReturnHigh:
	mov	BYTE PTR tv232[ebp], 0
$LN156@ReturnHigh:
	mov	al, BYTE PTR tv232[ebp]
	jmp	$LN65@ReturnHigh
$LN16@ReturnHigh:

; 1085 : 		case 45:
; 1086 : 			return Node->JumpsUsed ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+440], 0
	je	SHORT $LN157@ReturnHigh
	mov	BYTE PTR tv235[ebp], 1
	jmp	SHORT $LN158@ReturnHigh
$LN157@ReturnHigh:
	mov	BYTE PTR tv235[ebp], 0
$LN158@ReturnHigh:
	mov	al, BYTE PTR tv235[ebp]
	jmp	$LN65@ReturnHigh
$LN15@ReturnHigh:

; 1087 : 		case 46:
; 1088 : 			return Node->PickedUpDroneSwarm ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+444], 0
	je	SHORT $LN159@ReturnHigh
	mov	BYTE PTR tv238[ebp], 1
	jmp	SHORT $LN160@ReturnHigh
$LN159@ReturnHigh:
	mov	BYTE PTR tv238[ebp], 0
$LN160@ReturnHigh:
	mov	al, BYTE PTR tv238[ebp]
	jmp	$LN65@ReturnHigh
$LN14@ReturnHigh:

; 1089 : 		case 47:
; 1090 : 			return Node->UsedDronesSwarm ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+448], 0
	je	SHORT $LN161@ReturnHigh
	mov	BYTE PTR tv241[ebp], 1
	jmp	SHORT $LN162@ReturnHigh
$LN161@ReturnHigh:
	mov	BYTE PTR tv241[ebp], 0
$LN162@ReturnHigh:
	mov	al, BYTE PTR tv241[ebp]
	jmp	$LN65@ReturnHigh
$LN13@ReturnHigh:

; 1091 : 		case 48:
; 1092 : 			return Node->TimeDisrupted ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+452], 0
	je	SHORT $LN163@ReturnHigh
	mov	BYTE PTR tv244[ebp], 1
	jmp	SHORT $LN164@ReturnHigh
$LN163@ReturnHigh:
	mov	BYTE PTR tv244[ebp], 0
$LN164@ReturnHigh:
	mov	al, BYTE PTR tv244[ebp]
	jmp	$LN65@ReturnHigh
$LN12@ReturnHigh:

; 1093 : 		case 49:
; 1094 : 			return Node->UpgadedWeaponPowerups ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+456], 0
	je	SHORT $LN165@ReturnHigh
	mov	BYTE PTR tv247[ebp], 1
	jmp	SHORT $LN166@ReturnHigh
$LN165@ReturnHigh:
	mov	BYTE PTR tv247[ebp], 0
$LN166@ReturnHigh:
	mov	al, BYTE PTR tv247[ebp]
	jmp	$LN65@ReturnHigh
$LN11@ReturnHigh:

; 1095 : 		case 50:
; 1096 : 			return Node->UpgadedWeaponTime ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+460], 0
	je	SHORT $LN167@ReturnHigh
	mov	BYTE PTR tv250[ebp], 1
	jmp	SHORT $LN168@ReturnHigh
$LN167@ReturnHigh:
	mov	BYTE PTR tv250[ebp], 0
$LN168@ReturnHigh:
	mov	al, BYTE PTR tv250[ebp]
	jmp	$LN65@ReturnHigh
$LN10@ReturnHigh:

; 1097 : 		case 51:
; 1098 : 			return Node->HighestCleanScore ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+464], 0
	je	SHORT $LN169@ReturnHigh
	mov	BYTE PTR tv253[ebp], 1
	jmp	SHORT $LN170@ReturnHigh
$LN169@ReturnHigh:
	mov	BYTE PTR tv253[ebp], 0
$LN170@ReturnHigh:
	mov	al, BYTE PTR tv253[ebp]
	jmp	$LN65@ReturnHigh
$LN9@ReturnHigh:

; 1099 : 		case 52:
; 1100 : 			return Node->HighestCleanTeamScore ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+468], 0
	je	SHORT $LN171@ReturnHigh
	mov	BYTE PTR tv256[ebp], 1
	jmp	SHORT $LN172@ReturnHigh
$LN171@ReturnHigh:
	mov	BYTE PTR tv256[ebp], 0
$LN172@ReturnHigh:
	mov	al, BYTE PTR tv256[ebp]
	jmp	$LN65@ReturnHigh
$LN8@ReturnHigh:

; 1101 : 		case 53:
; 1102 : 			return Node->HighestCleanLevel ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+472], 0
	je	SHORT $LN173@ReturnHigh
	mov	BYTE PTR tv259[ebp], 1
	jmp	SHORT $LN174@ReturnHigh
$LN173@ReturnHigh:
	mov	BYTE PTR tv259[ebp], 0
$LN174@ReturnHigh:
	mov	al, BYTE PTR tv259[ebp]
	jmp	$LN65@ReturnHigh
$LN7@ReturnHigh:

; 1103 : 		case 54:
; 1104 : 			return Node->HighestCleanTeamLevel ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+476], 0
	je	SHORT $LN175@ReturnHigh
	mov	BYTE PTR tv262[ebp], 1
	jmp	SHORT $LN176@ReturnHigh
$LN175@ReturnHigh:
	mov	BYTE PTR tv262[ebp], 0
$LN176@ReturnHigh:
	mov	al, BYTE PTR tv262[ebp]
	jmp	$LN65@ReturnHigh
$LN6@ReturnHigh:

; 1105 : 		case 55:
; 1106 : 			return Node->HighestTeamScore ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+480], 0
	je	SHORT $LN177@ReturnHigh
	mov	BYTE PTR tv265[ebp], 1
	jmp	SHORT $LN178@ReturnHigh
$LN177@ReturnHigh:
	mov	BYTE PTR tv265[ebp], 0
$LN178@ReturnHigh:
	mov	al, BYTE PTR tv265[ebp]
	jmp	$LN65@ReturnHigh
$LN5@ReturnHigh:

; 1107 : 		case 56:
; 1108 : 			return Node->LevelsPlayedWithPerks ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+484], 0
	je	SHORT $LN179@ReturnHigh
	mov	BYTE PTR tv268[ebp], 1
	jmp	SHORT $LN180@ReturnHigh
$LN179@ReturnHigh:
	mov	BYTE PTR tv268[ebp], 0
$LN180@ReturnHigh:
	mov	al, BYTE PTR tv268[ebp]
	jmp	SHORT $LN65@ReturnHigh
$LN4@ReturnHigh:

; 1109 : 		case 57:
; 1110 : 			return Node->LevelsPlayedWithOutPerks ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+488], 0
	je	SHORT $LN181@ReturnHigh
	mov	BYTE PTR tv271[ebp], 1
	jmp	SHORT $LN182@ReturnHigh
$LN181@ReturnHigh:
	mov	BYTE PTR tv271[ebp], 0
$LN182@ReturnHigh:
	mov	al, BYTE PTR tv271[ebp]
	jmp	SHORT $LN65@ReturnHigh
$LN3@ReturnHigh:

; 1111 : 		case 58:
; 1112 : 			return Node->LevelsPlayedWithPerksAsATeam ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+492], 0
	je	SHORT $LN183@ReturnHigh
	mov	BYTE PTR tv274[ebp], 1
	jmp	SHORT $LN184@ReturnHigh
$LN183@ReturnHigh:
	mov	BYTE PTR tv274[ebp], 0
$LN184@ReturnHigh:
	mov	al, BYTE PTR tv274[ebp]
	jmp	SHORT $LN65@ReturnHigh
$LN2@ReturnHigh:

; 1113 : 		case 59:
; 1114 : 			return Node->LevelsPlayedWithOutPerksAsATeam ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+496], 0
	je	SHORT $LN185@ReturnHigh
	mov	BYTE PTR tv277[ebp], 1
	jmp	SHORT $LN186@ReturnHigh
$LN185@ReturnHigh:
	mov	BYTE PTR tv277[ebp], 0
$LN186@ReturnHigh:
	mov	al, BYTE PTR tv277[ebp]
	jmp	SHORT $LN65@ReturnHigh
$LN1@ReturnHigh:

; 1115 : 		default:
; 1116 : 			return Node->PlayTime ? true : false;

	mov	eax, DWORD PTR _Node$[ebp]
	cmp	DWORD PTR [eax+256], 0
	je	SHORT $LN187@ReturnHigh
	mov	BYTE PTR tv280[ebp], 1
	jmp	SHORT $LN188@ReturnHigh
$LN187@ReturnHigh:
	mov	BYTE PTR tv280[ebp], 0
$LN188@ReturnHigh:
	mov	al, BYTE PTR tv280[ebp]
$LN65@ReturnHigh:

; 1117 : 		}
; 1118 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN189@ReturnHigh:
	DD	$LN61@ReturnHigh
	DD	$LN60@ReturnHigh
	DD	$LN59@ReturnHigh
	DD	$LN58@ReturnHigh
	DD	$LN57@ReturnHigh
	DD	$LN56@ReturnHigh
	DD	$LN55@ReturnHigh
	DD	$LN54@ReturnHigh
	DD	$LN53@ReturnHigh
	DD	$LN52@ReturnHigh
	DD	$LN51@ReturnHigh
	DD	$LN50@ReturnHigh
	DD	$LN49@ReturnHigh
	DD	$LN48@ReturnHigh
	DD	$LN47@ReturnHigh
	DD	$LN46@ReturnHigh
	DD	$LN45@ReturnHigh
	DD	$LN44@ReturnHigh
	DD	$LN43@ReturnHigh
	DD	$LN42@ReturnHigh
	DD	$LN41@ReturnHigh
	DD	$LN40@ReturnHigh
	DD	$LN39@ReturnHigh
	DD	$LN38@ReturnHigh
	DD	$LN37@ReturnHigh
	DD	$LN36@ReturnHigh
	DD	$LN35@ReturnHigh
	DD	$LN34@ReturnHigh
	DD	$LN33@ReturnHigh
	DD	$LN32@ReturnHigh
	DD	$LN31@ReturnHigh
	DD	$LN30@ReturnHigh
	DD	$LN29@ReturnHigh
	DD	$LN28@ReturnHigh
	DD	$LN27@ReturnHigh
	DD	$LN26@ReturnHigh
	DD	$LN25@ReturnHigh
	DD	$LN24@ReturnHigh
	DD	$LN23@ReturnHigh
	DD	$LN22@ReturnHigh
	DD	$LN21@ReturnHigh
	DD	$LN20@ReturnHigh
	DD	$LN19@ReturnHigh
	DD	$LN18@ReturnHigh
	DD	$LN17@ReturnHigh
	DD	$LN16@ReturnHigh
	DD	$LN15@ReturnHigh
	DD	$LN14@ReturnHigh
	DD	$LN13@ReturnHigh
	DD	$LN12@ReturnHigh
	DD	$LN11@ReturnHigh
	DD	$LN10@ReturnHigh
	DD	$LN9@ReturnHigh
	DD	$LN8@ReturnHigh
	DD	$LN7@ReturnHigh
	DD	$LN6@ReturnHigh
	DD	$LN5@ReturnHigh
	DD	$LN4@ReturnHigh
	DD	$LN3@ReturnHigh
	DD	$LN2@ReturnHigh
?ReturnHighScoreNodeValue@RenCometBustersScoreSystem@@QAE_NPAUCMTBHighScoresNode@1@H@Z ENDP ; RenCometBustersScoreSystem::ReturnHighScoreNodeValue
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?CompareHighScoreNodes@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@PAU21@0H@Z
_TEXT	SEGMENT
tv341 = -72						; size = 4
tv337 = -72						; size = 4
tv333 = -72						; size = 4
tv329 = -72						; size = 4
tv325 = -72						; size = 4
tv321 = -72						; size = 4
tv317 = -72						; size = 4
tv313 = -72						; size = 4
tv309 = -72						; size = 4
tv305 = -72						; size = 4
tv301 = -72						; size = 4
tv297 = -72						; size = 4
tv293 = -72						; size = 4
tv289 = -72						; size = 4
tv285 = -72						; size = 4
tv281 = -72						; size = 4
tv277 = -72						; size = 4
tv273 = -72						; size = 4
tv269 = -72						; size = 4
tv265 = -72						; size = 4
tv261 = -72						; size = 4
tv257 = -72						; size = 4
tv253 = -72						; size = 4
tv249 = -72						; size = 4
tv245 = -72						; size = 4
tv241 = -72						; size = 4
tv237 = -72						; size = 4
tv233 = -72						; size = 4
tv229 = -72						; size = 4
tv225 = -72						; size = 4
tv221 = -72						; size = 4
tv217 = -72						; size = 4
tv213 = -72						; size = 4
tv209 = -72						; size = 4
tv205 = -72						; size = 4
tv201 = -72						; size = 4
tv197 = -72						; size = 4
tv193 = -72						; size = 4
tv189 = -72						; size = 4
tv185 = -72						; size = 4
tv181 = -72						; size = 4
tv177 = -72						; size = 4
tv173 = -72						; size = 4
tv169 = -72						; size = 4
tv165 = -72						; size = 4
tv161 = -72						; size = 4
tv157 = -72						; size = 4
tv153 = -72						; size = 4
tv149 = -72						; size = 4
tv145 = -72						; size = 4
tv141 = -72						; size = 4
tv137 = -72						; size = 4
tv133 = -72						; size = 4
tv129 = -72						; size = 4
tv93 = -72						; size = 4
tv89 = -72						; size = 4
tv85 = -72						; size = 4
tv81 = -72						; size = 4
tv77 = -72						; size = 4
tv73 = -72						; size = 4
tv69 = -72						; size = 4
tv65 = -72						; size = 4
_this$ = -4						; size = 4
_High$ = 8						; size = 4
_Current$ = 12						; size = 4
_CompVal$ = 16						; size = 4
?CompareHighScoreNodes@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@PAU21@0H@Z PROC ; RenCometBustersScoreSystem::CompareHighScoreNodes, COMDAT
; _this$ = ecx

; 859  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 860  : 		if (!High)

	cmp	DWORD PTR _High$[ebp], 0
	jne	SHORT $LN64@CompareHig

; 861  : 			return Current;

	mov	eax, DWORD PTR _Current$[ebp]
	jmp	$LN65@CompareHig
$LN64@CompareHig:

; 862  : 		switch (CompVal)

	mov	eax, DWORD PTR _CompVal$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 59			; 0000003bH
	ja	$LN1@CompareHig
	mov	ecx, DWORD PTR tv65[ebp]
	jmp	DWORD PTR $LN189@CompareHig[ecx*4]
$LN61@CompareHig:

; 863  : 		{
; 864  : 		case 0:
; 865  : 			return (High->RoundsPlayed >= Current->RoundsPlayed ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+260]
	cmp	edx, DWORD PTR [ecx+260]
	jb	SHORT $LN67@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN68@CompareHig
$LN67@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
$LN68@CompareHig:
	mov	eax, DWORD PTR tv69[ebp]
	jmp	$LN65@CompareHig
$LN60@CompareHig:

; 866  : 		case 1:
; 867  : 			return (High->Deaths >= Current->Deaths ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+264]
	cmp	edx, DWORD PTR [ecx+264]
	jb	SHORT $LN69@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN70@CompareHig
$LN69@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv73[ebp], ecx
$LN70@CompareHig:
	mov	eax, DWORD PTR tv73[ebp]
	jmp	$LN65@CompareHig
$LN59@CompareHig:

; 868  : 		case 2:
; 869  : 			return (High->CometSmall >= Current->CometSmall ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+268]
	cmp	edx, DWORD PTR [ecx+268]
	jb	SHORT $LN71@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN72@CompareHig
$LN71@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv77[ebp], ecx
$LN72@CompareHig:
	mov	eax, DWORD PTR tv77[ebp]
	jmp	$LN65@CompareHig
$LN58@CompareHig:

; 870  : 		case 3:
; 871  : 			return (High->CometMedium >= Current->CometMedium ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+272]
	cmp	edx, DWORD PTR [ecx+272]
	jb	SHORT $LN73@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN74@CompareHig
$LN73@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv81[ebp], ecx
$LN74@CompareHig:
	mov	eax, DWORD PTR tv81[ebp]
	jmp	$LN65@CompareHig
$LN57@CompareHig:

; 872  : 		case 4:
; 873  : 			return (High->CometLarge >= Current->CometLarge ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+276]
	cmp	edx, DWORD PTR [ecx+276]
	jb	SHORT $LN75@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN76@CompareHig
$LN75@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv85[ebp], ecx
$LN76@CompareHig:
	mov	eax, DWORD PTR tv85[ebp]
	jmp	$LN65@CompareHig
$LN56@CompareHig:

; 874  : 		case 5:
; 875  : 			return (High->CometHuge >= Current->CometHuge ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+280]
	cmp	edx, DWORD PTR [ecx+280]
	jb	SHORT $LN77@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN78@CompareHig
$LN77@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv89[ebp], ecx
$LN78@CompareHig:
	mov	eax, DWORD PTR tv89[ebp]
	jmp	$LN65@CompareHig
$LN55@CompareHig:

; 876  : 		case 6:
; 877  : 			return (High->TheMoon >= Current->TheMoon ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+284]
	cmp	edx, DWORD PTR [ecx+284]
	jb	SHORT $LN79@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN80@CompareHig
$LN79@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv93[ebp], ecx
$LN80@CompareHig:
	mov	eax, DWORD PTR tv93[ebp]
	jmp	$LN65@CompareHig
$LN54@CompareHig:

; 878  : 		case 7:
; 879  : 			return (High->UFO >= Current->UFO ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+288]
	cmp	edx, DWORD PTR [ecx+288]
	jb	SHORT $LN81@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv129[ebp], eax
	jmp	SHORT $LN82@CompareHig
$LN81@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv129[ebp], ecx
$LN82@CompareHig:
	mov	eax, DWORD PTR tv129[ebp]
	jmp	$LN65@CompareHig
$LN53@CompareHig:

; 880  : 		case 8:
; 881  : 			return (High->Mine >= Current->Mine ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+292]
	cmp	edx, DWORD PTR [ecx+292]
	jb	SHORT $LN83@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN84@CompareHig
$LN83@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv133[ebp], ecx
$LN84@CompareHig:
	mov	eax, DWORD PTR tv133[ebp]
	jmp	$LN65@CompareHig
$LN52@CompareHig:

; 882  : 		case 9:
; 883  : 			return (High->OtherPlayers >= Current->OtherPlayers ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+296]
	cmp	edx, DWORD PTR [ecx+296]
	jb	SHORT $LN85@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN86@CompareHig
$LN85@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv137[ebp], ecx
$LN86@CompareHig:
	mov	eax, DWORD PTR tv137[ebp]
	jmp	$LN65@CompareHig
$LN51@CompareHig:

; 884  : 		case 10:
; 885  : 			return (High->HighestScore >= Current->HighestScore ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+300]
	cmp	edx, DWORD PTR [ecx+300]
	jb	SHORT $LN87@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv141[ebp], eax
	jmp	SHORT $LN88@CompareHig
$LN87@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv141[ebp], ecx
$LN88@CompareHig:
	mov	eax, DWORD PTR tv141[ebp]
	jmp	$LN65@CompareHig
$LN50@CompareHig:

; 886  : 		case 11:
; 887  : 			return (High->TotalScore >= Current->TotalScore ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+304]
	cmp	edx, DWORD PTR [ecx+304]
	jb	SHORT $LN89@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv145[ebp], eax
	jmp	SHORT $LN90@CompareHig
$LN89@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv145[ebp], ecx
$LN90@CompareHig:
	mov	eax, DWORD PTR tv145[ebp]
	jmp	$LN65@CompareHig
$LN49@CompareHig:

; 888  : 		case 12:
; 889  : 			return (High->HighestLevel >= Current->HighestLevel ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+308]
	cmp	edx, DWORD PTR [ecx+308]
	jb	SHORT $LN91@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN92@CompareHig
$LN91@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv149[ebp], ecx
$LN92@CompareHig:
	mov	eax, DWORD PTR tv149[ebp]
	jmp	$LN65@CompareHig
$LN48@CompareHig:

; 890  : 		case 13:
; 891  : 			return (High->TotalComets >= Current->TotalComets ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+312]
	cmp	edx, DWORD PTR [ecx+312]
	jb	SHORT $LN93@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv153[ebp], eax
	jmp	SHORT $LN94@CompareHig
$LN93@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv153[ebp], ecx
$LN94@CompareHig:
	mov	eax, DWORD PTR tv153[ebp]
	jmp	$LN65@CompareHig
$LN47@CompareHig:

; 892  : 		case 14:
; 893  : 			return (High->HEWPowerups >= Current->HEWPowerups ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+316]
	cmp	edx, DWORD PTR [ecx+316]
	jb	SHORT $LN95@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $LN96@CompareHig
$LN95@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv157[ebp], ecx
$LN96@CompareHig:
	mov	eax, DWORD PTR tv157[ebp]
	jmp	$LN65@CompareHig
$LN46@CompareHig:

; 894  : 		case 15:
; 895  : 			return (High->HEWUsed >= Current->HEWUsed ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+320]
	cmp	edx, DWORD PTR [ecx+320]
	jb	SHORT $LN97@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv161[ebp], eax
	jmp	SHORT $LN98@CompareHig
$LN97@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv161[ebp], ecx
$LN98@CompareHig:
	mov	eax, DWORD PTR tv161[ebp]
	jmp	$LN65@CompareHig
$LN45@CompareHig:

; 896  : 		case 16:
; 897  : 			return (High->RoundsFired >= Current->RoundsFired ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+324]
	cmp	edx, DWORD PTR [ecx+324]
	jb	SHORT $LN99@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv165[ebp], eax
	jmp	SHORT $LN100@CompareHig
$LN99@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv165[ebp], ecx
$LN100@CompareHig:
	mov	eax, DWORD PTR tv165[ebp]
	jmp	$LN65@CompareHig
$LN44@CompareHig:

; 898  : 		case 17:
; 899  : 			return (High->TeamHighestLevel >= Current->TeamHighestLevel ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+328]
	cmp	edx, DWORD PTR [ecx+328]
	jb	SHORT $LN101@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv169[ebp], eax
	jmp	SHORT $LN102@CompareHig
$LN101@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv169[ebp], ecx
$LN102@CompareHig:
	mov	eax, DWORD PTR tv169[ebp]
	jmp	$LN65@CompareHig
$LN43@CompareHig:

; 900  : 		case 18:
; 901  : 			return (High->GrantedOtherPlayersLives >= Current->GrantedOtherPlayersLives ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+332]
	cmp	edx, DWORD PTR [ecx+332]
	jb	SHORT $LN103@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv173[ebp], eax
	jmp	SHORT $LN104@CompareHig
$LN103@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv173[ebp], ecx
$LN104@CompareHig:
	mov	eax, DWORD PTR tv173[ebp]
	jmp	$LN65@CompareHig
$LN42@CompareHig:

; 902  : 		case 19:
; 903  : 			return (High->ReceivedOtherPlayersLives >= Current->ReceivedOtherPlayersLives ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+336]
	cmp	edx, DWORD PTR [ecx+336]
	jb	SHORT $LN105@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv177[ebp], eax
	jmp	SHORT $LN106@CompareHig
$LN105@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv177[ebp], ecx
$LN106@CompareHig:
	mov	eax, DWORD PTR tv177[ebp]
	jmp	$LN65@CompareHig
$LN41@CompareHig:

; 904  : 		case 20:
; 905  : 			return (High->CargoShip >= Current->CargoShip ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+340]
	cmp	edx, DWORD PTR [ecx+340]
	jb	SHORT $LN107@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv181[ebp], eax
	jmp	SHORT $LN108@CompareHig
$LN107@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv181[ebp], ecx
$LN108@CompareHig:
	mov	eax, DWORD PTR tv181[ebp]
	jmp	$LN65@CompareHig
$LN40@CompareHig:

; 906  : 		case 21:
; 907  : 			return (High->NewLivesAcquired >= Current->NewLivesAcquired ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+344]
	cmp	edx, DWORD PTR [ecx+344]
	jb	SHORT $LN109@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv185[ebp], eax
	jmp	SHORT $LN110@CompareHig
$LN109@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv185[ebp], ecx
$LN110@CompareHig:
	mov	eax, DWORD PTR tv185[ebp]
	jmp	$LN65@CompareHig
$LN39@CompareHig:

; 908  : 		case 22:
; 909  : 			return (High->ObjectsRammed >= Current->ObjectsRammed ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+348]
	cmp	edx, DWORD PTR [ecx+348]
	jb	SHORT $LN111@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv189[ebp], eax
	jmp	SHORT $LN112@CompareHig
$LN111@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv189[ebp], ecx
$LN112@CompareHig:
	mov	eax, DWORD PTR tv189[ebp]
	jmp	$LN65@CompareHig
$LN38@CompareHig:

; 910  : 		case 23:
; 911  : 			return (High->SOSBeacons >= Current->SOSBeacons ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+352]
	cmp	edx, DWORD PTR [ecx+352]
	jb	SHORT $LN113@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv193[ebp], eax
	jmp	SHORT $LN114@CompareHig
$LN113@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv193[ebp], ecx
$LN114@CompareHig:
	mov	eax, DWORD PTR tv193[ebp]
	jmp	$LN65@CompareHig
$LN37@CompareHig:

; 912  : 		case 24:
; 913  : 			return (High->PowerPowerups >= Current->PowerPowerups ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+356]
	cmp	edx, DWORD PTR [ecx+356]
	jb	SHORT $LN115@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv197[ebp], eax
	jmp	SHORT $LN116@CompareHig
$LN115@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv197[ebp], ecx
$LN116@CompareHig:
	mov	eax, DWORD PTR tv197[ebp]
	jmp	$LN65@CompareHig
$LN36@CompareHig:

; 914  : 		case 25:
; 915  : 			return (High->ExtraLifePowerups >= Current->ExtraLifePowerups ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+360]
	cmp	edx, DWORD PTR [ecx+360]
	jb	SHORT $LN117@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv201[ebp], eax
	jmp	SHORT $LN118@CompareHig
$LN117@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv201[ebp], ecx
$LN118@CompareHig:
	mov	eax, DWORD PTR tv201[ebp]
	jmp	$LN65@CompareHig
$LN35@CompareHig:

; 916  : 		case 26:
; 917  : 			return (High->UsedSOSBeacons >= Current->UsedSOSBeacons ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+364]
	cmp	edx, DWORD PTR [ecx+364]
	jb	SHORT $LN119@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv205[ebp], eax
	jmp	SHORT $LN120@CompareHig
$LN119@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv205[ebp], ecx
$LN120@CompareHig:
	mov	eax, DWORD PTR tv205[ebp]
	jmp	$LN65@CompareHig
$LN34@CompareHig:

; 918  : 		case 27:
; 919  : 			return (High->PointPowerups >= Current->PointPowerups ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+368]
	cmp	edx, DWORD PTR [ecx+368]
	jb	SHORT $LN121@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv209[ebp], eax
	jmp	SHORT $LN122@CompareHig
$LN121@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv209[ebp], ecx
$LN122@CompareHig:
	mov	eax, DWORD PTR tv209[ebp]
	jmp	$LN65@CompareHig
$LN33@CompareHig:

; 920  : 		case 28:
; 921  : 			return (High->PowerupPoints >= Current->PowerupPoints ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+372]
	cmp	edx, DWORD PTR [ecx+372]
	jb	SHORT $LN123@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv213[ebp], eax
	jmp	SHORT $LN124@CompareHig
$LN123@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv213[ebp], ecx
$LN124@CompareHig:
	mov	eax, DWORD PTR tv213[ebp]
	jmp	$LN65@CompareHig
$LN32@CompareHig:

; 922  : 		case 29:
; 923  : 			return (High->PickedUpDrone >= Current->PickedUpDrone ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+376]
	cmp	edx, DWORD PTR [ecx+376]
	jb	SHORT $LN125@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv217[ebp], eax
	jmp	SHORT $LN126@CompareHig
$LN125@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv217[ebp], ecx
$LN126@CompareHig:
	mov	eax, DWORD PTR tv217[ebp]
	jmp	$LN65@CompareHig
$LN31@CompareHig:

; 924  : 		case 30:
; 925  : 			return (High->UsedDrones >= Current->UsedDrones ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+380]
	cmp	edx, DWORD PTR [ecx+380]
	jb	SHORT $LN127@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv221[ebp], eax
	jmp	SHORT $LN128@CompareHig
$LN127@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv221[ebp], ecx
$LN128@CompareHig:
	mov	eax, DWORD PTR tv221[ebp]
	jmp	$LN65@CompareHig
$LN30@CompareHig:

; 926  : 		case 31:
; 927  : 			return (High->DroneKills >= Current->DroneKills ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+384]
	cmp	edx, DWORD PTR [ecx+384]
	jb	SHORT $LN129@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv225[ebp], eax
	jmp	SHORT $LN130@CompareHig
$LN129@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv225[ebp], ecx
$LN130@CompareHig:
	mov	eax, DWORD PTR tv225[ebp]
	jmp	$LN65@CompareHig
$LN29@CompareHig:

; 928  : 		case 32:
; 929  : 			return (High->DronesKilled >= Current->DronesKilled ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+388]
	cmp	edx, DWORD PTR [ecx+388]
	jb	SHORT $LN131@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv229[ebp], eax
	jmp	SHORT $LN132@CompareHig
$LN131@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv229[ebp], ecx
$LN132@CompareHig:
	mov	eax, DWORD PTR tv229[ebp]
	jmp	$LN65@CompareHig
$LN28@CompareHig:

; 930  : 		case 33:
; 931  : 			return (High->DronePoints >= Current->DronePoints ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+392]
	cmp	edx, DWORD PTR [ecx+392]
	jb	SHORT $LN133@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv233[ebp], eax
	jmp	SHORT $LN134@CompareHig
$LN133@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv233[ebp], ecx
$LN134@CompareHig:
	mov	eax, DWORD PTR tv233[ebp]
	jmp	$LN65@CompareHig
$LN27@CompareHig:

; 932  : 		case 34:
; 933  : 			return (High->RegenPowerups >= Current->RegenPowerups ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+396]
	cmp	edx, DWORD PTR [ecx+396]
	jb	SHORT $LN135@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv237[ebp], eax
	jmp	SHORT $LN136@CompareHig
$LN135@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv237[ebp], ecx
$LN136@CompareHig:
	mov	eax, DWORD PTR tv237[ebp]
	jmp	$LN65@CompareHig
$LN26@CompareHig:

; 934  : 		case 35:
; 935  : 			return (High->DoublePointsPowerups >= Current->DoublePointsPowerups ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+400]
	cmp	edx, DWORD PTR [ecx+400]
	jb	SHORT $LN137@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv241[ebp], eax
	jmp	SHORT $LN138@CompareHig
$LN137@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv241[ebp], ecx
$LN138@CompareHig:
	mov	eax, DWORD PTR tv241[ebp]
	jmp	$LN65@CompareHig
$LN25@CompareHig:

; 936  : 		case 36:
; 937  : 			return (High->DoublePointsPoints >= Current->DoublePointsPoints ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+404]
	cmp	edx, DWORD PTR [ecx+404]
	jb	SHORT $LN139@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv245[ebp], eax
	jmp	SHORT $LN140@CompareHig
$LN139@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv245[ebp], ecx
$LN140@CompareHig:
	mov	eax, DWORD PTR tv245[ebp]
	jmp	$LN65@CompareHig
$LN24@CompareHig:

; 938  : 		case 37:
; 939  : 			return (High->DeerPowerups >= Current->DeerPowerups ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+408]
	cmp	edx, DWORD PTR [ecx+408]
	jb	SHORT $LN141@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv249[ebp], eax
	jmp	SHORT $LN142@CompareHig
$LN141@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv249[ebp], ecx
$LN142@CompareHig:
	mov	eax, DWORD PTR tv249[ebp]
	jmp	$LN65@CompareHig
$LN23@CompareHig:

; 940  : 		case 38:
; 941  : 			return (High->TimeCloaked >= Current->TimeCloaked ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+412]
	cmp	edx, DWORD PTR [ecx+412]
	jb	SHORT $LN143@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv253[ebp], eax
	jmp	SHORT $LN144@CompareHig
$LN143@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv253[ebp], ecx
$LN144@CompareHig:
	mov	eax, DWORD PTR tv253[ebp]
	jmp	$LN65@CompareHig
$LN22@CompareHig:

; 942  : 		case 39:
; 943  : 			return (High->ShipCloakedCount >= Current->ShipCloakedCount ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+416]
	cmp	edx, DWORD PTR [ecx+416]
	jb	SHORT $LN145@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv257[ebp], eax
	jmp	SHORT $LN146@CompareHig
$LN145@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv257[ebp], ecx
$LN146@CompareHig:
	mov	eax, DWORD PTR tv257[ebp]
	jmp	$LN65@CompareHig
$LN21@CompareHig:

; 944  : 		case 40:
; 945  : 			return (High->TimeShielded >= Current->TimeShielded ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+420]
	cmp	edx, DWORD PTR [ecx+420]
	jb	SHORT $LN147@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv261[ebp], eax
	jmp	SHORT $LN148@CompareHig
$LN147@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv261[ebp], ecx
$LN148@CompareHig:
	mov	eax, DWORD PTR tv261[ebp]
	jmp	$LN65@CompareHig
$LN20@CompareHig:

; 946  : 		case 41:
; 947  : 			return (High->ShieldRaisedCount >= Current->ShieldRaisedCount ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+424]
	cmp	edx, DWORD PTR [ecx+424]
	jb	SHORT $LN149@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv265[ebp], eax
	jmp	SHORT $LN150@CompareHig
$LN149@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv265[ebp], ecx
$LN150@CompareHig:
	mov	eax, DWORD PTR tv265[ebp]
	jmp	$LN65@CompareHig
$LN19@CompareHig:

; 948  : 		case 42:
; 949  : 			return (High->RanOutOfPowerCount >= Current->RanOutOfPowerCount ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+428]
	cmp	edx, DWORD PTR [ecx+428]
	jb	SHORT $LN151@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv269[ebp], eax
	jmp	SHORT $LN152@CompareHig
$LN151@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv269[ebp], ecx
$LN152@CompareHig:
	mov	eax, DWORD PTR tv269[ebp]
	jmp	$LN65@CompareHig
$LN18@CompareHig:

; 950  : 		case 43:
; 951  : 			return (High->CargoShipScore >= Current->CargoShipScore ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+432]
	cmp	edx, DWORD PTR [ecx+432]
	jb	SHORT $LN153@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv273[ebp], eax
	jmp	SHORT $LN154@CompareHig
$LN153@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv273[ebp], ecx
$LN154@CompareHig:
	mov	eax, DWORD PTR tv273[ebp]
	jmp	$LN65@CompareHig
$LN17@CompareHig:

; 952  : 		case 44:
; 953  : 			return (High->CargoShipKills >= Current->CargoShipKills ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+436]
	cmp	edx, DWORD PTR [ecx+436]
	jb	SHORT $LN155@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv277[ebp], eax
	jmp	SHORT $LN156@CompareHig
$LN155@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv277[ebp], ecx
$LN156@CompareHig:
	mov	eax, DWORD PTR tv277[ebp]
	jmp	$LN65@CompareHig
$LN16@CompareHig:

; 954  : 		case 45:
; 955  : 			return (High->JumpsUsed >= Current->JumpsUsed ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+440]
	cmp	edx, DWORD PTR [ecx+440]
	jb	SHORT $LN157@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv281[ebp], eax
	jmp	SHORT $LN158@CompareHig
$LN157@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv281[ebp], ecx
$LN158@CompareHig:
	mov	eax, DWORD PTR tv281[ebp]
	jmp	$LN65@CompareHig
$LN15@CompareHig:

; 956  : 		case 46:
; 957  : 			return (High->PickedUpDroneSwarm >= Current->PickedUpDroneSwarm ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+444]
	cmp	edx, DWORD PTR [ecx+444]
	jb	SHORT $LN159@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv285[ebp], eax
	jmp	SHORT $LN160@CompareHig
$LN159@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv285[ebp], ecx
$LN160@CompareHig:
	mov	eax, DWORD PTR tv285[ebp]
	jmp	$LN65@CompareHig
$LN14@CompareHig:

; 958  : 		case 47:
; 959  : 			return (High->UsedDronesSwarm >= Current->UsedDronesSwarm ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+448]
	cmp	edx, DWORD PTR [ecx+448]
	jb	SHORT $LN161@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv289[ebp], eax
	jmp	SHORT $LN162@CompareHig
$LN161@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv289[ebp], ecx
$LN162@CompareHig:
	mov	eax, DWORD PTR tv289[ebp]
	jmp	$LN65@CompareHig
$LN13@CompareHig:

; 960  : 		case 48:
; 961  : 			return (High->TimeDisrupted >= Current->TimeDisrupted ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+452]
	cmp	edx, DWORD PTR [ecx+452]
	jb	SHORT $LN163@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv293[ebp], eax
	jmp	SHORT $LN164@CompareHig
$LN163@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv293[ebp], ecx
$LN164@CompareHig:
	mov	eax, DWORD PTR tv293[ebp]
	jmp	$LN65@CompareHig
$LN12@CompareHig:

; 962  : 		case 49:
; 963  : 			return (High->UpgadedWeaponPowerups >= Current->UpgadedWeaponPowerups ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+456]
	cmp	edx, DWORD PTR [ecx+456]
	jb	SHORT $LN165@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv297[ebp], eax
	jmp	SHORT $LN166@CompareHig
$LN165@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv297[ebp], ecx
$LN166@CompareHig:
	mov	eax, DWORD PTR tv297[ebp]
	jmp	$LN65@CompareHig
$LN11@CompareHig:

; 964  : 		case 50:
; 965  : 			return (High->UpgadedWeaponTime >= Current->UpgadedWeaponTime ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+460]
	cmp	edx, DWORD PTR [ecx+460]
	jb	SHORT $LN167@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv301[ebp], eax
	jmp	SHORT $LN168@CompareHig
$LN167@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv301[ebp], ecx
$LN168@CompareHig:
	mov	eax, DWORD PTR tv301[ebp]
	jmp	$LN65@CompareHig
$LN10@CompareHig:

; 966  : 		case 51:
; 967  : 			return (High->HighestCleanScore >= Current->HighestCleanScore ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+464]
	cmp	edx, DWORD PTR [ecx+464]
	jb	SHORT $LN169@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv305[ebp], eax
	jmp	SHORT $LN170@CompareHig
$LN169@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv305[ebp], ecx
$LN170@CompareHig:
	mov	eax, DWORD PTR tv305[ebp]
	jmp	$LN65@CompareHig
$LN9@CompareHig:

; 968  : 		case 52:
; 969  : 			return (High->HighestCleanTeamScore >= Current->HighestCleanTeamScore ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+468]
	cmp	edx, DWORD PTR [ecx+468]
	jb	SHORT $LN171@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv309[ebp], eax
	jmp	SHORT $LN172@CompareHig
$LN171@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv309[ebp], ecx
$LN172@CompareHig:
	mov	eax, DWORD PTR tv309[ebp]
	jmp	$LN65@CompareHig
$LN8@CompareHig:

; 970  : 		case 53:
; 971  : 			return (High->HighestCleanLevel >= Current->HighestCleanLevel ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+472]
	cmp	edx, DWORD PTR [ecx+472]
	jb	SHORT $LN173@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv313[ebp], eax
	jmp	SHORT $LN174@CompareHig
$LN173@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv313[ebp], ecx
$LN174@CompareHig:
	mov	eax, DWORD PTR tv313[ebp]
	jmp	$LN65@CompareHig
$LN7@CompareHig:

; 972  : 		case 54:
; 973  : 			return (High->HighestCleanTeamLevel >= Current->HighestCleanTeamLevel ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+476]
	cmp	edx, DWORD PTR [ecx+476]
	jb	SHORT $LN175@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv317[ebp], eax
	jmp	SHORT $LN176@CompareHig
$LN175@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv317[ebp], ecx
$LN176@CompareHig:
	mov	eax, DWORD PTR tv317[ebp]
	jmp	$LN65@CompareHig
$LN6@CompareHig:

; 974  : 		case 55:
; 975  : 			return (High->HighestTeamScore >= Current->HighestTeamScore ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+480]
	cmp	edx, DWORD PTR [ecx+480]
	jb	SHORT $LN177@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv321[ebp], eax
	jmp	SHORT $LN178@CompareHig
$LN177@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv321[ebp], ecx
$LN178@CompareHig:
	mov	eax, DWORD PTR tv321[ebp]
	jmp	$LN65@CompareHig
$LN5@CompareHig:

; 976  : 		case 56:
; 977  : 			return (High->LevelsPlayedWithPerks >= Current->LevelsPlayedWithPerks ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+484]
	cmp	edx, DWORD PTR [ecx+484]
	jb	SHORT $LN179@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv325[ebp], eax
	jmp	SHORT $LN180@CompareHig
$LN179@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv325[ebp], ecx
$LN180@CompareHig:
	mov	eax, DWORD PTR tv325[ebp]
	jmp	$LN65@CompareHig
$LN4@CompareHig:

; 978  : 		case 57:
; 979  : 			return (High->LevelsPlayedWithOutPerks >= Current->LevelsPlayedWithOutPerks ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+488]
	cmp	edx, DWORD PTR [ecx+488]
	jb	SHORT $LN181@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv329[ebp], eax
	jmp	SHORT $LN182@CompareHig
$LN181@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv329[ebp], ecx
$LN182@CompareHig:
	mov	eax, DWORD PTR tv329[ebp]
	jmp	SHORT $LN65@CompareHig
$LN3@CompareHig:

; 980  : 		case 58:
; 981  : 			return (High->LevelsPlayedWithPerksAsATeam >= Current->LevelsPlayedWithPerksAsATeam ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+492]
	cmp	edx, DWORD PTR [ecx+492]
	jb	SHORT $LN183@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv333[ebp], eax
	jmp	SHORT $LN184@CompareHig
$LN183@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv333[ebp], ecx
$LN184@CompareHig:
	mov	eax, DWORD PTR tv333[ebp]
	jmp	SHORT $LN65@CompareHig
$LN2@CompareHig:

; 982  : 		case 59:
; 983  : 			return (High->LevelsPlayedWithOutPerksAsATeam >= Current->LevelsPlayedWithOutPerksAsATeam ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+496]
	cmp	edx, DWORD PTR [ecx+496]
	jb	SHORT $LN185@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv337[ebp], eax
	jmp	SHORT $LN186@CompareHig
$LN185@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv337[ebp], ecx
$LN186@CompareHig:
	mov	eax, DWORD PTR tv337[ebp]
	jmp	SHORT $LN65@CompareHig
$LN1@CompareHig:

; 984  : 		default:
; 985  : 			return (High->PlayTime >= Current->PlayTime ? High : Current);

	mov	eax, DWORD PTR _High$[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [eax+256]
	cmp	edx, DWORD PTR [ecx+256]
	jb	SHORT $LN187@CompareHig
	mov	eax, DWORD PTR _High$[ebp]
	mov	DWORD PTR tv341[ebp], eax
	jmp	SHORT $LN188@CompareHig
$LN187@CompareHig:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR tv341[ebp], ecx
$LN188@CompareHig:
	mov	eax, DWORD PTR tv341[ebp]
$LN65@CompareHig:

; 986  : 		}
; 987  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN189@CompareHig:
	DD	$LN61@CompareHig
	DD	$LN60@CompareHig
	DD	$LN59@CompareHig
	DD	$LN58@CompareHig
	DD	$LN57@CompareHig
	DD	$LN56@CompareHig
	DD	$LN55@CompareHig
	DD	$LN54@CompareHig
	DD	$LN53@CompareHig
	DD	$LN52@CompareHig
	DD	$LN51@CompareHig
	DD	$LN50@CompareHig
	DD	$LN49@CompareHig
	DD	$LN48@CompareHig
	DD	$LN47@CompareHig
	DD	$LN46@CompareHig
	DD	$LN45@CompareHig
	DD	$LN44@CompareHig
	DD	$LN43@CompareHig
	DD	$LN42@CompareHig
	DD	$LN41@CompareHig
	DD	$LN40@CompareHig
	DD	$LN39@CompareHig
	DD	$LN38@CompareHig
	DD	$LN37@CompareHig
	DD	$LN36@CompareHig
	DD	$LN35@CompareHig
	DD	$LN34@CompareHig
	DD	$LN33@CompareHig
	DD	$LN32@CompareHig
	DD	$LN31@CompareHig
	DD	$LN30@CompareHig
	DD	$LN29@CompareHig
	DD	$LN28@CompareHig
	DD	$LN27@CompareHig
	DD	$LN26@CompareHig
	DD	$LN25@CompareHig
	DD	$LN24@CompareHig
	DD	$LN23@CompareHig
	DD	$LN22@CompareHig
	DD	$LN21@CompareHig
	DD	$LN20@CompareHig
	DD	$LN19@CompareHig
	DD	$LN18@CompareHig
	DD	$LN17@CompareHig
	DD	$LN16@CompareHig
	DD	$LN15@CompareHig
	DD	$LN14@CompareHig
	DD	$LN13@CompareHig
	DD	$LN12@CompareHig
	DD	$LN11@CompareHig
	DD	$LN10@CompareHig
	DD	$LN9@CompareHig
	DD	$LN8@CompareHig
	DD	$LN7@CompareHig
	DD	$LN6@CompareHig
	DD	$LN5@CompareHig
	DD	$LN4@CompareHig
	DD	$LN3@CompareHig
	DD	$LN2@CompareHig
?CompareHighScoreNodes@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@PAU21@0H@Z ENDP ; RenCometBustersScoreSystem::CompareHighScoreNodes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?LoadData@RenCometBustersScoreSystem@@QAEXH@Z
_TEXT	SEGMENT
tv129 = -2912						; size = 4
tv332 = -2905						; size = 1
tv329 = -2904						; size = 4
tv326 = -2900						; size = 4
tv71 = -2900						; size = 4
_DecryptString$1 = -2832				; size = 2048
_Current$2 = -784					; size = 4
_Length$3 = -780					; size = 4
_SavePath$ = -776					; size = 256
_FileName$ = -520					; size = 256
_LoadScores$ = -264					; size = 4
_PlayerName$ = -260					; size = 256
_this$ = -4						; size = 4
_setDifficulty$ = 8					; size = 4
?LoadData@RenCometBustersScoreSystem@@QAEXH@Z PROC	; RenCometBustersScoreSystem::LoadData, COMDAT
; _this$ = ecx

; 820  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 2912				; 00000b60H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 821  : 		difficulty = setDifficulty;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _setDifficulty$[ebp]
	mov	DWORD PTR [eax], ecx

; 822  : 		Cleanup();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Cleanup@RenCometBustersScoreSystem@@QAEXXZ ; RenCometBustersScoreSystem::Cleanup

; 823  : 		char PlayerName[256];
; 824  : 		FILE *LoadScores;
; 825  : 		char FileName[256];
; 826  : 		char SavePath[256];
; 827  : 		sprintf(SavePath, "%sSave\\", Get_File_Path());

	call	?Get_File_Path@@YAPBDXZ			; Get_File_Path
	push	eax
	push	OFFSET ??_C@_07MOMFEGGF@?$CFsSave?2?$AA@
	lea	eax, DWORD PTR _SavePath$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 828  : 		switch (difficulty)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv71[ebp], ecx
	cmp	DWORD PTR tv71[ebp], 3
	ja	$LN9@LoadData
	mov	edx, DWORD PTR tv71[ebp]
	jmp	DWORD PTR $LN15@LoadData[edx*4]
$LN8@LoadData:

; 829  : 		{
; 830  : 		case 0:sprintf(FileName,"%sBetaCMBTPlayerRecordsEasy.Rp2",SavePath);break;

	lea	eax, DWORD PTR _SavePath$[ebp]
	push	eax
	push	OFFSET ??_C@_0CA@KNBEHKN@?$CFsBetaCMBTPlayerRecordsEasy?4Rp2?$AA@
	lea	ecx, DWORD PTR _FileName$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN9@LoadData
$LN7@LoadData:

; 831  : 		case 1:sprintf(FileName,"%sBetaCMBTPlayerRecords.Rp2",SavePath);break;

	lea	eax, DWORD PTR _SavePath$[ebp]
	push	eax
	push	OFFSET ??_C@_0BM@DJPBCPEL@?$CFsBetaCMBTPlayerRecords?4Rp2?$AA@
	lea	ecx, DWORD PTR _FileName$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN9@LoadData
$LN6@LoadData:

; 832  : 		case 2:sprintf(FileName,"%sBetaCMBTPlayerRecordsHard.Rp2",SavePath);break;

	lea	eax, DWORD PTR _SavePath$[ebp]
	push	eax
	push	OFFSET ??_C@_0CA@OCKBLKAL@?$CFsBetaCMBTPlayerRecordsHard?4Rp2?$AA@
	lea	ecx, DWORD PTR _FileName$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN9@LoadData
$LN5@LoadData:

; 833  : 		case 3:sprintf(FileName,"%sBetaCMBTPlayerRecordsDoomsday.Rp2",SavePath);break;

	lea	eax, DWORD PTR _SavePath$[ebp]
	push	eax
	push	OFFSET ??_C@_0CE@MONBMBLL@?$CFsBetaCMBTPlayerRecordsDoomsday?4@
	lea	ecx, DWORD PTR _FileName$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
$LN9@LoadData:

; 834  : 		}
; 835  : 		LoadScores = fopen(FileName,"r");

	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	lea	eax, DWORD PTR _FileName$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	DWORD PTR _LoadScores$[ebp], eax

; 836  : 		if (LoadScores)

	cmp	DWORD PTR _LoadScores$[ebp], 0
	je	$LN4@LoadData
$LN3@LoadData:

; 837  : 		{
; 838  : 			while (!feof(LoadScores))

	mov	eax, DWORD PTR _LoadScores$[ebp]
	push	eax
	call	DWORD PTR __imp__feof
	add	esp, 4
	test	eax, eax
	jne	$LN2@LoadData

; 839  : 			{
; 840  : 				fgets(PlayerName,256,LoadScores);

	mov	eax, DWORD PTR _LoadScores$[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _PlayerName$[ebp]
	push	ecx
	call	DWORD PTR __imp__fgets
	add	esp, 12					; 0000000cH

; 841  : 				int Length = strlen(PlayerName);

	lea	eax, DWORD PTR _PlayerName$[ebp]
	mov	DWORD PTR tv326[ebp], eax
	mov	ecx, DWORD PTR tv326[ebp]
	add	ecx, 1
	mov	DWORD PTR tv329[ebp], ecx
$LL14@LoadData:
	mov	edx, DWORD PTR tv326[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv332[ebp], al
	add	DWORD PTR tv326[ebp], 1
	cmp	BYTE PTR tv332[ebp], 0
	jne	SHORT $LL14@LoadData
	mov	ecx, DWORD PTR tv326[ebp]
	sub	ecx, DWORD PTR tv329[ebp]
	mov	DWORD PTR tv129[ebp], ecx
	mov	edx, DWORD PTR tv129[ebp]
	mov	DWORD PTR _Length$3[ebp], edx

; 842  : 				if (Length <= 0)

	cmp	DWORD PTR _Length$3[ebp], 0
	jg	SHORT $LN1@LoadData

; 843  : 				{
; 844  : 					Console_Input("msg MutantAssaultHighScoreSystem::LoadData ERROR: Length is less than 1");

	push	OFFSET ??_C@_0EI@GGEPLGPC@msg?5MutantAssaultHighScoreSystem@
	call	?Console_Input@@YAXPBD@Z		; Console_Input
	add	esp, 4

; 845  : 					continue;

	jmp	$LN3@LoadData
$LN1@LoadData:

; 846  : 				}
; 847  : 				PlayerName[Length-1] = '\0';

	mov	eax, DWORD PTR _Length$3[ebp]
	mov	BYTE PTR _PlayerName$[ebp+eax-1], 0

; 848  : 				CMTBHighScoresNode *Current = FindOrAddPlayerMAHighScoreNode(JmgUtility::Rp2Decrypt(PlayerName,25,5));

	push	5
	push	25					; 00000019H
	lea	eax, DWORD PTR _PlayerName$[ebp]
	push	eax
	call	?Rp2Decrypt@JmgUtility@@SAPADPBDHH@Z	; JmgUtility::Rp2Decrypt
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindOrAddPlayerMAHighScoreNode@RenCometBustersScoreSystem@@AAEPAUCMTBHighScoresNode@1@PBD@Z ; RenCometBustersScoreSystem::FindOrAddPlayerMAHighScoreNode
	mov	DWORD PTR _Current$2[ebp], eax

; 849  : 				char DecryptString[2048];
; 850  : 				fgets(DecryptString,2048,LoadScores);

	mov	eax, DWORD PTR _LoadScores$[ebp]
	push	eax
	push	2048					; 00000800H
	lea	ecx, DWORD PTR _DecryptString$1[ebp]
	push	ecx
	call	DWORD PTR __imp__fgets
	add	esp, 12					; 0000000cH

; 851  : 				sscanf(JmgUtility::Rp2Decrypt(DecryptString,Current->PlayerName[0],Current->PlayerName[1]),"%lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %d %d %lu %lu %lu %lu %lu %d %d %d %d %d %d %lu",&Current->PlayTime,&Current->RoundsPlayed,&Current->Deaths,&Current->CometSmall,&Current->CometMedium,&Current->CometLarge,&Current->CometHuge,&Current->TheMoon,&Current->UFO,&Current->Mine,&Current->OtherPlayers,&Current->HighestScore,&Current->TotalScore,&Current->HighestLevel,&Current->TotalComets,&Current->HEWPowerups,&Current->HEWUsed,&Current->RoundsFired,&Current->TeamHighestLevel,&Current->GrantedOtherPlayersLives,&Current->ReceivedOtherPlayersLives,&Current->CargoShip,&Current->NewLivesAcquired,&Current->ObjectsRammed,&Current->SOSBeacons,&Current->PowerPowerups,&Current->ExtraLifePowerups,&Current->UsedSOSBeacons,&Current->PointPowerups,&Current->PowerupPoints,&Current->PickedUpDrone,&Current->UsedDrones,&Current->DroneKills,&Current->DronesKilled,&Current->DronePoints,&Current->RegenPowerups,&Current->DoublePointsPowerups,&Current->DoublePointsPoints,&Current->DeerPowerups,&Current->TimeCloaked,&Current->ShipCloakedCount,&Current->TimeShielded,&Current->ShieldRaisedCount,&Current->RanOutOfPowerCount,&Current->CargoShipScore,&Current->CargoShipKills,&Current->JumpsUsed,&Current->PickedUpDroneSwarm,&Current->UsedDronesSwarm,&Current->TimeDisrupted,&Current->UpgadedWeaponPowerups,&Current->UpgadedWeaponTime,&Current->HighestCleanScore,&Current->HighestCleanTeamScore,&Current->HighestCleanLevel,&Current->HighestCleanTeamLevel,&Current->HighestTeamScore,&Current->LevelsPlayedWithPerks,&Current->LevelsPlayedWithOutPerks,&Current->LevelsPlayedWithPerksAsATeam,&Current->LevelsPlayedWithOutPerksAsATeam,&Current->LastPlayTime.day,&Current->LastPlayTime.month,&Current->LastPlayTime.year,&Current->LastPlayTime.second,&Current->LastPlayTime.minute,&Current->LastPlayTime.hour,&Current->LastPlayTime.lTime);

	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 524				; 0000020cH
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 512				; 00000200H
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 516				; 00000204H
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 520				; 00000208H
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 508				; 000001fcH
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 500				; 000001f4H
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 504				; 000001f8H
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 496				; 000001f0H
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 492				; 000001ecH
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 488				; 000001e8H
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 484				; 000001e4H
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 480				; 000001e0H
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 476				; 000001dcH
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 472				; 000001d8H
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 468				; 000001d4H
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 464				; 000001d0H
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 460				; 000001ccH
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 456				; 000001c8H
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 452				; 000001c4H
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 448				; 000001c0H
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 444				; 000001bcH
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 440				; 000001b8H
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 436				; 000001b4H
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 432				; 000001b0H
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 428				; 000001acH
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 424				; 000001a8H
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 420				; 000001a4H
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 416				; 000001a0H
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 412				; 0000019cH
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 408				; 00000198H
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 404				; 00000194H
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 400				; 00000190H
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 396				; 0000018cH
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 392				; 00000188H
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 388				; 00000184H
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 384				; 00000180H
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 380				; 0000017cH
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 376				; 00000178H
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 372				; 00000174H
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 368				; 00000170H
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 364				; 0000016cH
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 360				; 00000168H
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 356				; 00000164H
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 352				; 00000160H
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 348				; 0000015cH
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 344				; 00000158H
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 340				; 00000154H
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 336				; 00000150H
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 332				; 0000014cH
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 328				; 00000148H
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 324				; 00000144H
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 320				; 00000140H
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 316				; 0000013cH
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 312				; 00000138H
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 308				; 00000134H
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 304				; 00000130H
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 300				; 0000012cH
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 296				; 00000128H
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 292				; 00000124H
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 288				; 00000120H
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 284				; 0000011cH
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 280				; 00000118H
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 276				; 00000114H
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 272				; 00000110H
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 268				; 0000010cH
	push	ecx
	mov	edx, DWORD PTR _Current$2[ebp]
	add	edx, 264				; 00000108H
	push	edx
	mov	eax, DWORD PTR _Current$2[ebp]
	add	eax, 260				; 00000104H
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	add	ecx, 256				; 00000100H
	push	ecx
	push	OFFSET ??_C@_0BAI@DHKPCABK@?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5@
	mov	edx, 1
	shl	edx, 0
	mov	eax, DWORD PTR _Current$2[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	push	ecx
	mov	edx, 1
	imul	edx, 0
	mov	eax, DWORD PTR _Current$2[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	push	ecx
	lea	edx, DWORD PTR _DecryptString$1[ebp]
	push	edx
	call	?Rp2Decrypt@JmgUtility@@SAPADPBDHH@Z	; JmgUtility::Rp2Decrypt
	add	esp, 12					; 0000000cH
	push	eax
	call	DWORD PTR __imp__sscanf
	add	esp, 280				; 00000118H

; 852  : 			}

	jmp	$LN3@LoadData
$LN2@LoadData:

; 853  : 			fclose(LoadScores);	

	mov	eax, DWORD PTR _LoadScores$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
$LN4@LoadData:

; 854  : 		}
; 855  : 		LoadHighestScores();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadHighestScores@RenCometBustersScoreSystem@@AAEXXZ ; RenCometBustersScoreSystem::LoadHighestScores

; 856  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN15@LoadData:
	DD	$LN8@LoadData
	DD	$LN7@LoadData
	DD	$LN6@LoadData
	DD	$LN5@LoadData
?LoadData@RenCometBustersScoreSystem@@QAEXH@Z ENDP	; RenCometBustersScoreSystem::LoadData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?SaveData@RenCometBustersScoreSystem@@QAEXXZ
_TEXT	SEGMENT
tv316 = -3120						; size = 4
tv75 = -3120						; size = 4
_EncryptString$1 = -3052				; size = 2048
_debug$2 = -1004					; size = 220
_Current$ = -784					; size = 4
_SavePath$ = -780					; size = 256
_FileNameTmp$ = -524					; size = 256
_FileName$ = -268					; size = 256
_SaveScores2$ = -12					; size = 4
_SaveScores$ = -8					; size = 4
_this$ = -4						; size = 4
?SaveData@RenCometBustersScoreSystem@@QAEXXZ PROC	; RenCometBustersScoreSystem::SaveData, COMDAT
; _this$ = ecx

; 765  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 3120				; 00000c30H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 766  : 		FILE *SaveScores;
; 767  : 		FILE *SaveScores2;
; 768  : 		char FileName[256];
; 769  : 		char FileNameTmp[256];
; 770  : 		char SavePath[256];
; 771  : 		sprintf(SavePath, "%sSave\\", Get_File_Path());

	call	?Get_File_Path@@YAPBDXZ			; Get_File_Path
	push	eax
	push	OFFSET ??_C@_07MOMFEGGF@?$CFsSave?2?$AA@
	lea	eax, DWORD PTR _SavePath$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 772  : 		sprintf(FileNameTmp,"%sBetaCMBTPlayerRecords.tmp",SavePath);

	lea	eax, DWORD PTR _SavePath$[ebp]
	push	eax
	push	OFFSET ??_C@_0BM@GKBJMCAN@?$CFsBetaCMBTPlayerRecords?4tmp?$AA@
	lea	ecx, DWORD PTR _FileNameTmp$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 773  : 		SaveScores = fopen(FileNameTmp,"w");

	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	lea	eax, DWORD PTR _FileNameTmp$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	DWORD PTR _SaveScores$[ebp], eax

; 774  : 		switch (difficulty)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv75[ebp], ecx
	cmp	DWORD PTR tv75[ebp], 3
	ja	$LN18@SaveData
	mov	edx, DWORD PTR tv75[ebp]
	jmp	DWORD PTR $LN22@SaveData[edx*4]
$LN17@SaveData:

; 775  : 		{
; 776  : 		case 0:sprintf(FileName,"%sBetaCMBTPlayerRecordsEasy.txt",SavePath);break;

	lea	eax, DWORD PTR _SavePath$[ebp]
	push	eax
	push	OFFSET ??_C@_0CA@CHLIAOHE@?$CFsBetaCMBTPlayerRecordsEasy?4txt?$AA@
	lea	ecx, DWORD PTR _FileName$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN18@SaveData
$LN16@SaveData:

; 777  : 		case 1:sprintf(FileName,"%sBetaCMBTPlayerRecords.txt",SavePath);break;

	lea	eax, DWORD PTR _SavePath$[ebp]
	push	eax
	push	OFFSET ??_C@_0BM@BEJIGGJC@?$CFsBetaCMBTPlayerRecords?4txt?$AA@
	lea	ecx, DWORD PTR _FileName$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN18@SaveData
$LN15@SaveData:

; 778  : 		case 2:sprintf(FileName,"%sBetaCMBTPlayerRecordsHard.txt",SavePath);break;

	lea	eax, DWORD PTR _SavePath$[ebp]
	push	eax
	push	OFFSET ??_C@_0CA@MPMIPDNC@?$CFsBetaCMBTPlayerRecordsHard?4txt?$AA@
	lea	ecx, DWORD PTR _FileName$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN18@SaveData
$LN14@SaveData:

; 779  : 		case 3:sprintf(FileName,"%sBetaCMBTPlayerRecordsDoomsday.txt",SavePath);break;

	lea	eax, DWORD PTR _SavePath$[ebp]
	push	eax
	push	OFFSET ??_C@_0CE@ODLIIIGC@?$CFsBetaCMBTPlayerRecordsDoomsday?4@
	lea	ecx, DWORD PTR _FileName$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
$LN18@SaveData:

; 780  : 		};
; 781  : 		SaveScores2 = fopen(FileName,"w");

	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	lea	eax, DWORD PTR _FileName$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	DWORD PTR _SaveScores2$[ebp], eax

; 782  : 		CMTBHighScoresNode *Current = CMTBHighScoresNodeList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _Current$[ebp], ecx

; 783  : 		if (!SaveScores || !SaveScores2)

	cmp	DWORD PTR _SaveScores$[ebp], 0
	je	SHORT $LN12@SaveData
	cmp	DWORD PTR _SaveScores2$[ebp], 0
	jne	SHORT $LN9@SaveData
$LN12@SaveData:

; 784  : 		{
; 785  : 			char debug[220];
; 786  : 			sprintf(debug,"msg RenCometBustersScoreSystem ERROR: Could not open save files %sBetaCMBTPlayerRecords.tmp and %sCMBTPlayerRecords.txt for writting!",SavePath,SavePath);

	lea	eax, DWORD PTR _SavePath$[ebp]
	push	eax
	lea	ecx, DWORD PTR _SavePath$[ebp]
	push	ecx
	push	OFFSET ??_C@_0IG@KIAFBIAN@msg?5RenCometBustersScoreSystem?5E@
	lea	edx, DWORD PTR _debug$2[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H

; 787  : 			Console_Input(debug);

	lea	eax, DWORD PTR _debug$2[ebp]
	push	eax
	call	?Console_Input@@YAXPBD@Z		; Console_Input
	add	esp, 4

; 788  : 			if (SaveScores)

	cmp	DWORD PTR _SaveScores$[ebp], 0
	je	SHORT $LN11@SaveData

; 789  : 				fclose(SaveScores);

	mov	eax, DWORD PTR _SaveScores$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
$LN11@SaveData:

; 790  : 			if (SaveScores2)

	cmp	DWORD PTR _SaveScores2$[ebp], 0
	je	SHORT $LN10@SaveData

; 791  : 				fclose(SaveScores2);

	mov	eax, DWORD PTR _SaveScores2$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
$LN10@SaveData:

; 792  : 			return;

	jmp	$LN20@SaveData
$LN9@SaveData:

; 793  : 		}
; 794  : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	$LN8@SaveData

; 795  : 		{
; 796  : 			//CalculateKillToDeathRatio(Current);
; 797  : 			char EncryptString[2048];
; 798  :  			sprintf(EncryptString,"%lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %d %d %lu %lu %lu %lu %lu %d %d %d %d %d %d %lu 0",Current->PlayTime,Current->RoundsPlayed,Current->Deaths,Current->CometSmall,Current->CometMedium,Current->CometLarge,Current->CometHuge,Current->TheMoon,Current->UFO,Current->Mine,Current->OtherPlayers,Current->HighestScore,Current->TotalScore,Current->HighestLevel,Current->TotalComets,Current->HEWPowerups,Current->HEWUsed,Current->RoundsFired,Current->TeamHighestLevel,Current->GrantedOtherPlayersLives,Current->ReceivedOtherPlayersLives,Current->CargoShip,Current->NewLivesAcquired,Current->ObjectsRammed,Current->SOSBeacons,Current->PowerPowerups,Current->ExtraLifePowerups,Current->UsedSOSBeacons,Current->PointPowerups,Current->PowerupPoints,Current->PickedUpDrone,Current->UsedDrones,Current->DroneKills,Current->DronesKilled,Current->DronePoints,Current->RegenPowerups,Current->DoublePointsPowerups,Current->DoublePointsPoints,Current->DeerPowerups,Current->TimeCloaked,Current->ShipCloakedCount,Current->TimeShielded,Current->ShieldRaisedCount,Current->RanOutOfPowerCount,Current->CargoShipScore,Current->CargoShipKills,Current->JumpsUsed,Current->PickedUpDroneSwarm,Current->UsedDronesSwarm,Current->TimeDisrupted,Current->UpgadedWeaponPowerups,Current->UpgadedWeaponTime,Current->HighestCleanScore,Current->HighestCleanTeamScore,Current->HighestCleanLevel,Current->HighestCleanTeamLevel,Current->HighestTeamScore,Current->LevelsPlayedWithPerks,Current->LevelsPlayedWithOutPerks,Current->LevelsPlayedWithPerksAsATeam,Current->LevelsPlayedWithOutPerksAsATeam,Current->LastPlayTime.day,Current->LastPlayTime.month,Current->LastPlayTime.year,Current->LastPlayTime.second,Current->LastPlayTime.minute,Current->LastPlayTime.hour,Current->LastPlayTime.lTime);

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+524]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+512]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+516]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+520]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+508]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+500]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+504]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+496]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+492]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+488]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+484]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+480]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+476]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+472]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+468]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+464]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+460]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+456]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+452]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+448]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+444]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+440]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+436]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+432]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+428]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+424]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+420]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+412]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+408]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+404]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+400]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+396]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+392]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+388]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+384]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+380]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+376]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+372]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+368]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+364]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+352]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+348]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+344]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+340]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+336]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+332]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+328]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+324]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+316]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+312]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+308]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+304]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+300]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+296]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+292]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+288]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+284]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+280]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+276]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+272]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+268]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+264]
	push	edx
	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+260]
	push	ecx
	mov	edx, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [edx+256]
	push	eax
	push	OFFSET ??_C@_0BAK@GMEIJNKP@?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5?$CFlu?5@
	lea	ecx, DWORD PTR _EncryptString$1[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 280				; 00000118H

; 799  : 			fprintf(SaveScores2,"%s\n%s\n",Current->PlayerName,EncryptString);

	lea	eax, DWORD PTR _EncryptString$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	push	ecx
	push	OFFSET ??_C@_06DKEDAPL@?$CFs?6?$CFs?6?$AA@
	mov	edx, DWORD PTR _SaveScores2$[ebp]
	push	edx
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H

; 800  : 			fprintf(SaveScores,"%s\n%s",JmgUtility::Rp2Encrypt(Current->PlayerName,25,5),JmgUtility::Rp2Encrypt2(EncryptString,Current->PlayerName[0],Current->PlayerName[1]));

	mov	eax, 1
	shl	eax, 0
	mov	ecx, DWORD PTR _Current$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	push	edx
	mov	eax, 1
	imul	eax, 0
	mov	ecx, DWORD PTR _Current$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	push	edx
	lea	eax, DWORD PTR _EncryptString$1[ebp]
	push	eax
	call	?Rp2Encrypt2@JmgUtility@@SAPADPBDHH@Z	; JmgUtility::Rp2Encrypt2
	add	esp, 12					; 0000000cH
	push	eax
	push	5
	push	25					; 00000019H
	mov	ecx, DWORD PTR _Current$[ebp]
	push	ecx
	call	?Rp2Encrypt@JmgUtility@@SAPADPBDHH@Z	; JmgUtility::Rp2Encrypt
	add	esp, 12					; 0000000cH
	push	eax
	push	OFFSET ??_C@_05PCAHBOJM@?$CFs?6?$CFs?$AA@
	mov	edx, DWORD PTR _SaveScores$[ebp]
	push	edx
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H

; 801  : 			if (Current->next)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+528], 0
	je	SHORT $LN7@SaveData

; 802  : 				fprintf(SaveScores,"\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	eax, DWORD PTR _SaveScores$[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
$LN7@SaveData:

; 803  : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+528]
	mov	DWORD PTR _Current$[ebp], ecx

; 804  : 		}

	jmp	$LN9@SaveData
$LN8@SaveData:

; 805  : 		fclose(SaveScores);

	mov	eax, DWORD PTR _SaveScores$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4

; 806  : 		fclose(SaveScores2);

	mov	eax, DWORD PTR _SaveScores2$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4

; 807  : 		switch (difficulty)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv316[ebp], ecx
	cmp	DWORD PTR tv316[ebp], 3
	ja	$LN5@SaveData
	mov	edx, DWORD PTR tv316[ebp]
	jmp	DWORD PTR $LN23@SaveData[edx*4]
$LN4@SaveData:

; 808  : 		{
; 809  : 		case 0:sprintf(FileName,"%sBetaCMBTPlayerRecordsEasy.Rp2",SavePath);break;

	lea	eax, DWORD PTR _SavePath$[ebp]
	push	eax
	push	OFFSET ??_C@_0CA@KNBEHKN@?$CFsBetaCMBTPlayerRecordsEasy?4Rp2?$AA@
	lea	ecx, DWORD PTR _FileName$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@SaveData
$LN3@SaveData:

; 810  : 		case 1:sprintf(FileName,"%sBetaCMBTPlayerRecords.Rp2",SavePath);break;

	lea	eax, DWORD PTR _SavePath$[ebp]
	push	eax
	push	OFFSET ??_C@_0BM@DJPBCPEL@?$CFsBetaCMBTPlayerRecords?4Rp2?$AA@
	lea	ecx, DWORD PTR _FileName$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@SaveData
$LN2@SaveData:

; 811  : 		case 2:sprintf(FileName,"%sBetaCMBTPlayerRecordsHard.Rp2",SavePath);break;

	lea	eax, DWORD PTR _SavePath$[ebp]
	push	eax
	push	OFFSET ??_C@_0CA@OCKBLKAL@?$CFsBetaCMBTPlayerRecordsHard?4Rp2?$AA@
	lea	ecx, DWORD PTR _FileName$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@SaveData
$LN1@SaveData:

; 812  : 		case 3:sprintf(FileName,"%sBetaCMBTPlayerRecordsDoomsday.Rp2",SavePath);break;

	lea	eax, DWORD PTR _SavePath$[ebp]
	push	eax
	push	OFFSET ??_C@_0CE@MONBMBLL@?$CFsBetaCMBTPlayerRecordsDoomsday?4@
	lea	ecx, DWORD PTR _FileName$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
$LN5@SaveData:

; 813  : 		};
; 814  : 		remove(FileName);

	lea	eax, DWORD PTR _FileName$[ebp]
	push	eax
	call	DWORD PTR __imp__remove
	add	esp, 4

; 815  : 		sprintf(FileNameTmp,"%sBetaCMBTPlayerRecords.tmp",SavePath);

	lea	eax, DWORD PTR _SavePath$[ebp]
	push	eax
	push	OFFSET ??_C@_0BM@GKBJMCAN@?$CFsBetaCMBTPlayerRecords?4tmp?$AA@
	lea	ecx, DWORD PTR _FileNameTmp$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 816  : 		rename(FileNameTmp,FileName);

	lea	eax, DWORD PTR _FileName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _FileNameTmp$[ebp]
	push	ecx
	call	DWORD PTR __imp__rename
	add	esp, 8
$LN20@SaveData:

; 817  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN22@SaveData:
	DD	$LN17@SaveData
	DD	$LN16@SaveData
	DD	$LN15@SaveData
	DD	$LN14@SaveData
$LN23@SaveData:
	DD	$LN4@SaveData
	DD	$LN3@SaveData
	DD	$LN2@SaveData
	DD	$LN1@SaveData
?SaveData@RenCometBustersScoreSystem@@QAEXXZ ENDP	; RenCometBustersScoreSystem::SaveData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?Cleanup@RenCometBustersScoreSystem@@QAEXXZ
_TEXT	SEGMENT
$T1 = -100						; size = 4
$T2 = -96						; size = 4
$T3 = -92						; size = 4
_die$4 = -24						; size = 4
_temp$5 = -20						; size = 4
_die$6 = -16						; size = 4
_temp$7 = -12						; size = 4
_x$8 = -8						; size = 4
_this$ = -4						; size = 4
?Cleanup@RenCometBustersScoreSystem@@QAEXXZ PROC	; RenCometBustersScoreSystem::Cleanup, COMDAT
; _this$ = ecx

; 727  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 100				; 00000064H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 728  : 		if (CMTBHighScoresNodeEmptyNode)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN11@Cleanup

; 729  : 		{
; 730  : 			delete CMTBHighScoresNodeEmptyNode;

	push	OFFSET ??_C@_0CE@HFCGEOCE@RenCometBustersScoreSystem?3?3Clea@
	push	730					; 000002daH
	push	OFFSET ??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN15@Cleanup
	xor	ecx, ecx
	jne	SHORT $LN14@Cleanup
	push	730					; 000002daH
	push	OFFSET ??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN14@Cleanup:
	jmp	SHORT $LN16@Cleanup
$LN15@Cleanup:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN16@Cleanup:

; 731  : 			CMTBHighScoresNodeEmptyNode = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
$LN11@Cleanup:

; 732  : 		}
; 733  : 		for (int x = 0;x < 128;x++)

	mov	DWORD PTR _x$8[ebp], 0
	jmp	SHORT $LN10@Cleanup
$LN9@Cleanup:
	mov	eax, DWORD PTR _x$8[ebp]
	add	eax, 1
	mov	DWORD PTR _x$8[ebp], eax
$LN10@Cleanup:
	cmp	DWORD PTR _x$8[ebp], 128		; 00000080H
	jge	SHORT $LN8@Cleanup

; 734  : 		{
; 735  : 			if (CMTBPlayerHighScoreNodes[x])

	mov	eax, DWORD PTR _x$8[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+12], 0
	je	SHORT $LN7@Cleanup

; 736  : 				CMTBPlayerHighScoreNodes[x] = NULL;

	mov	eax, DWORD PTR _x$8[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+12], 0
$LN7@Cleanup:

; 737  : 		}

	jmp	SHORT $LN9@Cleanup
$LN8@Cleanup:

; 738  : 		if (CMTBHighScoresNodeList)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN6@Cleanup

; 739  : 		{
; 740  : 			CMTBHighScoresNode *temp,*die;
; 741  : 			temp = CMTBHighScoresNodeList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _temp$7[ebp], ecx
$LN5@Cleanup:

; 742  : 			while (temp != NULL)

	cmp	DWORD PTR _temp$7[ebp], 0
	je	SHORT $LN4@Cleanup

; 743  : 			{
; 744  : 				die = temp;

	mov	eax, DWORD PTR _temp$7[ebp]
	mov	DWORD PTR _die$6[ebp], eax

; 745  : 				temp = temp->next;

	mov	eax, DWORD PTR _temp$7[ebp]
	mov	ecx, DWORD PTR [eax+528]
	mov	DWORD PTR _temp$7[ebp], ecx

; 746  : 				delete die;

	push	OFFSET ??_C@_0CE@HFCGEOCE@RenCometBustersScoreSystem?3?3Clea@
	push	746					; 000002eaH
	push	OFFSET ??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN18@Cleanup
	xor	ecx, ecx
	jne	SHORT $LN17@Cleanup
	push	746					; 000002eaH
	push	OFFSET ??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN17@Cleanup:
	jmp	SHORT $LN19@Cleanup
$LN18@Cleanup:
	mov	eax, DWORD PTR _die$6[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN19@Cleanup:

; 747  : 			}

	jmp	SHORT $LN5@Cleanup
$LN4@Cleanup:

; 748  : 			CMTBHighScoresNodeList = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN6@Cleanup:

; 749  : 		}
; 750  : 		if (PlayersInGameNodeList)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+524], 0
	je	SHORT $LN12@Cleanup

; 751  : 		{
; 752  : 			PlayersInGameNode *temp,*die;
; 753  : 			temp = PlayersInGameNodeList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+524]
	mov	DWORD PTR _temp$5[ebp], ecx
$LN2@Cleanup:

; 754  : 			while (temp != NULL)

	cmp	DWORD PTR _temp$5[ebp], 0
	je	SHORT $LN1@Cleanup

; 755  : 			{
; 756  : 				die = temp;

	mov	eax, DWORD PTR _temp$5[ebp]
	mov	DWORD PTR _die$4[ebp], eax

; 757  : 				temp = temp->next;

	mov	eax, DWORD PTR _temp$5[ebp]
	mov	ecx, DWORD PTR [eax+256]
	mov	DWORD PTR _temp$5[ebp], ecx

; 758  : 				delete die;

	push	OFFSET ??_C@_0CE@HFCGEOCE@RenCometBustersScoreSystem?3?3Clea@
	push	758					; 000002f6H
	push	OFFSET ??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN21@Cleanup
	xor	ecx, ecx
	jne	SHORT $LN20@Cleanup
	push	758					; 000002f6H
	push	OFFSET ??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN20@Cleanup:
	jmp	SHORT $LN22@Cleanup
$LN21@Cleanup:
	mov	eax, DWORD PTR _die$4[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN22@Cleanup:

; 759  : 			}

	jmp	SHORT $LN2@Cleanup
$LN1@Cleanup:

; 760  : 			PlayersInGameNodeList = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+524], 0
$LN12@Cleanup:

; 761  : 		}
; 762  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Cleanup@RenCometBustersScoreSystem@@QAEXXZ ENDP	; RenCometBustersScoreSystem::Cleanup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z
_TEXT	SEGMENT
tv83 = -84						; size = 4
tv85 = -80						; size = 4
$T1 = -76						; size = 4
_PlayerName$ = -8					; size = 4
_this$ = -4						; size = 4
_PlayerID$ = 8						; size = 4
?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z PROC ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node, COMDAT
; _this$ = ecx

; 705  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 706  : 		const char *PlayerName = Get_Player_Name_By_ID(PlayerID);

	mov	eax, DWORD PTR _PlayerID$[ebp]
	push	eax
	call	?Get_Player_Name_By_ID@@YAPBDH@Z	; Get_Player_Name_By_ID
	add	esp, 4
	mov	DWORD PTR _PlayerName$[ebp], eax

; 707  : 		if (!PlayerName)

	cmp	DWORD PTR _PlayerName$[ebp], 0
	jne	$LN5@Get_Curren

; 708  : 		{
; 709  : 			if (!CMTBHighScoresNodeEmptyNode)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN4@Get_Curren

; 710  : 				CMTBHighScoresNodeEmptyNode = new CMTBHighScoresNode();

	push	OFFSET ??_C@_0DK@NJPEEOFG@RenCometBustersScoreSystem?3?3Get_@
	push	710					; 000002c6H
	push	OFFSET ??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN11@Get_Curren
	xor	ecx, ecx
	jne	SHORT $LN8@Get_Curren
	push	710					; 000002c6H
	push	OFFSET ??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN8@Get_Curren:
	mov	DWORD PTR tv85[ebp], 0
	jmp	SHORT $LN12@Get_Curren
$LN11@Get_Curren:
	push	532					; 00000214H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN9@Get_Curren
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0CMTBHighScoresNode@RenCometBustersScoreSystem@@QAE@XZ ; RenCometBustersScoreSystem::CMTBHighScoresNode::CMTBHighScoresNode
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN10@Get_Curren
$LN9@Get_Curren:
	mov	DWORD PTR tv83[ebp], 0
$LN10@Get_Curren:
	mov	eax, DWORD PTR tv83[ebp]
	mov	DWORD PTR tv85[ebp], eax
$LN12@Get_Curren:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv85[ebp]
	mov	DWORD PTR [ecx+8], edx
$LN4@Get_Curren:

; 711  : 			return CMTBHighScoresNodeEmptyNode;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	jmp	$LN6@Get_Curren
$LN5@Get_Curren:

; 712  : 		}
; 713  : 		if (!CMTBPlayerHighScoreNodes[PlayerID])

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+12], 0
	jne	SHORT $LN3@Get_Curren

; 714  : 		{
; 715  : 			CMTBPlayerHighScoreNodes[PlayerID] = FindOrAddPlayerMAHighScoreNode(PlayerName);

	mov	eax, DWORD PTR _PlayerName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindOrAddPlayerMAHighScoreNode@RenCometBustersScoreSystem@@AAEPAUCMTBHighScoresNode@1@PBD@Z ; RenCometBustersScoreSystem::FindOrAddPlayerMAHighScoreNode
	mov	ecx, DWORD PTR _PlayerID$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4+12], eax

; 716  : 			AddPlayerToInGameList(CMTBPlayerHighScoreNodes[PlayerID]);

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+12]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddPlayerToInGameList@RenCometBustersScoreSystem@@AAEXPAUCMTBHighScoresNode@1@@Z ; RenCometBustersScoreSystem::AddPlayerToInGameList
	jmp	SHORT $LN2@Get_Curren
$LN3@Get_Curren:

; 717  : 		}
; 718  : 		else if (_stricmp(CMTBPlayerHighScoreNodes[PlayerID]->PlayerName,PlayerName))

	mov	eax, DWORD PTR _PlayerName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _PlayerID$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+12]
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@Get_Curren

; 719  : 		{
; 720  : 			CMTBPlayerHighScoreNodes[PlayerID] = FindOrAddPlayerMAHighScoreNode(PlayerName);

	mov	eax, DWORD PTR _PlayerName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindOrAddPlayerMAHighScoreNode@RenCometBustersScoreSystem@@AAEPAUCMTBHighScoresNode@1@PBD@Z ; RenCometBustersScoreSystem::FindOrAddPlayerMAHighScoreNode
	mov	ecx, DWORD PTR _PlayerID$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4+12], eax

; 721  : 			AddPlayerToInGameList(CMTBPlayerHighScoreNodes[PlayerID]);

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+12]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddPlayerToInGameList@RenCometBustersScoreSystem@@AAEXPAUCMTBHighScoresNode@1@@Z ; RenCometBustersScoreSystem::AddPlayerToInGameList
$LN2@Get_Curren:

; 722  : 		}
; 723  : 		return CMTBPlayerHighScoreNodes[PlayerID];

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+12]
$LN6@Get_Curren:

; 724  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Current_Player_Score_Node@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@H@Z ENDP ; RenCometBustersScoreSystem::Get_Current_Player_Score_Node
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??0RenCometBustersScoreSystem@@QAE@XZ
_TEXT	SEGMENT
_x$1 = -8						; size = 4
_this$ = -4						; size = 4
??0RenCometBustersScoreSystem@@QAE@XZ PROC		; RenCometBustersScoreSystem::RenCometBustersScoreSystem, COMDAT
; _this$ = ecx

; 694  : 	RenCometBustersScoreSystem()

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 695  : 	{
; 696  : 		CMTBHighScoresNodeList = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 697  : 		CMTBHighScoresNodeEmptyNode = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 698  : 		for (int x = 0;x < 128;x++)

	mov	DWORD PTR _x$1[ebp], 0
	jmp	SHORT $LN3@RenCometBu
$LN2@RenCometBu:
	mov	eax, DWORD PTR _x$1[ebp]
	add	eax, 1
	mov	DWORD PTR _x$1[ebp], eax
$LN3@RenCometBu:
	cmp	DWORD PTR _x$1[ebp], 128		; 00000080H
	jge	SHORT $LN1@RenCometBu

; 699  : 			CMTBPlayerHighScoreNodes[x] = NULL;

	mov	eax, DWORD PTR _x$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+12], 0
	jmp	SHORT $LN2@RenCometBu
$LN1@RenCometBu:

; 700  : 		PlayersInGameNodeList = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+524], 0

; 701  : 	};

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RenCometBustersScoreSystem@@QAE@XZ ENDP		; RenCometBustersScoreSystem::RenCometBustersScoreSystem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?FindOrAddPlayerMAHighScoreNode@RenCometBustersScoreSystem@@AAEPAUCMTBHighScoresNode@1@PBD@Z
_TEXT	SEGMENT
tv144 = -88						; size = 4
tv80 = -88						; size = 4
tv146 = -84						; size = 4
tv82 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
_Current$ = -8						; size = 4
_this$ = -4						; size = 4
_PlayerName$ = 8					; size = 4
?FindOrAddPlayerMAHighScoreNode@RenCometBustersScoreSystem@@AAEPAUCMTBHighScoresNode@1@PBD@Z PROC ; RenCometBustersScoreSystem::FindOrAddPlayerMAHighScoreNode, COMDAT
; _this$ = ecx

; 669  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 670  : 		if (!CMTBHighScoresNodeList)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	$LN5@FindOrAddP

; 671  : 		{
; 672  : 			CMTBHighScoresNodeList = new CMTBHighScoresNode();

	push	OFFSET ??_C@_0DL@DMAHHIGM@RenCometBustersScoreSystem?3?3Find@
	push	672					; 000002a0H
	push	OFFSET ??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN11@FindOrAddP
	xor	ecx, ecx
	jne	SHORT $LN8@FindOrAddP
	push	672					; 000002a0H
	push	OFFSET ??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN8@FindOrAddP:
	mov	DWORD PTR tv82[ebp], 0
	jmp	SHORT $LN12@FindOrAddP
$LN11@FindOrAddP:
	push	532					; 00000214H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN9@FindOrAddP
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0CMTBHighScoresNode@RenCometBustersScoreSystem@@QAE@XZ ; RenCometBustersScoreSystem::CMTBHighScoresNode::CMTBHighScoresNode
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN10@FindOrAddP
$LN9@FindOrAddP:
	mov	DWORD PTR tv80[ebp], 0
$LN10@FindOrAddP:
	mov	eax, DWORD PTR tv80[ebp]
	mov	DWORD PTR tv82[ebp], eax
$LN12@FindOrAddP:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv82[ebp]
	mov	DWORD PTR [ecx+4], edx

; 673  : 			sprintf(CMTBHighScoresNodeList->PlayerName,"%s",PlayerName);

	mov	eax, DWORD PTR _PlayerName$[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 674  : 			return CMTBHighScoresNodeList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	jmp	$LN6@FindOrAddP
$LN5@FindOrAddP:

; 675  : 		}
; 676  : 		CMTBHighScoresNode *Current = CMTBHighScoresNodeList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _Current$[ebp], ecx
$LN4@FindOrAddP:

; 677  : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	$LN3@FindOrAddP

; 678  : 		{
; 679  : 			if (!_stricmp(Current->PlayerName,PlayerName))

	mov	eax, DWORD PTR _PlayerName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	push	ecx
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@FindOrAddP

; 680  : 				return Current;

	mov	eax, DWORD PTR _Current$[ebp]
	jmp	$LN6@FindOrAddP
$LN2@FindOrAddP:

; 681  : 			if (!Current->next)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+528], 0
	jne	$LN1@FindOrAddP

; 682  : 			{
; 683  : 				Current->next = new CMTBHighScoresNode();

	push	OFFSET ??_C@_0DL@DMAHHIGM@RenCometBustersScoreSystem?3?3Find@
	push	683					; 000002abH
	push	OFFSET ??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN16@FindOrAddP
	xor	ecx, ecx
	jne	SHORT $LN13@FindOrAddP
	push	683					; 000002abH
	push	OFFSET ??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN13@FindOrAddP:
	mov	DWORD PTR tv146[ebp], 0
	jmp	SHORT $LN17@FindOrAddP
$LN16@FindOrAddP:
	push	532					; 00000214H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN14@FindOrAddP
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0CMTBHighScoresNode@RenCometBustersScoreSystem@@QAE@XZ ; RenCometBustersScoreSystem::CMTBHighScoresNode::CMTBHighScoresNode
	mov	DWORD PTR tv144[ebp], eax
	jmp	SHORT $LN15@FindOrAddP
$LN14@FindOrAddP:
	mov	DWORD PTR tv144[ebp], 0
$LN15@FindOrAddP:
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR tv146[ebp], eax
$LN17@FindOrAddP:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR tv146[ebp]
	mov	DWORD PTR [ecx+528], edx

; 684  : 				Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+528]
	mov	DWORD PTR _Current$[ebp], ecx

; 685  : 				sprintf(Current->PlayerName,"%s",PlayerName);

	mov	eax, DWORD PTR _PlayerName$[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	mov	ecx, DWORD PTR _Current$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 686  : 				return Current;

	mov	eax, DWORD PTR _Current$[ebp]
	jmp	SHORT $LN6@FindOrAddP
$LN1@FindOrAddP:

; 687  : 			}
; 688  : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+528]
	mov	DWORD PTR _Current$[ebp], ecx

; 689  : 		}

	jmp	$LN4@FindOrAddP
$LN3@FindOrAddP:

; 690  : 		return NULL;

	xor	eax, eax
$LN6@FindOrAddP:

; 691  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?FindOrAddPlayerMAHighScoreNode@RenCometBustersScoreSystem@@AAEPAUCMTBHighScoresNode@1@PBD@Z ENDP ; RenCometBustersScoreSystem::FindOrAddPlayerMAHighScoreNode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?LoadHighestScores@RenCometBustersScoreSystem@@AAEXXZ
_TEXT	SEGMENT
_Best$1 = -16						; size = 4
_Current$2 = -12					; size = 4
_x$3 = -8						; size = 4
_this$ = -4						; size = 4
?LoadHighestScores@RenCometBustersScoreSystem@@AAEXXZ PROC ; RenCometBustersScoreSystem::LoadHighestScores, COMDAT
; _this$ = ecx

; 653  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 654  : 		if (!CMTBHighScoresNodeList)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN6@LoadHighes

; 655  : 			return;

	jmp	SHORT $LN7@LoadHighes
$LN6@LoadHighes:

; 656  : 		for (int x = 0;x < RCMTBHIGHSCORELISTCOUNT;x++)

	mov	DWORD PTR _x$3[ebp], 0
	jmp	SHORT $LN5@LoadHighes
$LN4@LoadHighes:
	mov	eax, DWORD PTR _x$3[ebp]
	add	eax, 1
	mov	DWORD PTR _x$3[ebp], eax
$LN5@LoadHighes:
	cmp	DWORD PTR _x$3[ebp], 61			; 0000003dH
	jge	SHORT $LN7@LoadHighes

; 657  : 		{
; 658  : 			CMTBHighScoresNode *Current = CMTBHighScoresNodeList,*Best = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _Current$2[ebp], ecx
	mov	DWORD PTR _Best$1[ebp], 0
$LN2@LoadHighes:

; 659  : 			while (Current)

	cmp	DWORD PTR _Current$2[ebp], 0
	je	SHORT $LN1@LoadHighes

; 660  : 			{
; 661  : 				Best = CompareHighScoreNodes(Best,Current,x);

	mov	eax, DWORD PTR _x$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _Current$2[ebp]
	push	ecx
	mov	edx, DWORD PTR _Best$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CompareHighScoreNodes@RenCometBustersScoreSystem@@QAEPAUCMTBHighScoresNode@1@PAU21@0H@Z ; RenCometBustersScoreSystem::CompareHighScoreNodes
	mov	DWORD PTR _Best$1[ebp], eax

; 662  : 				Current = Current->next;

	mov	eax, DWORD PTR _Current$2[ebp]
	mov	ecx, DWORD PTR [eax+528]
	mov	DWORD PTR _Current$2[ebp], ecx

; 663  : 			}

	jmp	SHORT $LN2@LoadHighes
$LN1@LoadHighes:

; 664  : 			sprintf(HighScoreHolderName[x],"%s",Best->PlayerName);

	mov	eax, DWORD PTR _Best$1[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	mov	ecx, DWORD PTR _x$3[ebp]
	shl	ecx, 7
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+528]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 665  : 		}

	jmp	SHORT $LN4@LoadHighes
$LN7@LoadHighes:

; 666  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadHighestScores@RenCometBustersScoreSystem@@AAEXXZ ENDP ; RenCometBustersScoreSystem::LoadHighestScores
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?AddPlayerToInGameList@RenCometBustersScoreSystem@@AAEXPAUCMTBHighScoresNode@1@@Z
_TEXT	SEGMENT
tv146 = -84						; size = 4
tv79 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
_Current$ = -8						; size = 4
_this$ = -4						; size = 4
_Node$ = 8						; size = 4
?AddPlayerToInGameList@RenCometBustersScoreSystem@@AAEXPAUCMTBHighScoresNode@1@@Z PROC ; RenCometBustersScoreSystem::AddPlayerToInGameList, COMDAT
; _this$ = ecx

; 624  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 625  : 		if (!Node)

	cmp	DWORD PTR _Node$[ebp], 0
	jne	SHORT $LN6@AddPlayerT

; 626  : 			return;

	jmp	$LN7@AddPlayerT
$LN6@AddPlayerT:

; 627  : 		if (!PlayersInGameNodeList)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+524], 0
	jne	$LN5@AddPlayerT

; 628  : 		{
; 629  : 			PlayersInGameNodeList = new PlayersInGameNode;

	push	OFFSET ??_C@_0DC@ICIICMMC@RenCometBustersScoreSystem?3?3AddP@
	push	629					; 00000275H
	push	OFFSET ??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN10@AddPlayerT
	xor	ecx, ecx
	jne	SHORT $LN9@AddPlayerT
	push	629					; 00000275H
	push	OFFSET ??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN9@AddPlayerT:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN11@AddPlayerT
$LN10@AddPlayerT:
	push	260					; 00000104H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN11@AddPlayerT:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv79[ebp]
	mov	DWORD PTR [ecx+524], edx

; 630  : 			sprintf(PlayersInGameNodeList->PlayerName,"%s",Node->PlayerName);

	mov	eax, DWORD PTR _Node$[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+524]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 631  : 			PlayersInGameNodeList->next = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+524]
	mov	DWORD PTR [ecx+256], 0

; 632  : 			Node->RoundsPlayed++;

	mov	eax, DWORD PTR _Node$[ebp]
	mov	ecx, DWORD PTR [eax+260]
	add	ecx, 1
	mov	edx, DWORD PTR _Node$[ebp]
	mov	DWORD PTR [edx+260], ecx

; 633  : 			return;

	jmp	$LN7@AddPlayerT
$LN5@AddPlayerT:

; 634  : 		}
; 635  : 		PlayersInGameNode *Current = PlayersInGameNodeList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+524]
	mov	DWORD PTR _Current$[ebp], ecx
$LN4@AddPlayerT:

; 636  : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	$LN7@AddPlayerT

; 637  : 		{
; 638  : 			if (!_stricmp(Current->PlayerName,Node->PlayerName))

	mov	eax, DWORD PTR _Node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	push	ecx
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@AddPlayerT

; 639  : 				return;

	jmp	$LN7@AddPlayerT
$LN2@AddPlayerT:

; 640  : 			if (!Current->next)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+256], 0
	jne	$LN1@AddPlayerT

; 641  : 			{
; 642  : 				Current->next = new PlayersInGameNode;

	push	OFFSET ??_C@_0DC@ICIICMMC@RenCometBustersScoreSystem?3?3AddP@
	push	642					; 00000282H
	push	OFFSET ??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN13@AddPlayerT
	xor	ecx, ecx
	jne	SHORT $LN12@AddPlayerT
	push	642					; 00000282H
	push	OFFSET ??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN12@AddPlayerT:
	mov	DWORD PTR tv146[ebp], 0
	jmp	SHORT $LN14@AddPlayerT
$LN13@AddPlayerT:
	push	260					; 00000104H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv146[ebp], eax
$LN14@AddPlayerT:
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR tv146[ebp]
	mov	DWORD PTR [ecx+256], edx

; 643  : 				sprintf(Current->next->PlayerName,"%s",Node->PlayerName);

	mov	eax, DWORD PTR _Node$[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+256]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 644  : 				Current->next->next = NULL;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+256]
	mov	DWORD PTR [ecx+256], 0

; 645  : 				Node->RoundsPlayed++;

	mov	eax, DWORD PTR _Node$[ebp]
	mov	ecx, DWORD PTR [eax+260]
	add	ecx, 1
	mov	edx, DWORD PTR _Node$[ebp]
	mov	DWORD PTR [edx+260], ecx

; 646  : 				return;

	jmp	SHORT $LN7@AddPlayerT
$LN1@AddPlayerT:

; 647  : 			}
; 648  : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+256]
	mov	DWORD PTR _Current$[ebp], ecx

; 649  : 		}

	jmp	$LN4@AddPlayerT
$LN7@AddPlayerT:

; 650  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?AddPlayerToInGameList@RenCometBustersScoreSystem@@AAEXPAUCMTBHighScoresNode@1@@Z ENDP ; RenCometBustersScoreSystem::AddPlayerToInGameList
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??0CMTBHighScoresNode@RenCometBustersScoreSystem@@QAE@XZ
_TEXT	SEGMENT
$T1 = -96						; size = 28
_this$ = -4						; size = 4
??0CMTBHighScoresNode@RenCometBustersScoreSystem@@QAE@XZ PROC ; RenCometBustersScoreSystem::CMTBHighScoresNode::CMTBHighScoresNode, COMDAT
; _this$ = ecx

; 545  : 		CMTBHighScoresNode(void)

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 500				; 000001f4H
	call	??0GenericDateTime@JmgUtility@@QAE@XZ	; JmgUtility::GenericDateTime::GenericDateTime

; 546  : 		{
; 547  : 			sprintf(PlayerName,"\0");

	push	OFFSET ??_C@_01LOCGONAA@?$AA?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 8

; 548  : 			PlayTime = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+256], 0

; 549  : 			RoundsPlayed = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+260], 0

; 550  : 			Deaths = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+264], 0

; 551  : 			CometSmall = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+268], 0

; 552  : 			CometMedium = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+272], 0

; 553  : 			CometLarge = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+276], 0

; 554  : 			CometHuge = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+280], 0

; 555  : 			TheMoon = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+284], 0

; 556  : 			UFO = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+288], 0

; 557  : 			Mine = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+292], 0

; 558  : 			OtherPlayers = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+296], 0

; 559  : 			HighestScore = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+300], 0

; 560  : 			TotalScore = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+304], 0

; 561  : 			HighestLevel = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+308], 0

; 562  : 			TotalComets = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+312], 0

; 563  : 			HEWPowerups = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+316], 0

; 564  : 			HEWUsed = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+320], 0

; 565  : 			RoundsFired = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+324], 0

; 566  : 			TeamHighestLevel = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+328], 0

; 567  : 			GrantedOtherPlayersLives = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+332], 0

; 568  : 			ReceivedOtherPlayersLives = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+336], 0

; 569  : 			CargoShip = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+340], 0

; 570  : 			NewLivesAcquired = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+344], 0

; 571  : 			ObjectsRammed = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+348], 0

; 572  : 			SOSBeacons = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+352], 0

; 573  : 			PowerPowerups = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+356], 0

; 574  : 			ExtraLifePowerups = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0

; 575  : 			UsedSOSBeacons = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+364], 0

; 576  : 			PointPowerups = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+368], 0

; 577  : 			PowerupPoints = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+372], 0

; 578  : 			PickedUpDrone = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+376], 0

; 579  : 			UsedDrones = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+380], 0

; 580  : 			DroneKills = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+384], 0

; 581  : 			DronesKilled = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+388], 0

; 582  : 			DronePoints = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+392], 0

; 583  : 			RegenPowerups = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+396], 0

; 584  : 			DoublePointsPowerups = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+400], 0

; 585  : 			DoublePointsPoints = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+404], 0

; 586  : 			DeerPowerups = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+408], 0

; 587  : 			TimeCloaked = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+412], 0

; 588  : 			ShipCloakedCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+416], 0

; 589  : 			TimeShielded = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+420], 0

; 590  : 			ShieldRaisedCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+424], 0

; 591  : 			RanOutOfPowerCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+428], 0

; 592  : 			CargoShipScore = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+432], 0

; 593  : 			CargoShipKills = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+436], 0

; 594  : 			JumpsUsed = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+440], 0

; 595  : 			PickedUpDroneSwarm = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+444], 0

; 596  : 			UsedDronesSwarm = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+448], 0

; 597  : 			TimeDisrupted = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+452], 0

; 598  : 			UpgadedWeaponPowerups = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+456], 0

; 599  : 			UpgadedWeaponTime = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+460], 0

; 600  : 			HighestCleanScore = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+464], 0

; 601  : 			HighestCleanTeamScore = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+468], 0

; 602  : 			HighestCleanLevel = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+472], 0

; 603  : 			HighestCleanTeamLevel = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+476], 0

; 604  : 			HighestTeamScore = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+480], 0

; 605  : 			LevelsPlayedWithPerks = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+484], 0

; 606  : 			LevelsPlayedWithOutPerks = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+488], 0

; 607  : 			LevelsPlayedWithPerksAsATeam = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+492], 0

; 608  : 			LevelsPlayedWithOutPerksAsATeam = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+496], 0

; 609  : 			LastPlayTime = JmgUtility::GenericDateTime();

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0GenericDateTime@JmgUtility@@QAE@XZ	; JmgUtility::GenericDateTime::GenericDateTime
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 500				; 000001f4H
	mov	ecx, 7
	mov	esi, eax
	rep movsd

; 610  : 			next = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+528], 0

; 611  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMTBHighScoresNode@RenCometBustersScoreSystem@@QAE@XZ ENDP ; RenCometBustersScoreSystem::CMTBHighScoresNode::CMTBHighScoresNode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?AddPerkTypes@@YAXXZ
_TEXT	SEGMENT
_x$1 = -12						; size = 4
_x$2 = -8						; size = 4
_x$3 = -4						; size = 4
?AddPerkTypes@@YAXXZ PROC				; AddPerkTypes, COMDAT

; 447  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi

; 448  : 	PerkTypeSystem.Clean_Up();

	mov	ecx, OFFSET ?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A ; PerkTypeSystem
	call	?Clean_Up@PerkSystemPerkTypeList@@QAEXXZ ; PerkSystemPerkTypeList::Clean_Up

; 449  : 	for (int x = 0;x < 105;x++)

	mov	DWORD PTR _x$3[ebp], 0
	jmp	SHORT $LN11@AddPerkTyp
$LN10@AddPerkTyp:
	mov	eax, DWORD PTR _x$3[ebp]
	add	eax, 1
	mov	DWORD PTR _x$3[ebp], eax
$LN11@AddPerkTyp:
	cmp	DWORD PTR _x$3[ebp], 105		; 00000069H
	jge	SHORT $LN9@AddPerkTyp

; 450  : 		if (x != 61 && x != 63)

	cmp	DWORD PTR _x$3[ebp], 61			; 0000003dH
	je	SHORT $LN8@AddPerkTyp
	cmp	DWORD PTR _x$3[ebp], 63			; 0000003fH
	je	SHORT $LN8@AddPerkTyp

; 451  : 			PerkTypeSystem.AddAPerkType(x,"N/A",1000000,false,false,false,PerkUnusable,0,"N/A");

	push	OFFSET ??_C@_03HPADHAHE@N?1A?$AA@
	push	0
	push	999					; 000003e7H
	push	0
	push	0
	push	0
	push	1000000					; 000f4240H
	push	OFFSET ??_C@_03HPADHAHE@N?1A?$AA@
	mov	eax, DWORD PTR _x$3[ebp]
	push	eax
	mov	ecx, OFFSET ?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A ; PerkTypeSystem
	call	?AddAPerkType@PerkSystemPerkTypeList@@QAEXHPBDI_N11W4PerkTypeCategories@@H0@Z ; PerkSystemPerkTypeList::AddAPerkType
$LN8@AddPerkTyp:

; 452  : 	PerkTypeSystem.AddAPerkType(61,"To The Moon and Beyond",26,false,false,true,PerkWeapon,1,"Your reward for defending Earth!");

	jmp	SHORT $LN10@AddPerkTyp
$LN9@AddPerkTyp:
	push	OFFSET ??_C@_0CB@DNKDMCLF@Your?5reward?5for?5defending?5Earth?$CB@
	push	1
	push	8
	push	1
	push	0
	push	0
	push	26					; 0000001aH
	push	OFFSET ??_C@_0BH@KKMEIJFM@To?5The?5Moon?5and?5Beyond?$AA@
	push	61					; 0000003dH
	mov	ecx, OFFSET ?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A ; PerkTypeSystem
	call	?AddAPerkType@PerkSystemPerkTypeList@@QAEXHPBDI_N11W4PerkTypeCategories@@H0@Z ; PerkSystemPerkTypeList::AddAPerkType

; 453  : 	PerkTypeSystem.AddAPerkType(63,"Gamer",10,false,false,false,PerkWeapon,1,"Buying Floppy Disks gives you Golden Floppy Disks instead.");

	push	OFFSET ??_C@_0DL@PCMGDODH@Buying?5Floppy?5Disks?5gives?5you?5Go@
	push	1
	push	8
	push	0
	push	0
	push	0
	push	10					; 0000000aH
	push	OFFSET ??_C@_05GCGLAHBE@Gamer?$AA@
	push	63					; 0000003fH
	mov	ecx, OFFSET ?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A ; PerkTypeSystem
	call	?AddAPerkType@PerkSystemPerkTypeList@@QAEXHPBDI_N11W4PerkTypeCategories@@H0@Z ; PerkSystemPerkTypeList::AddAPerkType

; 454  : 	PerkTypeSystem.AddAPerkType(105,"Extra Life Ability",5,false,false,false,PerkUnusable,0,"You have unlocked the Extra Life ability.");

	push	OFFSET ??_C@_0CK@BLBNKMJE@You?5have?5unlocked?5the?5Extra?5Life@
	push	0
	push	999					; 000003e7H
	push	0
	push	0
	push	0
	push	5
	push	OFFSET ??_C@_0BD@PAJHKKN@Extra?5Life?5Ability?$AA@
	push	105					; 00000069H
	mov	ecx, OFFSET ?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A ; PerkTypeSystem
	call	?AddAPerkType@PerkSystemPerkTypeList@@QAEXHPBDI_N11W4PerkTypeCategories@@H0@Z ; PerkSystemPerkTypeList::AddAPerkType

; 455  : 	PerkTypeSystem.AddAPerkType(106,"Hyperdrive Ability",10,false,false,false,PerkUnusable,0,"You have unlocked the Hyperdrive ability.");

	push	OFFSET ??_C@_0CK@KFPIHAOL@You?5have?5unlocked?5the?5Hyperdrive@
	push	0
	push	999					; 000003e7H
	push	0
	push	0
	push	0
	push	10					; 0000000aH
	push	OFFSET ??_C@_0BD@OBMFBFNP@Hyperdrive?5Ability?$AA@
	push	106					; 0000006aH
	mov	ecx, OFFSET ?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A ; PerkTypeSystem
	call	?AddAPerkType@PerkSystemPerkTypeList@@QAEXHPBDI_N11W4PerkTypeCategories@@H0@Z ; PerkSystemPerkTypeList::AddAPerkType

; 456  : 	PerkTypeSystem.AddAPerkType(107,"Double Points Ability",25,false,false,false,PerkUnusable,0,"You have unlocked the Double Points ability.");

	push	OFFSET ??_C@_0CN@DFDDAGCN@You?5have?5unlocked?5the?5Double?5Poi@
	push	0
	push	999					; 000003e7H
	push	0
	push	0
	push	0
	push	25					; 00000019H
	push	OFFSET ??_C@_0BG@NCJOLDEP@Double?5Points?5Ability?$AA@
	push	107					; 0000006bH
	mov	ecx, OFFSET ?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A ; PerkTypeSystem
	call	?AddAPerkType@PerkSystemPerkTypeList@@QAEXHPBDI_N11W4PerkTypeCategories@@H0@Z ; PerkSystemPerkTypeList::AddAPerkType

; 457  : 	PerkTypeSystem.AddAPerkType(108,"Rapid Energy Regen Ability",25,false,false,false,PerkUnusable,0,"You have unlocked the Rapid Energy Regen ability.");

	push	OFFSET ??_C@_0DC@PHKOBBO@You?5have?5unlocked?5the?5Rapid?5Ener@
	push	0
	push	999					; 000003e7H
	push	0
	push	0
	push	0
	push	25					; 00000019H
	push	OFFSET ??_C@_0BL@LEIKNMKK@Rapid?5Energy?5Regen?5Ability?$AA@
	push	108					; 0000006cH
	mov	ecx, OFFSET ?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A ; PerkTypeSystem
	call	?AddAPerkType@PerkSystemPerkTypeList@@QAEXHPBDI_N11W4PerkTypeCategories@@H0@Z ; PerkSystemPerkTypeList::AddAPerkType

; 458  : 	PerkTypeSystem.AddAPerkType(109,"Weapons Upgrade Ability",25,false,false,false,PerkUnusable,0,"You have unlocked the Weapons Upgrade ability.");

	push	OFFSET ??_C@_0CP@PCCOOCAO@You?5have?5unlocked?5the?5Weapons?5Up@
	push	0
	push	999					; 000003e7H
	push	0
	push	0
	push	0
	push	25					; 00000019H
	push	OFFSET ??_C@_0BI@HEKPELOB@Weapons?5Upgrade?5Ability?$AA@
	push	109					; 0000006dH
	mov	ecx, OFFSET ?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A ; PerkTypeSystem
	call	?AddAPerkType@PerkSystemPerkTypeList@@QAEXHPBDI_N11W4PerkTypeCategories@@H0@Z ; PerkSystemPerkTypeList::AddAPerkType

; 459  : 	PerkTypeSystem.AddAPerkType(110,"Drone Ability",50,false,false,false,PerkUnusable,0,"You have unlocked the Drone ability.");

	push	OFFSET ??_C@_0CF@MKMOODP@You?5have?5unlocked?5the?5Drone?5abil@
	push	0
	push	999					; 000003e7H
	push	0
	push	0
	push	0
	push	50					; 00000032H
	push	OFFSET ??_C@_0O@CAKONFBG@Drone?5Ability?$AA@
	push	110					; 0000006eH
	mov	ecx, OFFSET ?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A ; PerkTypeSystem
	call	?AddAPerkType@PerkSystemPerkTypeList@@QAEXHPBDI_N11W4PerkTypeCategories@@H0@Z ; PerkSystemPerkTypeList::AddAPerkType

; 460  : 	PerkTypeSystem.AddAPerkType(111,"High Explosive Warhead Ability",50,false,false,false,PerkUnusable,0,"You have unlocked the High Explosive Warhead ability.");

	push	OFFSET ??_C@_0DG@PHEPPJDD@You?5have?5unlocked?5the?5High?5Explo@
	push	0
	push	999					; 000003e7H
	push	0
	push	0
	push	0
	push	50					; 00000032H
	push	OFFSET ??_C@_0BP@CEOGKNAL@High?5Explosive?5Warhead?5Ability?$AA@
	push	111					; 0000006fH
	mov	ecx, OFFSET ?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A ; PerkTypeSystem
	call	?AddAPerkType@PerkSystemPerkTypeList@@QAEXHPBDI_N11W4PerkTypeCategories@@H0@Z ; PerkSystemPerkTypeList::AddAPerkType

; 461  : 	PerkTypeSystem.AddAPerkType(112,"SOS Beacon Ability",25,false,false,false,PerkUnusable,0,"You have unlocked the SOS Beacon ability.");

	push	OFFSET ??_C@_0CK@BLIBFLCC@You?5have?5unlocked?5the?5SOS?5Beacon@
	push	0
	push	999					; 000003e7H
	push	0
	push	0
	push	0
	push	25					; 00000019H
	push	OFFSET ??_C@_0BD@JDPOMMKN@SOS?5Beacon?5Ability?$AA@
	push	112					; 00000070H
	mov	ecx, OFFSET ?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A ; PerkTypeSystem
	call	?AddAPerkType@PerkSystemPerkTypeList@@QAEXHPBDI_N11W4PerkTypeCategories@@H0@Z ; PerkSystemPerkTypeList::AddAPerkType

; 462  : 	PerkTypeSystem.AddAPerkType(113,"Drone Swarm Ability",25,false,false,false,PerkUnusable,0,"You have unlocked the Drone Swarm ability.");

	push	OFFSET ??_C@_0CL@HNDJOALJ@You?5have?5unlocked?5the?5Drone?5Swar@
	push	0
	push	999					; 000003e7H
	push	0
	push	0
	push	0
	push	25					; 00000019H
	push	OFFSET ??_C@_0BE@CBFNJGCC@Drone?5Swarm?5Ability?$AA@
	push	113					; 00000071H
	mov	ecx, OFFSET ?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A ; PerkTypeSystem
	call	?AddAPerkType@PerkSystemPerkTypeList@@QAEXHPBDI_N11W4PerkTypeCategories@@H0@Z ; PerkSystemPerkTypeList::AddAPerkType

; 463  : 	for (int x = 114;x < PERKCOUNT;x++)

	mov	DWORD PTR _x$2[ebp], 114		; 00000072H
	jmp	SHORT $LN7@AddPerkTyp
$LN6@AddPerkTyp:
	mov	eax, DWORD PTR _x$2[ebp]
	add	eax, 1
	mov	DWORD PTR _x$2[ebp], eax
$LN7@AddPerkTyp:
	cmp	DWORD PTR _x$2[ebp], 126		; 0000007eH
	jge	SHORT $LN5@AddPerkTyp

; 464  : 		PerkTypeSystem.AddAPerkType(x,"N/A",1000000,false,false,false,PerkUnusable,0,"N/A");

	push	OFFSET ??_C@_03HPADHAHE@N?1A?$AA@
	push	0
	push	999					; 000003e7H
	push	0
	push	0
	push	0
	push	1000000					; 000f4240H
	push	OFFSET ??_C@_03HPADHAHE@N?1A?$AA@
	mov	eax, DWORD PTR _x$2[ebp]
	push	eax
	mov	ecx, OFFSET ?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A ; PerkTypeSystem
	call	?AddAPerkType@PerkSystemPerkTypeList@@QAEXHPBDI_N11W4PerkTypeCategories@@H0@Z ; PerkSystemPerkTypeList::AddAPerkType
	jmp	SHORT $LN6@AddPerkTyp
$LN5@AddPerkTyp:

; 465  : 
; 466  : 	PerkTypeSystem.Finalize_Perks();

	mov	ecx, OFFSET ?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A ; PerkTypeSystem
	call	?Finalize_Perks@PerkSystemPerkTypeList@@QAEXXZ ; PerkSystemPerkTypeList::Finalize_Perks

; 467  : 	PerkSystemPerkTypeList::USEABLEPERKCOUNT = 0;

	mov	DWORD PTR ?USEABLEPERKCOUNT@PerkSystemPerkTypeList@@2HA, 0 ; PerkSystemPerkTypeList::USEABLEPERKCOUNT

; 468  : 	for (int x = 0;x < PERKCOUNT;x++)

	mov	DWORD PTR _x$1[ebp], 0
	jmp	SHORT $LN4@AddPerkTyp
$LN3@AddPerkTyp:
	mov	eax, DWORD PTR _x$1[ebp]
	add	eax, 1
	mov	DWORD PTR _x$1[ebp], eax
$LN4@AddPerkTyp:
	cmp	DWORD PTR _x$1[ebp], 126		; 0000007eH
	jge	SHORT $LN12@AddPerkTyp

; 469  : 		if (PerkSystemPerkTypeNodeList[x].PerkID)

	mov	eax, DWORD PTR _x$1[ebp]
	imul	eax, 792				; 00000318H
	cmp	DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax], 0
	je	SHORT $LN1@AddPerkTyp

; 470  : 			PerkSystemPerkTypeList::USEABLEPERKCOUNT++;

	mov	eax, DWORD PTR ?USEABLEPERKCOUNT@PerkSystemPerkTypeList@@2HA ; PerkSystemPerkTypeList::USEABLEPERKCOUNT
	add	eax, 1
	mov	DWORD PTR ?USEABLEPERKCOUNT@PerkSystemPerkTypeList@@2HA, eax ; PerkSystemPerkTypeList::USEABLEPERKCOUNT
$LN1@AddPerkTyp:

; 471  : }

	jmp	SHORT $LN3@AddPerkTyp
$LN12@AddPerkTyp:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?AddPerkTypes@@YAXXZ ENDP				; AddPerkTypes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_PerkID$ = 12						; size = 4
_IncreaseAmount$ = 16					; size = 4
?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z PROC ; PerkSystemIncreasePlayerPerkUnlockAmount, COMDAT

; 443  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 444  : 	return PlayerPerkSystemControl.IncreasePlayerPerkUnlockAmount(obj,PerkID,IncreaseAmount);

	mov	eax, DWORD PTR _IncreaseAmount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _PerkID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, OFFSET ?PlayerPerkSystemControl@@3VPlayerPerksNodeControlSystem@@A ; PlayerPerkSystemControl
	call	?IncreasePlayerPerkUnlockAmount@PlayerPerksNodeControlSystem@@QAE_NPAVScriptableGameObj@@HI@Z ; PlayerPerksNodeControlSystem::IncreasePlayerPerkUnlockAmount

; 445  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?PerkSystemIncreasePlayerPerkUnlockAmount@@YA_NPAVScriptableGameObj@@HI@Z ENDP ; PerkSystemIncreasePlayerPerkUnlockAmount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?CheckIfPlayerHasPerkUnlocked@@YA_NPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_PerkID$ = 12						; size = 4
?CheckIfPlayerHasPerkUnlocked@@YA_NPAVScriptableGameObj@@H@Z PROC ; CheckIfPlayerHasPerkUnlocked, COMDAT

; 437  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 438  : 	if (PlayerPerkSystemControl.CheckIfPlayerHasPerkUnlocked(obj,PerkID))

	mov	eax, DWORD PTR _PerkID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, OFFSET ?PlayerPerkSystemControl@@3VPlayerPerksNodeControlSystem@@A ; PlayerPerkSystemControl
	call	?CheckIfPlayerHasPerkUnlocked@PlayerPerksNodeControlSystem@@QAE_NPAVScriptableGameObj@@H@Z ; PlayerPerksNodeControlSystem::CheckIfPlayerHasPerkUnlocked
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@CheckIfPla

; 439  : 		return true;

	mov	al, 1
	jmp	SHORT $LN2@CheckIfPla
$LN1@CheckIfPla:

; 440  : 	return false;

	xor	al, al
$LN2@CheckIfPla:

; 441  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?CheckIfPlayerHasPerkUnlocked@@YA_NPAVScriptableGameObj@@H@Z ENDP ; CheckIfPlayerHasPerkUnlocked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??__EPlayerPerkSystemControl@@YAXXZ
text$yc	SEGMENT
??__EPlayerPerkSystemControl@@YAXXZ PROC		; `dynamic initializer for 'PlayerPerkSystemControl'', COMDAT

; 435  : PlayerPerksNodeControlSystem PlayerPerkSystemControl = PlayerPerksNodeControlSystem();

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?PlayerPerkSystemControl@@3VPlayerPerksNodeControlSystem@@A ; PlayerPerkSystemControl
	call	??0PlayerPerksNodeControlSystem@@QAE@XZ	; PlayerPerksNodeControlSystem::PlayerPerksNodeControlSystem
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EPlayerPerkSystemControl@@YAXXZ ENDP		; `dynamic initializer for 'PlayerPerkSystemControl''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??__EPerkTypeSystem@@YAXXZ
text$yc	SEGMENT
??__EPerkTypeSystem@@YAXXZ PROC				; `dynamic initializer for 'PerkTypeSystem'', COMDAT

; 434  : PerkSystemPerkTypeList PerkTypeSystem = PerkSystemPerkTypeList();

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?PerkTypeSystem@@3VPerkSystemPerkTypeList@@A ; PerkTypeSystem
	call	??0PerkSystemPerkTypeList@@QAE@XZ	; PerkSystemPerkTypeList::PerkSystemPerkTypeList
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EPerkTypeSystem@@YAXXZ ENDP				; `dynamic initializer for 'PerkTypeSystem''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?LoadData@PlayerPerksNodeControlSystem@@QAEXXZ
_TEXT	SEGMENT
tv80 = -8772						; size = 4
tv1243 = -8765						; size = 1
tv1240 = -8764						; size = 4
tv1237 = -8760						; size = 4
_x$1 = -8692						; size = 4
_LA2$2 = -8688						; size = 1008
_LA$3 = -7680						; size = 1008
_DecryptedString$4 = -6672				; size = 2048
_DecryptString$5 = -4624				; size = 2048
_Current$6 = -2576					; size = 4
_DecryptString$7 = -2572				; size = 2048
_Length$8 = -524					; size = 4
_PlayerName$9 = -520					; size = 256
_LoadPerks$ = -264					; size = 4
_loadPath$ = -260					; size = 256
_this$ = -4						; size = 4
?LoadData@PlayerPerksNodeControlSystem@@QAEXXZ PROC	; PlayerPerksNodeControlSystem::LoadData, COMDAT
; _this$ = ecx

; 385  : 	{

	push	ebp
	mov	ebp, esp
	mov	eax, 8772				; 00002244H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 386  : 		char loadPath[256];
; 387  : 		sprintf(loadPath,"%sSave\\BetaRp2PlayerPerks.Rp2",Get_File_Path());

	call	?Get_File_Path@@YAPBDXZ			; Get_File_Path
	push	eax
	push	OFFSET ??_C@_0BO@LEBAEOPC@?$CFsSave?2BetaRp2PlayerPerks?4Rp2?$AA@
	lea	eax, DWORD PTR _loadPath$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 388  : 		FILE *LoadPerks = fopen(loadPath,"r");

	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	lea	eax, DWORD PTR _loadPath$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	DWORD PTR _LoadPerks$[ebp], eax

; 389  : 		if (LoadPerks)

	cmp	DWORD PTR _LoadPerks$[ebp], 0
	je	$LN13@LoadData
$LN12@LoadData:

; 390  : 		{
; 391  : 			while (!feof(LoadPerks))

	mov	eax, DWORD PTR _LoadPerks$[ebp]
	push	eax
	call	DWORD PTR __imp__feof
	add	esp, 4
	test	eax, eax
	jne	$LN11@LoadData

; 392  : 			{
; 393  : 				char PlayerName[256];
; 394  : 				fgets(PlayerName,256,LoadPerks);

	mov	eax, DWORD PTR _LoadPerks$[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _PlayerName$9[ebp]
	push	ecx
	call	DWORD PTR __imp__fgets
	add	esp, 12					; 0000000cH

; 395  : 				int Length = strlen(PlayerName);

	lea	eax, DWORD PTR _PlayerName$9[ebp]
	mov	DWORD PTR tv1237[ebp], eax
	mov	ecx, DWORD PTR tv1237[ebp]
	add	ecx, 1
	mov	DWORD PTR tv1240[ebp], ecx
$LL17@LoadData:
	mov	edx, DWORD PTR tv1237[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv1243[ebp], al
	add	DWORD PTR tv1237[ebp], 1
	cmp	BYTE PTR tv1243[ebp], 0
	jne	SHORT $LL17@LoadData
	mov	ecx, DWORD PTR tv1237[ebp]
	sub	ecx, DWORD PTR tv1240[ebp]
	mov	DWORD PTR tv80[ebp], ecx
	mov	edx, DWORD PTR tv80[ebp]
	mov	DWORD PTR _Length$8[ebp], edx

; 396  : 				if (Length <= 0)

	cmp	DWORD PTR _Length$8[ebp], 0
	jg	SHORT $LN10@LoadData

; 397  : 				{
; 398  : 					Console_Input("msg PlayerPerksNodeControlSystem::LoadData ERROR: Length is less than 1");

	push	OFFSET ??_C@_0EI@BIBLNGIO@msg?5PlayerPerksNodeControlSystem@
	call	?Console_Input@@YAXPBD@Z		; Console_Input
	add	esp, 4

; 399  : 					char DecryptString[2048];
; 400  : 					fgets(DecryptString,2048,LoadPerks);

	mov	eax, DWORD PTR _LoadPerks$[ebp]
	push	eax
	push	2048					; 00000800H
	lea	ecx, DWORD PTR _DecryptString$7[ebp]
	push	ecx
	call	DWORD PTR __imp__fgets
	add	esp, 12					; 0000000cH

; 401  : 					continue;

	jmp	$LN12@LoadData
$LN10@LoadData:

; 402  : 				}
; 403  : 				PlayerName[Length-1] = '\0';

	mov	eax, DWORD PTR _Length$8[ebp]
	mov	BYTE PTR _PlayerName$9[ebp+eax-1], 0

; 404  : 				PlayerPerksDataNode *Current = GetPlayerPerkList(JmgUtility::Rp2Decrypt(PlayerName,25,5));

	push	5
	push	25					; 00000019H
	lea	eax, DWORD PTR _PlayerName$9[ebp]
	push	eax
	call	?Rp2Decrypt@JmgUtility@@SAPADPBDHH@Z	; JmgUtility::Rp2Decrypt
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayerPerkList@PlayerPerksNodeControlSystem@@AAEPAUPlayerPerksDataNode@@PBD@Z ; PlayerPerksNodeControlSystem::GetPlayerPerkList
	mov	DWORD PTR _Current$6[ebp], eax

; 405  : 				char DecryptString[2048];
; 406  : 				fgets(DecryptString,2048,LoadPerks);

	mov	eax, DWORD PTR _LoadPerks$[ebp]
	push	eax
	push	2048					; 00000800H
	lea	ecx, DWORD PTR _DecryptString$5[ebp]
	push	ecx
	call	DWORD PTR __imp__fgets
	add	esp, 12					; 0000000cH

; 407  : 				char DecryptedString[2048];
; 408  : 				sprintf(DecryptedString,"%s",JmgUtility::Rp2Decrypt(DecryptString,Current->PlayerName[0],Current->PlayerName[1]));

	mov	eax, 1
	shl	eax, 0
	mov	ecx, DWORD PTR _Current$6[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	push	edx
	mov	eax, 1
	imul	eax, 0
	mov	ecx, DWORD PTR _Current$6[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	push	edx
	lea	eax, DWORD PTR _DecryptString$5[ebp]
	push	eax
	call	?Rp2Decrypt@JmgUtility@@SAPADPBDHH@Z	; JmgUtility::Rp2Decrypt
	add	esp, 12					; 0000000cH
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	lea	ecx, DWORD PTR _DecryptedString$4[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 409  : 				PlayerPerkDataNode LA[PERKCOUNT] = {PlayerPerkDataNode()};

	lea	ecx, DWORD PTR _LA$3[ebp]
	call	??0PlayerPerkDataNode@@QAE@XZ		; PlayerPerkDataNode::PlayerPerkDataNode
	push	OFFSET ??0PlayerPerkDataNode@@QAE@XZ	; PlayerPerkDataNode::PlayerPerkDataNode
	push	125					; 0000007dH
	push	8
	lea	eax, DWORD PTR _LA$3[ebp+8]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 410  : 				PlayerPerkDataNode LA2[PERKCOUNT] = {PlayerPerkDataNode()};

	lea	ecx, DWORD PTR _LA2$2[ebp]
	call	??0PlayerPerkDataNode@@QAE@XZ		; PlayerPerkDataNode::PlayerPerkDataNode
	push	OFFSET ??0PlayerPerkDataNode@@QAE@XZ	; PlayerPerkDataNode::PlayerPerkDataNode
	push	125					; 0000007dH
	push	8
	lea	eax, DWORD PTR _LA2$2[ebp+8]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 411  : 				sscanf(DecryptedString,"%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d 0",&LA[0].PerkProgress,&LA2[0].PerkProgress,&LA[1].PerkProgress,&LA2[1].PerkProgress,&LA[2].PerkProgress,&LA2[2].PerkProgress,&LA[3].PerkProgress,&LA2[3].PerkProgress,&LA[4].PerkProgress,&LA2[4].PerkProgress,&LA[5].PerkProgress,&LA2[5].PerkProgress,&LA[6].PerkProgress,&LA2[6].PerkProgress,&LA[7].PerkProgress,&LA2[7].PerkProgress,&LA[8].PerkProgress,&LA2[8].PerkProgress,&LA[9].PerkProgress,&LA2[9].PerkProgress,&LA[10].PerkProgress,&LA2[10].PerkProgress,&LA[11].PerkProgress,&LA2[11].PerkProgress,&LA[12].PerkProgress,&LA2[12].PerkProgress,&LA[13].PerkProgress,&LA2[13].PerkProgress,&LA[14].PerkProgress,&LA2[14].PerkProgress,&LA[15].PerkProgress,&LA2[15].PerkProgress,&LA[16].PerkProgress,&LA2[16].PerkProgress,&LA[17].PerkProgress,&LA2[17].PerkProgress,&LA[18].PerkProgress,&LA2[18].PerkProgress,&LA[19].PerkProgress,&LA2[19].PerkProgress,&LA[20].PerkProgress,&LA2[20].PerkProgress,&LA[21].PerkProgress,&LA2[21].PerkProgress,&LA[22].PerkProgress,&LA2[22].PerkProgress,&LA[23].PerkProgress,&LA2[23].PerkProgress,&LA[24].PerkProgress,&LA2[24].PerkProgress,&LA[25].PerkProgress,&LA2[25].PerkProgress,&LA[26].PerkProgress,&LA2[26].PerkProgress,&LA[27].PerkProgress,&LA2[27].PerkProgress,&LA[28].PerkProgress,&LA2[28].PerkProgress,&LA[29].PerkProgress,&LA2[29].PerkProgress,&LA[30].PerkProgress,&LA2[30].PerkProgress,&LA[31].PerkProgress,&LA2[31].PerkProgress,&LA[32].PerkProgress,&LA2[32].PerkProgress,&LA[33].PerkProgress,&LA2[33].PerkProgress,&LA[34].PerkProgress,&LA2[34].PerkProgress,&LA[35].PerkProgress,&LA2[35].PerkProgress,&LA[36].PerkProgress,&LA2[36].PerkProgress,&LA[37].PerkProgress,&LA2[37].PerkProgress,&LA[38].PerkProgress,&LA2[38].PerkProgress,&LA[39].PerkProgress,&LA2[39].PerkProgress,&LA[40].PerkProgress,&LA2[40].PerkProgress,&LA[41].PerkProgress,&LA2[41].PerkProgress,&LA[42].PerkProgress,&LA2[42].PerkProgress,&LA[43].PerkProgress,&LA2[43].PerkProgress,&LA[44].PerkProgress,&LA2[44].PerkProgress,&LA[45].PerkProgress,&LA2[45].PerkProgress,&LA[46].PerkProgress,&LA2[46].PerkProgress,&LA[47].PerkProgress,&LA2[47].PerkProgress,&LA[48].PerkProgress,&LA2[48].PerkProgress,&LA[49].PerkProgress,&LA2[49].PerkProgress,&LA[50].PerkProgress,&LA2[50].PerkProgress,&LA[51].PerkProgress,&LA2[51].PerkProgress,&LA[52].PerkProgress,&LA2[52].PerkProgress,&LA[53].PerkProgress,&LA2[53].PerkProgress,&LA[54].PerkProgress,&LA2[54].PerkProgress,&LA[55].PerkProgress,&LA2[55].PerkProgress,&LA[56].PerkProgress,&LA2[56].PerkProgress,&LA[57].PerkProgress,&LA2[57].PerkProgress,&LA[58].PerkProgress,&LA2[58].PerkProgress,&LA[59].PerkProgress,&LA2[59].PerkProgress,&LA[60].PerkProgress,&LA2[60].PerkProgress,&LA[61].PerkProgress,&LA2[61].PerkProgress,&LA[62].PerkProgress,&LA2[62].PerkProgress,&LA[63].PerkProgress,&LA2[63].PerkProgress,&LA[64].PerkProgress,&LA2[64].PerkProgress,&LA[65].PerkProgress,&LA2[65].PerkProgress,&LA[66].PerkProgress,&LA2[66].PerkProgress,&LA[67].PerkProgress,&LA2[67].PerkProgress,&LA[68].PerkProgress,&LA2[68].PerkProgress,&LA[69].PerkProgress,&LA2[69].PerkProgress,&LA[70].PerkProgress,&LA2[70].PerkProgress,&LA[71].PerkProgress,&LA2[71].PerkProgress,&LA[72].PerkProgress,&LA2[72].PerkProgress,&LA[73].PerkProgress,&LA2[73].PerkProgress,&LA[74].PerkProgress,&LA2[74].PerkProgress,&LA[75].PerkProgress,&LA2[75].PerkProgress,&LA[76].PerkProgress,&LA2[76].PerkProgress,&LA[77].PerkProgress,&LA2[77].PerkProgress,&LA[78].PerkProgress,&LA2[78].PerkProgress,&LA[79].PerkProgress,&LA2[79].PerkProgress,&LA[80].PerkProgress,&LA2[80].PerkProgress,&LA[81].PerkProgress,&LA2[81].PerkProgress,&LA[82].PerkProgress,&LA2[82].PerkProgress,&LA[83].PerkProgress,&LA2[83].PerkProgress,&LA[84].PerkProgress,&LA2[84].PerkProgress,&LA[85].PerkProgress,&LA2[85].PerkProgress,&LA[86].PerkProgress,&LA2[86].PerkProgress,&LA[87].PerkProgress,&LA2[87].PerkProgress,&LA[88].PerkProgress,&LA2[88].PerkProgress,&LA[89].PerkProgress,&LA2[89].PerkProgress,&LA[90].PerkProgress,&LA2[90].PerkProgress,&LA[91].PerkProgress,&LA2[91].PerkProgress,&LA[92].PerkProgress,&LA2[92].PerkProgress,&LA[93].PerkProgress,&LA2[93].PerkProgress,&LA[94].PerkProgress,&LA2[94].PerkProgress,&LA[95].PerkProgress,&LA2[95].PerkProgress,&LA[96].PerkProgress,&LA2[96].PerkProgress,&LA[97].PerkProgress,&LA2[97].PerkProgress,&LA[98].PerkProgress,&LA2[98].PerkProgress,&LA[99].PerkProgress,&LA2[99].PerkProgress,&LA[100].PerkProgress,&LA2[100].PerkProgress,&LA[101].PerkProgress,&LA2[101].PerkProgress,&LA[102].PerkProgress,&LA2[102].PerkProgress,&LA[103].PerkProgress,&LA2[103].PerkProgress,&LA[104].PerkProgress,&LA2[104].PerkProgress,&LA[105].PerkProgress,&LA2[105].PerkProgress,&LA[106].PerkProgress,&LA2[106].PerkProgress,&LA[107].PerkProgress,&LA2[107].PerkProgress,&LA[108].PerkProgress,&LA2[108].PerkProgress,&LA[109].PerkProgress,&LA2[109].PerkProgress,&LA[110].PerkProgress,&LA2[110].PerkProgress,&LA[111].PerkProgress,&LA2[111].PerkProgress,&LA[112].PerkProgress,&LA2[112].PerkProgress,&LA[113].PerkProgress,&LA2[113].PerkProgress,&LA[114].PerkProgress,&LA2[114].PerkProgress,&LA[115].PerkProgress,&LA2[115].PerkProgress,&LA[116].PerkProgress,&LA2[116].PerkProgress,&LA[117].PerkProgress,&LA2[117].PerkProgress,&LA[118].PerkProgress,&LA2[118].PerkProgress,&LA[119].PerkProgress,&LA2[119].PerkProgress,&LA[120].PerkProgress,&LA2[120].PerkProgress,&LA[121].PerkProgress,&LA2[121].PerkProgress,&LA[122].PerkProgress,&LA2[122].PerkProgress,&LA[123].PerkProgress,&LA2[123].PerkProgress,&LA[124].PerkProgress,&LA2[124].PerkProgress,&LA[125].PerkProgress,&LA2[125].PerkProgress);

	mov	eax, 8
	imul	eax, 125				; 0000007dH
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 125				; 0000007dH
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 124				; 0000007cH
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 124				; 0000007cH
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 123				; 0000007bH
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 123				; 0000007bH
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 122				; 0000007aH
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 122				; 0000007aH
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 121				; 00000079H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 121				; 00000079H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 120				; 00000078H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 120				; 00000078H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 119				; 00000077H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 119				; 00000077H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 118				; 00000076H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 118				; 00000076H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 117				; 00000075H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 117				; 00000075H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 116				; 00000074H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 116				; 00000074H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 115				; 00000073H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 115				; 00000073H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 114				; 00000072H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 114				; 00000072H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 113				; 00000071H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 113				; 00000071H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 112				; 00000070H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 112				; 00000070H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 111				; 0000006fH
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 111				; 0000006fH
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 110				; 0000006eH
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 110				; 0000006eH
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 109				; 0000006dH
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 109				; 0000006dH
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 108				; 0000006cH
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 108				; 0000006cH
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 107				; 0000006bH
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 107				; 0000006bH
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 106				; 0000006aH
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 106				; 0000006aH
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 105				; 00000069H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 105				; 00000069H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 104				; 00000068H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 104				; 00000068H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 103				; 00000067H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 103				; 00000067H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 102				; 00000066H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 102				; 00000066H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 101				; 00000065H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 101				; 00000065H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 100				; 00000064H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 100				; 00000064H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 99					; 00000063H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 99					; 00000063H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 98					; 00000062H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 98					; 00000062H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 97					; 00000061H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 97					; 00000061H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 96					; 00000060H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 96					; 00000060H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 95					; 0000005fH
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 95					; 0000005fH
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 94					; 0000005eH
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 94					; 0000005eH
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 93					; 0000005dH
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 93					; 0000005dH
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 92					; 0000005cH
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 92					; 0000005cH
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 91					; 0000005bH
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 91					; 0000005bH
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 90					; 0000005aH
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 90					; 0000005aH
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 89					; 00000059H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 89					; 00000059H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 88					; 00000058H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 88					; 00000058H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 87					; 00000057H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 87					; 00000057H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 86					; 00000056H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 86					; 00000056H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 85					; 00000055H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 85					; 00000055H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 84					; 00000054H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 84					; 00000054H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 83					; 00000053H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 83					; 00000053H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 82					; 00000052H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 82					; 00000052H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 81					; 00000051H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 81					; 00000051H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 80					; 00000050H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 80					; 00000050H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 79					; 0000004fH
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 79					; 0000004fH
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 78					; 0000004eH
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 78					; 0000004eH
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 77					; 0000004dH
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 77					; 0000004dH
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 76					; 0000004cH
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 76					; 0000004cH
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 75					; 0000004bH
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 75					; 0000004bH
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 74					; 0000004aH
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 74					; 0000004aH
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 73					; 00000049H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 73					; 00000049H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 72					; 00000048H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 72					; 00000048H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 71					; 00000047H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 71					; 00000047H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 70					; 00000046H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 70					; 00000046H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 69					; 00000045H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 69					; 00000045H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 68					; 00000044H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 68					; 00000044H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 67					; 00000043H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 67					; 00000043H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 66					; 00000042H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 66					; 00000042H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 65					; 00000041H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 65					; 00000041H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	shl	ecx, 6
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	shl	eax, 6
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 63					; 0000003fH
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 63					; 0000003fH
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 62					; 0000003eH
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 62					; 0000003eH
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 61					; 0000003dH
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 61					; 0000003dH
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 60					; 0000003cH
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 60					; 0000003cH
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 59					; 0000003bH
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 59					; 0000003bH
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 58					; 0000003aH
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 58					; 0000003aH
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 57					; 00000039H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 57					; 00000039H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 56					; 00000038H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 56					; 00000038H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 55					; 00000037H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 55					; 00000037H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 54					; 00000036H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 54					; 00000036H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 53					; 00000035H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 53					; 00000035H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 52					; 00000034H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 52					; 00000034H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 51					; 00000033H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 51					; 00000033H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 50					; 00000032H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 50					; 00000032H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 49					; 00000031H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 49					; 00000031H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 48					; 00000030H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 48					; 00000030H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 47					; 0000002fH
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 47					; 0000002fH
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 46					; 0000002eH
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 46					; 0000002eH
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 45					; 0000002dH
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 45					; 0000002dH
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 44					; 0000002cH
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 44					; 0000002cH
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 43					; 0000002bH
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 43					; 0000002bH
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 42					; 0000002aH
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 42					; 0000002aH
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 41					; 00000029H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 41					; 00000029H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 40					; 00000028H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 40					; 00000028H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 39					; 00000027H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 39					; 00000027H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 38					; 00000026H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 38					; 00000026H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 37					; 00000025H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 37					; 00000025H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 36					; 00000024H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 36					; 00000024H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 35					; 00000023H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 35					; 00000023H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 34					; 00000022H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 34					; 00000022H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 33					; 00000021H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 33					; 00000021H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	shl	eax, 5
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	shl	edx, 5
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 31					; 0000001fH
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 30					; 0000001eH
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 30					; 0000001eH
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 29					; 0000001dH
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 29					; 0000001dH
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 28					; 0000001cH
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 28					; 0000001cH
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 27					; 0000001bH
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 27					; 0000001bH
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 26					; 0000001aH
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 26					; 0000001aH
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 25					; 00000019H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 25					; 00000019H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 24					; 00000018H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 24					; 00000018H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 23					; 00000017H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 23					; 00000017H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 22					; 00000016H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 22					; 00000016H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 21					; 00000015H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 21					; 00000015H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 20					; 00000014H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 20					; 00000014H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 19					; 00000013H
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 19					; 00000013H
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 18					; 00000012H
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 18					; 00000012H
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 17					; 00000011H
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 17					; 00000011H
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	shl	ecx, 4
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	shl	eax, 4
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 15					; 0000000fH
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 15					; 0000000fH
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 14					; 0000000eH
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 14					; 0000000eH
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 13					; 0000000dH
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 13					; 0000000dH
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 12					; 0000000cH
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 12					; 0000000cH
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 11					; 0000000bH
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 11					; 0000000bH
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 10					; 0000000aH
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 10					; 0000000aH
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 9
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 9
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	shl	eax, 3
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	shl	edx, 3
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 7
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 7
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 6
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 6
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	imul	eax, 5
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 5
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	shl	ecx, 2
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	shl	eax, 2
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 3
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 3
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	mov	eax, 8
	shl	eax, 1
	lea	ecx, DWORD PTR _LA2$2[ebp+eax+4]
	push	ecx
	mov	edx, 8
	shl	edx, 1
	lea	eax, DWORD PTR _LA$3[ebp+edx+4]
	push	eax
	mov	ecx, 8
	shl	ecx, 0
	lea	edx, DWORD PTR _LA2$2[ebp+ecx+4]
	push	edx
	mov	eax, 8
	shl	eax, 0
	lea	ecx, DWORD PTR _LA$3[ebp+eax+4]
	push	ecx
	mov	edx, 8
	imul	edx, 0
	lea	eax, DWORD PTR _LA2$2[ebp+edx+4]
	push	eax
	mov	ecx, 8
	imul	ecx, 0
	lea	edx, DWORD PTR _LA$3[ebp+ecx+4]
	push	edx
	push	OFFSET ??_C@_0CPG@HLGMAKDB@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd@
	lea	eax, DWORD PTR _DecryptedString$4[ebp]
	push	eax
	call	DWORD PTR __imp__sscanf
	add	esp, 1016				; 000003f8H

; 412  : 				for (int x = 0;x < PERKCOUNT;x++)

	mov	DWORD PTR _x$1[ebp], 0
	jmp	SHORT $LN9@LoadData
$LN8@LoadData:
	mov	eax, DWORD PTR _x$1[ebp]
	add	eax, 1
	mov	DWORD PTR _x$1[ebp], eax
$LN9@LoadData:
	cmp	DWORD PTR _x$1[ebp], 126		; 0000007eH
	jge	$LN7@LoadData

; 413  : 				{
; 414  : 					if (LA2[x].PerkProgress == LA[x].PerkProgress)

	mov	eax, DWORD PTR _x$1[ebp]
	mov	ecx, DWORD PTR _x$1[ebp]
	mov	edx, DWORD PTR _LA2$2[ebp+eax*8+4]
	cmp	edx, DWORD PTR _LA$3[ebp+ecx*8+4]
	jne	SHORT $LN6@LoadData

; 415  : 						Current->PlayerPerkList[x].PerkProgress = LA[x].PerkProgress;

	mov	eax, DWORD PTR _x$1[ebp]
	mov	ecx, DWORD PTR _Current$6[ebp]
	mov	edx, DWORD PTR _x$1[ebp]
	mov	edx, DWORD PTR _LA$3[ebp+edx*8+4]
	mov	DWORD PTR [ecx+eax*8+136], edx
	jmp	SHORT $LN5@LoadData
$LN6@LoadData:

; 416  : 					else if (PerkSystemPerkTypeNodeList[x].ResetOnFail)

	mov	eax, DWORD PTR _x$1[ebp]
	imul	eax, 792				; 00000318H
	movzx	ecx, BYTE PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+785]
	test	ecx, ecx
	je	SHORT $LN5@LoadData

; 417  : 						Current->PlayerPerkList[x].PerkProgress = 0;

	mov	eax, DWORD PTR _x$1[ebp]
	mov	ecx, DWORD PTR _Current$6[ebp]
	mov	DWORD PTR [ecx+eax*8+136], 0
$LN5@LoadData:

; 418  : 					if (PerkSystemPerkTypeNodeList[x].UnlockCost == LA[x].PerkProgress)

	mov	eax, DWORD PTR _x$1[ebp]
	imul	eax, 792				; 00000318H
	mov	ecx, DWORD PTR _x$1[ebp]
	mov	edx, DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+780]
	cmp	edx, DWORD PTR _LA$3[ebp+ecx*8+4]
	jne	SHORT $LN3@LoadData

; 419  : 					{
; 420  : 						Current->PlayerPerkList[x].HasPerk = true;

	mov	eax, DWORD PTR _x$1[ebp]
	mov	ecx, DWORD PTR _Current$6[ebp]
	mov	BYTE PTR [ecx+eax*8+132], 1

; 421  : 						if (PerkSystemPerkTypeNodeList[x].PerkID)

	mov	eax, DWORD PTR _x$1[ebp]
	imul	eax, 792				; 00000318H
	cmp	DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax], 0
	je	SHORT $LN3@LoadData

; 422  : 							Current->UnlockedPerks++;

	mov	eax, DWORD PTR _Current$6[ebp]
	mov	ecx, DWORD PTR [eax+128]
	add	ecx, 1
	mov	edx, DWORD PTR _Current$6[ebp]
	mov	DWORD PTR [edx+128], ecx
$LN3@LoadData:

; 423  : 					}
; 424  : 					if (PerkSystemPerkTypeNodeList[x].UnlockCost < Current->PlayerPerkList[x].PerkProgress)

	mov	eax, DWORD PTR _x$1[ebp]
	imul	eax, 792				; 00000318H
	mov	ecx, DWORD PTR _x$1[ebp]
	mov	edx, DWORD PTR _Current$6[ebp]
	mov	eax, DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+780]
	cmp	eax, DWORD PTR [edx+ecx*8+136]
	jae	SHORT $LN1@LoadData

; 425  : 						Current->PlayerPerkList[x].PerkProgress = PerkSystemPerkTypeNodeList[x].UnlockCost;

	mov	eax, DWORD PTR _x$1[ebp]
	imul	eax, 792				; 00000318H
	mov	ecx, DWORD PTR _x$1[ebp]
	mov	edx, DWORD PTR _Current$6[ebp]
	mov	eax, DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+780]
	mov	DWORD PTR [edx+ecx*8+136], eax
$LN1@LoadData:

; 426  : 				}

	jmp	$LN8@LoadData
$LN7@LoadData:

; 427  : 			}

	jmp	$LN12@LoadData
$LN11@LoadData:

; 428  : 			fclose(LoadPerks);

	mov	eax, DWORD PTR _LoadPerks$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
$LN13@LoadData:

; 429  : 		}
; 430  : 		HasLoaded = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 1

; 431  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadData@PlayerPerksNodeControlSystem@@QAEXXZ ENDP	; PlayerPerksNodeControlSystem::LoadData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?SaveData@PlayerPerksNodeControlSystem@@QAEXXZ
_TEXT	SEGMENT
tv282 = -4728						; size = 8
tv278 = -4720						; size = 4
tv272 = -4716						; size = 8
tv268 = -4708						; size = 4
tv203 = -4704						; size = 8
_x$1 = -4632						; size = 4
_EncryptString$2 = -4628				; size = 2048
_SavePerks2$ = -2580					; size = 4
_x$3 = -2576						; size = 4
_EncryptString$4 = -2572				; size = 2048
_Current$ = -524					; size = 4
_SavePerks$ = -520					; size = 4
_tempPath$ = -516					; size = 256
_filePath$ = -260					; size = 256
_this$ = -4						; size = 4
?SaveData@PlayerPerksNodeControlSystem@@QAEXXZ PROC	; PlayerPerksNodeControlSystem::SaveData, COMDAT
; _this$ = ecx

; 340  : 	{

	push	ebp
	mov	ebp, esp
	mov	eax, 4728				; 00001278H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 341  : 		if (!HasLoaded)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN13@SaveData

; 342  : 		{
; 343  : 			Console_Input("msg PlayerPerksNodeControlSystem ERROR: Saved blocked!");

	push	OFFSET ??_C@_0DH@CHLHOLEI@msg?5PlayerPerksNodeControlSystem@
	call	?Console_Input@@YAXPBD@Z		; Console_Input
	add	esp, 4

; 344  : 			return;

	jmp	$LN14@SaveData
$LN13@SaveData:

; 345  : 		}
; 346  : 		char filePath[256], tempPath[256];
; 347  : 		sprintf(filePath,"%sSave",Get_File_Path());

	call	?Get_File_Path@@YAPBDXZ			; Get_File_Path
	push	eax
	push	OFFSET ??_C@_06MGHPOHKI@?$CFsSave?$AA@
	lea	eax, DWORD PTR _filePath$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 348  : 		_mkdir(filePath);

	lea	eax, DWORD PTR _filePath$[ebp]
	push	eax
	call	DWORD PTR __imp___mkdir
	add	esp, 4

; 349  : 		sprintf(tempPath,"%sSave\\BetaRp2PlayerPerks.tmp",Get_File_Path());

	call	?Get_File_Path@@YAPBDXZ			; Get_File_Path
	push	eax
	push	OFFSET ??_C@_0BO@OHPIKDLE@?$CFsSave?2BetaRp2PlayerPerks?4tmp?$AA@
	lea	eax, DWORD PTR _tempPath$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 350  : 		FILE *SavePerks = fopen(tempPath,"w");

	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	lea	eax, DWORD PTR _tempPath$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	DWORD PTR _SavePerks$[ebp], eax

; 351  : 		if (!SavePerks)

	cmp	DWORD PTR _SavePerks$[ebp], 0
	jne	SHORT $LN12@SaveData

; 352  : 			return;

	jmp	$LN14@SaveData
$LN12@SaveData:

; 353  : 		PlayerPerksDataNode *Current = PlayerPerksDataNodeList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _Current$[ebp], ecx
$LN11@SaveData:

; 354  : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	$LN10@SaveData

; 355  : 		{
; 356  : 			char EncryptString[2048];
; 357  : 			sprintf(EncryptString,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	eax, DWORD PTR _EncryptString$4[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 8

; 358  : 			for (int x = 0;x < PERKCOUNT;x++)

	mov	DWORD PTR _x$3[ebp], 0
	jmp	SHORT $LN9@SaveData
$LN8@SaveData:
	mov	eax, DWORD PTR _x$3[ebp]
	add	eax, 1
	mov	DWORD PTR _x$3[ebp], eax
$LN9@SaveData:
	cmp	DWORD PTR _x$3[ebp], 126		; 0000007eH
	jge	SHORT $LN7@SaveData

; 359  : 				sprintf(EncryptString,"%s%d %d ",EncryptString,Current->PlayerPerkList[x].PerkProgress,Current->PlayerPerkList[x].PerkProgress);

	mov	eax, DWORD PTR _x$3[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+136]
	push	edx
	mov	eax, DWORD PTR _x$3[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+136]
	push	edx
	lea	eax, DWORD PTR _EncryptString$4[ebp]
	push	eax
	push	OFFSET ??_C@_08HBNINGOP@?$CFs?$CFd?5?$CFd?5?$AA@
	lea	ecx, DWORD PTR _EncryptString$4[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H
	jmp	SHORT $LN8@SaveData
$LN7@SaveData:

; 360  : 			fprintf(SavePerks,"%s\n%s",JmgUtility::Rp2Encrypt(Current->PlayerName,25,5),JmgUtility::Rp2Encrypt2(EncryptString,Current->PlayerName[0],Current->PlayerName[1]));

	mov	eax, 1
	shl	eax, 0
	mov	ecx, DWORD PTR _Current$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	push	edx
	mov	eax, 1
	imul	eax, 0
	mov	ecx, DWORD PTR _Current$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	push	edx
	lea	eax, DWORD PTR _EncryptString$4[ebp]
	push	eax
	call	?Rp2Encrypt2@JmgUtility@@SAPADPBDHH@Z	; JmgUtility::Rp2Encrypt2
	add	esp, 12					; 0000000cH
	push	eax
	push	5
	push	25					; 00000019H
	mov	ecx, DWORD PTR _Current$[ebp]
	push	ecx
	call	?Rp2Encrypt@JmgUtility@@SAPADPBDHH@Z	; JmgUtility::Rp2Encrypt
	add	esp, 12					; 0000000cH
	push	eax
	push	OFFSET ??_C@_05PCAHBOJM@?$CFs?6?$CFs?$AA@
	mov	edx, DWORD PTR _SavePerks$[ebp]
	push	edx
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H

; 361  : 			if (Current->next)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+1140], 0
	je	SHORT $LN6@SaveData

; 362  : 				fprintf(SavePerks,"\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	eax, DWORD PTR _SavePerks$[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
$LN6@SaveData:

; 363  : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+1140]
	mov	DWORD PTR _Current$[ebp], ecx

; 364  : 		}

	jmp	$LN11@SaveData
$LN10@SaveData:

; 365  : 		fclose(SavePerks);

	mov	eax, DWORD PTR _SavePerks$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4

; 366  : 		sprintf(tempPath,"%sSave\\BetaRp2PlayerPerks.tmp",Get_File_Path());

	call	?Get_File_Path@@YAPBDXZ			; Get_File_Path
	push	eax
	push	OFFSET ??_C@_0BO@OHPIKDLE@?$CFsSave?2BetaRp2PlayerPerks?4tmp?$AA@
	lea	eax, DWORD PTR _tempPath$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 367  : 		sprintf(filePath,"%sSave\\BetaRp2PlayerPerks.Rp2",Get_File_Path());

	call	?Get_File_Path@@YAPBDXZ			; Get_File_Path
	push	eax
	push	OFFSET ??_C@_0BO@LEBAEOPC@?$CFsSave?2BetaRp2PlayerPerks?4Rp2?$AA@
	lea	eax, DWORD PTR _filePath$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 368  : 		remove(filePath);

	lea	eax, DWORD PTR _filePath$[ebp]
	push	eax
	call	DWORD PTR __imp__remove
	add	esp, 4

; 369  : 		rename(tempPath,filePath);

	lea	eax, DWORD PTR _filePath$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempPath$[ebp]
	push	ecx
	call	DWORD PTR __imp__rename
	add	esp, 8

; 370  : 		sprintf(tempPath,"%sSave\\BetaRp2PlayerPerks.txt",Get_File_Path());

	call	?Get_File_Path@@YAPBDXZ			; Get_File_Path
	push	eax
	push	OFFSET ??_C@_0BO@JJHJAHCL@?$CFsSave?2BetaRp2PlayerPerks?4txt?$AA@
	lea	eax, DWORD PTR _tempPath$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 371  : 		FILE *SavePerks2 = fopen(tempPath,"w");

	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	lea	eax, DWORD PTR _tempPath$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	DWORD PTR _SavePerks2$[ebp], eax

; 372  : 		Current = PlayerPerksDataNodeList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _Current$[ebp], ecx
$LN5@SaveData:

; 373  : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	$LN4@SaveData

; 374  : 		{
; 375  : 			char EncryptString[2048];
; 376  : 			sprintf(EncryptString,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	eax, DWORD PTR _EncryptString$2[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 8

; 377  : 			for (int x = 0;x < PERKCOUNT;x++)

	mov	DWORD PTR _x$1[ebp], 0
	jmp	SHORT $LN3@SaveData
$LN2@SaveData:
	mov	eax, DWORD PTR _x$1[ebp]
	add	eax, 1
	mov	DWORD PTR _x$1[ebp], eax
$LN3@SaveData:
	cmp	DWORD PTR _x$1[ebp], 126		; 0000007eH
	jge	$LN1@SaveData

; 378  : 				sprintf(EncryptString,"%s%.2f ",EncryptString,Current->PlayerPerkList[x].HasPerk ? 100.00 : ((float)Current->PlayerPerkList[x].PerkProgress/PerkSystemPerkTypeNodeList[x].UnlockCost*100.0f));

	mov	eax, DWORD PTR _x$1[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	movzx	edx, BYTE PTR [ecx+eax*8+132]
	test	edx, edx
	je	SHORT $LN16@SaveData
	movsd	xmm0, QWORD PTR __real@4059000000000000
	movsd	QWORD PTR tv203[ebp], xmm0
	jmp	$LN17@SaveData
$LN16@SaveData:
	mov	eax, DWORD PTR _x$1[ebp]
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+136]
	mov	DWORD PTR tv268[ebp], edx
	cvtsi2sd xmm0, DWORD PTR tv268[ebp]
	mov	eax, DWORD PTR tv268[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv272[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv272[ebp]
	mov	ecx, DWORD PTR _x$1[ebp]
	imul	ecx, 792				; 00000318H
	mov	edx, DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[ecx+780]
	mov	DWORD PTR tv278[ebp], edx
	cvtsi2sd xmm1, DWORD PTR tv278[ebp]
	mov	eax, DWORD PTR tv278[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv282[ebp], xmm1
	cvtsd2ss xmm1, QWORD PTR tv282[ebp]
	divss	xmm0, xmm1
	mulss	xmm0, DWORD PTR __real@42c80000
	cvtss2sd xmm0, xmm0
	movsd	QWORD PTR tv203[ebp], xmm0
$LN17@SaveData:
	sub	esp, 8
	movsd	xmm0, QWORD PTR tv203[ebp]
	movsd	QWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _EncryptString$2[ebp]
	push	ecx
	push	OFFSET ??_C@_07FMKHCAOI@?$CFs?$CF?42f?5?$AA@
	lea	edx, DWORD PTR _EncryptString$2[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H
	jmp	$LN2@SaveData
$LN1@SaveData:

; 379  : 			fprintf(SavePerks2,"%s\n%s\n",Current->PlayerName,EncryptString);

	lea	eax, DWORD PTR _EncryptString$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	push	ecx
	push	OFFSET ??_C@_06DKEDAPL@?$CFs?6?$CFs?6?$AA@
	mov	edx, DWORD PTR _SavePerks2$[ebp]
	push	edx
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H

; 380  : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+1140]
	mov	DWORD PTR _Current$[ebp], ecx

; 381  : 		}

	jmp	$LN5@SaveData
$LN4@SaveData:

; 382  : 		fclose(SavePerks2);

	mov	eax, DWORD PTR _SavePerks2$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
$LN14@SaveData:

; 383  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?SaveData@PlayerPerksNodeControlSystem@@QAEXXZ ENDP	; PlayerPerksNodeControlSystem::SaveData
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?ClearPerksList@PlayerPerksNodeControlSystem@@QAEXXZ
_TEXT	SEGMENT
$T1 = -84						; size = 4
_Temp$ = -16						; size = 4
_Current$ = -12						; size = 4
_x$2 = -8						; size = 4
_this$ = -4						; size = 4
?ClearPerksList@PlayerPerksNodeControlSystem@@QAEXXZ PROC ; PlayerPerksNodeControlSystem::ClearPerksList, COMDAT
; _this$ = ecx

; 326  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 327  : 		HasLoaded = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0

; 328  : 		for (int x = 0;x < 128;x++)

	mov	DWORD PTR _x$2[ebp], 0
	jmp	SHORT $LN5@ClearPerks
$LN4@ClearPerks:
	mov	eax, DWORD PTR _x$2[ebp]
	add	eax, 1
	mov	DWORD PTR _x$2[ebp], eax
$LN5@ClearPerks:
	cmp	DWORD PTR _x$2[ebp], 128		; 00000080H
	jge	SHORT $LN3@ClearPerks

; 329  : 			PlayerPerkListNodes[x] = NULL;

	mov	eax, DWORD PTR _x$2[ebp]
	mov	DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4], 0
	jmp	SHORT $LN4@ClearPerks
$LN3@ClearPerks:

; 330  : 		PlayerPerksDataNode *Current = PlayerPerksDataNodeList,*Temp = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _Current$[ebp], ecx
	mov	DWORD PTR _Temp$[ebp], 0
$LN2@ClearPerks:

; 331  : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	SHORT $LN1@ClearPerks

; 332  : 		{	
; 333  : 			Temp = Current;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	DWORD PTR _Temp$[ebp], eax

; 334  : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+1140]
	mov	DWORD PTR _Current$[ebp], ecx

; 335  : 			delete Temp;

	push	OFFSET ??_C@_0CN@JPAIIEAC@PlayerPerksNodeControlSystem?3?3Cl@
	push	335					; 0000014fH
	push	OFFSET ??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN9@ClearPerks
	xor	ecx, ecx
	jne	SHORT $LN8@ClearPerks
	push	335					; 0000014fH
	push	OFFSET ??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN8@ClearPerks:
	jmp	SHORT $LN10@ClearPerks
$LN9@ClearPerks:
	mov	eax, DWORD PTR _Temp$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@ClearPerks:

; 336  : 		}

	jmp	SHORT $LN2@ClearPerks
$LN1@ClearPerks:

; 337  : 		PlayerPerksDataNodeList = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 338  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearPerksList@PlayerPerksNodeControlSystem@@QAEXXZ ENDP ; PlayerPerksNodeControlSystem::ClearPerksList
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?CheckIfPlayerHasPerkUnlocked@PlayerPerksNodeControlSystem@@QAE_NPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_PlayerID$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_PerkID$ = 12						; size = 4
?CheckIfPlayerHasPerkUnlocked@PlayerPerksNodeControlSystem@@QAE_NPAVScriptableGameObj@@H@Z PROC ; PlayerPerksNodeControlSystem::CheckIfPlayerHasPerkUnlocked, COMDAT
; _this$ = ecx

; 315  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 316  : 		if (!Commands->Is_A_Star(obj))

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@CheckIfPla

; 317  : 			return false;

	xor	al, al
	jmp	SHORT $LN4@CheckIfPla
$LN3@CheckIfPla:

; 318  : 		int PlayerID = JmgUtility::JMG_Get_Player_ID(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?JMG_Get_Player_ID@JmgUtility@@SAJPAVScriptableGameObj@@@Z ; JmgUtility::JMG_Get_Player_ID
	add	esp, 4
	mov	DWORD PTR _PlayerID$[ebp], eax

; 319  : 		if (!PlayerPerkListNodes[PlayerID])

	mov	eax, DWORD PTR _PlayerID$[ebp]
	cmp	DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4], 0
	jne	SHORT $LN2@CheckIfPla

; 320  : 			return false;

	xor	al, al
	jmp	SHORT $LN4@CheckIfPla
$LN2@CheckIfPla:

; 321  : 		if (PlayerPerkListNodes[PlayerID]->PlayerPerkList[PerkID].HasPerk)

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4]
	mov	edx, DWORD PTR _PerkID$[ebp]
	movzx	eax, BYTE PTR [ecx+edx*8+132]
	test	eax, eax
	je	SHORT $LN1@CheckIfPla

; 322  : 			return true;

	mov	al, 1
	jmp	SHORT $LN4@CheckIfPla
$LN1@CheckIfPla:

; 323  : 		return false;

	xor	al, al
$LN4@CheckIfPla:

; 324  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?CheckIfPlayerHasPerkUnlocked@PlayerPerksNodeControlSystem@@QAE_NPAVScriptableGameObj@@H@Z ENDP ; PlayerPerksNodeControlSystem::CheckIfPlayerHasPerkUnlocked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?IncreasePlayerPerkUnlockAmount@PlayerPerksNodeControlSystem@@QAE_NPAVScriptableGameObj@@HI@Z
_TEXT	SEGMENT
_perkmsg$1 = -524					; size = 512
_Player$2 = -12						; size = 4
_PlayerID$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_PerkID$ = 12						; size = 4
_IncreaseAmount$ = 16					; size = 4
?IncreasePlayerPerkUnlockAmount@PlayerPerksNodeControlSystem@@QAE_NPAVScriptableGameObj@@HI@Z PROC ; PlayerPerksNodeControlSystem::IncreasePlayerPerkUnlockAmount, COMDAT
; _this$ = ecx

; 215  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 588				; 0000024cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 216  : 		if (!Commands->Is_A_Star(obj))

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN20@IncreasePl

; 217  : 			return false;

	xor	al, al
	jmp	$LN21@IncreasePl
$LN20@IncreasePl:

; 218  : 		int PlayerID = JmgUtility::JMG_Get_Player_ID(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?JMG_Get_Player_ID@JmgUtility@@SAJPAVScriptableGameObj@@@Z ; JmgUtility::JMG_Get_Player_ID
	add	esp, 4
	mov	DWORD PTR _PlayerID$[ebp], eax

; 219  : 		if (!PlayerPerkListNodes[PlayerID])

	mov	eax, DWORD PTR _PlayerID$[ebp]
	cmp	DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4], 0
	jne	SHORT $LN19@IncreasePl

; 220  : 			return false;

	xor	al, al
	jmp	$LN21@IncreasePl
$LN19@IncreasePl:

; 221  : 		if (PlayerPerkListNodes[PlayerID]->PlayerPerkList[PerkID].HasPerk)

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4]
	mov	edx, DWORD PTR _PerkID$[ebp]
	movzx	eax, BYTE PTR [ecx+edx*8+132]
	test	eax, eax
	je	SHORT $LN18@IncreasePl

; 222  : 			return false;

	xor	al, al
	jmp	$LN21@IncreasePl
$LN18@IncreasePl:

; 223  : 		if (PerkSystemPerkTypeNodeList[PerkID].RequiresOrder)

	mov	eax, DWORD PTR _PerkID$[ebp]
	imul	eax, 792				; 00000318H
	movzx	ecx, BYTE PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+786]
	test	ecx, ecx
	je	SHORT $LN17@IncreasePl

; 224  : 		{
; 225  : 			if ((PlayerPerkListNodes[PlayerID]->PlayerPerkList[PerkID].PerkProgress + 1) == IncreaseAmount)

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4]
	mov	edx, DWORD PTR _PerkID$[ebp]
	mov	eax, DWORD PTR [ecx+edx*8+136]
	add	eax, 1
	cmp	eax, DWORD PTR _IncreaseAmount$[ebp]
	jne	SHORT $LN16@IncreasePl

; 226  : 				PlayerPerkListNodes[PlayerID]->PlayerPerkList[PerkID].PerkProgress = IncreaseAmount;

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4]
	mov	edx, DWORD PTR _PerkID$[ebp]
	mov	eax, DWORD PTR _IncreaseAmount$[ebp]
	mov	DWORD PTR [ecx+edx*8+136], eax
	jmp	SHORT $LN15@IncreasePl
$LN16@IncreasePl:

; 227  : 			else if (PerkSystemPerkTypeNodeList[PerkID].ResetOnFail)

	mov	eax, DWORD PTR _PerkID$[ebp]
	imul	eax, 792				; 00000318H
	movzx	ecx, BYTE PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+785]
	test	ecx, ecx
	je	SHORT $LN14@IncreasePl

; 228  : 				PlayerPerkListNodes[PlayerID]->PlayerPerkList[PerkID].PerkProgress = 0;

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4]
	mov	edx, DWORD PTR _PerkID$[ebp]
	mov	DWORD PTR [ecx+edx*8+136], 0

; 229  : 			else

	jmp	SHORT $LN15@IncreasePl
$LN14@IncreasePl:

; 230  : 				PlayerPerkListNodes[PlayerID]->PlayerPerkList[PerkID].PerkProgress = IncreaseAmount;

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4]
	mov	edx, DWORD PTR _PerkID$[ebp]
	mov	eax, DWORD PTR _IncreaseAmount$[ebp]
	mov	DWORD PTR [ecx+edx*8+136], eax
$LN15@IncreasePl:
	jmp	$LN12@IncreasePl
$LN17@IncreasePl:

; 231  : 		}
; 232  : 		else if (PerkSystemPerkTypeNodeList[PerkID].MultiplyUnlockCost)

	mov	eax, DWORD PTR _PerkID$[ebp]
	imul	eax, 792				; 00000318H
	movzx	ecx, BYTE PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+784]
	test	ecx, ecx
	je	SHORT $LN11@IncreasePl

; 233  : 			if (!PlayerPerkListNodes[PlayerID]->PlayerPerkList[PerkID].PerkProgress)

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4]
	mov	edx, DWORD PTR _PerkID$[ebp]
	cmp	DWORD PTR [ecx+edx*8+136], 0
	jne	SHORT $LN10@IncreasePl

; 234  : 				PlayerPerkListNodes[PlayerID]->PlayerPerkList[PerkID].PerkProgress = IncreaseAmount; 

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4]
	mov	edx, DWORD PTR _PerkID$[ebp]
	mov	eax, DWORD PTR _IncreaseAmount$[ebp]
	mov	DWORD PTR [ecx+edx*8+136], eax

; 235  : 			else

	jmp	SHORT $LN9@IncreasePl
$LN10@IncreasePl:

; 236  : 				PlayerPerkListNodes[PlayerID]->PlayerPerkList[PerkID].PerkProgress *= IncreaseAmount;

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4]
	mov	edx, DWORD PTR _PerkID$[ebp]
	mov	eax, DWORD PTR [ecx+edx*8+136]
	imul	eax, DWORD PTR _IncreaseAmount$[ebp]
	mov	ecx, DWORD PTR _PlayerID$[ebp]
	mov	edx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[ecx*4]
	mov	ecx, DWORD PTR _PerkID$[ebp]
	mov	DWORD PTR [edx+ecx*8+136], eax
$LN9@IncreasePl:

; 237  : 		else

	jmp	SHORT $LN12@IncreasePl
$LN11@IncreasePl:

; 238  : 			PlayerPerkListNodes[PlayerID]->PlayerPerkList[PerkID].PerkProgress += IncreaseAmount;

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4]
	mov	edx, DWORD PTR _PerkID$[ebp]
	mov	eax, DWORD PTR [ecx+edx*8+136]
	add	eax, DWORD PTR _IncreaseAmount$[ebp]
	mov	ecx, DWORD PTR _PlayerID$[ebp]
	mov	edx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[ecx*4]
	mov	ecx, DWORD PTR _PerkID$[ebp]
	mov	DWORD PTR [edx+ecx*8+136], eax
$LN12@IncreasePl:

; 239  : 		if ((PlayerPerkListNodes[PlayerID]->PlayerPerkList[PerkID].PerkProgress >= PerkSystemPerkTypeNodeList[PerkID].UnlockCost && !PerkSystemPerkTypeNodeList[PerkID].ResetOnFail) || PlayerPerkListNodes[PlayerID]->PlayerPerkList[PerkID].PerkProgress == PerkSystemPerkTypeNodeList[PerkID].UnlockCost)

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4]
	mov	edx, DWORD PTR _PerkID$[ebp]
	imul	edx, 792				; 00000318H
	mov	eax, DWORD PTR _PerkID$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*8+136]
	cmp	ecx, DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[edx+780]
	jb	SHORT $LN5@IncreasePl
	mov	eax, DWORD PTR _PerkID$[ebp]
	imul	eax, 792				; 00000318H
	movzx	ecx, BYTE PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+785]
	test	ecx, ecx
	je	SHORT $LN6@IncreasePl
$LN5@IncreasePl:
	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4]
	mov	edx, DWORD PTR _PerkID$[ebp]
	imul	edx, 792				; 00000318H
	mov	eax, DWORD PTR _PerkID$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*8+136]
	cmp	ecx, DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[edx+780]
	jne	$LN7@IncreasePl
$LN6@IncreasePl:

; 240  : 		{
; 241  : 			GameObject *Player = Get_GameObj(PlayerID);

	mov	eax, DWORD PTR _PlayerID$[ebp]
	push	eax
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	mov	DWORD PTR _Player$2[ebp], eax

; 242  : 			if (Player)

	cmp	DWORD PTR _Player$2[ebp], 0
	je	$LN4@IncreasePl

; 243  : 			{
; 244  : 				char perkmsg[512];
; 245  : 				if (PerkSystemPerkTypeNodeList[PerkID].Category != PerkUnusable)

	mov	eax, DWORD PTR _PerkID$[ebp]
	imul	eax, 792				; 00000318H
	cmp	DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+8], 999 ; 000003e7H
	je	SHORT $LN3@IncreasePl

; 246  : 				{
; 247  : 					sprintf(perkmsg,"You have unlocked the %s perk!",PerkSystemPerkTypeNodeList[PerkID].Name);

	mov	eax, DWORD PTR _PerkID$[ebp]
	imul	eax, 792				; 00000318H
	add	eax, OFFSET ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A+12
	push	eax
	push	OFFSET ??_C@_0BP@CBPFPHPN@You?5have?5unlocked?5the?5?$CFs?5perk?$CB?$AA@
	lea	ecx, DWORD PTR _perkmsg$1[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 248  : 					JmgUtility::DisplayChatMessage(Player,230,230,0,perkmsg);

	lea	eax, DWORD PTR _perkmsg$1[ebp]
	push	eax
	push	0
	push	230					; 000000e6H
	push	230					; 000000e6H
	mov	ecx, DWORD PTR _Player$2[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H
$LN3@IncreasePl:

; 249  : 				}
; 250  : 				JmgUtility::DisplayChatMessage(Player,230,230,0,PerkSystemPerkTypeNodeList[PerkID].Description);

	mov	eax, DWORD PTR _PerkID$[ebp]
	imul	eax, 792				; 00000318H
	add	eax, OFFSET ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A+268
	push	eax
	push	0
	push	230					; 000000e6H
	push	230					; 000000e6H
	mov	ecx, DWORD PTR _Player$2[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 251  : 				Create_2D_WAV_Sound_Player(Player,"sysmsg.wav");

	push	OFFSET ??_C@_0L@LDMBNLK@sysmsg?4wav?$AA@
	mov	eax, DWORD PTR _Player$2[ebp]
	push	eax
	call	DWORD PTR ?Create_2D_WAV_Sound_Player@@3P6AHPAVScriptableGameObj@@PBD@ZA ; Create_2D_WAV_Sound_Player
	add	esp, 8
$LN4@IncreasePl:

; 252  : 			}
; 253  : 			PlayerPerkListNodes[PlayerID]->PlayerPerkList[PerkID].PerkProgress = PerkSystemPerkTypeNodeList[PerkID].UnlockCost;

	mov	eax, DWORD PTR _PerkID$[ebp]
	imul	eax, 792				; 00000318H
	mov	ecx, DWORD PTR _PlayerID$[ebp]
	mov	edx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[ecx*4]
	mov	ecx, DWORD PTR _PerkID$[ebp]
	mov	eax, DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+780]
	mov	DWORD PTR [edx+ecx*8+136], eax

; 254  : 			PlayerPerkListNodes[PlayerID]->PlayerPerkList[PerkID].HasPerk = true;

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4]
	mov	edx, DWORD PTR _PerkID$[ebp]
	mov	BYTE PTR [ecx+edx*8+132], 1

; 255  : 			PlayerPerkListNodes[PlayerID]->UnlockedPerks++;

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4]
	mov	edx, DWORD PTR [ecx+128]
	add	edx, 1
	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4]
	mov	DWORD PTR [ecx+128], edx
	jmp	SHORT $LN2@IncreasePl
$LN7@IncreasePl:

; 256  : 		}
; 257  : 		else if (PlayerPerkListNodes[PlayerID]->PlayerPerkList[PerkID].PerkProgress > PerkSystemPerkTypeNodeList[PerkID].UnlockCost && PerkSystemPerkTypeNodeList[PerkID].ResetOnFail)

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4]
	mov	edx, DWORD PTR _PerkID$[ebp]
	imul	edx, 792				; 00000318H
	mov	eax, DWORD PTR _PerkID$[ebp]
	mov	ecx, DWORD PTR [ecx+eax*8+136]
	cmp	ecx, DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[edx+780]
	jbe	SHORT $LN2@IncreasePl
	mov	eax, DWORD PTR _PerkID$[ebp]
	imul	eax, 792				; 00000318H
	movzx	ecx, BYTE PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+785]
	test	ecx, ecx
	je	SHORT $LN2@IncreasePl

; 258  : 		{
; 259  : 			PlayerPerkListNodes[PlayerID]->PlayerPerkList[PerkID].PerkProgress = 0;

	mov	eax, DWORD PTR _PlayerID$[ebp]
	mov	ecx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4]
	mov	edx, DWORD PTR _PerkID$[ebp]
	mov	DWORD PTR [ecx+edx*8+136], 0

; 260  : 			return false;

	xor	al, al
	jmp	SHORT $LN21@IncreasePl
$LN2@IncreasePl:

; 261  : 		}
; 262  : 		return true;

	mov	al, 1
$LN21@IncreasePl:

; 263  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?IncreasePlayerPerkUnlockAmount@PlayerPerksNodeControlSystem@@QAE_NPAVScriptableGameObj@@HI@Z ENDP ; PlayerPerksNodeControlSystem::IncreasePlayerPerkUnlockAmount
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?FindPlayerPerkList@PlayerPerksNodeControlSystem@@QAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_PlayerName$ = -12					; size = 4
_PlayerID$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_DisplayMessage$ = 12					; size = 4
?FindPlayerPerkList@PlayerPerksNodeControlSystem@@QAEXPAVScriptableGameObj@@H@Z PROC ; PlayerPerksNodeControlSystem::FindPlayerPerkList, COMDAT
; _this$ = ecx

; 206  : 	{// Searches for the player's perk list, when it finds it it pulls it into the player ID if it isn't already, then it reloads the player's selected perks

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 		if (!Commands->Is_A_Star(obj))

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@FindPlayer

; 208  : 			return;

	jmp	SHORT $LN4@FindPlayer
$LN3@FindPlayer:

; 209  : 		int PlayerID = JmgUtility::JMG_Get_Player_ID(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?JMG_Get_Player_ID@JmgUtility@@SAJPAVScriptableGameObj@@@Z ; JmgUtility::JMG_Get_Player_ID
	add	esp, 4
	mov	DWORD PTR _PlayerID$[ebp], eax

; 210  : 		const char *PlayerName = Get_Player_Name(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Player_Name@@YAPBDPAVScriptableGameObj@@@Z ; Get_Player_Name
	add	esp, 4
	mov	DWORD PTR _PlayerName$[ebp], eax

; 211  : 		if (!PlayerPerkListNodes[PlayerID] || _stricmp(PlayerPerkListNodes[PlayerID]->PlayerName,PlayerName))

	mov	eax, DWORD PTR _PlayerID$[ebp]
	cmp	DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4], 0
	je	SHORT $LN1@FindPlayer
	mov	eax, DWORD PTR _PlayerName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _PlayerID$[ebp]
	mov	edx, DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[ecx*4]
	push	edx
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@FindPlayer
$LN1@FindPlayer:

; 212  : 			PlayerPerkListNodes[PlayerID] = GetPlayerPerkList(PlayerName);

	mov	eax, DWORD PTR _PlayerName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayerPerkList@PlayerPerksNodeControlSystem@@AAEPAUPlayerPerksDataNode@@PBD@Z ; PlayerPerksNodeControlSystem::GetPlayerPerkList
	mov	ecx, DWORD PTR _PlayerID$[ebp]
	mov	DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[ecx*4], eax
$LN4@FindPlayer:

; 213  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?FindPlayerPerkList@PlayerPerksNodeControlSystem@@QAEXPAVScriptableGameObj@@H@Z ENDP ; PlayerPerksNodeControlSystem::FindPlayerPerkList
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??0PlayerPerksNodeControlSystem@@QAE@XZ
_TEXT	SEGMENT
_x$1 = -8						; size = 4
_this$ = -4						; size = 4
??0PlayerPerksNodeControlSystem@@QAE@XZ PROC		; PlayerPerksNodeControlSystem::PlayerPerksNodeControlSystem, COMDAT
; _this$ = ecx

; 198  : 	PlayerPerksNodeControlSystem()

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 199  : 	{
; 200  : 		HasLoaded = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0

; 201  : 		for (int x = 0;x < 128;x++)

	mov	DWORD PTR _x$1[ebp], 0
	jmp	SHORT $LN3@PlayerPerk
$LN2@PlayerPerk:
	mov	eax, DWORD PTR _x$1[ebp]
	add	eax, 1
	mov	DWORD PTR _x$1[ebp], eax
$LN3@PlayerPerk:
	cmp	DWORD PTR _x$1[ebp], 128		; 00000080H
	jge	SHORT $LN1@PlayerPerk

; 202  : 			PlayerPerkListNodes[x] = NULL;

	mov	eax, DWORD PTR _x$1[ebp]
	mov	DWORD PTR ?PlayerPerkListNodes@@3PAPAUPlayerPerksDataNode@@A[eax*4], 0
	jmp	SHORT $LN2@PlayerPerk
$LN1@PlayerPerk:

; 203  : 		PlayerPerksDataNodeList = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 204  : 	};

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PlayerPerksNodeControlSystem@@QAE@XZ ENDP		; PlayerPerksNodeControlSystem::PlayerPerksNodeControlSystem
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?GetPlayerPerkList@PlayerPerksNodeControlSystem@@AAEPAUPlayerPerksDataNode@@PBD@Z
_TEXT	SEGMENT
tv158 = -2104						; size = 4
tv89 = -2104						; size = 4
tv160 = -2100						; size = 4
tv91 = -2100						; size = 4
$T1 = -2096						; size = 4
$T2 = -2092						; size = 4
_PPerkList$3 = -2024					; size = 1008
_Current$ = -1016					; size = 4
_PPerkList$4 = -1012					; size = 1008
_this$ = -4						; size = 4
_PlayerName$ = 8					; size = 4
?GetPlayerPerkList@PlayerPerksNodeControlSystem@@AAEPAUPlayerPerksDataNode@@PBD@Z PROC ; PlayerPerksNodeControlSystem::GetPlayerPerkList, COMDAT
; _this$ = ecx

; 154  : 	{// Used to find if a player's perk list already exists, if not it creates a new node for the player's name

	push	ebp
	mov	ebp, esp
	sub	esp, 2104				; 00000838H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 155  : 		if (!PlayerPerksDataNodeList)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	$LN5@GetPlayerP

; 156  : 		{
; 157  : 			PlayerPerkDataNode PPerkList[PERKCOUNT] = {PlayerPerkDataNode()};

	lea	ecx, DWORD PTR _PPerkList$4[ebp]
	call	??0PlayerPerkDataNode@@QAE@XZ		; PlayerPerkDataNode::PlayerPerkDataNode
	push	OFFSET ??0PlayerPerkDataNode@@QAE@XZ	; PlayerPerkDataNode::PlayerPerkDataNode
	push	125					; 0000007dH
	push	8
	lea	eax, DWORD PTR _PPerkList$4[ebp+8]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 158  : 			PlayerPerksDataNodeList = AddAPlayerPerkNode(new PlayerPerksDataNode,PlayerName,PPerkList);

	push	OFFSET ??_C@_0DA@DKJNKPNM@PlayerPerksNodeControlSystem?3?3Ge@
	push	158					; 0000009eH
	push	OFFSET ??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN11@GetPlayerP
	xor	ecx, ecx
	jne	SHORT $LN8@GetPlayerP
	push	158					; 0000009eH
	push	OFFSET ??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN8@GetPlayerP:
	mov	DWORD PTR tv91[ebp], 0
	jmp	SHORT $LN12@GetPlayerP
$LN11@GetPlayerP:
	push	1144					; 00000478H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN9@GetPlayerP
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0PlayerPerksDataNode@@QAE@XZ		; PlayerPerksDataNode::PlayerPerksDataNode
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN10@GetPlayerP
$LN9@GetPlayerP:
	mov	DWORD PTR tv89[ebp], 0
$LN10@GetPlayerP:
	mov	eax, DWORD PTR tv89[ebp]
	mov	DWORD PTR tv91[ebp], eax
$LN12@GetPlayerP:
	lea	ecx, DWORD PTR _PPerkList$4[ebp]
	push	ecx
	mov	edx, DWORD PTR _PlayerName$[ebp]
	push	edx
	mov	eax, DWORD PTR tv91[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddAPlayerPerkNode@PlayerPerksNodeControlSystem@@AAEPAUPlayerPerksDataNode@@PAU2@PBDQAUPlayerPerkDataNode@@@Z ; PlayerPerksNodeControlSystem::AddAPlayerPerkNode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 159  : 			return PlayerPerksDataNodeList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	jmp	$LN6@GetPlayerP
$LN5@GetPlayerP:

; 160  : 		}
; 161  : 		PlayerPerksDataNode *Current = PlayerPerksDataNodeList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _Current$[ebp], ecx
$LN4@GetPlayerP:

; 162  : 		while (Current)

	cmp	DWORD PTR _Current$[ebp], 0
	je	$LN3@GetPlayerP

; 163  : 		{
; 164  : 			if (!_stricmp(Current->PlayerName,PlayerName))

	mov	eax, DWORD PTR _PlayerName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Current$[ebp]
	push	ecx
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@GetPlayerP

; 165  : 				return Current;

	mov	eax, DWORD PTR _Current$[ebp]
	jmp	$LN6@GetPlayerP
$LN2@GetPlayerP:

; 166  : 			if (!Current->next)

	mov	eax, DWORD PTR _Current$[ebp]
	cmp	DWORD PTR [eax+1140], 0
	jne	$LN1@GetPlayerP

; 167  : 			{
; 168  : 				PlayerPerkDataNode PPerkList[PERKCOUNT] = {PlayerPerkDataNode()};

	lea	ecx, DWORD PTR _PPerkList$3[ebp]
	call	??0PlayerPerkDataNode@@QAE@XZ		; PlayerPerkDataNode::PlayerPerkDataNode
	push	OFFSET ??0PlayerPerkDataNode@@QAE@XZ	; PlayerPerkDataNode::PlayerPerkDataNode
	push	125					; 0000007dH
	push	8
	lea	eax, DWORD PTR _PPerkList$3[ebp+8]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 169  : 				Current->next = AddAPlayerPerkNode(new PlayerPerksDataNode,PlayerName,PPerkList);

	push	OFFSET ??_C@_0DA@DKJNKPNM@PlayerPerksNodeControlSystem?3?3Ge@
	push	169					; 000000a9H
	push	OFFSET ??_C@_0DK@NLOHEPBI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN16@GetPlayerP
	xor	ecx, ecx
	jne	SHORT $LN13@GetPlayerP
	push	169					; 000000a9H
	push	OFFSET ??_C@_1HE@CIFEPJDE@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN13@GetPlayerP:
	mov	DWORD PTR tv160[ebp], 0
	jmp	SHORT $LN17@GetPlayerP
$LN16@GetPlayerP:
	push	1144					; 00000478H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN14@GetPlayerP
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0PlayerPerksDataNode@@QAE@XZ		; PlayerPerksDataNode::PlayerPerksDataNode
	mov	DWORD PTR tv158[ebp], eax
	jmp	SHORT $LN15@GetPlayerP
$LN14@GetPlayerP:
	mov	DWORD PTR tv158[ebp], 0
$LN15@GetPlayerP:
	mov	eax, DWORD PTR tv158[ebp]
	mov	DWORD PTR tv160[ebp], eax
$LN17@GetPlayerP:
	lea	ecx, DWORD PTR _PPerkList$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _PlayerName$[ebp]
	push	edx
	mov	eax, DWORD PTR tv160[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddAPlayerPerkNode@PlayerPerksNodeControlSystem@@AAEPAUPlayerPerksDataNode@@PAU2@PBDQAUPlayerPerkDataNode@@@Z ; PlayerPerksNodeControlSystem::AddAPlayerPerkNode
	mov	ecx, DWORD PTR _Current$[ebp]
	mov	DWORD PTR [ecx+1140], eax

; 170  : 				return Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	eax, DWORD PTR [eax+1140]
	jmp	SHORT $LN6@GetPlayerP
$LN1@GetPlayerP:

; 171  : 			}
; 172  : 			Current = Current->next;

	mov	eax, DWORD PTR _Current$[ebp]
	mov	ecx, DWORD PTR [eax+1140]
	mov	DWORD PTR _Current$[ebp], ecx

; 173  : 		}

	jmp	$LN4@GetPlayerP
$LN3@GetPlayerP:

; 174  : 		return NULL;

	xor	eax, eax
$LN6@GetPlayerP:

; 175  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPlayerPerkList@PlayerPerksNodeControlSystem@@AAEPAUPlayerPerksDataNode@@PBD@Z ENDP ; PlayerPerksNodeControlSystem::GetPlayerPerkList
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?AddAPlayerPerkNode@PlayerPerksNodeControlSystem@@AAEPAUPlayerPerksDataNode@@PAU2@PBDQAUPlayerPerkDataNode@@@Z
_TEXT	SEGMENT
_x$1 = -8						; size = 4
_this$ = -4						; size = 4
_Node$ = 8						; size = 4
_PlayerName$ = 12					; size = 4
_PPerkList$ = 16					; size = 4
?AddAPlayerPerkNode@PlayerPerksNodeControlSystem@@AAEPAUPlayerPerksDataNode@@PAU2@PBDQAUPlayerPerkDataNode@@@Z PROC ; PlayerPerksNodeControlSystem::AddAPlayerPerkNode, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		sprintf(Node->PlayerName,"%s",PlayerName);

	mov	eax, DWORD PTR _PlayerName$[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	mov	ecx, DWORD PTR _Node$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 144  : 		for (int x = 0;x < PERKCOUNT;x++)

	mov	DWORD PTR _x$1[ebp], 0
	jmp	SHORT $LN3@AddAPlayer
$LN2@AddAPlayer:
	mov	eax, DWORD PTR _x$1[ebp]
	add	eax, 1
	mov	DWORD PTR _x$1[ebp], eax
$LN3@AddAPlayer:
	cmp	DWORD PTR _x$1[ebp], 126		; 0000007eH
	jge	SHORT $LN1@AddAPlayer

; 145  : 		{
; 146  : 			Node->PlayerPerkList[x].HasPerk = PPerkList[x].HasPerk;

	mov	eax, DWORD PTR _x$1[ebp]
	mov	ecx, DWORD PTR _Node$[ebp]
	mov	edx, DWORD PTR _x$1[ebp]
	mov	esi, DWORD PTR _PPerkList$[ebp]
	mov	dl, BYTE PTR [esi+edx*8]
	mov	BYTE PTR [ecx+eax*8+132], dl

; 147  : 			Node->PlayerPerkList[x].PerkProgress = PPerkList[x].PerkProgress;

	mov	eax, DWORD PTR _x$1[ebp]
	mov	ecx, DWORD PTR _Node$[ebp]
	mov	edx, DWORD PTR _x$1[ebp]
	mov	esi, DWORD PTR _PPerkList$[ebp]
	mov	edx, DWORD PTR [esi+edx*8+4]
	mov	DWORD PTR [ecx+eax*8+136], edx

; 148  : 		}

	jmp	SHORT $LN2@AddAPlayer
$LN1@AddAPlayer:

; 149  : 		Node->UnlockedPerks = 0;

	mov	eax, DWORD PTR _Node$[ebp]
	mov	DWORD PTR [eax+128], 0

; 150  : 		Node->next = NULL;

	mov	eax, DWORD PTR _Node$[ebp]
	mov	DWORD PTR [eax+1140], 0

; 151  : 		return Node;

	mov	eax, DWORD PTR _Node$[ebp]

; 152  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?AddAPlayerPerkNode@PlayerPerksNodeControlSystem@@AAEPAUPlayerPerksDataNode@@PAU2@PBDQAUPlayerPerkDataNode@@@Z ENDP ; PlayerPerksNodeControlSystem::AddAPlayerPerkNode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??0PlayerPerksDataNode@@QAE@XZ
_TEXT	SEGMENT
$T1 = -80						; size = 8
_x$2 = -8						; size = 4
_this$ = -4						; size = 4
??0PlayerPerksDataNode@@QAE@XZ PROC			; PlayerPerksDataNode::PlayerPerksDataNode, COMDAT
; _this$ = ecx

; 126  : 	PlayerPerksDataNode()

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0PlayerPerkDataNode@@QAE@XZ	; PlayerPerkDataNode::PlayerPerkDataNode
	push	126					; 0000007eH
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 132				; 00000084H
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 127  : 	{
; 128  : 		UnlockedPerks = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], 0

; 129  : 		for (int x = 0;x < PERKCOUNT;x++)

	mov	DWORD PTR _x$2[ebp], 0
	jmp	SHORT $LN3@PlayerPerk
$LN2@PlayerPerk:
	mov	eax, DWORD PTR _x$2[ebp]
	add	eax, 1
	mov	DWORD PTR _x$2[ebp], eax
$LN3@PlayerPerk:
	cmp	DWORD PTR _x$2[ebp], 126		; 0000007eH
	jge	SHORT $LN4@PlayerPerk

; 130  : 			PlayerPerkList[x] = PlayerPerkDataNode();

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0PlayerPerkDataNode@@QAE@XZ		; PlayerPerkDataNode::PlayerPerkDataNode
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _x$2[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	DWORD PTR [esi+eax*8+132], ecx
	mov	DWORD PTR [esi+eax*8+136], edx
	jmp	SHORT $LN2@PlayerPerk
$LN4@PlayerPerk:

; 131  : 	};

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PlayerPerksDataNode@@QAE@XZ ENDP			; PlayerPerksDataNode::PlayerPerksDataNode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??0PlayerPerkDataNode@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0PlayerPerkDataNode@@QAE@XZ PROC			; PlayerPerkDataNode::PlayerPerkDataNode, COMDAT
; _this$ = ecx

; 113  : 	PlayerPerkDataNode()

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 	{
; 115  : 		PerkProgress = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 116  : 		HasPerk = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0

; 117  : 	};

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PlayerPerkDataNode@@QAE@XZ ENDP			; PlayerPerkDataNode::PlayerPerkDataNode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?Finalize_Perks@PerkSystemPerkTypeList@@QAEXXZ
_TEXT	SEGMENT
tv81 = -76						; size = 4
_x$1 = -8						; size = 4
_this$ = -4						; size = 4
?Finalize_Perks@PerkSystemPerkTypeList@@QAEXXZ PROC	; PerkSystemPerkTypeList::Finalize_Perks, COMDAT
; _this$ = ecx

; 101  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 102  : 		for (int x = 0;x < PERKCOUNT;x++)

	mov	DWORD PTR _x$1[ebp], 0
	jmp	SHORT $LN3@Finalize_P
$LN2@Finalize_P:
	mov	eax, DWORD PTR _x$1[ebp]
	add	eax, 1
	mov	DWORD PTR _x$1[ebp], eax
$LN3@Finalize_P:
	cmp	DWORD PTR _x$1[ebp], 126		; 0000007eH
	jge	SHORT $LN4@Finalize_P

; 103  : 			PerkSystemPerkTypeNodeList[x].CategoryPerkID = (PerkTypeCategoryCounts[PerkSystemPerkTypeNodeList[x].Category] = (PerkTypeCategoryCounts[PerkSystemPerkTypeNodeList[x].Category]+1));

	mov	eax, DWORD PTR _x$1[ebp]
	imul	eax, 792				; 00000318H
	mov	ecx, DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	add	eax, 1
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR _x$1[ebp]
	imul	ecx, 792				; 00000318H
	mov	edx, DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
	mov	edx, DWORD PTR _x$1[ebp]
	imul	edx, 792				; 00000318H
	mov	eax, DWORD PTR tv81[ebp]
	mov	DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[edx+4], eax
	jmp	SHORT $LN2@Finalize_P
$LN4@Finalize_P:

; 104  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Finalize_Perks@PerkSystemPerkTypeList@@QAEXXZ ENDP	; PerkSystemPerkTypeList::Finalize_Perks
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?Clean_Up@PerkSystemPerkTypeList@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clean_Up@PerkSystemPerkTypeList@@QAEXXZ PROC		; PerkSystemPerkTypeList::Clean_Up, COMDAT
; _this$ = ecx

; 97   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 98   : 		Reset();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@PerkSystemPerkTypeList@@AAEXXZ	; PerkSystemPerkTypeList::Reset

; 99   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Clean_Up@PerkSystemPerkTypeList@@QAEXXZ ENDP		; PerkSystemPerkTypeList::Clean_Up
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?AddAPerkType@PerkSystemPerkTypeList@@QAEXHPBDI_N11W4PerkTypeCategories@@H0@Z
_TEXT	SEGMENT
_errormsg$1 = -224					; size = 220
_this$ = -4						; size = 4
_PerkID$ = 8						; size = 4
_Name$ = 12						; size = 4
_UnlockCost$ = 16					; size = 4
_MultiplyUnlockCost$ = 20				; size = 1
_ResetOnFail$ = 24					; size = 1
_RequiresOrder$ = 28					; size = 1
_Category$ = 32						; size = 4
_MaxPerkUse$ = 36					; size = 4
_Description$ = 40					; size = 4
?AddAPerkType@PerkSystemPerkTypeList@@QAEXHPBDI_N11W4PerkTypeCategories@@H0@Z PROC ; PerkSystemPerkTypeList::AddAPerkType, COMDAT
; _this$ = ecx

; 77   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 78   : 		if (PerkSystemPerkTypeNodeList[PerkID].Category != INVALID)

	mov	eax, DWORD PTR _PerkID$[ebp]
	imul	eax, 792				; 00000318H
	cmp	DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+8], -1
	je	SHORT $LN1@AddAPerkTy

; 79   : 		{
; 80   : 			char errormsg[220];
; 81   : 			sprintf(errormsg,"msg ADDAPERKTYPE ERROR: PerkID %d has already been assigned!",PerkID);

	mov	eax, DWORD PTR _PerkID$[ebp]
	push	eax
	push	OFFSET ??_C@_0DN@MJNPAGNN@msg?5ADDAPERKTYPE?5ERROR?3?5PerkID?5?$CF@
	lea	ecx, DWORD PTR _errormsg$1[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 82   : 			Console_Input(errormsg);

	lea	eax, DWORD PTR _errormsg$1[ebp]
	push	eax
	call	?Console_Input@@YAXPBD@Z		; Console_Input
	add	esp, 4

; 83   : 			Commands->Create_2D_WAV_Sound("yo1.wav");

	push	OFFSET ??_C@_07CDHDDEAO@yo1?4wav?$AA@
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+180]
	call	ecx
	add	esp, 4
$LN1@AddAPerkTy:

; 84   : 		}
; 85   : 		USEABLEPERKCOUNT++;

	mov	eax, DWORD PTR ?USEABLEPERKCOUNT@PerkSystemPerkTypeList@@2HA ; PerkSystemPerkTypeList::USEABLEPERKCOUNT
	add	eax, 1
	mov	DWORD PTR ?USEABLEPERKCOUNT@PerkSystemPerkTypeList@@2HA, eax ; PerkSystemPerkTypeList::USEABLEPERKCOUNT

; 86   : 		PerkSystemPerkTypeNodeList[PerkID].PerkID = PerkID;

	mov	eax, DWORD PTR _PerkID$[ebp]
	imul	eax, 792				; 00000318H
	mov	ecx, DWORD PTR _PerkID$[ebp]
	mov	DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax], ecx

; 87   : 		sprintf(PerkSystemPerkTypeNodeList[PerkID].Name,"%s",Name);

	mov	eax, DWORD PTR _Name$[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	mov	ecx, DWORD PTR _PerkID$[ebp]
	imul	ecx, 792				; 00000318H
	add	ecx, OFFSET ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A+12
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 88   : 		PerkSystemPerkTypeNodeList[PerkID].AddDescription(Description);

	mov	eax, DWORD PTR _Description$[ebp]
	push	eax
	mov	ecx, DWORD PTR _PerkID$[ebp]
	imul	ecx, 792				; 00000318H
	add	ecx, OFFSET ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A ; PerkSystemPerkTypeNodeList
	call	?AddDescription@PerkSystemPerkTypeNode@@QAEXPBD@Z ; PerkSystemPerkTypeNode::AddDescription

; 89   : 		PerkSystemPerkTypeNodeList[PerkID].UnlockCost = UnlockCost;

	mov	eax, DWORD PTR _PerkID$[ebp]
	imul	eax, 792				; 00000318H
	mov	ecx, DWORD PTR _UnlockCost$[ebp]
	mov	DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+780], ecx

; 90   : 		PerkSystemPerkTypeNodeList[PerkID].MultiplyUnlockCost = MultiplyUnlockCost;

	mov	eax, DWORD PTR _PerkID$[ebp]
	imul	eax, 792				; 00000318H
	mov	cl, BYTE PTR _MultiplyUnlockCost$[ebp]
	mov	BYTE PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+784], cl

; 91   : 		PerkSystemPerkTypeNodeList[PerkID].ResetOnFail = ResetOnFail;

	mov	eax, DWORD PTR _PerkID$[ebp]
	imul	eax, 792				; 00000318H
	mov	cl, BYTE PTR _ResetOnFail$[ebp]
	mov	BYTE PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+785], cl

; 92   : 		PerkSystemPerkTypeNodeList[PerkID].RequiresOrder = RequiresOrder;

	mov	eax, DWORD PTR _PerkID$[ebp]
	imul	eax, 792				; 00000318H
	mov	cl, BYTE PTR _RequiresOrder$[ebp]
	mov	BYTE PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+786], cl

; 93   : 		PerkSystemPerkTypeNodeList[PerkID].Category = Category;

	mov	eax, DWORD PTR _PerkID$[ebp]
	imul	eax, 792				; 00000318H
	mov	ecx, DWORD PTR _Category$[ebp]
	mov	DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+8], ecx

; 94   : 		PerkSystemPerkTypeNodeList[PerkID].MaxPerkUse = MaxPerkUse;

	mov	eax, DWORD PTR _PerkID$[ebp]
	imul	eax, 792				; 00000318H
	mov	ecx, DWORD PTR _MaxPerkUse$[ebp]
	mov	DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+788], ecx

; 95   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
?AddAPerkType@PerkSystemPerkTypeList@@QAEXHPBDI_N11W4PerkTypeCategories@@H0@Z ENDP ; PerkSystemPerkTypeList::AddAPerkType
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ??0PerkSystemPerkTypeList@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0PerkSystemPerkTypeList@@QAE@XZ PROC			; PerkSystemPerkTypeList::PerkSystemPerkTypeList, COMDAT
; _this$ = ecx

; 72   : 	PerkSystemPerkTypeList()

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 73   : 	{
; 74   : 		Reset();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@PerkSystemPerkTypeList@@AAEXXZ	; PerkSystemPerkTypeList::Reset

; 75   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PerkSystemPerkTypeList@@QAE@XZ ENDP			; PerkSystemPerkTypeList::PerkSystemPerkTypeList
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?Reset@PerkSystemPerkTypeList@@AAEXXZ
_TEXT	SEGMENT
_x$1 = -12						; size = 4
_x$2 = -8						; size = 4
_this$ = -4						; size = 4
?Reset@PerkSystemPerkTypeList@@AAEXXZ PROC		; PerkSystemPerkTypeList::Reset, COMDAT
; _this$ = ecx

; 62   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 63   : 		USEABLEPERKCOUNT = 0;

	mov	DWORD PTR ?USEABLEPERKCOUNT@PerkSystemPerkTypeList@@2HA, 0 ; PerkSystemPerkTypeList::USEABLEPERKCOUNT

; 64   : 		for (int x = 0;x < PERKCATEGORIES;x++)

	mov	DWORD PTR _x$2[ebp], 0
	jmp	SHORT $LN6@Reset
$LN5@Reset:
	mov	eax, DWORD PTR _x$2[ebp]
	add	eax, 1
	mov	DWORD PTR _x$2[ebp], eax
$LN6@Reset:
	cmp	DWORD PTR _x$2[ebp], 11			; 0000000bH
	jge	SHORT $LN4@Reset

; 65   : 			PerkTypeCategoryCounts[x] = 0;

	mov	eax, DWORD PTR _x$2[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4], 0
	jmp	SHORT $LN5@Reset
$LN4@Reset:

; 66   : 		for (int x = 0;x < PERKCOUNT;x++)

	mov	DWORD PTR _x$1[ebp], 0
	jmp	SHORT $LN3@Reset
$LN2@Reset:
	mov	eax, DWORD PTR _x$1[ebp]
	add	eax, 1
	mov	DWORD PTR _x$1[ebp], eax
$LN3@Reset:
	cmp	DWORD PTR _x$1[ebp], 126		; 0000007eH
	jge	SHORT $LN7@Reset

; 67   : 			PerkSystemPerkTypeNodeList[x].Category = INVALID;

	mov	eax, DWORD PTR _x$1[ebp]
	imul	eax, 792				; 00000318H
	mov	DWORD PTR ?PerkSystemPerkTypeNodeList@@3PAUPerkSystemPerkTypeNode@@A[eax+8], -1
	jmp	SHORT $LN2@Reset
$LN7@Reset:

; 68   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@PerkSystemPerkTypeList@@AAEXXZ ENDP		; PerkSystemPerkTypeList::Reset
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgrenetbuster.h
;	COMDAT ?AddDescription@PerkSystemPerkTypeNode@@QAEXPBD@Z
_TEXT	SEGMENT
tv66 = -596						; size = 4
tv84 = -589						; size = 1
tv81 = -588						; size = 4
tv78 = -584						; size = 4
_msg$1 = -516						; size = 512
_this$ = -4						; size = 4
_String$ = 8						; size = 4
?AddDescription@PerkSystemPerkTypeNode@@QAEXPBD@Z PROC	; PerkSystemPerkTypeNode::AddDescription, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 596				; 00000254H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 45   : 		if (strlen(String) <= 256)

	mov	eax, DWORD PTR _String$[ebp]
	mov	DWORD PTR tv78[ebp], eax
	mov	ecx, DWORD PTR tv78[ebp]
	add	ecx, 1
	mov	DWORD PTR tv81[ebp], ecx
$LL5@AddDescrip:
	mov	edx, DWORD PTR tv78[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv84[ebp], al
	add	DWORD PTR tv78[ebp], 1
	cmp	BYTE PTR tv84[ebp], 0
	jne	SHORT $LL5@AddDescrip
	mov	ecx, DWORD PTR tv78[ebp]
	sub	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR tv66[ebp], ecx
	cmp	DWORD PTR tv66[ebp], 256		; 00000100H
	ja	SHORT $LN2@AddDescrip

; 46   : 			sprintf(Description,"%s",String);

	mov	eax, DWORD PTR _String$[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 268				; 0000010cH
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 47   : 		else

	jmp	SHORT $LN3@AddDescrip
$LN2@AddDescrip:

; 48   : 		{
; 49   : 			char msg[512];
; 50   : 			sprintf(msg,"msg Perk %d's Description is too long!",PerkID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0CH@JGBJBMDP@msg?5Perk?5?$CFd?8s?5Description?5is?5too@
	lea	edx, DWORD PTR _msg$1[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 51   : 			Console_Input(msg);

	lea	eax, DWORD PTR _msg$1[ebp]
	push	eax
	call	?Console_Input@@YAXPBD@Z		; Console_Input
	add	esp, 4
$LN3@AddDescrip:

; 52   : 		}
; 53   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?AddDescription@PerkSystemPerkTypeNode@@QAEXPBD@Z ENDP	; PerkSystemPerkTypeNode::AddDescription
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgutility.h
;	COMDAT ?DegreeDiff@JmgUtility@@SA_NMMM@Z
_TEXT	SEGMENT
tv87 = -68						; size = 4
tv79 = -68						; size = 4
_Deg1$ = 8						; size = 4
_Deg2$ = 12						; size = 4
_MaxDiff$ = 16						; size = 4
?DegreeDiff@JmgUtility@@SA_NMMM@Z PROC			; JmgUtility::DegreeDiff, COMDAT

; 829  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 830  : 		if (abs(Deg1-Deg2) <= MaxDiff)

	movss	xmm0, DWORD PTR _Deg1$[ebp]
	subss	xmm0, DWORD PTR _Deg2$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?abs@@YAMM@Z				; abs
	add	esp, 4
	fstp	DWORD PTR tv79[ebp]
	movss	xmm0, DWORD PTR _MaxDiff$[ebp]
	comiss	xmm0, DWORD PTR tv79[ebp]
	jb	SHORT $LN2@DegreeDiff

; 831  : 			return true;

	mov	al, 1
	jmp	SHORT $LN3@DegreeDiff
$LN2@DegreeDiff:

; 832  : 		if (360-abs(Deg1-Deg2) <= MaxDiff)

	movss	xmm0, DWORD PTR _Deg1$[ebp]
	subss	xmm0, DWORD PTR _Deg2$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?abs@@YAMM@Z				; abs
	add	esp, 4
	fstp	DWORD PTR tv87[ebp]
	movss	xmm0, DWORD PTR __real@43b40000
	subss	xmm0, DWORD PTR tv87[ebp]
	movss	xmm1, DWORD PTR _MaxDiff$[ebp]
	comiss	xmm1, xmm0
	jb	SHORT $LN1@DegreeDiff

; 833  : 			return true;

	mov	al, 1
	jmp	SHORT $LN3@DegreeDiff
$LN1@DegreeDiff:

; 834  : 		return false;

	xor	al, al
$LN3@DegreeDiff:

; 835  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?DegreeDiff@JmgUtility@@SA_NMMM@Z ENDP			; JmgUtility::DegreeDiff
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgutility.h
;	COMDAT ?MathClampDegrees@JmgUtility@@SAMM@Z
_TEXT	SEGMENT
tv77 = -68						; size = 4
tv72 = -68						; size = 4
_Value$ = 8						; size = 4
?MathClampDegrees@JmgUtility@@SAMM@Z PROC		; JmgUtility::MathClampDegrees, COMDAT

; 778  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
$LN4@MathClampD:

; 779  : 		while (Value < -180.0f)

	movss	xmm0, DWORD PTR __real@c3340000
	comiss	xmm0, DWORD PTR _Value$[ebp]
	jbe	SHORT $LN3@MathClampD

; 780  : 			return Value+360.0f;

	movss	xmm0, DWORD PTR _Value$[ebp]
	addss	xmm0, DWORD PTR __real@43b40000
	movss	DWORD PTR tv72[ebp], xmm0
	fld	DWORD PTR tv72[ebp]
	jmp	SHORT $LN5@MathClampD
	jmp	SHORT $LN4@MathClampD
$LN3@MathClampD:

; 781  : 		while (Value > 180.0f)

	movss	xmm0, DWORD PTR _Value$[ebp]
	comiss	xmm0, DWORD PTR __real@43340000
	jbe	SHORT $LN1@MathClampD

; 782  : 			return Value-360.0f;

	movss	xmm0, DWORD PTR _Value$[ebp]
	subss	xmm0, DWORD PTR __real@43b40000
	movss	DWORD PTR tv77[ebp], xmm0
	fld	DWORD PTR tv77[ebp]
	jmp	SHORT $LN5@MathClampD
	jmp	SHORT $LN3@MathClampD
$LN1@MathClampD:

; 783  : 		return Value;

	fld	DWORD PTR _Value$[ebp]
$LN5@MathClampD:

; 784  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?MathClampDegrees@JmgUtility@@SAMM@Z ENDP		; JmgUtility::MathClampDegrees
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgutility.h
;	COMDAT ?Rp2Decrypt@JmgUtility@@SAPADPBDHH@Z
_TEXT	SEGMENT
tv66 = -96						; size = 4
tv138 = -89						; size = 1
tv135 = -88						; size = 4
tv132 = -84						; size = 4
_Temp$1 = -16						; size = 4
_CurrentAdd$ = -12					; size = 4
_x$ = -8						; size = 4
_loops$ = -4						; size = 4
_String$ = 8						; size = 4
_EncryptionFactor$ = 12					; size = 4
_Start$ = 16						; size = 4
?Rp2Decrypt@JmgUtility@@SAPADPBDHH@Z PROC		; JmgUtility::Rp2Decrypt, COMDAT

; 731  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi

; 732  : 		static char FinalString[65536];
; 733  : 		int loops = strlen(String),x = 0;

	mov	eax, DWORD PTR _String$[ebp]
	mov	DWORD PTR tv132[ebp], eax
	mov	ecx, DWORD PTR tv132[ebp]
	add	ecx, 1
	mov	DWORD PTR tv135[ebp], ecx
$LL12@Rp2Decrypt:
	mov	edx, DWORD PTR tv132[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv138[ebp], al
	add	DWORD PTR tv132[ebp], 1
	cmp	BYTE PTR tv138[ebp], 0
	jne	SHORT $LL12@Rp2Decrypt
	mov	ecx, DWORD PTR tv132[ebp]
	sub	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR tv66[ebp], ecx
	mov	edx, DWORD PTR tv66[ebp]
	mov	DWORD PTR _loops$[ebp], edx
	mov	DWORD PTR _x$[ebp], 0

; 734  : 		int CurrentAdd = Start;

	mov	eax, DWORD PTR _Start$[ebp]
	mov	DWORD PTR _CurrentAdd$[ebp], eax
$LN9@Rp2Decrypt:

; 735  : 		while (x < loops)

	mov	eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR _loops$[ebp]
	jge	$LN8@Rp2Decrypt

; 736  : 		{
; 737  : 			if (String[x] > 31 && String[x] < 127)

	mov	eax, DWORD PTR _String$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 31					; 0000001fH
	jle	SHORT $LN7@Rp2Decrypt
	mov	eax, DWORD PTR _String$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 127				; 0000007fH
	jge	SHORT $LN7@Rp2Decrypt

; 738  : 			{
; 739  : 				int Temp = String[x]-CurrentAdd;

	mov	eax, DWORD PTR _String$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	movsx	ecx, BYTE PTR [eax]
	sub	ecx, DWORD PTR _CurrentAdd$[ebp]
	mov	DWORD PTR _Temp$1[ebp], ecx
$LN6@Rp2Decrypt:

; 740  : 				while (!(Temp > 31))

	cmp	DWORD PTR _Temp$1[ebp], 31		; 0000001fH
	jg	SHORT $LN5@Rp2Decrypt

; 741  : 					Temp += 95;

	mov	eax, DWORD PTR _Temp$1[ebp]
	add	eax, 95					; 0000005fH
	mov	DWORD PTR _Temp$1[ebp], eax
	jmp	SHORT $LN6@Rp2Decrypt
$LN5@Rp2Decrypt:

; 742  : 				FinalString[x] = (char)Temp;

	mov	eax, DWORD PTR _x$[ebp]
	mov	cl, BYTE PTR _Temp$1[ebp]
	mov	BYTE PTR ?FinalString@?1??Rp2Decrypt@JmgUtility@@SAPADPBDHH@Z@4PADA[eax], cl

; 743  : 			}
; 744  : 			else

	jmp	SHORT $LN4@Rp2Decrypt
$LN7@Rp2Decrypt:

; 745  : 				if (String[x] == '\n')

	mov	eax, DWORD PTR _String$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 10					; 0000000aH
	jne	SHORT $LN3@Rp2Decrypt

; 746  : 					FinalString[x] = '\0';

	mov	eax, DWORD PTR _x$[ebp]
	mov	BYTE PTR ?FinalString@?1??Rp2Decrypt@JmgUtility@@SAPADPBDHH@Z@4PADA[eax], 0

; 747  : 				else

	jmp	SHORT $LN4@Rp2Decrypt
$LN3@Rp2Decrypt:

; 748  : 					FinalString[x] = String[x];

	mov	eax, DWORD PTR _String$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR ?FinalString@?1??Rp2Decrypt@JmgUtility@@SAPADPBDHH@Z@4PADA[ecx], dl
$LN4@Rp2Decrypt:

; 749  : 			x++;

	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax

; 750  : 			CurrentAdd++;

	mov	eax, DWORD PTR _CurrentAdd$[ebp]
	add	eax, 1
	mov	DWORD PTR _CurrentAdd$[ebp], eax

; 751  : 			if (CurrentAdd > EncryptionFactor)

	mov	eax, DWORD PTR _CurrentAdd$[ebp]
	cmp	eax, DWORD PTR _EncryptionFactor$[ebp]
	jle	SHORT $LN1@Rp2Decrypt

; 752  : 				CurrentAdd = 1;

	mov	DWORD PTR _CurrentAdd$[ebp], 1
$LN1@Rp2Decrypt:

; 753  : 			FinalString[x] = '\0';

	mov	eax, DWORD PTR _x$[ebp]
	mov	BYTE PTR ?FinalString@?1??Rp2Decrypt@JmgUtility@@SAPADPBDHH@Z@4PADA[eax], 0

; 754  : 		}

	jmp	$LN9@Rp2Decrypt
$LN8@Rp2Decrypt:

; 755  : 		return FinalString;

	mov	eax, OFFSET ?FinalString@?1??Rp2Decrypt@JmgUtility@@SAPADPBDHH@Z@4PADA ; `JmgUtility::Rp2Decrypt'::`2'::FinalString

; 756  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Rp2Decrypt@JmgUtility@@SAPADPBDHH@Z ENDP		; JmgUtility::Rp2Decrypt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgutility.h
;	COMDAT ?Rp2Encrypt2@JmgUtility@@SAPADPBDHH@Z
_TEXT	SEGMENT
tv68 = -96						; size = 4
tv134 = -89						; size = 1
tv131 = -88						; size = 4
tv128 = -84						; size = 4
_Temp$1 = -16						; size = 4
_CurrentAdd$ = -12					; size = 4
_x$ = -8						; size = 4
_loops$ = -4						; size = 4
_String$ = 8						; size = 4
_EncryptionFactor$ = 12					; size = 4
_Start$ = 16						; size = 4
?Rp2Encrypt2@JmgUtility@@SAPADPBDHH@Z PROC		; JmgUtility::Rp2Encrypt2, COMDAT

; 656  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi

; 657  : 		static char FinalString[65536];
; 658  : 		sprintf(FinalString," ");

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	OFFSET ?FinalString@?1??Rp2Encrypt2@JmgUtility@@SAPADPBDHH@Z@4PADA ; `JmgUtility::Rp2Encrypt2'::`2'::FinalString
	call	DWORD PTR __imp__sprintf
	add	esp, 8

; 659  : 		int loops = strlen(String),x = 0;

	mov	eax, DWORD PTR _String$[ebp]
	mov	DWORD PTR tv128[ebp], eax
	mov	ecx, DWORD PTR tv128[ebp]
	add	ecx, 1
	mov	DWORD PTR tv131[ebp], ecx
$LL10@Rp2Encrypt:
	mov	edx, DWORD PTR tv128[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv134[ebp], al
	add	DWORD PTR tv128[ebp], 1
	cmp	BYTE PTR tv134[ebp], 0
	jne	SHORT $LL10@Rp2Encrypt
	mov	ecx, DWORD PTR tv128[ebp]
	sub	ecx, DWORD PTR tv131[ebp]
	mov	DWORD PTR tv68[ebp], ecx
	mov	edx, DWORD PTR tv68[ebp]
	mov	DWORD PTR _loops$[ebp], edx
	mov	DWORD PTR _x$[ebp], 0

; 660  : 		int CurrentAdd = Start;

	mov	eax, DWORD PTR _Start$[ebp]
	mov	DWORD PTR _CurrentAdd$[ebp], eax
$LN7@Rp2Encrypt:

; 661  : 		while (x < loops)

	mov	eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR _loops$[ebp]
	jge	$LN6@Rp2Encrypt

; 662  : 		{
; 663  : 			if (String[x] > 31 && String[x] < 127)

	mov	eax, DWORD PTR _String$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 31					; 0000001fH
	jle	SHORT $LN5@Rp2Encrypt
	mov	eax, DWORD PTR _String$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 127				; 0000007fH
	jge	SHORT $LN5@Rp2Encrypt

; 664  : 			{
; 665  : 				int Temp = (String[x]+CurrentAdd);

	mov	eax, DWORD PTR _String$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	movsx	ecx, BYTE PTR [eax]
	add	ecx, DWORD PTR _CurrentAdd$[ebp]
	mov	DWORD PTR _Temp$1[ebp], ecx
$LN4@Rp2Encrypt:

; 666  : 				while (Temp > 126)

	cmp	DWORD PTR _Temp$1[ebp], 126		; 0000007eH
	jle	SHORT $LN3@Rp2Encrypt

; 667  : 					Temp -= 95;

	mov	eax, DWORD PTR _Temp$1[ebp]
	sub	eax, 95					; 0000005fH
	mov	DWORD PTR _Temp$1[ebp], eax
	jmp	SHORT $LN4@Rp2Encrypt
$LN3@Rp2Encrypt:

; 668  : 				FinalString[x] = (char)Temp;

	mov	eax, DWORD PTR _x$[ebp]
	mov	cl, BYTE PTR _Temp$1[ebp]
	mov	BYTE PTR ?FinalString@?1??Rp2Encrypt2@JmgUtility@@SAPADPBDHH@Z@4PADA[eax], cl

; 669  : 			}
; 670  : 			else

	jmp	SHORT $LN2@Rp2Encrypt
$LN5@Rp2Encrypt:

; 671  : 				FinalString[x] = String[x];

	mov	eax, DWORD PTR _String$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR ?FinalString@?1??Rp2Encrypt2@JmgUtility@@SAPADPBDHH@Z@4PADA[ecx], dl
$LN2@Rp2Encrypt:

; 672  : 			x++;

	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax

; 673  : 			CurrentAdd++;

	mov	eax, DWORD PTR _CurrentAdd$[ebp]
	add	eax, 1
	mov	DWORD PTR _CurrentAdd$[ebp], eax

; 674  : 			if (CurrentAdd > EncryptionFactor)

	mov	eax, DWORD PTR _CurrentAdd$[ebp]
	cmp	eax, DWORD PTR _EncryptionFactor$[ebp]
	jle	SHORT $LN1@Rp2Encrypt

; 675  : 				CurrentAdd = 1;

	mov	DWORD PTR _CurrentAdd$[ebp], 1
$LN1@Rp2Encrypt:

; 676  : 			FinalString[x] = '\0';

	mov	eax, DWORD PTR _x$[ebp]
	mov	BYTE PTR ?FinalString@?1??Rp2Encrypt2@JmgUtility@@SAPADPBDHH@Z@4PADA[eax], 0

; 677  : 		}

	jmp	$LN7@Rp2Encrypt
$LN6@Rp2Encrypt:

; 678  : 		return FinalString;

	mov	eax, OFFSET ?FinalString@?1??Rp2Encrypt2@JmgUtility@@SAPADPBDHH@Z@4PADA ; `JmgUtility::Rp2Encrypt2'::`2'::FinalString

; 679  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Rp2Encrypt2@JmgUtility@@SAPADPBDHH@Z ENDP		; JmgUtility::Rp2Encrypt2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgutility.h
;	COMDAT ?Rp2Encrypt@JmgUtility@@SAPADPBDHH@Z
_TEXT	SEGMENT
tv68 = -96						; size = 4
tv134 = -89						; size = 1
tv131 = -88						; size = 4
tv128 = -84						; size = 4
_Temp$1 = -16						; size = 4
_CurrentAdd$ = -12					; size = 4
_x$ = -8						; size = 4
_loops$ = -4						; size = 4
_String$ = 8						; size = 4
_EncryptionFactor$ = 12					; size = 4
_Start$ = 16						; size = 4
?Rp2Encrypt@JmgUtility@@SAPADPBDHH@Z PROC		; JmgUtility::Rp2Encrypt, COMDAT

; 631  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi

; 632  : 		static char FinalString[65536];
; 633  : 		sprintf(FinalString," ");

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	OFFSET ?FinalString@?1??Rp2Encrypt@JmgUtility@@SAPADPBDHH@Z@4PADA ; `JmgUtility::Rp2Encrypt'::`2'::FinalString
	call	DWORD PTR __imp__sprintf
	add	esp, 8

; 634  : 		int loops = strlen(String),x = 0;

	mov	eax, DWORD PTR _String$[ebp]
	mov	DWORD PTR tv128[ebp], eax
	mov	ecx, DWORD PTR tv128[ebp]
	add	ecx, 1
	mov	DWORD PTR tv131[ebp], ecx
$LL10@Rp2Encrypt:
	mov	edx, DWORD PTR tv128[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv134[ebp], al
	add	DWORD PTR tv128[ebp], 1
	cmp	BYTE PTR tv134[ebp], 0
	jne	SHORT $LL10@Rp2Encrypt
	mov	ecx, DWORD PTR tv128[ebp]
	sub	ecx, DWORD PTR tv131[ebp]
	mov	DWORD PTR tv68[ebp], ecx
	mov	edx, DWORD PTR tv68[ebp]
	mov	DWORD PTR _loops$[ebp], edx
	mov	DWORD PTR _x$[ebp], 0

; 635  : 		int CurrentAdd = Start;

	mov	eax, DWORD PTR _Start$[ebp]
	mov	DWORD PTR _CurrentAdd$[ebp], eax
$LN7@Rp2Encrypt:

; 636  : 		while (x < loops)

	mov	eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR _loops$[ebp]
	jge	$LN6@Rp2Encrypt

; 637  : 		{
; 638  : 			if (String[x] > 31 && String[x] < 127)

	mov	eax, DWORD PTR _String$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 31					; 0000001fH
	jle	SHORT $LN5@Rp2Encrypt
	mov	eax, DWORD PTR _String$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 127				; 0000007fH
	jge	SHORT $LN5@Rp2Encrypt

; 639  : 			{
; 640  : 				int Temp = (String[x]+CurrentAdd);

	mov	eax, DWORD PTR _String$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	movsx	ecx, BYTE PTR [eax]
	add	ecx, DWORD PTR _CurrentAdd$[ebp]
	mov	DWORD PTR _Temp$1[ebp], ecx
$LN4@Rp2Encrypt:

; 641  : 				while (Temp > 126)

	cmp	DWORD PTR _Temp$1[ebp], 126		; 0000007eH
	jle	SHORT $LN3@Rp2Encrypt

; 642  : 					Temp -= 95;

	mov	eax, DWORD PTR _Temp$1[ebp]
	sub	eax, 95					; 0000005fH
	mov	DWORD PTR _Temp$1[ebp], eax
	jmp	SHORT $LN4@Rp2Encrypt
$LN3@Rp2Encrypt:

; 643  : 				FinalString[x] = (char)Temp;

	mov	eax, DWORD PTR _x$[ebp]
	mov	cl, BYTE PTR _Temp$1[ebp]
	mov	BYTE PTR ?FinalString@?1??Rp2Encrypt@JmgUtility@@SAPADPBDHH@Z@4PADA[eax], cl

; 644  : 			}
; 645  : 			else

	jmp	SHORT $LN2@Rp2Encrypt
$LN5@Rp2Encrypt:

; 646  : 				FinalString[x] = String[x];

	mov	eax, DWORD PTR _String$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR ?FinalString@?1??Rp2Encrypt@JmgUtility@@SAPADPBDHH@Z@4PADA[ecx], dl
$LN2@Rp2Encrypt:

; 647  : 			x++;

	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax

; 648  : 			CurrentAdd++;

	mov	eax, DWORD PTR _CurrentAdd$[ebp]
	add	eax, 1
	mov	DWORD PTR _CurrentAdd$[ebp], eax

; 649  : 			if (CurrentAdd > EncryptionFactor)

	mov	eax, DWORD PTR _CurrentAdd$[ebp]
	cmp	eax, DWORD PTR _EncryptionFactor$[ebp]
	jle	SHORT $LN1@Rp2Encrypt

; 650  : 				CurrentAdd = 1;

	mov	DWORD PTR _CurrentAdd$[ebp], 1
$LN1@Rp2Encrypt:

; 651  : 			FinalString[x] = '\0';

	mov	eax, DWORD PTR _x$[ebp]
	mov	BYTE PTR ?FinalString@?1??Rp2Encrypt@JmgUtility@@SAPADPBDHH@Z@4PADA[eax], 0

; 652  : 		}

	jmp	$LN7@Rp2Encrypt
$LN6@Rp2Encrypt:

; 653  : 		return FinalString;

	mov	eax, OFFSET ?FinalString@?1??Rp2Encrypt@JmgUtility@@SAPADPBDHH@Z@4PADA ; `JmgUtility::Rp2Encrypt'::`2'::FinalString

; 654  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Rp2Encrypt@JmgUtility@@SAPADPBDHH@Z ENDP		; JmgUtility::Rp2Encrypt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgutility.h
;	COMDAT ?MessageAllPlayers@JmgUtility@@SAXHHHPBD@Z
_TEXT	SEGMENT
_Player$1 = -8						; size = 4
_x$2 = -4						; size = 4
_Red$ = 8						; size = 4
_Green$ = 12						; size = 4
_Blue$ = 16						; size = 4
_MSG$ = 20						; size = 4
?MessageAllPlayers@JmgUtility@@SAXHHHPBD@Z PROC		; JmgUtility::MessageAllPlayers, COMDAT

; 573  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 574  : 		for (int x = 0;x < 128;x++)

	mov	DWORD PTR _x$2[ebp], 0
	jmp	SHORT $LN4@MessageAll
$LN3@MessageAll:
	mov	eax, DWORD PTR _x$2[ebp]
	add	eax, 1
	mov	DWORD PTR _x$2[ebp], eax
$LN4@MessageAll:
	cmp	DWORD PTR _x$2[ebp], 128		; 00000080H
	jge	SHORT $LN5@MessageAll

; 575  : 		{
; 576  : 			GameObject *Player = Get_GameObj(x);

	mov	eax, DWORD PTR _x$2[ebp]
	push	eax
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	mov	DWORD PTR _Player$1[ebp], eax

; 577  : 			if (!Player)

	cmp	DWORD PTR _Player$1[ebp], 0
	jne	SHORT $LN1@MessageAll

; 578  : 				continue;

	jmp	SHORT $LN3@MessageAll
$LN1@MessageAll:

; 579  : 			DisplayChatMessage(Player,Red,Green,Blue,MSG);

	mov	eax, DWORD PTR _MSG$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Blue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Green$[ebp]
	push	edx
	mov	eax, DWORD PTR _Red$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Player$1[ebp]
	push	ecx
	call	?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ; JmgUtility::DisplayChatMessage
	add	esp, 20					; 00000014H

; 580  : 		}

	jmp	SHORT $LN3@MessageAll
$LN5@MessageAll:

; 581  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?MessageAllPlayers@JmgUtility@@SAXHHHPBD@Z ENDP		; JmgUtility::MessageAllPlayers
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgutility.h
;	COMDAT ?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z
_TEXT	SEGMENT
tv67 = -320						; size = 4
tv95 = -313						; size = 1
tv92 = -312						; size = 4
tv89 = -308						; size = 4
_msg$ = -240						; size = 230
_x$ = -8						; size = 4
_Strlen$ = -4						; size = 4
_obj$ = 8						; size = 4
_Red$ = 12						; size = 4
_Green$ = 16						; size = 4
_Blue$ = 20						; size = 4
_Message$ = 24						; size = 4
?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z PROC ; JmgUtility::DisplayChatMessage, COMDAT

; 556  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 320				; 00000140H
	push	ebx
	push	esi
	push	edi

; 557  : 		if (!obj)

	cmp	DWORD PTR _obj$[ebp], 0
	jne	SHORT $LN5@DisplayCha

; 558  : 			return;

	jmp	$LN6@DisplayCha
$LN5@DisplayCha:

; 559  : 		int Strlen = strlen(Message);

	mov	eax, DWORD PTR _Message$[ebp]
	mov	DWORD PTR tv89[ebp], eax
	mov	ecx, DWORD PTR tv89[ebp]
	add	ecx, 1
	mov	DWORD PTR tv92[ebp], ecx
$LL8@DisplayCha:
	mov	edx, DWORD PTR tv89[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv95[ebp], al
	add	DWORD PTR tv89[ebp], 1
	cmp	BYTE PTR tv95[ebp], 0
	jne	SHORT $LL8@DisplayCha
	mov	ecx, DWORD PTR tv89[ebp]
	sub	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR tv67[ebp], ecx
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _Strlen$[ebp], edx

; 560  : 		if (Strlen < 220)

	cmp	DWORD PTR _Strlen$[ebp], 220		; 000000dcH
	jge	SHORT $LN4@DisplayCha

; 561  : 		{
; 562  : 			Send_Message_Player(obj,Red,Green,Blue,Message);

	mov	eax, DWORD PTR _Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Blue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Green$[ebp]
	push	edx
	mov	eax, DWORD PTR _Red$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	call	DWORD PTR ?Send_Message_Player@@3P6AXPAVScriptableGameObj@@IIIPBD@ZA ; Send_Message_Player
	add	esp, 20					; 00000014H

; 563  : 			return;

	jmp	SHORT $LN6@DisplayCha
$LN4@DisplayCha:

; 564  : 		}
; 565  : 		int x;
; 566  : 		char msg[230];
; 567  : 		for (x = 0;x < 220 && x < Strlen;x++)

	mov	DWORD PTR _x$[ebp], 0
	jmp	SHORT $LN3@DisplayCha
$LN2@DisplayCha:
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax
$LN3@DisplayCha:
	cmp	DWORD PTR _x$[ebp], 220			; 000000dcH
	jge	SHORT $LN1@DisplayCha
	mov	eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR _Strlen$[ebp]
	jge	SHORT $LN1@DisplayCha

; 568  : 			msg[x] = Message[x];

	mov	eax, DWORD PTR _Message$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR _msg$[ebp+ecx], dl
	jmp	SHORT $LN2@DisplayCha
$LN1@DisplayCha:

; 569  : 		msg[x] = '\0';

	mov	eax, DWORD PTR _x$[ebp]
	mov	BYTE PTR _msg$[ebp+eax], 0

; 570  : 		Send_Message_Player(obj,255,0,200,msg);

	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	push	200					; 000000c8H
	push	0
	push	255					; 000000ffH
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	call	DWORD PTR ?Send_Message_Player@@3P6AXPAVScriptableGameObj@@IIIPBD@ZA ; Send_Message_Player
	add	esp, 20					; 00000014H
$LN6@DisplayCha:

; 571  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?DisplayChatMessage@JmgUtility@@SAXPAVScriptableGameObj@@HHHPBD@Z ENDP ; JmgUtility::DisplayChatMessage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgutility.h
;	COMDAT ?MathClampInt@JmgUtility@@SAHHHH@Z
_TEXT	SEGMENT
_Value$ = 8						; size = 4
_Min$ = 12						; size = 4
_Max$ = 16						; size = 4
?MathClampInt@JmgUtility@@SAHHHH@Z PROC			; JmgUtility::MathClampInt, COMDAT

; 548  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 549  : 		if (Value > Max)

	mov	eax, DWORD PTR _Value$[ebp]
	cmp	eax, DWORD PTR _Max$[ebp]
	jle	SHORT $LN2@MathClampI

; 550  : 			return Max;

	mov	eax, DWORD PTR _Max$[ebp]
	jmp	SHORT $LN3@MathClampI
$LN2@MathClampI:

; 551  : 		if (Value < Min)

	mov	eax, DWORD PTR _Value$[ebp]
	cmp	eax, DWORD PTR _Min$[ebp]
	jge	SHORT $LN1@MathClampI

; 552  : 			return Min;

	mov	eax, DWORD PTR _Min$[ebp]
	jmp	SHORT $LN3@MathClampI
$LN1@MathClampI:

; 553  : 		return Value;

	mov	eax, DWORD PTR _Value$[ebp]
$LN3@MathClampI:

; 554  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?MathClampInt@JmgUtility@@SAHHHH@Z ENDP			; JmgUtility::MathClampInt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgutility.h
;	COMDAT ?MathClamp@JmgUtility@@SAMMMM@Z
_TEXT	SEGMENT
_Value$ = 8						; size = 4
_Min$ = 12						; size = 4
_Max$ = 16						; size = 4
?MathClamp@JmgUtility@@SAMMMM@Z PROC			; JmgUtility::MathClamp, COMDAT

; 532  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 533  : 		if (Value > Max)

	movss	xmm0, DWORD PTR _Value$[ebp]
	comiss	xmm0, DWORD PTR _Max$[ebp]
	jbe	SHORT $LN2@MathClamp

; 534  : 			return Max;

	fld	DWORD PTR _Max$[ebp]
	jmp	SHORT $LN3@MathClamp
$LN2@MathClamp:

; 535  : 		if (Value < Min)

	movss	xmm0, DWORD PTR _Min$[ebp]
	comiss	xmm0, DWORD PTR _Value$[ebp]
	jbe	SHORT $LN1@MathClamp

; 536  : 			return Min;

	fld	DWORD PTR _Min$[ebp]
	jmp	SHORT $LN3@MathClamp
$LN1@MathClamp:

; 537  : 		return Value;

	fld	DWORD PTR _Value$[ebp]
$LN3@MathClamp:

; 538  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?MathClamp@JmgUtility@@SAMMMM@Z ENDP			; JmgUtility::MathClamp
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgutility.h
;	COMDAT ?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z
_TEXT	SEGMENT
tv92 = -80						; size = 4
_DiffZ$ = -12						; size = 4
_DiffY$ = -8						; size = 4
_DiffX$ = -4						; size = 4
_Pos1$ = 8						; size = 4
_Pos2$ = 12						; size = 4
?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z PROC	; JmgUtility::SimpleDistance, COMDAT

; 519  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi

; 520  : 		float DiffX = Pos1.X-Pos2.X;

	mov	eax, DWORD PTR _Pos1$[ebp]
	mov	ecx, DWORD PTR _Pos2$[ebp]
	movss	xmm0, DWORD PTR [eax]
	subss	xmm0, DWORD PTR [ecx]
	movss	DWORD PTR _DiffX$[ebp], xmm0

; 521  : 		float DiffY = Pos1.Y-Pos2.Y;

	mov	eax, DWORD PTR _Pos1$[ebp]
	mov	ecx, DWORD PTR _Pos2$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	subss	xmm0, DWORD PTR [ecx+4]
	movss	DWORD PTR _DiffY$[ebp], xmm0

; 522  : 		float DiffZ = Pos1.Z-Pos2.Z;

	mov	eax, DWORD PTR _Pos1$[ebp]
	mov	ecx, DWORD PTR _Pos2$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	subss	xmm0, DWORD PTR [ecx+8]
	movss	DWORD PTR _DiffZ$[ebp], xmm0

; 523  : 		return (DiffX*DiffX+DiffY*DiffY+DiffZ*DiffZ);

	movss	xmm0, DWORD PTR _DiffX$[ebp]
	mulss	xmm0, DWORD PTR _DiffX$[ebp]
	movss	xmm1, DWORD PTR _DiffY$[ebp]
	mulss	xmm1, DWORD PTR _DiffY$[ebp]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR _DiffZ$[ebp]
	mulss	xmm1, DWORD PTR _DiffZ$[ebp]
	addss	xmm0, xmm1
	movss	DWORD PTR tv92[ebp], xmm0
	fld	DWORD PTR tv92[ebp]

; 524  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?SimpleDistance@JmgUtility@@SAMABVVector3@@0@Z ENDP	; JmgUtility::SimpleDistance
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgutility.h
;	COMDAT ?JMG_Get_Player_ID@JmgUtility@@SAJPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_o$ = -4						; size = 4
_obj$ = 8						; size = 4
?JMG_Get_Player_ID@JmgUtility@@SAJPAVScriptableGameObj@@@Z PROC ; JmgUtility::JMG_Get_Player_ID, COMDAT

; 493  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 494  : 		if (!obj)

	cmp	DWORD PTR _obj$[ebp], 0
	jne	SHORT $LN3@JMG_Get_Pl

; 495  : 			return 0;

	xor	eax, eax
	jmp	SHORT $LN4@JMG_Get_Pl
$LN3@JMG_Get_Pl:

; 496  : 		SoldierGameObj *o = obj->As_SoldierGameObj();

	mov	eax, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	mov	DWORD PTR _o$[ebp], eax

; 497  : 		if (!o)

	cmp	DWORD PTR _o$[ebp], 0
	jne	SHORT $LN2@JMG_Get_Pl

; 498  : 			return 0;

	xor	eax, eax
	jmp	SHORT $LN4@JMG_Get_Pl
$LN2@JMG_Get_Pl:

; 499  : 		if (!((cPlayer *)o->Get_Player_Data()))

	mov	ecx, DWORD PTR _o$[ebp]
	call	?Get_Player_Data@SmartGameObj@@QAEPAVPlayerDataClass@@XZ ; SmartGameObj::Get_Player_Data
	test	eax, eax
	jne	SHORT $LN1@JMG_Get_Pl

; 500  : 			return 0;

	xor	eax, eax
	jmp	SHORT $LN4@JMG_Get_Pl
$LN1@JMG_Get_Pl:

; 501  : 		return ((cPlayer *)o->Get_Player_Data())->Get_Id();

	mov	ecx, DWORD PTR _o$[ebp]
	call	?Get_Player_Data@SmartGameObj@@QAEPAVPlayerDataClass@@XZ ; SmartGameObj::Get_Player_Data
	mov	ecx, eax
	call	?Get_Id@cPlayer@@QBEHXZ			; cPlayer::Get_Id
$LN4@JMG_Get_Pl:

; 502  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?JMG_Get_Player_ID@JmgUtility@@SAJPAVScriptableGameObj@@@Z ENDP ; JmgUtility::JMG_Get_Player_ID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgutility.h
;	COMDAT ?JMG_Get_Sex@JmgUtility@@SADPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_TestID$ = -4						; size = 4
_obj$ = 8						; size = 4
?JMG_Get_Sex@JmgUtility@@SADPAVScriptableGameObj@@@Z PROC ; JmgUtility::JMG_Get_Sex, COMDAT

; 403  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 404  : 		int TestID = Commands->Get_ID(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _TestID$[ebp], eax

; 405  : 		if (!obj || !TestID)

	cmp	DWORD PTR _obj$[ebp], 0
	je	SHORT $LN4@JMG_Get_Se
	cmp	DWORD PTR _TestID$[ebp], 0
	jne	SHORT $LN5@JMG_Get_Se
$LN4@JMG_Get_Se:

; 406  : 			return '\0';

	xor	al, al
	jmp	SHORT $LN6@JMG_Get_Se
$LN5@JMG_Get_Se:

; 407  : 		if (!Get_Model(obj) || !_stricmp(Get_Model(obj),"null"))

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Model@@YAPBDPAVScriptableGameObj@@@Z ; Get_Model
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@JMG_Get_Se
	push	OFFSET ??_C@_04MLLLIHIP@null?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Model@@YAPBDPAVScriptableGameObj@@@Z ; Get_Model
	add	esp, 4
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@JMG_Get_Se
$LN2@JMG_Get_Se:

; 408  : 			return '\0';

	xor	al, al
	jmp	SHORT $LN6@JMG_Get_Se
$LN3@JMG_Get_Se:

; 409  : 		if (!Get_Sex(obj))

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Sex@@YADPAVScriptableGameObj@@@Z	; Get_Sex
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@JMG_Get_Se

; 410  : 			return '\0';

	xor	al, al
	jmp	SHORT $LN6@JMG_Get_Se
$LN1@JMG_Get_Se:

; 411  : 		return Get_Sex(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Sex@@YADPAVScriptableGameObj@@@Z	; Get_Sex
	add	esp, 4
$LN6@JMG_Get_Se:

; 412  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?JMG_Get_Sex@JmgUtility@@SADPAVScriptableGameObj@@@Z ENDP ; JmgUtility::JMG_Get_Sex
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\jmgutility.h
;	COMDAT ??0GenericDateTime@JmgUtility@@QAE@XZ
_TEXT	SEGMENT
_timeinfo$ = -16					; size = 4
_theTime$ = -12						; size = 8
_this$ = -4						; size = 4
??0GenericDateTime@JmgUtility@@QAE@XZ PROC		; JmgUtility::GenericDateTime::GenericDateTime, COMDAT
; _this$ = ecx

; 263  : 		GenericDateTime()

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 264  : 		{
; 265  : 			time_t theTime = time(0);

	push	0
	call	_time
	add	esp, 4
	mov	DWORD PTR _theTime$[ebp], eax
	mov	DWORD PTR _theTime$[ebp+4], edx

; 266  : 			struct tm *timeinfo;
; 267  : 			time(&theTime);

	lea	eax, DWORD PTR _theTime$[ebp]
	push	eax
	call	_time
	add	esp, 4

; 268  : 			timeinfo = localtime(&theTime);

	lea	eax, DWORD PTR _theTime$[ebp]
	push	eax
	call	_localtime
	add	esp, 4
	mov	DWORD PTR _timeinfo$[ebp], eax

; 269  : 			this->year = timeinfo->tm_year+1900;

	mov	eax, DWORD PTR _timeinfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1900				; 0000076cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 270  : 			this->month = timeinfo->tm_mon+1;

	mov	eax, DWORD PTR _timeinfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 271  : 			this->day = timeinfo->tm_mday;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _timeinfo$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+4], edx

; 272  : 			this->hour = timeinfo->tm_hour;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _timeinfo$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+12], edx

; 273  : 			this->minute = timeinfo->tm_min;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _timeinfo$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+16], edx

; 274  : 			this->second = timeinfo->tm_sec;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _timeinfo$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+20], edx

; 275  : 			this->lTime = (long)mktime(timeinfo);

	mov	eax, DWORD PTR _timeinfo$[ebp]
	push	eax
	call	_mktime
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 276  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0GenericDateTime@JmgUtility@@QAE@XZ ENDP		; JmgUtility::GenericDateTime::GenericDateTime
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\coltest.h
;	COMDAT ?Cull@OBBoxCollisionTestClass@@QAE_NABVVector3@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_min$ = 8						; size = 4
_max$ = 12						; size = 4
?Cull@OBBoxCollisionTestClass@@QAE_NABVVector3@@0@Z PROC ; OBBoxCollisionTestClass::Cull, COMDAT
; _this$ = ecx

; 148  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 149  : 	if ((SweepMin.X > max.X) || (SweepMax.X < min.X))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _max$[ebp]
	movss	xmm0, DWORD PTR [eax+84]
	comiss	xmm0, DWORD PTR [ecx]
	ja	SHORT $LN5@Cull
	mov	eax, DWORD PTR _min$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	comiss	xmm0, DWORD PTR [ecx+96]
	jbe	SHORT $LN6@Cull
$LN5@Cull:

; 150  : 	{
; 151  : 		return true;

	mov	al, 1
	jmp	SHORT $LN7@Cull
$LN6@Cull:

; 152  : 	}
; 153  : 	if ((SweepMin.Y > max.Y) || (SweepMax.Y < min.Y))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _max$[ebp]
	movss	xmm0, DWORD PTR [eax+88]
	comiss	xmm0, DWORD PTR [ecx+4]
	ja	SHORT $LN3@Cull
	mov	eax, DWORD PTR _min$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	comiss	xmm0, DWORD PTR [ecx+100]
	jbe	SHORT $LN4@Cull
$LN3@Cull:

; 154  : 	{
; 155  : 		return true;

	mov	al, 1
	jmp	SHORT $LN7@Cull
$LN4@Cull:

; 156  : 	}
; 157  : 	if ((SweepMin.Z > max.Z) || (SweepMax.Z < min.Z))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _max$[ebp]
	movss	xmm0, DWORD PTR [eax+92]
	comiss	xmm0, DWORD PTR [ecx+8]
	ja	SHORT $LN1@Cull
	mov	eax, DWORD PTR _min$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	comiss	xmm0, DWORD PTR [ecx+104]
	jbe	SHORT $LN2@Cull
$LN1@Cull:

; 158  : 	{
; 159  : 		return true;

	mov	al, 1
	jmp	SHORT $LN7@Cull
$LN2@Cull:

; 160  : 	}
; 161  : 	return false;

	xor	al, al
$LN7@Cull:

; 162  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Cull@OBBoxCollisionTestClass@@QAE_NABVVector3@@0@Z ENDP ; OBBoxCollisionTestClass::Cull
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\coltest.h
;	COMDAT ?Translate@AABoxCollisionTestClass@@QAEXABVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_translation$ = 8					; size = 4
?Translate@AABoxCollisionTestClass@@QAEXABVVector3@@@Z PROC ; AABoxCollisionTestClass::Translate, COMDAT
; _this$ = ecx

; 106  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 107  : 	Box.Center += translation;

	mov	eax, DWORD PTR _translation$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator+=

; 108  : 	SweepMin += translation;

	mov	eax, DWORD PTR _translation$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??YVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator+=

; 109  : 	SweepMax += translation;

	mov	eax, DWORD PTR _translation$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??YVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator+=

; 110  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Translate@AABoxCollisionTestClass@@QAEXABVVector3@@@Z ENDP ; AABoxCollisionTestClass::Translate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\coltest.h
;	COMDAT ?Cull@AABoxCollisionTestClass@@QAE_NABVVector3@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_min$ = 8						; size = 4
_max$ = 12						; size = 4
?Cull@AABoxCollisionTestClass@@QAE_NABVVector3@@0@Z PROC ; AABoxCollisionTestClass::Cull, COMDAT
; _this$ = ecx

; 113  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 	if ((SweepMin.X > max.X) || (SweepMax.X < min.X))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _max$[ebp]
	movss	xmm0, DWORD PTR [eax+48]
	comiss	xmm0, DWORD PTR [ecx]
	ja	SHORT $LN5@Cull
	mov	eax, DWORD PTR _min$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	comiss	xmm0, DWORD PTR [ecx+60]
	jbe	SHORT $LN6@Cull
$LN5@Cull:

; 115  : 	{
; 116  : 		return true;

	mov	al, 1
	jmp	SHORT $LN7@Cull
$LN6@Cull:

; 117  : 	}
; 118  : 	if ((SweepMin.Y > max.Y) || (SweepMax.Y < min.Y))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _max$[ebp]
	movss	xmm0, DWORD PTR [eax+52]
	comiss	xmm0, DWORD PTR [ecx+4]
	ja	SHORT $LN3@Cull
	mov	eax, DWORD PTR _min$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	comiss	xmm0, DWORD PTR [ecx+64]
	jbe	SHORT $LN4@Cull
$LN3@Cull:

; 119  : 	{
; 120  : 		return true;

	mov	al, 1
	jmp	SHORT $LN7@Cull
$LN4@Cull:

; 121  : 	}
; 122  : 	if ((SweepMin.Z > max.Z) || (SweepMax.Z < min.Z))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _max$[ebp]
	movss	xmm0, DWORD PTR [eax+56]
	comiss	xmm0, DWORD PTR [ecx+8]
	ja	SHORT $LN1@Cull
	mov	eax, DWORD PTR _min$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	comiss	xmm0, DWORD PTR [ecx+68]
	jbe	SHORT $LN2@Cull
$LN1@Cull:

; 123  : 	{
; 124  : 		return true;

	mov	al, 1
	jmp	SHORT $LN7@Cull
$LN2@Cull:

; 125  : 	}
; 126  : 	return false;

	xor	al, al
$LN7@Cull:

; 127  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Cull@AABoxCollisionTestClass@@QAE_NABVVector3@@0@Z ENDP ; AABoxCollisionTestClass::Cull
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CollisionTestClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CollisionTestClass@@QAEAAV0@ABV0@@Z PROC		; CollisionTestClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4CollisionTestClass@@QAEAAV0@ABV0@@Z ENDP		; CollisionTestClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\coltest.h
;	COMDAT ??0CollisionTestClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_that$ = 8						; size = 4
??0CollisionTestClass@@QAE@ABV0@@Z PROC			; CollisionTestClass::CollisionTestClass, COMDAT
; _this$ = ecx

; 43   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 44   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0CollisionTestClass@@QAE@ABV0@@Z ENDP			; CollisionTestClass::CollisionTestClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\coltest.h
;	COMDAT ??0CollisionTestClass@@QAE@PAUCastResultStruct@@W4Collision_Type@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_res$ = 8						; size = 4
_collision_type$ = 12					; size = 4
??0CollisionTestClass@@QAE@PAUCastResultStruct@@W4Collision_Type@@@Z PROC ; CollisionTestClass::CollisionTestClass, COMDAT
; _this$ = ecx

; 36   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _res$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _collision_type$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 37   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0CollisionTestClass@@QAE@PAUCastResultStruct@@W4Collision_Type@@@Z ENDP ; CollisionTestClass::CollisionTestClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4ArmorWarheadManager@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4ArmorWarheadManager@@QAEAAV0@ABV0@@Z PROC		; ArmorWarheadManager::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ArmorWarheadManager@@QAEAAV0@ABV0@@Z ENDP		; ArmorWarheadManager::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EJFW_Object_Created_Hook_Base@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EJFW_Object_Created_Hook_Base@@UAEPAXI@Z PROC	; JFW_Object_Created_Hook_Base::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1JFW_Object_Created_Hook_Base@@UAE@XZ ; JFW_Object_Created_Hook_Base::~JFW_Object_Created_Hook_Base
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	36					; 00000024H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JFW_Object_Created_Hook_Base@@UAE@XZ	; JFW_Object_Created_Hook_Base::~JFW_Object_Created_Hook_Base
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EJFW_Object_Created_Hook_Base@@UAEPAXI@Z ENDP	; JFW_Object_Created_Hook_Base::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJFW_Object_Created_Hook_Base@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJFW_Object_Created_Hook_Base@@UAEPAXI@Z PROC	; JFW_Object_Created_Hook_Base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JFW_Object_Created_Hook_Base@@UAE@XZ	; JFW_Object_Created_Hook_Base::~JFW_Object_Created_Hook_Base
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJFW_Object_Created_Hook_Base@@UAEPAXI@Z ENDP	; JFW_Object_Created_Hook_Base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4JFW_Object_Created_Hook_Base@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4JFW_Object_Created_Hook_Base@@QAEAAV0@ABV0@@Z PROC	; JFW_Object_Created_Hook_Base::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4ScriptImpClass@@QAEAAV0@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4JFW_Object_Created_Hook_Base@@QAEAAV0@ABV0@@Z ENDP	; JFW_Object_Created_Hook_Base::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JFW_Object_Created_Hook_Base@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0JFW_Object_Created_Hook_Base@@QAE@ABV0@@Z PROC	; JFW_Object_Created_Hook_Base::JFW_Object_Created_Hook_Base, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JFW_Object_Created_Hook_Base@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0JFW_Object_Created_Hook_Base@@QAE@ABV0@@Z ENDP	; JFW_Object_Created_Hook_Base::JFW_Object_Created_Hook_Base
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_tt.h
;	COMDAT ??0JFW_Object_Created_Hook_Base@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JFW_Object_Created_Hook_Base@@QAE@XZ PROC		; JFW_Object_Created_Hook_Base::JFW_Object_Created_Hook_Base, COMDAT
; _this$ = ecx

; 556  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JFW_Object_Created_Hook_Base@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 557  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JFW_Object_Created_Hook_Base@@QAE@XZ ENDP		; JFW_Object_Created_Hook_Base::JFW_Object_Created_Hook_Base
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EMultiKeyHookScriptImpClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EMultiKeyHookScriptImpClass@@UAEPAXI@Z PROC		; MultiKeyHookScriptImpClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1MultiKeyHookScriptImpClass@@UAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MultiKeyHookScriptImpClass@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMultiKeyHookScriptImpClass@@UAEPAXI@Z ENDP		; MultiKeyHookScriptImpClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GMultiKeyHookScriptImpClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GMultiKeyHookScriptImpClass@@UAEPAXI@Z PROC		; MultiKeyHookScriptImpClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MultiKeyHookScriptImpClass@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMultiKeyHookScriptImpClass@@UAEPAXI@Z ENDP		; MultiKeyHookScriptImpClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4MultiKeyHookScriptImpClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4MultiKeyHookScriptImpClass@@QAEAAV0@ABV0@@Z PROC	; MultiKeyHookScriptImpClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4ScriptImpClass@@QAEAAV0@ABV0@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEAAV0@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4MultiKeyHookScriptImpClass@@QAEAAV0@ABV0@@Z ENDP	; MultiKeyHookScriptImpClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0MultiKeyHookScriptImpClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0MultiKeyHookScriptImpClass@@QAE@ABV0@@Z PROC		; MultiKeyHookScriptImpClass::MultiKeyHookScriptImpClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MultiKeyHookScriptImpClass@@6B@
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0MultiKeyHookScriptImpClass@@QAE@ABV0@@Z ENDP		; MultiKeyHookScriptImpClass::MultiKeyHookScriptImpClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1MultiKeyHookScriptImpClass@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1MultiKeyHookScriptImpClass@@UAE@XZ PROC		; MultiKeyHookScriptImpClass::~MultiKeyHookScriptImpClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??1?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE@XZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::~SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1MultiKeyHookScriptImpClass@@UAE@XZ ENDP		; MultiKeyHookScriptImpClass::~MultiKeyHookScriptImpClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0MultiKeyHookScriptImpClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0MultiKeyHookScriptImpClass@@QAE@XZ PROC		; MultiKeyHookScriptImpClass::MultiKeyHookScriptImpClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MultiKeyHookScriptImpClass@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@XZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0MultiKeyHookScriptImpClass@@QAE@XZ ENDP		; MultiKeyHookScriptImpClass::MultiKeyHookScriptImpClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAXI@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE@XZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::~SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAXI@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEAAV0@ABV0@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEAAV0@ABV0@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@ABV0@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@ABV0@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Get_Count@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBEIXZ
_TEXT	SEGMENT
_node$1 = -12						; size = 4
_count$ = -8						; size = 4
_this$ = -4						; size = 4
?Get_Count@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBEIXZ PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Get_Count, COMDAT
; _this$ = ecx

; 302  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 303  : 		uint32 count = 0;

	mov	DWORD PTR _count$[ebp], 0

; 304  : 
; 305  : 		for (SLNode<T>* node = HeadNode; node; node = node->Next())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _node$1[ebp], ecx
	jmp	SHORT $LN3@Get_Count
$LN2@Get_Count:
	mov	ecx, DWORD PTR _node$1[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	DWORD PTR _node$1[ebp], eax
$LN3@Get_Count:
	cmp	DWORD PTR _node$1[ebp], 0
	je	SHORT $LN1@Get_Count

; 306  : 			++count;

	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
	jmp	SHORT $LN2@Get_Count
$LN1@Get_Count:

; 307  : 
; 308  : 		return count;

	mov	eax, DWORD PTR _count$[ebp]

; 309  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Count@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBEIXZ ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Get_Count
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Is_Empty@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBE_NXZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?Is_Empty@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBE_NXZ PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Is_Empty, COMDAT
; _this$ = ecx

; 296  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 297  : 		return !HeadNode;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN3@Is_Empty
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@Is_Empty
$LN3@Is_Empty:
	mov	DWORD PTR tv66[ebp], 0
$LN4@Is_Empty:
	mov	al, BYTE PTR tv66[ebp]

; 298  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Is_Empty@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBE_NXZ ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Is_Empty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Insert_After@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z
_TEXT	SEGMENT
tv140 = -88						; size = 4
tv142 = -84						; size = 4
$T1 = -80						; size = 4
_temp$2 = -12						; size = 4
_cur$ = -8						; size = 4
_this$ = -4						; size = 4
_newnode$ = 8						; size = 4
_oldnode$ = 12						; size = 4
?Insert_After@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Insert_After, COMDAT
; _this$ = ecx

; 267  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 268  : 		if (newnode == NULL)

	cmp	DWORD PTR _newnode$[ebp], 0
	jne	SHORT $LN8@Insert_Aft

; 269  : 		{
; 270  : 			return false;

	xor	al, al
	jmp	$LN9@Insert_Aft
$LN8@Insert_Aft:

; 271  : 		}
; 272  : 		if (oldnode == NULL || HeadNode == NULL)

	cmp	DWORD PTR _oldnode$[ebp], 0
	je	SHORT $LN6@Insert_Aft
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN7@Insert_Aft
$LN6@Insert_Aft:

; 273  : 		{
; 274  : 			return(Add_Head(newnode));

	mov	eax, DWORD PTR _newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	jmp	$LN9@Insert_Aft
$LN7@Insert_Aft:

; 275  : 		}
; 276  : 		SLNode<T> *cur;
; 277  : 		for (cur = HeadNode; cur && cur->Data() != oldnode; cur = cur->Next())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cur$[ebp], ecx
	jmp	SHORT $LN5@Insert_Aft
$LN4@Insert_Aft:
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	DWORD PTR _cur$[ebp], eax
$LN5@Insert_Aft:
	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN3@Insert_Aft
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	cmp	eax, DWORD PTR _oldnode$[ebp]
	je	SHORT $LN3@Insert_Aft

; 278  : 		{
; 279  : 		}

	jmp	SHORT $LN4@Insert_Aft
$LN3@Insert_Aft:

; 280  : 		if (cur != NULL  && cur->Data() == oldnode)

	cmp	DWORD PTR _cur$[ebp], 0
	je	$LN2@Insert_Aft
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	cmp	eax, DWORD PTR _oldnode$[ebp]
	jne	$LN2@Insert_Aft

; 281  : 		{
; 282  : 			if (cur == TailNode)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cur$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@Insert_Aft

; 283  : 			{
; 284  : 				return(Add_Tail(newnode));

	mov	eax, DWORD PTR _newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	jmp	$LN9@Insert_Aft
$LN1@Insert_Aft:

; 285  : 			}
; 286  : 			SLNode<T> *temp = new SLNode<T>(newnode);

	push	OFFSET ??_C@_0EN@HIHNAGN@SList?$DMstruct?5MultiKeyHookScriptI@
	push	286					; 0000011eH
	push	OFFSET ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN14@Insert_Aft
	xor	ecx, ecx
	jne	SHORT $LN11@Insert_Aft
	push	286					; 0000011eH
	push	OFFSET ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN11@Insert_Aft:
	mov	DWORD PTR tv142[ebp], 0
	jmp	SHORT $LN15@Insert_Aft
$LN14@Insert_Aft:
	push	0
	push	0
	push	0
	push	8
	call	??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z ; AutoPoolClass<GenericSLNode,256>::operator new
	add	esp, 16					; 00000010H
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN12@Insert_Aft
	mov	eax, DWORD PTR _newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN13@Insert_Aft
$LN12@Insert_Aft:
	mov	DWORD PTR tv140[ebp], 0
$LN13@Insert_Aft:
	mov	ecx, DWORD PTR tv140[ebp]
	mov	DWORD PTR tv142[ebp], ecx
$LN15@Insert_Aft:
	mov	edx, DWORD PTR tv142[ebp]
	mov	DWORD PTR _temp$2[ebp], edx

; 287  : 			temp->Set_Next(cur->Next());

	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	push	eax
	mov	ecx, DWORD PTR _temp$2[ebp]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 288  : 			cur->Set_Next(temp);

	mov	eax, DWORD PTR _temp$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 289  : 			return true;

	mov	al, 1
	jmp	SHORT $LN9@Insert_Aft
$LN2@Insert_Aft:

; 290  : 		}
; 291  : 		return false;

	xor	al, al
$LN9@Insert_Aft:

; 292  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Insert_After@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Insert_After
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Insert_Before@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z
_TEXT	SEGMENT
tv145 = -88						; size = 4
tv147 = -84						; size = 4
$T1 = -80						; size = 4
_temp$2 = -12						; size = 4
_cur$ = -8						; size = 4
_this$ = -4						; size = 4
_newnode$ = 8						; size = 4
_oldnode$ = 12						; size = 4
?Insert_Before@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Insert_Before, COMDAT
; _this$ = ecx

; 243  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		if (newnode == NULL)

	cmp	DWORD PTR _newnode$[ebp], 0
	jne	SHORT $LN7@Insert_Bef

; 245  : 		{
; 246  : 			return false;

	xor	al, al
	jmp	$LN8@Insert_Bef
$LN7@Insert_Bef:

; 247  : 		}
; 248  : 		if (oldnode == NULL || HeadNode == NULL || HeadNode->Data() == oldnode)

	cmp	DWORD PTR _oldnode$[ebp], 0
	je	SHORT $LN5@Insert_Bef
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN5@Insert_Bef
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	cmp	eax, DWORD PTR _oldnode$[ebp]
	jne	SHORT $LN6@Insert_Bef
$LN5@Insert_Bef:

; 249  : 		{
; 250  : 			return Add_Head(newnode);

	mov	eax, DWORD PTR _newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	jmp	$LN8@Insert_Bef
$LN6@Insert_Bef:

; 251  : 		}
; 252  : 		SLNode<T> *cur;
; 253  : 		for (cur=HeadNode; cur->Next() && cur->Next()->Data() != oldnode; cur=cur->Next())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cur$[ebp], ecx
	jmp	SHORT $LN4@Insert_Bef
$LN3@Insert_Bef:
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	DWORD PTR _cur$[ebp], eax
$LN4@Insert_Bef:
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	test	eax, eax
	je	SHORT $LN2@Insert_Bef
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	ecx, eax
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	cmp	eax, DWORD PTR _oldnode$[ebp]
	je	SHORT $LN2@Insert_Bef

; 254  : 		{
; 255  : 		}

	jmp	SHORT $LN3@Insert_Bef
$LN2@Insert_Bef:

; 256  : 		if (cur->Next() != NULL && cur->Next()->Data() == oldnode)

	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	test	eax, eax
	je	$LN1@Insert_Bef
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	ecx, eax
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	cmp	eax, DWORD PTR _oldnode$[ebp]
	jne	$LN1@Insert_Bef

; 257  : 		{
; 258  : 			SLNode<T> *temp	= new SLNode<T> (newnode);

	push	OFFSET ??_C@_0EO@OJGPEJGC@SList?$DMstruct?5MultiKeyHookScriptI@
	push	258					; 00000102H
	push	OFFSET ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN13@Insert_Bef
	xor	ecx, ecx
	jne	SHORT $LN10@Insert_Bef
	push	258					; 00000102H
	push	OFFSET ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN10@Insert_Bef:
	mov	DWORD PTR tv147[ebp], 0
	jmp	SHORT $LN14@Insert_Bef
$LN13@Insert_Bef:
	push	0
	push	0
	push	0
	push	8
	call	??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z ; AutoPoolClass<GenericSLNode,256>::operator new
	add	esp, 16					; 00000010H
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN11@Insert_Bef
	mov	eax, DWORD PTR _newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
	mov	DWORD PTR tv145[ebp], eax
	jmp	SHORT $LN12@Insert_Bef
$LN11@Insert_Bef:
	mov	DWORD PTR tv145[ebp], 0
$LN12@Insert_Bef:
	mov	ecx, DWORD PTR tv145[ebp]
	mov	DWORD PTR tv147[ebp], ecx
$LN14@Insert_Bef:
	mov	edx, DWORD PTR tv147[ebp]
	mov	DWORD PTR _temp$2[ebp], edx

; 259  : 			temp->Set_Next(cur->Next());

	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	push	eax
	mov	ecx, DWORD PTR _temp$2[ebp]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 260  : 			cur->Set_Next(temp);

	mov	eax, DWORD PTR _temp$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 261  : 			return true;

	mov	al, 1
	jmp	SHORT $LN8@Insert_Bef
$LN1@Insert_Bef:

; 262  : 		}
; 263  : 		return false;

	xor	al, al
$LN8@Insert_Bef:

; 264  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Insert_Before@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Insert_Before
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Remove_All@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_cur$2 = -12						; size = 4
_next$ = -8						; size = 4
_this$ = -4						; size = 4
?Remove_All@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEXXZ PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_All, COMDAT
; _this$ = ecx

; 231  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 232  : 		SLNode<T> *next;
; 233  : 		for (SLNode<T> *cur = HeadNode; cur; cur = next)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cur$2[ebp], ecx
	jmp	SHORT $LN3@Remove_All
$LN2@Remove_All:
	mov	eax, DWORD PTR _next$[ebp]
	mov	DWORD PTR _cur$2[ebp], eax
$LN3@Remove_All:
	cmp	DWORD PTR _cur$2[ebp], 0
	je	SHORT $LN1@Remove_All

; 234  : 		{
; 235  : 			next = cur->Next();

	mov	ecx, DWORD PTR _cur$2[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	DWORD PTR _next$[ebp], eax

; 236  : 			delete cur;

	push	OFFSET ??_C@_0EL@MPFHHNNA@SList?$DMstruct?5MultiKeyHookScriptI@
	push	236					; 000000ecH
	push	OFFSET ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN7@Remove_All
	xor	ecx, ecx
	jne	SHORT $LN6@Remove_All
	push	236					; 000000ecH
	push	OFFSET ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN6@Remove_All:
	jmp	SHORT $LN8@Remove_All
$LN7@Remove_All:
	mov	eax, DWORD PTR _cur$2[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??3?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAXPAX@Z ; AutoPoolClass<GenericSLNode,256>::operator delete
	add	esp, 4
$LN8@Remove_All:

; 237  : 		}

	jmp	SHORT $LN2@Remove_All
$LN1@Remove_All:

; 238  : 		HeadNode = TailNode = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 239  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Remove_All@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEXXZ ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_All
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Remove@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPBUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z
_TEXT	SEGMENT
tv76 = -81						; size = 1
$T1 = -80						; size = 4
_temp$2 = -12						; size = 4
_cur$ = -8						; size = 4
_this$ = -4						; size = 4
_element$ = 8						; size = 4
?Remove@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPBUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove, COMDAT
; _this$ = ecx

; 202  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 203  : 		if (element == NULL || HeadNode == NULL)

	cmp	DWORD PTR _element$[ebp], 0
	je	SHORT $LN7@Remove
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN8@Remove
$LN7@Remove:

; 204  : 		{
; 205  : 			return false;

	xor	al, al
	jmp	$LN9@Remove
$LN8@Remove:

; 206  : 		}
; 207  : 		if (HeadNode->Data() == element)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	cmp	eax, DWORD PTR _element$[ebp]
	jne	SHORT $LN6@Remove

; 208  : 		{
; 209  : 			return Remove_Head() != NULL ? true : false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	test	eax, eax
	je	SHORT $LN11@Remove
	mov	BYTE PTR tv76[ebp], 1
	jmp	SHORT $LN12@Remove
$LN11@Remove:
	mov	BYTE PTR tv76[ebp], 0
$LN12@Remove:
	mov	al, BYTE PTR tv76[ebp]
	jmp	$LN9@Remove
$LN6@Remove:

; 210  : 		}
; 211  : 		SLNode<T> *cur;
; 212  : 		for (cur = HeadNode; cur->Next() && cur->Next()->Data() != element; cur=cur->Next())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cur$[ebp], ecx
	jmp	SHORT $LN5@Remove
$LN4@Remove:
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	DWORD PTR _cur$[ebp], eax
$LN5@Remove:
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	test	eax, eax
	je	SHORT $LN3@Remove
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	ecx, eax
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	cmp	eax, DWORD PTR _element$[ebp]
	je	SHORT $LN3@Remove

; 213  : 		{
; 214  : 		}

	jmp	SHORT $LN4@Remove
$LN3@Remove:

; 215  : 		if (cur->Next() != NULL && cur->Next()->Data() == element)

	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	test	eax, eax
	je	$LN2@Remove
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	ecx, eax
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	cmp	eax, DWORD PTR _element$[ebp]
	jne	SHORT $LN2@Remove

; 216  : 		{
; 217  : 			SLNode<T> *temp	= cur->Next();

	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	DWORD PTR _temp$2[ebp], eax

; 218  : 			cur->Set_Next(temp->Next());

	mov	ecx, DWORD PTR _temp$2[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 219  : 			if (temp == TailNode)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _temp$2[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@Remove

; 220  : 			{
; 221  : 				TailNode = cur;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN1@Remove:

; 222  : 			}
; 223  : 			delete temp;

	push	OFFSET ??_C@_0EH@CGJBMJBC@SList?$DMstruct?5MultiKeyHookScriptI@
	push	223					; 000000dfH
	push	OFFSET ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN14@Remove
	xor	ecx, ecx
	jne	SHORT $LN13@Remove
	push	223					; 000000dfH
	push	OFFSET ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN13@Remove:
	jmp	SHORT $LN15@Remove
$LN14@Remove:
	mov	eax, DWORD PTR _temp$2[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??3?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAXPAX@Z ; AutoPoolClass<GenericSLNode,256>::operator delete
	add	esp, 4
$LN15@Remove:

; 224  : 			return true;

	mov	al, 1
	jmp	SHORT $LN9@Remove
$LN2@Remove:

; 225  : 		}
; 226  : 		return false;

	xor	al, al
$LN9@Remove:

; 227  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Remove@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPBUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Remove_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ
_TEXT	SEGMENT
tv76 = -76						; size = 4
_data$ = -8						; size = 4
_this$ = -4						; size = 4
?Remove_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_Tail, COMDAT
; _this$ = ecx

; 191  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 192  : 		if (HeadNode == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@Remove_Tai

; 193  : 		{
; 194  : 			return ((T *)NULL);

	xor	eax, eax
	jmp	SHORT $LN2@Remove_Tai
$LN1@Remove_Tai:

; 195  : 		}
; 196  : 		T* data = TailNode->Data();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	mov	DWORD PTR _data$[ebp], eax

; 197  : 		return (Remove(data) ? data : (T*)NULL);

	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@Remove_Tai
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN5@Remove_Tai
$LN4@Remove_Tai:
	mov	DWORD PTR tv76[ebp], 0
$LN5@Remove_Tai:
	mov	eax, DWORD PTR tv76[ebp]
$LN2@Remove_Tai:

; 198  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Remove_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_Tail
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Remove_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_data$ = -12						; size = 4
_temp$ = -8						; size = 4
_this$ = -4						; size = 4
?Remove_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_Head, COMDAT
; _this$ = ecx

; 173  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 174  : 		if (HeadNode == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN2@Remove_Hea

; 175  : 		{
; 176  : 			return ((T* )NULL);

	xor	eax, eax
	jmp	$LN3@Remove_Hea
$LN2@Remove_Hea:

; 177  : 		}
; 178  : 		SLNode<T> *temp = HeadNode;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _temp$[ebp], ecx

; 179  : 		HeadNode = HeadNode->Next();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 180  : 		if (HeadNode == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@Remove_Hea

; 181  : 		{
; 182  : 			TailNode = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
$LN1@Remove_Hea:

; 183  : 		}
; 184  : 		T *data = temp->Data();

	mov	ecx, DWORD PTR _temp$[ebp]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	mov	DWORD PTR _data$[ebp], eax

; 185  : 		delete temp;

	push	OFFSET ??_C@_0EM@PPENJFKC@SList?$DMstruct?5MultiKeyHookScriptI@
	push	185					; 000000b9H
	push	OFFSET ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Remove_Hea
	xor	ecx, ecx
	jne	SHORT $LN5@Remove_Hea
	push	185					; 000000b9H
	push	OFFSET ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN5@Remove_Hea:
	jmp	SHORT $LN7@Remove_Hea
$LN6@Remove_Hea:
	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??3?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAXPAX@Z ; AutoPoolClass<GenericSLNode,256>::operator delete
	add	esp, 4
$LN7@Remove_Hea:

; 186  : 		return data;

	mov	eax, DWORD PTR _data$[ebp]
$LN3@Remove_Hea:

; 187  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Remove_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_Head
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z
_TEXT	SEGMENT
_cur$1 = -8						; size = 4
_this$ = -4						; size = 4
_list$ = 8						; size = 4
?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Tail, COMDAT
; _this$ = ecx

; 159  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 160  : 		if (list.HeadNode == NULL)

	mov	eax, DWORD PTR _list$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN4@Add_Tail

; 161  : 		{
; 162  : 			return false;

	xor	al, al
	jmp	SHORT $LN5@Add_Tail
$LN4@Add_Tail:

; 163  : 		}
; 164  : 		for (SLNode<T> *cur = list.HeadNode; cur; cur = cur->Next()) 

	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cur$1[ebp], ecx
	jmp	SHORT $LN3@Add_Tail
$LN2@Add_Tail:
	mov	ecx, DWORD PTR _cur$1[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	DWORD PTR _cur$1[ebp], eax
$LN3@Add_Tail:
	cmp	DWORD PTR _cur$1[ebp], 0
	je	SHORT $LN1@Add_Tail

; 165  : 		{
; 166  : 			Add_Tail(cur->Data());

	mov	ecx, DWORD PTR _cur$1[ebp]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax

; 167  : 		}

	jmp	SHORT $LN2@Add_Tail
$LN1@Add_Tail:

; 168  : 		return true;

	mov	al, 1
$LN5@Add_Tail:

; 169  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Tail
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z
_TEXT	SEGMENT
tv82 = -84						; size = 4
tv84 = -80						; size = 4
$T1 = -76						; size = 4
_temp$ = -8						; size = 4
_this$ = -4						; size = 4
_data$ = 8						; size = 4
?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Tail, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 140  : 		if (data == NULL)

	cmp	DWORD PTR _data$[ebp], 0
	jne	SHORT $LN3@Add_Tail

; 141  : 		{
; 142  : 			return false;

	xor	al, al
	jmp	$LN4@Add_Tail
$LN3@Add_Tail:

; 143  : 		}
; 144  : 		SLNode<T> *temp = new SLNode<T> (data);

	push	OFFSET ??_C@_0EJ@OIGECPDF@SList?$DMstruct?5MultiKeyHookScriptI@
	push	144					; 00000090H
	push	OFFSET ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN9@Add_Tail
	xor	ecx, ecx
	jne	SHORT $LN6@Add_Tail
	push	144					; 00000090H
	push	OFFSET ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN6@Add_Tail:
	mov	DWORD PTR tv84[ebp], 0
	jmp	SHORT $LN10@Add_Tail
$LN9@Add_Tail:
	push	0
	push	0
	push	0
	push	8
	call	??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z ; AutoPoolClass<GenericSLNode,256>::operator new
	add	esp, 16					; 00000010H
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN7@Add_Tail
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN8@Add_Tail
$LN7@Add_Tail:
	mov	DWORD PTR tv82[ebp], 0
$LN8@Add_Tail:
	mov	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR tv84[ebp], ecx
$LN10@Add_Tail:
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR _temp$[ebp], edx

; 145  : 		if (HeadNode == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN2@Add_Tail

; 146  : 		{
; 147  : 			HeadNode = TailNode = temp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [edx+4], eax

; 148  : 		}
; 149  : 		else

	jmp	SHORT $LN1@Add_Tail
$LN2@Add_Tail:

; 150  : 		{
; 151  : 			TailNode->Set_Next(temp);

	mov	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 152  : 			TailNode = temp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN1@Add_Tail:

; 153  : 		}
; 154  : 		return true;

	mov	al, 1
$LN4@Add_Tail:

; 155  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Tail
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z
_TEXT	SEGMENT
tv90 = -92						; size = 4
tv92 = -88						; size = 4
$T1 = -84						; size = 4
_temp$2 = -16						; size = 4
_cur$3 = -12						; size = 4
_addpoint$ = -8						; size = 4
_this$ = -4						; size = 4
_list$ = 8						; size = 4
?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Head, COMDAT
; _this$ = ecx

; 113  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		if (list.HeadNode == NULL)

	mov	eax, DWORD PTR _list$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN6@Add_Head

; 115  : 		{
; 116  : 			return false;

	xor	al, al
	jmp	$LN7@Add_Head
$LN6@Add_Head:

; 117  : 		}
; 118  : 		SLNode<T> *addpoint = NULL;

	mov	DWORD PTR _addpoint$[ebp], 0

; 119  : 		for (SLNode<T> *cur = list.HeadNode; cur; cur = cur->Next())

	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cur$3[ebp], ecx
	jmp	SHORT $LN5@Add_Head
$LN4@Add_Head:
	mov	ecx, DWORD PTR _cur$3[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	DWORD PTR _cur$3[ebp], eax
$LN5@Add_Head:
	cmp	DWORD PTR _cur$3[ebp], 0
	je	$LN3@Add_Head

; 120  : 		{
; 121  : 			if (addpoint)

	cmp	DWORD PTR _addpoint$[ebp], 0
	je	$LN2@Add_Head

; 122  : 			{
; 123  : 				SLNode<T> *temp = new SLNode<T>(cur->Data());

	push	OFFSET ??_C@_0EJ@ENMBJFB@SList?$DMstruct?5MultiKeyHookScriptI@
	push	123					; 0000007bH
	push	OFFSET ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN12@Add_Head
	xor	ecx, ecx
	jne	SHORT $LN9@Add_Head
	push	123					; 0000007bH
	push	OFFSET ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN9@Add_Head:
	mov	DWORD PTR tv92[ebp], 0
	jmp	SHORT $LN13@Add_Head
$LN12@Add_Head:
	push	0
	push	0
	push	0
	push	8
	call	??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z ; AutoPoolClass<GenericSLNode,256>::operator new
	add	esp, 16					; 00000010H
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN10@Add_Head
	mov	ecx, DWORD PTR _cur$3[ebp]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN11@Add_Head
$LN10@Add_Head:
	mov	DWORD PTR tv90[ebp], 0
$LN11@Add_Head:
	mov	eax, DWORD PTR tv90[ebp]
	mov	DWORD PTR tv92[ebp], eax
$LN13@Add_Head:
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR _temp$2[ebp], ecx

; 124  : 				temp->Set_Next(addpoint->Next());

	mov	ecx, DWORD PTR _addpoint$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	push	eax
	mov	ecx, DWORD PTR _temp$2[ebp]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 125  : 				addpoint->Set_Next(temp);

	mov	eax, DWORD PTR _temp$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _addpoint$[ebp]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 126  : 				addpoint = temp;

	mov	eax, DWORD PTR _temp$2[ebp]
	mov	DWORD PTR _addpoint$[ebp], eax

; 127  : 			}
; 128  : 			else

	jmp	SHORT $LN1@Add_Head
$LN2@Add_Head:

; 129  : 			{
; 130  : 				Add_Head(cur->Data());

	mov	ecx, DWORD PTR _cur$3[ebp]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 131  : 				addpoint = HeadNode;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _addpoint$[ebp], ecx
$LN1@Add_Head:

; 132  : 			}
; 133  : 		}

	jmp	$LN4@Add_Head
$LN3@Add_Head:

; 134  : 		return true;

	mov	al, 1
$LN7@Add_Head:

; 135  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Head
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z
_TEXT	SEGMENT
tv82 = -84						; size = 4
tv84 = -80						; size = 4
$T1 = -76						; size = 4
_temp$ = -8						; size = 4
_this$ = -4						; size = 4
_data$ = 8						; size = 4
?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Head, COMDAT
; _this$ = ecx

; 96   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 97   : 		if (!data)

	cmp	DWORD PTR _data$[ebp], 0
	jne	SHORT $LN2@Add_Head

; 98   : 		{
; 99   : 			return false;

	xor	al, al
	jmp	$LN3@Add_Head
$LN2@Add_Head:

; 100  : 		}
; 101  : 		SLNode<T> *temp	= new SLNode<T>(data);

	push	OFFSET ??_C@_0EJ@ENMBJFB@SList?$DMstruct?5MultiKeyHookScriptI@
	push	101					; 00000065H
	push	OFFSET ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN8@Add_Head
	xor	ecx, ecx
	jne	SHORT $LN5@Add_Head
	push	101					; 00000065H
	push	OFFSET ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN5@Add_Head:
	mov	DWORD PTR tv84[ebp], 0
	jmp	SHORT $LN9@Add_Head
$LN8@Add_Head:
	push	0
	push	0
	push	0
	push	8
	call	??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z ; AutoPoolClass<GenericSLNode,256>::operator new
	add	esp, 16					; 00000010H
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN6@Add_Head
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN7@Add_Head
$LN6@Add_Head:
	mov	DWORD PTR tv82[ebp], 0
$LN7@Add_Head:
	mov	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR tv84[ebp], ecx
$LN9@Add_Head:
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR _temp$[ebp], edx

; 102  : 		temp->Set_Next(HeadNode);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _temp$[ebp]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 103  : 		HeadNode = temp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 104  : 		if (!TailNode)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN1@Add_Head

; 105  : 		{
; 106  : 			TailNode = temp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN1@Add_Head:

; 107  : 		}
; 108  : 		return true;

	mov	al, 1
$LN3@Add_Head:

; 109  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Head
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ??1?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE@XZ PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::~SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>, COMDAT
; _this$ = ecx

; 90   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@

; 91   : 		Remove_All();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Remove_All@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEXXZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_All

; 92   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE@XZ ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::~SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@XZ PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>, COMDAT
; _this$ = ecx

; 86   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 87   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@XZ ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EJFW_Key_Hook_Base@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EJFW_Key_Hook_Base@@UAEPAXI@Z PROC			; JFW_Key_Hook_Base::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1JFW_Key_Hook_Base@@UAE@XZ	; JFW_Key_Hook_Base::~JFW_Key_Hook_Base
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	36					; 00000024H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JFW_Key_Hook_Base@@UAE@XZ		; JFW_Key_Hook_Base::~JFW_Key_Hook_Base
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EJFW_Key_Hook_Base@@UAEPAXI@Z ENDP			; JFW_Key_Hook_Base::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJFW_Key_Hook_Base@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJFW_Key_Hook_Base@@UAEPAXI@Z PROC			; JFW_Key_Hook_Base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JFW_Key_Hook_Base@@UAE@XZ		; JFW_Key_Hook_Base::~JFW_Key_Hook_Base
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJFW_Key_Hook_Base@@UAEPAXI@Z ENDP			; JFW_Key_Hook_Base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4JFW_Key_Hook_Base@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4JFW_Key_Hook_Base@@QAEAAV0@ABV0@@Z PROC		; JFW_Key_Hook_Base::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4ScriptImpClass@@QAEAAV0@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4JFW_Key_Hook_Base@@QAEAAV0@ABV0@@Z ENDP		; JFW_Key_Hook_Base::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JFW_Key_Hook_Base@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0JFW_Key_Hook_Base@@QAE@ABV0@@Z PROC			; JFW_Key_Hook_Base::JFW_Key_Hook_Base, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JFW_Key_Hook_Base@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0JFW_Key_Hook_Base@@QAE@ABV0@@Z ENDP			; JFW_Key_Hook_Base::JFW_Key_Hook_Base
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_tt.h
;	COMDAT ??0JFW_Key_Hook_Base@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JFW_Key_Hook_Base@@QAE@XZ PROC			; JFW_Key_Hook_Base::JFW_Key_Hook_Base, COMDAT
; _this$ = ecx

; 491  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JFW_Key_Hook_Base@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0

; 492  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JFW_Key_Hook_Base@@QAE@XZ ENDP			; JFW_Key_Hook_Base::JFW_Key_Hook_Base
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ??0GenericSLNode@@IAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
??0GenericSLNode@@IAE@PAX@Z PROC			; GenericSLNode::GenericSLNode, COMDAT
; _this$ = ecx

; 37   : 	GenericSLNode(void *obj)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 38   : 	{
; 39   : 		NodeData = obj;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 40   : 		NodeNext = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 41   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0GenericSLNode@@IAE@PAX@Z ENDP			; GenericSLNode::GenericSLNode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ??3?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAXPAX@Z
_TEXT	SEGMENT
_object$ = 8						; size = 4
??3?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAXPAX@Z PROC ; AutoPoolClass<GenericSLNode,256>::operator delete, COMDAT

; 1485 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 1486 : 		if (object)

	cmp	DWORD PTR _object$[ebp], 0
	je	SHORT $LN2@operator

; 1487 : 			objectPoolClass(T, nAlign).Free_Object_Memory(*(T*)object);

	mov	eax, DWORD PTR _object$[ebp]
	push	eax
	call	?getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ ; Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance
	mov	ecx, eax
	call	?Free_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@@Z ; ObjectPoolClass<GenericSLNode,256>::Free_Object_Memory
$LN2@operator:

; 1488 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAXPAX@Z ENDP ; AutoPoolClass<GenericSLNode,256>::operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z
_TEXT	SEGMENT
_size$ = 8						; size = 4
_file$ = 12						; size = 4
_line$ = 16						; size = 4
_function$ = 20						; size = 4
??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z PROC ; AutoPoolClass<GenericSLNode,256>::operator new, COMDAT

; 1479 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
$LN3@operator:

; 1480 : 		TT_ASSERT(size == sizeof(T));

	xor	eax, eax
	jne	SHORT $LN3@operator
	cmp	DWORD PTR _size$[ebp], 8
	je	SHORT $LN1@operator
	int	3
$LN1@operator:

; 1481 : 		return (void*)objectPoolClass(T, nAlign).Allocate_Object_Memory();

	call	?getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ ; Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance
	mov	ecx, eax
	call	?Allocate_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEPAVGenericSLNode@@XZ ; ObjectPoolClass<GenericSLNode,256>::Allocate_Object_Memory

; 1482 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z ENDP ; AutoPoolClass<GenericSLNode,256>::operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\cplayer.h
;	COMDAT ?Get_Id@cPlayer@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Id@cPlayer@@QBEHXZ PROC				; cPlayer::Get_Id, COMDAT
; _this$ = ecx

; 116  : 	int Get_Id() const { return PlayerId; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1884]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Id@cPlayer@@QBEHXZ ENDP				; cPlayer::Get_Id
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\smartgameobj.h
;	COMDAT ?Get_Player_Data@SmartGameObj@@QAEPAVPlayerDataClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Player_Data@SmartGameObj@@QAEPAVPlayerDataClass@@XZ PROC ; SmartGameObj::Get_Player_Data, COMDAT
; _this$ = ecx

; 59   : 	PlayerDataClass * Get_Player_Data( void )						{ return PlayerData; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+2400]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Player_Data@SmartGameObj@@QAEPAVPlayerDataClass@@XZ ENDP ; SmartGameObj::Get_Player_Data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\physicalgameobj.h
;	COMDAT ?Get_Position@PhysicalGameObj@@QAE?AVVector3@@XZ
_TEXT	SEGMENT
_Return$ = -16						; size = 12
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Get_Position@PhysicalGameObj@@QAE?AVVector3@@XZ PROC	; PhysicalGameObj::Get_Position, COMDAT
; _this$ = ecx

; 47   : 	SCRIPTS_API Vector3 Get_Position() { Vector3 Return; Peek_Physical_Object()->Get_Position(&Return); return Return; }

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _Return$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	lea	eax, DWORD PTR _Return$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Peek_Physical_Object@PhysicalGameObj@@QBEPAVPhysClass@@XZ ; PhysicalGameObj::Peek_Physical_Object
	mov	ecx, eax
	call	?Get_Position@PhysClass@@QBEXPAVVector3@@@Z ; PhysClass::Get_Position
	lea	eax, DWORD PTR _Return$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Position@PhysicalGameObj@@QAE?AVVector3@@XZ ENDP	; PhysicalGameObj::Get_Position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\physicalgameobj.h
;	COMDAT ?Peek_Physical_Object@PhysicalGameObj@@QBEPAVPhysClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Peek_Physical_Object@PhysicalGameObj@@QBEPAVPhysClass@@XZ PROC ; PhysicalGameObj::Peek_Physical_Object, COMDAT
; _this$ = ecx

; 40   : 	inline PhysClass *	Peek_Physical_Object( void ) const { return PhysObj; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1908]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Peek_Physical_Object@PhysicalGameObj@@QBEPAVPhysClass@@XZ ENDP ; PhysicalGameObj::Peek_Physical_Object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\physclass.h
;	COMDAT ?Set_Collision_Group@PhysClass@@QAEXW4Collision_Group_Type@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_group$ = 8						; size = 4
?Set_Collision_Group@PhysClass@@QAEXW4Collision_Group_Type@@@Z PROC ; PhysClass::Set_Collision_Group, COMDAT
; _this$ = ecx

; 111  : 	void								Set_Collision_Group(Collision_Group_Type group)				{ Flags &= ~(uint)COLLISION_MASK; Flags |= (uint)group & COLLISION_MASK; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	and	ecx, -32				; ffffffe0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], ecx
	mov	eax, DWORD PTR _group$[ebp]
	and	eax, 31					; 0000001fH
	mov	ecx, DWORD PTR _this$[ebp]
	or	eax, DWORD PTR [ecx+56]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], eax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_Collision_Group@PhysClass@@QAEXW4Collision_Group_Type@@@Z ENDP ; PhysClass::Set_Collision_Group
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\physclass.h
;	COMDAT ?Get_Position@PhysClass@@QBEXPAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_set_pos$ = 8						; size = 4
?Get_Position@PhysClass@@QBEXPAVVector3@@@Z PROC	; PhysClass::Get_Position, COMDAT
; _this$ = ecx

; 73   : 	void								Get_Position(Vector3 * set_pos) const	{ Get_Transform().Get_Translation(set_pos); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _set_pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	mov	ecx, eax
	call	?Get_Translation@Matrix3D@@QBEXPAVVector3@@@Z ; Matrix3D::Get_Translation
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Position@PhysClass@@QBEXPAVVector3@@@Z ENDP	; PhysClass::Get_Position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4LineSegClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4LineSegClass@@QAEAAV0@ABV0@@Z PROC			; LineSegClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax+48], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4LineSegClass@@QAEAAV0@ABV0@@Z ENDP			; LineSegClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0LineSegClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0LineSegClass@@QAE@ABV0@@Z PROC			; LineSegClass::LineSegClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax+48], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0LineSegClass@@QAE@ABV0@@Z ENDP			; LineSegClass::LineSegClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?recalculate@LineSegClass@@IAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 12
_this$ = -4						; size = 4
?recalculate@LineSegClass@@IAEXXZ PROC			; LineSegClass::recalculate, COMDAT
; _this$ = ecx

; 81   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 82   : 		DP = P1 - P0;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??G@YA?AVVector3@@ABV0@0@Z		; operator-
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 83   : 		Dir = DP;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 84   : 		Dir.Normalize();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?Normalize@Vector3@@QAEXXZ		; Vector3::Normalize

; 85   : 		Length = DP.Length();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Length@Vector3@@QBEMXZ			; Vector3::Length
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+48]

; 86   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?recalculate@LineSegClass@@IAEXXZ ENDP			; LineSegClass::recalculate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?Compute_Point@LineSegClass@@QBEXMPAVVector3@@@Z
_TEXT	SEGMENT
$T1 = -80						; size = 12
_this$ = -4						; size = 4
_t$ = 8							; size = 4
_set$ = 12						; size = 4
?Compute_Point@LineSegClass@@QBEXMPAVVector3@@@Z PROC	; LineSegClass::Compute_Point, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 75   : 		Vector3::Add(P0,t*DP,set);

	mov	eax, DWORD PTR _set$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _t$[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??D@YA?AVVector3@@MABV0@@Z		; operator*
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?Add@Vector3@@SAXABV1@0PAV1@@Z		; Vector3::Add
	add	esp, 12					; 0000000cH

; 76   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Compute_Point@LineSegClass@@QBEXMPAVVector3@@@Z ENDP	; LineSegClass::Compute_Point
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?Get_Length@LineSegClass@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Length@LineSegClass@@QBEMXZ PROC			; LineSegClass::Get_Length, COMDAT
; _this$ = ecx

; 70   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 71   : 		return Length;

	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+48]

; 72   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Length@LineSegClass@@QBEMXZ ENDP			; LineSegClass::Get_Length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?Get_Dir@LineSegClass@@QBEABVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Dir@LineSegClass@@QBEABVVector3@@XZ PROC		; LineSegClass::Get_Dir, COMDAT
; _this$ = ecx

; 66   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 67   : 		return Dir;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36					; 00000024H

; 68   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Dir@LineSegClass@@QBEABVVector3@@XZ ENDP		; LineSegClass::Get_Dir
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?Get_DP@LineSegClass@@QBEABVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_DP@LineSegClass@@QBEABVVector3@@XZ PROC		; LineSegClass::Get_DP, COMDAT
; _this$ = ecx

; 62   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 63   : 		return DP;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H

; 64   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_DP@LineSegClass@@QBEABVVector3@@XZ ENDP		; LineSegClass::Get_DP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?Get_P1@LineSegClass@@QBEABVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_P1@LineSegClass@@QBEABVVector3@@XZ PROC		; LineSegClass::Get_P1, COMDAT
; _this$ = ecx

; 58   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 		return P1;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH

; 60   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_P1@LineSegClass@@QBEABVVector3@@XZ ENDP		; LineSegClass::Get_P1
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?Get_P0@LineSegClass@@QBEABVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_P0@LineSegClass@@QBEABVVector3@@XZ PROC		; LineSegClass::Get_P0, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 55   : 		return P0;

	mov	eax, DWORD PTR _this$[ebp]

; 56   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_P0@LineSegClass@@QBEABVVector3@@XZ ENDP		; LineSegClass::Get_P0
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?Set@LineSegClass@@QAEXABVVector3@@0M@Z
_TEXT	SEGMENT
$T1 = -92						; size = 12
$T2 = -80						; size = 12
_this$ = -4						; size = 4
_p0$ = 8						; size = 4
_dir$ = 12						; size = 4
_l$ = 16						; size = 4
?Set@LineSegClass@@QAEXABVVector3@@0M@Z PROC		; LineSegClass::Set, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 45   : 		DP = dir * l;

	push	ecx
	movss	xmm0, DWORD PTR _l$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??D@YA?AVVector3@@ABV0@M@Z		; operator*
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 46   : 		P0 = p0;

	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 47   : 		P1 = p0 + DP;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _p0$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??H@YA?AVVector3@@ABV0@0@Z		; operator+
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 48   : 		Dir = dir;

	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 49   : 		Length = l;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _l$[ebp]
	movss	DWORD PTR [eax+48], xmm0

; 50   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Set@LineSegClass@@QAEXABVVector3@@0M@Z ENDP		; LineSegClass::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?Set@LineSegClass@@QAEXABVVector3@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p0$ = 8						; size = 4
_p1$ = 12						; size = 4
?Set@LineSegClass@@QAEXABVVector3@@0@Z PROC		; LineSegClass::Set, COMDAT
; _this$ = ecx

; 38   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 39   : 		P0 = p0;

	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 40   : 		P1 = p1;

	mov	eax, DWORD PTR _p1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 41   : 		recalculate();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?recalculate@LineSegClass@@IAEXXZ	; LineSegClass::recalculate

; 42   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Set@LineSegClass@@QAEXABVVector3@@0@Z ENDP		; LineSegClass::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ??0LineSegClass@@QAE@ABV0@ABVMatrix3D@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_that$ = 8						; size = 4
_tm$ = 12						; size = 4
??0LineSegClass@@QAE@ABV0@ABVMatrix3D@@@Z PROC		; LineSegClass::LineSegClass, COMDAT
; _this$ = ecx

; 33   : 	LineSegClass(const LineSegClass & that,const Matrix3D & tm)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 34   : 	{
; 35   : 		Set(that,tm);

	mov	eax, DWORD PTR _tm$[ebp]
	push	eax
	mov	ecx, DWORD PTR _that$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@LineSegClass@@QAEXABV1@ABVMatrix3D@@@Z ; LineSegClass::Set

; 36   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0LineSegClass@@QAE@ABV0@ABVMatrix3D@@@Z ENDP		; LineSegClass::LineSegClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ??0LineSegClass@@QAE@ABVVector3@@0M@Z
_TEXT	SEGMENT
$T1 = -92						; size = 12
$T2 = -80						; size = 12
_this$ = -4						; size = 4
_p0$ = 8						; size = 4
_dir$ = 12						; size = 4
_l$ = 16						; size = 4
??0LineSegClass@@QAE@ABVVector3@@0M@Z PROC		; LineSegClass::LineSegClass, COMDAT
; _this$ = ecx

; 29   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _l$[ebp]
	movss	DWORD PTR [eax+48], xmm0

; 30   : 		DP = Dir * Length;

	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+48]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??D@YA?AVVector3@@ABV0@M@Z		; operator*
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 31   : 		P1 = P0 + DP;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??H@YA?AVVector3@@ABV0@0@Z		; operator+
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 32   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0LineSegClass@@QAE@ABVVector3@@0M@Z ENDP		; LineSegClass::LineSegClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ??0LineSegClass@@QAE@ABVVector3@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p0$ = 8						; size = 4
_p1$ = 12						; size = 4
??0LineSegClass@@QAE@ABVVector3@@0@Z PROC		; LineSegClass::LineSegClass, COMDAT
; _this$ = ecx

; 25   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _p1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 26   : 		recalculate();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?recalculate@LineSegClass@@IAEXXZ	; LineSegClass::recalculate

; 27   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0LineSegClass@@QAE@ABVVector3@@0@Z ENDP		; LineSegClass::LineSegClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ??0LineSegClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0LineSegClass@@QAE@XZ PROC				; LineSegClass::LineSegClass, COMDAT
; _this$ = ecx

; 21   : 	LineSegClass(void)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 22   : 	{
; 23   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0LineSegClass@@QAE@XZ ENDP				; LineSegClass::LineSegClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\referenceableclass.h
;	COMDAT ?Get_Data@?$ReferenceableClass@VScriptableGameObj@@@@IBEPAVScriptableGameObj@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Data@?$ReferenceableClass@VScriptableGameObj@@@@IBEPAVScriptableGameObj@@XZ PROC ; ReferenceableClass<ScriptableGameObj>::Get_Data, COMDAT
; _this$ = ecx

; 30   : 	T * Get_Data( void ) const	{ return ReferenceData; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Data@?$ReferenceableClass@VScriptableGameObj@@@@IBEPAVScriptableGameObj@@XZ ENDP ; ReferenceableClass<ScriptableGameObj>::Get_Data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EReferencerClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EReferencerClass@@UAEPAXI@Z PROC			; ReferencerClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1ReferencerClass@@UAE@XZ	; ReferencerClass::~ReferencerClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ReferencerClass@@UAE@XZ		; ReferencerClass::~ReferencerClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EReferencerClass@@UAEPAXI@Z ENDP			; ReferencerClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GReferencerClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GReferencerClass@@UAEPAXI@Z PROC			; ReferencerClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ReferencerClass@@UAE@XZ		; ReferencerClass::~ReferencerClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GReferencerClass@@UAEPAXI@Z ENDP			; ReferencerClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ReferencerClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0ReferencerClass@@QAE@ABV0@@Z PROC			; ReferencerClass::ReferencerClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PostLoadableClass@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReferencerClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0ReferencerClass@@QAE@ABV0@@Z ENDP			; ReferencerClass::ReferencerClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\referencerclass.h
;	COMDAT ?Set_Ptr@ReferencerClass@@QAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_object$ = 8						; size = 4
?Set_Ptr@ReferencerClass@@QAEXPAVScriptableGameObj@@@Z PROC ; ReferencerClass::Set_Ptr, COMDAT
; _this$ = ecx

; 61   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 62   : 		*this = object;

	mov	eax, DWORD PTR _object$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4ReferencerClass@@QAEAAV0@PAVScriptableGameObj@@@Z ; ReferencerClass::operator=

; 63   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_Ptr@ReferencerClass@@QAEXPAVScriptableGameObj@@@Z ENDP ; ReferencerClass::Set_Ptr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\referencerclass.h
;	COMDAT ?Get_Ptr@ReferencerClass@@QBEPAVScriptableGameObj@@XZ
_TEXT	SEGMENT
tv69 = -72						; size = 4
_this$ = -4						; size = 4
?Get_Ptr@ReferencerClass@@QBEPAVScriptableGameObj@@XZ PROC ; ReferencerClass::Get_Ptr, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 55   : 		return ReferenceTarget ? ReferenceTarget->Get_Data() : NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@Get_Ptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?Get_Data@?$ReferenceableClass@VScriptableGameObj@@@@IBEPAVScriptableGameObj@@XZ ; ReferenceableClass<ScriptableGameObj>::Get_Data
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@Get_Ptr
$LN3@Get_Ptr:
	mov	DWORD PTR tv69[ebp], 0
$LN4@Get_Ptr:
	mov	eax, DWORD PTR tv69[ebp]

; 56   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Ptr@ReferencerClass@@QBEPAVScriptableGameObj@@XZ ENDP ; ReferencerClass::Get_Ptr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\referencerclass.h
;	COMDAT ??0ReferencerClass@@QAE@PAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_object$ = 8						; size = 4
??0ReferencerClass@@QAE@PAVScriptableGameObj@@@Z PROC	; ReferencerClass::ReferencerClass, COMDAT
; _this$ = ecx

; 48   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PostLoadableClass@@QAE@XZ		; PostLoadableClass::PostLoadableClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReferencerClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 49   : 		*this = object;

	mov	eax, DWORD PTR _object$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4ReferencerClass@@QAEAAV0@PAVScriptableGameObj@@@Z ; ReferencerClass::operator=

; 50   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0ReferencerClass@@QAE@PAVScriptableGameObj@@@Z ENDP	; ReferencerClass::ReferencerClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\referencerclass.h
;	COMDAT ??0ReferencerClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ReferencerClass@@QAE@XZ PROC				; ReferencerClass::ReferencerClass, COMDAT
; _this$ = ecx

; 41   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PostLoadableClass@@QAE@XZ		; PostLoadableClass::PostLoadableClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReferencerClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 42   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ReferencerClass@@QAE@XZ ENDP				; ReferencerClass::ReferencerClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\referencerclass.h
;	COMDAT ??CReferencerClass@@QAEPAVScriptableGameObj@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??CReferencerClass@@QAEPAVScriptableGameObj@@XZ PROC	; ReferencerClass::operator->, COMDAT
; _this$ = ecx

; 37   : 	inline ScriptableGameObj* operator ->() { return Get_Ptr(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Ptr@ReferencerClass@@QBEPAVScriptableGameObj@@XZ ; ReferencerClass::Get_Ptr
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??CReferencerClass@@QAEPAVScriptableGameObj@@XZ ENDP	; ReferencerClass::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EPostLoadableClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EPostLoadableClass@@UAEPAXI@Z PROC			; PostLoadableClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1PostLoadableClass@@UAE@XZ	; PostLoadableClass::~PostLoadableClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PostLoadableClass@@UAE@XZ		; PostLoadableClass::~PostLoadableClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPostLoadableClass@@UAEPAXI@Z ENDP			; PostLoadableClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GPostLoadableClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GPostLoadableClass@@UAEPAXI@Z PROC			; PostLoadableClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PostLoadableClass@@UAE@XZ		; PostLoadableClass::~PostLoadableClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPostLoadableClass@@UAEPAXI@Z ENDP			; PostLoadableClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4PostLoadableClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4PostLoadableClass@@QAEAAV0@ABV0@@Z PROC		; PostLoadableClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4PostLoadableClass@@QAEAAV0@ABV0@@Z ENDP		; PostLoadableClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0PostLoadableClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0PostLoadableClass@@QAE@ABV0@@Z PROC			; PostLoadableClass::PostLoadableClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PostLoadableClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0PostLoadableClass@@QAE@ABV0@@Z ENDP			; PostLoadableClass::PostLoadableClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\postloadableclass.h
;	COMDAT ?Set_Post_Load_Registered@PostLoadableClass@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_onoff$ = 8						; size = 1
?Set_Post_Load_Registered@PostLoadableClass@@QAEX_N@Z PROC ; PostLoadableClass::Set_Post_Load_Registered, COMDAT
; _this$ = ecx

; 22   : 	void									Set_Post_Load_Registered(bool onoff)	{ IsPostLoadRegistered = onoff; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _onoff$[ebp]
	mov	BYTE PTR [eax+4], cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_Post_Load_Registered@PostLoadableClass@@QAEX_N@Z ENDP ; PostLoadableClass::Set_Post_Load_Registered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\postloadableclass.h
;	COMDAT ?Is_Post_Load_Registered@PostLoadableClass@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Is_Post_Load_Registered@PostLoadableClass@@QBE_NXZ PROC ; PostLoadableClass::Is_Post_Load_Registered, COMDAT
; _this$ = ecx

; 21   : 	bool									Is_Post_Load_Registered(void) const				{ return IsPostLoadRegistered; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Is_Post_Load_Registered@PostLoadableClass@@QBE_NXZ ENDP ; PostLoadableClass::Is_Post_Load_Registered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\postloadableclass.h
;	COMDAT ?On_Post_Load@PostLoadableClass@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?On_Post_Load@PostLoadableClass@@UAEXXZ PROC		; PostLoadableClass::On_Post_Load, COMDAT
; _this$ = ecx

; 20   : 	virtual void						On_Post_Load (void)							{ }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?On_Post_Load@PostLoadableClass@@UAEXXZ ENDP		; PostLoadableClass::On_Post_Load
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\postloadableclass.h
;	COMDAT ??1PostLoadableClass@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1PostLoadableClass@@UAE@XZ PROC			; PostLoadableClass::~PostLoadableClass, COMDAT
; _this$ = ecx

; 19   : 	virtual ~PostLoadableClass(void)													{ }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PostLoadableClass@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1PostLoadableClass@@UAE@XZ ENDP			; PostLoadableClass::~PostLoadableClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\postloadableclass.h
;	COMDAT ??0PostLoadableClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0PostLoadableClass@@QAE@XZ PROC			; PostLoadableClass::PostLoadableClass, COMDAT
; _this$ = ecx

; 18   : 	PostLoadableClass(void) : IsPostLoadRegistered(false)						{ }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PostLoadableClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PostLoadableClass@@QAE@XZ ENDP			; PostLoadableClass::PostLoadableClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4SysTimeClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4SysTimeClass@@QAEAAV0@ABV0@@Z PROC			; SysTimeClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4SysTimeClass@@QAEAAV0@ABV0@@Z ENDP			; SysTimeClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Inverse@Matrix3@@QBE?AV1@XZ
_TEXT	SEGMENT
tv222 = -188						; size = 4
tv272 = -184						; size = 4
tv212 = -180						; size = 4
$T1 = -176						; size = 12
$T2 = -164						; size = 12
_i1$ = -88						; size = 4
_j$ = -84						; size = 4
_i$ = -80						; size = 4
_b$ = -76						; size = 36
_a$ = -40						; size = 36
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Inverse@Matrix3@@QBE?AV1@XZ PROC			; Matrix3::Inverse, COMDAT
; _this$ = ecx

; 309  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 188				; 000000bcH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 310  : 		Matrix3 a(*this);				// As a evolves from original mat into identity

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _a$[ebp]
	call	??0Matrix3@@QAE@ABV0@@Z			; Matrix3::Matrix3

; 311  : 		Matrix3 b(true);				// b evolves from identity into inverse(a)

	push	1
	lea	ecx, DWORD PTR _b$[ebp]
	call	??0Matrix3@@QAE@_N@Z			; Matrix3::Matrix3

; 312  : 		int i, j, i1;
; 313  : 
; 314  : 		// Loop over cols of a from left to right, eliminating above and below diagonal
; 315  : 		for (j=0; j<3; j++) {

	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN12@Inverse
$LN11@Inverse:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN12@Inverse:
	cmp	DWORD PTR _j$[ebp], 3
	jge	$LN10@Inverse

; 316  : 
; 317  : 			// Find largest pivot in column j among rows j..3
; 318  : 			i1 = j;

	mov	eax, DWORD PTR _j$[ebp]
	mov	DWORD PTR _i1$[ebp], eax

; 319  : 			for (i=j+1; i<3; i++) {

	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN9@Inverse
$LN8@Inverse:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@Inverse:
	cmp	DWORD PTR _i$[ebp], 3
	jge	$LN7@Inverse

; 320  : 				if (WWMath::Fabs(a[i][j]) > WWMath::Fabs(a[i1][j])) {

	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _a$[ebp]
	call	??AMatrix3@@QAEAAVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	call	?Fabs@WWMath@@SAMM@Z			; WWMath::Fabs
	add	esp, 4
	fstp	DWORD PTR tv212[ebp]
	movss	xmm0, DWORD PTR tv212[ebp]
	mov	edx, DWORD PTR _j$[ebp]
	push	edx
	mov	eax, DWORD PTR _i1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _a$[ebp]
	movss	DWORD PTR tv272[ebp], xmm0
	call	??AMatrix3@@QAEAAVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	call	?Fabs@WWMath@@SAMM@Z			; WWMath::Fabs
	add	esp, 4
	fstp	DWORD PTR tv222[ebp]
	movss	xmm0, DWORD PTR tv272[ebp]
	comiss	xmm0, DWORD PTR tv222[ebp]
	jbe	SHORT $LN6@Inverse

; 321  : 					i1 = i;

	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _i1$[ebp], eax
$LN6@Inverse:

; 322  : 				}
; 323  : 			}

	jmp	$LN8@Inverse
$LN7@Inverse:

; 324  : 
; 325  : 			// Swap rows i1 and j in a and b to put pivot on diagonal
; 326  : 			Swap(a.Row[i1], a.Row[j]);

	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	lea	ecx, DWORD PTR _a$[ebp+eax]
	push	ecx
	mov	edx, DWORD PTR _i1$[ebp]
	imul	edx, 12					; 0000000cH
	lea	eax, DWORD PTR _a$[ebp+edx]
	push	eax
	call	?Swap@@YAXAAVVector3@@0@Z		; Swap
	add	esp, 8

; 327  : 			Swap(b.Row[i1], b.Row[j]);

	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	lea	ecx, DWORD PTR _b$[ebp+eax]
	push	ecx
	mov	edx, DWORD PTR _i1$[ebp]
	imul	edx, 12					; 0000000cH
	lea	eax, DWORD PTR _b$[ebp+edx]
	push	eax
	call	?Swap@@YAXAAVVector3@@0@Z		; Swap
	add	esp, 8

; 328  : 
; 329  : 			// Scale row j to have a unit diagonal
; 330  : 			if (a[j][j]==0.) {

	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _j$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _a$[ebp]
	call	??AMatrix3@@QAEAAVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]

; 331  : 				//Matrix3::inverse: singular matrix; can't invert
; 332  : 			}
; 333  : 			b.Row[j] /= a.Row[j][j];

	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 12					; 0000000cH
	lea	ecx, DWORD PTR _a$[ebp+ecx]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 12					; 0000000cH
	lea	ecx, DWORD PTR _b$[ebp+edx]
	call	??_0Vector3@@QAEAAV0@M@Z		; Vector3::operator/=

; 334  : 			a.Row[j] /= a.Row[j][j];

	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 12					; 0000000cH
	lea	ecx, DWORD PTR _a$[ebp+ecx]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 12					; 0000000cH
	lea	ecx, DWORD PTR _a$[ebp+edx]
	call	??_0Vector3@@QAEAAV0@M@Z		; Vector3::operator/=

; 335  : 
; 336  : 			// Eliminate off-diagonal elems in col j of a, doing identical ops to b
; 337  : 			for (i=0; i<3; i++) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@Inverse
$LN3@Inverse:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@Inverse:
	cmp	DWORD PTR _i$[ebp], 3
	jge	$LN2@Inverse

; 338  : 				if (i != j) {

	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _j$[ebp]
	je	$LN1@Inverse

; 339  : 					b.Row[i] -= a[i][j] * b.Row[j];

	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	lea	ecx, DWORD PTR _b$[ebp+eax]
	push	ecx
	mov	edx, DWORD PTR _j$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _a$[ebp]
	call	??AMatrix3@@QAEAAVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??D@YA?AVVector3@@MABV0@@Z		; operator*
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 12					; 0000000cH
	lea	ecx, DWORD PTR _b$[ebp+edx]
	call	??ZVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator-=

; 340  : 					a.Row[i] -= a[i][j] * a.Row[j];

	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	lea	ecx, DWORD PTR _a$[ebp+eax]
	push	ecx
	mov	edx, DWORD PTR _j$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _a$[ebp]
	call	??AMatrix3@@QAEAAVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??D@YA?AVVector3@@MABV0@@Z		; operator*
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 12					; 0000000cH
	lea	ecx, DWORD PTR _a$[ebp+edx]
	call	??ZVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator-=
$LN1@Inverse:

; 341  : 				}
; 342  : 			}

	jmp	$LN3@Inverse
$LN2@Inverse:

; 343  : 		}

	jmp	$LN11@Inverse
$LN10@Inverse:

; 344  : 		return b;

	lea	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Matrix3@@QAE@ABV0@@Z			; Matrix3::Matrix3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 345  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Inverse@Matrix3@@QBE?AV1@XZ ENDP			; Matrix3::Inverse
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Rotate_AABox_Extent@Matrix3@@QAEXABVVector3@@PAV2@@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
tv86 = -80						; size = 4
_j$1 = -12						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
_extent$ = 8						; size = 4
_new_extent$ = 12					; size = 4
?Rotate_AABox_Extent@Matrix3@@QAEXABVVector3@@PAV2@@Z PROC ; Matrix3::Rotate_AABox_Extent, COMDAT
; _this$ = ecx

; 298  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 299  : 		for (int i=0; i<3; i++)

	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN6@Rotate_AAB
$LN5@Rotate_AAB:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN6@Rotate_AAB:
	cmp	DWORD PTR _i$2[ebp], 3
	jge	$LN4@Rotate_AAB

; 300  : 		{
; 301  : 			(*new_extent)[i] = 0.0f;

	mov	eax, DWORD PTR _i$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _new_extent$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax], xmm0

; 302  : 			for (int j=0; j<3; j++)

	mov	DWORD PTR _j$1[ebp], 0
	jmp	SHORT $LN3@Rotate_AAB
$LN2@Rotate_AAB:
	mov	eax, DWORD PTR _j$1[ebp]
	add	eax, 1
	mov	DWORD PTR _j$1[ebp], eax
$LN3@Rotate_AAB:
	cmp	DWORD PTR _j$1[ebp], 3
	jge	SHORT $LN1@Rotate_AAB

; 303  : 			{
; 304  : 				(*new_extent)[i] += WWMath::Fabs(Row[i][j] * extent[j]);

	mov	eax, DWORD PTR _i$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _new_extent$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	mov	DWORD PTR tv86[ebp], eax
	mov	ecx, DWORD PTR _j$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _i$2[ebp]
	imul	ecx, 12					; 0000000cH
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	mov	esi, eax
	mov	edx, DWORD PTR _j$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _extent$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?Fabs@WWMath@@SAMM@Z			; WWMath::Fabs
	add	esp, 4
	fstp	DWORD PTR tv137[ebp]
	mov	eax, DWORD PTR tv86[ebp]
	movss	xmm0, DWORD PTR tv137[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv86[ebp]
	movss	DWORD PTR [ecx], xmm0

; 305  : 			}

	jmp	SHORT $LN2@Rotate_AAB
$LN1@Rotate_AAB:

; 306  : 		}

	jmp	$LN5@Rotate_AAB
$LN4@Rotate_AAB:

; 307  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Rotate_AABox_Extent@Matrix3@@QAEXABVVector3@@PAV2@@Z ENDP ; Matrix3::Rotate_AABox_Extent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Transpose_Rotate_Vector@Matrix3@@SAXABV1@ABVVector3@@PAV2@@Z
_TEXT	SEGMENT
tv237 = -88						; size = 4
tv233 = -88						; size = 4
tv229 = -88						; size = 4
tv235 = -84						; size = 4
tv231 = -84						; size = 4
tv227 = -84						; size = 4
_v$ = -16						; size = 4
_tmp$ = -12						; size = 12
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Transpose_Rotate_Vector@Matrix3@@SAXABV1@ABVVector3@@PAV2@@Z PROC ; Matrix3::Transpose_Rotate_Vector, COMDAT

; 283  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 284  : 		Vector3 tmp;

	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 285  : 		Vector3 * v;
; 286  : 		if (out == &in)

	mov	eax, DWORD PTR _out$[ebp]
	cmp	eax, DWORD PTR _in$[ebp]
	jne	SHORT $LN2@Transpose_

; 287  : 		{
; 288  : 			tmp = in;

	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 289  : 			v = &tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR _v$[ebp], eax

; 290  : 		} else {

	jmp	SHORT $LN1@Transpose_
$LN2@Transpose_:

; 291  : 			v = (Vector3 *)&in;

	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@Transpose_:

; 292  : 		}
; 293  : 		out->X = (A[0][0] * v->X + A[1][0] * v->Y + A[2][0] * v->Z);

	push	0
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	0
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv227[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv227[ebp]
	addss	xmm1, xmm0
	push	0
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv229[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv229[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx], xmm1

; 294  : 		out->Y = (A[0][1] * v->X + A[1][1] * v->Y + A[2][1] * v->Z);

	push	1
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv231[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv231[ebp]
	addss	xmm1, xmm0
	push	1
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv233[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv233[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+4], xmm1

; 295  : 		out->Z = (A[0][2] * v->X + A[1][2] * v->Y + A[2][2] * v->Z);

	push	2
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	2
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv235[ebp]
	addss	xmm1, xmm0
	push	2
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv237[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv237[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+8], xmm1

; 296  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Transpose_Rotate_Vector@Matrix3@@SAXABV1@ABVVector3@@PAV2@@Z ENDP ; Matrix3::Transpose_Rotate_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Rotate_Vector@Matrix3@@SAXABV1@ABVVector3@@PAV2@@Z
_TEXT	SEGMENT
tv237 = -88						; size = 4
tv233 = -88						; size = 4
tv229 = -88						; size = 4
tv235 = -84						; size = 4
tv231 = -84						; size = 4
tv227 = -84						; size = 4
_v$ = -16						; size = 4
_tmp$ = -12						; size = 12
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Rotate_Vector@Matrix3@@SAXABV1@ABVVector3@@PAV2@@Z PROC ; Matrix3::Rotate_Vector, COMDAT

; 266  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 267  : 		Vector3 tmp;

	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 268  : 		Vector3 * v;
; 269  : 		if (out == &in)

	mov	eax, DWORD PTR _out$[ebp]
	cmp	eax, DWORD PTR _in$[ebp]
	jne	SHORT $LN2@Rotate_Vec

; 270  : 		{
; 271  : 			tmp = in;

	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 272  : 			v = &tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR _v$[ebp], eax

; 273  : 		}
; 274  : 		else

	jmp	SHORT $LN1@Rotate_Vec
$LN2@Rotate_Vec:

; 275  : 		{
; 276  : 			v = (Vector3 *)&in;

	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@Rotate_Vec:

; 277  : 		}
; 278  : 		out->X = (A[0][0] * v->X + A[0][1] * v->Y + A[0][2] * v->Z);

	push	0
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv227[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv227[ebp]
	addss	xmm1, xmm0
	push	2
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv229[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv229[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx], xmm1

; 279  : 		out->Y = (A[1][0] * v->X + A[1][1] * v->Y + A[1][2] * v->Z);

	push	0
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv231[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv231[ebp]
	addss	xmm1, xmm0
	push	2
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv233[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv233[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+4], xmm1

; 280  : 		out->Z = (A[2][0] * v->X + A[2][1] * v->Y + A[2][2] * v->Z);

	push	0
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv235[ebp]
	addss	xmm1, xmm0
	push	2
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv237[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv237[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+8], xmm1

; 281  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Rotate_Vector@Matrix3@@SAXABV1@ABVVector3@@PAV2@@Z ENDP ; Matrix3::Rotate_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Subtract@Matrix3@@SAXABV1@0PAV1@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_res$ = 16						; size = 4
?Subtract@Matrix3@@SAXABV1@0PAV1@@Z PROC		; Matrix3::Subtract, COMDAT

; 257  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 258  : 		Vector3::Subtract(a.Row[0],b.Row[0],&(res->Row[0]));

	mov	eax, 12					; 0000000cH
	imul	eax, 0
	add	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _b$[ebp]
	push	ecx
	mov	edx, 12					; 0000000cH
	imul	edx, 0
	add	edx, DWORD PTR _a$[ebp]
	push	edx
	call	?Subtract@Vector3@@SAXABV1@0PAV1@@Z	; Vector3::Subtract
	add	esp, 12					; 0000000cH

; 259  : 		Vector3::Subtract(a.Row[1],b.Row[1],&(res->Row[1]));

	mov	eax, 12					; 0000000cH
	shl	eax, 0
	add	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _b$[ebp]
	push	ecx
	mov	edx, 12					; 0000000cH
	shl	edx, 0
	add	edx, DWORD PTR _a$[ebp]
	push	edx
	call	?Subtract@Vector3@@SAXABV1@0PAV1@@Z	; Vector3::Subtract
	add	esp, 12					; 0000000cH

; 260  : 		Vector3::Subtract(a.Row[2],b.Row[2],&(res->Row[2]));

	mov	eax, 12					; 0000000cH
	shl	eax, 1
	add	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _b$[ebp]
	push	ecx
	mov	edx, 12					; 0000000cH
	shl	edx, 1
	add	edx, DWORD PTR _a$[ebp]
	push	edx
	call	?Subtract@Vector3@@SAXABV1@0PAV1@@Z	; Vector3::Subtract
	add	esp, 12					; 0000000cH

; 261  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Subtract@Matrix3@@SAXABV1@0PAV1@@Z ENDP		; Matrix3::Subtract
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Add@Matrix3@@SAXABV1@0PAV1@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_res$ = 16						; size = 4
?Add@Matrix3@@SAXABV1@0PAV1@@Z PROC			; Matrix3::Add, COMDAT

; 251  : 	{ 

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 252  : 		Vector3::Add(a.Row[0],b.Row[0],&(res->Row[0]));

	mov	eax, 12					; 0000000cH
	imul	eax, 0
	add	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _b$[ebp]
	push	ecx
	mov	edx, 12					; 0000000cH
	imul	edx, 0
	add	edx, DWORD PTR _a$[ebp]
	push	edx
	call	?Add@Vector3@@SAXABV1@0PAV1@@Z		; Vector3::Add
	add	esp, 12					; 0000000cH

; 253  : 		Vector3::Add(a.Row[1],b.Row[1],&(res->Row[1]));

	mov	eax, 12					; 0000000cH
	shl	eax, 0
	add	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _b$[ebp]
	push	ecx
	mov	edx, 12					; 0000000cH
	shl	edx, 0
	add	edx, DWORD PTR _a$[ebp]
	push	edx
	call	?Add@Vector3@@SAXABV1@0PAV1@@Z		; Vector3::Add
	add	esp, 12					; 0000000cH

; 254  : 		Vector3::Add(a.Row[2],b.Row[2],&(res->Row[2]));

	mov	eax, 12					; 0000000cH
	shl	eax, 1
	add	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _b$[ebp]
	push	ecx
	mov	edx, 12					; 0000000cH
	shl	edx, 1
	add	edx, DWORD PTR _a$[ebp]
	push	edx
	call	?Add@Vector3@@SAXABV1@0PAV1@@Z		; Vector3::Add
	add	esp, 12					; 0000000cH

; 255  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Add@Matrix3@@SAXABV1@0PAV1@@Z ENDP			; Matrix3::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??D@YA?AVVector3@@ABVMatrix3@@ABV0@@Z
_TEXT	SEGMENT
tv246 = -88						; size = 4
tv244 = -84						; size = 4
tv242 = -80						; size = 4
tv240 = -76						; size = 4
tv238 = -72						; size = 4
tv236 = -68						; size = 4
___$ReturnUdt$ = 8					; size = 4
_a$ = 12						; size = 4
_v$ = 16						; size = 4
??D@YA?AVVector3@@ABVMatrix3@@ABV0@@Z PROC		; operator*, COMDAT

; 398  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 399  : 	return Vector3(
; 400  : 		a[0][0] * v[0] + a[0][1] * v[1] + a[0][2] * v[2],
; 401  : 		a[1][0] * v[0] + a[1][1] * v[1] + a[1][2] * v[2],
; 402  : 		a[2][0] * v[0] + a[2][1] * v[1] + a[2][2] * v[2] 
; 403  : 	);

	push	0
	push	2
	mov	ecx, DWORD PTR _a$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	push	2
	mov	ecx, DWORD PTR _a$[ebp]
	movss	DWORD PTR tv236[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv236[ebp]
	addss	xmm1, xmm0
	push	2
	push	2
	mov	ecx, DWORD PTR _a$[ebp]
	movss	DWORD PTR tv238[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv238[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	0
	push	1
	mov	ecx, DWORD PTR _a$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	push	1
	mov	ecx, DWORD PTR _a$[ebp]
	movss	DWORD PTR tv240[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv240[ebp]
	addss	xmm1, xmm0
	push	2
	push	1
	mov	ecx, DWORD PTR _a$[ebp]
	movss	DWORD PTR tv242[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv242[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	0
	push	0
	mov	ecx, DWORD PTR _a$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	push	0
	mov	ecx, DWORD PTR _a$[ebp]
	movss	DWORD PTR tv244[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv244[ebp]
	addss	xmm1, xmm0
	push	2
	push	0
	mov	ecx, DWORD PTR _a$[ebp]
	movss	DWORD PTR tv246[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv246[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 404  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??D@YA?AVVector3@@ABVMatrix3@@ABV0@@Z ENDP		; operator*
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_Z_Vector@Matrix3@@QBEXPAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_set_z$ = 8						; size = 4
?Get_Z_Vector@Matrix3@@QBEXPAVVector3@@@Z PROC		; Matrix3::Get_Z_Vector, COMDAT
; _this$ = ecx

; 234  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 235  : 		set_z->Set(Row[0][2], Row[1][2], Row[2][2]);

	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _set_z$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 236  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Z_Vector@Matrix3@@QBEXPAVVector3@@@Z ENDP		; Matrix3::Get_Z_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_Y_Vector@Matrix3@@QBEXPAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_set_y$ = 8						; size = 4
?Get_Y_Vector@Matrix3@@QBEXPAVVector3@@@Z PROC		; Matrix3::Get_Y_Vector, COMDAT
; _this$ = ecx

; 230  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 231  : 		set_y->Set(Row[0][1], Row[1][1], Row[2][1]);

	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _set_y$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 232  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Y_Vector@Matrix3@@QBEXPAVVector3@@@Z ENDP		; Matrix3::Get_Y_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_X_Vector@Matrix3@@QBEXPAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_set_x$ = 8						; size = 4
?Get_X_Vector@Matrix3@@QBEXPAVVector3@@@Z PROC		; Matrix3::Get_X_Vector, COMDAT
; _this$ = ecx

; 226  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 		set_x->Set(Row[0][0], Row[1][0], Row[2][0]);

	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _set_x$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 228  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_X_Vector@Matrix3@@QBEXPAVVector3@@@Z ENDP		; Matrix3::Get_X_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_Z_Vector@Matrix3@@QBE?AVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Get_Z_Vector@Matrix3@@QBE?AVVector3@@XZ PROC		; Matrix3::Get_Z_Vector, COMDAT
; _this$ = ecx

; 222  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 223  : 		return Vector3(Row[0][2], Row[1][2], Row[2][2]);

	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 224  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Z_Vector@Matrix3@@QBE?AVVector3@@XZ ENDP		; Matrix3::Get_Z_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_Y_Vector@Matrix3@@QBE?AVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Get_Y_Vector@Matrix3@@QBE?AVVector3@@XZ PROC		; Matrix3::Get_Y_Vector, COMDAT
; _this$ = ecx

; 218  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 219  : 		return Vector3(Row[0][1], Row[1][1], Row[2][1]);

	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 220  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Y_Vector@Matrix3@@QBE?AVVector3@@XZ ENDP		; Matrix3::Get_Y_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_X_Vector@Matrix3@@QBE?AVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Get_X_Vector@Matrix3@@QBE?AVVector3@@XZ PROC		; Matrix3::Get_X_Vector, COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 		return Vector3(Row[0][0], Row[1][0], Row[2][0]);

	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 216  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_X_Vector@Matrix3@@QBE?AVVector3@@XZ ENDP		; Matrix3::Get_X_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_Z_Rotation@Matrix3@@QBEMXZ
_TEXT	SEGMENT
$T1 = -92						; size = 12
_v$ = -16						; size = 12
_this$ = -4						; size = 4
?Get_Z_Rotation@Matrix3@@QBEMXZ PROC			; Matrix3::Get_Z_Rotation, COMDAT
; _this$ = ecx

; 209  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 210  : 		Vector3 v = (*this) * Vector3(1.0,0.0,0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	push	ecx
	call	??D@YA?AVVector3@@ABVMatrix3@@ABV0@@Z	; operator*
	add	esp, 12					; 0000000cH

; 211  : 		return atan2(v[1],v[0]);

	push	0
	lea	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	lea	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	call	?atan2@@YAMMM@Z				; atan2
	add	esp, 8

; 212  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Z_Rotation@Matrix3@@QBEMXZ ENDP			; Matrix3::Get_Z_Rotation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_Y_Rotation@Matrix3@@QBEMXZ
_TEXT	SEGMENT
$T1 = -92						; size = 12
_v$ = -16						; size = 12
_this$ = -4						; size = 4
?Get_Y_Rotation@Matrix3@@QBEMXZ PROC			; Matrix3::Get_Y_Rotation, COMDAT
; _this$ = ecx

; 204  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 205  : 		Vector3 v = (*this) * Vector3(0.0,0.0,1.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	push	ecx
	call	??D@YA?AVVector3@@ABVMatrix3@@ABV0@@Z	; operator*
	add	esp, 12					; 0000000cH

; 206  : 		return atan2(v[0],v[2]);

	push	2
	lea	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	lea	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	call	?atan2@@YAMMM@Z				; atan2
	add	esp, 8

; 207  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Y_Rotation@Matrix3@@QBEMXZ ENDP			; Matrix3::Get_Y_Rotation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_X_Rotation@Matrix3@@QBEMXZ
_TEXT	SEGMENT
$T1 = -92						; size = 12
_v$ = -16						; size = 12
_this$ = -4						; size = 4
?Get_X_Rotation@Matrix3@@QBEMXZ PROC			; Matrix3::Get_X_Rotation, COMDAT
; _this$ = ecx

; 199  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 200  : 		Vector3 v = (*this) * Vector3(0.0,1.0,0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	push	ecx
	call	??D@YA?AVVector3@@ABVMatrix3@@ABV0@@Z	; operator*
	add	esp, 12					; 0000000cH

; 201  : 		return atan2(v[2], v[1]);

	push	1
	lea	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	lea	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	call	?atan2@@YAMMM@Z				; atan2
	add	esp, 8

; 202  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_X_Rotation@Matrix3@@QBEMXZ ENDP			; Matrix3::Get_X_Rotation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Rotate_Z@Matrix3@@QAEXMM@Z
_TEXT	SEGMENT
tv248 = -80						; size = 4
tv246 = -80						; size = 4
tv244 = -80						; size = 4
tv242 = -80						; size = 4
tv240 = -80						; size = 4
tv238 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Rotate_Z@Matrix3@@QAEXMM@Z PROC			; Matrix3::Rotate_Z, COMDAT
; _this$ = ecx

; 186  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 187  : 		float tmp1,tmp2;
; 188  : 		tmp1 = Row[0][0]; tmp2 = Row[0][1];

	push	0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 189  : 		Row[0][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv238[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv238[ebp]
	movss	DWORD PTR [eax], xmm0

; 190  : 		Row[0][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv240[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv240[ebp]
	movss	DWORD PTR [eax], xmm0

; 191  : 		tmp1 = Row[1][0]; tmp2 = Row[1][1];

	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 192  : 		Row[1][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv242[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv242[ebp]
	movss	DWORD PTR [eax], xmm0

; 193  : 		Row[1][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv244[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv244[ebp]
	movss	DWORD PTR [eax], xmm0

; 194  : 		tmp1 = Row[2][0]; tmp2 = Row[2][1];

	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 195  : 		Row[2][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv246[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv246[ebp]
	movss	DWORD PTR [eax], xmm0

; 196  : 		Row[2][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv248[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv248[ebp]
	movss	DWORD PTR [eax], xmm0

; 197  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Rotate_Z@Matrix3@@QAEXMM@Z ENDP			; Matrix3::Rotate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Rotate_Z@Matrix3@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Rotate_Z@Matrix3@@QAEXM@Z PROC				; Matrix3::Rotate_Z, COMDAT
; _this$ = ecx

; 182  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 183  : 		Rotate_Z(sinf(theta),cosf(theta));

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Rotate_Z@Matrix3@@QAEXMM@Z		; Matrix3::Rotate_Z

; 184  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Rotate_Z@Matrix3@@QAEXM@Z ENDP				; Matrix3::Rotate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Rotate_Y@Matrix3@@QAEXMM@Z
_TEXT	SEGMENT
tv245 = -80						; size = 4
tv243 = -80						; size = 4
tv241 = -80						; size = 4
tv239 = -80						; size = 4
tv237 = -80						; size = 4
tv235 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Rotate_Y@Matrix3@@QAEXMM@Z PROC			; Matrix3::Rotate_Y, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		float tmp1,tmp2;
; 171  : 		tmp1 = Row[0][0]; tmp2 = Row[0][2];

	push	0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 172  : 		Row[0][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv235[ebp]
	movss	DWORD PTR [eax], xmm0

; 173  : 		Row[0][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv237[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv237[ebp]
	movss	DWORD PTR [eax], xmm0

; 174  : 		tmp1 = Row[1][0]; tmp2 = Row[1][2];

	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 175  : 		Row[1][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv239[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv239[ebp]
	movss	DWORD PTR [eax], xmm0

; 176  : 		Row[1][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv241[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv241[ebp]
	movss	DWORD PTR [eax], xmm0

; 177  : 		tmp1 = Row[2][0]; tmp2 = Row[2][2];

	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 178  : 		Row[2][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv243[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv243[ebp]
	movss	DWORD PTR [eax], xmm0

; 179  : 		Row[2][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv245[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv245[ebp]
	movss	DWORD PTR [eax], xmm0

; 180  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Rotate_Y@Matrix3@@QAEXMM@Z ENDP			; Matrix3::Rotate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Rotate_Y@Matrix3@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Rotate_Y@Matrix3@@QAEXM@Z PROC				; Matrix3::Rotate_Y, COMDAT
; _this$ = ecx

; 165  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 166  : 		Rotate_Y(sinf(theta),cosf(theta));

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Rotate_Y@Matrix3@@QAEXMM@Z		; Matrix3::Rotate_Y

; 167  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Rotate_Y@Matrix3@@QAEXM@Z ENDP				; Matrix3::Rotate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Rotate_X@Matrix3@@QAEXMM@Z
_TEXT	SEGMENT
tv248 = -80						; size = 4
tv246 = -80						; size = 4
tv244 = -80						; size = 4
tv242 = -80						; size = 4
tv240 = -80						; size = 4
tv238 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Rotate_X@Matrix3@@QAEXMM@Z PROC			; Matrix3::Rotate_X, COMDAT
; _this$ = ecx

; 152  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 153  : 		float tmp1,tmp2;
; 154  : 		tmp1 = Row[0][1]; tmp2 = Row[0][2];

	push	1
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 155  : 		Row[0][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv238[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv238[ebp]
	movss	DWORD PTR [eax], xmm0

; 156  : 		Row[0][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv240[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv240[ebp]
	movss	DWORD PTR [eax], xmm0

; 157  : 		tmp1 = Row[1][1]; tmp2 = Row[1][2];

	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 158  : 		Row[1][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv242[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv242[ebp]
	movss	DWORD PTR [eax], xmm0

; 159  : 		Row[1][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv244[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv244[ebp]
	movss	DWORD PTR [eax], xmm0

; 160  : 		tmp1 = Row[2][1]; tmp2 = Row[2][2];

	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 161  : 		Row[2][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv246[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv246[ebp]
	movss	DWORD PTR [eax], xmm0

; 162  : 		Row[2][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv248[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv248[ebp]
	movss	DWORD PTR [eax], xmm0

; 163  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Rotate_X@Matrix3@@QAEXMM@Z ENDP			; Matrix3::Rotate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Rotate_X@Matrix3@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Rotate_X@Matrix3@@QAEXM@Z PROC				; Matrix3::Rotate_X, COMDAT
; _this$ = ecx

; 148  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 149  : 		Rotate_X(sinf(theta),cosf(theta));

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Rotate_X@Matrix3@@QAEXMM@Z		; Matrix3::Rotate_X

; 150  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Rotate_X@Matrix3@@QAEXM@Z ENDP				; Matrix3::Rotate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Make_Identity@Matrix3@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Make_Identity@Matrix3@@QAEXXZ PROC			; Matrix3::Make_Identity, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		Row[0].Set(1.0f,0.0f,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 144  : 		Row[1].Set(0.0f,1.0f,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 145  : 		Row[2].Set(0.0f,0.0f,1.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 146  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Make_Identity@Matrix3@@QAEXXZ ENDP			; Matrix3::Make_Identity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??_0Matrix3@@QAEAAV0@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_d$ = 8							; size = 4
??_0Matrix3@@QAEAAV0@M@Z PROC				; Matrix3::operator/=, COMDAT
; _this$ = ecx

; 137  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 138  : 		Row[0] /= d; Row[1] /= d; Row[2] /= d; 

	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??_0Vector3@@QAEAAV0@M@Z		; Vector3::operator/=
	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??_0Vector3@@QAEAAV0@M@Z		; Vector3::operator/=
	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??_0Vector3@@QAEAAV0@M@Z		; Vector3::operator/=

; 139  : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 140  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_0Matrix3@@QAEAAV0@M@Z ENDP				; Matrix3::operator/=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??XMatrix3@@QAEAAV0@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_d$ = 8							; size = 4
??XMatrix3@@QAEAAV0@M@Z PROC				; Matrix3::operator*=, COMDAT
; _this$ = ecx

; 132  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 133  : 		Row[0] *= d; Row[1] *= d; Row[2] *= d; 

	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector3@@QAEAAV0@M@Z			; Vector3::operator*=
	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector3@@QAEAAV0@M@Z			; Vector3::operator*=
	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector3@@QAEAAV0@M@Z			; Vector3::operator*=

; 134  : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 135  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??XMatrix3@@QAEAAV0@M@Z ENDP				; Matrix3::operator*=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??ZMatrix3@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??ZMatrix3@@QAEAAV0@ABV0@@Z PROC			; Matrix3::operator-=, COMDAT
; _this$ = ecx

; 127  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 128  : 		Row[0] -= m.Row[0]; Row[1] -= m.Row[1]; Row[2] -= m.Row[2]; 

	mov	eax, 12					; 0000000cH
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??ZVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator-=
	mov	eax, 12					; 0000000cH
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??ZVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator-=
	mov	eax, 12					; 0000000cH
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??ZVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator-=

; 129  : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 130  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??ZMatrix3@@QAEAAV0@ABV0@@Z ENDP			; Matrix3::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??YMatrix3@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??YMatrix3@@QAEAAV0@ABV0@@Z PROC			; Matrix3::operator+=, COMDAT
; _this$ = ecx

; 122  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 123  : 		Row[0] += m.Row[0]; Row[1] += m.Row[1]; Row[2] += m.Row[2]; 

	mov	eax, 12					; 0000000cH
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??YVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator+=
	mov	eax, 12					; 0000000cH
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??YVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator+=
	mov	eax, 12					; 0000000cH
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??YVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator+=

; 124  : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 125  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??YMatrix3@@QAEAAV0@ABV0@@Z ENDP			; Matrix3::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??4Matrix3@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??4Matrix3@@QAEAAV0@ABV0@@Z PROC			; Matrix3::operator=, COMDAT
; _this$ = ecx

; 115  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 116  : 		Row[0] = m.Row[0]; Row[1] = m.Row[1]; Row[2] = m.Row[2];

	mov	eax, 12					; 0000000cH
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, 12					; 0000000cH
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, 12					; 0000000cH
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 117  : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 118  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Matrix3@@QAEAAV0@ABV0@@Z ENDP			; Matrix3::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Determinant@Matrix3@@QBEMXZ
_TEXT	SEGMENT
tv243 = -92						; size = 4
tv255 = -88						; size = 4
tv253 = -84						; size = 4
tv251 = -80						; size = 4
tv249 = -76						; size = 4
tv247 = -72						; size = 4
_this$ = -4						; size = 4
?Determinant@Matrix3@@QBEMXZ PROC			; Matrix3::Determinant, COMDAT
; _this$ = ecx

; 109  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 110  : 		return   Row[0][0] * (Row[1][1] * Row[2][2] - Row[1][2] * Row[2][1])
; 111  : 				- Row[0][1] * (Row[1][0] * Row[2][2] - Row[1][2] * Row[2][0])
; 112  : 				- Row[0][2] * (Row[1][0] * Row[2][1] - Row[1][1] * Row[2][0]);

	push	0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edi, eax
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, DWORD PTR [eax]
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv247[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edi, eax
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv247[ebp]
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR [esi]
	push	1
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv249[ebp], xmm1
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edi, eax
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, DWORD PTR [eax]
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv251[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edi, eax
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv251[ebp]
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR [esi]
	movss	xmm0, DWORD PTR tv249[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv253[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edi, eax
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv255[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edi, eax
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv255[ebp]
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR [esi]
	movss	xmm0, DWORD PTR tv253[ebp]
	subss	xmm0, xmm1
	movss	DWORD PTR tv243[ebp], xmm0
	fld	DWORD PTR tv243[ebp]

; 113  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Determinant@Matrix3@@QBEMXZ ENDP			; Matrix3::Determinant
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Transpose@Matrix3@@QBE?AV1@XZ
_TEXT	SEGMENT
$T1 = -104						; size = 12
$T2 = -92						; size = 12
$T3 = -80						; size = 12
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Transpose@Matrix3@@QBE?AV1@XZ PROC			; Matrix3::Transpose, COMDAT
; _this$ = ecx

; 101  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 104				; 00000068H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 102  : 		return Matrix3(
; 103  : 				Vector3(Row[0][0], Row[1][0], Row[2][0]),
; 104  : 				Vector3(Row[0][1], Row[1][1], Row[2][1]),
; 105  : 				Vector3(Row[0][2], Row[1][2], Row[2][2])
; 106  : 		);

	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Matrix3@@QAE@ABVVector3@@00@Z	; Matrix3::Matrix3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 107  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Transpose@Matrix3@@QBE?AV1@XZ ENDP			; Matrix3::Transpose
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??AMatrix3@@QBEABVVector3@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AMatrix3@@QBEABVVector3@@H@Z PROC			; Matrix3::operator[], COMDAT
; _this$ = ecx

; 99   : 	TT_INLINE const Vector3 & operator [] (int i) const { return Row[i]; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	add	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AMatrix3@@QBEABVVector3@@H@Z ENDP			; Matrix3::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??AMatrix3@@QAEAAVVector3@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AMatrix3@@QAEAAVVector3@@H@Z PROC			; Matrix3::operator[], COMDAT
; _this$ = ecx

; 98   : 	TT_INLINE Vector3 & operator [] (int i) { return Row[i]; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	add	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AMatrix3@@QAEAAVVector3@@H@Z ENDP			; Matrix3::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Set@Matrix3@@QAEXABVVector3@@MM@Z
_TEXT	SEGMENT
tv359 = -80						; size = 4
tv353 = -80						; size = 4
tv347 = -80						; size = 4
tv357 = -76						; size = 4
tv351 = -76						; size = 4
tv345 = -76						; size = 4
tv355 = -72						; size = 4
tv349 = -72						; size = 4
tv343 = -72						; size = 4
_this$ = -4						; size = 4
_axis$ = 8						; size = 4
_s$ = 12						; size = 4
_c$ = 16						; size = 4
?Set@Matrix3@@QAEXABVVector3@@MM@Z PROC			; Matrix3::Set, COMDAT
; _this$ = ecx

; 80   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 81   : 		Row[0].Set(
; 82   : 			(float)(axis[0]*axis[0] + c*(1.0f - axis[0]*axis[0])),
; 83   : 			(float)(axis[0]*axis[1]*(1.0f - c) - axis[2]*s),
; 84   : 			(float)(axis[2]*axis[0]*(1.0f - c) + axis[1]*s)
; 85   : 		);

	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv343[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv343[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv345[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv345[ebp]
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv347[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR _c$[ebp]
	movss	xmm0, DWORD PTR tv347[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 86   : 		Row[1].Set(
; 87   : 			(float)(axis[0]*axis[1]*(1.0f - c) + axis[2]*s),
; 88   : 			(float)(axis[1]*axis[1] + c*(1.0f - axis[1]*axis[1])),
; 89   : 			(float)(axis[1]*axis[2]*(1.0f - c) - axis[0]*s)
; 90   : 		);

	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv349[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv349[ebp]
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv351[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR _c$[ebp]
	movss	xmm0, DWORD PTR tv351[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv353[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv353[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 91   : 	Row[2].Set(
; 92   : 			(float)(axis[2]*axis[0]*(1.0f - c) - axis[1]*s),
; 93   : 			(float)(axis[1]*axis[2]*(1.0f - c) + axis[0]*s),
; 94   : 			(float)(axis[2]*axis[2] + c*(1 - axis[2]*axis[2]))
; 95   : 		);

	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv355[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR _c$[ebp]
	movss	xmm0, DWORD PTR tv355[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv357[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv357[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv359[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv359[ebp]
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 96   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Set@Matrix3@@QAEXABVVector3@@MM@Z ENDP			; Matrix3::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Set@Matrix3@@QAEXABVVector3@@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_axis$ = 8						; size = 4
_angle$ = 12						; size = 4
?Set@Matrix3@@QAEXABVVector3@@M@Z PROC			; Matrix3::Set, COMDAT
; _this$ = ecx

; 76   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 77   : 		Set(axis,sinf(angle),cosf(angle));

	push	ecx
	movss	xmm0, DWORD PTR _angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _axis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3@@QAEXABVVector3@@MM@Z	; Matrix3::Set

; 78   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Set@Matrix3@@QAEXABVVector3@@M@Z ENDP			; Matrix3::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Set@Matrix3@@QAEXMMMMMMMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m11$ = 8						; size = 4
_m12$ = 12						; size = 4
_m13$ = 16						; size = 4
_m21$ = 20						; size = 4
_m22$ = 24						; size = 4
_m23$ = 28						; size = 4
_m31$ = 32						; size = 4
_m32$ = 36						; size = 4
_m33$ = 40						; size = 4
?Set@Matrix3@@QAEXMMMMMMMMM@Z PROC			; Matrix3::Set, COMDAT
; _this$ = ecx

; 70   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 71   : 		Row[0].Set(m11,m12,m13);

	push	ecx
	movss	xmm0, DWORD PTR _m13$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m12$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m11$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 72   : 		Row[1].Set(m21,m22,m23);

	push	ecx
	movss	xmm0, DWORD PTR _m23$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m22$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m21$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 73   : 		Row[2].Set(m31,m32,m33);

	push	ecx
	movss	xmm0, DWORD PTR _m33$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m32$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m31$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 74   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
?Set@Matrix3@@QAEXMMMMMMMMM@Z ENDP			; Matrix3::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Set@Matrix3@@QAEXABVVector3@@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
?Set@Matrix3@@QAEXABVVector3@@00@Z PROC			; Matrix3::Set, COMDAT
; _this$ = ecx

; 64   : 	{ 

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 65   : 		Row[0] = v0; 

	mov	eax, DWORD PTR _v0$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 66   : 		Row[1] = v1; 

	mov	eax, DWORD PTR _v1$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 67   : 		Row[2] = v2; 

	mov	eax, DWORD PTR _v2$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 68   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Set@Matrix3@@QAEXABVVector3@@00@Z ENDP			; Matrix3::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??0Matrix3@@QAE@ABVQuaternion@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_q$ = 8							; size = 4
??0Matrix3@@QAE@ABVQuaternion@@@Z PROC			; Matrix3::Matrix3, COMDAT
; _this$ = ecx

; 57   : 	TT_INLINE Matrix3(const Quaternion & q)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	3
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 58   : 	{
; 59   : 		this->Set(q);

	mov	eax, DWORD PTR _q$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3@@QAEXABVQuaternion@@@Z	; Matrix3::Set

; 60   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix3@@QAE@ABVQuaternion@@@Z ENDP			; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??0Matrix3@@QAE@ABVVector3@@MM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_axis$ = 8						; size = 4
_s_angle$ = 12						; size = 4
_c_angle$ = 16						; size = 4
??0Matrix3@@QAE@ABVVector3@@MM@Z PROC			; Matrix3::Matrix3, COMDAT
; _this$ = ecx

; 53   : 	TT_INLINE explicit Matrix3(const Vector3 & axis,float s_angle,float c_angle)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	3
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 54   : 	{ 
; 55   : 		Set(axis,s_angle,c_angle); 

	push	ecx
	movss	xmm0, DWORD PTR _c_angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _s_angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _axis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3@@QAEXABVVector3@@MM@Z	; Matrix3::Set

; 56   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0Matrix3@@QAE@ABVVector3@@MM@Z ENDP			; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??0Matrix3@@QAE@ABVVector3@@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_axis$ = 8						; size = 4
_angle$ = 12						; size = 4
??0Matrix3@@QAE@ABVVector3@@M@Z PROC			; Matrix3::Matrix3, COMDAT
; _this$ = ecx

; 49   : 	TT_INLINE explicit Matrix3(const Vector3 & axis,float angle)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	3
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 50   : 	{ 
; 51   : 		Set(axis,angle); 

	push	ecx
	movss	xmm0, DWORD PTR _angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _axis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3@@QAEXABVVector3@@M@Z	; Matrix3::Set

; 52   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0Matrix3@@QAE@ABVVector3@@M@Z ENDP			; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??0Matrix3@@QAE@MMMMMMMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m11$ = 8						; size = 4
_m12$ = 12						; size = 4
_m13$ = 16						; size = 4
_m21$ = 20						; size = 4
_m22$ = 24						; size = 4
_m23$ = 28						; size = 4
_m31$ = 32						; size = 4
_m32$ = 36						; size = 4
_m33$ = 40						; size = 4
??0Matrix3@@QAE@MMMMMMMMM@Z PROC			; Matrix3::Matrix3, COMDAT
; _this$ = ecx

; 43   : 	TT_INLINE explicit Matrix3(float m11,float m12,float m13,float m21,float m22,float m23,float m31,float m32,float m33)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	3
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 44   : 	{
; 45   : 		Row[0].Set(m11,m12,m13);

	push	ecx
	movss	xmm0, DWORD PTR _m13$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m12$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m11$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 46   : 		Row[1].Set(m21,m22,m23);

	push	ecx
	movss	xmm0, DWORD PTR _m23$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m22$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m21$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 47   : 		Row[2].Set(m31,m32,m33);

	push	ecx
	movss	xmm0, DWORD PTR _m33$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m32$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m31$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 48   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
??0Matrix3@@QAE@MMMMMMMMM@Z ENDP			; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??0Matrix3@@QAE@ABVVector3@@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0Matrix3@@QAE@ABVVector3@@00@Z PROC			; Matrix3::Matrix3, COMDAT
; _this$ = ecx

; 35   : 	TT_INLINE explicit Matrix3(const Vector3 & v0, const Vector3 & v1, const Vector3 & v2)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	3
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 36   : 	{ 
; 37   : 		Row[0] = v0; 

	mov	eax, DWORD PTR _v0$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 38   : 		Row[1] = v1; 

	mov	eax, DWORD PTR _v1$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 39   : 		Row[2] = v2; 

	mov	eax, DWORD PTR _v2$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 40   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0Matrix3@@QAE@ABVVector3@@00@Z ENDP			; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??0Matrix3@@QAE@_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_identity$ = 8						; size = 1
??0Matrix3@@QAE@_N@Z PROC				; Matrix3::Matrix3, COMDAT
; _this$ = ecx

; 26   : 	TT_INLINE explicit Matrix3(bool identity)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	3
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 27   : 	{
; 28   : 		if (identity)

	movzx	eax, BYTE PTR _identity$[ebp]
	test	eax, eax
	je	$LN1@Matrix3

; 29   : 		{
; 30   : 			Row[0].Set(1.0,0.0,0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 31   : 			Row[1].Set(0.0,1.0,0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 32   : 			Row[2].Set(0.0,0.0,1.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set
$LN1@Matrix3:

; 33   : 		}
; 34   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix3@@QAE@_N@Z ENDP				; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??0Matrix3@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??0Matrix3@@QAE@ABV0@@Z PROC				; Matrix3::Matrix3, COMDAT
; _this$ = ecx

; 22   : 	TT_INLINE Matrix3(const Matrix3 & m)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	3
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 23   : 	{
; 24   : 		Row[0] = m.Row[0]; Row[1] = m.Row[1]; Row[2] = m.Row[2];

	mov	eax, 12					; 0000000cH
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, 12					; 0000000cH
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, 12					; 0000000cH
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 25   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix3@@QAE@ABV0@@Z ENDP				; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??0Matrix3@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Matrix3@@QAE@XZ PROC					; Matrix3::Matrix3, COMDAT
; _this$ = ecx

; 21   : 	TT_INLINE Matrix3(void) {};

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	3
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Matrix3@@QAE@XZ ENDP					; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Transform_Vector@Matrix4@@SAXABV1@ABVVector4@@PAV2@@Z
_TEXT	SEGMENT
tv342 = -96						; size = 4
tv336 = -96						; size = 4
tv330 = -96						; size = 4
tv324 = -96						; size = 4
tv340 = -92						; size = 4
tv334 = -92						; size = 4
tv328 = -92						; size = 4
tv322 = -92						; size = 4
tv338 = -88						; size = 4
tv332 = -88						; size = 4
tv326 = -88						; size = 4
tv320 = -88						; size = 4
_v$ = -20						; size = 4
_tmp$ = -16						; size = 16
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Transform_Vector@Matrix4@@SAXABV1@ABVVector4@@PAV2@@Z PROC ; Matrix4::Transform_Vector, COMDAT

; 227  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi

; 228  : 		Vector4 tmp;

	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector4@@QAE@XZ			; Vector4::Vector4

; 229  : 		Vector4 * v;
; 230  : 		if (out == &in)

	mov	eax, DWORD PTR _out$[ebp]
	cmp	eax, DWORD PTR _in$[ebp]
	jne	SHORT $LN2@Transform_

; 231  : 		{
; 232  : 			tmp = in;

	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 233  : 			v = &tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR _v$[ebp], eax

; 234  : 		}
; 235  : 		else

	jmp	SHORT $LN1@Transform_
$LN2@Transform_:

; 236  : 		{
; 237  : 			v = (Vector4 *)&in;

	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@Transform_:

; 238  : 		}
; 239  : 		out->X = (A[0][0] * v->X + A[0][1] * v->Y + A[0][2] * v->Z + A[0][3] * v->W);

	push	0
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv320[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv320[ebp]
	addss	xmm1, xmm0
	push	2
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv322[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv322[ebp]
	addss	xmm1, xmm0
	push	3
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv324[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+12]
	movss	xmm1, DWORD PTR tv324[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR _out$[ebp]
	movss	DWORD PTR [eax], xmm1

; 240  : 		out->Y = (A[1][0] * v->X + A[1][1] * v->Y + A[1][2] * v->Z + A[1][3] * v->W);

	push	0
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv326[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv326[ebp]
	addss	xmm1, xmm0
	push	2
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv328[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv328[ebp]
	addss	xmm1, xmm0
	push	3
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv330[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+12]
	movss	xmm1, DWORD PTR tv330[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR _out$[ebp]
	movss	DWORD PTR [eax+4], xmm1

; 241  : 		out->Z = (A[2][0] * v->X + A[2][1] * v->Y + A[2][2] * v->Z + A[2][3] * v->W);

	push	0
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv332[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv332[ebp]
	addss	xmm1, xmm0
	push	2
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv334[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv334[ebp]
	addss	xmm1, xmm0
	push	3
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv336[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+12]
	movss	xmm1, DWORD PTR tv336[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR _out$[ebp]
	movss	DWORD PTR [eax+8], xmm1

; 242  : 		out->W = (A[3][0] * v->X + A[3][1] * v->Y + A[3][2] * v->Z + A[3][3] * v->W);

	push	0
	push	3
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	3
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv338[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv338[ebp]
	addss	xmm1, xmm0
	push	2
	push	3
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv340[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv340[ebp]
	addss	xmm1, xmm0
	push	3
	push	3
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv342[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+12]
	movss	xmm1, DWORD PTR tv342[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR _out$[ebp]
	movss	DWORD PTR [eax+12], xmm1

; 243  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Transform_Vector@Matrix4@@SAXABV1@ABVVector4@@PAV2@@Z ENDP ; Matrix4::Transform_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Transform_Vector@Matrix4@@SAXABV1@ABVVector3@@PAVVector4@@@Z
_TEXT	SEGMENT
tv265 = -76						; size = 4
tv259 = -76						; size = 4
tv253 = -76						; size = 4
tv263 = -72						; size = 4
tv257 = -72						; size = 4
tv251 = -72						; size = 4
tv261 = -68						; size = 4
tv255 = -68						; size = 4
tv249 = -68						; size = 4
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Transform_Vector@Matrix4@@SAXABV1@ABVVector3@@PAVVector4@@@Z PROC ; Matrix4::Transform_Vector, COMDAT

; 220  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi

; 221  : 		out->X = (A[0][0] * in.X + A[0][1] * in.Y + A[0][2] * in.Z + A[0][3]);

	push	0
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv249[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv249[ebp]
	addss	xmm1, xmm0
	push	2
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv251[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv251[ebp]
	addss	xmm1, xmm0
	push	3
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv253[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv253[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx], xmm0

; 222  : 		out->Y = (A[1][0] * in.X + A[1][1] * in.Y + A[1][2] * in.Z + A[1][3]);

	push	0
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv255[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv255[ebp]
	addss	xmm1, xmm0
	push	2
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv257[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv257[ebp]
	addss	xmm1, xmm0
	push	3
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv259[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv259[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+4], xmm0

; 223  : 		out->Z = (A[2][0] * in.X + A[2][1] * in.Y + A[2][2] * in.Z + A[2][3]);

	push	0
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv261[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv261[ebp]
	addss	xmm1, xmm0
	push	2
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv263[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv263[ebp]
	addss	xmm1, xmm0
	push	3
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv265[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv265[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+8], xmm0

; 224  : 		out->W = 1.0f;

	mov	eax, DWORD PTR _out$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+12], xmm0

; 225  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Transform_Vector@Matrix4@@SAXABV1@ABVVector3@@PAVVector4@@@Z ENDP ; Matrix4::Transform_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Transform_Vector@Matrix4@@SAXABV1@ABVVector3@@PAV2@@Z
_TEXT	SEGMENT
tv270 = -92						; size = 4
tv264 = -92						; size = 4
tv258 = -92						; size = 4
tv268 = -88						; size = 4
tv262 = -88						; size = 4
tv256 = -88						; size = 4
tv266 = -84						; size = 4
tv260 = -84						; size = 4
tv254 = -84						; size = 4
_v$ = -16						; size = 4
_tmp$ = -12						; size = 12
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Transform_Vector@Matrix4@@SAXABV1@ABVVector3@@PAV2@@Z PROC ; Matrix4::Transform_Vector, COMDAT

; 203  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi

; 204  : 		Vector3 tmp;

	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 205  : 		Vector3 *v;
; 206  : 		if (out == &in)

	mov	eax, DWORD PTR _out$[ebp]
	cmp	eax, DWORD PTR _in$[ebp]
	jne	SHORT $LN2@Transform_

; 207  : 		{
; 208  : 			tmp = in;

	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 209  : 			v = &tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR _v$[ebp], eax

; 210  : 		}
; 211  : 		else

	jmp	SHORT $LN1@Transform_
$LN2@Transform_:

; 212  : 		{
; 213  : 			v = (Vector3 *)&in;

	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@Transform_:

; 214  : 		}
; 215  : 		out->X = (A[0][0] * v->X + A[0][1] * v->Y + A[0][2] * v->Z + A[0][3]);

	push	0
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv254[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv254[ebp]
	addss	xmm1, xmm0
	push	2
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv256[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv256[ebp]
	addss	xmm1, xmm0
	push	3
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv258[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv258[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx], xmm0

; 216  : 		out->Y = (A[1][0] * v->X + A[1][1] * v->Y + A[1][2] * v->Z + A[1][3]);

	push	0
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv260[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv260[ebp]
	addss	xmm1, xmm0
	push	2
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv262[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv262[ebp]
	addss	xmm1, xmm0
	push	3
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv264[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv264[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+4], xmm0

; 217  : 		out->Z = (A[2][0] * v->X + A[2][1] * v->Y + A[2][2] * v->Z + A[2][3]);

	push	0
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv266[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv266[ebp]
	addss	xmm1, xmm0
	push	2
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv268[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv268[ebp]
	addss	xmm1, xmm0
	push	3
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv270[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv270[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+8], xmm0

; 218  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Transform_Vector@Matrix4@@SAXABV1@ABVVector3@@PAV2@@Z ENDP ; Matrix4::Transform_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??_0Matrix4@@QAEAAV0@M@Z
_TEXT	SEGMENT
_ood$ = -8						; size = 4
_this$ = -4						; size = 4
_d$ = 8							; size = 4
??_0Matrix4@@QAEAAV0@M@Z PROC				; Matrix4::operator/=, COMDAT
; _this$ = ecx

; 177  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 178  : 		float ood = d;

	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR _ood$[ebp], xmm0

; 179  : 		Row[0] *= ood; Row[1] *= ood; Row[2] *= ood; Row[3] *= ood;

	push	ecx
	movss	xmm0, DWORD PTR _ood$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector4@@QAEAAV0@M@Z			; Vector4::operator*=
	push	ecx
	movss	xmm0, DWORD PTR _ood$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector4@@QAEAAV0@M@Z			; Vector4::operator*=
	push	ecx
	movss	xmm0, DWORD PTR _ood$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector4@@QAEAAV0@M@Z			; Vector4::operator*=
	push	ecx
	movss	xmm0, DWORD PTR _ood$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector4@@QAEAAV0@M@Z			; Vector4::operator*=

; 180  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 181  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_0Matrix4@@QAEAAV0@M@Z ENDP				; Matrix4::operator/=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??XMatrix4@@QAEAAV0@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_d$ = 8							; size = 4
??XMatrix4@@QAEAAV0@M@Z PROC				; Matrix4::operator*=, COMDAT
; _this$ = ecx

; 172  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 173  : 		Row[0] *= d; Row[1] *= d; Row[2] *= d; Row[3] *= d;

	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector4@@QAEAAV0@M@Z			; Vector4::operator*=
	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector4@@QAEAAV0@M@Z			; Vector4::operator*=
	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector4@@QAEAAV0@M@Z			; Vector4::operator*=
	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector4@@QAEAAV0@M@Z			; Vector4::operator*=

; 174  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 175  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??XMatrix4@@QAEAAV0@M@Z ENDP				; Matrix4::operator*=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??ZMatrix4@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??ZMatrix4@@QAEAAV0@ABV0@@Z PROC			; Matrix4::operator-=, COMDAT
; _this$ = ecx

; 167  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 168  : 		Row[0] -= m.Row[0]; Row[1] -= m.Row[1]; Row[2] -= m.Row[2]; Row[3] -= m.Row[3];

	mov	eax, 16					; 00000010H
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??ZVector4@@QAEAAV0@ABV0@@Z		; Vector4::operator-=
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??ZVector4@@QAEAAV0@ABV0@@Z		; Vector4::operator-=
	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??ZVector4@@QAEAAV0@ABV0@@Z		; Vector4::operator-=
	mov	eax, 16					; 00000010H
	imul	eax, 3
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??ZVector4@@QAEAAV0@ABV0@@Z		; Vector4::operator-=

; 169  : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 170  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??ZMatrix4@@QAEAAV0@ABV0@@Z ENDP			; Matrix4::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??YMatrix4@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??YMatrix4@@QAEAAV0@ABV0@@Z PROC			; Matrix4::operator+=, COMDAT
; _this$ = ecx

; 162  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 		Row[0] += m.Row[0]; Row[1] += m.Row[1]; Row[2] += m.Row[2]; Row[3] += m.Row[3];

	mov	eax, 16					; 00000010H
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??YVector4@@QAEAAV0@ABV0@@Z		; Vector4::operator+=
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??YVector4@@QAEAAV0@ABV0@@Z		; Vector4::operator+=
	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??YVector4@@QAEAAV0@ABV0@@Z		; Vector4::operator+=
	mov	eax, 16					; 00000010H
	imul	eax, 3
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??YVector4@@QAEAAV0@ABV0@@Z		; Vector4::operator+=

; 164  : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 165  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??YMatrix4@@QAEAAV0@ABV0@@Z ENDP			; Matrix4::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??4Matrix4@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??4Matrix4@@QAEAAV0@ABV0@@Z PROC			; Matrix4::operator=, COMDAT
; _this$ = ecx

; 157  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 158  : 		Row[0] = m.Row[0]; Row[1] = m.Row[1]; Row[2] = m.Row[2]; Row[3] = m.Row[3];

	mov	eax, 16					; 00000010H
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, 16					; 00000010H
	imul	eax, 3
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 159  : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 160  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Matrix4@@QAEAAV0@ABV0@@Z ENDP			; Matrix4::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Inverse@Matrix4@@QBE?AV1@XZ
_TEXT	SEGMENT
_t$ = -72						; size = 64
_s$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Inverse@Matrix4@@QBE?AV1@XZ PROC			; Matrix4::Inverse, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 136				; 00000088H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 134  : 		float s = Determinant();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Determinant@Matrix4@@QBEMXZ		; Matrix4::Determinant
	fstp	DWORD PTR _s$[ebp]

; 135  : 		if (s == 0.0) return Matrix4();

	cvtss2sd xmm0, DWORD PTR _s$[ebp]
	ucomisd	xmm0, QWORD PTR __real@0000000000000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN1@Inverse
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Matrix4@@QAE@XZ			; Matrix4::Matrix4
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN2@Inverse
$LN1@Inverse:

; 136  : 		s = 1/s;

	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR _s$[ebp]
	movss	DWORD PTR _s$[ebp], xmm0

; 137  : 		Matrix4 t;

	lea	ecx, DWORD PTR _t$[ebp]
	call	??0Matrix4@@QAE@XZ			; Matrix4::Matrix4

; 138  : 		t.Row[0].X = s*(Row[1].Y*(Row[2].Z*Row[3].W - Row[2].W*Row[3].Z) + Row[1].Z*(Row[2].W*Row[3].Y - Row[2].Y*Row[3].W) + Row[1].W*(Row[2].Y*Row[3].Z - Row[2].Z*Row[3].Y));

	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+8]
	mulss	xmm0, DWORD PTR [edi+edx+12]
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+12]
	mulss	xmm1, DWORD PTR [edi+edx+8]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+4]
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+12]
	mulss	xmm1, DWORD PTR [edi+ecx+4]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+4]
	mulss	xmm2, DWORD PTR [edi+ecx+12]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+8]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+4]
	mulss	xmm1, DWORD PTR [edi+eax+8]
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+8]
	mulss	xmm2, DWORD PTR [edi+eax+4]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+12]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	movss	DWORD PTR _t$[ebp+eax], xmm0

; 139  : 		t.Row[0].Y = s*(Row[2].Y*(Row[0].Z*Row[3].W - Row[0].W*Row[3].Z) + Row[2].Z*(Row[0].W*Row[3].Y - Row[0].Y*Row[3].W) + Row[2].W*(Row[0].Y*Row[3].Z - Row[0].Z*Row[3].Y));

	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+8]
	mulss	xmm0, DWORD PTR [edi+edx+12]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+12]
	mulss	xmm1, DWORD PTR [edi+edx+8]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+4]
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+12]
	mulss	xmm1, DWORD PTR [edi+ecx+4]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+4]
	mulss	xmm2, DWORD PTR [edi+ecx+12]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+8]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+4]
	mulss	xmm1, DWORD PTR [edi+eax+8]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+8]
	mulss	xmm2, DWORD PTR [edi+eax+4]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+12]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	movss	DWORD PTR _t$[ebp+eax+4], xmm0

; 140  : 		t.Row[0].Z = s*(Row[3].Y*(Row[0].Z*Row[1].W - Row[0].W*Row[1].Z) + Row[3].Z*(Row[0].W*Row[1].Y - Row[0].Y*Row[1].W) + Row[3].W*(Row[0].Y*Row[1].Z - Row[0].Z*Row[1].Y));

	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+8]
	mulss	xmm0, DWORD PTR [edi+edx+12]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+12]
	mulss	xmm1, DWORD PTR [edi+edx+8]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+4]
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+12]
	mulss	xmm1, DWORD PTR [edi+ecx+4]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+4]
	mulss	xmm2, DWORD PTR [edi+ecx+12]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+8]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+4]
	mulss	xmm1, DWORD PTR [edi+eax+8]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+8]
	mulss	xmm2, DWORD PTR [edi+eax+4]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+12]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	movss	DWORD PTR _t$[ebp+eax+8], xmm0

; 141  : 		t.Row[0].W = s*(Row[0].Y*(Row[1].W*Row[2].Z - Row[1].Z*Row[2].W) + Row[0].Z*(Row[1].Y*Row[2].W - Row[1].W*Row[2].Y) + Row[0].W*(Row[1].Z*Row[2].Y - Row[1].Y*Row[2].Z));

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+12]
	mulss	xmm0, DWORD PTR [edi+edx+8]
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+8]
	mulss	xmm1, DWORD PTR [edi+edx+12]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+4]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+4]
	mulss	xmm1, DWORD PTR [edi+ecx+12]
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+12]
	mulss	xmm2, DWORD PTR [edi+ecx+4]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+8]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+8]
	mulss	xmm1, DWORD PTR [edi+eax+4]
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+4]
	mulss	xmm2, DWORD PTR [edi+eax+8]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+12]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	movss	DWORD PTR _t$[ebp+eax+12], xmm0

; 142  : 		t.Row[1].X = s*(Row[1].Z*(Row[2].X*Row[3].W - Row[2].W*Row[3].X) + Row[1].W*(Row[2].Z*Row[3].X - Row[2].X*Row[3].Z) + Row[1].X*(Row[2].W*Row[3].Z - Row[2].Z*Row[3].W));

	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx]
	mulss	xmm0, DWORD PTR [edi+edx+12]
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+12]
	mulss	xmm1, DWORD PTR [edi+edx]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+8]
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+8]
	mulss	xmm1, DWORD PTR [edi+ecx]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax]
	mulss	xmm2, DWORD PTR [edi+ecx+8]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+12]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+12]
	mulss	xmm1, DWORD PTR [edi+eax+8]
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+8]
	mulss	xmm2, DWORD PTR [edi+eax+12]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	shl	eax, 0
	movss	DWORD PTR _t$[ebp+eax], xmm0

; 143  : 		t.Row[1].Y = s*(Row[2].Z*(Row[0].X*Row[3].W - Row[0].W*Row[3].X) + Row[2].W*(Row[0].Z*Row[3].X - Row[0].X*Row[3].Z) + Row[2].X*(Row[0].W*Row[3].Z - Row[0].Z*Row[3].W));

	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx]
	mulss	xmm0, DWORD PTR [edi+edx+12]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+12]
	mulss	xmm1, DWORD PTR [edi+edx]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+8]
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+8]
	mulss	xmm1, DWORD PTR [edi+ecx]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax]
	mulss	xmm2, DWORD PTR [edi+ecx+8]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+12]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+12]
	mulss	xmm1, DWORD PTR [edi+eax+8]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+8]
	mulss	xmm2, DWORD PTR [edi+eax+12]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	shl	eax, 0
	movss	DWORD PTR _t$[ebp+eax+4], xmm0

; 144  : 		t.Row[1].Z = s*(Row[3].Z*(Row[0].X*Row[1].W - Row[0].W*Row[1].X) + Row[3].W*(Row[0].Z*Row[1].X - Row[0].X*Row[1].Z) + Row[3].X*(Row[0].W*Row[1].Z - Row[0].Z*Row[1].W));

	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx]
	mulss	xmm0, DWORD PTR [edi+edx+12]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+12]
	mulss	xmm1, DWORD PTR [edi+edx]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+8]
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+8]
	mulss	xmm1, DWORD PTR [edi+ecx]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax]
	mulss	xmm2, DWORD PTR [edi+ecx+8]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+12]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+12]
	mulss	xmm1, DWORD PTR [edi+eax+8]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+8]
	mulss	xmm2, DWORD PTR [edi+eax+12]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	shl	eax, 0
	movss	DWORD PTR _t$[ebp+eax+8], xmm0

; 145  : 		t.Row[1].W = s*(Row[0].Z*(Row[1].W*Row[2].X - Row[1].X*Row[2].W) + Row[0].W*(Row[1].X*Row[2].Z - Row[1].Z*Row[2].X) + Row[0].X*(Row[1].Z*Row[2].W - Row[1].W*Row[2].Z));

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+12]
	mulss	xmm0, DWORD PTR [edi+edx]
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx]
	mulss	xmm1, DWORD PTR [edi+edx+12]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+8]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax]
	mulss	xmm1, DWORD PTR [edi+ecx+8]
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+8]
	mulss	xmm2, DWORD PTR [edi+ecx]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+12]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+8]
	mulss	xmm1, DWORD PTR [edi+eax+12]
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+12]
	mulss	xmm2, DWORD PTR [edi+eax+8]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	shl	eax, 0
	movss	DWORD PTR _t$[ebp+eax+12], xmm0

; 146  : 		t.Row[2].X = s*(Row[1].W*(Row[2].X*Row[3].Y - Row[2].Y*Row[3].X) + Row[1].X*(Row[2].Y*Row[3].W - Row[2].W*Row[3].Y) + Row[1].Y*(Row[2].W*Row[3].X - Row[2].X*Row[3].W));

	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx]
	mulss	xmm0, DWORD PTR [edi+edx+4]
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+4]
	mulss	xmm1, DWORD PTR [edi+edx]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+12]
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+4]
	mulss	xmm1, DWORD PTR [edi+ecx+12]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+12]
	mulss	xmm2, DWORD PTR [edi+ecx+4]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+12]
	mulss	xmm1, DWORD PTR [edi+eax]
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx]
	mulss	xmm2, DWORD PTR [edi+eax+12]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+4]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movss	DWORD PTR _t$[ebp+eax], xmm0

; 147  : 		t.Row[2].Y = s*(Row[2].W*(Row[0].X*Row[3].Y - Row[0].Y*Row[3].X) + Row[2].X*(Row[0].Y*Row[3].W - Row[0].W*Row[3].Y) + Row[2].Y*(Row[0].W*Row[3].X - Row[0].X*Row[3].W));

	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx]
	mulss	xmm0, DWORD PTR [edi+edx+4]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+4]
	mulss	xmm1, DWORD PTR [edi+edx]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+12]
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+4]
	mulss	xmm1, DWORD PTR [edi+ecx+12]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+12]
	mulss	xmm2, DWORD PTR [edi+ecx+4]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+12]
	mulss	xmm1, DWORD PTR [edi+eax]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx]
	mulss	xmm2, DWORD PTR [edi+eax+12]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+4]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movss	DWORD PTR _t$[ebp+eax+4], xmm0

; 148  : 		t.Row[2].Z = s*(Row[3].W*(Row[0].X*Row[1].Y - Row[0].Y*Row[1].X) + Row[3].X*(Row[0].Y*Row[1].W - Row[0].W*Row[1].Y) + Row[3].Y*(Row[0].W*Row[1].X - Row[0].X*Row[1].W));

	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx]
	mulss	xmm0, DWORD PTR [edi+edx+4]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+4]
	mulss	xmm1, DWORD PTR [edi+edx]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+12]
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+4]
	mulss	xmm1, DWORD PTR [edi+ecx+12]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+12]
	mulss	xmm2, DWORD PTR [edi+ecx+4]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+12]
	mulss	xmm1, DWORD PTR [edi+eax]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx]
	mulss	xmm2, DWORD PTR [edi+eax+12]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+4]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movss	DWORD PTR _t$[ebp+eax+8], xmm0

; 149  : 		t.Row[2].W = s*(Row[0].W*(Row[1].Y*Row[2].X - Row[1].X*Row[2].Y) + Row[0].X*(Row[1].W*Row[2].Y - Row[1].Y*Row[2].W) + Row[0].Y*(Row[1].X*Row[2].W - Row[1].W*Row[2].X));

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+4]
	mulss	xmm0, DWORD PTR [edi+edx]
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx]
	mulss	xmm1, DWORD PTR [edi+edx+4]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+12]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+12]
	mulss	xmm1, DWORD PTR [edi+ecx+4]
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+4]
	mulss	xmm2, DWORD PTR [edi+ecx+12]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx]
	mulss	xmm1, DWORD PTR [edi+eax+12]
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+12]
	mulss	xmm2, DWORD PTR [edi+eax]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+4]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movss	DWORD PTR _t$[ebp+eax+12], xmm0

; 150  : 		t.Row[3].X = s*(Row[1].X*(Row[2].Z*Row[3].Y - Row[2].Y*Row[3].Z) + Row[1].Y*(Row[2].X*Row[3].Z - Row[2].Z*Row[3].X) + Row[1].Z*(Row[2].Y*Row[3].X - Row[2].X*Row[3].Y));

	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+8]
	mulss	xmm0, DWORD PTR [edi+edx+4]
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+4]
	mulss	xmm1, DWORD PTR [edi+edx+8]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax]
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax]
	mulss	xmm1, DWORD PTR [edi+ecx+8]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+8]
	mulss	xmm2, DWORD PTR [edi+ecx]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+4]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+4]
	mulss	xmm1, DWORD PTR [edi+eax]
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx]
	mulss	xmm2, DWORD PTR [edi+eax+4]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+8]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	imul	eax, 3
	movss	DWORD PTR _t$[ebp+eax], xmm0

; 151  : 		t.Row[3].Y = s*(Row[2].X*(Row[0].Z*Row[3].Y - Row[0].Y*Row[3].Z) + Row[2].Y*(Row[0].X*Row[3].Z - Row[0].Z*Row[3].X) + Row[2].Z*(Row[0].Y*Row[3].X - Row[0].X*Row[3].Y));

	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+8]
	mulss	xmm0, DWORD PTR [edi+edx+4]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+4]
	mulss	xmm1, DWORD PTR [edi+edx+8]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax]
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax]
	mulss	xmm1, DWORD PTR [edi+ecx+8]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+8]
	mulss	xmm2, DWORD PTR [edi+ecx]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+4]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+4]
	mulss	xmm1, DWORD PTR [edi+eax]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx]
	mulss	xmm2, DWORD PTR [edi+eax+4]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+8]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	imul	eax, 3
	movss	DWORD PTR _t$[ebp+eax+4], xmm0

; 152  : 		t.Row[3].Z = s*(Row[3].X*(Row[0].Z*Row[1].Y - Row[0].Y*Row[1].Z) + Row[3].Y*(Row[0].X*Row[1].Z - Row[0].Z*Row[1].X) + Row[3].Z*(Row[0].Y*Row[1].X - Row[0].X*Row[1].Y));

	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+8]
	mulss	xmm0, DWORD PTR [edi+edx+4]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+4]
	mulss	xmm1, DWORD PTR [edi+edx+8]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax]
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax]
	mulss	xmm1, DWORD PTR [edi+ecx+8]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+8]
	mulss	xmm2, DWORD PTR [edi+ecx]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+4]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+4]
	mulss	xmm1, DWORD PTR [edi+eax]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx]
	mulss	xmm2, DWORD PTR [edi+eax+4]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+8]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	imul	eax, 3
	movss	DWORD PTR _t$[ebp+eax+8], xmm0

; 153  : 		t.Row[3].W = s*(Row[0].X*(Row[1].Y*Row[2].Z - Row[1].Z*Row[2].Y) + Row[0].Y*(Row[1].Z*Row[2].X - Row[1].X*Row[2].Z) + Row[0].Z*(Row[1].X*Row[2].Y - Row[1].Y*Row[2].X));

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+4]
	mulss	xmm0, DWORD PTR [edi+edx+8]
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+8]
	mulss	xmm1, DWORD PTR [edi+edx+4]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+8]
	mulss	xmm1, DWORD PTR [edi+ecx]
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax]
	mulss	xmm2, DWORD PTR [edi+ecx+8]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+4]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx]
	mulss	xmm1, DWORD PTR [edi+eax+4]
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+4]
	mulss	xmm2, DWORD PTR [edi+eax]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+8]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	imul	eax, 3
	movss	DWORD PTR _t$[ebp+eax+12], xmm0

; 154  : 		return t;

	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Matrix4@@QAE@ABV0@@Z			; Matrix4::Matrix4
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@Inverse:

; 155  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Inverse@Matrix4@@QBE?AV1@XZ ENDP			; Matrix4::Inverse
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Determinant@Matrix4@@QBEMXZ
_TEXT	SEGMENT
_det$ = -8						; size = 4
_this$ = -4						; size = 4
?Determinant@Matrix4@@QBEMXZ PROC			; Matrix4::Determinant, COMDAT
; _this$ = ecx

; 122  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 123  : 		float det;
; 124  : 		det =	(Row[0].X * Row[1].Y - Row[0].Y * Row[1].X) * (Row[2].Z * Row[3].W - Row[2].W * Row[3].Z);

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+eax]
	mulss	xmm0, DWORD PTR [esi+ecx+4]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+4]
	mulss	xmm1, DWORD PTR [esi+ecx]
	subss	xmm0, xmm1
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+8]
	mulss	xmm1, DWORD PTR [esi+ecx+12]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [edx+eax+12]
	mulss	xmm2, DWORD PTR [esi+ecx+8]
	subss	xmm1, xmm2
	mulss	xmm0, xmm1
	movss	DWORD PTR _det$[ebp], xmm0

; 125  : 		det -=	(Row[0].X * Row[1].Z - Row[0].Z * Row[1].X) * (Row[2].Y * Row[3].W - Row[2].W * Row[3].Y);

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+eax]
	mulss	xmm0, DWORD PTR [esi+ecx+8]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+8]
	mulss	xmm1, DWORD PTR [esi+ecx]
	subss	xmm0, xmm1
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+4]
	mulss	xmm1, DWORD PTR [esi+ecx+12]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [edx+eax+12]
	mulss	xmm2, DWORD PTR [esi+ecx+4]
	subss	xmm1, xmm2
	mulss	xmm0, xmm1
	movss	xmm1, DWORD PTR _det$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _det$[ebp], xmm1

; 126  : 		det +=	(Row[0].X * Row[1].W - Row[0].W * Row[1].X) * (Row[2].Y * Row[3].Z - Row[2].Z * Row[3].Y);

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+eax]
	mulss	xmm0, DWORD PTR [esi+ecx+12]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+12]
	mulss	xmm1, DWORD PTR [esi+ecx]
	subss	xmm0, xmm1
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+4]
	mulss	xmm1, DWORD PTR [esi+ecx+8]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [edx+eax+8]
	mulss	xmm2, DWORD PTR [esi+ecx+4]
	subss	xmm1, xmm2
	mulss	xmm0, xmm1
	addss	xmm0, DWORD PTR _det$[ebp]
	movss	DWORD PTR _det$[ebp], xmm0

; 127  : 		det +=	(Row[0].Y * Row[1].Z - Row[0].Z * Row[1].Y) * (Row[2].X * Row[3].W - Row[2].W * Row[3].X);

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+eax+4]
	mulss	xmm0, DWORD PTR [esi+ecx+8]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+8]
	mulss	xmm1, DWORD PTR [esi+ecx+4]
	subss	xmm0, xmm1
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax]
	mulss	xmm1, DWORD PTR [esi+ecx+12]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [edx+eax+12]
	mulss	xmm2, DWORD PTR [esi+ecx]
	subss	xmm1, xmm2
	mulss	xmm0, xmm1
	addss	xmm0, DWORD PTR _det$[ebp]
	movss	DWORD PTR _det$[ebp], xmm0

; 128  : 		det -=	(Row[0].Y * Row[1].W - Row[0].W * Row[1].Y) * (Row[2].X * Row[3].Z - Row[2].Z * Row[3].X);

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+eax+4]
	mulss	xmm0, DWORD PTR [esi+ecx+12]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+12]
	mulss	xmm1, DWORD PTR [esi+ecx+4]
	subss	xmm0, xmm1
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax]
	mulss	xmm1, DWORD PTR [esi+ecx+8]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [edx+eax+8]
	mulss	xmm2, DWORD PTR [esi+ecx]
	subss	xmm1, xmm2
	mulss	xmm0, xmm1
	movss	xmm1, DWORD PTR _det$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _det$[ebp], xmm1

; 129  : 		det +=	(Row[0].Z * Row[1].W - Row[0].W * Row[1].Z) * (Row[2].X * Row[3].Y - Row[2].Y * Row[3].X);		

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+eax+8]
	mulss	xmm0, DWORD PTR [esi+ecx+12]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+12]
	mulss	xmm1, DWORD PTR [esi+ecx+8]
	subss	xmm0, xmm1
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax]
	mulss	xmm1, DWORD PTR [esi+ecx+4]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [edx+eax+4]
	mulss	xmm2, DWORD PTR [esi+ecx]
	subss	xmm1, xmm2
	mulss	xmm0, xmm1
	addss	xmm0, DWORD PTR _det$[ebp]
	movss	DWORD PTR _det$[ebp], xmm0

; 130  : 		return det;	

	fld	DWORD PTR _det$[ebp]

; 131  : 	};	

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Determinant@Matrix4@@QBEMXZ ENDP			; Matrix4::Determinant
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Transpose@Matrix4@@QBE?AV1@XZ
_TEXT	SEGMENT
$T1 = -132						; size = 16
$T2 = -116						; size = 16
$T3 = -100						; size = 16
$T4 = -84						; size = 16
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Transpose@Matrix4@@QBE?AV1@XZ PROC			; Matrix4::Transpose, COMDAT
; _this$ = ecx

; 118  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 132				; 00000084H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 119  : 		return Matrix4(Vector4(Row[0][0], Row[1][0], Row[2][0], Row[3][0]),Vector4(Row[0][1], Row[1][1], Row[2][1], Row[3][1]),Vector4(Row[0][2], Row[1][2], Row[2][2], Row[3][2]),Vector4(Row[0][3], Row[1][3], Row[2][3], Row[3][3]));

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0Vector4@@QAE@MMMM@Z			; Vector4::Vector4
	push	eax
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0Vector4@@QAE@MMMM@Z			; Vector4::Vector4
	push	eax
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0Vector4@@QAE@MMMM@Z			; Vector4::Vector4
	push	eax
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0Vector4@@QAE@MMMM@Z			; Vector4::Vector4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Matrix4@@QAE@ABVVector4@@000@Z	; Matrix4::Matrix4
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 120  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Transpose@Matrix4@@QBE?AV1@XZ ENDP			; Matrix4::Transpose
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??AMatrix4@@QBEABVVector4@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AMatrix4@@QBEABVVector4@@H@Z PROC			; Matrix4::operator[], COMDAT
; _this$ = ecx

; 116  : 	TT_INLINE const Vector4 & operator [] (int i) const { return Row[i]; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AMatrix4@@QBEABVVector4@@H@Z ENDP			; Matrix4::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??AMatrix4@@QAEAAVVector4@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AMatrix4@@QAEAAVVector4@@H@Z PROC			; Matrix4::operator[], COMDAT
; _this$ = ecx

; 115  : 	TT_INLINE Vector4 & operator [] (int i) { return Row[i]; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AMatrix4@@QAEAAVVector4@@H@Z ENDP			; Matrix4::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Init_Perspective@Matrix4@@QAEXMMMMMM@Z
_TEXT	SEGMENT
tv218 = -72						; size = 4
tv216 = -72						; size = 4
tv214 = -72						; size = 4
tv212 = -72						; size = 4
tv210 = -72						; size = 4
tv208 = -72						; size = 4
_this$ = -4						; size = 4
_left$ = 8						; size = 4
_right$ = 12						; size = 4
_bottom$ = 16						; size = 4
_top$ = 20						; size = 4
_znear$ = 24						; size = 4
_zfar$ = 28						; size = 4
?Init_Perspective@Matrix4@@QAEXMMMMMM@Z PROC		; Matrix4::Init_Perspective, COMDAT
; _this$ = ecx

; 103  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 104  : 		Make_Identity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Make_Identity@Matrix4@@QAEXXZ		; Matrix4::Make_Identity

; 105  : 		Row[0][0] = static_cast<float>(2.0*znear / (right - left));

	cvtss2sd xmm0, DWORD PTR _znear$[ebp]
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	movss	xmm1, DWORD PTR _right$[ebp]
	subss	xmm1, DWORD PTR _left$[ebp]
	cvtss2sd xmm1, xmm1
	divsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv208[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv208[ebp]
	movss	DWORD PTR [eax], xmm0

; 106  : 		Row[0][2] = (right + left) / (right - left);

	movss	xmm0, DWORD PTR _right$[ebp]
	addss	xmm0, DWORD PTR _left$[ebp]
	movss	xmm1, DWORD PTR _right$[ebp]
	subss	xmm1, DWORD PTR _left$[ebp]
	divss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv210[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv210[ebp]
	movss	DWORD PTR [eax], xmm0

; 107  : 		Row[1][1] = static_cast<float>(2.0*znear / (top - bottom));

	cvtss2sd xmm0, DWORD PTR _znear$[ebp]
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	movss	xmm1, DWORD PTR _top$[ebp]
	subss	xmm1, DWORD PTR _bottom$[ebp]
	cvtss2sd xmm1, xmm1
	divsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv212[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv212[ebp]
	movss	DWORD PTR [eax], xmm0

; 108  : 		Row[1][2] = (top + bottom) / (top - bottom);

	movss	xmm0, DWORD PTR _top$[ebp]
	addss	xmm0, DWORD PTR _bottom$[ebp]
	movss	xmm1, DWORD PTR _top$[ebp]
	subss	xmm1, DWORD PTR _bottom$[ebp]
	divss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv214[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv214[ebp]
	movss	DWORD PTR [eax], xmm0

; 109  : 		Row[2][2] = zfar / (znear - zfar);

	movss	xmm0, DWORD PTR _znear$[ebp]
	subss	xmm0, DWORD PTR _zfar$[ebp]
	movss	xmm1, DWORD PTR _zfar$[ebp]
	divss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv216[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv216[ebp]
	movss	DWORD PTR [eax], xmm0

; 110  : 		Row[2][3] = (znear * zfar) / (znear - zfar);

	movss	xmm0, DWORD PTR _znear$[ebp]
	mulss	xmm0, DWORD PTR _zfar$[ebp]
	movss	xmm1, DWORD PTR _znear$[ebp]
	subss	xmm1, DWORD PTR _zfar$[ebp]
	divss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv218[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv218[ebp]
	movss	DWORD PTR [eax], xmm0

; 111  : 		Row[3][2] = -1.0f;

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [eax], xmm0

; 112  : 		Row[3][3] = 0.0f;

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax], xmm0

; 113  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?Init_Perspective@Matrix4@@QAEXMMMMMM@Z ENDP		; Matrix4::Init_Perspective
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Init_Ortho@Matrix4@@QAEXMMMMMM@Z
_TEXT	SEGMENT
tv190 = -72						; size = 4
tv188 = -72						; size = 4
tv186 = -72						; size = 4
tv184 = -72						; size = 4
tv182 = -72						; size = 4
tv180 = -72						; size = 4
_this$ = -4						; size = 4
_left$ = 8						; size = 4
_right$ = 12						; size = 4
_bottom$ = 16						; size = 4
_top$ = 20						; size = 4
_znear$ = 24						; size = 4
_zfar$ = 28						; size = 4
?Init_Ortho@Matrix4@@QAEXMMMMMM@Z PROC			; Matrix4::Init_Ortho, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		Make_Identity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Make_Identity@Matrix4@@QAEXXZ		; Matrix4::Make_Identity

; 94   : 		Row[0][0] = 2.0f / (right - left);

	movss	xmm0, DWORD PTR _right$[ebp]
	subss	xmm0, DWORD PTR _left$[ebp]
	movss	xmm1, DWORD PTR __real@40000000
	divss	xmm1, xmm0
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv180[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv180[ebp]
	movss	DWORD PTR [eax], xmm0

; 95   : 		Row[0][3] = (left + right) / (left - right);

	movss	xmm0, DWORD PTR _left$[ebp]
	addss	xmm0, DWORD PTR _right$[ebp]
	movss	xmm1, DWORD PTR _left$[ebp]
	subss	xmm1, DWORD PTR _right$[ebp]
	divss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv182[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv182[ebp]
	movss	DWORD PTR [eax], xmm0

; 96   : 		Row[1][1] = 2.0f / (top - bottom);

	movss	xmm0, DWORD PTR _top$[ebp]
	subss	xmm0, DWORD PTR _bottom$[ebp]
	movss	xmm1, DWORD PTR __real@40000000
	divss	xmm1, xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv184[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv184[ebp]
	movss	DWORD PTR [eax], xmm0

; 97   : 		Row[1][3] = (top + bottom) / (bottom - top);

	movss	xmm0, DWORD PTR _top$[ebp]
	addss	xmm0, DWORD PTR _bottom$[ebp]
	movss	xmm1, DWORD PTR _bottom$[ebp]
	subss	xmm1, DWORD PTR _top$[ebp]
	divss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv186[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv186[ebp]
	movss	DWORD PTR [eax], xmm0

; 98   : 		Row[2][2] = 1.0f / (znear - zfar);

	movss	xmm0, DWORD PTR _znear$[ebp]
	subss	xmm0, DWORD PTR _zfar$[ebp]
	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv188[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv188[ebp]
	movss	DWORD PTR [eax], xmm0

; 99   : 		Row[2][3] = znear / (znear - zfar);

	movss	xmm0, DWORD PTR _znear$[ebp]
	subss	xmm0, DWORD PTR _zfar$[ebp]
	movss	xmm1, DWORD PTR _znear$[ebp]
	divss	xmm1, xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv190[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv190[ebp]
	movss	DWORD PTR [eax], xmm0

; 100  : 
; 101  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?Init_Ortho@Matrix4@@QAEXMMMMMM@Z ENDP			; Matrix4::Init_Ortho
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Init_Perspective_OGL@Matrix4@@QAEXMMMMMM@Z
_TEXT	SEGMENT
tv227 = -72						; size = 4
tv225 = -72						; size = 4
tv223 = -72						; size = 4
tv221 = -72						; size = 4
tv219 = -72						; size = 4
tv217 = -72						; size = 4
_this$ = -4						; size = 4
_left$ = 8						; size = 4
_right$ = 12						; size = 4
_bottom$ = 16						; size = 4
_top$ = 20						; size = 4
_znear$ = 24						; size = 4
_zfar$ = 28						; size = 4
?Init_Perspective_OGL@Matrix4@@QAEXMMMMMM@Z PROC	; Matrix4::Init_Perspective_OGL, COMDAT
; _this$ = ecx

; 80   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 81   : 		Make_Identity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Make_Identity@Matrix4@@QAEXXZ		; Matrix4::Make_Identity

; 82   : 		Row[0][0] = static_cast<float>(2.0*znear / (right - left));

	cvtss2sd xmm0, DWORD PTR _znear$[ebp]
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	movss	xmm1, DWORD PTR _right$[ebp]
	subss	xmm1, DWORD PTR _left$[ebp]
	cvtss2sd xmm1, xmm1
	divsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv217[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv217[ebp]
	movss	DWORD PTR [eax], xmm0

; 83   : 		Row[0][2] = (right + left) / (right - left);

	movss	xmm0, DWORD PTR _right$[ebp]
	addss	xmm0, DWORD PTR _left$[ebp]
	movss	xmm1, DWORD PTR _right$[ebp]
	subss	xmm1, DWORD PTR _left$[ebp]
	divss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv219[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv219[ebp]
	movss	DWORD PTR [eax], xmm0

; 84   : 		Row[1][1] = static_cast<float>(2.0*znear / (top - bottom));

	cvtss2sd xmm0, DWORD PTR _znear$[ebp]
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	movss	xmm1, DWORD PTR _top$[ebp]
	subss	xmm1, DWORD PTR _bottom$[ebp]
	cvtss2sd xmm1, xmm1
	divsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv221[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv221[ebp]
	movss	DWORD PTR [eax], xmm0

; 85   : 		Row[1][2] = (top + bottom) / (top - bottom);

	movss	xmm0, DWORD PTR _top$[ebp]
	addss	xmm0, DWORD PTR _bottom$[ebp]
	movss	xmm1, DWORD PTR _top$[ebp]
	subss	xmm1, DWORD PTR _bottom$[ebp]
	divss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv223[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv223[ebp]
	movss	DWORD PTR [eax], xmm0

; 86   : 		Row[2][2] = -(zfar + znear) / (zfar - znear);

	movss	xmm0, DWORD PTR _zfar$[ebp]
	addss	xmm0, DWORD PTR _znear$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR _zfar$[ebp]
	subss	xmm1, DWORD PTR _znear$[ebp]
	divss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv225[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv225[ebp]
	movss	DWORD PTR [eax], xmm0

; 87   : 		Row[2][3] = static_cast<float>(-(2.0*zfar*znear) / (zfar - znear));

	cvtss2sd xmm0, DWORD PTR _zfar$[ebp]
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	cvtss2sd xmm1, DWORD PTR _znear$[ebp]
	mulsd	xmm0, xmm1
	xorpd	xmm0, QWORD PTR __xmm@80000000000000008000000000000000
	movss	xmm1, DWORD PTR _zfar$[ebp]
	subss	xmm1, DWORD PTR _znear$[ebp]
	cvtss2sd xmm1, xmm1
	divsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv227[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv227[ebp]
	movss	DWORD PTR [eax], xmm0

; 88   : 		Row[3][2] = -1.0f;

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [eax], xmm0

; 89   : 		Row[3][3] = 0.0f;

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax], xmm0

; 90   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?Init_Perspective_OGL@Matrix4@@QAEXMMMMMM@Z ENDP	; Matrix4::Init_Perspective_OGL
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Init_Perspective_OGL@Matrix4@@QAEXMMMM@Z
_TEXT	SEGMENT
tv191 = -72						; size = 4
tv189 = -72						; size = 4
tv187 = -72						; size = 4
tv185 = -72						; size = 4
_this$ = -4						; size = 4
_hfov$ = 8						; size = 4
_vfov$ = 12						; size = 4
_znear$ = 16						; size = 4
_zfar$ = 20						; size = 4
?Init_Perspective_OGL@Matrix4@@QAEXMMMM@Z PROC		; Matrix4::Init_Perspective_OGL, COMDAT
; _this$ = ecx

; 70   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 71   : 		Make_Identity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Make_Identity@Matrix4@@QAEXXZ		; Matrix4::Make_Identity

; 72   : 		Row[0][0] = static_cast<float>(1.0 / tan(hfov*0.5));

	cvtss2sd xmm0, DWORD PTR _hfov$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	call	__libm_sse2_tan_precise
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	divsd	xmm1, xmm0
	cvtsd2ss xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv185[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv185[ebp]
	movss	DWORD PTR [eax], xmm0

; 73   : 		Row[1][1] = static_cast<float>(1.0 / tan(vfov*0.5));

	cvtss2sd xmm0, DWORD PTR _vfov$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	call	__libm_sse2_tan_precise
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	divsd	xmm1, xmm0
	cvtsd2ss xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv187[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv187[ebp]
	movss	DWORD PTR [eax], xmm0

; 74   : 		Row[2][2] = -(zfar + znear) / (zfar - znear);

	movss	xmm0, DWORD PTR _zfar$[ebp]
	addss	xmm0, DWORD PTR _znear$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR _zfar$[ebp]
	subss	xmm1, DWORD PTR _znear$[ebp]
	divss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv189[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv189[ebp]
	movss	DWORD PTR [eax], xmm0

; 75   : 		Row[2][3] = static_cast<float>(-(2.0*zfar*znear) / (zfar - znear));

	cvtss2sd xmm0, DWORD PTR _zfar$[ebp]
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	cvtss2sd xmm1, DWORD PTR _znear$[ebp]
	mulsd	xmm0, xmm1
	xorpd	xmm0, QWORD PTR __xmm@80000000000000008000000000000000
	movss	xmm1, DWORD PTR _zfar$[ebp]
	subss	xmm1, DWORD PTR _znear$[ebp]
	cvtss2sd xmm1, xmm1
	divsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv191[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv191[ebp]
	movss	DWORD PTR [eax], xmm0

; 76   : 		Row[3][2] = -1.0f;

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [eax], xmm0

; 77   : 		Row[3][3] = 0.0f;

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax], xmm0

; 78   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Init_Perspective_OGL@Matrix4@@QAEXMMMM@Z ENDP		; Matrix4::Init_Perspective_OGL
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Init_Ortho_OGL@Matrix4@@QAEXMMMMMM@Z
_TEXT	SEGMENT
tv195 = -72						; size = 4
tv193 = -72						; size = 4
tv191 = -72						; size = 4
tv189 = -72						; size = 4
tv187 = -72						; size = 4
tv185 = -72						; size = 4
_this$ = -4						; size = 4
_left$ = 8						; size = 4
_right$ = 12						; size = 4
_bottom$ = 16						; size = 4
_top$ = 20						; size = 4
_znear$ = 24						; size = 4
_zfar$ = 28						; size = 4
?Init_Ortho_OGL@Matrix4@@QAEXMMMMMM@Z PROC		; Matrix4::Init_Ortho_OGL, COMDAT
; _this$ = ecx

; 59   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 60   : 		Make_Identity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Make_Identity@Matrix4@@QAEXXZ		; Matrix4::Make_Identity

; 61   : 		Row[0][0] = 2.0f / (right - left);

	movss	xmm0, DWORD PTR _right$[ebp]
	subss	xmm0, DWORD PTR _left$[ebp]
	movss	xmm1, DWORD PTR __real@40000000
	divss	xmm1, xmm0
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv185[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv185[ebp]
	movss	DWORD PTR [eax], xmm0

; 62   : 		Row[0][3] = -(right + left) / (right - left);

	movss	xmm0, DWORD PTR _right$[ebp]
	addss	xmm0, DWORD PTR _left$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR _right$[ebp]
	subss	xmm1, DWORD PTR _left$[ebp]
	divss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv187[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv187[ebp]
	movss	DWORD PTR [eax], xmm0

; 63   : 		Row[1][1] = 2.0f / (top - bottom);

	movss	xmm0, DWORD PTR _top$[ebp]
	subss	xmm0, DWORD PTR _bottom$[ebp]
	movss	xmm1, DWORD PTR __real@40000000
	divss	xmm1, xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv189[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv189[ebp]
	movss	DWORD PTR [eax], xmm0

; 64   : 		Row[1][3] = -(top + bottom) / (top - bottom);

	movss	xmm0, DWORD PTR _top$[ebp]
	addss	xmm0, DWORD PTR _bottom$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR _top$[ebp]
	subss	xmm1, DWORD PTR _bottom$[ebp]
	divss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv191[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv191[ebp]
	movss	DWORD PTR [eax], xmm0

; 65   : 		Row[2][2] = -2.0f / (zfar - znear);

	movss	xmm0, DWORD PTR _zfar$[ebp]
	subss	xmm0, DWORD PTR _znear$[ebp]
	movss	xmm1, DWORD PTR __real@c0000000
	divss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv193[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv193[ebp]
	movss	DWORD PTR [eax], xmm0

; 66   : 		Row[2][3] = -(zfar + znear) / (zfar - znear);

	movss	xmm0, DWORD PTR _zfar$[ebp]
	addss	xmm0, DWORD PTR _znear$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR _zfar$[ebp]
	subss	xmm1, DWORD PTR _znear$[ebp]
	divss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv195[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv195[ebp]
	movss	DWORD PTR [eax], xmm0

; 67   : 
; 68   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?Init_Ortho_OGL@Matrix4@@QAEXMMMMMM@Z ENDP		; Matrix4::Init_Ortho_OGL
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Init@Matrix4@@QAEXABVVector4@@000@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
?Init@Matrix4@@QAEXABVVector4@@000@Z PROC		; Matrix4::Init, COMDAT
; _this$ = ecx

; 55   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		Row[0] = v0; Row[1] = v1; Row[2] = v2; Row[3] = v3;

	mov	eax, DWORD PTR _v0$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, DWORD PTR _v1$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, DWORD PTR _v2$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, DWORD PTR _v3$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 57   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Init@Matrix4@@QAEXABVVector4@@000@Z ENDP		; Matrix4::Init
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Init@Matrix4@@QAEXABVMatrix3D@@@Z
_TEXT	SEGMENT
$T1 = -84						; size = 16
_this$ = -4						; size = 4
_m$ = 8							; size = 4
?Init@Matrix4@@QAEXABVMatrix3D@@@Z PROC			; Matrix4::Init, COMDAT
; _this$ = ecx

; 51   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 52   : 		Row[0] = m[0]; Row[1] = m[1]; Row[2] = m[2]; Row[3] = Vector4(0.0,0.0,0.0,1.0); 

	push	0
	mov	ecx, DWORD PTR _m$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	push	1
	mov	ecx, DWORD PTR _m$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	push	2
	mov	ecx, DWORD PTR _m$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0Vector4@@QAE@MMMM@Z			; Vector4::Vector4
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 53   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Init@Matrix4@@QAEXABVMatrix3D@@@Z ENDP			; Matrix4::Init
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Make_Identity@Matrix4@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Make_Identity@Matrix4@@QAEXXZ PROC			; Matrix4::Make_Identity, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 45   : 		Row[0].Set(1.0,0.0,0.0,0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 46   : 		Row[1].Set(0.0,1.0,0.0,0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 47   : 		Row[2].Set(0.0,0.0,1.0,0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 48   : 		Row[3].Set(0.0,0.0,0.0,1.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 49   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Make_Identity@Matrix4@@QAEXXZ ENDP			; Matrix4::Make_Identity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??0Matrix4@@QAE@ABVVector4@@000@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0Matrix4@@QAE@ABVVector4@@000@Z PROC			; Matrix4::Matrix4, COMDAT
; _this$ = ecx

; 40   : 	TT_INLINE explicit Matrix4(const Vector4 & v0, const Vector4 & v1, const Vector4 & v2, const Vector4 & v3)	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	4
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 41   : 		Init(v0,v1,v2,v3);

	mov	eax, DWORD PTR _v3$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v1$[ebp]
	push	edx
	mov	eax, DWORD PTR _v0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@Matrix4@@QAEXABVVector4@@000@Z	; Matrix4::Init

; 42   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0Matrix4@@QAE@ABVVector4@@000@Z ENDP			; Matrix4::Matrix4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??0Matrix4@@QAE@ABVMatrix3D@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??0Matrix4@@QAE@ABVMatrix3D@@@Z PROC			; Matrix4::Matrix4, COMDAT
; _this$ = ecx

; 36   : 	TT_INLINE explicit Matrix4(const Matrix3D & m)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	4
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 37   : 	{
; 38   : 		Init(m);

	mov	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@Matrix4@@QAEXABVMatrix3D@@@Z	; Matrix4::Init

; 39   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix4@@QAE@ABVMatrix3D@@@Z ENDP			; Matrix4::Matrix4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??0Matrix4@@QAE@_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_identity$ = 8						; size = 1
??0Matrix4@@QAE@_N@Z PROC				; Matrix4::Matrix4, COMDAT
; _this$ = ecx

; 29   : 	TT_INLINE explicit Matrix4(bool identity)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	4
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 30   : 	{
; 31   : 		if (identity)

	movzx	eax, BYTE PTR _identity$[ebp]
	test	eax, eax
	je	SHORT $LN2@Matrix4

; 32   : 		{
; 33   : 			Make_Identity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Make_Identity@Matrix4@@QAEXXZ		; Matrix4::Make_Identity
$LN2@Matrix4:

; 34   : 		}
; 35   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix4@@QAE@_N@Z ENDP				; Matrix4::Matrix4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??0Matrix4@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??0Matrix4@@QAE@ABV0@@Z PROC				; Matrix4::Matrix4, COMDAT
; _this$ = ecx

; 25   : 	TT_INLINE Matrix4(const Matrix4 & m)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	4
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 26   : 	{
; 27   : 		Row[0] = m.Row[0]; Row[1] = m.Row[1]; Row[2] = m.Row[2]; Row[3] = m.Row[3];

	mov	eax, 16					; 00000010H
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, 16					; 00000010H
	imul	eax, 3
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 28   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix4@@QAE@ABV0@@Z ENDP				; Matrix4::Matrix4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??0Matrix4@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Matrix4@@QAE@XZ PROC					; Matrix4::Matrix4, COMDAT
; _this$ = ecx

; 22   : 	TT_INLINE Matrix4(void)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	4
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 23   : 	{
; 24   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Matrix4@@QAE@XZ ENDP					; Matrix4::Matrix4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Inverse_Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z
_TEXT	SEGMENT
tv237 = -88						; size = 4
tv233 = -88						; size = 4
tv229 = -88						; size = 4
tv235 = -84						; size = 4
tv231 = -84						; size = 4
tv227 = -84						; size = 4
_v$ = -16						; size = 4
_tmp$ = -12						; size = 12
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Inverse_Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z PROC ; Matrix3D::Inverse_Rotate_Vector, COMDAT

; 564  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 565  : 		Vector3 tmp;

	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 566  : 		Vector3 * v;
; 567  : 		if (out == &in)

	mov	eax, DWORD PTR _out$[ebp]
	cmp	eax, DWORD PTR _in$[ebp]
	jne	SHORT $LN2@Inverse_Ro

; 568  : 		{
; 569  : 			tmp = in;

	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 570  : 			v = &tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR _v$[ebp], eax

; 571  : 		}
; 572  : 		else

	jmp	SHORT $LN1@Inverse_Ro
$LN2@Inverse_Ro:

; 573  : 		{
; 574  : 			v = (Vector3 *)&in;

	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@Inverse_Ro:

; 575  : 		}
; 576  : 		out->X = (A[0][0] * v->X + A[1][0] * v->Y + A[2][0] * v->Z);

	push	0
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	0
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv227[ebp], xmm0
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv227[ebp]
	addss	xmm1, xmm0
	push	0
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv229[ebp], xmm1
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv229[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx], xmm1

; 577  : 		out->Y = (A[0][1] * v->X + A[1][1] * v->Y + A[2][1] * v->Z);

	push	1
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv231[ebp], xmm0
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv231[ebp]
	addss	xmm1, xmm0
	push	1
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv233[ebp], xmm1
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv233[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+4], xmm1

; 578  : 		out->Z = (A[0][2] * v->X + A[1][2] * v->Y + A[2][2] * v->Z);

	push	2
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	2
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv235[ebp]
	addss	xmm1, xmm0
	push	2
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv237[ebp], xmm1
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv237[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+8], xmm1

; 579  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Inverse_Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ENDP ; Matrix3D::Inverse_Rotate_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Inverse_Transform_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z
_TEXT	SEGMENT
_diff$ = -28						; size = 12
_v$ = -16						; size = 4
_tmp$ = -12						; size = 12
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Inverse_Transform_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z PROC ; Matrix3D::Inverse_Transform_Vector, COMDAT

; 548  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi

; 549  : 		Vector3 tmp;

	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 550  : 		Vector3 * v;
; 551  : 		if (out == &in)

	mov	eax, DWORD PTR _out$[ebp]
	cmp	eax, DWORD PTR _in$[ebp]
	jne	SHORT $LN2@Inverse_Tr

; 552  : 		{
; 553  : 			tmp = in;

	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 554  : 			v = &tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR _v$[ebp], eax

; 555  : 		}
; 556  : 		else

	jmp	SHORT $LN1@Inverse_Tr
$LN2@Inverse_Tr:

; 557  : 		{
; 558  : 			v = (Vector3 *)&in;

	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@Inverse_Tr:

; 559  : 		}
; 560  : 		Vector3 diff(v->X - A[0][3], v->Y - A[1][3], v->Z - A[2][3]);

	push	3
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [ecx+8]
	subss	xmm0, DWORD PTR [eax]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	3
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	subss	xmm0, DWORD PTR [eax]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	3
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	subss	xmm0, DWORD PTR [eax]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _diff$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3

; 561  : 		Matrix3D::Inverse_Rotate_Vector(A, diff, out);

	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	lea	ecx, DWORD PTR _diff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _A$[ebp]
	push	edx
	call	?Inverse_Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ; Matrix3D::Inverse_Rotate_Vector
	add	esp, 12					; 0000000cH

; 562  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Inverse_Transform_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ENDP ; Matrix3D::Inverse_Transform_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z
_TEXT	SEGMENT
tv237 = -88						; size = 4
tv233 = -88						; size = 4
tv229 = -88						; size = 4
tv235 = -84						; size = 4
tv231 = -84						; size = 4
tv227 = -84						; size = 4
_v$ = -16						; size = 4
_tmp$ = -12						; size = 12
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z PROC ; Matrix3D::Rotate_Vector, COMDAT

; 531  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 532  : 		Vector3 tmp;

	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 533  : 		Vector3 * v;
; 534  : 		if (out == &in)

	mov	eax, DWORD PTR _out$[ebp]
	cmp	eax, DWORD PTR _in$[ebp]
	jne	SHORT $LN2@Rotate_Vec

; 535  : 		{
; 536  : 			tmp = in;

	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 537  : 			v = &tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR _v$[ebp], eax

; 538  : 		}
; 539  : 		else 

	jmp	SHORT $LN1@Rotate_Vec
$LN2@Rotate_Vec:

; 540  : 		{
; 541  : 			v = (Vector3 *)&in;

	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@Rotate_Vec:

; 542  : 		}
; 543  : 		out->X = (A[0][0] * v->X + A[0][1] * v->Y + A[0][2] * v->Z);

	push	0
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv227[ebp], xmm0
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv227[ebp]
	addss	xmm1, xmm0
	push	2
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv229[ebp], xmm1
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv229[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx], xmm1

; 544  : 		out->Y = (A[1][0] * v->X + A[1][1] * v->Y + A[1][2] * v->Z);

	push	0
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv231[ebp], xmm0
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv231[ebp]
	addss	xmm1, xmm0
	push	2
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv233[ebp], xmm1
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv233[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+4], xmm1

; 545  : 		out->Z = (A[2][0] * v->X + A[2][1] * v->Y + A[2][2] * v->Z);

	push	0
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv235[ebp]
	addss	xmm1, xmm0
	push	2
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv237[ebp], xmm1
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv237[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+8], xmm1

; 546  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ENDP ; Matrix3D::Rotate_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_Z_Vector@Matrix3D@@QBEXPAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_set_z$ = 8						; size = 4
?Get_Z_Vector@Matrix3D@@QBEXPAVVector3@@@Z PROC		; Matrix3D::Get_Z_Vector, COMDAT
; _this$ = ecx

; 524  : 	TT_INLINE void Get_Z_Vector(Vector3 * set_z) const { set_z->Set(Row[0][2], Row[1][2], Row[2][2]); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _set_z$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Z_Vector@Matrix3D@@QBEXPAVVector3@@@Z ENDP		; Matrix3D::Get_Z_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_Y_Vector@Matrix3D@@QBEXPAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_set_y$ = 8						; size = 4
?Get_Y_Vector@Matrix3D@@QBEXPAVVector3@@@Z PROC		; Matrix3D::Get_Y_Vector, COMDAT
; _this$ = ecx

; 523  : 	TT_INLINE void Get_Y_Vector(Vector3 * set_y) const { set_y->Set(Row[0][1], Row[1][1], Row[2][1]); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _set_y$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Y_Vector@Matrix3D@@QBEXPAVVector3@@@Z ENDP		; Matrix3D::Get_Y_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_X_Vector@Matrix3D@@QBEXPAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_set_x$ = 8						; size = 4
?Get_X_Vector@Matrix3D@@QBEXPAVVector3@@@Z PROC		; Matrix3D::Get_X_Vector, COMDAT
; _this$ = ecx

; 522  : 	TT_INLINE void Get_X_Vector(Vector3 * set_x) const { set_x->Set(Row[0][0], Row[1][0], Row[2][0]); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _set_x$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_X_Vector@Matrix3D@@QBEXPAVVector3@@@Z ENDP		; Matrix3D::Get_X_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_Z_Vector@Matrix3D@@QBE?AVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Get_Z_Vector@Matrix3D@@QBE?AVVector3@@XZ PROC		; Matrix3D::Get_Z_Vector, COMDAT
; _this$ = ecx

; 521  : 	TT_INLINE Vector3 Get_Z_Vector() const { return Vector3(Row[0][2], Row[1][2], Row[2][2]); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Z_Vector@Matrix3D@@QBE?AVVector3@@XZ ENDP		; Matrix3D::Get_Z_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_Y_Vector@Matrix3D@@QBE?AVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Get_Y_Vector@Matrix3D@@QBE?AVVector3@@XZ PROC		; Matrix3D::Get_Y_Vector, COMDAT
; _this$ = ecx

; 520  : 	TT_INLINE Vector3 Get_Y_Vector() const { return Vector3(Row[0][1], Row[1][1], Row[2][1]); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Y_Vector@Matrix3D@@QBE?AVVector3@@XZ ENDP		; Matrix3D::Get_Y_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_X_Vector@Matrix3D@@QBE?AVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Get_X_Vector@Matrix3D@@QBE?AVVector3@@XZ PROC		; Matrix3D::Get_X_Vector, COMDAT
; _this$ = ecx

; 519  : 	TT_INLINE Vector3 Get_X_Vector() const { return Vector3(Row[0][0], Row[1][0], Row[2][0]); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_X_Vector@Matrix3D@@QBE?AVVector3@@XZ ENDP		; Matrix3D::Get_X_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Transform_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z
_TEXT	SEGMENT
tv270 = -92						; size = 4
tv264 = -92						; size = 4
tv258 = -92						; size = 4
tv268 = -88						; size = 4
tv262 = -88						; size = 4
tv256 = -88						; size = 4
tv266 = -84						; size = 4
tv260 = -84						; size = 4
tv254 = -84						; size = 4
_v$ = -16						; size = 4
_tmp$ = -12						; size = 12
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Transform_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z PROC ; Matrix3D::Transform_Vector, COMDAT

; 503  :    {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi

; 504  : 		Vector3 tmp;

	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 505  : 		Vector3 * v;
; 506  : 		if (out == &in)

	mov	eax, DWORD PTR _out$[ebp]
	cmp	eax, DWORD PTR _in$[ebp]
	jne	SHORT $LN2@Transform_

; 507  : 		{
; 508  : 			tmp = in;

	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 509  : 			v = &tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR _v$[ebp], eax

; 510  : 		}
; 511  : 		else

	jmp	SHORT $LN1@Transform_
$LN2@Transform_:

; 512  : 		{
; 513  : 			v = (Vector3 *)&in;

	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@Transform_:

; 514  : 		}
; 515  : 		out->X = (A.Row[0][0] * v->X + A.Row[0][1] * v->Y + A.Row[0][2] * v->Z + A.Row[0][3]);

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _A$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv254[ebp], xmm0
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv254[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv256[ebp], xmm1
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv256[ebp]
	addss	xmm1, xmm0
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv258[ebp], xmm1
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv258[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx], xmm0

; 516  : 		out->Y = (A.Row[1][0] * v->X + A.Row[1][1] * v->Y + A.Row[1][2] * v->Z + A.Row[1][3]);

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _A$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv260[ebp], xmm0
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv260[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv262[ebp], xmm1
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv262[ebp]
	addss	xmm1, xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv264[ebp], xmm1
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv264[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+4], xmm0

; 517  : 		out->Z = (A.Row[2][0] * v->X + A.Row[2][1] * v->Y + A.Row[2][2] * v->Z + A.Row[2][3]);

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _A$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv266[ebp], xmm0
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv266[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv268[ebp], xmm1
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv268[ebp]
	addss	xmm1, xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv270[ebp], xmm1
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv270[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+8], xmm0

; 518  :    }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Transform_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ENDP ; Matrix3D::Transform_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?In_Place_Pre_Rotate_Z@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv245 = -80						; size = 4
tv243 = -80						; size = 4
tv241 = -80						; size = 4
tv239 = -80						; size = 4
tv237 = -80						; size = 4
tv235 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?In_Place_Pre_Rotate_Z@Matrix3D@@QAEXMM@Z PROC		; Matrix3D::In_Place_Pre_Rotate_Z, COMDAT
; _this$ = ecx

; 486  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 487  : 		float tmp1,tmp2;
; 488  : 		tmp1 = Row[0][0]; tmp2 = Row[1][0];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 489  : 		Row[0][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv235[ebp]
	movss	DWORD PTR [eax], xmm0

; 490  : 		Row[1][0] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv237[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv237[ebp]
	movss	DWORD PTR [eax], xmm0

; 491  : 		tmp1 = Row[0][1]; tmp2 = Row[1][1];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 492  : 		Row[0][1] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv239[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv239[ebp]
	movss	DWORD PTR [eax], xmm0

; 493  : 		Row[1][1] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv241[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv241[ebp]
	movss	DWORD PTR [eax], xmm0

; 494  : 		tmp1 = Row[0][2]; tmp2 = Row[1][2];

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 495  : 		Row[0][2] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv243[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv243[ebp]
	movss	DWORD PTR [eax], xmm0

; 496  : 		Row[1][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv245[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv245[ebp]
	movss	DWORD PTR [eax], xmm0

; 497  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?In_Place_Pre_Rotate_Z@Matrix3D@@QAEXMM@Z ENDP		; Matrix3D::In_Place_Pre_Rotate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?In_Place_Pre_Rotate_Y@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv248 = -80						; size = 4
tv246 = -80						; size = 4
tv244 = -80						; size = 4
tv242 = -80						; size = 4
tv240 = -80						; size = 4
tv238 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?In_Place_Pre_Rotate_Y@Matrix3D@@QAEXMM@Z PROC		; Matrix3D::In_Place_Pre_Rotate_Y, COMDAT
; _this$ = ecx

; 473  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 474  : 		float tmp1,tmp2;
; 475  : 		tmp1 = Row[0][0]; tmp2 = Row[2][0];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 476  : 		Row[0][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv238[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv238[ebp]
	movss	DWORD PTR [eax], xmm0

; 477  : 		Row[2][0] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv240[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv240[ebp]
	movss	DWORD PTR [eax], xmm0

; 478  : 		tmp1 = Row[0][1]; tmp2 = Row[2][1];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 479  : 		Row[0][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv242[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv242[ebp]
	movss	DWORD PTR [eax], xmm0

; 480  : 		Row[2][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv244[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv244[ebp]
	movss	DWORD PTR [eax], xmm0

; 481  : 		tmp1 = Row[0][2]; tmp2 = Row[2][2];

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 482  : 		Row[0][2] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv246[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv246[ebp]
	movss	DWORD PTR [eax], xmm0

; 483  : 		Row[2][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv248[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv248[ebp]
	movss	DWORD PTR [eax], xmm0

; 484  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?In_Place_Pre_Rotate_Y@Matrix3D@@QAEXMM@Z ENDP		; Matrix3D::In_Place_Pre_Rotate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?In_Place_Pre_Rotate_X@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv245 = -80						; size = 4
tv243 = -80						; size = 4
tv241 = -80						; size = 4
tv239 = -80						; size = 4
tv237 = -80						; size = 4
tv235 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?In_Place_Pre_Rotate_X@Matrix3D@@QAEXMM@Z PROC		; Matrix3D::In_Place_Pre_Rotate_X, COMDAT
; _this$ = ecx

; 460  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 461  : 		float tmp1,tmp2;
; 462  : 		tmp1 = Row[1][0]; tmp2 = Row[2][0];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 463  : 		Row[1][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv235[ebp]
	movss	DWORD PTR [eax], xmm0

; 464  : 		Row[2][0] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv237[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv237[ebp]
	movss	DWORD PTR [eax], xmm0

; 465  : 		tmp1 = Row[1][1]; tmp2 = Row[2][1];

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 466  : 		Row[1][1] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv239[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv239[ebp]
	movss	DWORD PTR [eax], xmm0

; 467  : 		Row[2][1] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv241[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv241[ebp]
	movss	DWORD PTR [eax], xmm0

; 468  : 		tmp1 = Row[1][2]; tmp2 = Row[2][2];

	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 469  : 		Row[1][2] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv243[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv243[ebp]
	movss	DWORD PTR [eax], xmm0

; 470  : 		Row[2][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv245[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv245[ebp]
	movss	DWORD PTR [eax], xmm0

; 471  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?In_Place_Pre_Rotate_X@Matrix3D@@QAEXMM@Z ENDP		; Matrix3D::In_Place_Pre_Rotate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?In_Place_Pre_Rotate_Z@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv257 = -88						; size = 4
tv255 = -88						; size = 4
tv253 = -88						; size = 4
tv251 = -88						; size = 4
tv249 = -88						; size = 4
tv247 = -88						; size = 4
_s$ = -20						; size = 4
_c$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?In_Place_Pre_Rotate_Z@Matrix3D@@QAEXM@Z PROC		; Matrix3D::In_Place_Pre_Rotate_Z, COMDAT
; _this$ = ecx

; 444  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 445  : 		float tmp1,tmp2;
; 446  : 		float c,s;
; 447  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 448  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 449  : 		tmp1 = Row[0][0]; tmp2 = Row[1][0];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 450  : 		Row[0][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv247[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv247[ebp]
	movss	DWORD PTR [eax], xmm0

; 451  : 		Row[1][0] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv249[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv249[ebp]
	movss	DWORD PTR [eax], xmm0

; 452  : 		tmp1 = Row[0][1]; tmp2 = Row[1][1];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 453  : 		Row[0][1] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv251[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv251[ebp]
	movss	DWORD PTR [eax], xmm0

; 454  : 		Row[1][1] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv253[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv253[ebp]
	movss	DWORD PTR [eax], xmm0

; 455  : 		tmp1 = Row[0][2]; tmp2 = Row[1][2];

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 456  : 		Row[0][2] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv255[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv255[ebp]
	movss	DWORD PTR [eax], xmm0

; 457  : 		Row[1][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv257[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv257[ebp]
	movss	DWORD PTR [eax], xmm0

; 458  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?In_Place_Pre_Rotate_Z@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::In_Place_Pre_Rotate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?In_Place_Pre_Rotate_Y@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv260 = -88						; size = 4
tv258 = -88						; size = 4
tv256 = -88						; size = 4
tv254 = -88						; size = 4
tv252 = -88						; size = 4
tv250 = -88						; size = 4
_s$ = -20						; size = 4
_c$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?In_Place_Pre_Rotate_Y@Matrix3D@@QAEXM@Z PROC		; Matrix3D::In_Place_Pre_Rotate_Y, COMDAT
; _this$ = ecx

; 428  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 429  : 		float tmp1,tmp2;
; 430  : 		float c,s;
; 431  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 432  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 433  : 		tmp1 = Row[0][0]; tmp2 = Row[2][0];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 434  : 		Row[0][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv250[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv250[ebp]
	movss	DWORD PTR [eax], xmm0

; 435  : 		Row[2][0] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv252[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv252[ebp]
	movss	DWORD PTR [eax], xmm0

; 436  : 		tmp1 = Row[0][1]; tmp2 = Row[2][1];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 437  : 		Row[0][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv254[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv254[ebp]
	movss	DWORD PTR [eax], xmm0

; 438  : 		Row[2][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv256[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv256[ebp]
	movss	DWORD PTR [eax], xmm0

; 439  : 		tmp1 = Row[0][2]; tmp2 = Row[2][2];

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 440  : 		Row[0][2] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv258[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv258[ebp]
	movss	DWORD PTR [eax], xmm0

; 441  : 		Row[2][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv260[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv260[ebp]
	movss	DWORD PTR [eax], xmm0

; 442  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?In_Place_Pre_Rotate_Y@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::In_Place_Pre_Rotate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?In_Place_Pre_Rotate_X@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv257 = -88						; size = 4
tv255 = -88						; size = 4
tv253 = -88						; size = 4
tv251 = -88						; size = 4
tv249 = -88						; size = 4
tv247 = -88						; size = 4
_s$ = -20						; size = 4
_c$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?In_Place_Pre_Rotate_X@Matrix3D@@QAEXM@Z PROC		; Matrix3D::In_Place_Pre_Rotate_X, COMDAT
; _this$ = ecx

; 412  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 413  : 		float tmp1,tmp2;
; 414  : 		float c,s;
; 415  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 416  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 417  : 		tmp1 = Row[1][0]; tmp2 = Row[2][0];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 418  : 		Row[1][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv247[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv247[ebp]
	movss	DWORD PTR [eax], xmm0

; 419  : 		Row[2][0] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv249[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv249[ebp]
	movss	DWORD PTR [eax], xmm0

; 420  : 		tmp1 = Row[1][1]; tmp2 = Row[2][1];

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 421  : 		Row[1][1] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv251[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv251[ebp]
	movss	DWORD PTR [eax], xmm0

; 422  : 		Row[2][1] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv253[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv253[ebp]
	movss	DWORD PTR [eax], xmm0

; 423  : 		tmp1 = Row[1][2]; tmp2 = Row[2][2];

	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 424  : 		Row[1][2] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv255[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv255[ebp]
	movss	DWORD PTR [eax], xmm0

; 425  : 		Row[2][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv257[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv257[ebp]
	movss	DWORD PTR [eax], xmm0

; 426  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?In_Place_Pre_Rotate_X@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::In_Place_Pre_Rotate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Pre_Rotate_Z@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv295 = -80						; size = 4
tv293 = -80						; size = 4
tv291 = -80						; size = 4
tv289 = -80						; size = 4
tv287 = -80						; size = 4
tv285 = -80						; size = 4
tv283 = -80						; size = 4
tv281 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Pre_Rotate_Z@Matrix3D@@QAEXMM@Z PROC			; Matrix3D::Pre_Rotate_Z, COMDAT
; _this$ = ecx

; 396  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 397  : 		float tmp1,tmp2;
; 398  : 		tmp1 = Row[0][0]; tmp2 = Row[1][0];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 399  : 		Row[0][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv281[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv281[ebp]
	movss	DWORD PTR [eax], xmm0

; 400  : 		Row[1][0] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv283[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv283[ebp]
	movss	DWORD PTR [eax], xmm0

; 401  : 		tmp1 = Row[0][1]; tmp2 = Row[1][1];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 402  : 		Row[0][1] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv285[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv285[ebp]
	movss	DWORD PTR [eax], xmm0

; 403  : 		Row[1][1] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv287[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv287[ebp]
	movss	DWORD PTR [eax], xmm0

; 404  : 		tmp1 = Row[0][2]; tmp2 = Row[1][2];

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 405  : 		Row[0][2] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv289[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv289[ebp]
	movss	DWORD PTR [eax], xmm0

; 406  : 		Row[1][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv291[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv291[ebp]
	movss	DWORD PTR [eax], xmm0

; 407  : 		tmp1 = Row[0][3]; tmp2 = Row[1][3];

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 408  : 		Row[0][3] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv293[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv293[ebp]
	movss	DWORD PTR [eax], xmm0

; 409  : 		Row[1][3] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv295[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv295[ebp]
	movss	DWORD PTR [eax], xmm0

; 410  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Pre_Rotate_Z@Matrix3D@@QAEXMM@Z ENDP			; Matrix3D::Pre_Rotate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Pre_Rotate_Y@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv299 = -80						; size = 4
tv297 = -80						; size = 4
tv295 = -80						; size = 4
tv293 = -80						; size = 4
tv291 = -80						; size = 4
tv289 = -80						; size = 4
tv287 = -80						; size = 4
tv285 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Pre_Rotate_Y@Matrix3D@@QAEXMM@Z PROC			; Matrix3D::Pre_Rotate_Y, COMDAT
; _this$ = ecx

; 380  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 381  : 		float tmp1,tmp2;
; 382  : 		tmp1 = Row[0][0]; tmp2 = Row[2][0];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 383  : 		Row[0][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv285[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv285[ebp]
	movss	DWORD PTR [eax], xmm0

; 384  : 		Row[2][0] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv287[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv287[ebp]
	movss	DWORD PTR [eax], xmm0

; 385  : 		tmp1 = Row[0][1]; tmp2 = Row[2][1];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 386  : 		Row[0][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv289[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv289[ebp]
	movss	DWORD PTR [eax], xmm0

; 387  : 		Row[2][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv291[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv291[ebp]
	movss	DWORD PTR [eax], xmm0

; 388  : 		tmp1 = Row[0][2]; tmp2 = Row[2][2];

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 389  : 		Row[0][2] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv293[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv293[ebp]
	movss	DWORD PTR [eax], xmm0

; 390  : 		Row[2][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv295[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv295[ebp]
	movss	DWORD PTR [eax], xmm0

; 391  : 		tmp1 = Row[0][3]; tmp2 = Row[2][3];

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 392  : 		Row[0][3] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv297[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv297[ebp]
	movss	DWORD PTR [eax], xmm0

; 393  : 		Row[2][3] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv299[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv299[ebp]
	movss	DWORD PTR [eax], xmm0

; 394  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Pre_Rotate_Y@Matrix3D@@QAEXMM@Z ENDP			; Matrix3D::Pre_Rotate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Pre_Rotate_X@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv295 = -80						; size = 4
tv293 = -80						; size = 4
tv291 = -80						; size = 4
tv289 = -80						; size = 4
tv287 = -80						; size = 4
tv285 = -80						; size = 4
tv283 = -80						; size = 4
tv281 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Pre_Rotate_X@Matrix3D@@QAEXMM@Z PROC			; Matrix3D::Pre_Rotate_X, COMDAT
; _this$ = ecx

; 364  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 365  : 		float tmp1,tmp2;
; 366  : 		tmp1 = Row[1][0]; tmp2 = Row[2][0];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 367  : 		Row[1][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv281[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv281[ebp]
	movss	DWORD PTR [eax], xmm0

; 368  : 		Row[2][0] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv283[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv283[ebp]
	movss	DWORD PTR [eax], xmm0

; 369  : 		tmp1 = Row[1][1]; tmp2 = Row[2][1];

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 370  : 		Row[1][1] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv285[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv285[ebp]
	movss	DWORD PTR [eax], xmm0

; 371  : 		Row[2][1] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv287[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv287[ebp]
	movss	DWORD PTR [eax], xmm0

; 372  : 		tmp1 = Row[1][2]; tmp2 = Row[2][2];

	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 373  : 		Row[1][2] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv289[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv289[ebp]
	movss	DWORD PTR [eax], xmm0

; 374  : 		Row[2][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv291[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv291[ebp]
	movss	DWORD PTR [eax], xmm0

; 375  : 		tmp1 = Row[1][3]; tmp2 = Row[2][3];

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 376  : 		Row[1][3] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv293[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv293[ebp]
	movss	DWORD PTR [eax], xmm0

; 377  : 		Row[2][3] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv295[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv295[ebp]
	movss	DWORD PTR [eax], xmm0

; 378  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Pre_Rotate_X@Matrix3D@@QAEXMM@Z ENDP			; Matrix3D::Pre_Rotate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Pre_Rotate_Z@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv307 = -88						; size = 4
tv305 = -88						; size = 4
tv303 = -88						; size = 4
tv301 = -88						; size = 4
tv299 = -88						; size = 4
tv297 = -88						; size = 4
tv295 = -88						; size = 4
tv293 = -88						; size = 4
_s$ = -20						; size = 4
_c$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Pre_Rotate_Z@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Pre_Rotate_Z, COMDAT
; _this$ = ecx

; 345  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 346  : 		float tmp1,tmp2;
; 347  : 		float c,s;
; 348  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 349  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 350  : 		tmp1 = Row[0][0]; tmp2 = Row[1][0];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 351  : 		Row[0][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv293[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv293[ebp]
	movss	DWORD PTR [eax], xmm0

; 352  : 		Row[1][0] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv295[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv295[ebp]
	movss	DWORD PTR [eax], xmm0

; 353  : 		tmp1 = Row[0][1]; tmp2 = Row[1][1];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 354  : 		Row[0][1] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv297[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv297[ebp]
	movss	DWORD PTR [eax], xmm0

; 355  : 		Row[1][1] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv299[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv299[ebp]
	movss	DWORD PTR [eax], xmm0

; 356  : 		tmp1 = Row[0][2]; tmp2 = Row[1][2];

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 357  : 		Row[0][2] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv301[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv301[ebp]
	movss	DWORD PTR [eax], xmm0

; 358  : 		Row[1][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv303[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv303[ebp]
	movss	DWORD PTR [eax], xmm0

; 359  : 		tmp1 = Row[0][3]; tmp2 = Row[1][3];

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 360  : 		Row[0][3] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv305[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv305[ebp]
	movss	DWORD PTR [eax], xmm0

; 361  : 		Row[1][3] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv307[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv307[ebp]
	movss	DWORD PTR [eax], xmm0

; 362  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Pre_Rotate_Z@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Pre_Rotate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Pre_Rotate_Y@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv311 = -88						; size = 4
tv309 = -88						; size = 4
tv307 = -88						; size = 4
tv305 = -88						; size = 4
tv303 = -88						; size = 4
tv301 = -88						; size = 4
tv299 = -88						; size = 4
tv297 = -88						; size = 4
_s$ = -20						; size = 4
_c$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Pre_Rotate_Y@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Pre_Rotate_Y, COMDAT
; _this$ = ecx

; 326  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 327  : 		float tmp1,tmp2;
; 328  : 		float c,s;
; 329  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 330  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 331  : 		tmp1 = Row[0][0]; tmp2 = Row[2][0];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 332  : 		Row[0][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv297[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv297[ebp]
	movss	DWORD PTR [eax], xmm0

; 333  : 		Row[2][0] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv299[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv299[ebp]
	movss	DWORD PTR [eax], xmm0

; 334  : 		tmp1 = Row[0][1]; tmp2 = Row[2][1];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 335  : 		Row[0][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv301[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv301[ebp]
	movss	DWORD PTR [eax], xmm0

; 336  : 		Row[2][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv303[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv303[ebp]
	movss	DWORD PTR [eax], xmm0

; 337  : 		tmp1 = Row[0][2]; tmp2 = Row[2][2];

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 338  : 		Row[0][2] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv305[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv305[ebp]
	movss	DWORD PTR [eax], xmm0

; 339  : 		Row[2][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv307[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv307[ebp]
	movss	DWORD PTR [eax], xmm0

; 340  : 		tmp1 = Row[0][3]; tmp2 = Row[2][3];

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 341  : 		Row[0][3] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv309[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv309[ebp]
	movss	DWORD PTR [eax], xmm0

; 342  : 		Row[2][3] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv311[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv311[ebp]
	movss	DWORD PTR [eax], xmm0

; 343  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Pre_Rotate_Y@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Pre_Rotate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Pre_Rotate_X@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv307 = -88						; size = 4
tv305 = -88						; size = 4
tv303 = -88						; size = 4
tv301 = -88						; size = 4
tv299 = -88						; size = 4
tv297 = -88						; size = 4
tv295 = -88						; size = 4
tv293 = -88						; size = 4
_s$ = -20						; size = 4
_c$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Pre_Rotate_X@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Pre_Rotate_X, COMDAT
; _this$ = ecx

; 307  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 308  : 		float tmp1,tmp2;
; 309  : 		float c,s;
; 310  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 311  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 312  : 		tmp1 = Row[1][0]; tmp2 = Row[2][0];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 313  : 		Row[1][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv293[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv293[ebp]
	movss	DWORD PTR [eax], xmm0

; 314  : 		Row[2][0] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv295[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv295[ebp]
	movss	DWORD PTR [eax], xmm0

; 315  : 		tmp1 = Row[1][1]; tmp2 = Row[2][1];

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 316  : 		Row[1][1] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv297[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv297[ebp]
	movss	DWORD PTR [eax], xmm0

; 317  : 		Row[2][1] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv299[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv299[ebp]
	movss	DWORD PTR [eax], xmm0

; 318  : 		tmp1 = Row[1][2]; tmp2 = Row[2][2];

	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 319  : 		Row[1][2] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv301[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv301[ebp]
	movss	DWORD PTR [eax], xmm0

; 320  : 		Row[2][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv303[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv303[ebp]
	movss	DWORD PTR [eax], xmm0

; 321  : 		tmp1 = Row[1][3]; tmp2 = Row[2][3];

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 322  : 		Row[1][3] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv305[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv305[ebp]
	movss	DWORD PTR [eax], xmm0

; 323  : 		Row[2][3] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv307[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv307[ebp]
	movss	DWORD PTR [eax], xmm0

; 324  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Pre_Rotate_X@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Pre_Rotate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Scale@Matrix3D@@QAEXAAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_scale$ = 8						; size = 4
?Scale@Matrix3D@@QAEXAAVVector3@@@Z PROC		; Matrix3D::Scale, COMDAT
; _this$ = ecx

; 303  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 304  : 		Scale(scale.X, scale.Y, scale.Z);

	mov	eax, DWORD PTR _scale$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _scale$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+4]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _scale$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Scale@Matrix3D@@QAEXMMM@Z		; Matrix3D::Scale

; 305  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Scale@Matrix3D@@QAEXAAVVector3@@@Z ENDP		; Matrix3D::Scale
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Scale@Matrix3D@@QAEXMMM@Z
_TEXT	SEGMENT
tv166 = -72						; size = 4
tv158 = -72						; size = 4
tv150 = -72						; size = 4
tv142 = -72						; size = 4
tv134 = -72						; size = 4
tv94 = -72						; size = 4
tv86 = -72						; size = 4
tv78 = -72						; size = 4
tv70 = -72						; size = 4
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
?Scale@Matrix3D@@QAEXMMM@Z PROC				; Matrix3D::Scale, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 292  : 		Row[0][0] *= x;

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR tv70[ebp]
	movss	DWORD PTR [ecx], xmm0

; 293  : 		Row[1][0] *= x;

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR tv78[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR tv78[ebp]
	movss	DWORD PTR [ecx], xmm0

; 294  : 		Row[2][0] *= x;

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv86[ebp], eax
	mov	eax, DWORD PTR tv86[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR tv86[ebp]
	movss	DWORD PTR [ecx], xmm0

; 295  : 		Row[0][1] *= y;

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv94[ebp], eax
	mov	eax, DWORD PTR tv94[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR tv94[ebp]
	movss	DWORD PTR [ecx], xmm0

; 296  : 		Row[1][1] *= y;

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv134[ebp], eax
	mov	eax, DWORD PTR tv134[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR tv134[ebp]
	movss	DWORD PTR [ecx], xmm0

; 297  : 		Row[2][1] *= y;

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv142[ebp], eax
	mov	eax, DWORD PTR tv142[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR tv142[ebp]
	movss	DWORD PTR [ecx], xmm0

; 298  : 		Row[0][2] *= z;

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv150[ebp], eax
	mov	eax, DWORD PTR tv150[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	mov	ecx, DWORD PTR tv150[ebp]
	movss	DWORD PTR [ecx], xmm0

; 299  : 		Row[1][2] *= z;

	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv158[ebp], eax
	mov	eax, DWORD PTR tv158[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	mov	ecx, DWORD PTR tv158[ebp]
	movss	DWORD PTR [ecx], xmm0

; 300  : 		Row[2][2] *= z;

	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv166[ebp], eax
	mov	eax, DWORD PTR tv166[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	mov	ecx, DWORD PTR tv166[ebp]
	movss	DWORD PTR [ecx], xmm0

; 301  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Scale@Matrix3D@@QAEXMMM@Z ENDP				; Matrix3D::Scale
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Scale@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv166 = -72						; size = 4
tv158 = -72						; size = 4
tv150 = -72						; size = 4
tv142 = -72						; size = 4
tv134 = -72						; size = 4
tv94 = -72						; size = 4
tv86 = -72						; size = 4
tv78 = -72						; size = 4
tv70 = -72						; size = 4
_this$ = -4						; size = 4
_scale$ = 8						; size = 4
?Scale@Matrix3D@@QAEXM@Z PROC				; Matrix3D::Scale, COMDAT
; _this$ = ecx

; 279  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 280  : 		Row[0][0] *= scale;

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv70[ebp]
	movss	DWORD PTR [ecx], xmm0

; 281  : 		Row[1][0] *= scale;

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR tv78[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv78[ebp]
	movss	DWORD PTR [ecx], xmm0

; 282  : 		Row[2][0] *= scale;

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv86[ebp], eax
	mov	eax, DWORD PTR tv86[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv86[ebp]
	movss	DWORD PTR [ecx], xmm0

; 283  : 		Row[0][1] *= scale;

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv94[ebp], eax
	mov	eax, DWORD PTR tv94[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv94[ebp]
	movss	DWORD PTR [ecx], xmm0

; 284  : 		Row[1][1] *= scale;

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv134[ebp], eax
	mov	eax, DWORD PTR tv134[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv134[ebp]
	movss	DWORD PTR [ecx], xmm0

; 285  : 		Row[2][1] *= scale;

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv142[ebp], eax
	mov	eax, DWORD PTR tv142[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv142[ebp]
	movss	DWORD PTR [ecx], xmm0

; 286  : 		Row[0][2] *= scale;

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv150[ebp], eax
	mov	eax, DWORD PTR tv150[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv150[ebp]
	movss	DWORD PTR [ecx], xmm0

; 287  : 		Row[1][2] *= scale;

	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv158[ebp], eax
	mov	eax, DWORD PTR tv158[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv158[ebp]
	movss	DWORD PTR [ecx], xmm0

; 288  : 		Row[2][2] *= scale;

	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv166[ebp], eax
	mov	eax, DWORD PTR tv166[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv166[ebp]
	movss	DWORD PTR [ecx], xmm0

; 289  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Scale@Matrix3D@@QAEXM@Z ENDP				; Matrix3D::Scale
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Rotate_Z@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv248 = -80						; size = 4
tv246 = -80						; size = 4
tv244 = -80						; size = 4
tv242 = -80						; size = 4
tv240 = -80						; size = 4
tv238 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Rotate_Z@Matrix3D@@QAEXMM@Z PROC			; Matrix3D::Rotate_Z, COMDAT
; _this$ = ecx

; 266  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 267  : 		float tmp1,tmp2;
; 268  : 		tmp1 = Row[0][0]; tmp2 = Row[0][1];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 269  : 		Row[0][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv238[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv238[ebp]
	movss	DWORD PTR [eax], xmm0

; 270  : 		Row[0][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv240[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv240[ebp]
	movss	DWORD PTR [eax], xmm0

; 271  : 		tmp1 = Row[1][0]; tmp2 = Row[1][1];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 272  : 		Row[1][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv242[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv242[ebp]
	movss	DWORD PTR [eax], xmm0

; 273  : 		Row[1][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv244[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv244[ebp]
	movss	DWORD PTR [eax], xmm0

; 274  : 		tmp1 = Row[2][0]; tmp2 = Row[2][1];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 275  : 		Row[2][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv246[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv246[ebp]
	movss	DWORD PTR [eax], xmm0

; 276  : 		Row[2][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv248[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv248[ebp]
	movss	DWORD PTR [eax], xmm0

; 277  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Rotate_Z@Matrix3D@@QAEXMM@Z ENDP			; Matrix3D::Rotate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Rotate_Y@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv245 = -80						; size = 4
tv243 = -80						; size = 4
tv241 = -80						; size = 4
tv239 = -80						; size = 4
tv237 = -80						; size = 4
tv235 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Rotate_Y@Matrix3D@@QAEXMM@Z PROC			; Matrix3D::Rotate_Y, COMDAT
; _this$ = ecx

; 253  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 254  : 		float tmp1,tmp2;
; 255  : 		tmp1 = Row[0][0]; tmp2 = Row[0][2];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 256  : 		Row[0][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv235[ebp]
	movss	DWORD PTR [eax], xmm0

; 257  : 		Row[0][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv237[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv237[ebp]
	movss	DWORD PTR [eax], xmm0

; 258  : 		tmp1 = Row[1][0]; tmp2 = Row[1][2];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 259  : 		Row[1][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv239[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv239[ebp]
	movss	DWORD PTR [eax], xmm0

; 260  : 		Row[1][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv241[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv241[ebp]
	movss	DWORD PTR [eax], xmm0

; 261  : 		tmp1 = Row[2][0]; tmp2 = Row[2][2];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 262  : 		Row[2][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv243[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv243[ebp]
	movss	DWORD PTR [eax], xmm0

; 263  : 		Row[2][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv245[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv245[ebp]
	movss	DWORD PTR [eax], xmm0

; 264  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Rotate_Y@Matrix3D@@QAEXMM@Z ENDP			; Matrix3D::Rotate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Rotate_X@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv248 = -80						; size = 4
tv246 = -80						; size = 4
tv244 = -80						; size = 4
tv242 = -80						; size = 4
tv240 = -80						; size = 4
tv238 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Rotate_X@Matrix3D@@QAEXMM@Z PROC			; Matrix3D::Rotate_X, COMDAT
; _this$ = ecx

; 240  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 241  : 		float tmp1,tmp2;
; 242  : 		tmp1 = Row[0][1]; tmp2 = Row[0][2];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 243  : 		Row[0][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv238[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv238[ebp]
	movss	DWORD PTR [eax], xmm0

; 244  : 		Row[0][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv240[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv240[ebp]
	movss	DWORD PTR [eax], xmm0

; 245  : 		tmp1 = Row[1][1]; tmp2 = Row[1][2];

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 246  : 		Row[1][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv242[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv242[ebp]
	movss	DWORD PTR [eax], xmm0

; 247  : 		Row[1][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv244[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv244[ebp]
	movss	DWORD PTR [eax], xmm0

; 248  : 		tmp1 = Row[2][1]; tmp2 = Row[2][2];

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 249  : 		Row[2][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv246[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv246[ebp]
	movss	DWORD PTR [eax], xmm0

; 250  : 		Row[2][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv248[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv248[ebp]
	movss	DWORD PTR [eax], xmm0

; 251  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Rotate_X@Matrix3D@@QAEXMM@Z ENDP			; Matrix3D::Rotate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Rotate_Z@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv260 = -88						; size = 4
tv258 = -88						; size = 4
tv256 = -88						; size = 4
tv254 = -88						; size = 4
tv252 = -88						; size = 4
tv250 = -88						; size = 4
_s$ = -20						; size = 4
_c$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Rotate_Z@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Rotate_Z, COMDAT
; _this$ = ecx

; 224  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 225  : 		float tmp1,tmp2;
; 226  : 		float c,s;
; 227  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 228  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 229  : 		tmp1 = Row[0][0]; tmp2 = Row[0][1];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 230  : 		Row[0][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv250[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv250[ebp]
	movss	DWORD PTR [eax], xmm0

; 231  : 		Row[0][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv252[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv252[ebp]
	movss	DWORD PTR [eax], xmm0

; 232  : 		tmp1 = Row[1][0]; tmp2 = Row[1][1];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 233  : 		Row[1][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv254[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv254[ebp]
	movss	DWORD PTR [eax], xmm0

; 234  : 		Row[1][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv256[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv256[ebp]
	movss	DWORD PTR [eax], xmm0

; 235  : 		tmp1 = Row[2][0]; tmp2 = Row[2][1];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 236  : 		Row[2][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv258[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv258[ebp]
	movss	DWORD PTR [eax], xmm0

; 237  : 		Row[2][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv260[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv260[ebp]
	movss	DWORD PTR [eax], xmm0

; 238  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Rotate_Z@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Rotate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Rotate_Y@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv257 = -88						; size = 4
tv255 = -88						; size = 4
tv253 = -88						; size = 4
tv251 = -88						; size = 4
tv249 = -88						; size = 4
tv247 = -88						; size = 4
_c$ = -20						; size = 4
_s$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Rotate_Y@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Rotate_Y, COMDAT
; _this$ = ecx

; 208  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 209  : 		float tmp1,tmp2;
; 210  : 		float s,c;
; 211  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 212  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 213  : 		tmp1 = Row[0][0]; tmp2 = Row[0][2];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 214  : 		Row[0][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv247[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv247[ebp]
	movss	DWORD PTR [eax], xmm0

; 215  : 		Row[0][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv249[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv249[ebp]
	movss	DWORD PTR [eax], xmm0

; 216  : 		tmp1 = Row[1][0]; tmp2 = Row[1][2];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 217  : 		Row[1][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv251[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv251[ebp]
	movss	DWORD PTR [eax], xmm0

; 218  : 		Row[1][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv253[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv253[ebp]
	movss	DWORD PTR [eax], xmm0

; 219  : 		tmp1 = Row[2][0]; tmp2 = Row[2][2];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 220  : 		Row[2][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv255[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv255[ebp]
	movss	DWORD PTR [eax], xmm0

; 221  : 		Row[2][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv257[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv257[ebp]
	movss	DWORD PTR [eax], xmm0

; 222  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Rotate_Y@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Rotate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Rotate_X@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv260 = -88						; size = 4
tv258 = -88						; size = 4
tv256 = -88						; size = 4
tv254 = -88						; size = 4
tv252 = -88						; size = 4
tv250 = -88						; size = 4
_c$ = -20						; size = 4
_s$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Rotate_X@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Rotate_X, COMDAT
; _this$ = ecx

; 192  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 193  : 		float tmp1,tmp2;
; 194  : 		float s,c;
; 195  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 196  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 197  : 		tmp1 = Row[0][1]; tmp2 = Row[0][2];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 198  : 		Row[0][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv250[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv250[ebp]
	movss	DWORD PTR [eax], xmm0

; 199  : 		Row[0][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv252[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv252[ebp]
	movss	DWORD PTR [eax], xmm0

; 200  : 		tmp1 = Row[1][1]; tmp2 = Row[1][2];

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 201  : 		Row[1][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv254[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv254[ebp]
	movss	DWORD PTR [eax], xmm0

; 202  : 		Row[1][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv256[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv256[ebp]
	movss	DWORD PTR [eax], xmm0

; 203  : 		tmp1 = Row[2][1]; tmp2 = Row[2][2];

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 204  : 		Row[2][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv258[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv258[ebp]
	movss	DWORD PTR [eax], xmm0

; 205  : 		Row[2][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv260[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv260[ebp]
	movss	DWORD PTR [eax], xmm0

; 206  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Rotate_X@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Rotate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Translate_Z@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv142 = -72						; size = 4
tv94 = -72						; size = 4
tv78 = -72						; size = 4
_this$ = -4						; size = 4
_z$ = 8							; size = 4
?Translate_Z@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Translate_Z, COMDAT
; _this$ = ecx

; 186  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 187  : 		Row[0][3]  += (float)(Row[0][2]*z);

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv78[ebp], eax
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	mov	eax, DWORD PTR tv78[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv78[ebp]
	movss	DWORD PTR [ecx], xmm0

; 188  : 		Row[1][3]  += (float)(Row[1][2]*z);

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv94[ebp], eax
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	mov	eax, DWORD PTR tv94[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv94[ebp]
	movss	DWORD PTR [ecx], xmm0

; 189  : 		Row[2][3]  += (float)(Row[2][2]*z);

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv142[ebp], eax
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	mov	eax, DWORD PTR tv142[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv142[ebp]
	movss	DWORD PTR [ecx], xmm0

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Translate_Z@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Translate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Translate_Y@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv142 = -72						; size = 4
tv94 = -72						; size = 4
tv78 = -72						; size = 4
_this$ = -4						; size = 4
_y$ = 8							; size = 4
?Translate_Y@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Translate_Y, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 181  : 		Row[0][3]  += (float)(Row[0][1]*y);

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv78[ebp], eax
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	mov	eax, DWORD PTR tv78[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv78[ebp]
	movss	DWORD PTR [ecx], xmm0

; 182  : 		Row[1][3]  += (float)(Row[1][1]*y);

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv94[ebp], eax
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	mov	eax, DWORD PTR tv94[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv94[ebp]
	movss	DWORD PTR [ecx], xmm0

; 183  : 		Row[2][3]  += (float)(Row[2][1]*y);

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv142[ebp], eax
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	mov	eax, DWORD PTR tv142[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv142[ebp]
	movss	DWORD PTR [ecx], xmm0

; 184  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Translate_Y@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Translate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Translate_X@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv142 = -72						; size = 4
tv94 = -72						; size = 4
tv78 = -72						; size = 4
_this$ = -4						; size = 4
_x$ = 8							; size = 4
?Translate_X@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Translate_X, COMDAT
; _this$ = ecx

; 174  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 175  : 		Row[0][3]  += (float)(Row[0][0]*x);

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv78[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR tv78[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv78[ebp]
	movss	DWORD PTR [ecx], xmm0

; 176  : 		Row[1][3]  += (float)(Row[1][0]*x);

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv94[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR tv94[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv94[ebp]
	movss	DWORD PTR [ecx], xmm0

; 177  : 		Row[2][3]  += (float)(Row[2][0]*x);

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv142[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR tv142[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv142[ebp]
	movss	DWORD PTR [ecx], xmm0

; 178  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Translate_X@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Translate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Translate@Matrix3D@@QAEXABVVector3@@@Z
_TEXT	SEGMENT
tv278 = -80						; size = 4
tv274 = -80						; size = 4
tv270 = -80						; size = 4
tv276 = -76						; size = 4
tv272 = -76						; size = 4
tv268 = -76						; size = 4
tv214 = -72						; size = 4
tv174 = -72						; size = 4
tv134 = -72						; size = 4
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?Translate@Matrix3D@@QAEXABVVector3@@@Z PROC		; Matrix3D::Translate, COMDAT
; _this$ = ecx

; 168  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 169  : 		Row[0][3]  += Row[0][0]*t[0] + Row[0][1]*t[1] + Row[0][2]*t[2];

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv134[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv268[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv268[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv270[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv270[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR tv134[ebp]
	addss	xmm1, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv134[ebp]
	movss	DWORD PTR [ecx], xmm1

; 170  : 		Row[1][3]  += Row[1][0]*t[0] + Row[1][1]*t[1] + Row[1][2]*t[2];

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv174[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv272[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv272[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv274[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv274[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR tv174[ebp]
	addss	xmm1, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv174[ebp]
	movss	DWORD PTR [ecx], xmm1

; 171  : 		Row[2][3]  += Row[2][0]*t[0] + Row[2][1]*t[1] + Row[2][2]*t[2];

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv214[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv276[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv276[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv278[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv278[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR tv214[ebp]
	addss	xmm1, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv214[ebp]
	movss	DWORD PTR [ecx], xmm1

; 172  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Translate@Matrix3D@@QAEXABVVector3@@@Z ENDP		; Matrix3D::Translate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Translate@Matrix3D@@QAEXMMM@Z
_TEXT	SEGMENT
tv245 = -80						; size = 4
tv241 = -80						; size = 4
tv237 = -80						; size = 4
tv243 = -76						; size = 4
tv239 = -76						; size = 4
tv235 = -76						; size = 4
tv190 = -72						; size = 4
tv158 = -72						; size = 4
tv94 = -72						; size = 4
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
?Translate@Matrix3D@@QAEXMMM@Z PROC			; Matrix3D::Translate, COMDAT
; _this$ = ecx

; 162  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 		Row[0][3]  += (float)(Row[0][0]*x + Row[0][1]*y + Row[0][2]*z);

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv94[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	movss	xmm1, DWORD PTR tv235[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv237[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	movss	xmm1, DWORD PTR tv237[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR tv94[ebp]
	addss	xmm1, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv94[ebp]
	movss	DWORD PTR [ecx], xmm1

; 164  : 		Row[1][3]  += (float)(Row[1][0]*x + Row[1][1]*y + Row[1][2]*z);

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv158[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv239[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	movss	xmm1, DWORD PTR tv239[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv241[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	movss	xmm1, DWORD PTR tv241[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR tv158[ebp]
	addss	xmm1, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv158[ebp]
	movss	DWORD PTR [ecx], xmm1

; 165  : 		Row[2][3]  += (float)(Row[2][0]*x + Row[2][1]*y + Row[2][2]*z);

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv190[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv243[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	movss	xmm1, DWORD PTR tv243[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv245[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	movss	xmm1, DWORD PTR tv245[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR tv190[ebp]
	addss	xmm1, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv190[ebp]
	movss	DWORD PTR [ecx], xmm1

; 166  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Translate@Matrix3D@@QAEXMMM@Z ENDP			; Matrix3D::Translate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Make_Identity@Matrix3D@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Make_Identity@Matrix3D@@QAEXXZ PROC			; Matrix3D::Make_Identity, COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 157  : 		Row[0].Set(1.0f,0.0f,0.0f,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 158  : 		Row[1].Set(0.0f,1.0f,0.0f,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 159  : 		Row[2].Set(0.0f,0.0f,1.0f,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 160  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Make_Identity@Matrix3D@@QAEXXZ ENDP			; Matrix3D::Make_Identity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Adjust_Z_Translation@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv70 = -72						; size = 4
_this$ = -4						; size = 4
_z$ = 8							; size = 4
?Adjust_Z_Translation@Matrix3D@@QAEXM@Z PROC		; Matrix3D::Adjust_Z_Translation, COMDAT
; _this$ = ecx

; 154  : 	TT_INLINE void Adjust_Z_Translation(float z) { Row[2][3] += z; };

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR _z$[ebp]
	mov	ecx, DWORD PTR tv70[ebp]
	movss	DWORD PTR [ecx], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Adjust_Z_Translation@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::Adjust_Z_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Adjust_Y_Translation@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv70 = -72						; size = 4
_this$ = -4						; size = 4
_y$ = 8							; size = 4
?Adjust_Y_Translation@Matrix3D@@QAEXM@Z PROC		; Matrix3D::Adjust_Y_Translation, COMDAT
; _this$ = ecx

; 153  : 	TT_INLINE void Adjust_Y_Translation(float y) { Row[1][3] += y; };

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR tv70[ebp]
	movss	DWORD PTR [ecx], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Adjust_Y_Translation@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::Adjust_Y_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Adjust_X_Translation@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv70 = -72						; size = 4
_this$ = -4						; size = 4
_x$ = 8							; size = 4
?Adjust_X_Translation@Matrix3D@@QAEXM@Z PROC		; Matrix3D::Adjust_X_Translation, COMDAT
; _this$ = ecx

; 152  : 	TT_INLINE void Adjust_X_Translation(float x) { Row[0][3] += x; };

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR tv70[ebp]
	movss	DWORD PTR [ecx], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Adjust_X_Translation@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::Adjust_X_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Adjust_Translation@Matrix3D@@QAEXABVVector3@@@Z
_TEXT	SEGMENT
tv95 = -72						; size = 4
tv84 = -72						; size = 4
tv73 = -72						; size = 4
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?Adjust_Translation@Matrix3D@@QAEXABVVector3@@@Z PROC	; Matrix3D::Adjust_Translation, COMDAT
; _this$ = ecx

; 151  : 	TT_INLINE void Adjust_Translation(const Vector3 & t) { Row[0][3] += t[0]; Row[1][3] += t[1]; Row[2][3] += t[2]; };

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv73[ebp], eax
	push	0
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR tv73[ebp]
	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR tv73[ebp]
	movss	DWORD PTR [edx], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv84[ebp], eax
	push	1
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR tv84[ebp]
	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR tv84[ebp]
	movss	DWORD PTR [edx], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv95[ebp], eax
	push	2
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR tv95[ebp]
	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR tv95[ebp]
	movss	DWORD PTR [edx], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Adjust_Translation@Matrix3D@@QAEXABVVector3@@@Z ENDP	; Matrix3D::Adjust_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set_Z_Translation@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_z$ = 8							; size = 4
?Set_Z_Translation@Matrix3D@@QAEXM@Z PROC		; Matrix3D::Set_Z_Translation, COMDAT
; _this$ = ecx

; 150  : 	TT_INLINE void Set_Z_Translation(float z) { Row[2][3] = z; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [eax], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_Z_Translation@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::Set_Z_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set_Y_Translation@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_y$ = 8							; size = 4
?Set_Y_Translation@Matrix3D@@QAEXM@Z PROC		; Matrix3D::Set_Y_Translation, COMDAT
; _this$ = ecx

; 149  : 	TT_INLINE void Set_Y_Translation(float y) { Row[1][3] = y; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [eax], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_Y_Translation@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::Set_Y_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set_X_Translation@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
?Set_X_Translation@Matrix3D@@QAEXM@Z PROC		; Matrix3D::Set_X_Translation, COMDAT
; _this$ = ecx

; 148  : 	TT_INLINE void Set_X_Translation(float x) { Row[0][3] = x; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [eax], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_X_Translation@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::Set_X_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_Z_Translation@Matrix3D@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Z_Translation@Matrix3D@@QBEMXZ PROC		; Matrix3D::Get_Z_Translation, COMDAT
; _this$ = ecx

; 147  : 	TT_INLINE float Get_Z_Translation(void) const { return Row[2][3]; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	fld	DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Z_Translation@Matrix3D@@QBEMXZ ENDP		; Matrix3D::Get_Z_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_Y_Translation@Matrix3D@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Y_Translation@Matrix3D@@QBEMXZ PROC		; Matrix3D::Get_Y_Translation, COMDAT
; _this$ = ecx

; 146  : 	TT_INLINE float Get_Y_Translation(void) const { return Row[1][3]; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	fld	DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Y_Translation@Matrix3D@@QBEMXZ ENDP		; Matrix3D::Get_Y_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_X_Translation@Matrix3D@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_X_Translation@Matrix3D@@QBEMXZ PROC		; Matrix3D::Get_X_Translation, COMDAT
; _this$ = ecx

; 145  : 	TT_INLINE float Get_X_Translation(void) const { return Row[0][3]; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	fld	DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_X_Translation@Matrix3D@@QBEMXZ ENDP		; Matrix3D::Get_X_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set_Translation@Matrix3D@@QAEXABVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?Set_Translation@Matrix3D@@QAEXABVVector3@@@Z PROC	; Matrix3D::Set_Translation, COMDAT
; _this$ = ecx

; 143  : 	TT_INLINE void Set_Translation(const Vector3 & t)  { Row[0][3] = t[0]; Row[1][3] = t[1];Row[2][3] = t[2]; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
	push	1
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
	push	2
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_Translation@Matrix3D@@QAEXABVVector3@@@Z ENDP	; Matrix3D::Set_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_Translation@Matrix3D@@QBEXPAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_set$ = 8						; size = 4
?Get_Translation@Matrix3D@@QBEXPAVVector3@@@Z PROC	; Matrix3D::Get_Translation, COMDAT
; _this$ = ecx

; 142  : 	TT_INLINE void Get_Translation(Vector3 * set) const { set->X = Row[0][3]; set->Y = Row[1][3]; set->Z = Row[2][3]; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+8], edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Translation@Matrix3D@@QBEXPAVVector3@@@Z ENDP	; Matrix3D::Get_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_Translation@Matrix3D@@QBE?AVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Get_Translation@Matrix3D@@QBE?AVVector3@@XZ PROC	; Matrix3D::Get_Translation, COMDAT
; _this$ = ecx

; 141  : 	TT_INLINE Vector3 Get_Translation(void) const { return Vector3(Row[0][3],Row[1][3],Row[2][3]); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Translation@Matrix3D@@QBE?AVVector3@@XZ ENDP	; Matrix3D::Get_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set@Matrix3D@@QAEXABVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_position$ = 8						; size = 4
?Set@Matrix3D@@QAEXABVVector3@@@Z PROC			; Matrix3D::Set, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 134  : 		Row[0].Set(1.0f,0.0f,0.0f,position[0]);

	push	0
	mov	ecx, DWORD PTR _position$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 135  : 		Row[1].Set(0.0f,1.0f,0.0f,position[1]);

	push	1
	mov	ecx, DWORD PTR _position$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 136  : 		Row[2].Set(0.0f,0.0f,1.0f,position[2]);

	push	2
	mov	ecx, DWORD PTR _position$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 137  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set@Matrix3D@@QAEXABVVector3@@@Z ENDP			; Matrix3D::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set@Matrix3D@@QAEXABVVector3@@MM@Z
_TEXT	SEGMENT
tv368 = -80						; size = 4
tv362 = -80						; size = 4
tv356 = -80						; size = 4
tv366 = -76						; size = 4
tv360 = -76						; size = 4
tv354 = -76						; size = 4
tv364 = -72						; size = 4
tv358 = -72						; size = 4
tv352 = -72						; size = 4
_this$ = -4						; size = 4
_axis$ = 8						; size = 4
_s$ = 12						; size = 4
_c$ = 16						; size = 4
?Set@Matrix3D@@QAEXABVVector3@@MM@Z PROC		; Matrix3D::Set, COMDAT
; _this$ = ecx

; 112  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 113  : 		Row[0].Set(
; 114  : 			(float)(axis[0]*axis[0] + c*(1.0f - axis[0]*axis[0])),
; 115  : 			(float)(axis[0]*axis[1]*(1.0f - c) - axis[2]*s),
; 116  : 			(float)(axis[2]*axis[0]*(1.0f - c) + axis[1]*s),
; 117  : 			0.0f
; 118  : 		);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv352[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv352[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv354[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv354[ebp]
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv356[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR _c$[ebp]
	movss	xmm0, DWORD PTR tv356[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 119  : 		Row[1].Set(
; 120  : 			(float)(axis[0]*axis[1]*(1.0f - c) + axis[2]*s),
; 121  : 			(float)(axis[1]*axis[1] + c*(1.0f - axis[1]*axis[1])),
; 122  : 			(float)(axis[1]*axis[2]*(1.0f - c) - axis[0]*s),
; 123  : 			0.0f
; 124  : 		);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv358[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv358[ebp]
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv360[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR _c$[ebp]
	movss	xmm0, DWORD PTR tv360[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv362[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv362[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 125  : 		Row[2].Set(
; 126  : 			(float)(axis[2]*axis[0]*(1.0f - c) - axis[1]*s),
; 127  : 			(float)(axis[1]*axis[2]*(1.0f - c) + axis[0]*s),
; 128  : 			(float)(axis[2]*axis[2] + c*(1 - axis[2]*axis[2])),
; 129  : 			0.0f
; 130  : 		);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv364[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR _c$[ebp]
	movss	xmm0, DWORD PTR tv364[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv366[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv366[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv368[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv368[ebp]
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 131  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Set@Matrix3D@@QAEXABVVector3@@MM@Z ENDP		; Matrix3D::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set@Matrix3D@@QAEXABVVector3@@M@Z
_TEXT	SEGMENT
_s$ = -12						; size = 4
_c$ = -8						; size = 4
_this$ = -4						; size = 4
_axis$ = 8						; size = 4
_angle$ = 12						; size = 4
?Set@Matrix3D@@QAEXABVVector3@@M@Z PROC			; Matrix3D::Set, COMDAT
; _this$ = ecx

; 106  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 107  : 		float c = cosf(angle);

	push	ecx
	movss	xmm0, DWORD PTR _angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 108  : 		float s = sinf(angle);

	push	ecx
	movss	xmm0, DWORD PTR _angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 109  : 		Set(axis,s,c);

	push	ecx
	movss	xmm0, DWORD PTR _c$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _s$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _axis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3D@@QAEXABVVector3@@MM@Z	; Matrix3D::Set

; 110  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Set@Matrix3D@@QAEXABVVector3@@M@Z ENDP			; Matrix3D::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set@Matrix3D@@QAEXABVVector3@@000@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_pos$ = 20						; size = 4
?Set@Matrix3D@@QAEXABVVector3@@000@Z PROC		; Matrix3D::Set, COMDAT
; _this$ = ecx

; 100  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 101  : 		Row[0].Set(x[0],y[0],z[0],pos[0]);

	push	0
	mov	ecx, DWORD PTR _pos$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, DWORD PTR _z$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, DWORD PTR _y$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, DWORD PTR _x$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 102  : 		Row[1].Set(x[1],y[1],z[1],pos[1]);

	push	1
	mov	ecx, DWORD PTR _pos$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, DWORD PTR _z$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, DWORD PTR _y$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, DWORD PTR _x$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 103  : 		Row[2].Set(x[2],y[2],z[2],pos[2]);

	push	2
	mov	ecx, DWORD PTR _pos$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, DWORD PTR _z$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, DWORD PTR _y$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, DWORD PTR _x$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 104  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Set@Matrix3D@@QAEXABVVector3@@000@Z ENDP		; Matrix3D::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set@Matrix3D@@QAEXMMMMMMMMMMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m11$ = 8						; size = 4
_m12$ = 12						; size = 4
_m13$ = 16						; size = 4
_m14$ = 20						; size = 4
_m21$ = 24						; size = 4
_m22$ = 28						; size = 4
_m23$ = 32						; size = 4
_m24$ = 36						; size = 4
_m31$ = 40						; size = 4
_m32$ = 44						; size = 4
_m33$ = 48						; size = 4
_m34$ = 52						; size = 4
?Set@Matrix3D@@QAEXMMMMMMMMMMMM@Z PROC			; Matrix3D::Set, COMDAT
; _this$ = ecx

; 94   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 95   : 		Row[0].Set(m11,m12,m13,m14);

	push	ecx
	movss	xmm0, DWORD PTR _m14$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m13$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m12$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m11$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 96   : 		Row[1].Set(m21,m22,m23,m24);

	push	ecx
	movss	xmm0, DWORD PTR _m24$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m23$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m22$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m21$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 97   : 		Row[2].Set(m31,m32,m33,m34);

	push	ecx
	movss	xmm0, DWORD PTR _m34$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m33$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m32$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m31$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 98   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
?Set@Matrix3D@@QAEXMMMMMMMMMMMM@Z ENDP			; Matrix3D::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set@Matrix3D@@QAEXQAM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
?Set@Matrix3D@@QAEXQAM@Z PROC				; Matrix3D::Set, COMDAT
; _this$ = ecx

; 88   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 89   : 		Row[0].Set(m[0],m[1],m[2],m[3]);

	mov	eax, 4
	imul	eax, 3
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx]
	movss	DWORD PTR [esp], xmm0
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 90   : 		Row[1].Set(m[4],m[5],m[6],m[7]);

	mov	eax, 4
	imul	eax, 7
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	imul	edx, 6
	mov	eax, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 4
	imul	ecx, 5
	mov	edx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx]
	movss	DWORD PTR [esp], xmm0
	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 91   : 		Row[2].Set(m[8],m[9],m[10],m[11]);

	mov	eax, 4
	imul	eax, 11					; 0000000bH
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	imul	edx, 10					; 0000000aH
	mov	eax, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 4
	imul	ecx, 9
	mov	edx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx]
	movss	DWORD PTR [esp], xmm0
	mov	eax, 4
	shl	eax, 3
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 92   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set@Matrix3D@@QAEXQAM@Z ENDP				; Matrix3D::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??4Matrix3D@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??4Matrix3D@@QAEAAV0@ABV0@@Z PROC			; Matrix3D::operator=, COMDAT
; _this$ = ecx

; 68   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 69   : 		Row[0] = m.Row[0];

	mov	eax, 16					; 00000010H
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 70   : 		Row[1] = m.Row[1];

	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 71   : 		Row[2] = m.Row[2];

	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 72   : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 73   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Matrix3D@@QAEAAV0@ABV0@@Z ENDP			; Matrix3D::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??0Matrix3D@@QAE@ABV0@@Z PROC				; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 61   : 	TT_INLINE Matrix3D(const Matrix3D & m)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 62   : 	{
; 63   : 		Row[0] = m.Row[0];

	mov	eax, 16					; 00000010H
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 64   : 		Row[1] = m.Row[1];

	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 65   : 		Row[2] = m.Row[2];

	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 66   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix3D@@QAE@ABV0@@Z ENDP				; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@ABVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_position$ = 8						; size = 4
??0Matrix3D@@QAE@ABVVector3@@@Z PROC			; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 57   : 	TT_INLINE explicit Matrix3D(const Vector3 & position)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 58   : 	{
; 59   : 		Set(position);

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3D@@QAEXABVVector3@@@Z	; Matrix3D::Set

; 60   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix3D@@QAE@ABVVector3@@@Z ENDP			; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@ABVQuaternion@@ABVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rotation$ = 8						; size = 4
_position$ = 12						; size = 4
??0Matrix3D@@QAE@ABVQuaternion@@ABVVector3@@@Z PROC	; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 53   : 	TT_INLINE explicit Matrix3D(const Quaternion & rotation,const Vector3 & position)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 54   : 	{
; 55   : 		Set(rotation,position);

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rotation$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3D@@QAEXABVQuaternion@@ABVVector3@@@Z ; Matrix3D::Set

; 56   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0Matrix3D@@QAE@ABVQuaternion@@ABVVector3@@@Z ENDP	; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@ABVMatrix3@@ABVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rotation$ = 8						; size = 4
_position$ = 12						; size = 4
??0Matrix3D@@QAE@ABVMatrix3@@ABVVector3@@@Z PROC	; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 49   : 	TT_INLINE explicit Matrix3D(const Matrix3 & rotation,const Vector3 & position)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 50   : 	{
; 51   : 		Set(rotation,position);

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rotation$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3D@@QAEXABVMatrix3@@ABVVector3@@@Z ; Matrix3D::Set

; 52   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0Matrix3D@@QAE@ABVMatrix3@@ABVVector3@@@Z ENDP	; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@ABVVector3@@MM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_axis$ = 8						; size = 4
_sine$ = 12						; size = 4
_cosine$ = 16						; size = 4
??0Matrix3D@@QAE@ABVVector3@@MM@Z PROC			; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 45   : 	TT_INLINE explicit Matrix3D(const Vector3	&axis,float sine,float cosine)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 46   : 	{
; 47   : 		Set(axis,sine,cosine);

	push	ecx
	movss	xmm0, DWORD PTR _cosine$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _sine$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _axis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3D@@QAEXABVVector3@@MM@Z	; Matrix3D::Set

; 48   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0Matrix3D@@QAE@ABVVector3@@MM@Z ENDP			; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@ABVVector3@@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_axis$ = 8						; size = 4
_angle$ = 12						; size = 4
??0Matrix3D@@QAE@ABVVector3@@M@Z PROC			; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 41   : 	TT_INLINE explicit Matrix3D(const Vector3	&axis,float angle)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 42   : 	{
; 43   : 		Set(axis,angle);

	push	ecx
	movss	xmm0, DWORD PTR _angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _axis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3D@@QAEXABVVector3@@M@Z	; Matrix3D::Set

; 44   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0Matrix3D@@QAE@ABVVector3@@M@Z ENDP			; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@ABVVector3@@000@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_pos$ = 20						; size = 4
??0Matrix3D@@QAE@ABVVector3@@000@Z PROC			; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 37   : 	TT_INLINE explicit Matrix3D(const Vector3	&x,const Vector3	&y,const Vector3	&z,const Vector3	&pos)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 38   : 	{
; 39   : 		Set(x,y,z,pos);

	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _z$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3D@@QAEXABVVector3@@000@Z	; Matrix3D::Set

; 40   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0Matrix3D@@QAE@ABVVector3@@000@Z ENDP			; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@QAM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??0Matrix3D@@QAE@QAM@Z PROC				; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 31   : 	TT_INLINE explicit Matrix3D(float m[12])

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 32   : 	{
; 33   : 		Row[0].Set(m[0],m[1],m[2],m[3]);

	mov	eax, 4
	imul	eax, 3
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx]
	movss	DWORD PTR [esp], xmm0
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 34   : 		Row[1].Set(m[4],m[5],m[6],m[7]);

	mov	eax, 4
	imul	eax, 7
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	imul	edx, 6
	mov	eax, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 4
	imul	ecx, 5
	mov	edx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx]
	movss	DWORD PTR [esp], xmm0
	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 35   : 		Row[2].Set(m[8],m[9],m[10],m[11]);

	mov	eax, 4
	imul	eax, 11					; 0000000bH
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	imul	edx, 10					; 0000000aH
	mov	eax, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 4
	imul	ecx, 9
	mov	edx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx]
	movss	DWORD PTR [esp], xmm0
	mov	eax, 4
	shl	eax, 3
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 36   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix3D@@QAE@QAM@Z ENDP				; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_init$ = 8						; size = 1
??0Matrix3D@@QAE@_N@Z PROC				; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 30   : 	TT_INLINE explicit Matrix3D(bool init) { if (init) Make_Identity(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	movzx	eax, BYTE PTR _init$[ebp]
	test	eax, eax
	je	SHORT $LN2@Matrix3D
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Make_Identity@Matrix3D@@QAEXXZ		; Matrix3D::Make_Identity
$LN2@Matrix3D:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix3D@@QAE@_N@Z ENDP				; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??AMatrix3D@@QBEABVVector4@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AMatrix3D@@QBEABVVector4@@H@Z PROC			; Matrix3D::operator[], COMDAT
; _this$ = ecx

; 28   :    TT_INLINE const Vector4 & operator [] (int i) const { return Row[i]; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AMatrix3D@@QBEABVVector4@@H@Z ENDP			; Matrix3D::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??AMatrix3D@@QAEAAVVector4@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AMatrix3D@@QAEAAVVector4@@H@Z PROC			; Matrix3D::operator[], COMDAT
; _this$ = ecx

; 27   :    TT_INLINE Vector4 & operator [] (int i) { return Row[i]; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AMatrix3D@@QAEAAVVector4@@H@Z ENDP			; Matrix3D::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ??XVector4@@QAEAAV0@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_f$ = 8							; size = 4
??XVector4@@QAEAAV0@M@Z PROC				; Vector4::operator*=, COMDAT
; _this$ = ecx

; 64   : 	TT_INLINE Vector4& operator*=(float f) { X *= f; Y *= f; Z *= f; W *= f; return *this;	};

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _f$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	mulss	xmm0, DWORD PTR _f$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR _f$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+12]
	mulss	xmm0, DWORD PTR _f$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??XVector4@@QAEAAV0@M@Z ENDP				; Vector4::operator*=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ??ZVector4@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??ZVector4@@QAEAAV0@ABV0@@Z PROC			; Vector4::operator-=, COMDAT
; _this$ = ecx

; 63   : 	TT_INLINE Vector4& operator-=(const Vector4& v) { X -= v.X; Y -= v.Y; Z -= v.Z; W -= v.W; return *this;	};

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	subss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	subss	xmm0, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	subss	xmm0, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+12]
	subss	xmm0, DWORD PTR [ecx+12]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+12], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??ZVector4@@QAEAAV0@ABV0@@Z ENDP			; Vector4::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ??YVector4@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??YVector4@@QAEAAV0@ABV0@@Z PROC			; Vector4::operator+=, COMDAT
; _this$ = ecx

; 62   : 	TT_INLINE Vector4& operator+=(const Vector4& v) { X += v.X; Y += v.Y; Z += v.Z; W += v.W; return *this;	};

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	addss	xmm0, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	addss	xmm0, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+12]
	addss	xmm0, DWORD PTR [ecx+12]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+12], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??YVector4@@QAEAAV0@ABV0@@Z ENDP			; Vector4::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ??AVector4@@QBEABMH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AVector4@@QBEABMH@Z PROC				; Vector4::operator[], COMDAT
; _this$ = ecx

; 39   : 	TT_INLINE const float& operator[](int i) const { return (&X)[i]; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AVector4@@QBEABMH@Z ENDP				; Vector4::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ??AVector4@@QAEAAMH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AVector4@@QAEAAMH@Z PROC				; Vector4::operator[], COMDAT
; _this$ = ecx

; 38   : 	TT_INLINE float& operator[](int i) { return (&X)[i]; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AVector4@@QAEAAMH@Z ENDP				; Vector4::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ?Set@Vector4@@QAEXMMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_w$ = 20						; size = 4
?Set@Vector4@@QAEXMMMM@Z PROC				; Vector4::Set, COMDAT
; _this$ = ecx

; 35   : 	TT_INLINE void Set(float x, float y, float z, float w) { X = x; Y = y; Z = z; W = w; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [eax], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [eax+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [eax+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _w$[ebp]
	movss	DWORD PTR [eax+12], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Set@Vector4@@QAEXMMMM@Z ENDP				; Vector4::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ??4Vector4@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??4Vector4@@QAEAAV0@ABV0@@Z PROC			; Vector4::operator=, COMDAT
; _this$ = ecx

; 34   : 	TT_INLINE Vector4& operator=(const Vector4& v) { X = v.X; Y = v.Y; Z = v.Z; W = v.W; return *this; };	

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Vector4@@QAEAAV0@ABV0@@Z ENDP			; Vector4::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ??0Vector4@@QAE@MMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_w$ = 20						; size = 4
??0Vector4@@QAE@MMMM@Z PROC				; Vector4::Vector4, COMDAT
; _this$ = ecx

; 26   : 	TT_INLINE Vector4(float x, float y, float z, float w) {	X = x; Y = y; Z = z; W = w;	};

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [eax], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [eax+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [eax+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _w$[ebp]
	movss	DWORD PTR [eax+12], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0Vector4@@QAE@MMMM@Z ENDP				; Vector4::Vector4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ??0Vector4@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Vector4@@QAE@XZ PROC					; Vector4::Vector4, COMDAT
; _this$ = ecx

; 24   : 	TT_INLINE Vector4() {};

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Vector4@@QAE@XZ ENDP					; Vector4::Vector4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4file_auto_ptr@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4file_auto_ptr@@QAEAAV0@ABV0@@Z PROC			; file_auto_ptr::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4file_auto_ptr@@QAEAAV0@ABV0@@Z ENDP			; file_auto_ptr::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ?get@file_auto_ptr@@QAEPAVFileClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@file_auto_ptr@@QAEPAVFileClass@@XZ PROC		; file_auto_ptr::get, COMDAT
; _this$ = ecx

; 202  : 	FileClass* get() { return _Ptr; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?get@file_auto_ptr@@QAEPAVFileClass@@XZ ENDP		; file_auto_ptr::get
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ??Dfile_auto_ptr@@QAEAAVFileClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Dfile_auto_ptr@@QAEAAVFileClass@@XZ PROC		; file_auto_ptr::operator*, COMDAT
; _this$ = ecx

; 201  : 	FileClass& operator*() { return *_Ptr; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Dfile_auto_ptr@@QAEAAVFileClass@@XZ ENDP		; file_auto_ptr::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ??Bfile_auto_ptr@@QAEPAVFileClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Bfile_auto_ptr@@QAEPAVFileClass@@XZ PROC		; file_auto_ptr::operator FileClass *, COMDAT
; _this$ = ecx

; 200  : 	operator FileClass *() { return _Ptr; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bfile_auto_ptr@@QAEPAVFileClass@@XZ ENDP		; file_auto_ptr::operator FileClass *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ??Cfile_auto_ptr@@QAEPAVFileClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Cfile_auto_ptr@@QAEPAVFileClass@@XZ PROC		; file_auto_ptr::operator->, COMDAT
; _this$ = ecx

; 199  : 	FileClass* operator ->() { return _Ptr; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Cfile_auto_ptr@@QAEPAVFileClass@@XZ ENDP		; file_auto_ptr::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EINIClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EINIClass@@UAEPAXI@Z PROC				; INIClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1INIClass@@UAE@XZ		; INIClass::~INIClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1INIClass@@UAE@XZ			; INIClass::~INIClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EINIClass@@UAEPAXI@Z ENDP				; INIClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GINIClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GINIClass@@UAEPAXI@Z PROC				; INIClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1INIClass@@UAE@XZ			; INIClass::~INIClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GINIClass@@UAEPAXI@Z ENDP				; INIClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4INIClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4INIClass@@QAEAAV0@ABV0@@Z PROC			; INIClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4INIClass@@QAEAAV0@ABV0@@Z ENDP			; INIClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0INIClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0INIClass@@QAE@ABV0@@Z PROC				; INIClass::INIClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7INIClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0INIClass@@QAE@ABV0@@Z ENDP				; INIClass::INIClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ?Get_File_Name@INIClass@@QAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_File_Name@INIClass@@QAEPBDXZ PROC			; INIClass::Get_File_Name, COMDAT
; _this$ = ecx

; 183  : 	const char *Get_File_Name() { //DA

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 184  : 		return Filename;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]

; 185  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_File_Name@INIClass@@QAEPBDXZ ENDP			; INIClass::Get_File_Name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ?Get_Section_Index@INIClass@@QAEAAV?$IndexClass@HPAUINISection@@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Section_Index@INIClass@@QAEAAV?$IndexClass@HPAUINISection@@@@XZ PROC ; INIClass::Get_Section_Index, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 181  : 		return *SectionIndex;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 182  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Section_Index@INIClass@@QAEAAV?$IndexClass@HPAUINISection@@@@XZ ENDP ; INIClass::Get_Section_Index
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ?Get_Section_List@INIClass@@QAEAAV?$List@PAUINISection@@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Section_List@INIClass@@QAEAAV?$List@PAUINISection@@@@XZ PROC ; INIClass::Get_Section_List, COMDAT
; _this$ = ecx

; 176  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 177  : 		return *SectionList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 178  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Section_List@INIClass@@QAEAAV?$List@PAUINISection@@@@XZ ENDP ; INIClass::Get_Section_List
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ?Section_Present@INIClass@@QBE_NPBD@Z
_TEXT	SEGMENT
tv68 = -72						; size = 4
_this$ = -4						; size = 4
_section$ = 8						; size = 4
?Section_Present@INIClass@@QBE_NPBD@Z PROC		; INIClass::Section_Present, COMDAT
; _this$ = ecx

; 172  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 173  : 		return Find_Section(section) != 0;

	mov	eax, DWORD PTR _section$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find_Section@INIClass@@QBEPAUINISection@@PBD@Z ; INIClass::Find_Section
	test	eax, eax
	je	SHORT $LN3@Section_Pr
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@Section_Pr
$LN3@Section_Pr:
	mov	DWORD PTR tv68[ebp], 0
$LN4@Section_Pr:
	mov	al, BYTE PTR tv68[ebp]

; 174  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Section_Present@INIClass@@QBE_NPBD@Z ENDP		; INIClass::Section_Present
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ?Is_Present@INIClass@@QBE_NPBD0@Z
_TEXT	SEGMENT
tv76 = -72						; size = 4
tv70 = -72						; size = 4
_this$ = -4						; size = 4
_section$ = 8						; size = 4
_entry$ = 12						; size = 4
?Is_Present@INIClass@@QBE_NPBD0@Z PROC			; INIClass::Is_Present, COMDAT
; _this$ = ecx

; 161  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 162  : 		if (entry)

	cmp	DWORD PTR _entry$[ebp], 0
	je	SHORT $LN2@Is_Present

; 163  : 		{
; 164  : 			return Find_Entry(section,entry) != 0;

	mov	eax, DWORD PTR _entry$[ebp]
	push	eax
	mov	ecx, DWORD PTR _section$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find_Entry@INIClass@@QBEPAUINIEntry@@PBD0@Z ; INIClass::Find_Entry
	test	eax, eax
	je	SHORT $LN5@Is_Present
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN6@Is_Present
$LN5@Is_Present:
	mov	DWORD PTR tv70[ebp], 0
$LN6@Is_Present:
	mov	al, BYTE PTR tv70[ebp]
	jmp	SHORT $LN3@Is_Present

; 165  : 		}
; 166  : 		else

	jmp	SHORT $LN3@Is_Present
$LN2@Is_Present:

; 167  : 		{
; 168  : 			return Find_Section(section) != 0;

	mov	eax, DWORD PTR _section$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find_Section@INIClass@@QBEPAUINISection@@PBD@Z ; INIClass::Find_Section
	test	eax, eax
	je	SHORT $LN7@Is_Present
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN8@Is_Present
$LN7@Is_Present:
	mov	DWORD PTR tv76[ebp], 0
$LN8@Is_Present:
	mov	al, BYTE PTR tv76[ebp]
$LN3@Is_Present:

; 169  : 		}
; 170  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Is_Present@INIClass@@QBE_NPBD0@Z ENDP			; INIClass::Is_Present
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4ChunkSaveClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4ChunkSaveClass@@QAEAAV0@ABV0@@Z PROC			; ChunkSaveClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, 773				; 00000305H
	mov	esi, DWORD PTR ___that$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ChunkSaveClass@@QAEAAV0@ABV0@@Z ENDP			; ChunkSaveClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\chunkclass.h
;	COMDAT ?Set_Contains_Chunks@ChunkSaveClass@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Set_Contains_Chunks@ChunkSaveClass@@QAEXXZ PROC	; ChunkSaveClass::Set_Contains_Chunks, COMDAT
; _this$ = ecx

; 102  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 103  : 		HeaderStack[StackIndex-1].ChunkSize |= 0x80000000;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*8+1028]
	or	eax, -2147483648			; 80000000H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+edx*8+1028], eax

; 104  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Set_Contains_Chunks@ChunkSaveClass@@QAEXXZ ENDP	; ChunkSaveClass::Set_Contains_Chunks
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4ChunkLoadClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4ChunkLoadClass@@QAEAAV0@ABV0@@Z PROC			; ChunkLoadClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, 773				; 00000305H
	mov	esi, DWORD PTR ___that$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ChunkLoadClass@@QAEAAV0@ABV0@@Z ENDP			; ChunkLoadClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EWideStringClass@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EWideStringClass@@QAEPAXI@Z PROC			; WideStringClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1WideStringClass@@QAE@XZ	; WideStringClass::~WideStringClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1WideStringClass@@QAE@XZ		; WideStringClass::~WideStringClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EWideStringClass@@QAEPAXI@Z ENDP			; WideStringClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ??1WideStringClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1WideStringClass@@QAE@XZ PROC				; WideStringClass::~WideStringClass, COMDAT
; _this$ = ecx

; 778  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 779  : 	Free_String ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?Free_String@WideStringClass@@AAEXXZ

; 780  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1WideStringClass@@QAE@XZ ENDP				; WideStringClass::~WideStringClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EStringClass@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EStringClass@@QAEPAXI@Z PROC				; StringClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1StringClass@@QAE@XZ		; StringClass::~StringClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringClass@@QAE@XZ			; StringClass::~StringClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EStringClass@@QAEPAXI@Z ENDP				; StringClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ??1StringClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1StringClass@@QAE@XZ PROC				; StringClass::~StringClass, COMDAT
; _this$ = ecx

; 366  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 367  : 	Free_String ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?Free_String@StringClass@@AAEXXZ

; 368  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1StringClass@@QAE@XZ ENDP				; StringClass::~StringClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\criticalsectionclass.h
;	COMDAT ??0FastCriticalSectionClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0FastCriticalSectionClass@@QAE@XZ PROC		; FastCriticalSectionClass::FastCriticalSectionClass, COMDAT
; _this$ = ecx

; 110  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 111  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0FastCriticalSectionClass@@QAE@XZ ENDP		; FastCriticalSectionClass::FastCriticalSectionClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\criticalsectionclass.h
;	COMDAT ??1LockClass@FastCriticalSectionClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1LockClass@FastCriticalSectionClass@@QAE@XZ PROC	; FastCriticalSectionClass::LockClass::~LockClass, COMDAT
; _this$ = ecx

; 102  : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 103  : 			criticalSection.Leave();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Leave@FastCriticalSectionClass@@AAEXXZ	; FastCriticalSectionClass::Leave

; 104  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1LockClass@FastCriticalSectionClass@@QAE@XZ ENDP	; FastCriticalSectionClass::LockClass::~LockClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\criticalsectionclass.h
;	COMDAT ??0LockClass@FastCriticalSectionClass@@QAE@AAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__criticalSection$ = 8					; size = 4
??0LockClass@FastCriticalSectionClass@@QAE@AAV1@@Z PROC	; FastCriticalSectionClass::LockClass::LockClass, COMDAT
; _this$ = ecx

; 97   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __criticalSection$[ebp]
	mov	DWORD PTR [eax], ecx

; 98   : 			criticalSection.Enter();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Enter@FastCriticalSectionClass@@AAEXXZ	; FastCriticalSectionClass::Enter

; 99   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0LockClass@FastCriticalSectionClass@@QAE@AAV1@@Z ENDP	; FastCriticalSectionClass::LockClass::LockClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\criticalsectionclass.h
;	COMDAT ?Leave@FastCriticalSectionClass@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Leave@FastCriticalSectionClass@@AAEXXZ PROC		; FastCriticalSectionClass::Leave, COMDAT
; _this$ = ecx

; 76   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 77   : 		Flag = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 78   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Leave@FastCriticalSectionClass@@AAEXXZ ENDP		; FastCriticalSectionClass::Leave
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\criticalsectionclass.h
;	COMDAT ?Enter@FastCriticalSectionClass@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Enter@FastCriticalSectionClass@@AAEXXZ PROC		; FastCriticalSectionClass::Enter, COMDAT
; _this$ = ecx

; 65   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
$LN6@Enter:

; 66   : 		TT_ASSERT((size_t)&Flag % 4 == 0); // aligned to 4 bytes please

	xor	eax, eax
	jne	SHORT $LN6@Enter
	mov	eax, DWORD PTR _this$[ebp]
	xor	edx, edx
	mov	ecx, 4
	div	ecx
	test	edx, edx
	je	SHORT $LN3@Enter
	int	3
$LN3@Enter:

; 67   : 		for (;;)
; 68   : 		{
; 69   : 			if (_interlockedbittestandset(&Flag, 0) == 0) return;

	mov	eax, DWORD PTR _this$[ebp]
	lock	 bts	 DWORD PTR [eax], 0
	setb	cl
	movzx	edx, cl
	test	edx, edx
	jne	SHORT $LN1@Enter
	jmp	SHORT $LN8@Enter
$LN1@Enter:

; 70   : 			_mm_pause();

	pause

; 71   : 		};

	jmp	SHORT $LN3@Enter
$LN8@Enter:

; 72   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Enter@FastCriticalSectionClass@@AAEXXZ ENDP		; FastCriticalSectionClass::Enter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CriticalSectionClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CriticalSectionClass@@QAEAAV0@ABV0@@Z PROC		; CriticalSectionClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4CriticalSectionClass@@QAEAAV0@ABV0@@Z ENDP		; CriticalSectionClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EThreadClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EThreadClass@@UAEPAXI@Z PROC				; ThreadClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1ThreadClass@@UAE@XZ		; ThreadClass::~ThreadClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ThreadClass@@UAE@XZ			; ThreadClass::~ThreadClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EThreadClass@@UAEPAXI@Z ENDP				; ThreadClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GThreadClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GThreadClass@@UAEPAXI@Z PROC				; ThreadClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ThreadClass@@UAE@XZ			; ThreadClass::~ThreadClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GThreadClass@@UAEPAXI@Z ENDP				; ThreadClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4ThreadClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_$S1$1 = -8						; size = 4
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4ThreadClass@@QAEAAV0@ABV0@@Z PROC			; ThreadClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	DWORD PTR _$S1$1[ebp], 0
	jmp	SHORT $LN3@operator
$LN2@operator:
	mov	eax, DWORD PTR _$S1$1[ebp]
	add	eax, 1
	mov	DWORD PTR _$S1$1[ebp], eax
$LN3@operator:
	cmp	DWORD PTR _$S1$1[ebp], 67		; 00000043H
	jae	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S1$1[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S1$1[ebp]
	mov	dl, BYTE PTR [ecx+5]
	mov	BYTE PTR [eax+5], dl
	jmp	SHORT $LN2@operator
$LN1@operator:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	mov	DWORD PTR [eax+72], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR [eax+76], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR [eax+84], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ThreadClass@@QAEAAV0@ABV0@@Z ENDP			; ThreadClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ThreadClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0ThreadClass@@QAE@ABV0@@Z PROC			; ThreadClass::ThreadClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ThreadClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 5
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 5
	mov	ecx, 16					; 00000010H
	rep movsd
	movsw
	movsb
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	mov	DWORD PTR [eax+72], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR [eax+76], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR [eax+84], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0ThreadClass@@QAE@ABV0@@Z ENDP			; ThreadClass::ThreadClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\threadclass.h
;	COMDAT ?Get_Name@ThreadClass@@QAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Name@ThreadClass@@QAEPBDXZ PROC			; ThreadClass::Get_Name, COMDAT
; _this$ = ecx

; 45   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 46   : 		return name;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 5

; 47   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Name@ThreadClass@@QAEPBDXZ ENDP			; ThreadClass::Get_Name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\threadclass.h
;	COMDAT ?Get_Current_Thread_ID@ThreadClass@@SAHXZ
_TEXT	SEGMENT
?Get_Current_Thread_ID@ThreadClass@@SAHXZ PROC		; ThreadClass::Get_Current_Thread_ID, COMDAT

; 41   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 42   : 		return GetCurrentThreadId();

	call	DWORD PTR __imp__GetCurrentThreadId@0

; 43   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Current_Thread_ID@ThreadClass@@SAHXZ ENDP		; ThreadClass::Get_Current_Thread_ID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\threadclass.h
;	COMDAT ?Is_Running@ThreadClass@@QAE_NXZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?Is_Running@ThreadClass@@QAE_NXZ PROC			; ThreadClass::Is_Running, COMDAT
; _this$ = ecx

; 37   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 38   : 		return handle != 0;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN3@Is_Running
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@Is_Running
$LN3@Is_Running:
	mov	DWORD PTR tv66[ebp], 0
$LN4@Is_Running:
	mov	al, BYTE PTR tv66[ebp]

; 39   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Is_Running@ThreadClass@@QAE_NXZ ENDP			; ThreadClass::Is_Running
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4ScriptRegistrar@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4ScriptRegistrar@@QAEAAV0@ABV0@@Z PROC		; ScriptRegistrar::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ScriptRegistrar@@QAEAAV0@ABV0@@Z ENDP		; ScriptRegistrar::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EScriptFactory@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EScriptFactory@@UAEPAXI@Z PROC			; ScriptFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EScriptFactory@@UAEPAXI@Z ENDP			; ScriptFactory::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GScriptFactory@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GScriptFactory@@UAEPAXI@Z PROC			; ScriptFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GScriptFactory@@UAEPAXI@Z ENDP			; ScriptFactory::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4ScriptFactory@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4ScriptFactory@@QAEAAV0@ABV0@@Z PROC			; ScriptFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ScriptFactory@@QAEAAV0@ABV0@@Z ENDP			; ScriptFactory::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ScriptFactory@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0ScriptFactory@@QAE@ABV0@@Z PROC			; ScriptFactory::ScriptFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ScriptFactory@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0ScriptFactory@@QAE@ABV0@@Z ENDP			; ScriptFactory::ScriptFactory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Set_Attack@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_object$ = 8						; size = 4
_range$ = 12						; size = 4
_error$ = 16						; size = 4
_primary_fire$ = 20					; size = 1
?Set_Attack@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z PROC ; ActionParamsStruct::Set_Attack, COMDAT
; _this$ = ecx

; 329  : 	void Set_Attack( GameObject * object, float range, float error, bool primary_fire ) { AttackObject = object; AttackRange = range; AttackError = error; AttackPrimaryFire = primary_fire; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _object$[ebp]
	mov	DWORD PTR [eax+88], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _range$[ebp]
	movss	DWORD PTR [eax+76], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _error$[ebp]
	movss	DWORD PTR [eax+80], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _primary_fire$[ebp]
	mov	BYTE PTR [eax+92], cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Set_Attack@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z ENDP ; ActionParamsStruct::Set_Attack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Set_Attack@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_location$ = 8						; size = 4
_range$ = 12						; size = 4
_error$ = 16						; size = 4
_primary_fire$ = 20					; size = 1
?Set_Attack@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z PROC ; ActionParamsStruct::Set_Attack, COMDAT
; _this$ = ecx

; 328  : 	void Set_Attack( const Vector3 & location, float range, float error, bool primary_fire ) { AttackLocation = location; AttackRange = range; AttackError = error; AttackPrimaryFire = primary_fire; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _location$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _range$[ebp]
	movss	DWORD PTR [eax+76], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _error$[ebp]
	movss	DWORD PTR [eax+80], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _primary_fire$[ebp]
	mov	BYTE PTR [eax+92], cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Set_Attack@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ENDP ; ActionParamsStruct::Set_Attack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Set_Movement@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_object$ = 8						; size = 4
_speed$ = 12						; size = 4
_arrived_distance$ = 16					; size = 4
_crouched$ = 20						; size = 1
?Set_Movement@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z PROC ; ActionParamsStruct::Set_Movement, COMDAT
; _this$ = ecx

; 327  : 	void Set_Movement( GameObject *	object, float speed, float arrived_distance, bool crouched = false ) { MoveObject = object; MoveSpeed = speed; MoveArrivedDistance = arrived_distance; MoveCrouched = crouched; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _object$[ebp]
	mov	DWORD PTR [eax+44], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _speed$[ebp]
	movss	DWORD PTR [eax+60], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _arrived_distance$[ebp]
	movss	DWORD PTR [eax+64], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _crouched$[ebp]
	mov	BYTE PTR [eax+70], cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Set_Movement@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z ENDP ; ActionParamsStruct::Set_Movement
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Set_Movement@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_location$ = 8						; size = 4
_speed$ = 12						; size = 4
_arrived_distance$ = 16					; size = 4
_crouched$ = 20						; size = 1
?Set_Movement@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z PROC ; ActionParamsStruct::Set_Movement, COMDAT
; _this$ = ecx

; 326  : 	void Set_Movement( const Vector3 & location, float speed, float arrived_distance, bool crouched = false ) { MoveLocation = location; MoveSpeed = speed; MoveArrivedDistance = arrived_distance; MoveCrouched = crouched; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _location$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _speed$[ebp]
	movss	DWORD PTR [eax+60], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _arrived_distance$[ebp]
	movss	DWORD PTR [eax+64], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _crouched$[ebp]
	mov	BYTE PTR [eax+70], cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Set_Movement@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ENDP ; ActionParamsStruct::Set_Movement
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_script$ = 8						; size = 4
_priority$ = 12						; size = 4
_action_id$ = 16					; size = 4
_ai_state$ = 20						; size = 4
?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z PROC ; ActionParamsStruct::Set_Basic, COMDAT
; _this$ = ecx

; 321  : 	void Set_Basic( GameObjObserverClass * script, float priority, int action_id, SoldierAIState ai_state = NO_AI_STATE_CHANGE ) { ObserverID = script->Get_ID(); Priority = (int)priority; ActionID = action_id; AIState = ai_state; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _script$[ebp]
	call	?Get_ID@GameObjObserverClass@@QAEHXZ	; GameObjObserverClass::Get_ID
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
	cvttss2si eax, DWORD PTR _priority$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _action_id$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ai_state$[ebp]
	mov	DWORD PTR [eax+168], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ENDP ; ActionParamsStruct::Set_Basic
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0ActionParamsStruct@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ActionParamsStruct@@QAE@XZ PROC			; ActionParamsStruct::ActionParamsStruct, COMDAT
; _this$ = ecx

; 432  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+28], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+60], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _DONT_MOVE_ARRIVED_DIST
	movss	DWORD PTR [eax+64], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+68], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+69], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+70], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+71], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+72], 0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@41a00000
	movss	DWORD PTR [eax+76], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+80], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+84], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+92], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+93], 0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+108], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+109], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+110], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+111], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+112], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+113], 0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [eax+128], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+132], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+136], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+140], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+144], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+148], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+156], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+160], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+164], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+168], -1
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 184				; 000000b8H
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3

; 433  : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ActionParamsStruct@@QAE@XZ ENDP			; ActionParamsStruct::ActionParamsStruct
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EScriptImpClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EScriptImpClass@@UAEPAXI@Z PROC			; ScriptImpClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1ScriptImpClass@@UAE@XZ	; ScriptImpClass::~ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	28					; 0000001cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EScriptImpClass@@UAEPAXI@Z ENDP			; ScriptImpClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GScriptImpClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GScriptImpClass@@UAEPAXI@Z PROC			; ScriptImpClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GScriptImpClass@@UAEPAXI@Z ENDP			; ScriptImpClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4ScriptImpClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4ScriptImpClass@@QAEAAV0@ABV0@@Z PROC			; ScriptImpClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4ScriptClass@@QAEAAV0@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ScriptImpClass@@QAEAAV0@ABV0@@Z ENDP			; ScriptImpClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ScriptImpClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0ScriptImpClass@@QAE@ABV0@@Z PROC			; ScriptImpClass::ScriptImpClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptClass@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ScriptImpClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0ScriptImpClass@@QAE@ABV0@@Z ENDP			; ScriptImpClass::ScriptImpClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Get_Bool_Parameter@ScriptImpClass@@QAE_NH@Z
_TEXT	SEGMENT
tv68 = -72						; size = 4
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?Get_Bool_Parameter@ScriptImpClass@@QAE_NH@Z PROC	; ScriptImpClass::Get_Bool_Parameter, COMDAT
; _this$ = ecx

; 290  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 291  :         return Get_Int_Parameter(index) != 0;

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHH@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	SHORT $LN3@Get_Bool_P
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@Get_Bool_P
$LN3@Get_Bool_P:
	mov	DWORD PTR tv68[ebp], 0
$LN4@Get_Bool_P:
	mov	al, BYTE PTR tv68[ebp]

; 292  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Bool_Parameter@ScriptImpClass@@QAE_NH@Z ENDP	; ScriptImpClass::Get_Bool_Parameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Get_Bool_Parameter@ScriptImpClass@@QAE_NPBD@Z
_TEXT	SEGMENT
tv68 = -72						; size = 4
_this$ = -4						; size = 4
_name$ = 8						; size = 4
?Get_Bool_Parameter@ScriptImpClass@@QAE_NPBD@Z PROC	; ScriptImpClass::Get_Bool_Parameter, COMDAT
; _this$ = ecx

; 286  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 287  :         return Get_Int_Parameter(name) != 0;

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	SHORT $LN3@Get_Bool_P
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@Get_Bool_P
$LN3@Get_Bool_P:
	mov	DWORD PTR tv68[ebp], 0
$LN4@Get_Bool_P:
	mov	al, BYTE PTR tv68[ebp]

; 288  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Bool_Parameter@ScriptImpClass@@QAE_NPBD@Z ENDP	; ScriptImpClass::Get_Bool_Parameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Get_Float_Parameter@ScriptImpClass@@QAEMH@Z
_TEXT	SEGMENT
tv74 = -72						; size = 4
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?Get_Float_Parameter@ScriptImpClass@@QAEMH@Z PROC	; ScriptImpClass::Get_Float_Parameter, COMDAT
; _this$ = ecx

; 282  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 283  : 		return (float)atof(Get_Parameter(index));

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDH@Z ; ScriptImpClass::Get_Parameter
	push	eax
	call	DWORD PTR __imp__atof
	add	esp, 4
	fstp	DWORD PTR tv74[ebp]
	fld	DWORD PTR tv74[ebp]

; 284  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Float_Parameter@ScriptImpClass@@QAEMH@Z ENDP	; ScriptImpClass::Get_Float_Parameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Get_Int_Parameter@ScriptImpClass@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?Get_Int_Parameter@ScriptImpClass@@QAEHH@Z PROC		; ScriptImpClass::Get_Int_Parameter, COMDAT
; _this$ = ecx

; 278  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 279  : 		return atoi(Get_Parameter(index));

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDH@Z ; ScriptImpClass::Get_Parameter
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 4

; 280  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Int_Parameter@ScriptImpClass@@QAEHH@Z ENDP		; ScriptImpClass::Get_Int_Parameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Get_Parameter_Count@ScriptImpClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Parameter_Count@ScriptImpClass@@QAEHXZ PROC	; ScriptImpClass::Get_Parameter_Count, COMDAT
; _this$ = ecx

; 274  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 275  : 		return mArgC;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]

; 276  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Parameter_Count@ScriptImpClass@@QAEHXZ ENDP	; ScriptImpClass::Get_Parameter_Count
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ PROC ; ScriptImpClass::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 265  : 	virtual	void Register_Auto_Save_Variables()	{}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ ENDP ; ScriptImpClass::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_loader$ = 8						; size = 4
?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z PROC	; ScriptImpClass::Load_Data, COMDAT
; _this$ = ecx

; 264  : 	virtual void Load_Data(ScriptLoader& loader) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z ENDP	; ScriptImpClass::Load_Data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_saver$ = 8						; size = 4
?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z PROC	; ScriptImpClass::Save_Data, COMDAT
; _this$ = ecx

; 263  : 	virtual void Save_Data(ScriptSaver& saver) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z ENDP	; ScriptImpClass::Save_Data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ PROC ; ScriptImpClass::Get_Owner_Ptr, COMDAT
; _this$ = ecx

; 258  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 259  : 		return &mOwner;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8

; 260  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ ENDP ; ScriptImpClass::Get_Owner_Ptr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ PROC	; ScriptImpClass::Owner, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 255  : 		return mOwner;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 256  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ ENDP	; ScriptImpClass::Owner
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_exiter$ = 12						; size = 4
?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z PROC ; ScriptImpClass::Exited, COMDAT
; _this$ = ecx

; 251  :   void Exited(GameObject *obj,GameObject *exiter) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ENDP ; ScriptImpClass::Exited
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_enterer$ = 12						; size = 4
?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z PROC ; ScriptImpClass::Entered, COMDAT
; _this$ = ecx

; 244  :   void Entered(GameObject *obj,GameObject *enterer) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ENDP ; ScriptImpClass::Entered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_poker$ = 12						; size = 4
?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z PROC ; ScriptImpClass::Poked, COMDAT
; _this$ = ecx

; 237  :   void Poked(GameObject *obj,GameObject *poker) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ENDP ; ScriptImpClass::Poked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_animation_name$ = 12					; size = 4
?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z PROC ; ScriptImpClass::Animation_Complete, COMDAT
; _this$ = ecx

; 229  :   void Animation_Complete(GameObject *obj,const char *animation_name) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z ENDP ; ScriptImpClass::Animation_Complete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z PROC ; ScriptImpClass::Timer_Expired, COMDAT
; _this$ = ecx

; 221  :   void Timer_Expired(GameObject *obj,int number) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z ENDP ; ScriptImpClass::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_action_id$ = 12					; size = 4
_complete_reason$ = 16					; size = 4
?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z PROC ; ScriptImpClass::Action_Complete, COMDAT
; _this$ = ecx

; 212  :   void Action_Complete(GameObject *obj,int action_id,ActionCompleteReason complete_reason) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z ENDP ; ScriptImpClass::Action_Complete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_enemy$ = 12						; size = 4
?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z PROC ; ScriptImpClass::Enemy_Seen, COMDAT
; _this$ = ecx

; 201  :   void Enemy_Seen(GameObject *obj,GameObject *enemy) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ENDP ; ScriptImpClass::Enemy_Seen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_sound$ = 12						; size = 4
?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z PROC ; ScriptImpClass::Sound_Heard, COMDAT
; _this$ = ecx

; 193  :   void Sound_Heard(GameObject *obj,const CombatSound & sound) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z ENDP ; ScriptImpClass::Sound_Heard
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z PROC ; ScriptImpClass::Custom, COMDAT
; _this$ = ecx

; 184  :   void Custom(GameObject *obj,int type,int param,GameObject *sender) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z ENDP ; ScriptImpClass::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_amount$ = 16						; size = 4
?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z PROC ; ScriptImpClass::Damaged, COMDAT
; _this$ = ecx

; 174  :   void Damaged(GameObject *obj,GameObject *damager,float amount) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z ENDP ; ScriptImpClass::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_killer$ = 12						; size = 4
?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z PROC ; ScriptImpClass::Killed, COMDAT
; _this$ = ecx

; 164  :   void Killed(GameObject *obj,GameObject *killer) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ENDP ; ScriptImpClass::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z PROC ; ScriptImpClass::Destroyed, COMDAT
; _this$ = ecx

; 155  :   void Destroyed(GameObject *obj) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z ENDP ; ScriptImpClass::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z PROC ; ScriptImpClass::Created, COMDAT
; _this$ = ecx

; 149  :   void Created(GameObject *obj) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z ENDP ; ScriptImpClass::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_factory$ = 8						; size = 4
?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z PROC ; ScriptImpClass::SetFactory, COMDAT
; _this$ = ecx

; 136  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 137  : 		mFactory = factory;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _factory$[ebp]
	mov	DWORD PTR [eax+20], ecx

; 138  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ENDP ; ScriptImpClass::SetFactory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EScriptClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EScriptClass@@UAEPAXI@Z PROC				; ScriptClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1ScriptClass@@UAE@XZ		; ScriptClass::~ScriptClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptClass@@UAE@XZ			; ScriptClass::~ScriptClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EScriptClass@@UAEPAXI@Z ENDP				; ScriptClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GScriptClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GScriptClass@@UAEPAXI@Z PROC				; ScriptClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptClass@@UAE@XZ			; ScriptClass::~ScriptClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GScriptClass@@UAEPAXI@Z ENDP				; ScriptClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4ScriptClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4ScriptClass@@QAEAAV0@ABV0@@Z PROC			; ScriptClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4GameObjObserverClass@@QAEAAV0@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ScriptClass@@QAEAAV0@ABV0@@Z ENDP			; ScriptClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ScriptClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0ScriptClass@@QAE@ABV0@@Z PROC			; ScriptClass::ScriptClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0GameObjObserverClass@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ScriptClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0ScriptClass@@QAE@ABV0@@Z ENDP			; ScriptClass::ScriptClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ScriptClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ScriptClass@@QAE@XZ PROC				; ScriptClass::ScriptClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0GameObjObserverClass@@QAE@XZ		; GameObjObserverClass::GameObjObserverClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ScriptClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ScriptClass@@QAE@XZ ENDP				; ScriptClass::ScriptClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??1ScriptClass@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1ScriptClass@@UAE@XZ PROC				; ScriptClass::~ScriptClass, COMDAT
; _this$ = ecx

; 124  : 	virtual ~ScriptClass() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ScriptClass@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GameObjObserverClass@@UAE@XZ		; GameObjObserverClass::~GameObjObserverClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1ScriptClass@@UAE@XZ ENDP				; ScriptClass::~ScriptClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EGameObjObserverClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EGameObjObserverClass@@UAEPAXI@Z PROC		; GameObjObserverClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1GameObjObserverClass@@UAE@XZ	; GameObjObserverClass::~GameObjObserverClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GameObjObserverClass@@UAE@XZ		; GameObjObserverClass::~GameObjObserverClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EGameObjObserverClass@@UAEPAXI@Z ENDP		; GameObjObserverClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GGameObjObserverClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GGameObjObserverClass@@UAEPAXI@Z PROC		; GameObjObserverClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GameObjObserverClass@@UAE@XZ		; GameObjObserverClass::~GameObjObserverClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GGameObjObserverClass@@UAEPAXI@Z ENDP		; GameObjObserverClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4GameObjObserverClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4GameObjObserverClass@@QAEAAV0@ABV0@@Z PROC		; GameObjObserverClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4GameObjObserverClass@@QAEAAV0@ABV0@@Z ENDP		; GameObjObserverClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0GameObjObserverClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0GameObjObserverClass@@QAE@ABV0@@Z PROC		; GameObjObserverClass::GameObjObserverClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GameObjObserverClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0GameObjObserverClass@@QAE@ABV0@@Z ENDP		; GameObjObserverClass::GameObjObserverClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Owner@GameObjObserverClass@@UAEPAVScriptableGameObj@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Owner@GameObjObserverClass@@UAEPAVScriptableGameObj@@XZ PROC ; GameObjObserverClass::Owner, COMDAT
; _this$ = ecx

; 117  : 	virtual GameObject* Owner() {return 0;}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Owner@GameObjObserverClass@@UAEPAVScriptableGameObj@@XZ ENDP ; GameObjObserverClass::Owner
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Get_ID@GameObjObserverClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_ID@GameObjObserverClass@@QAEHXZ PROC		; GameObjObserverClass::Get_ID, COMDAT
; _this$ = ecx

; 99   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 100  : 		return ID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 101  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_ID@GameObjObserverClass@@QAEHXZ ENDP		; GameObjObserverClass::Get_ID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Set_ID@GameObjObserverClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?Set_ID@GameObjObserverClass@@QAEXH@Z PROC		; GameObjObserverClass::Set_ID, COMDAT
; _this$ = ecx

; 95   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 96   : 		ID = id;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 97   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_ID@GameObjObserverClass@@QAEXH@Z ENDP		; GameObjObserverClass::Set_ID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??1GameObjObserverClass@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1GameObjObserverClass@@UAE@XZ PROC			; GameObjObserverClass::~GameObjObserverClass, COMDAT
; _this$ = ecx

; 92   : 	virtual	~GameObjObserverClass() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GameObjObserverClass@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1GameObjObserverClass@@UAE@XZ ENDP			; GameObjObserverClass::~GameObjObserverClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0GameObjObserverClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0GameObjObserverClass@@QAE@XZ PROC			; GameObjObserverClass::GameObjObserverClass, COMDAT
; _this$ = ecx

; 91   : 	GameObjObserverClass() : ID( 0 ) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GameObjObserverClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0GameObjObserverClass@@QAE@XZ ENDP			; GameObjObserverClass::GameObjObserverClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ?Swap@@YAXAAVVector3@@0@Z
_TEXT	SEGMENT
_tmp$ = -12						; size = 12
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?Swap@@YAXAAVVector3@@0@Z PROC				; Swap, COMDAT

; 398  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi

; 399  : 	Vector3 tmp(a);

	mov	eax, DWORD PTR _a$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 400  : 	a = b;

	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 401  : 	b = tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 402  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Swap@@YAXAAVVector3@@0@Z ENDP				; Swap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ?Subtract@Vector3@@SAXABV1@0PAV1@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_set_result$ = 16					; size = 4
?Subtract@Vector3@@SAXABV1@0PAV1@@Z PROC		; Vector3::Subtract, COMDAT

; 218  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 219  : 		set_result->X = a.X - b.X;

	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [eax]
	subss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _set_result$[ebp]
	movss	DWORD PTR [edx], xmm0

; 220  : 		set_result->Y = a.Y - b.Y;

	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	subss	xmm0, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _set_result$[ebp]
	movss	DWORD PTR [edx+4], xmm0

; 221  : 		set_result->Z = a.Z - b.Z;

	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	subss	xmm0, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _set_result$[ebp]
	movss	DWORD PTR [edx+8], xmm0

; 222  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Subtract@Vector3@@SAXABV1@0PAV1@@Z ENDP		; Vector3::Subtract
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ?Add@Vector3@@SAXABV1@0PAV1@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_set_result$ = 16					; size = 4
?Add@Vector3@@SAXABV1@0PAV1@@Z PROC			; Vector3::Add, COMDAT

; 212  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 213  : 		set_result->X = a.X + b.X;

	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _set_result$[ebp]
	movss	DWORD PTR [edx], xmm0

; 214  : 		set_result->Y = a.Y + b.Y;

	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	addss	xmm0, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _set_result$[ebp]
	movss	DWORD PTR [edx+4], xmm0

; 215  : 		set_result->Z = a.Z + b.Z;

	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	addss	xmm0, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _set_result$[ebp]
	movss	DWORD PTR [edx+8], xmm0

; 216  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Add@Vector3@@SAXABV1@0PAV1@@Z ENDP			; Vector3::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??G@YA?AVVector3@@ABV0@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
??G@YA?AVVector3@@ABV0@0@Z PROC				; operator-, COMDAT

; 377  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 378  : 	return Vector3(a.X - b.X,a.Y - b.Y,a.Z - b.Z);

	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	subss	xmm0, DWORD PTR [ecx+8]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	subss	xmm0, DWORD PTR [eax+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	subss	xmm0, DWORD PTR [edx]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 379  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??G@YA?AVVector3@@ABV0@0@Z ENDP				; operator-
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??H@YA?AVVector3@@ABV0@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
??H@YA?AVVector3@@ABV0@0@Z PROC				; operator+, COMDAT

; 373  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 374  : 	return Vector3(a.X + b.X,a.Y + b.Y,a.Z + b.Z);

	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	addss	xmm0, DWORD PTR [ecx+8]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	addss	xmm0, DWORD PTR [eax+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR [edx]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 375  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??H@YA?AVVector3@@ABV0@0@Z ENDP				; operator+
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??D@YA?AVVector3@@MABV0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_k$ = 12						; size = 4
_a$ = 16						; size = 4
??D@YA?AVVector3@@MABV0@@Z PROC				; operator*, COMDAT

; 365  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 366  : 	return Vector3((a.X * k),(a.Y * k),(a.Z * k));

	mov	eax, DWORD PTR _a$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR _k$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _a$[ebp]
	movss	xmm0, DWORD PTR [ecx+4]
	mulss	xmm0, DWORD PTR _k$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _a$[ebp]
	movss	xmm0, DWORD PTR [edx]
	mulss	xmm0, DWORD PTR _k$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 367  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??D@YA?AVVector3@@MABV0@@Z ENDP				; operator*
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??D@YA?AVVector3@@ABV0@M@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_a$ = 12						; size = 4
_k$ = 16						; size = 4
??D@YA?AVVector3@@ABV0@M@Z PROC				; operator*, COMDAT

; 361  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 362  : 	return Vector3((a.X * k),(a.Y * k),(a.Z * k));

	mov	eax, DWORD PTR _a$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR _k$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _a$[ebp]
	movss	xmm0, DWORD PTR [ecx+4]
	mulss	xmm0, DWORD PTR _k$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _a$[ebp]
	movss	xmm0, DWORD PTR [edx]
	mulss	xmm0, DWORD PTR _k$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 363  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??D@YA?AVVector3@@ABV0@M@Z ENDP				; operator*
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??_0Vector3@@QAEAAV0@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_k$ = 8							; size = 4
??_0Vector3@@QAEAAV0@M@Z PROC				; Vector3::operator/=, COMDAT
; _this$ = ecx

; 164  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 165  : 		X = X * 1.0f / k;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx], xmm0

; 166  : 		Y = Y * 1.0f / k;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	mulss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+4], xmm0

; 167  : 		Z = Z * 1.0f / k;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+8], xmm0

; 168  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 169  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_0Vector3@@QAEAAV0@M@Z ENDP				; Vector3::operator/=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??XVector3@@QAEAAV0@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_k$ = 8							; size = 4
??XVector3@@QAEAAV0@M@Z PROC				; Vector3::operator*=, COMDAT
; _this$ = ecx

; 157  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 158  : 		X = X * k;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx], xmm0

; 159  : 		Y = Y * k;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	mulss	xmm0, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+4], xmm0

; 160  : 		Z = Z * k;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+8], xmm0

; 161  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 162  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??XVector3@@QAEAAV0@M@Z ENDP				; Vector3::operator*=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??ZVector3@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??ZVector3@@QAEAAV0@ABV0@@Z PROC			; Vector3::operator-=, COMDAT
; _this$ = ecx

; 150  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 151  : 		X -= v.X;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	subss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx], xmm0

; 152  : 		Y -= v.Y;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	subss	xmm0, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+4], xmm0

; 153  : 		Z -= v.Z;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	subss	xmm0, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+8], xmm0

; 154  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 155  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??ZVector3@@QAEAAV0@ABV0@@Z ENDP			; Vector3::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??YVector3@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??YVector3@@QAEAAV0@ABV0@@Z PROC			; Vector3::operator+=, COMDAT
; _this$ = ecx

; 143  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 144  : 		X += v.X;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx], xmm0

; 145  : 		Y += v.Y;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	addss	xmm0, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+4], xmm0

; 146  : 		Z += v.Z;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	addss	xmm0, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+8], xmm0

; 147  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 148  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??YVector3@@QAEAAV0@ABV0@@Z ENDP			; Vector3::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ?Length2@Vector3@@QBEMXZ
_TEXT	SEGMENT
tv85 = -72						; size = 4
_this$ = -4						; size = 4
?Length2@Vector3@@QBEMXZ PROC				; Vector3::Length2, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		return X * X + Y * Y + Z * Z;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+4]
	mulss	xmm1, DWORD PTR [eax+4]
	addss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [ecx+8]
	mulss	xmm1, DWORD PTR [edx+8]
	addss	xmm0, xmm1
	movss	DWORD PTR tv85[ebp], xmm0
	fld	DWORD PTR tv85[ebp]

; 94   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Length2@Vector3@@QBEMXZ ENDP				; Vector3::Length2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ?Length@Vector3@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Length@Vector3@@QBEMXZ PROC				; Vector3::Length, COMDAT
; _this$ = ecx

; 88   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 89   : 		return WWMath::Sqrt(Length2());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Length2@Vector3@@QBEMXZ		; Vector3::Length2
	push	ecx
	fstp	DWORD PTR [esp]
	call	?Sqrt@WWMath@@SAMM@Z			; WWMath::Sqrt
	add	esp, 4

; 90   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Length@Vector3@@QBEMXZ ENDP				; Vector3::Length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ?Normalize@Vector3@@QAEXXZ
_TEXT	SEGMENT
tv81 = -80						; size = 4
_oolen$ = -12						; size = 4
_len2$ = -8						; size = 4
_this$ = -4						; size = 4
?Normalize@Vector3@@QAEXXZ PROC				; Vector3::Normalize, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 75   : 		float len2 = WWMATH_FLOAT_TINY + Length2();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Length2@Vector3@@QBEMXZ		; Vector3::Length2
	fstp	DWORD PTR tv81[ebp]
	movss	xmm0, DWORD PTR tv81[ebp]
	addss	xmm0, DWORD PTR __real@02081cea
	movss	DWORD PTR _len2$[ebp], xmm0

; 76   : 		float oolen = WWMath::Inv_Sqrt(len2);

	push	ecx
	movss	xmm0, DWORD PTR _len2$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Inv_Sqrt@WWMath@@SIMM@Z		; WWMath::Inv_Sqrt
	fstp	DWORD PTR _oolen$[ebp]

; 77   : 		X *= oolen;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _oolen$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx], xmm0

; 78   : 		Y *= oolen;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	mulss	xmm0, DWORD PTR _oolen$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+4], xmm0

; 79   : 		Z *= oolen;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR _oolen$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+8], xmm0

; 80   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Normalize@Vector3@@QAEXXZ ENDP				; Vector3::Normalize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??AVector3@@QBEABMH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AVector3@@QBEABMH@Z PROC				; Vector3::operator[], COMDAT
; _this$ = ecx

; 70   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 71   : 		return (&X)[i];

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 72   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AVector3@@QBEABMH@Z ENDP				; Vector3::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??AVector3@@QAEAAMH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AVector3@@QAEAAMH@Z PROC				; Vector3::operator[], COMDAT
; _this$ = ecx

; 66   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 67   : 		return (&X)[i];

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 68   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AVector3@@QAEAAMH@Z ENDP				; Vector3::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ?Set@Vector3@@QAEXMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
?Set@Vector3@@QAEXMMM@Z PROC				; Vector3::Set, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 55   : 		X = x;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [eax], xmm0

; 56   : 		Y = y;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [eax+4], xmm0

; 57   : 		Z = z;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [eax+8], xmm0

; 58   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Set@Vector3@@QAEXMMM@Z ENDP				; Vector3::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??4Vector3@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??4Vector3@@QAEAAV0@ABV0@@Z PROC			; Vector3::operator=, COMDAT
; _this$ = ecx

; 47   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 48   : 		X = v.X;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 49   : 		Y = v.Y;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 50   : 		Z = v.Z;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 51   : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 52   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Vector3@@QAEAAV0@ABV0@@Z ENDP			; Vector3::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??0Vector3@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
??0Vector3@@QAE@MMM@Z PROC				; Vector3::Vector3, COMDAT
; _this$ = ecx

; 33   : 	TT_INLINE Vector3(float x, float y, float z)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 34   : 	{
; 35   : 		X = x;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [eax], xmm0

; 36   : 		Y = y;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [eax+4], xmm0

; 37   : 		Z = z;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [eax+8], xmm0

; 38   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0Vector3@@QAE@MMM@Z ENDP				; Vector3::Vector3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??0Vector3@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??0Vector3@@QAE@ABV0@@Z PROC				; Vector3::Vector3, COMDAT
; _this$ = ecx

; 27   : 	TT_INLINE Vector3(const Vector3 &v)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 28   : 	{
; 29   : 		X = v.X;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 30   : 		Y = v.Y;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 31   : 		Z = v.Z;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 32   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Vector3@@QAE@ABV0@@Z ENDP				; Vector3::Vector3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??0Vector3@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Vector3@@QAE@XZ PROC					; Vector3::Vector3, COMDAT
; _this$ = ecx

; 23   : 	TT_INLINE Vector3()

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 24   : 	{
; 25   : 		X = Y = Z = 0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+8], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+4], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx], xmm0

; 26   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Vector3@@QAE@XZ ENDP					; Vector3::Vector3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\defines.h
;	COMDAT ??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ PROC		; RefArrayHelper<float,1024>::operator float *, COMDAT
; _this$ = ecx

; 161  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 162  : 		return (T*) this;

	mov	eax, DWORD PTR _this$[ebp]

; 163  : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ ENDP		; RefArrayHelper<float,1024>::operator float *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4WWMath@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4WWMath@@QAEAAV0@ABV0@@Z PROC				; WWMath::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4WWMath@@QAEAAV0@ABV0@@Z ENDP				; WWMath::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Is_Valid_Double@WWMath@@SA_NN@Z
_TEXT	SEGMENT
_exponent$ = -8						; size = 4
_plong$ = -4						; size = 4
_x$ = 8							; size = 8
?Is_Valid_Double@WWMath@@SA_NN@Z PROC			; WWMath::Is_Valid_Double, COMDAT

; 207  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 208  : 	unsigned long * plong = (unsigned long *)(&x) + 1;

	lea	eax, DWORD PTR _x$[ebp+4]
	mov	DWORD PTR _plong$[ebp], eax

; 209  : 	unsigned long exponent = ((*plong) & 0x7FF00000) >> (32-12);

	mov	eax, DWORD PTR _plong$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 2146435072				; 7ff00000H
	shr	ecx, 20					; 00000014H
	mov	DWORD PTR _exponent$[ebp], ecx

; 210  : 	if (exponent == 0x7FF) {

	cmp	DWORD PTR _exponent$[ebp], 2047		; 000007ffH
	jne	SHORT $LN1@Is_Valid_D

; 211  : 		return false;

	xor	al, al
	jmp	SHORT $LN2@Is_Valid_D
$LN1@Is_Valid_D:

; 212  : 	}
; 213  : 	return true;

	mov	al, 1
$LN2@Is_Valid_D:

; 214  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Is_Valid_Double@WWMath@@SA_NN@Z ENDP			; WWMath::Is_Valid_Double
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Is_Valid_Float@WWMath@@SA_NM@Z
_TEXT	SEGMENT
_exponent$ = -8						; size = 4
_plong$ = -4						; size = 4
_x$ = 8							; size = 4
?Is_Valid_Float@WWMath@@SA_NM@Z PROC			; WWMath::Is_Valid_Float, COMDAT

; 197  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 198  : 	unsigned long * plong = (unsigned long *)(&x);

	lea	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _plong$[ebp], eax

; 199  : 	unsigned long exponent = ((*plong) & 0x7F800000) >> (32-9);

	mov	eax, DWORD PTR _plong$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 2139095040				; 7f800000H
	shr	ecx, 23					; 00000017H
	mov	DWORD PTR _exponent$[ebp], ecx

; 200  : 	if (exponent == 0xFF) {

	cmp	DWORD PTR _exponent$[ebp], 255		; 000000ffH
	jne	SHORT $LN1@Is_Valid_F

; 201  : 		return false;

	xor	al, al
	jmp	SHORT $LN2@Is_Valid_F
$LN1@Is_Valid_F:

; 202  : 	}
; 203  : 	return true;

	mov	al, 1
$LN2@Is_Valid_F:

; 204  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Is_Valid_Float@WWMath@@SA_NM@Z ENDP			; WWMath::Is_Valid_Float
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Byte_To_Unit_Float@WWMath@@SAME@Z
_TEXT	SEGMENT
tv69 = -68						; size = 4
_byte$ = 8						; size = 1
?Byte_To_Unit_Float@WWMath@@SAME@Z PROC			; WWMath::Byte_To_Unit_Float, COMDAT

; 97   : 	static float Byte_To_Unit_Float(unsigned char byte) { return ((float)byte) / 255.0f; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	movzx	eax, BYTE PTR _byte$[ebp]
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR tv69[ebp], xmm0
	fld	DWORD PTR tv69[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Byte_To_Unit_Float@WWMath@@SAME@Z ENDP			; WWMath::Byte_To_Unit_Float
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Unit_Float_To_Byte@WWMath@@SAEM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?Unit_Float_To_Byte@WWMath@@SAEM@Z PROC			; WWMath::Unit_Float_To_Byte, COMDAT

; 96   : 	static unsigned char Unit_Float_To_Byte(float f) { return (unsigned char)(f*255.0f); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	movss	xmm0, DWORD PTR _f$[ebp]
	mulss	xmm0, DWORD PTR __real@437f0000
	cvttss2si eax, xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Unit_Float_To_Byte@WWMath@@SAEM@Z ENDP			; WWMath::Unit_Float_To_Byte
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Float_To_Long@WWMath@@SAJN@Z
_TEXT	SEGMENT
$T1 = -80						; size = 16
_f$ = 8							; size = 8
?Float_To_Long@WWMath@@SAJN@Z PROC			; WWMath::Float_To_Long, COMDAT

; 222  : {

	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	push	edi

; 223  :     return _mm_cvttsd_si32(_mm_load_pd(&f));

	movupd	xmm0, XMMWORD PTR _f$[ebx]
	movapd	XMMWORD PTR $T1[ebp], xmm0
	movapd	xmm0, XMMWORD PTR $T1[ebp]
	cvttsd2si eax, xmm0

; 224  : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?Float_To_Long@WWMath@@SAJN@Z ENDP			; WWMath::Float_To_Long
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Lerp@WWMath@@SAHHHM@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_lerp$ = 16						; size = 4
?Lerp@WWMath@@SAHHHM@Z PROC				; WWMath::Lerp, COMDAT

; 192  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 193  : 	return (a + (int)((b - a)*lerp));

	mov	eax, DWORD PTR _b$[ebp]
	sub	eax, DWORD PTR _a$[ebp]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR _lerp$[ebp]
	cvttss2si eax, xmm0
	add	eax, DWORD PTR _a$[ebp]

; 194  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Lerp@WWMath@@SAHHHM@Z ENDP				; WWMath::Lerp
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Lerp@WWMath@@SANNNM@Z
_TEXT	SEGMENT
tv73 = -72						; size = 8
_a$ = 8							; size = 8
_b$ = 16						; size = 8
_lerp$ = 24						; size = 4
?Lerp@WWMath@@SANNNM@Z PROC				; WWMath::Lerp, COMDAT

; 187  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 188  : 	return (a + (b - a)*lerp);

	movsd	xmm0, QWORD PTR _b$[ebp]
	subsd	xmm0, QWORD PTR _a$[ebp]
	cvtss2sd xmm1, DWORD PTR _lerp$[ebp]
	mulsd	xmm0, xmm1
	addsd	xmm0, QWORD PTR _a$[ebp]
	movsd	QWORD PTR tv73[ebp], xmm0
	fld	QWORD PTR tv73[ebp]

; 189  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Lerp@WWMath@@SANNNM@Z ENDP				; WWMath::Lerp
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Lerp@WWMath@@SAMMMM@Z
_TEXT	SEGMENT
tv72 = -68						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_lerp$ = 16						; size = 4
?Lerp@WWMath@@SAMMMM@Z PROC				; WWMath::Lerp, COMDAT

; 182  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 183  : 	return (a + (b - a)*lerp);

	movss	xmm0, DWORD PTR _b$[ebp]
	subss	xmm0, DWORD PTR _a$[ebp]
	mulss	xmm0, DWORD PTR _lerp$[ebp]
	addss	xmm0, DWORD PTR _a$[ebp]
	movss	DWORD PTR tv72[ebp], xmm0
	fld	DWORD PTR tv72[ebp]

; 184  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Lerp@WWMath@@SAMMMM@Z ENDP				; WWMath::Lerp
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Max@WWMath@@SAMMM@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?Max@WWMath@@SAMMM@Z PROC				; WWMath::Max, COMDAT

; 176  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 177  : 	if (a>b) return a;

	movss	xmm0, DWORD PTR _a$[ebp]
	comiss	xmm0, DWORD PTR _b$[ebp]
	jbe	SHORT $LN1@Max
	fld	DWORD PTR _a$[ebp]
	jmp	SHORT $LN2@Max
$LN1@Max:

; 178  : 	return b;

	fld	DWORD PTR _b$[ebp]
$LN2@Max:

; 179  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Max@WWMath@@SAMMM@Z ENDP				; WWMath::Max
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Min@WWMath@@SAMMM@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?Min@WWMath@@SAMMM@Z PROC				; WWMath::Min, COMDAT

; 170  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 171  : 	if (a<b) return a;

	movss	xmm0, DWORD PTR _b$[ebp]
	comiss	xmm0, DWORD PTR _a$[ebp]
	jbe	SHORT $LN1@Min
	fld	DWORD PTR _a$[ebp]
	jmp	SHORT $LN2@Min
$LN1@Min:

; 172  : 	return b;

	fld	DWORD PTR _b$[ebp]
$LN2@Min:

; 173  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Min@WWMath@@SAMMM@Z ENDP				; WWMath::Min
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Wrap@WWMath@@SANNNN@Z
_TEXT	SEGMENT
_val$ = 8						; size = 8
_min$ = 16						; size = 8
_max$ = 24						; size = 8
?Wrap@WWMath@@SANNNN@Z PROC				; WWMath::Wrap, COMDAT

; 157  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 158  : 	if ( val >= max )	val -= (max-min);

	movsd	xmm0, QWORD PTR _val$[ebp]
	comisd	xmm0, QWORD PTR _max$[ebp]
	jb	SHORT $LN4@Wrap
	movsd	xmm0, QWORD PTR _max$[ebp]
	subsd	xmm0, QWORD PTR _min$[ebp]
	movsd	xmm1, QWORD PTR _val$[ebp]
	subsd	xmm1, xmm0
	movsd	QWORD PTR _val$[ebp], xmm1
$LN4@Wrap:

; 159  : 	if ( val < min )	val += (max-min);

	movsd	xmm0, QWORD PTR _min$[ebp]
	comisd	xmm0, QWORD PTR _val$[ebp]
	jbe	SHORT $LN3@Wrap
	movsd	xmm0, QWORD PTR _max$[ebp]
	subsd	xmm0, QWORD PTR _min$[ebp]
	addsd	xmm0, QWORD PTR _val$[ebp]
	movsd	QWORD PTR _val$[ebp], xmm0
$LN3@Wrap:

; 160  : 	if ( val < min ) {

	movsd	xmm0, QWORD PTR _min$[ebp]
	comisd	xmm0, QWORD PTR _val$[ebp]
	jbe	SHORT $LN2@Wrap

; 161  : 		val = min;

	movsd	xmm0, QWORD PTR _min$[ebp]
	movsd	QWORD PTR _val$[ebp], xmm0
$LN2@Wrap:

; 162  : 	}
; 163  : 	if ( val > max ) {

	movsd	xmm0, QWORD PTR _val$[ebp]
	comisd	xmm0, QWORD PTR _max$[ebp]
	jbe	SHORT $LN1@Wrap

; 164  : 		val = max;

	movsd	xmm0, QWORD PTR _max$[ebp]
	movsd	QWORD PTR _val$[ebp], xmm0
$LN1@Wrap:

; 165  : 	}
; 166  : 	return val;

	fld	QWORD PTR _val$[ebp]

; 167  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Wrap@WWMath@@SANNNN@Z ENDP				; WWMath::Wrap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Wrap@WWMath@@SAMMMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
_min$ = 12						; size = 4
_max$ = 16						; size = 4
?Wrap@WWMath@@SAMMMM@Z PROC				; WWMath::Wrap, COMDAT

; 144  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 145  : 	if ( val >= max )	val -= (max-min);

	movss	xmm0, DWORD PTR _val$[ebp]
	comiss	xmm0, DWORD PTR _max$[ebp]
	jb	SHORT $LN4@Wrap
	movss	xmm0, DWORD PTR _max$[ebp]
	subss	xmm0, DWORD PTR _min$[ebp]
	movss	xmm1, DWORD PTR _val$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _val$[ebp], xmm1
$LN4@Wrap:

; 146  : 	if ( val < min )	val += (max-min);

	movss	xmm0, DWORD PTR _min$[ebp]
	comiss	xmm0, DWORD PTR _val$[ebp]
	jbe	SHORT $LN3@Wrap
	movss	xmm0, DWORD PTR _max$[ebp]
	subss	xmm0, DWORD PTR _min$[ebp]
	addss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR _val$[ebp], xmm0
$LN3@Wrap:

; 147  : 	if ( val < min ) {

	movss	xmm0, DWORD PTR _min$[ebp]
	comiss	xmm0, DWORD PTR _val$[ebp]
	jbe	SHORT $LN2@Wrap

; 148  : 		val = min;

	movss	xmm0, DWORD PTR _min$[ebp]
	movss	DWORD PTR _val$[ebp], xmm0
$LN2@Wrap:

; 149  : 	}
; 150  : 	if ( val > max ) {

	movss	xmm0, DWORD PTR _val$[ebp]
	comiss	xmm0, DWORD PTR _max$[ebp]
	jbe	SHORT $LN1@Wrap

; 151  : 		val = max;

	movss	xmm0, DWORD PTR _max$[ebp]
	movss	DWORD PTR _val$[ebp], xmm0
$LN1@Wrap:

; 152  : 	}
; 153  : 	return val;

	fld	DWORD PTR _val$[ebp]

; 154  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Wrap@WWMath@@SAMMMM@Z ENDP				; WWMath::Wrap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Clamp_Int@WWMath@@SAHHHH@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
_min_val$ = 12						; size = 4
_max_val$ = 16						; size = 4
?Clamp_Int@WWMath@@SAHHHH@Z PROC			; WWMath::Clamp_Int, COMDAT

; 137  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 138  : 	if(val < min_val) return min_val;

	mov	eax, DWORD PTR _val$[ebp]
	cmp	eax, DWORD PTR _min_val$[ebp]
	jge	SHORT $LN2@Clamp_Int
	mov	eax, DWORD PTR _min_val$[ebp]
	jmp	SHORT $LN3@Clamp_Int
$LN2@Clamp_Int:

; 139  : 	if(val > max_val) return max_val;

	mov	eax, DWORD PTR _val$[ebp]
	cmp	eax, DWORD PTR _max_val$[ebp]
	jle	SHORT $LN1@Clamp_Int
	mov	eax, DWORD PTR _max_val$[ebp]
	jmp	SHORT $LN3@Clamp_Int
$LN1@Clamp_Int:

; 140  : 	return val;

	mov	eax, DWORD PTR _val$[ebp]
$LN3@Clamp_Int:

; 141  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Clamp_Int@WWMath@@SAHHHH@Z ENDP			; WWMath::Clamp_Int
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Clamp@WWMath@@SANNNN@Z
_TEXT	SEGMENT
_val$ = 8						; size = 8
_min$ = 16						; size = 8
_max$ = 24						; size = 8
?Clamp@WWMath@@SANNNN@Z PROC				; WWMath::Clamp, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 131  : 	if(val < min) return min;

	movsd	xmm0, QWORD PTR _min$[ebp]
	comisd	xmm0, QWORD PTR _val$[ebp]
	jbe	SHORT $LN2@Clamp
	fld	QWORD PTR _min$[ebp]
	jmp	SHORT $LN3@Clamp
$LN2@Clamp:

; 132  : 	if(val > max) return max;

	movsd	xmm0, QWORD PTR _val$[ebp]
	comisd	xmm0, QWORD PTR _max$[ebp]
	jbe	SHORT $LN1@Clamp
	fld	QWORD PTR _max$[ebp]
	jmp	SHORT $LN3@Clamp
$LN1@Clamp:

; 133  : 	return val;

	fld	QWORD PTR _val$[ebp]
$LN3@Clamp:

; 134  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Clamp@WWMath@@SANNNN@Z ENDP				; WWMath::Clamp
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Clamp@WWMath@@SAMMMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
_min$ = 12						; size = 4
_max$ = 16						; size = 4
?Clamp@WWMath@@SAMMMM@Z PROC				; WWMath::Clamp, COMDAT

; 123  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 124  : 	if(val < min) return min;

	movss	xmm0, DWORD PTR _min$[ebp]
	comiss	xmm0, DWORD PTR _val$[ebp]
	jbe	SHORT $LN2@Clamp
	fld	DWORD PTR _min$[ebp]
	jmp	SHORT $LN3@Clamp
$LN2@Clamp:

; 125  : 	if(val > max) return max;

	movss	xmm0, DWORD PTR _val$[ebp]
	comiss	xmm0, DWORD PTR _max$[ebp]
	jbe	SHORT $LN1@Clamp
	fld	DWORD PTR _max$[ebp]
	jmp	SHORT $LN3@Clamp
$LN1@Clamp:

; 126  : 	return val;

	fld	DWORD PTR _val$[ebp]
$LN3@Clamp:

; 127  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Clamp@WWMath@@SAMMMM@Z ENDP				; WWMath::Clamp
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Random_Float@WWMath@@SAMMM@Z
_TEXT	SEGMENT
tv76 = -72						; size = 4
tv73 = -68						; size = 4
_min$ = 8						; size = 4
_max$ = 12						; size = 4
?Random_Float@WWMath@@SAMMM@Z PROC			; WWMath::Random_Float, COMDAT

; 118  : { 

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 119  : 	return Random_Float() * (max-min) + min; 

	call	?Random_Float@WWMath@@SAMXZ		; WWMath::Random_Float
	fstp	DWORD PTR tv73[ebp]
	movss	xmm0, DWORD PTR tv73[ebp]
	movss	xmm1, DWORD PTR _max$[ebp]
	subss	xmm1, DWORD PTR _min$[ebp]
	mulss	xmm0, xmm1
	addss	xmm0, DWORD PTR _min$[ebp]
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]

; 120  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Random_Float@WWMath@@SAMMM@Z ENDP			; WWMath::Random_Float
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Fast_Is_Float_Positive@WWMath@@SA_NABM@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_val$ = 8						; size = 4
?Fast_Is_Float_Positive@WWMath@@SA_NABM@Z PROC		; WWMath::Fast_Is_Float_Positive, COMDAT

; 113  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 114  : 	return !((*(int *)(&val)) & 0x80000000);

	mov	eax, DWORD PTR _val$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, -2147483648			; 80000000H
	jne	SHORT $LN3@Fast_Is_Fl
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@Fast_Is_Fl
$LN3@Fast_Is_Fl:
	mov	DWORD PTR tv66[ebp], 0
$LN4@Fast_Is_Fl:
	mov	al, BYTE PTR tv66[ebp]

; 115  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Fast_Is_Float_Positive@WWMath@@SA_NABM@Z ENDP		; WWMath::Fast_Is_Float_Positive
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Floor@WWMath@@SAMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
?Floor@WWMath@@SAMM@Z PROC				; WWMath::Floor, COMDAT

; 81   : 	static float Floor(float val) { return floorf(val); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_floorf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Floor@WWMath@@SAMM@Z ENDP				; WWMath::Floor
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Ceil@WWMath@@SAMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
?Ceil@WWMath@@SAMM@Z PROC				; WWMath::Ceil, COMDAT

; 80   : 	static float Ceil(float val) { return ceilf(val); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_ceilf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Ceil@WWMath@@SAMM@Z ENDP				; WWMath::Ceil
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Sign@WWMath@@SAMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
?Sign@WWMath@@SAMM@Z PROC				; WWMath::Sign, COMDAT

; 102  : { 

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 103  : 	if (val > 0.0f) { 

	movss	xmm0, DWORD PTR _val$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN2@Sign

; 104  : 		return +1.0f; 

	fld1
	jmp	SHORT $LN3@Sign
$LN2@Sign:

; 105  : 	} 
; 106  : 	if (val < 0.0f) { 

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _val$[ebp]
	jbe	SHORT $LN1@Sign

; 107  : 		return -1.0f; 

	fld	DWORD PTR __real@bf800000
	jmp	SHORT $LN3@Sign
$LN1@Sign:

; 108  : 	} 
; 109  : 	return 0.0f; 

	fldz
$LN3@Sign:

; 110  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Sign@WWMath@@SAMM@Z ENDP				; WWMath::Sign
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Atan2@WWMath@@SAMMM@Z
_TEXT	SEGMENT
_y$ = 8							; size = 4
_x$ = 12						; size = 4
?Atan2@WWMath@@SAMMM@Z PROC				; WWMath::Atan2, COMDAT

; 78   : 	static float Atan2(float y,float x) { return static_cast<float>(atan2(y,x)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?atan2@@YAMMM@Z				; atan2
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Atan2@WWMath@@SAMMM@Z ENDP				; WWMath::Atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Atan@WWMath@@SAMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
?Atan@WWMath@@SAMM@Z PROC				; WWMath::Atan, COMDAT

; 77   : 	static float Atan(float x) { return static_cast<float>(atan(x)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?atan@@YAMM@Z				; atan
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Atan@WWMath@@SAMM@Z ENDP				; WWMath::Atan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Asin@WWMath@@SAMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
?Asin@WWMath@@SAMM@Z PROC				; WWMath::Asin, COMDAT

; 306  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 307  : 	return (float)asin(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?asin@@YAMM@Z				; asin
	add	esp, 4

; 308  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Asin@WWMath@@SAMM@Z ENDP				; WWMath::Asin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Acos@WWMath@@SAMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
?Acos@WWMath@@SAMM@Z PROC				; WWMath::Acos, COMDAT

; 286  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 287  : 	return (float)acos(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?acos@@YAMM@Z				; acos
	add	esp, 4

; 288  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Acos@WWMath@@SAMM@Z ENDP				; WWMath::Acos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Fast_Asin@WWMath@@SAMM@Z
_TEXT	SEGMENT
tv156 = -88						; size = 4
tv161 = -84						; size = 4
tv159 = -80						; size = 4
tv134 = -80						; size = 4
_frac$ = -12						; size = 4
_idx1$ = -8						; size = 4
_idx0$ = -4						; size = 4
_val$ = 8						; size = 4
?Fast_Asin@WWMath@@SAMM@Z PROC				; WWMath::Fast_Asin, COMDAT

; 291  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 292  : 	if (WWMath::Fabs(val) > 0.975f) {

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Fabs@WWMath@@SAMM@Z			; WWMath::Fabs
	add	esp, 4
	fstp	DWORD PTR tv134[ebp]
	movss	xmm0, DWORD PTR tv134[ebp]
	comiss	xmm0, DWORD PTR __real@3f79999a
	jbe	SHORT $LN11@Fast_Asin

; 293  : 		return WWMath::Asin(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Asin@WWMath@@SAMM@Z			; WWMath::Asin
	add	esp, 4
	jmp	$LN12@Fast_Asin
$LN11@Fast_Asin:

; 294  : 	}
; 295  : 	val*=float(ARC_TABLE_SIZE/2);

	movss	xmm0, DWORD PTR _val$[ebp]
	mulss	xmm0, DWORD PTR __real@44000000
	movss	DWORD PTR _val$[ebp], xmm0

; 296  : 	int idx0=Float_To_Int_Floor(val); 

	lea	eax, DWORD PTR _val$[ebp]
	push	eax
	call	?Float_To_Int_Floor@WWMath@@SAHABM@Z	; WWMath::Float_To_Int_Floor
	add	esp, 4
	mov	DWORD PTR _idx0$[ebp], eax

; 297  : 	int idx1=idx0+1;

	mov	eax, DWORD PTR _idx0$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx1$[ebp], eax

; 298  : 	float frac=val-(float)idx0;

	cvtsi2ss xmm0, DWORD PTR _idx0$[ebp]
	movss	xmm1, DWORD PTR _val$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _frac$[ebp], xmm1

; 299  : 	idx0+=ARC_TABLE_SIZE/2;

	mov	eax, DWORD PTR _idx0$[ebp]
	add	eax, 512				; 00000200H
	mov	DWORD PTR _idx0$[ebp], eax

; 300  : 	idx1+=ARC_TABLE_SIZE/2;

	mov	eax, DWORD PTR _idx1$[ebp]
	add	eax, 512				; 00000200H
	mov	DWORD PTR _idx1$[ebp], eax
$LN10@Fast_Asin:

; 301  : 	TT_ASSERT((idx0 >= 0) && (idx0 < ARC_TABLE_SIZE));

	xor	eax, eax
	jne	SHORT $LN10@Fast_Asin
	cmp	DWORD PTR _idx0$[ebp], 0
	jl	SHORT $LN6@Fast_Asin
	cmp	DWORD PTR _idx0$[ebp], 1024		; 00000400H
	jl	SHORT $LN7@Fast_Asin
$LN6@Fast_Asin:
	int	3
$LN7@Fast_Asin:

; 302  : 	TT_ASSERT((idx1 >= 0) && (idx1 < ARC_TABLE_SIZE));

	xor	eax, eax
	jne	SHORT $LN7@Fast_Asin
	cmp	DWORD PTR _idx1$[ebp], 0
	jl	SHORT $LN1@Fast_Asin
	cmp	DWORD PTR _idx1$[ebp], 1024		; 00000400H
	jl	SHORT $LN2@Fast_Asin
$LN1@Fast_Asin:
	int	3
$LN2@Fast_Asin:

; 303  : 	return (1.0f - frac) * _FastAsinTable[idx0] + frac * _FastAsinTable[idx1];

	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR _frac$[ebp]
	mov	ecx, DWORD PTR ?_FastAsinTable@@3AAV?$RefArrayHelper@M$0EAA@@@A ; _FastAsinTable
	movss	DWORD PTR tv159[ebp], xmm0
	call	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ	; RefArrayHelper<float,1024>::operator float *
	mov	ecx, DWORD PTR _idx0$[ebp]
	movss	xmm0, DWORD PTR tv159[ebp]
	mulss	xmm0, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR ?_FastAsinTable@@3AAV?$RefArrayHelper@M$0EAA@@@A ; _FastAsinTable
	movss	DWORD PTR tv161[ebp], xmm0
	call	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ	; RefArrayHelper<float,1024>::operator float *
	mov	edx, DWORD PTR _idx1$[ebp]
	movss	xmm0, DWORD PTR _frac$[ebp]
	mulss	xmm0, DWORD PTR [eax+edx*4]
	movss	xmm1, DWORD PTR tv161[ebp]
	addss	xmm1, xmm0
	movss	DWORD PTR tv156[ebp], xmm1
	fld	DWORD PTR tv156[ebp]
$LN12@Fast_Asin:

; 304  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Fast_Asin@WWMath@@SAMM@Z ENDP				; WWMath::Fast_Asin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Fast_Acos@WWMath@@SAMM@Z
_TEXT	SEGMENT
tv156 = -88						; size = 4
tv161 = -84						; size = 4
tv159 = -80						; size = 4
tv134 = -80						; size = 4
_frac$ = -12						; size = 4
_idx1$ = -8						; size = 4
_idx0$ = -4						; size = 4
_val$ = 8						; size = 4
?Fast_Acos@WWMath@@SAMM@Z PROC				; WWMath::Fast_Acos, COMDAT

; 270  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 271  : 	if (WWMath::Fabs(val) > 0.975f) {

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Fabs@WWMath@@SAMM@Z			; WWMath::Fabs
	add	esp, 4
	fstp	DWORD PTR tv134[ebp]
	movss	xmm0, DWORD PTR tv134[ebp]
	comiss	xmm0, DWORD PTR __real@3f79999a
	jbe	SHORT $LN11@Fast_Acos

; 272  : 		return WWMath::Acos(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Acos@WWMath@@SAMM@Z			; WWMath::Acos
	add	esp, 4
	jmp	$LN12@Fast_Acos
$LN11@Fast_Acos:

; 273  : 	}
; 274  : 	val*=float(ARC_TABLE_SIZE/2);

	movss	xmm0, DWORD PTR _val$[ebp]
	mulss	xmm0, DWORD PTR __real@44000000
	movss	DWORD PTR _val$[ebp], xmm0

; 275  : 	int idx0=Float_To_Int_Floor(val);

	lea	eax, DWORD PTR _val$[ebp]
	push	eax
	call	?Float_To_Int_Floor@WWMath@@SAHABM@Z	; WWMath::Float_To_Int_Floor
	add	esp, 4
	mov	DWORD PTR _idx0$[ebp], eax

; 276  : 	int idx1=idx0+1;

	mov	eax, DWORD PTR _idx0$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx1$[ebp], eax

; 277  : 	float frac=val-(float)idx0;

	cvtsi2ss xmm0, DWORD PTR _idx0$[ebp]
	movss	xmm1, DWORD PTR _val$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _frac$[ebp], xmm1

; 278  : 	idx0+=ARC_TABLE_SIZE/2;

	mov	eax, DWORD PTR _idx0$[ebp]
	add	eax, 512				; 00000200H
	mov	DWORD PTR _idx0$[ebp], eax

; 279  : 	idx1+=ARC_TABLE_SIZE/2;

	mov	eax, DWORD PTR _idx1$[ebp]
	add	eax, 512				; 00000200H
	mov	DWORD PTR _idx1$[ebp], eax
$LN10@Fast_Acos:

; 280  : 	TT_ASSERT((idx0 >= 0) && (idx0 < ARC_TABLE_SIZE));

	xor	eax, eax
	jne	SHORT $LN10@Fast_Acos
	cmp	DWORD PTR _idx0$[ebp], 0
	jl	SHORT $LN6@Fast_Acos
	cmp	DWORD PTR _idx0$[ebp], 1024		; 00000400H
	jl	SHORT $LN7@Fast_Acos
$LN6@Fast_Acos:
	int	3
$LN7@Fast_Acos:

; 281  : 	TT_ASSERT((idx1 >= 0) && (idx1 < ARC_TABLE_SIZE));

	xor	eax, eax
	jne	SHORT $LN7@Fast_Acos
	cmp	DWORD PTR _idx1$[ebp], 0
	jl	SHORT $LN1@Fast_Acos
	cmp	DWORD PTR _idx1$[ebp], 1024		; 00000400H
	jl	SHORT $LN2@Fast_Acos
$LN1@Fast_Acos:
	int	3
$LN2@Fast_Acos:

; 282  : 	return (1.0f - frac) * _FastAcosTable[idx0] + frac * _FastAcosTable[idx1];

	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR _frac$[ebp]
	mov	ecx, DWORD PTR ?_FastAcosTable@@3AAV?$RefArrayHelper@M$0EAA@@@A ; _FastAcosTable
	movss	DWORD PTR tv159[ebp], xmm0
	call	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ	; RefArrayHelper<float,1024>::operator float *
	mov	ecx, DWORD PTR _idx0$[ebp]
	movss	xmm0, DWORD PTR tv159[ebp]
	mulss	xmm0, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR ?_FastAcosTable@@3AAV?$RefArrayHelper@M$0EAA@@@A ; _FastAcosTable
	movss	DWORD PTR tv161[ebp], xmm0
	call	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ	; RefArrayHelper<float,1024>::operator float *
	mov	edx, DWORD PTR _idx1$[ebp]
	movss	xmm0, DWORD PTR _frac$[ebp]
	mulss	xmm0, DWORD PTR [eax+edx*4]
	movss	xmm1, DWORD PTR tv161[ebp]
	addss	xmm1, xmm0
	movss	DWORD PTR tv156[ebp], xmm1
	fld	DWORD PTR tv156[ebp]
$LN12@Fast_Acos:

; 283  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Fast_Acos@WWMath@@SAMM@Z ENDP				; WWMath::Fast_Acos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Fast_Inv_Cos@WWMath@@SAMM@Z
_TEXT	SEGMENT
tv76 = -72						; size = 4
tv73 = -68						; size = 4
_val$ = 8						; size = 4
?Fast_Inv_Cos@WWMath@@SAMM@Z PROC			; WWMath::Fast_Inv_Cos, COMDAT

; 265  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 266  : 	return 1.0f / WWMath::Fast_Cos(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Fast_Cos@WWMath@@SAMM@Z		; WWMath::Fast_Cos
	add	esp, 4
	fstp	DWORD PTR tv73[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR tv73[ebp]
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]

; 267  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Fast_Inv_Cos@WWMath@@SAMM@Z ENDP			; WWMath::Fast_Inv_Cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Fast_Cos@WWMath@@SAMM@Z
_TEXT	SEGMENT
tv135 = -88						; size = 4
tv140 = -84						; size = 4
tv138 = -80						; size = 4
_frac$ = -12						; size = 4
_idx1$ = -8						; size = 4
_idx0$ = -4						; size = 4
_val$ = 8						; size = 4
?Fast_Cos@WWMath@@SAMM@Z PROC				; WWMath::Fast_Cos, COMDAT

; 253  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 254  : 	val+=(WWMATH_PI * 0.5f);

	movss	xmm0, DWORD PTR _val$[ebp]
	addss	xmm0, DWORD PTR __real@3fc90fdb
	movss	DWORD PTR _val$[ebp], xmm0

; 255  : 	val*=float(SIN_TABLE_SIZE) / (2.0f * WWMATH_PI);

	movss	xmm0, DWORD PTR __real@44800000
	divss	xmm0, DWORD PTR __real@40c90fdb
	mulss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR _val$[ebp], xmm0

; 256  : 	int idx0=Float_To_Int_Floor(val);

	lea	eax, DWORD PTR _val$[ebp]
	push	eax
	call	?Float_To_Int_Floor@WWMath@@SAHABM@Z	; WWMath::Float_To_Int_Floor
	add	esp, 4
	mov	DWORD PTR _idx0$[ebp], eax

; 257  : 	int idx1=idx0+1;

	mov	eax, DWORD PTR _idx0$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx1$[ebp], eax

; 258  : 	float frac=val-(float)idx0;

	cvtsi2ss xmm0, DWORD PTR _idx0$[ebp]
	movss	xmm1, DWORD PTR _val$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _frac$[ebp], xmm1

; 259  : 	idx0 = ((unsigned)idx0) & (SIN_TABLE_SIZE-1);

	mov	eax, DWORD PTR _idx0$[ebp]
	and	eax, 1023				; 000003ffH
	mov	DWORD PTR _idx0$[ebp], eax

; 260  : 	idx1 = ((unsigned)idx1) & (SIN_TABLE_SIZE-1);

	mov	eax, DWORD PTR _idx1$[ebp]
	and	eax, 1023				; 000003ffH
	mov	DWORD PTR _idx1$[ebp], eax

; 261  : 	return (1.0f - frac) * _FastSinTable[idx0] + frac * _FastSinTable[idx1];

	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR _frac$[ebp]
	mov	ecx, DWORD PTR ?_FastSinTable@@3AAV?$RefArrayHelper@M$0EAA@@@A ; _FastSinTable
	movss	DWORD PTR tv138[ebp], xmm0
	call	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ	; RefArrayHelper<float,1024>::operator float *
	mov	ecx, DWORD PTR _idx0$[ebp]
	movss	xmm0, DWORD PTR tv138[ebp]
	mulss	xmm0, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR ?_FastSinTable@@3AAV?$RefArrayHelper@M$0EAA@@@A ; _FastSinTable
	movss	DWORD PTR tv140[ebp], xmm0
	call	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ	; RefArrayHelper<float,1024>::operator float *
	mov	edx, DWORD PTR _idx1$[ebp]
	movss	xmm0, DWORD PTR _frac$[ebp]
	mulss	xmm0, DWORD PTR [eax+edx*4]
	movss	xmm1, DWORD PTR tv140[ebp]
	addss	xmm1, xmm0
	movss	DWORD PTR tv135[ebp], xmm1
	fld	DWORD PTR tv135[ebp]

; 262  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Fast_Cos@WWMath@@SAMM@Z ENDP				; WWMath::Fast_Cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Fast_Inv_Sin@WWMath@@SAMM@Z
_TEXT	SEGMENT
tv76 = -72						; size = 4
tv73 = -68						; size = 4
_val$ = 8						; size = 4
?Fast_Inv_Sin@WWMath@@SAMM@Z PROC			; WWMath::Fast_Inv_Sin, COMDAT

; 248  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 249  : 	return 1.0f / WWMath::Fast_Sin(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Fast_Sin@WWMath@@SAMM@Z		; WWMath::Fast_Sin
	add	esp, 4
	fstp	DWORD PTR tv73[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR tv73[ebp]
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]

; 250  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Fast_Inv_Sin@WWMath@@SAMM@Z ENDP			; WWMath::Fast_Inv_Sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Fast_Sin@WWMath@@SAMM@Z
_TEXT	SEGMENT
tv133 = -88						; size = 4
tv138 = -84						; size = 4
tv136 = -80						; size = 4
_frac$ = -12						; size = 4
_idx1$ = -8						; size = 4
_idx0$ = -4						; size = 4
_val$ = 8						; size = 4
?Fast_Sin@WWMath@@SAMM@Z PROC				; WWMath::Fast_Sin, COMDAT

; 237  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 238  : 	val*=float(SIN_TABLE_SIZE) / (2.0f * WWMATH_PI);

	movss	xmm0, DWORD PTR __real@44800000
	divss	xmm0, DWORD PTR __real@40c90fdb
	mulss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR _val$[ebp], xmm0

; 239  : 	int idx0=Float_To_Int_Floor(val);

	lea	eax, DWORD PTR _val$[ebp]
	push	eax
	call	?Float_To_Int_Floor@WWMath@@SAHABM@Z	; WWMath::Float_To_Int_Floor
	add	esp, 4
	mov	DWORD PTR _idx0$[ebp], eax

; 240  : 	int idx1=idx0+1;

	mov	eax, DWORD PTR _idx0$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx1$[ebp], eax

; 241  : 	float frac=val-(float)idx0;

	cvtsi2ss xmm0, DWORD PTR _idx0$[ebp]
	movss	xmm1, DWORD PTR _val$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _frac$[ebp], xmm1

; 242  : 	idx0 = ((unsigned)idx0) & (SIN_TABLE_SIZE-1);

	mov	eax, DWORD PTR _idx0$[ebp]
	and	eax, 1023				; 000003ffH
	mov	DWORD PTR _idx0$[ebp], eax

; 243  : 	idx1 = ((unsigned)idx1) & (SIN_TABLE_SIZE-1);

	mov	eax, DWORD PTR _idx1$[ebp]
	and	eax, 1023				; 000003ffH
	mov	DWORD PTR _idx1$[ebp], eax

; 244  : 	return (1.0f - frac) * _FastSinTable[idx0] + frac * _FastSinTable[idx1];

	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR _frac$[ebp]
	mov	ecx, DWORD PTR ?_FastSinTable@@3AAV?$RefArrayHelper@M$0EAA@@@A ; _FastSinTable
	movss	DWORD PTR tv136[ebp], xmm0
	call	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ	; RefArrayHelper<float,1024>::operator float *
	mov	ecx, DWORD PTR _idx0$[ebp]
	movss	xmm0, DWORD PTR tv136[ebp]
	mulss	xmm0, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR ?_FastSinTable@@3AAV?$RefArrayHelper@M$0EAA@@@A ; _FastSinTable
	movss	DWORD PTR tv138[ebp], xmm0
	call	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ	; RefArrayHelper<float,1024>::operator float *
	mov	edx, DWORD PTR _idx1$[ebp]
	movss	xmm0, DWORD PTR _frac$[ebp]
	mulss	xmm0, DWORD PTR [eax+edx*4]
	movss	xmm1, DWORD PTR tv138[ebp]
	addss	xmm1, xmm0
	movss	DWORD PTR tv133[ebp], xmm1
	fld	DWORD PTR tv133[ebp]

; 245  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Fast_Sin@WWMath@@SAMM@Z ENDP				; WWMath::Fast_Sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Float_To_Long@WWMath@@SAJM@Z
_TEXT	SEGMENT
$T1 = -80						; size = 16
_f$ = 8							; size = 4
?Float_To_Long@WWMath@@SAJM@Z PROC			; WWMath::Float_To_Long, COMDAT

; 217  : {

	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	push	edi

; 218  :     return _mm_cvtt_ss2si(_mm_load_ss(&f));

	movss	xmm0, DWORD PTR _f$[ebx]
	movaps	XMMWORD PTR $T1[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T1[ebp]
	cvttss2si eax, xmm0

; 219  : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?Float_To_Long@WWMath@@SAJM@Z ENDP			; WWMath::Float_To_Long
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Inv_Sqrt@WWMath@@SIMM@Z
_TEXT	SEGMENT
tv76 = -72						; size = 4
tv73 = -68						; size = 4
_number$ = 8						; size = 4
?Inv_Sqrt@WWMath@@SIMM@Z PROC				; WWMath::Inv_Sqrt, COMDAT

; 341  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 342  : 	return 1.f / sqrt(number);

	push	ecx
	movss	xmm0, DWORD PTR _number$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?sqrt@@YAMM@Z				; sqrt
	add	esp, 4
	fstp	DWORD PTR tv73[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR tv73[ebp]
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]

; 343  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Inv_Sqrt@WWMath@@SIMM@Z ENDP				; WWMath::Inv_Sqrt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Sqrt@WWMath@@SAMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
?Sqrt@WWMath@@SAMM@Z PROC				; WWMath::Sqrt, COMDAT

; 311  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 312  :     return ::sqrtf(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sqrtf
	add	esp, 4

; 313  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Sqrt@WWMath@@SAMM@Z ENDP				; WWMath::Sqrt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Sin@WWMath@@SAMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
?Sin@WWMath@@SAMM@Z PROC				; WWMath::Sin, COMDAT

; 232  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 233  :     return ::sin(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4

; 234  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Sin@WWMath@@SAMM@Z ENDP				; WWMath::Sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Cos@WWMath@@SAMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
?Cos@WWMath@@SAMM@Z PROC				; WWMath::Cos, COMDAT

; 227  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 228  :     return ::cos(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4

; 229  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Cos@WWMath@@SAMM@Z ENDP				; WWMath::Cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Float_To_Int_Floor@WWMath@@SAHABM@Z
_TEXT	SEGMENT
tv83 = -96						; size = 4
_r$ = -28						; size = 4
_mantissa$ = -24					; size = 4
_imask$ = -20						; size = 4
_expsign$ = -16						; size = 4
_exponent$ = -12					; size = 4
_sign$ = -8						; size = 4
_a$ = -4						; size = 4
_f$ = 8							; size = 4
?Float_To_Int_Floor@WWMath@@SAHABM@Z PROC		; WWMath::Float_To_Int_Floor, COMDAT

; 326  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi

; 327  : 	int a = *reinterpret_cast<const int*>(&f);

	mov	eax, DWORD PTR _f$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _a$[ebp], ecx

; 328  : 	int sign = (a>>31);

	mov	eax, DWORD PTR _a$[ebp]
	sar	eax, 31					; 0000001fH
	mov	DWORD PTR _sign$[ebp], eax

; 329  : 	a&=0x7fffffff;

	mov	eax, DWORD PTR _a$[ebp]
	and	eax, 2147483647				; 7fffffffH
	mov	DWORD PTR _a$[ebp], eax

; 330  : 	int exponent = (a>>23)-127;

	mov	eax, DWORD PTR _a$[ebp]
	sar	eax, 23					; 00000017H
	sub	eax, 127				; 0000007fH
	mov	DWORD PTR _exponent$[ebp], eax

; 331  : 	int expsign	= ~(exponent>>31);

	mov	eax, DWORD PTR _exponent$[ebp]
	sar	eax, 31					; 0000001fH
	not	eax
	mov	DWORD PTR _expsign$[ebp], eax

; 332  : 	int imask = ( (1<<(31-(exponent))))-1;

	mov	ecx, 31					; 0000001fH
	sub	ecx, DWORD PTR _exponent$[ebp]
	mov	eax, 1
	shl	eax, cl
	sub	eax, 1
	mov	DWORD PTR _imask$[ebp], eax

; 333  : 	int mantissa = (a&((1<<23)-1));

	mov	eax, DWORD PTR _a$[ebp]
	and	eax, 8388607				; 007fffffH
	mov	DWORD PTR _mantissa$[ebp], eax

; 334  : 	int r = ((unsigned int)(mantissa|(1<<23))<<8)>>(31-exponent);

	mov	eax, DWORD PTR _mantissa$[ebp]
	or	eax, 8388608				; 00800000H
	shl	eax, 8
	mov	ecx, 31					; 0000001fH
	sub	ecx, DWORD PTR _exponent$[ebp]
	shr	eax, cl
	mov	DWORD PTR _r$[ebp], eax

; 335  : #pragma warning(suppress: 6290) //warning C6290: Bitwise operation on logical result: ! has higher precedence than &. Use && or (!(x & y)) instead
; 336  : 	r = ((r & expsign) ^ (sign)) + ((!((mantissa<<8)&imask)&(expsign^((a-1)>>31)))&sign);

	mov	eax, DWORD PTR _mantissa$[ebp]
	shl	eax, 8
	and	eax, DWORD PTR _imask$[ebp]
	jne	SHORT $LN3@Float_To_I
	mov	DWORD PTR tv83[ebp], 1
	jmp	SHORT $LN4@Float_To_I
$LN3@Float_To_I:
	mov	DWORD PTR tv83[ebp], 0
$LN4@Float_To_I:
	mov	ecx, DWORD PTR _r$[ebp]
	and	ecx, DWORD PTR _expsign$[ebp]
	xor	ecx, DWORD PTR _sign$[ebp]
	mov	edx, DWORD PTR _a$[ebp]
	sub	edx, 1
	sar	edx, 31					; 0000001fH
	xor	edx, DWORD PTR _expsign$[ebp]
	and	edx, DWORD PTR tv83[ebp]
	and	edx, DWORD PTR _sign$[ebp]
	add	ecx, edx
	mov	DWORD PTR _r$[ebp], ecx

; 337  : 	return r;

	mov	eax, DWORD PTR _r$[ebp]

; 338  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Float_To_Int_Floor@WWMath@@SAHABM@Z ENDP		; WWMath::Float_To_Int_Floor
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Float_To_Int_Chop@WWMath@@SAHABM@Z
_TEXT	SEGMENT
_r$ = -20						; size = 4
_exponent$ = -16					; size = 4
_mantissa$ = -12					; size = 4
_sign$ = -8						; size = 4
_a$ = -4						; size = 4
_f$ = 8							; size = 4
?Float_To_Int_Chop@WWMath@@SAHABM@Z PROC		; WWMath::Float_To_Int_Chop, COMDAT

; 316  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi

; 317  :     int a = *reinterpret_cast<const int*>(&f);

	mov	eax, DWORD PTR _f$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _a$[ebp], ecx

; 318  :     int sign = (a>>31);

	mov	eax, DWORD PTR _a$[ebp]
	sar	eax, 31					; 0000001fH
	mov	DWORD PTR _sign$[ebp], eax

; 319  :     int mantissa = (a&((1<<23)-1))|(1<<23);

	mov	eax, DWORD PTR _a$[ebp]
	and	eax, 8388607				; 007fffffH
	or	eax, 8388608				; 00800000H
	mov	DWORD PTR _mantissa$[ebp], eax

; 320  :     int exponent = ((a&0x7fffffff)>>23)-127;

	mov	eax, DWORD PTR _a$[ebp]
	and	eax, 2147483647				; 7fffffffH
	sar	eax, 23					; 00000017H
	sub	eax, 127				; 0000007fH
	mov	DWORD PTR _exponent$[ebp], eax

; 321  :     int r = ((unsigned int)(mantissa)<<8)>>(31-exponent);

	mov	eax, DWORD PTR _mantissa$[ebp]
	shl	eax, 8
	mov	ecx, 31					; 0000001fH
	sub	ecx, DWORD PTR _exponent$[ebp]
	shr	eax, cl
	mov	DWORD PTR _r$[ebp], eax

; 322  :     return ((r ^ (sign)) - sign ) &~ (exponent>>31);

	mov	eax, DWORD PTR _r$[ebp]
	xor	eax, DWORD PTR _sign$[ebp]
	sub	eax, DWORD PTR _sign$[ebp]
	mov	ecx, DWORD PTR _exponent$[ebp]
	sar	ecx, 31					; 0000001fH
	not	ecx
	and	eax, ecx

; 323  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Float_To_Int_Chop@WWMath@@SAHABM@Z ENDP		; WWMath::Float_To_Int_Chop
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Fabs@WWMath@@SAMM@Z
_TEXT	SEGMENT
_value$ = -4						; size = 4
_val$ = 8						; size = 4
?Fabs@WWMath@@SAMM@Z PROC				; WWMath::Fabs, COMDAT

; 57   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 58   : 		int value=*(int*)&val;

	mov	eax, DWORD PTR _val$[ebp]
	mov	DWORD PTR _value$[ebp], eax

; 59   : 		value&=0x7fffffff;

	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 2147483647				; 7fffffffH
	mov	DWORD PTR _value$[ebp], eax

; 60   : 		return *(float*)&value;

	fld	DWORD PTR _value$[ebp]

; 61   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Fabs@WWMath@@SAMM@Z ENDP				; WWMath::Fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\time.inl
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT

; 132  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 133  :     return _time64(_Time);

	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___time64
	add	esp, 4

; 134  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\time.inl
;	COMDAT _mktime
_TEXT	SEGMENT
__Tm$ = 8						; size = 4
_mktime	PROC						; COMDAT

; 124  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 125  :     return _mktime64(_Tm);

	mov	eax, DWORD PTR __Tm$[ebp]
	push	eax
	call	DWORD PTR __imp___mktime64
	add	esp, 4

; 126  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_mktime	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\time.inl
;	COMDAT _localtime
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_localtime PROC						; COMDAT

; 113  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 114  : #pragma warning( push )
; 115  : #pragma warning( disable : 4996 )
; 116  :     return _localtime64(_Time);

	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___localtime64
	add	esp, 4

; 117  : #pragma warning( pop )
; 118  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_localtime ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?sqrt@@YAMM@Z PROC					; sqrt, COMDAT

; 541  :         {return (sqrtf(_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sqrtf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?sqrt@@YAMM@Z ENDP					; sqrt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?sin@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?sin@@YAMM@Z PROC					; sin, COMDAT

; 537  :         {return (sinf(_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?sin@@YAMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?cos@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?cos@@YAMM@Z PROC					; cos, COMDAT

; 511  :         {return (cosf(_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?cos@@YAMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?atan2@@YAMMM@Z
_TEXT	SEGMENT
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
?atan2@@YAMMM@Z PROC					; atan2, COMDAT

; 507  :         {return (atan2f(_Y, _X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __Y$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_atan2f
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?atan2@@YAMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?atan@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?atan@@YAMM@Z PROC					; atan, COMDAT

; 505  :         {return (atanf(_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_atanf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?atan@@YAMM@Z ENDP					; atan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?asin@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?asin@@YAMM@Z PROC					; asin, COMDAT

; 503  :         {return (asinf(_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_asinf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?asin@@YAMM@Z ENDP					; asin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?acos@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?acos@@YAMM@Z PROC					; acos, COMDAT

; 501  :         {return (acosf(_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_acosf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?acos@@YAMM@Z ENDP					; acos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?abs@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?abs@@YAMM@Z PROC					; abs, COMDAT

; 499  :         {return (fabsf(_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_fabsf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?abs@@YAMM@Z ENDP					; abs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT

; 434  :         {return ((float)sqrt((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	call	__libm_sse2_sqrt_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv71[ebp], xmm0
	fld	DWORD PTR tv71[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_sqrtf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 430  :         {return ((float)sin((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	call	__libm_sse2_sin_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv71[ebp], xmm0
	fld	DWORD PTR tv71[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _floorf
_TEXT	SEGMENT
tv80 = -84						; size = 4
tv78 = -80						; size = 8
tv72 = -72						; size = 8
__X$ = 8						; size = 4
_floorf	PROC						; COMDAT

; 416  :         {return ((float)floor((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	movsd	QWORD PTR tv72[ebp], xmm0
	fld	QWORD PTR tv72[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_floor
	add	esp, 8
	fstp	QWORD PTR tv78[ebp]
	movsd	xmm0, QWORD PTR tv78[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv80[ebp], xmm0
	fld	DWORD PTR tv80[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_floorf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 410  :         {return ((float)cos((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	call	__libm_sse2_cos_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv71[ebp], xmm0
	fld	DWORD PTR tv71[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _ceilf
_TEXT	SEGMENT
tv76 = -76						; size = 4
tv74 = -72						; size = 8
__X$ = 8						; size = 4
_ceilf	PROC						; COMDAT

; 408  :         {return ((float)ceil((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR __imp__ceil
	add	esp, 8
	fstp	QWORD PTR tv74[ebp]
	movsd	xmm0, QWORD PTR tv74[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ceilf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv85 = -92						; size = 4
tv83 = -88						; size = 8
tv77 = -80						; size = 8
tv75 = -72						; size = 8
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 406  :         {return ((float)atan2((double)_Y, (double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __Y$[ebp]
	movsd	QWORD PTR tv75[ebp], xmm0
	fld	QWORD PTR tv75[ebp]
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	movsd	QWORD PTR tv77[ebp], xmm0
	fld	QWORD PTR tv77[ebp]
	call	__CIatan2
	fstp	QWORD PTR tv83[ebp]
	movsd	xmm0, QWORD PTR tv83[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv85[ebp], xmm0
	fld	DWORD PTR tv85[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_atan2f	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _atanf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_atanf	PROC						; COMDAT

; 404  :         {return ((float)atan((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	call	__libm_sse2_atan_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv71[ebp], xmm0
	fld	DWORD PTR tv71[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_atanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _asinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_asinf	PROC						; COMDAT

; 402  :         {return ((float)asin((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	call	__libm_sse2_asin_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv71[ebp], xmm0
	fld	DWORD PTR tv71[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_asinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _acosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_acosf	PROC						; COMDAT

; 400  :         {return ((float)acos((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	call	__libm_sse2_acos_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv71[ebp], xmm0
	fld	DWORD PTR tv71[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_acosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 392  :         {return ((float)fabs((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	andpd	xmm0, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv71[ebp], xmm0
	fld	DWORD PTR tv71[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_I@YGXPAXIHP6EX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_I@YGXPAXIHP6EX0@Z@Z PROC				; `vector destructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___s$[ebp]
	imul	eax, DWORD PTR ___n$[ebp]
	add	eax, DWORD PTR ___t$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	eax, DWORD PTR ___t$[ebp]
	sub	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_I@YGXPAXIHP6EX0@Z@Z ENDP				; `vector destructor iterator'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
