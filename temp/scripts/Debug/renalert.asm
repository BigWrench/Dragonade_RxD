; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.61219.0 

	TITLE	X:\GitHub\Renegade\Dragonade_RxD\scripts\renalert.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_DONT_MOVE_ARRIVED_DIST DD 0447a0000r		; 1000
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??_I@YGXPAXIHP6EX0@Z@Z				; `vector destructor iterator'
PUBLIC	_acosf
PUBLIC	_asinf
PUBLIC	_atanf
PUBLIC	_atan2f
PUBLIC	_ceilf
PUBLIC	_cosf
PUBLIC	_floorf
PUBLIC	_sinf
PUBLIC	_sqrtf
PUBLIC	?acos@@YAMM@Z					; acos
PUBLIC	?asin@@YAMM@Z					; asin
PUBLIC	?atan@@YAMM@Z					; atan
PUBLIC	?atan2@@YAMMM@Z					; atan2
PUBLIC	?cos@@YAMM@Z					; cos
PUBLIC	?sin@@YAMM@Z					; sin
PUBLIC	?sqrt@@YAMM@Z					; sqrt
PUBLIC	?Fabs@WWMath@@SAMM@Z				; WWMath::Fabs
PUBLIC	?Float_To_Int_Chop@WWMath@@SAHABM@Z		; WWMath::Float_To_Int_Chop
PUBLIC	?Float_To_Int_Floor@WWMath@@SAHABM@Z		; WWMath::Float_To_Int_Floor
PUBLIC	?Cos@WWMath@@SAMM@Z				; WWMath::Cos
PUBLIC	?Sin@WWMath@@SAMM@Z				; WWMath::Sin
PUBLIC	?Sqrt@WWMath@@SAMM@Z				; WWMath::Sqrt
PUBLIC	?Inv_Sqrt@WWMath@@SIMM@Z			; WWMath::Inv_Sqrt
PUBLIC	?Float_To_Long@WWMath@@SAJM@Z			; WWMath::Float_To_Long
PUBLIC	?Fast_Sin@WWMath@@SAMM@Z			; WWMath::Fast_Sin
PUBLIC	?Fast_Inv_Sin@WWMath@@SAMM@Z			; WWMath::Fast_Inv_Sin
PUBLIC	?Fast_Cos@WWMath@@SAMM@Z			; WWMath::Fast_Cos
PUBLIC	?Fast_Inv_Cos@WWMath@@SAMM@Z			; WWMath::Fast_Inv_Cos
PUBLIC	?Fast_Acos@WWMath@@SAMM@Z			; WWMath::Fast_Acos
PUBLIC	?Fast_Asin@WWMath@@SAMM@Z			; WWMath::Fast_Asin
PUBLIC	?Acos@WWMath@@SAMM@Z				; WWMath::Acos
PUBLIC	?Asin@WWMath@@SAMM@Z				; WWMath::Asin
PUBLIC	?Atan@WWMath@@SAMM@Z				; WWMath::Atan
PUBLIC	?Atan2@WWMath@@SAMMM@Z				; WWMath::Atan2
PUBLIC	?Sign@WWMath@@SAMM@Z				; WWMath::Sign
PUBLIC	?Ceil@WWMath@@SAMM@Z				; WWMath::Ceil
PUBLIC	?Floor@WWMath@@SAMM@Z				; WWMath::Floor
PUBLIC	?Fast_Is_Float_Positive@WWMath@@SA_NABM@Z	; WWMath::Fast_Is_Float_Positive
PUBLIC	?Random_Float@WWMath@@SAMMM@Z			; WWMath::Random_Float
PUBLIC	?Clamp@WWMath@@SAMMMM@Z				; WWMath::Clamp
PUBLIC	?Clamp@WWMath@@SANNNN@Z				; WWMath::Clamp
PUBLIC	?Clamp_Int@WWMath@@SAHHHH@Z			; WWMath::Clamp_Int
PUBLIC	?Wrap@WWMath@@SAMMMM@Z				; WWMath::Wrap
PUBLIC	?Wrap@WWMath@@SANNNN@Z				; WWMath::Wrap
PUBLIC	?Min@WWMath@@SAMMM@Z				; WWMath::Min
PUBLIC	?Max@WWMath@@SAMMM@Z				; WWMath::Max
PUBLIC	?Lerp@WWMath@@SAMMMM@Z				; WWMath::Lerp
PUBLIC	?Lerp@WWMath@@SANNNM@Z				; WWMath::Lerp
PUBLIC	?Lerp@WWMath@@SAHHHM@Z				; WWMath::Lerp
PUBLIC	?Float_To_Long@WWMath@@SAJN@Z			; WWMath::Float_To_Long
PUBLIC	?Unit_Float_To_Byte@WWMath@@SAEM@Z		; WWMath::Unit_Float_To_Byte
PUBLIC	?Byte_To_Unit_Float@WWMath@@SAME@Z		; WWMath::Byte_To_Unit_Float
PUBLIC	?Is_Valid_Float@WWMath@@SA_NM@Z			; WWMath::Is_Valid_Float
PUBLIC	?Is_Valid_Double@WWMath@@SA_NN@Z		; WWMath::Is_Valid_Double
PUBLIC	??4WWMath@@QAEAAV0@ABV0@@Z			; WWMath::operator=
PUBLIC	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ		; RefArrayHelper<float,1024>::operator float *
PUBLIC	??0Vector3@@QAE@XZ				; Vector3::Vector3
PUBLIC	??0Vector3@@QAE@ABV0@@Z				; Vector3::Vector3
PUBLIC	??0Vector3@@QAE@MMM@Z				; Vector3::Vector3
PUBLIC	??4Vector3@@QAEAAV0@ABV0@@Z			; Vector3::operator=
PUBLIC	?Set@Vector3@@QAEXMMM@Z				; Vector3::Set
PUBLIC	??AVector3@@QAEAAMH@Z				; Vector3::operator[]
PUBLIC	??AVector3@@QBEABMH@Z				; Vector3::operator[]
PUBLIC	?Normalize@Vector3@@QAEXXZ			; Vector3::Normalize
PUBLIC	?Length@Vector3@@QBEMXZ				; Vector3::Length
PUBLIC	?Length2@Vector3@@QBEMXZ			; Vector3::Length2
PUBLIC	??YVector3@@QAEAAV0@ABV0@@Z			; Vector3::operator+=
PUBLIC	??ZVector3@@QAEAAV0@ABV0@@Z			; Vector3::operator-=
PUBLIC	??XVector3@@QAEAAV0@M@Z				; Vector3::operator*=
PUBLIC	??_0Vector3@@QAEAAV0@M@Z			; Vector3::operator/=
PUBLIC	??D@YA?AVVector3@@ABV0@M@Z			; operator*
PUBLIC	??D@YA?AVVector3@@MABV0@@Z			; operator*
PUBLIC	??H@YA?AVVector3@@ABV0@0@Z			; operator+
PUBLIC	??G@YA?AVVector3@@ABV0@0@Z			; operator-
PUBLIC	?Add@Vector3@@SAXABV1@0PAV1@@Z			; Vector3::Add
PUBLIC	?Subtract@Vector3@@SAXABV1@0PAV1@@Z		; Vector3::Subtract
PUBLIC	?Swap@@YAXAAVVector3@@0@Z			; Swap
PUBLIC	??0GameObjObserverClass@@QAE@XZ			; GameObjObserverClass::GameObjObserverClass
PUBLIC	??1GameObjObserverClass@@UAE@XZ			; GameObjObserverClass::~GameObjObserverClass
PUBLIC	?Set_ID@GameObjObserverClass@@QAEXH@Z		; GameObjObserverClass::Set_ID
PUBLIC	?Get_ID@GameObjObserverClass@@QAEHXZ		; GameObjObserverClass::Get_ID
PUBLIC	?Owner@GameObjObserverClass@@UAEPAVScriptableGameObj@@XZ ; GameObjObserverClass::Owner
PUBLIC	??0GameObjObserverClass@@QAE@ABV0@@Z		; GameObjObserverClass::GameObjObserverClass
PUBLIC	??4GameObjObserverClass@@QAEAAV0@ABV0@@Z	; GameObjObserverClass::operator=
PUBLIC	??_GGameObjObserverClass@@UAEPAXI@Z		; GameObjObserverClass::`scalar deleting destructor'
PUBLIC	??_EGameObjObserverClass@@UAEPAXI@Z		; GameObjObserverClass::`vector deleting destructor'
PUBLIC	??1ScriptClass@@UAE@XZ				; ScriptClass::~ScriptClass
PUBLIC	??0ScriptClass@@QAE@XZ				; ScriptClass::ScriptClass
PUBLIC	??0ScriptClass@@QAE@ABV0@@Z			; ScriptClass::ScriptClass
PUBLIC	??4ScriptClass@@QAEAAV0@ABV0@@Z			; ScriptClass::operator=
PUBLIC	??_GScriptClass@@UAEPAXI@Z			; ScriptClass::`scalar deleting destructor'
PUBLIC	??_EScriptClass@@UAEPAXI@Z			; ScriptClass::`vector deleting destructor'
PUBLIC	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory
PUBLIC	?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z ; ScriptImpClass::Created
PUBLIC	?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z ; ScriptImpClass::Destroyed
PUBLIC	?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ; ScriptImpClass::Killed
PUBLIC	?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z ; ScriptImpClass::Damaged
PUBLIC	?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z ; ScriptImpClass::Custom
PUBLIC	?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z ; ScriptImpClass::Sound_Heard
PUBLIC	?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ; ScriptImpClass::Enemy_Seen
PUBLIC	?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z ; ScriptImpClass::Action_Complete
PUBLIC	?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z ; ScriptImpClass::Timer_Expired
PUBLIC	?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z ; ScriptImpClass::Animation_Complete
PUBLIC	?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ; ScriptImpClass::Poked
PUBLIC	?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ; ScriptImpClass::Entered
PUBLIC	?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ; ScriptImpClass::Exited
PUBLIC	?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ ; ScriptImpClass::Owner
PUBLIC	?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ ; ScriptImpClass::Get_Owner_Ptr
PUBLIC	?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z ; ScriptImpClass::Save_Data
PUBLIC	?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z ; ScriptImpClass::Load_Data
PUBLIC	?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ ; ScriptImpClass::Register_Auto_Save_Variables
PUBLIC	?Get_Parameter_Count@ScriptImpClass@@QAEHXZ	; ScriptImpClass::Get_Parameter_Count
PUBLIC	?Get_Int_Parameter@ScriptImpClass@@QAEHH@Z	; ScriptImpClass::Get_Int_Parameter
PUBLIC	?Get_Float_Parameter@ScriptImpClass@@QAEMH@Z	; ScriptImpClass::Get_Float_Parameter
PUBLIC	?Get_Bool_Parameter@ScriptImpClass@@QAE_NPBD@Z	; ScriptImpClass::Get_Bool_Parameter
PUBLIC	?Get_Bool_Parameter@ScriptImpClass@@QAE_NH@Z	; ScriptImpClass::Get_Bool_Parameter
PUBLIC	??0ScriptImpClass@@QAE@ABV0@@Z			; ScriptImpClass::ScriptImpClass
PUBLIC	??4ScriptImpClass@@QAEAAV0@ABV0@@Z		; ScriptImpClass::operator=
PUBLIC	??_GScriptImpClass@@UAEPAXI@Z			; ScriptImpClass::`scalar deleting destructor'
PUBLIC	??_EScriptImpClass@@UAEPAXI@Z			; ScriptImpClass::`vector deleting destructor'
PUBLIC	??0ActionParamsStruct@@QAE@XZ			; ActionParamsStruct::ActionParamsStruct
PUBLIC	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic
PUBLIC	?Set_Attack@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ; ActionParamsStruct::Set_Attack
PUBLIC	?Set_Attack@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z ; ActionParamsStruct::Set_Attack
PUBLIC	?Set_Face_Location@ActionParamsStruct@@QAEXABVVector3@@M@Z ; ActionParamsStruct::Set_Face_Location
PUBLIC	??0ScriptFactory@@QAE@ABV0@@Z			; ScriptFactory::ScriptFactory
PUBLIC	??4ScriptFactory@@QAEAAV0@ABV0@@Z		; ScriptFactory::operator=
PUBLIC	??_GScriptFactory@@UAEPAXI@Z			; ScriptFactory::`scalar deleting destructor'
PUBLIC	??_EScriptFactory@@UAEPAXI@Z			; ScriptFactory::`vector deleting destructor'
PUBLIC	??4ScriptRegistrar@@QAEAAV0@ABV0@@Z		; ScriptRegistrar::operator=
PUBLIC	?Is_Running@ThreadClass@@QAE_NXZ		; ThreadClass::Is_Running
PUBLIC	?Get_Current_Thread_ID@ThreadClass@@SAHXZ	; ThreadClass::Get_Current_Thread_ID
PUBLIC	?Get_Name@ThreadClass@@QAEPBDXZ			; ThreadClass::Get_Name
PUBLIC	??0ThreadClass@@QAE@ABV0@@Z			; ThreadClass::ThreadClass
PUBLIC	??4ThreadClass@@QAEAAV0@ABV0@@Z			; ThreadClass::operator=
PUBLIC	??_GThreadClass@@UAEPAXI@Z			; ThreadClass::`scalar deleting destructor'
PUBLIC	??_EThreadClass@@UAEPAXI@Z			; ThreadClass::`vector deleting destructor'
PUBLIC	??4CriticalSectionClass@@QAEAAV0@ABV0@@Z	; CriticalSectionClass::operator=
PUBLIC	?Enter@FastCriticalSectionClass@@AAEXXZ		; FastCriticalSectionClass::Enter
PUBLIC	?Leave@FastCriticalSectionClass@@AAEXXZ		; FastCriticalSectionClass::Leave
PUBLIC	??0LockClass@FastCriticalSectionClass@@QAE@AAV1@@Z ; FastCriticalSectionClass::LockClass::LockClass
PUBLIC	??1LockClass@FastCriticalSectionClass@@QAE@XZ	; FastCriticalSectionClass::LockClass::~LockClass
PUBLIC	??0FastCriticalSectionClass@@QAE@XZ		; FastCriticalSectionClass::FastCriticalSectionClass
PUBLIC	?Release_Ref@RefCountClass@@QAEXXZ		; RefCountClass::Release_Ref
PUBLIC	??1StringClass@@QAE@XZ				; StringClass::~StringClass
PUBLIC	??_EStringClass@@QAEPAXI@Z			; StringClass::`vector deleting destructor'
PUBLIC	??1WideStringClass@@QAE@XZ			; WideStringClass::~WideStringClass
PUBLIC	??_EWideStringClass@@QAEPAXI@Z			; WideStringClass::`vector deleting destructor'
PUBLIC	??4ChunkLoadClass@@QAEAAV0@ABV0@@Z		; ChunkLoadClass::operator=
PUBLIC	?Set_Contains_Chunks@ChunkSaveClass@@QAEXXZ	; ChunkSaveClass::Set_Contains_Chunks
PUBLIC	??4ChunkSaveClass@@QAEAAV0@ABV0@@Z		; ChunkSaveClass::operator=
PUBLIC	?Is_Present@INIClass@@QBE_NPBD0@Z		; INIClass::Is_Present
PUBLIC	?Section_Present@INIClass@@QBE_NPBD@Z		; INIClass::Section_Present
PUBLIC	?Get_Section_List@INIClass@@QAEAAV?$List@PAUINISection@@@@XZ ; INIClass::Get_Section_List
PUBLIC	?Get_Section_Index@INIClass@@QAEAAV?$IndexClass@HPAUINISection@@@@XZ ; INIClass::Get_Section_Index
PUBLIC	?Get_File_Name@INIClass@@QAEPBDXZ		; INIClass::Get_File_Name
PUBLIC	??0INIClass@@QAE@ABV0@@Z			; INIClass::INIClass
PUBLIC	??4INIClass@@QAEAAV0@ABV0@@Z			; INIClass::operator=
PUBLIC	??_GINIClass@@UAEPAXI@Z				; INIClass::`scalar deleting destructor'
PUBLIC	??_EINIClass@@UAEPAXI@Z				; INIClass::`vector deleting destructor'
PUBLIC	??Cfile_auto_ptr@@QAEPAVFileClass@@XZ		; file_auto_ptr::operator->
PUBLIC	??Bfile_auto_ptr@@QAEPAVFileClass@@XZ		; file_auto_ptr::operator FileClass *
PUBLIC	??Dfile_auto_ptr@@QAEAAVFileClass@@XZ		; file_auto_ptr::operator*
PUBLIC	?get@file_auto_ptr@@QAEPAVFileClass@@XZ		; file_auto_ptr::get
PUBLIC	??4file_auto_ptr@@QAEAAV0@ABV0@@Z		; file_auto_ptr::operator=
PUBLIC	??0Vector4@@QAE@XZ				; Vector4::Vector4
PUBLIC	??0Vector4@@QAE@MMMM@Z				; Vector4::Vector4
PUBLIC	??4Vector4@@QAEAAV0@ABV0@@Z			; Vector4::operator=
PUBLIC	?Set@Vector4@@QAEXMMMM@Z			; Vector4::Set
PUBLIC	??AVector4@@QAEAAMH@Z				; Vector4::operator[]
PUBLIC	??AVector4@@QBEABMH@Z				; Vector4::operator[]
PUBLIC	??YVector4@@QAEAAV0@ABV0@@Z			; Vector4::operator+=
PUBLIC	??ZVector4@@QAEAAV0@ABV0@@Z			; Vector4::operator-=
PUBLIC	??XVector4@@QAEAAV0@M@Z				; Vector4::operator*=
PUBLIC	??AMatrix3D@@QAEAAVVector4@@H@Z			; Matrix3D::operator[]
PUBLIC	??AMatrix3D@@QBEABVVector4@@H@Z			; Matrix3D::operator[]
PUBLIC	??0Matrix3D@@QAE@_N@Z				; Matrix3D::Matrix3D
PUBLIC	??0Matrix3D@@QAE@QAM@Z				; Matrix3D::Matrix3D
PUBLIC	??0Matrix3D@@QAE@ABVVector3@@000@Z		; Matrix3D::Matrix3D
PUBLIC	??0Matrix3D@@QAE@ABVVector3@@M@Z		; Matrix3D::Matrix3D
PUBLIC	??0Matrix3D@@QAE@ABVVector3@@MM@Z		; Matrix3D::Matrix3D
PUBLIC	??0Matrix3D@@QAE@ABVMatrix3@@ABVVector3@@@Z	; Matrix3D::Matrix3D
PUBLIC	??0Matrix3D@@QAE@ABVQuaternion@@ABVVector3@@@Z	; Matrix3D::Matrix3D
PUBLIC	??0Matrix3D@@QAE@ABVVector3@@@Z			; Matrix3D::Matrix3D
PUBLIC	??0Matrix3D@@QAE@ABV0@@Z			; Matrix3D::Matrix3D
PUBLIC	??4Matrix3D@@QAEAAV0@ABV0@@Z			; Matrix3D::operator=
PUBLIC	?Set@Matrix3D@@QAEXQAM@Z			; Matrix3D::Set
PUBLIC	?Set@Matrix3D@@QAEXMMMMMMMMMMMM@Z		; Matrix3D::Set
PUBLIC	?Set@Matrix3D@@QAEXABVVector3@@000@Z		; Matrix3D::Set
PUBLIC	?Set@Matrix3D@@QAEXABVVector3@@M@Z		; Matrix3D::Set
PUBLIC	?Set@Matrix3D@@QAEXABVVector3@@MM@Z		; Matrix3D::Set
PUBLIC	?Set@Matrix3D@@QAEXABVVector3@@@Z		; Matrix3D::Set
PUBLIC	?Get_Translation@Matrix3D@@QBE?AVVector3@@XZ	; Matrix3D::Get_Translation
PUBLIC	?Get_Translation@Matrix3D@@QBEXPAVVector3@@@Z	; Matrix3D::Get_Translation
PUBLIC	?Set_Translation@Matrix3D@@QAEXABVVector3@@@Z	; Matrix3D::Set_Translation
PUBLIC	?Get_X_Translation@Matrix3D@@QBEMXZ		; Matrix3D::Get_X_Translation
PUBLIC	?Get_Y_Translation@Matrix3D@@QBEMXZ		; Matrix3D::Get_Y_Translation
PUBLIC	?Get_Z_Translation@Matrix3D@@QBEMXZ		; Matrix3D::Get_Z_Translation
PUBLIC	?Set_X_Translation@Matrix3D@@QAEXM@Z		; Matrix3D::Set_X_Translation
PUBLIC	?Set_Y_Translation@Matrix3D@@QAEXM@Z		; Matrix3D::Set_Y_Translation
PUBLIC	?Set_Z_Translation@Matrix3D@@QAEXM@Z		; Matrix3D::Set_Z_Translation
PUBLIC	?Adjust_Translation@Matrix3D@@QAEXABVVector3@@@Z ; Matrix3D::Adjust_Translation
PUBLIC	?Adjust_X_Translation@Matrix3D@@QAEXM@Z		; Matrix3D::Adjust_X_Translation
PUBLIC	?Adjust_Y_Translation@Matrix3D@@QAEXM@Z		; Matrix3D::Adjust_Y_Translation
PUBLIC	?Adjust_Z_Translation@Matrix3D@@QAEXM@Z		; Matrix3D::Adjust_Z_Translation
PUBLIC	?Make_Identity@Matrix3D@@QAEXXZ			; Matrix3D::Make_Identity
PUBLIC	?Translate@Matrix3D@@QAEXMMM@Z			; Matrix3D::Translate
PUBLIC	?Translate@Matrix3D@@QAEXABVVector3@@@Z		; Matrix3D::Translate
PUBLIC	?Translate_X@Matrix3D@@QAEXM@Z			; Matrix3D::Translate_X
PUBLIC	?Translate_Y@Matrix3D@@QAEXM@Z			; Matrix3D::Translate_Y
PUBLIC	?Translate_Z@Matrix3D@@QAEXM@Z			; Matrix3D::Translate_Z
PUBLIC	?Rotate_X@Matrix3D@@QAEXM@Z			; Matrix3D::Rotate_X
PUBLIC	?Rotate_Y@Matrix3D@@QAEXM@Z			; Matrix3D::Rotate_Y
PUBLIC	?Rotate_Z@Matrix3D@@QAEXM@Z			; Matrix3D::Rotate_Z
PUBLIC	?Rotate_X@Matrix3D@@QAEXMM@Z			; Matrix3D::Rotate_X
PUBLIC	?Rotate_Y@Matrix3D@@QAEXMM@Z			; Matrix3D::Rotate_Y
PUBLIC	?Rotate_Z@Matrix3D@@QAEXMM@Z			; Matrix3D::Rotate_Z
PUBLIC	?Scale@Matrix3D@@QAEXM@Z			; Matrix3D::Scale
PUBLIC	?Scale@Matrix3D@@QAEXMMM@Z			; Matrix3D::Scale
PUBLIC	?Scale@Matrix3D@@QAEXAAVVector3@@@Z		; Matrix3D::Scale
PUBLIC	?Pre_Rotate_X@Matrix3D@@QAEXM@Z			; Matrix3D::Pre_Rotate_X
PUBLIC	?Pre_Rotate_Y@Matrix3D@@QAEXM@Z			; Matrix3D::Pre_Rotate_Y
PUBLIC	?Pre_Rotate_Z@Matrix3D@@QAEXM@Z			; Matrix3D::Pre_Rotate_Z
PUBLIC	?Pre_Rotate_X@Matrix3D@@QAEXMM@Z		; Matrix3D::Pre_Rotate_X
PUBLIC	?Pre_Rotate_Y@Matrix3D@@QAEXMM@Z		; Matrix3D::Pre_Rotate_Y
PUBLIC	?Pre_Rotate_Z@Matrix3D@@QAEXMM@Z		; Matrix3D::Pre_Rotate_Z
PUBLIC	?In_Place_Pre_Rotate_X@Matrix3D@@QAEXM@Z	; Matrix3D::In_Place_Pre_Rotate_X
PUBLIC	?In_Place_Pre_Rotate_Y@Matrix3D@@QAEXM@Z	; Matrix3D::In_Place_Pre_Rotate_Y
PUBLIC	?In_Place_Pre_Rotate_Z@Matrix3D@@QAEXM@Z	; Matrix3D::In_Place_Pre_Rotate_Z
PUBLIC	?In_Place_Pre_Rotate_X@Matrix3D@@QAEXMM@Z	; Matrix3D::In_Place_Pre_Rotate_X
PUBLIC	?In_Place_Pre_Rotate_Y@Matrix3D@@QAEXMM@Z	; Matrix3D::In_Place_Pre_Rotate_Y
PUBLIC	?In_Place_Pre_Rotate_Z@Matrix3D@@QAEXMM@Z	; Matrix3D::In_Place_Pre_Rotate_Z
PUBLIC	?Transform_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ; Matrix3D::Transform_Vector
PUBLIC	?Get_X_Vector@Matrix3D@@QBE?AVVector3@@XZ	; Matrix3D::Get_X_Vector
PUBLIC	?Get_Y_Vector@Matrix3D@@QBE?AVVector3@@XZ	; Matrix3D::Get_Y_Vector
PUBLIC	?Get_Z_Vector@Matrix3D@@QBE?AVVector3@@XZ	; Matrix3D::Get_Z_Vector
PUBLIC	?Get_X_Vector@Matrix3D@@QBEXPAVVector3@@@Z	; Matrix3D::Get_X_Vector
PUBLIC	?Get_Y_Vector@Matrix3D@@QBEXPAVVector3@@@Z	; Matrix3D::Get_Y_Vector
PUBLIC	?Get_Z_Vector@Matrix3D@@QBEXPAVVector3@@@Z	; Matrix3D::Get_Z_Vector
PUBLIC	?Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ; Matrix3D::Rotate_Vector
PUBLIC	?Inverse_Transform_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ; Matrix3D::Inverse_Transform_Vector
PUBLIC	?Inverse_Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ; Matrix3D::Inverse_Rotate_Vector
PUBLIC	??0Matrix4@@QAE@XZ				; Matrix4::Matrix4
PUBLIC	??0Matrix4@@QAE@ABV0@@Z				; Matrix4::Matrix4
PUBLIC	??0Matrix4@@QAE@_N@Z				; Matrix4::Matrix4
PUBLIC	??0Matrix4@@QAE@ABVMatrix3D@@@Z			; Matrix4::Matrix4
PUBLIC	??0Matrix4@@QAE@ABVVector4@@000@Z		; Matrix4::Matrix4
PUBLIC	?Make_Identity@Matrix4@@QAEXXZ			; Matrix4::Make_Identity
PUBLIC	?Init@Matrix4@@QAEXABVMatrix3D@@@Z		; Matrix4::Init
PUBLIC	?Init@Matrix4@@QAEXABVVector4@@000@Z		; Matrix4::Init
PUBLIC	?Init_Ortho_OGL@Matrix4@@QAEXMMMMMM@Z		; Matrix4::Init_Ortho_OGL
PUBLIC	?Init_Perspective_OGL@Matrix4@@QAEXMMMM@Z	; Matrix4::Init_Perspective_OGL
PUBLIC	?Init_Perspective_OGL@Matrix4@@QAEXMMMMMM@Z	; Matrix4::Init_Perspective_OGL
PUBLIC	?Init_Ortho@Matrix4@@QAEXMMMMMM@Z		; Matrix4::Init_Ortho
PUBLIC	?Init_Perspective@Matrix4@@QAEXMMMMMM@Z		; Matrix4::Init_Perspective
PUBLIC	??AMatrix4@@QAEAAVVector4@@H@Z			; Matrix4::operator[]
PUBLIC	??AMatrix4@@QBEABVVector4@@H@Z			; Matrix4::operator[]
PUBLIC	?Transpose@Matrix4@@QBE?AV1@XZ			; Matrix4::Transpose
PUBLIC	?Determinant@Matrix4@@QBEMXZ			; Matrix4::Determinant
PUBLIC	?Inverse@Matrix4@@QBE?AV1@XZ			; Matrix4::Inverse
PUBLIC	??4Matrix4@@QAEAAV0@ABV0@@Z			; Matrix4::operator=
PUBLIC	??YMatrix4@@QAEAAV0@ABV0@@Z			; Matrix4::operator+=
PUBLIC	??ZMatrix4@@QAEAAV0@ABV0@@Z			; Matrix4::operator-=
PUBLIC	??XMatrix4@@QAEAAV0@M@Z				; Matrix4::operator*=
PUBLIC	??_0Matrix4@@QAEAAV0@M@Z			; Matrix4::operator/=
PUBLIC	?Transform_Vector@Matrix4@@SAXABV1@ABVVector3@@PAV2@@Z ; Matrix4::Transform_Vector
PUBLIC	?Transform_Vector@Matrix4@@SAXABV1@ABVVector3@@PAVVector4@@@Z ; Matrix4::Transform_Vector
PUBLIC	?Transform_Vector@Matrix4@@SAXABV1@ABVVector4@@PAV2@@Z ; Matrix4::Transform_Vector
PUBLIC	??0Matrix3@@QAE@XZ				; Matrix3::Matrix3
PUBLIC	??0Matrix3@@QAE@ABV0@@Z				; Matrix3::Matrix3
PUBLIC	??0Matrix3@@QAE@_N@Z				; Matrix3::Matrix3
PUBLIC	??0Matrix3@@QAE@ABVVector3@@00@Z		; Matrix3::Matrix3
PUBLIC	??0Matrix3@@QAE@MMMMMMMMM@Z			; Matrix3::Matrix3
PUBLIC	??0Matrix3@@QAE@ABVVector3@@M@Z			; Matrix3::Matrix3
PUBLIC	??0Matrix3@@QAE@ABVVector3@@MM@Z		; Matrix3::Matrix3
PUBLIC	??0Matrix3@@QAE@ABVQuaternion@@@Z		; Matrix3::Matrix3
PUBLIC	?Set@Matrix3@@QAEXABVVector3@@00@Z		; Matrix3::Set
PUBLIC	?Set@Matrix3@@QAEXMMMMMMMMM@Z			; Matrix3::Set
PUBLIC	?Set@Matrix3@@QAEXABVVector3@@M@Z		; Matrix3::Set
PUBLIC	?Set@Matrix3@@QAEXABVVector3@@MM@Z		; Matrix3::Set
PUBLIC	??AMatrix3@@QAEAAVVector3@@H@Z			; Matrix3::operator[]
PUBLIC	??AMatrix3@@QBEABVVector3@@H@Z			; Matrix3::operator[]
PUBLIC	?Transpose@Matrix3@@QBE?AV1@XZ			; Matrix3::Transpose
PUBLIC	?Determinant@Matrix3@@QBEMXZ			; Matrix3::Determinant
PUBLIC	??4Matrix3@@QAEAAV0@ABV0@@Z			; Matrix3::operator=
PUBLIC	??YMatrix3@@QAEAAV0@ABV0@@Z			; Matrix3::operator+=
PUBLIC	??ZMatrix3@@QAEAAV0@ABV0@@Z			; Matrix3::operator-=
PUBLIC	??XMatrix3@@QAEAAV0@M@Z				; Matrix3::operator*=
PUBLIC	??_0Matrix3@@QAEAAV0@M@Z			; Matrix3::operator/=
PUBLIC	?Make_Identity@Matrix3@@QAEXXZ			; Matrix3::Make_Identity
PUBLIC	?Rotate_X@Matrix3@@QAEXM@Z			; Matrix3::Rotate_X
PUBLIC	?Rotate_X@Matrix3@@QAEXMM@Z			; Matrix3::Rotate_X
PUBLIC	?Rotate_Y@Matrix3@@QAEXM@Z			; Matrix3::Rotate_Y
PUBLIC	?Rotate_Y@Matrix3@@QAEXMM@Z			; Matrix3::Rotate_Y
PUBLIC	?Rotate_Z@Matrix3@@QAEXM@Z			; Matrix3::Rotate_Z
PUBLIC	?Rotate_Z@Matrix3@@QAEXMM@Z			; Matrix3::Rotate_Z
PUBLIC	?Get_X_Rotation@Matrix3@@QBEMXZ			; Matrix3::Get_X_Rotation
PUBLIC	?Get_Y_Rotation@Matrix3@@QBEMXZ			; Matrix3::Get_Y_Rotation
PUBLIC	?Get_Z_Rotation@Matrix3@@QBEMXZ			; Matrix3::Get_Z_Rotation
PUBLIC	?Get_X_Vector@Matrix3@@QBE?AVVector3@@XZ	; Matrix3::Get_X_Vector
PUBLIC	?Get_Y_Vector@Matrix3@@QBE?AVVector3@@XZ	; Matrix3::Get_Y_Vector
PUBLIC	?Get_Z_Vector@Matrix3@@QBE?AVVector3@@XZ	; Matrix3::Get_Z_Vector
PUBLIC	?Get_X_Vector@Matrix3@@QBEXPAVVector3@@@Z	; Matrix3::Get_X_Vector
PUBLIC	?Get_Y_Vector@Matrix3@@QBEXPAVVector3@@@Z	; Matrix3::Get_Y_Vector
PUBLIC	?Get_Z_Vector@Matrix3@@QBEXPAVVector3@@@Z	; Matrix3::Get_Z_Vector
PUBLIC	??D@YA?AVVector3@@ABVMatrix3@@ABV0@@Z		; operator*
PUBLIC	?Add@Matrix3@@SAXABV1@0PAV1@@Z			; Matrix3::Add
PUBLIC	?Subtract@Matrix3@@SAXABV1@0PAV1@@Z		; Matrix3::Subtract
PUBLIC	?Rotate_Vector@Matrix3@@SAXABV1@ABVVector3@@PAV2@@Z ; Matrix3::Rotate_Vector
PUBLIC	?Transpose_Rotate_Vector@Matrix3@@SAXABV1@ABVVector3@@PAV2@@Z ; Matrix3::Transpose_Rotate_Vector
PUBLIC	?Rotate_AABox_Extent@Matrix3@@QAEXABVVector3@@PAV2@@Z ; Matrix3::Rotate_AABox_Extent
PUBLIC	?Inverse@Matrix3@@QBE?AV1@XZ			; Matrix3::Inverse
PUBLIC	??4SysTimeClass@@QAEAAV0@ABV0@@Z		; SysTimeClass::operator=
PUBLIC	?Is_Valid@DataSafeHandleClass@@QBE_NXZ		; DataSafeHandleClass::Is_Valid
PUBLIC	??BDataSafeHandleClass@@QAEHXZ			; DataSafeHandleClass::operator int
PUBLIC	?Security_Check@GenericDataSafeClass@@KAXXZ	; GenericDataSafeClass::Security_Check
PUBLIC	?Security_Fault@GenericDataSafeClass@@KAXXZ	; GenericDataSafeClass::Security_Fault
PUBLIC	??B?$RefArray@PAVDataSafeEntryListClass@@$0CAAA@@@QAEPAPAVDataSafeEntryListClass@@XZ ; RefArray<DataSafeEntryListClass *,8192>::operator DataSafeEntryListClass * *
PUBLIC	?Get@?$DataSafeClass@H@@SA_NVDataSafeHandleClass@@AAPAH@Z ; DataSafeClass<int>::Get
PUBLIC	??0PostLoadableClass@@QAE@XZ			; PostLoadableClass::PostLoadableClass
PUBLIC	??1PostLoadableClass@@UAE@XZ			; PostLoadableClass::~PostLoadableClass
PUBLIC	?On_Post_Load@PostLoadableClass@@UAEXXZ		; PostLoadableClass::On_Post_Load
PUBLIC	?Is_Post_Load_Registered@PostLoadableClass@@QBE_NXZ ; PostLoadableClass::Is_Post_Load_Registered
PUBLIC	?Set_Post_Load_Registered@PostLoadableClass@@QAEX_N@Z ; PostLoadableClass::Set_Post_Load_Registered
PUBLIC	??0PostLoadableClass@@QAE@ABV0@@Z		; PostLoadableClass::PostLoadableClass
PUBLIC	??4PostLoadableClass@@QAEAAV0@ABV0@@Z		; PostLoadableClass::operator=
PUBLIC	??_GPostLoadableClass@@UAEPAXI@Z		; PostLoadableClass::`scalar deleting destructor'
PUBLIC	??_EPostLoadableClass@@UAEPAXI@Z		; PostLoadableClass::`vector deleting destructor'
PUBLIC	??CReferencerClass@@QAEPAVScriptableGameObj@@XZ	; ReferencerClass::operator->
PUBLIC	??0ReferencerClass@@QAE@XZ			; ReferencerClass::ReferencerClass
PUBLIC	??0ReferencerClass@@QAE@PAVScriptableGameObj@@@Z ; ReferencerClass::ReferencerClass
PUBLIC	?Get_Ptr@ReferencerClass@@QBEPAVScriptableGameObj@@XZ ; ReferencerClass::Get_Ptr
PUBLIC	?Set_Ptr@ReferencerClass@@QAEXPAVScriptableGameObj@@@Z ; ReferencerClass::Set_Ptr
PUBLIC	??0ReferencerClass@@QAE@ABV0@@Z			; ReferencerClass::ReferencerClass
PUBLIC	??_GReferencerClass@@UAEPAXI@Z			; ReferencerClass::`scalar deleting destructor'
PUBLIC	??_EReferencerClass@@UAEPAXI@Z			; ReferencerClass::`vector deleting destructor'
PUBLIC	?Get_Data@?$ReferenceableClass@VScriptableGameObj@@@@IBEPAVScriptableGameObj@@XZ ; ReferenceableClass<ScriptableGameObj>::Get_Data
PUBLIC	??0LineSegClass@@QAE@XZ				; LineSegClass::LineSegClass
PUBLIC	??0LineSegClass@@QAE@ABVVector3@@0@Z		; LineSegClass::LineSegClass
PUBLIC	??0LineSegClass@@QAE@ABVVector3@@0M@Z		; LineSegClass::LineSegClass
PUBLIC	??0LineSegClass@@QAE@ABV0@ABVMatrix3D@@@Z	; LineSegClass::LineSegClass
PUBLIC	?Set@LineSegClass@@QAEXABVVector3@@0@Z		; LineSegClass::Set
PUBLIC	?Set@LineSegClass@@QAEXABVVector3@@0M@Z		; LineSegClass::Set
PUBLIC	?Get_P0@LineSegClass@@QBEABVVector3@@XZ		; LineSegClass::Get_P0
PUBLIC	?Get_P1@LineSegClass@@QBEABVVector3@@XZ		; LineSegClass::Get_P1
PUBLIC	?Get_DP@LineSegClass@@QBEABVVector3@@XZ		; LineSegClass::Get_DP
PUBLIC	?Get_Dir@LineSegClass@@QBEABVVector3@@XZ	; LineSegClass::Get_Dir
PUBLIC	?Get_Length@LineSegClass@@QBEMXZ		; LineSegClass::Get_Length
PUBLIC	?Compute_Point@LineSegClass@@QBEXMPAVVector3@@@Z ; LineSegClass::Compute_Point
PUBLIC	?recalculate@LineSegClass@@IAEXXZ		; LineSegClass::recalculate
PUBLIC	??0LineSegClass@@QAE@ABV0@@Z			; LineSegClass::LineSegClass
PUBLIC	??4LineSegClass@@QAEAAV0@ABV0@@Z		; LineSegClass::operator=
PUBLIC	?Get_Position@PhysClass@@QBEXPAVVector3@@@Z	; PhysClass::Get_Position
PUBLIC	?Peek_Physical_Object@PhysicalGameObj@@QBEPAVPhysClass@@XZ ; PhysicalGameObj::Peek_Physical_Object
PUBLIC	?Get_Position@PhysicalGameObj@@QAE?AVVector3@@XZ ; PhysicalGameObj::Get_Position
PUBLIC	?Clear_Animation@PhysicalGameObj@@QAEXXZ	; PhysicalGameObj::Clear_Animation
PUBLIC	??R?$SafeDataClass@H@@QBEAAHXZ			; SafeDataClass<int>::operator()
PUBLIC	??B?$SafeDataClass@H@@QBEHXZ			; SafeDataClass<int>::operator int
PUBLIC	??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z ; AutoPoolClass<GenericSLNode,256>::operator new
PUBLIC	??3?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAXPAX@Z ; AutoPoolClass<GenericSLNode,256>::operator delete
PUBLIC	??0GenericSLNode@@IAE@PAX@Z			; GenericSLNode::GenericSLNode
PUBLIC	??0JFW_Key_Hook_Base@@QAE@XZ			; JFW_Key_Hook_Base::JFW_Key_Hook_Base
PUBLIC	??0JFW_Key_Hook_Base@@QAE@ABV0@@Z		; JFW_Key_Hook_Base::JFW_Key_Hook_Base
PUBLIC	??4JFW_Key_Hook_Base@@QAEAAV0@ABV0@@Z		; JFW_Key_Hook_Base::operator=
PUBLIC	??_GJFW_Key_Hook_Base@@UAEPAXI@Z		; JFW_Key_Hook_Base::`scalar deleting destructor'
PUBLIC	??_EJFW_Key_Hook_Base@@UAEPAXI@Z		; JFW_Key_Hook_Base::`vector deleting destructor'
PUBLIC	??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@XZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
PUBLIC	??1?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE@XZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::~SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
PUBLIC	?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Head
PUBLIC	?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Head
PUBLIC	?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Tail
PUBLIC	?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Tail
PUBLIC	?Remove_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_Head
PUBLIC	?Remove_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_Tail
PUBLIC	?Remove@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPBUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove
PUBLIC	?Remove_All@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEXXZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_All
PUBLIC	?Insert_Before@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Insert_Before
PUBLIC	?Insert_After@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Insert_After
PUBLIC	?Is_Empty@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBE_NXZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Is_Empty
PUBLIC	?Get_Count@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBEIXZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Get_Count
PUBLIC	??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@ABV0@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
PUBLIC	??4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEAAV0@ABV0@@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::operator=
PUBLIC	??_G?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAXI@Z ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`scalar deleting destructor'
PUBLIC	??0MultiKeyHookScriptImpClass@@QAE@XZ		; MultiKeyHookScriptImpClass::MultiKeyHookScriptImpClass
PUBLIC	??1MultiKeyHookScriptImpClass@@UAE@XZ		; MultiKeyHookScriptImpClass::~MultiKeyHookScriptImpClass
PUBLIC	??0MultiKeyHookScriptImpClass@@QAE@ABV0@@Z	; MultiKeyHookScriptImpClass::MultiKeyHookScriptImpClass
PUBLIC	??4MultiKeyHookScriptImpClass@@QAEAAV0@ABV0@@Z	; MultiKeyHookScriptImpClass::operator=
PUBLIC	??_GMultiKeyHookScriptImpClass@@UAEPAXI@Z	; MultiKeyHookScriptImpClass::`scalar deleting destructor'
PUBLIC	??_EMultiKeyHookScriptImpClass@@UAEPAXI@Z	; MultiKeyHookScriptImpClass::`vector deleting destructor'
PUBLIC	??0JFW_Object_Created_Hook_Base@@QAE@XZ		; JFW_Object_Created_Hook_Base::JFW_Object_Created_Hook_Base
PUBLIC	??0JFW_Object_Created_Hook_Base@@QAE@ABV0@@Z	; JFW_Object_Created_Hook_Base::JFW_Object_Created_Hook_Base
PUBLIC	??4JFW_Object_Created_Hook_Base@@QAEAAV0@ABV0@@Z ; JFW_Object_Created_Hook_Base::operator=
PUBLIC	??_GJFW_Object_Created_Hook_Base@@UAEPAXI@Z	; JFW_Object_Created_Hook_Base::`scalar deleting destructor'
PUBLIC	??_EJFW_Object_Created_Hook_Base@@UAEPAXI@Z	; JFW_Object_Created_Hook_Base::`vector deleting destructor'
PUBLIC	?Killed@RA_Repair_Controller@@EAEXPAVScriptableGameObj@@0@Z ; RA_Repair_Controller::Killed
PUBLIC	??0RA_Repair_Controller@@QAE@XZ			; RA_Repair_Controller::RA_Repair_Controller
PUBLIC	??1RA_Repair_Controller@@UAE@XZ			; RA_Repair_Controller::~RA_Repair_Controller
PUBLIC	??_GRA_Repair_Controller@@UAEPAXI@Z		; RA_Repair_Controller::`scalar deleting destructor'
PUBLIC	?Entered@RA_Repair_Script@@EAEXPAVScriptableGameObj@@0@Z ; RA_Repair_Script::Entered
PUBLIC	?Timer_Expired@RA_Repair_Script@@EAEXPAVScriptableGameObj@@H@Z ; RA_Repair_Script::Timer_Expired
PUBLIC	??0RA_Repair_Script@@QAE@XZ			; RA_Repair_Script::RA_Repair_Script
PUBLIC	??1RA_Repair_Script@@UAE@XZ			; RA_Repair_Script::~RA_Repair_Script
PUBLIC	??_GRA_Repair_Script@@UAEPAXI@Z			; RA_Repair_Script::`scalar deleting destructor'
PUBLIC	?Created@RA_Infantry_Spy@@EAEXPAVScriptableGameObj@@@Z ; RA_Infantry_Spy::Created
PUBLIC	?Detach@RA_Infantry_Spy@@EAEXPAVScriptableGameObj@@@Z ; RA_Infantry_Spy::Detach
PUBLIC	??0RA_Infantry_Spy@@QAE@XZ			; RA_Infantry_Spy::RA_Infantry_Spy
PUBLIC	??1RA_Infantry_Spy@@UAE@XZ			; RA_Infantry_Spy::~RA_Infantry_Spy
PUBLIC	??_GRA_Infantry_Spy@@UAEPAXI@Z			; RA_Infantry_Spy::`scalar deleting destructor'
PUBLIC	?Created@RA_Infantry_NotSpy@@EAEXPAVScriptableGameObj@@@Z ; RA_Infantry_NotSpy::Created
PUBLIC	??0RA_Infantry_NotSpy@@QAE@XZ			; RA_Infantry_NotSpy::RA_Infantry_NotSpy
PUBLIC	??1RA_Infantry_NotSpy@@UAE@XZ			; RA_Infantry_NotSpy::~RA_Infantry_NotSpy
PUBLIC	??_GRA_Infantry_NotSpy@@UAEPAXI@Z		; RA_Infantry_NotSpy::`scalar deleting destructor'
PUBLIC	?Entered@RA_Helipad_Zone@@EAEXPAVScriptableGameObj@@0@Z ; RA_Helipad_Zone::Entered
PUBLIC	?Timer_Expired@RA_Helipad_Zone@@EAEXPAVScriptableGameObj@@H@Z ; RA_Helipad_Zone::Timer_Expired
PUBLIC	??0RA_Helipad_Zone@@QAE@XZ			; RA_Helipad_Zone::RA_Helipad_Zone
PUBLIC	??1RA_Helipad_Zone@@UAE@XZ			; RA_Helipad_Zone::~RA_Helipad_Zone
PUBLIC	??_GRA_Helipad_Zone@@UAEPAXI@Z			; RA_Helipad_Zone::`scalar deleting destructor'
PUBLIC	?Created@RA_MineLayer@@EAEXPAVScriptableGameObj@@@Z ; RA_MineLayer::Created
PUBLIC	?Custom@RA_MineLayer@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_MineLayer::Custom
PUBLIC	?Damaged@RA_MineLayer@@EAEXPAVScriptableGameObj@@0M@Z ; RA_MineLayer::Damaged
PUBLIC	?Register_Auto_Save_Variables@RA_MineLayer@@UAEXXZ ; RA_MineLayer::Register_Auto_Save_Variables
PUBLIC	??0RA_MineLayer@@QAE@XZ				; RA_MineLayer::RA_MineLayer
PUBLIC	??1RA_MineLayer@@UAE@XZ				; RA_MineLayer::~RA_MineLayer
PUBLIC	??_GRA_MineLayer@@UAEPAXI@Z			; RA_MineLayer::`scalar deleting destructor'
PUBLIC	?Created@RA_Mine@@EAEXPAVScriptableGameObj@@@Z	; RA_Mine::Created
PUBLIC	?Custom@RA_Mine@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Mine::Custom
PUBLIC	?Enemy_Seen@RA_Mine@@EAEXPAVScriptableGameObj@@0@Z ; RA_Mine::Enemy_Seen
PUBLIC	?Destroyed@RA_Mine@@EAEXPAVScriptableGameObj@@@Z ; RA_Mine::Destroyed
PUBLIC	?Register_Auto_Save_Variables@RA_Mine@@UAEXXZ	; RA_Mine::Register_Auto_Save_Variables
PUBLIC	??0RA_Mine@@QAE@XZ				; RA_Mine::RA_Mine
PUBLIC	??1RA_Mine@@UAE@XZ				; RA_Mine::~RA_Mine
PUBLIC	??_GRA_Mine@@UAEPAXI@Z				; RA_Mine::`scalar deleting destructor'
PUBLIC	?Created@RA_Mine_Manager@@EAEXPAVScriptableGameObj@@@Z ; RA_Mine_Manager::Created
PUBLIC	?Custom@RA_Mine_Manager@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Mine_Manager::Custom
PUBLIC	?Register_Auto_Save_Variables@RA_Mine_Manager@@UAEXXZ ; RA_Mine_Manager::Register_Auto_Save_Variables
PUBLIC	??0RA_Mine_Manager@@QAE@XZ			; RA_Mine_Manager::RA_Mine_Manager
PUBLIC	??1RA_Mine_Manager@@UAE@XZ			; RA_Mine_Manager::~RA_Mine_Manager
PUBLIC	??_GRA_Mine_Manager@@UAEPAXI@Z			; RA_Mine_Manager::`scalar deleting destructor'
PUBLIC	?Created@RA_ObjectDeath_OnCreate@@EAEXPAVScriptableGameObj@@@Z ; RA_ObjectDeath_OnCreate::Created
PUBLIC	??0RA_ObjectDeath_OnCreate@@QAE@XZ		; RA_ObjectDeath_OnCreate::RA_ObjectDeath_OnCreate
PUBLIC	??1RA_ObjectDeath_OnCreate@@UAE@XZ		; RA_ObjectDeath_OnCreate::~RA_ObjectDeath_OnCreate
PUBLIC	??_GRA_ObjectDeath_OnCreate@@UAEPAXI@Z		; RA_ObjectDeath_OnCreate::`scalar deleting destructor'
PUBLIC	?Created@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@@Z ; RA_Naval_Yard::Created
PUBLIC	?Custom@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Naval_Yard::Custom
PUBLIC	?Killed@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@0@Z ; RA_Naval_Yard::Killed
PUBLIC	?Timer_Expired@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@H@Z ; RA_Naval_Yard::Timer_Expired
PUBLIC	?Register_Auto_Save_Variables@RA_Naval_Yard@@UAEXXZ ; RA_Naval_Yard::Register_Auto_Save_Variables
PUBLIC	??0RA_Naval_Yard@@QAE@XZ			; RA_Naval_Yard::RA_Naval_Yard
PUBLIC	??1RA_Naval_Yard@@UAE@XZ			; RA_Naval_Yard::~RA_Naval_Yard
PUBLIC	??_GRA_Naval_Yard@@UAEPAXI@Z			; RA_Naval_Yard::`scalar deleting destructor'
PUBLIC	?Created@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@@Z ; RA_Naval_PT_Pokable::Created
PUBLIC	?Poked@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@0@Z ; RA_Naval_PT_Pokable::Poked
PUBLIC	?Custom@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Naval_PT_Pokable::Custom
PUBLIC	?Timer_Expired@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@H@Z ; RA_Naval_PT_Pokable::Timer_Expired
PUBLIC	?Register_Auto_Save_Variables@RA_Naval_PT_Pokable@@UAEXXZ ; RA_Naval_PT_Pokable::Register_Auto_Save_Variables
PUBLIC	??0RA_Naval_PT_Pokable@@QAE@XZ			; RA_Naval_PT_Pokable::RA_Naval_PT_Pokable
PUBLIC	??1RA_Naval_PT_Pokable@@UAE@XZ			; RA_Naval_PT_Pokable::~RA_Naval_PT_Pokable
PUBLIC	??_GRA_Naval_PT_Pokable@@UAEPAXI@Z		; RA_Naval_PT_Pokable::`scalar deleting destructor'
PUBLIC	?Destroyed@RA_Naval_Unit@@EAEXPAVScriptableGameObj@@@Z ; RA_Naval_Unit::Destroyed
PUBLIC	??0RA_Naval_Unit@@QAE@XZ			; RA_Naval_Unit::RA_Naval_Unit
PUBLIC	??1RA_Naval_Unit@@UAE@XZ			; RA_Naval_Unit::~RA_Naval_Unit
PUBLIC	??_GRA_Naval_Unit@@UAEPAXI@Z			; RA_Naval_Unit::`scalar deleting destructor'
PUBLIC	?Custom@RA_Naval_Zone@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Naval_Zone::Custom
PUBLIC	??0RA_Naval_Zone@@QAE@XZ			; RA_Naval_Zone::RA_Naval_Zone
PUBLIC	??1RA_Naval_Zone@@UAE@XZ			; RA_Naval_Zone::~RA_Naval_Zone
PUBLIC	??_GRA_Naval_Zone@@UAEPAXI@Z			; RA_Naval_Zone::`scalar deleting destructor'
PUBLIC	?Damaged@RA_Damaged_Credits@@EAEXPAVScriptableGameObj@@0M@Z ; RA_Damaged_Credits::Damaged
PUBLIC	??0RA_Damaged_Credits@@QAE@XZ			; RA_Damaged_Credits::RA_Damaged_Credits
PUBLIC	??1RA_Damaged_Credits@@UAE@XZ			; RA_Damaged_Credits::~RA_Damaged_Credits
PUBLIC	??_GRA_Damaged_Credits@@UAEPAXI@Z		; RA_Damaged_Credits::`scalar deleting destructor'
PUBLIC	?Created@RA_GameStart_Detector@@EAEXPAVScriptableGameObj@@@Z ; RA_GameStart_Detector::Created
PUBLIC	?Killed@RA_GameStart_Detector@@EAEXPAVScriptableGameObj@@0@Z ; RA_GameStart_Detector::Killed
PUBLIC	?Timer_Expired@RA_GameStart_Detector@@EAEXPAVScriptableGameObj@@H@Z ; RA_GameStart_Detector::Timer_Expired
PUBLIC	??0RA_GameStart_Detector@@QAE@XZ		; RA_GameStart_Detector::RA_GameStart_Detector
PUBLIC	??1RA_GameStart_Detector@@UAE@XZ		; RA_GameStart_Detector::~RA_GameStart_Detector
PUBLIC	??_GRA_GameStart_Detector@@UAEPAXI@Z		; RA_GameStart_Detector::`scalar deleting destructor'
PUBLIC	?Created@RA_DriverDeath@@EAEXPAVScriptableGameObj@@@Z ; RA_DriverDeath::Created
PUBLIC	?Timer_Expired@RA_DriverDeath@@EAEXPAVScriptableGameObj@@H@Z ; RA_DriverDeath::Timer_Expired
PUBLIC	??0RA_DriverDeath@@QAE@XZ			; RA_DriverDeath::RA_DriverDeath
PUBLIC	??1RA_DriverDeath@@UAE@XZ			; RA_DriverDeath::~RA_DriverDeath
PUBLIC	??_GRA_DriverDeath@@UAEPAXI@Z			; RA_DriverDeath::`scalar deleting destructor'
PUBLIC	?Created@RA_Conyard_Repair@@EAEXPAVScriptableGameObj@@@Z ; RA_Conyard_Repair::Created
PUBLIC	?Custom@RA_Conyard_Repair@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Conyard_Repair::Custom
PUBLIC	?Timer_Expired@RA_Conyard_Repair@@EAEXPAVScriptableGameObj@@H@Z ; RA_Conyard_Repair::Timer_Expired
PUBLIC	?Register_Auto_Save_Variables@RA_Conyard_Repair@@UAEXXZ ; RA_Conyard_Repair::Register_Auto_Save_Variables
PUBLIC	??0RA_Conyard_Repair@@QAE@XZ			; RA_Conyard_Repair::RA_Conyard_Repair
PUBLIC	??1RA_Conyard_Repair@@UAE@XZ			; RA_Conyard_Repair::~RA_Conyard_Repair
PUBLIC	??_GRA_Conyard_Repair@@UAEPAXI@Z		; RA_Conyard_Repair::`scalar deleting destructor'
PUBLIC	?Killed@RA_ObjectDeath_OnDeath@@EAEXPAVScriptableGameObj@@0@Z ; RA_ObjectDeath_OnDeath::Killed
PUBLIC	??0RA_ObjectDeath_OnDeath@@QAE@XZ		; RA_ObjectDeath_OnDeath::RA_ObjectDeath_OnDeath
PUBLIC	??1RA_ObjectDeath_OnDeath@@UAE@XZ		; RA_ObjectDeath_OnDeath::~RA_ObjectDeath_OnDeath
PUBLIC	??_GRA_ObjectDeath_OnDeath@@UAEPAXI@Z		; RA_ObjectDeath_OnDeath::`scalar deleting destructor'
PUBLIC	?Created@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@@Z ; RA_Demolition_Truck_Improved::Created
PUBLIC	?Custom@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Demolition_Truck_Improved::Custom
PUBLIC	?Damaged@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@0M@Z ; RA_Demolition_Truck_Improved::Damaged
PUBLIC	?Killed@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@0@Z ; RA_Demolition_Truck_Improved::Killed
PUBLIC	?Register_Auto_Save_Variables@RA_Demolition_Truck_Improved@@UAEXXZ ; RA_Demolition_Truck_Improved::Register_Auto_Save_Variables
PUBLIC	??0RA_Demolition_Truck_Improved@@QAE@XZ		; RA_Demolition_Truck_Improved::RA_Demolition_Truck_Improved
PUBLIC	??1RA_Demolition_Truck_Improved@@UAE@XZ		; RA_Demolition_Truck_Improved::~RA_Demolition_Truck_Improved
PUBLIC	??_GRA_Demolition_Truck_Improved@@UAEPAXI@Z	; RA_Demolition_Truck_Improved::`scalar deleting destructor'
PUBLIC	?Entered@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@0@Z ; RA_CTF_Zone::Entered
PUBLIC	?Custom@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_CTF_Zone::Custom
PUBLIC	?Timer_Expired@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@H@Z ; RA_CTF_Zone::Timer_Expired
PUBLIC	?Created@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@@Z ; RA_CTF_Zone::Created
PUBLIC	?Register_Auto_Save_Variables@RA_CTF_Zone@@UAEXXZ ; RA_CTF_Zone::Register_Auto_Save_Variables
PUBLIC	??0RA_CTF_Zone@@QAE@XZ				; RA_CTF_Zone::RA_CTF_Zone
PUBLIC	??1RA_CTF_Zone@@UAE@XZ				; RA_CTF_Zone::~RA_CTF_Zone
PUBLIC	??_GRA_CTF_Zone@@UAEPAXI@Z			; RA_CTF_Zone::`scalar deleting destructor'
PUBLIC	?Created@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@@Z ; RA_MAD_Tank_Improved::Created
PUBLIC	?Custom@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_MAD_Tank_Improved::Custom
PUBLIC	?Damaged@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@0M@Z ; RA_MAD_Tank_Improved::Damaged
PUBLIC	?Animation_Complete@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@PBD@Z ; RA_MAD_Tank_Improved::Animation_Complete
PUBLIC	?Destroyed@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@@Z ; RA_MAD_Tank_Improved::Destroyed
PUBLIC	?Register_Auto_Save_Variables@RA_MAD_Tank_Improved@@UAEXXZ ; RA_MAD_Tank_Improved::Register_Auto_Save_Variables
PUBLIC	??0RA_MAD_Tank_Improved@@QAE@XZ			; RA_MAD_Tank_Improved::RA_MAD_Tank_Improved
PUBLIC	??1RA_MAD_Tank_Improved@@UAE@XZ			; RA_MAD_Tank_Improved::~RA_MAD_Tank_Improved
PUBLIC	??_GRA_MAD_Tank_Improved@@UAEPAXI@Z		; RA_MAD_Tank_Improved::`scalar deleting destructor'
PUBLIC	?Created@RA_Conyard_Controller_Improved@@EAEXPAVScriptableGameObj@@@Z ; RA_Conyard_Controller_Improved::Created
PUBLIC	?Killed@RA_Conyard_Controller_Improved@@EAEXPAVScriptableGameObj@@0@Z ; RA_Conyard_Controller_Improved::Killed
PUBLIC	?Custom@RA_Conyard_Controller_Improved@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Conyard_Controller_Improved::Custom
PUBLIC	??0RA_Conyard_Controller_Improved@@QAE@XZ	; RA_Conyard_Controller_Improved::RA_Conyard_Controller_Improved
PUBLIC	??1RA_Conyard_Controller_Improved@@UAE@XZ	; RA_Conyard_Controller_Improved::~RA_Conyard_Controller_Improved
PUBLIC	??_GRA_Conyard_Controller_Improved@@UAEPAXI@Z	; RA_Conyard_Controller_Improved::`scalar deleting destructor'
PUBLIC	?Created@RA_Conyard_Controller_Improved_2@@EAEXPAVScriptableGameObj@@@Z ; RA_Conyard_Controller_Improved_2::Created
PUBLIC	?Killed@RA_Conyard_Controller_Improved_2@@EAEXPAVScriptableGameObj@@0@Z ; RA_Conyard_Controller_Improved_2::Killed
PUBLIC	?Custom@RA_Conyard_Controller_Improved_2@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Conyard_Controller_Improved_2::Custom
PUBLIC	??0RA_Conyard_Controller_Improved_2@@QAE@XZ	; RA_Conyard_Controller_Improved_2::RA_Conyard_Controller_Improved_2
PUBLIC	??1RA_Conyard_Controller_Improved_2@@UAE@XZ	; RA_Conyard_Controller_Improved_2::~RA_Conyard_Controller_Improved_2
PUBLIC	??_GRA_Conyard_Controller_Improved_2@@UAEPAXI@Z	; RA_Conyard_Controller_Improved_2::`scalar deleting destructor'
PUBLIC	?Created@RA_Building_DeathSound@@EAEXPAVScriptableGameObj@@@Z ; RA_Building_DeathSound::Created
PUBLIC	?Damaged@RA_Building_DeathSound@@EAEXPAVScriptableGameObj@@0M@Z ; RA_Building_DeathSound::Damaged
PUBLIC	?Killed@RA_Building_DeathSound@@EAEXPAVScriptableGameObj@@0@Z ; RA_Building_DeathSound::Killed
PUBLIC	?Register_Auto_Save_Variables@RA_Building_DeathSound@@UAEXXZ ; RA_Building_DeathSound::Register_Auto_Save_Variables
PUBLIC	??0RA_Building_DeathSound@@QAE@XZ		; RA_Building_DeathSound::RA_Building_DeathSound
PUBLIC	??1RA_Building_DeathSound@@UAE@XZ		; RA_Building_DeathSound::~RA_Building_DeathSound
PUBLIC	??_GRA_Building_DeathSound@@UAEPAXI@Z		; RA_Building_DeathSound::`scalar deleting destructor'
PUBLIC	?Attack@RA_Base_Defense_Simple@@AAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Simple::Attack
PUBLIC	?Select_Target@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@0@Z ; RA_Base_Defense_Simple::Select_Target
PUBLIC	?Set_Target@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@@Z ; RA_Base_Defense_Simple::Set_Target
PUBLIC	?Tie_Breaker@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Simple::Tie_Breaker
PUBLIC	?Adjust_For_Infantry@RA_Base_Defense_Simple@@AAE_NPAVScriptableGameObj@@@Z ; RA_Base_Defense_Simple::Adjust_For_Infantry
PUBLIC	?Created@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@@Z ; RA_Base_Defense_Simple::Created
PUBLIC	?Enemy_Seen@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Simple::Enemy_Seen
PUBLIC	?Damaged@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@0M@Z ; RA_Base_Defense_Simple::Damaged
PUBLIC	?Timer_Expired@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@H@Z ; RA_Base_Defense_Simple::Timer_Expired
PUBLIC	?Action_Complete@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z ; RA_Base_Defense_Simple::Action_Complete
PUBLIC	?Register_Auto_Save_Variables@RA_Base_Defense_Simple@@UAEXXZ ; RA_Base_Defense_Simple::Register_Auto_Save_Variables
PUBLIC	??0RA_Base_Defense_Simple@@QAE@XZ		; RA_Base_Defense_Simple::RA_Base_Defense_Simple
PUBLIC	??1RA_Base_Defense_Simple@@UAE@XZ		; RA_Base_Defense_Simple::~RA_Base_Defense_Simple
PUBLIC	??_GRA_Base_Defense_Simple@@UAEPAXI@Z		; RA_Base_Defense_Simple::`scalar deleting destructor'
PUBLIC	?Attack@RA_Base_Defense_Powered@@AAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Powered::Attack
PUBLIC	?Select_Target@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@0@Z ; RA_Base_Defense_Powered::Select_Target
PUBLIC	?Set_Target@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@@Z ; RA_Base_Defense_Powered::Set_Target
PUBLIC	?Tie_Breaker@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Powered::Tie_Breaker
PUBLIC	?Adjust_For_Infantry@RA_Base_Defense_Powered@@AAE_NPAVScriptableGameObj@@@Z ; RA_Base_Defense_Powered::Adjust_For_Infantry
PUBLIC	?Created@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@@Z ; RA_Base_Defense_Powered::Created
PUBLIC	?Enemy_Seen@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Powered::Enemy_Seen
PUBLIC	?Damaged@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@0M@Z ; RA_Base_Defense_Powered::Damaged
PUBLIC	?Timer_Expired@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@H@Z ; RA_Base_Defense_Powered::Timer_Expired
PUBLIC	?Action_Complete@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z ; RA_Base_Defense_Powered::Action_Complete
PUBLIC	?Register_Auto_Save_Variables@RA_Base_Defense_Powered@@UAEXXZ ; RA_Base_Defense_Powered::Register_Auto_Save_Variables
PUBLIC	??0RA_Base_Defense_Powered@@QAE@XZ		; RA_Base_Defense_Powered::RA_Base_Defense_Powered
PUBLIC	??1RA_Base_Defense_Powered@@UAE@XZ		; RA_Base_Defense_Powered::~RA_Base_Defense_Powered
PUBLIC	??_GRA_Base_Defense_Powered@@UAEPAXI@Z		; RA_Base_Defense_Powered::`scalar deleting destructor'
PUBLIC	?Attack@RA_Base_Defense_Chargeup@@AAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Chargeup::Attack
PUBLIC	?Attack_Charged@RA_Base_Defense_Chargeup@@AAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Chargeup::Attack_Charged
PUBLIC	?Select_Target@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@0@Z ; RA_Base_Defense_Chargeup::Select_Target
PUBLIC	?Set_Target@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@@Z ; RA_Base_Defense_Chargeup::Set_Target
PUBLIC	?Tie_Breaker@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Chargeup::Tie_Breaker
PUBLIC	?Adjust_For_Infantry@RA_Base_Defense_Chargeup@@AAE_NPAVScriptableGameObj@@@Z ; RA_Base_Defense_Chargeup::Adjust_For_Infantry
PUBLIC	?Created@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@@Z ; RA_Base_Defense_Chargeup::Created
PUBLIC	?Enemy_Seen@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Chargeup::Enemy_Seen
PUBLIC	?Damaged@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@0M@Z ; RA_Base_Defense_Chargeup::Damaged
PUBLIC	?Timer_Expired@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@H@Z ; RA_Base_Defense_Chargeup::Timer_Expired
PUBLIC	?Action_Complete@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z ; RA_Base_Defense_Chargeup::Action_Complete
PUBLIC	?Animation_Complete@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@PBD@Z ; RA_Base_Defense_Chargeup::Animation_Complete
PUBLIC	?Register_Auto_Save_Variables@RA_Base_Defense_Chargeup@@UAEXXZ ; RA_Base_Defense_Chargeup::Register_Auto_Save_Variables
PUBLIC	??0RA_Base_Defense_Chargeup@@QAE@XZ		; RA_Base_Defense_Chargeup::RA_Base_Defense_Chargeup
PUBLIC	??1RA_Base_Defense_Chargeup@@UAE@XZ		; RA_Base_Defense_Chargeup::~RA_Base_Defense_Chargeup
PUBLIC	??_GRA_Base_Defense_Chargeup@@UAEPAXI@Z		; RA_Base_Defense_Chargeup::`scalar deleting destructor'
PUBLIC	?Created@RA_Vehicle_Regen@@EAEXPAVScriptableGameObj@@@Z ; RA_Vehicle_Regen::Created
PUBLIC	?Damaged@RA_Vehicle_Regen@@EAEXPAVScriptableGameObj@@0M@Z ; RA_Vehicle_Regen::Damaged
PUBLIC	?Timer_Expired@RA_Vehicle_Regen@@EAEXPAVScriptableGameObj@@H@Z ; RA_Vehicle_Regen::Timer_Expired
PUBLIC	?Register_Auto_Save_Variables@RA_Vehicle_Regen@@UAEXXZ ; RA_Vehicle_Regen::Register_Auto_Save_Variables
PUBLIC	??0RA_Vehicle_Regen@@QAE@XZ			; RA_Vehicle_Regen::RA_Vehicle_Regen
PUBLIC	??1RA_Vehicle_Regen@@UAE@XZ			; RA_Vehicle_Regen::~RA_Vehicle_Regen
PUBLIC	??_GRA_Vehicle_Regen@@UAEPAXI@Z			; RA_Vehicle_Regen::`scalar deleting destructor'
PUBLIC	?Custom@RA_Thief@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Thief::Custom
PUBLIC	??0RA_Thief@@QAE@XZ				; RA_Thief::RA_Thief
PUBLIC	??1RA_Thief@@UAE@XZ				; RA_Thief::~RA_Thief
PUBLIC	??_GRA_Thief@@UAEPAXI@Z				; RA_Thief::`scalar deleting destructor'
PUBLIC	?Custom@RA_Thief_Improved@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Thief_Improved::Custom
PUBLIC	??0RA_Thief_Improved@@QAE@XZ			; RA_Thief_Improved::RA_Thief_Improved
PUBLIC	??1RA_Thief_Improved@@UAE@XZ			; RA_Thief_Improved::~RA_Thief_Improved
PUBLIC	??_GRA_Thief_Improved@@UAEPAXI@Z		; RA_Thief_Improved::`scalar deleting destructor'
PUBLIC	?Entered@RA_Credit_Theft_Zone@@EAEXPAVScriptableGameObj@@0@Z ; RA_Credit_Theft_Zone::Entered
PUBLIC	??0RA_Credit_Theft_Zone@@QAE@XZ			; RA_Credit_Theft_Zone::RA_Credit_Theft_Zone
PUBLIC	??1RA_Credit_Theft_Zone@@UAE@XZ			; RA_Credit_Theft_Zone::~RA_Credit_Theft_Zone
PUBLIC	??_GRA_Credit_Theft_Zone@@UAEPAXI@Z		; RA_Credit_Theft_Zone::`scalar deleting destructor'
PUBLIC	?Entered@RA_Credit_Theft_Zone_Timer@@EAEXPAVScriptableGameObj@@0@Z ; RA_Credit_Theft_Zone_Timer::Entered
PUBLIC	?Timer_Expired@RA_Credit_Theft_Zone_Timer@@EAEXPAVScriptableGameObj@@H@Z ; RA_Credit_Theft_Zone_Timer::Timer_Expired
PUBLIC	??0RA_Credit_Theft_Zone_Timer@@QAE@XZ		; RA_Credit_Theft_Zone_Timer::RA_Credit_Theft_Zone_Timer
PUBLIC	??1RA_Credit_Theft_Zone_Timer@@UAE@XZ		; RA_Credit_Theft_Zone_Timer::~RA_Credit_Theft_Zone_Timer
PUBLIC	??_GRA_Credit_Theft_Zone_Timer@@UAEPAXI@Z	; RA_Credit_Theft_Zone_Timer::`scalar deleting destructor'
PUBLIC	?Killed@RA_DestroyNearest_OnDeath@@EAEXPAVScriptableGameObj@@0@Z ; RA_DestroyNearest_OnDeath::Killed
PUBLIC	??0RA_DestroyNearest_OnDeath@@QAE@XZ		; RA_DestroyNearest_OnDeath::RA_DestroyNearest_OnDeath
PUBLIC	??1RA_DestroyNearest_OnDeath@@UAE@XZ		; RA_DestroyNearest_OnDeath::~RA_DestroyNearest_OnDeath
PUBLIC	??_GRA_DestroyNearest_OnDeath@@UAEPAXI@Z	; RA_DestroyNearest_OnDeath::`scalar deleting destructor'
PUBLIC	?Created@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@@Z ; RA_Ore_Truck::Created
PUBLIC	?Custom@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Ore_Truck::Custom
PUBLIC	?Animation_Complete@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@PBD@Z ; RA_Ore_Truck::Animation_Complete
PUBLIC	?Timer_Expired@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@H@Z ; RA_Ore_Truck::Timer_Expired
PUBLIC	?Register_Auto_Save_Variables@RA_Ore_Truck@@UAEXXZ ; RA_Ore_Truck::Register_Auto_Save_Variables
PUBLIC	??0RA_Ore_Truck@@QAE@XZ				; RA_Ore_Truck::RA_Ore_Truck
PUBLIC	??1RA_Ore_Truck@@UAE@XZ				; RA_Ore_Truck::~RA_Ore_Truck
PUBLIC	??_GRA_Ore_Truck@@UAEPAXI@Z			; RA_Ore_Truck::`scalar deleting destructor'
PUBLIC	?Created@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@@Z ; RA_Ore_Truck_2::Created
PUBLIC	?Custom@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Ore_Truck_2::Custom
PUBLIC	?Animation_Complete@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@PBD@Z ; RA_Ore_Truck_2::Animation_Complete
PUBLIC	?Timer_Expired@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@H@Z ; RA_Ore_Truck_2::Timer_Expired
PUBLIC	?Register_Auto_Save_Variables@RA_Ore_Truck_2@@UAEXXZ ; RA_Ore_Truck_2::Register_Auto_Save_Variables
PUBLIC	??0RA_Ore_Truck_2@@QAE@XZ			; RA_Ore_Truck_2::RA_Ore_Truck_2
PUBLIC	??1RA_Ore_Truck_2@@UAE@XZ			; RA_Ore_Truck_2::~RA_Ore_Truck_2
PUBLIC	??_GRA_Ore_Truck_2@@UAEPAXI@Z			; RA_Ore_Truck_2::`scalar deleting destructor'
PUBLIC	?Entered@RA_Ore_Field@@EAEXPAVScriptableGameObj@@0@Z ; RA_Ore_Field::Entered
PUBLIC	?Exited@RA_Ore_Field@@EAEXPAVScriptableGameObj@@0@Z ; RA_Ore_Field::Exited
PUBLIC	??0RA_Ore_Field@@QAE@XZ				; RA_Ore_Field::RA_Ore_Field
PUBLIC	??1RA_Ore_Field@@UAE@XZ				; RA_Ore_Field::~RA_Ore_Field
PUBLIC	??_GRA_Ore_Field@@UAEPAXI@Z			; RA_Ore_Field::`scalar deleting destructor'
PUBLIC	?Entered@RA_Ore_Delivery_Zone@@EAEXPAVScriptableGameObj@@0@Z ; RA_Ore_Delivery_Zone::Entered
PUBLIC	??0RA_Ore_Delivery_Zone@@QAE@XZ			; RA_Ore_Delivery_Zone::RA_Ore_Delivery_Zone
PUBLIC	??1RA_Ore_Delivery_Zone@@UAE@XZ			; RA_Ore_Delivery_Zone::~RA_Ore_Delivery_Zone
PUBLIC	??_GRA_Ore_Delivery_Zone@@UAEPAXI@Z		; RA_Ore_Delivery_Zone::`scalar deleting destructor'
PUBLIC	?Custom@RA_Vehicle_Team_Set@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Vehicle_Team_Set::Custom
PUBLIC	??0RA_Vehicle_Team_Set@@QAE@XZ			; RA_Vehicle_Team_Set::RA_Vehicle_Team_Set
PUBLIC	??1RA_Vehicle_Team_Set@@UAE@XZ			; RA_Vehicle_Team_Set::~RA_Vehicle_Team_Set
PUBLIC	??_GRA_Vehicle_Team_Set@@UAEPAXI@Z		; RA_Vehicle_Team_Set::`scalar deleting destructor'
PUBLIC	?Created@RA_Vehicle_Team_Timer@@EAEXPAVScriptableGameObj@@@Z ; RA_Vehicle_Team_Timer::Created
PUBLIC	?Timer_Expired@RA_Vehicle_Team_Timer@@EAEXPAVScriptableGameObj@@H@Z ; RA_Vehicle_Team_Timer::Timer_Expired
PUBLIC	??0RA_Vehicle_Team_Timer@@QAE@XZ		; RA_Vehicle_Team_Timer::RA_Vehicle_Team_Timer
PUBLIC	??1RA_Vehicle_Team_Timer@@UAE@XZ		; RA_Vehicle_Team_Timer::~RA_Vehicle_Team_Timer
PUBLIC	??_GRA_Vehicle_Team_Timer@@UAEPAXI@Z		; RA_Vehicle_Team_Timer::`scalar deleting destructor'
PUBLIC	?Created@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@@Z ; RA_Visible_Driver::Created
PUBLIC	?Custom@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Visible_Driver::Custom
PUBLIC	?Timer_Expired@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@H@Z ; RA_Visible_Driver::Timer_Expired
PUBLIC	?Killed@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@0@Z ; RA_Visible_Driver::Killed
PUBLIC	?Destroyed@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@@Z ; RA_Visible_Driver::Destroyed
PUBLIC	?Register_Auto_Save_Variables@RA_Visible_Driver@@UAEXXZ ; RA_Visible_Driver::Register_Auto_Save_Variables
PUBLIC	??0RA_Visible_Driver@@QAE@XZ			; RA_Visible_Driver::RA_Visible_Driver
PUBLIC	??1RA_Visible_Driver@@UAE@XZ			; RA_Visible_Driver::~RA_Visible_Driver
PUBLIC	??_GRA_Visible_Driver@@UAEPAXI@Z		; RA_Visible_Driver::`scalar deleting destructor'
PUBLIC	?Created@RA_Vision_Control@@EAEXPAVScriptableGameObj@@@Z ; RA_Vision_Control::Created
PUBLIC	?Custom@RA_Vision_Control@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Vision_Control::Custom
PUBLIC	?Register_Auto_Save_Variables@RA_Vision_Control@@UAEXXZ ; RA_Vision_Control::Register_Auto_Save_Variables
PUBLIC	??0RA_Vision_Control@@QAE@XZ			; RA_Vision_Control::RA_Vision_Control
PUBLIC	??1RA_Vision_Control@@UAE@XZ			; RA_Vision_Control::~RA_Vision_Control
PUBLIC	??_GRA_Vision_Control@@UAEPAXI@Z		; RA_Vision_Control::`scalar deleting destructor'
PUBLIC	?Created@RA_Vision_Control_2@@EAEXPAVScriptableGameObj@@@Z ; RA_Vision_Control_2::Created
PUBLIC	?Custom@RA_Vision_Control_2@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Vision_Control_2::Custom
PUBLIC	?Register_Auto_Save_Variables@RA_Vision_Control_2@@UAEXXZ ; RA_Vision_Control_2::Register_Auto_Save_Variables
PUBLIC	??0RA_Vision_Control_2@@QAE@XZ			; RA_Vision_Control_2::RA_Vision_Control_2
PUBLIC	??1RA_Vision_Control_2@@UAE@XZ			; RA_Vision_Control_2::~RA_Vision_Control_2
PUBLIC	??_GRA_Vision_Control_2@@UAEPAXI@Z		; RA_Vision_Control_2::`scalar deleting destructor'
PUBLIC	?Custom@RA_Fog_Level_Settings@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Fog_Level_Settings::Custom
PUBLIC	??0RA_Fog_Level_Settings@@QAE@XZ		; RA_Fog_Level_Settings::RA_Fog_Level_Settings
PUBLIC	??1RA_Fog_Level_Settings@@UAE@XZ		; RA_Fog_Level_Settings::~RA_Fog_Level_Settings
PUBLIC	??_GRA_Fog_Level_Settings@@UAEPAXI@Z		; RA_Fog_Level_Settings::`scalar deleting destructor'
PUBLIC	?Created@RA_Missile_Beacon@@EAEXPAVScriptableGameObj@@@Z ; RA_Missile_Beacon::Created
PUBLIC	??0RA_Missile_Beacon@@QAE@XZ			; RA_Missile_Beacon::RA_Missile_Beacon
PUBLIC	??1RA_Missile_Beacon@@UAE@XZ			; RA_Missile_Beacon::~RA_Missile_Beacon
PUBLIC	??_GRA_Missile_Beacon@@UAEPAXI@Z		; RA_Missile_Beacon::`scalar deleting destructor'
PUBLIC	?Created@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@@Z ; RA_Beacon_Terminal::Created
PUBLIC	?Custom@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Beacon_Terminal::Custom
PUBLIC	?Poked@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@0@Z ; RA_Beacon_Terminal::Poked
PUBLIC	?Timer_Expired@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@H@Z ; RA_Beacon_Terminal::Timer_Expired
PUBLIC	?Register_Auto_Save_Variables@RA_Beacon_Terminal@@UAEXXZ ; RA_Beacon_Terminal::Register_Auto_Save_Variables
PUBLIC	??0RA_Beacon_Terminal@@QAE@XZ			; RA_Beacon_Terminal::RA_Beacon_Terminal
PUBLIC	??1RA_Beacon_Terminal@@UAE@XZ			; RA_Beacon_Terminal::~RA_Beacon_Terminal
PUBLIC	??_GRA_Beacon_Terminal@@UAEPAXI@Z		; RA_Beacon_Terminal::`scalar deleting destructor'
PUBLIC	?Created@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@@Z ; RA_Beacon_Terminal_2::Created
PUBLIC	?Custom@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Beacon_Terminal_2::Custom
PUBLIC	?Poked@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@0@Z ; RA_Beacon_Terminal_2::Poked
PUBLIC	?Damaged@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@0M@Z ; RA_Beacon_Terminal_2::Damaged
PUBLIC	?Timer_Expired@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@H@Z ; RA_Beacon_Terminal_2::Timer_Expired
PUBLIC	??0RA_Beacon_Terminal_2@@QAE@XZ			; RA_Beacon_Terminal_2::RA_Beacon_Terminal_2
PUBLIC	??1RA_Beacon_Terminal_2@@UAE@XZ			; RA_Beacon_Terminal_2::~RA_Beacon_Terminal_2
PUBLIC	??_GRA_Beacon_Terminal_2@@UAEPAXI@Z		; RA_Beacon_Terminal_2::`scalar deleting destructor'
PUBLIC	?Created@RA_Beacon_Timer@@EAEXPAVScriptableGameObj@@@Z ; RA_Beacon_Timer::Created
PUBLIC	?Timer_Expired@RA_Beacon_Timer@@EAEXPAVScriptableGameObj@@H@Z ; RA_Beacon_Timer::Timer_Expired
PUBLIC	??0RA_Beacon_Timer@@QAE@XZ			; RA_Beacon_Timer::RA_Beacon_Timer
PUBLIC	??1RA_Beacon_Timer@@UAE@XZ			; RA_Beacon_Timer::~RA_Beacon_Timer
PUBLIC	??_GRA_Beacon_Timer@@UAEPAXI@Z			; RA_Beacon_Timer::`scalar deleting destructor'
PUBLIC	?Created@RA_Missile_Control@@EAEXPAVScriptableGameObj@@@Z ; RA_Missile_Control::Created
PUBLIC	?Custom@RA_Missile_Control@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Missile_Control::Custom
PUBLIC	?Animation_Complete@RA_Missile_Control@@EAEXPAVScriptableGameObj@@PBD@Z ; RA_Missile_Control::Animation_Complete
PUBLIC	?Timer_Expired@RA_Missile_Control@@EAEXPAVScriptableGameObj@@H@Z ; RA_Missile_Control::Timer_Expired
PUBLIC	?Register_Auto_Save_Variables@RA_Missile_Control@@UAEXXZ ; RA_Missile_Control::Register_Auto_Save_Variables
PUBLIC	??0RA_Missile_Control@@QAE@XZ			; RA_Missile_Control::RA_Missile_Control
PUBLIC	??1RA_Missile_Control@@UAE@XZ			; RA_Missile_Control::~RA_Missile_Control
PUBLIC	??_GRA_Missile_Control@@UAEPAXI@Z		; RA_Missile_Control::`scalar deleting destructor'
PUBLIC	?Killed@RA_Missile_Controller@@EAEXPAVScriptableGameObj@@0@Z ; RA_Missile_Controller::Killed
PUBLIC	??0RA_Missile_Controller@@QAE@XZ		; RA_Missile_Controller::RA_Missile_Controller
PUBLIC	??1RA_Missile_Controller@@UAE@XZ		; RA_Missile_Controller::~RA_Missile_Controller
PUBLIC	??_GRA_Missile_Controller@@UAEPAXI@Z		; RA_Missile_Controller::`scalar deleting destructor'
PUBLIC	?Created@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@@Z ; RA_Demolition_Truck_Retarded::Created
PUBLIC	?Custom@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_Demolition_Truck_Retarded::Custom
PUBLIC	?Damaged@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@0M@Z ; RA_Demolition_Truck_Retarded::Damaged
PUBLIC	?Killed@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@0@Z ; RA_Demolition_Truck_Retarded::Killed
PUBLIC	?Register_Auto_Save_Variables@RA_Demolition_Truck_Retarded@@UAEXXZ ; RA_Demolition_Truck_Retarded::Register_Auto_Save_Variables
PUBLIC	??0RA_Demolition_Truck_Retarded@@QAE@XZ		; RA_Demolition_Truck_Retarded::RA_Demolition_Truck_Retarded
PUBLIC	??1RA_Demolition_Truck_Retarded@@UAE@XZ		; RA_Demolition_Truck_Retarded::~RA_Demolition_Truck_Retarded
PUBLIC	??_GRA_Demolition_Truck_Retarded@@UAEPAXI@Z	; RA_Demolition_Truck_Retarded::`scalar deleting destructor'
PUBLIC	?Created@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@@Z ; RA_MAD_Tank_Devolved::Created
PUBLIC	?Custom@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@HH0@Z ; RA_MAD_Tank_Devolved::Custom
PUBLIC	?Animation_Complete@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@PBD@Z ; RA_MAD_Tank_Devolved::Animation_Complete
PUBLIC	?Destroyed@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@@Z ; RA_MAD_Tank_Devolved::Destroyed
PUBLIC	?KeyHook@RA_MAD_Tank_Devolved@@EAEXXZ		; RA_MAD_Tank_Devolved::KeyHook
PUBLIC	?Register_Auto_Save_Variables@RA_MAD_Tank_Devolved@@UAEXXZ ; RA_MAD_Tank_Devolved::Register_Auto_Save_Variables
PUBLIC	??0RA_MAD_Tank_Devolved@@QAE@XZ			; RA_MAD_Tank_Devolved::RA_MAD_Tank_Devolved
PUBLIC	??1RA_MAD_Tank_Devolved@@UAE@XZ			; RA_MAD_Tank_Devolved::~RA_MAD_Tank_Devolved
PUBLIC	??_GRA_MAD_Tank_Devolved@@UAEPAXI@Z		; RA_MAD_Tank_Devolved::`scalar deleting destructor'
PUBLIC	?Created@RA_Superweapon_Beacon@@EAEXPAVScriptableGameObj@@@Z ; RA_Superweapon_Beacon::Created
PUBLIC	??0RA_Superweapon_Beacon@@QAE@XZ		; RA_Superweapon_Beacon::RA_Superweapon_Beacon
PUBLIC	??1RA_Superweapon_Beacon@@UAE@XZ		; RA_Superweapon_Beacon::~RA_Superweapon_Beacon
PUBLIC	??_GRA_Superweapon_Beacon@@UAEPAXI@Z		; RA_Superweapon_Beacon::`scalar deleting destructor'
PUBLIC	??4ArmorWarheadManager@@QAEAAV0@ABV0@@Z		; ArmorWarheadManager::operator=
PUBLIC	??1CollideableObjClass@AnimCollisionManagerClass@@QAE@XZ ; AnimCollisionManagerClass::CollideableObjClass::~CollideableObjClass
PUBLIC	??_ECollideableObjClass@AnimCollisionManagerClass@@QAEPAXI@Z ; AnimCollisionManagerClass::CollideableObjClass::`vector deleting destructor'
PUBLIC	??0CollisionTestClass@@QAE@PAUCastResultStruct@@W4Collision_Type@@@Z ; CollisionTestClass::CollisionTestClass
PUBLIC	??0CollisionTestClass@@QAE@ABV0@@Z		; CollisionTestClass::CollisionTestClass
PUBLIC	??4CollisionTestClass@@QAEAAV0@ABV0@@Z		; CollisionTestClass::operator=
PUBLIC	?Cull@AABoxCollisionTestClass@@QAE_NABVVector3@@0@Z ; AABoxCollisionTestClass::Cull
PUBLIC	?Translate@AABoxCollisionTestClass@@QAEXABVVector3@@@Z ; AABoxCollisionTestClass::Translate
PUBLIC	?Cull@OBBoxCollisionTestClass@@QAE_NABVVector3@@0@Z ; OBBoxCollisionTestClass::Cull
PUBLIC	??0?$ScriptRegistrant@VRA_Repair_Controller@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Repair_Controller>::ScriptRegistrant<RA_Repair_Controller>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Repair_Controller@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Repair_Controller>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Repair_Controller@@@@UAE@XZ ; ScriptRegistrant<RA_Repair_Controller>::~ScriptRegistrant<RA_Repair_Controller>
PUBLIC	??_G?$ScriptRegistrant@VRA_Repair_Controller@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Repair_Controller>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Repair_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Repair_Script>::ScriptRegistrant<RA_Repair_Script>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Repair_Script@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Repair_Script>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Repair_Script@@@@UAE@XZ ; ScriptRegistrant<RA_Repair_Script>::~ScriptRegistrant<RA_Repair_Script>
PUBLIC	??_G?$ScriptRegistrant@VRA_Repair_Script@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Repair_Script>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Infantry_Spy@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Infantry_Spy>::ScriptRegistrant<RA_Infantry_Spy>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Infantry_Spy@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Infantry_Spy>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Infantry_Spy@@@@UAE@XZ ; ScriptRegistrant<RA_Infantry_Spy>::~ScriptRegistrant<RA_Infantry_Spy>
PUBLIC	??_G?$ScriptRegistrant@VRA_Infantry_Spy@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Infantry_Spy>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Infantry_NotSpy>::ScriptRegistrant<RA_Infantry_NotSpy>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Infantry_NotSpy>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@UAE@XZ ; ScriptRegistrant<RA_Infantry_NotSpy>::~ScriptRegistrant<RA_Infantry_NotSpy>
PUBLIC	??_G?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Infantry_NotSpy>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Helipad_Zone@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Helipad_Zone>::ScriptRegistrant<RA_Helipad_Zone>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Helipad_Zone@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Helipad_Zone>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Helipad_Zone@@@@UAE@XZ ; ScriptRegistrant<RA_Helipad_Zone>::~ScriptRegistrant<RA_Helipad_Zone>
PUBLIC	??_G?$ScriptRegistrant@VRA_Helipad_Zone@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Helipad_Zone>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_MineLayer@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_MineLayer>::ScriptRegistrant<RA_MineLayer>
PUBLIC	?Create@?$ScriptRegistrant@VRA_MineLayer@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_MineLayer>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_MineLayer@@@@UAE@XZ	; ScriptRegistrant<RA_MineLayer>::~ScriptRegistrant<RA_MineLayer>
PUBLIC	??_G?$ScriptRegistrant@VRA_MineLayer@@@@UAEPAXI@Z ; ScriptRegistrant<RA_MineLayer>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Mine@@@@QAE@PBD0@Z	; ScriptRegistrant<RA_Mine>::ScriptRegistrant<RA_Mine>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Mine@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Mine>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Mine@@@@UAE@XZ	; ScriptRegistrant<RA_Mine>::~ScriptRegistrant<RA_Mine>
PUBLIC	??_G?$ScriptRegistrant@VRA_Mine@@@@UAEPAXI@Z	; ScriptRegistrant<RA_Mine>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Mine_Manager@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Mine_Manager>::ScriptRegistrant<RA_Mine_Manager>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Mine_Manager@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Mine_Manager>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Mine_Manager@@@@UAE@XZ ; ScriptRegistrant<RA_Mine_Manager>::~ScriptRegistrant<RA_Mine_Manager>
PUBLIC	??_G?$ScriptRegistrant@VRA_Mine_Manager@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Mine_Manager>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::ScriptRegistrant<RA_ObjectDeath_OnCreate>
PUBLIC	?Create@?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@UAE@XZ ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::~ScriptRegistrant<RA_ObjectDeath_OnCreate>
PUBLIC	??_G?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@UAEPAXI@Z ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Naval_Yard@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Naval_Yard>::ScriptRegistrant<RA_Naval_Yard>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Naval_Yard@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Naval_Yard>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Naval_Yard@@@@UAE@XZ	; ScriptRegistrant<RA_Naval_Yard>::~ScriptRegistrant<RA_Naval_Yard>
PUBLIC	??_G?$ScriptRegistrant@VRA_Naval_Yard@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Naval_Yard>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Naval_PT_Pokable>::ScriptRegistrant<RA_Naval_PT_Pokable>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Naval_PT_Pokable>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@UAE@XZ ; ScriptRegistrant<RA_Naval_PT_Pokable>::~ScriptRegistrant<RA_Naval_PT_Pokable>
PUBLIC	??_G?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Naval_PT_Pokable>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Naval_Unit@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Naval_Unit>::ScriptRegistrant<RA_Naval_Unit>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Naval_Unit@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Naval_Unit>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Naval_Unit@@@@UAE@XZ	; ScriptRegistrant<RA_Naval_Unit>::~ScriptRegistrant<RA_Naval_Unit>
PUBLIC	??_G?$ScriptRegistrant@VRA_Naval_Unit@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Naval_Unit>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Naval_Zone@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Naval_Zone>::ScriptRegistrant<RA_Naval_Zone>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Naval_Zone@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Naval_Zone>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Naval_Zone@@@@UAE@XZ	; ScriptRegistrant<RA_Naval_Zone>::~ScriptRegistrant<RA_Naval_Zone>
PUBLIC	??_G?$ScriptRegistrant@VRA_Naval_Zone@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Naval_Zone>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Damaged_Credits@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Damaged_Credits>::ScriptRegistrant<RA_Damaged_Credits>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Damaged_Credits@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Damaged_Credits>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Damaged_Credits@@@@UAE@XZ ; ScriptRegistrant<RA_Damaged_Credits>::~ScriptRegistrant<RA_Damaged_Credits>
PUBLIC	??_G?$ScriptRegistrant@VRA_Damaged_Credits@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Damaged_Credits>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_GameStart_Detector@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_GameStart_Detector>::ScriptRegistrant<RA_GameStart_Detector>
PUBLIC	?Create@?$ScriptRegistrant@VRA_GameStart_Detector@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_GameStart_Detector>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_GameStart_Detector@@@@UAE@XZ ; ScriptRegistrant<RA_GameStart_Detector>::~ScriptRegistrant<RA_GameStart_Detector>
PUBLIC	??_G?$ScriptRegistrant@VRA_GameStart_Detector@@@@UAEPAXI@Z ; ScriptRegistrant<RA_GameStart_Detector>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_DriverDeath@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_DriverDeath>::ScriptRegistrant<RA_DriverDeath>
PUBLIC	?Create@?$ScriptRegistrant@VRA_DriverDeath@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_DriverDeath>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_DriverDeath@@@@UAE@XZ	; ScriptRegistrant<RA_DriverDeath>::~ScriptRegistrant<RA_DriverDeath>
PUBLIC	??_G?$ScriptRegistrant@VRA_DriverDeath@@@@UAEPAXI@Z ; ScriptRegistrant<RA_DriverDeath>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Conyard_Repair@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Conyard_Repair>::ScriptRegistrant<RA_Conyard_Repair>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Conyard_Repair@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Conyard_Repair>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Conyard_Repair@@@@UAE@XZ ; ScriptRegistrant<RA_Conyard_Repair>::~ScriptRegistrant<RA_Conyard_Repair>
PUBLIC	??_G?$ScriptRegistrant@VRA_Conyard_Repair@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Conyard_Repair>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::ScriptRegistrant<RA_ObjectDeath_OnDeath>
PUBLIC	?Create@?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@UAE@XZ ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::~ScriptRegistrant<RA_ObjectDeath_OnDeath>
PUBLIC	??_G?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@UAEPAXI@Z ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Demolition_Truck_Improved>::ScriptRegistrant<RA_Demolition_Truck_Improved>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Demolition_Truck_Improved>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@UAE@XZ ; ScriptRegistrant<RA_Demolition_Truck_Improved>::~ScriptRegistrant<RA_Demolition_Truck_Improved>
PUBLIC	??_G?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Demolition_Truck_Improved>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_CTF_Zone@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_CTF_Zone>::ScriptRegistrant<RA_CTF_Zone>
PUBLIC	?Create@?$ScriptRegistrant@VRA_CTF_Zone@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_CTF_Zone>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_CTF_Zone@@@@UAE@XZ	; ScriptRegistrant<RA_CTF_Zone>::~ScriptRegistrant<RA_CTF_Zone>
PUBLIC	??_G?$ScriptRegistrant@VRA_CTF_Zone@@@@UAEPAXI@Z ; ScriptRegistrant<RA_CTF_Zone>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_MAD_Tank_Improved>::ScriptRegistrant<RA_MAD_Tank_Improved>
PUBLIC	?Create@?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_MAD_Tank_Improved>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@UAE@XZ ; ScriptRegistrant<RA_MAD_Tank_Improved>::~ScriptRegistrant<RA_MAD_Tank_Improved>
PUBLIC	??_G?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@UAEPAXI@Z ; ScriptRegistrant<RA_MAD_Tank_Improved>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Conyard_Controller_Improved>::ScriptRegistrant<RA_Conyard_Controller_Improved>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Conyard_Controller_Improved>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@UAE@XZ ; ScriptRegistrant<RA_Conyard_Controller_Improved>::~ScriptRegistrant<RA_Conyard_Controller_Improved>
PUBLIC	??_G?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Conyard_Controller_Improved>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::ScriptRegistrant<RA_Conyard_Controller_Improved_2>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@UAE@XZ ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::~ScriptRegistrant<RA_Conyard_Controller_Improved_2>
PUBLIC	??_G?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Building_DeathSound@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Building_DeathSound>::ScriptRegistrant<RA_Building_DeathSound>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Building_DeathSound@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Building_DeathSound>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Building_DeathSound@@@@UAE@XZ ; ScriptRegistrant<RA_Building_DeathSound>::~ScriptRegistrant<RA_Building_DeathSound>
PUBLIC	??_G?$ScriptRegistrant@VRA_Building_DeathSound@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Building_DeathSound>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Base_Defense_Simple>::ScriptRegistrant<RA_Base_Defense_Simple>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Base_Defense_Simple>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@UAE@XZ ; ScriptRegistrant<RA_Base_Defense_Simple>::~ScriptRegistrant<RA_Base_Defense_Simple>
PUBLIC	??_G?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Base_Defense_Simple>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Base_Defense_Powered>::ScriptRegistrant<RA_Base_Defense_Powered>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Base_Defense_Powered>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@UAE@XZ ; ScriptRegistrant<RA_Base_Defense_Powered>::~ScriptRegistrant<RA_Base_Defense_Powered>
PUBLIC	??_G?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Base_Defense_Powered>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Base_Defense_Chargeup>::ScriptRegistrant<RA_Base_Defense_Chargeup>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Base_Defense_Chargeup>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@UAE@XZ ; ScriptRegistrant<RA_Base_Defense_Chargeup>::~ScriptRegistrant<RA_Base_Defense_Chargeup>
PUBLIC	??_G?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Base_Defense_Chargeup>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Vehicle_Regen@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Vehicle_Regen>::ScriptRegistrant<RA_Vehicle_Regen>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Vehicle_Regen@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Vehicle_Regen>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Vehicle_Regen@@@@UAE@XZ ; ScriptRegistrant<RA_Vehicle_Regen>::~ScriptRegistrant<RA_Vehicle_Regen>
PUBLIC	??_G?$ScriptRegistrant@VRA_Vehicle_Regen@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Vehicle_Regen>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Thief@@@@QAE@PBD0@Z	; ScriptRegistrant<RA_Thief>::ScriptRegistrant<RA_Thief>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Thief@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Thief>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Thief@@@@UAE@XZ	; ScriptRegistrant<RA_Thief>::~ScriptRegistrant<RA_Thief>
PUBLIC	??_G?$ScriptRegistrant@VRA_Thief@@@@UAEPAXI@Z	; ScriptRegistrant<RA_Thief>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Thief_Improved@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Thief_Improved>::ScriptRegistrant<RA_Thief_Improved>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Thief_Improved@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Thief_Improved>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Thief_Improved@@@@UAE@XZ ; ScriptRegistrant<RA_Thief_Improved>::~ScriptRegistrant<RA_Thief_Improved>
PUBLIC	??_G?$ScriptRegistrant@VRA_Thief_Improved@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Thief_Improved>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Credit_Theft_Zone>::ScriptRegistrant<RA_Credit_Theft_Zone>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Credit_Theft_Zone>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@UAE@XZ ; ScriptRegistrant<RA_Credit_Theft_Zone>::~ScriptRegistrant<RA_Credit_Theft_Zone>
PUBLIC	??_G?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Credit_Theft_Zone>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::ScriptRegistrant<RA_Credit_Theft_Zone_Timer>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@UAE@XZ ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::~ScriptRegistrant<RA_Credit_Theft_Zone_Timer>
PUBLIC	??_G?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::ScriptRegistrant<RA_DestroyNearest_OnDeath>
PUBLIC	?Create@?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@UAE@XZ ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::~ScriptRegistrant<RA_DestroyNearest_OnDeath>
PUBLIC	??_G?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@UAEPAXI@Z ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Ore_Truck@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Ore_Truck>::ScriptRegistrant<RA_Ore_Truck>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Ore_Truck@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Ore_Truck>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Ore_Truck@@@@UAE@XZ	; ScriptRegistrant<RA_Ore_Truck>::~ScriptRegistrant<RA_Ore_Truck>
PUBLIC	??_G?$ScriptRegistrant@VRA_Ore_Truck@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Ore_Truck>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Ore_Truck_2@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Ore_Truck_2>::ScriptRegistrant<RA_Ore_Truck_2>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Ore_Truck_2@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Ore_Truck_2>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Ore_Truck_2@@@@UAE@XZ	; ScriptRegistrant<RA_Ore_Truck_2>::~ScriptRegistrant<RA_Ore_Truck_2>
PUBLIC	??_G?$ScriptRegistrant@VRA_Ore_Truck_2@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Ore_Truck_2>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Ore_Field@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Ore_Field>::ScriptRegistrant<RA_Ore_Field>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Ore_Field@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Ore_Field>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Ore_Field@@@@UAE@XZ	; ScriptRegistrant<RA_Ore_Field>::~ScriptRegistrant<RA_Ore_Field>
PUBLIC	??_G?$ScriptRegistrant@VRA_Ore_Field@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Ore_Field>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Ore_Delivery_Zone>::ScriptRegistrant<RA_Ore_Delivery_Zone>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Ore_Delivery_Zone>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@UAE@XZ ; ScriptRegistrant<RA_Ore_Delivery_Zone>::~ScriptRegistrant<RA_Ore_Delivery_Zone>
PUBLIC	??_G?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Ore_Delivery_Zone>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Vehicle_Team_Set>::ScriptRegistrant<RA_Vehicle_Team_Set>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Vehicle_Team_Set>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@UAE@XZ ; ScriptRegistrant<RA_Vehicle_Team_Set>::~ScriptRegistrant<RA_Vehicle_Team_Set>
PUBLIC	??_G?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Vehicle_Team_Set>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Vehicle_Team_Timer>::ScriptRegistrant<RA_Vehicle_Team_Timer>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Vehicle_Team_Timer>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@UAE@XZ ; ScriptRegistrant<RA_Vehicle_Team_Timer>::~ScriptRegistrant<RA_Vehicle_Team_Timer>
PUBLIC	??_G?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Vehicle_Team_Timer>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Visible_Driver@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Visible_Driver>::ScriptRegistrant<RA_Visible_Driver>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Visible_Driver@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Visible_Driver>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Visible_Driver@@@@UAE@XZ ; ScriptRegistrant<RA_Visible_Driver>::~ScriptRegistrant<RA_Visible_Driver>
PUBLIC	??_G?$ScriptRegistrant@VRA_Visible_Driver@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Visible_Driver>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Vision_Control@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Vision_Control>::ScriptRegistrant<RA_Vision_Control>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Vision_Control@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Vision_Control>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Vision_Control@@@@UAE@XZ ; ScriptRegistrant<RA_Vision_Control>::~ScriptRegistrant<RA_Vision_Control>
PUBLIC	??_G?$ScriptRegistrant@VRA_Vision_Control@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Vision_Control>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Vision_Control_2@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Vision_Control_2>::ScriptRegistrant<RA_Vision_Control_2>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Vision_Control_2@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Vision_Control_2>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Vision_Control_2@@@@UAE@XZ ; ScriptRegistrant<RA_Vision_Control_2>::~ScriptRegistrant<RA_Vision_Control_2>
PUBLIC	??_G?$ScriptRegistrant@VRA_Vision_Control_2@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Vision_Control_2>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Fog_Level_Settings>::ScriptRegistrant<RA_Fog_Level_Settings>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Fog_Level_Settings>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@UAE@XZ ; ScriptRegistrant<RA_Fog_Level_Settings>::~ScriptRegistrant<RA_Fog_Level_Settings>
PUBLIC	??_G?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Fog_Level_Settings>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Missile_Beacon@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Missile_Beacon>::ScriptRegistrant<RA_Missile_Beacon>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Missile_Beacon@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Missile_Beacon>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Missile_Beacon@@@@UAE@XZ ; ScriptRegistrant<RA_Missile_Beacon>::~ScriptRegistrant<RA_Missile_Beacon>
PUBLIC	??_G?$ScriptRegistrant@VRA_Missile_Beacon@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Missile_Beacon>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Superweapon_Beacon>::ScriptRegistrant<RA_Superweapon_Beacon>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Superweapon_Beacon>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@UAE@XZ ; ScriptRegistrant<RA_Superweapon_Beacon>::~ScriptRegistrant<RA_Superweapon_Beacon>
PUBLIC	??_G?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Superweapon_Beacon>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Beacon_Terminal@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Beacon_Terminal>::ScriptRegistrant<RA_Beacon_Terminal>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Beacon_Terminal@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Beacon_Terminal>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Beacon_Terminal@@@@UAE@XZ ; ScriptRegistrant<RA_Beacon_Terminal>::~ScriptRegistrant<RA_Beacon_Terminal>
PUBLIC	??_G?$ScriptRegistrant@VRA_Beacon_Terminal@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Beacon_Terminal>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Beacon_Terminal_2>::ScriptRegistrant<RA_Beacon_Terminal_2>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Beacon_Terminal_2>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@UAE@XZ ; ScriptRegistrant<RA_Beacon_Terminal_2>::~ScriptRegistrant<RA_Beacon_Terminal_2>
PUBLIC	??_G?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Beacon_Terminal_2>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Beacon_Timer@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Beacon_Timer>::ScriptRegistrant<RA_Beacon_Timer>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Beacon_Timer@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Beacon_Timer>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Beacon_Timer@@@@UAE@XZ ; ScriptRegistrant<RA_Beacon_Timer>::~ScriptRegistrant<RA_Beacon_Timer>
PUBLIC	??_G?$ScriptRegistrant@VRA_Beacon_Timer@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Beacon_Timer>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Missile_Control@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Missile_Control>::ScriptRegistrant<RA_Missile_Control>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Missile_Control@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Missile_Control>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Missile_Control@@@@UAE@XZ ; ScriptRegistrant<RA_Missile_Control>::~ScriptRegistrant<RA_Missile_Control>
PUBLIC	??_G?$ScriptRegistrant@VRA_Missile_Control@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Missile_Control>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Missile_Controller@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Missile_Controller>::ScriptRegistrant<RA_Missile_Controller>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Missile_Controller@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Missile_Controller>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Missile_Controller@@@@UAE@XZ ; ScriptRegistrant<RA_Missile_Controller>::~ScriptRegistrant<RA_Missile_Controller>
PUBLIC	??_G?$ScriptRegistrant@VRA_Missile_Controller@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Missile_Controller>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::ScriptRegistrant<RA_Demolition_Truck_Retarded>
PUBLIC	?Create@?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@UAE@XZ ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::~ScriptRegistrant<RA_Demolition_Truck_Retarded>
PUBLIC	??_G?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@UAEPAXI@Z ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::`scalar deleting destructor'
PUBLIC	??0?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_MAD_Tank_Devolved>::ScriptRegistrant<RA_MAD_Tank_Devolved>
PUBLIC	?Create@?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@UAEPAVScriptImpClass@@XZ ; ScriptRegistrant<RA_MAD_Tank_Devolved>::Create
PUBLIC	??1?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@UAE@XZ ; ScriptRegistrant<RA_MAD_Tank_Devolved>::~ScriptRegistrant<RA_MAD_Tank_Devolved>
PUBLIC	??_G?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@UAEPAXI@Z ; ScriptRegistrant<RA_MAD_Tank_Devolved>::`scalar deleting destructor'
PUBLIC	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next
PUBLIC	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
PUBLIC	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
PUBLIC	??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
PUBLIC	?getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ ; Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance
PUBLIC	??0?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ ; ObjectPoolClass<GenericSLNode,256>::ObjectPoolClass<GenericSLNode,256>
PUBLIC	??1?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ ; ObjectPoolClass<GenericSLNode,256>::~ObjectPoolClass<GenericSLNode,256>
PUBLIC	?Allocate_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEPAVGenericSLNode@@XZ ; ObjectPoolClass<GenericSLNode,256>::Allocate_Object_Memory
PUBLIC	?Free_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@@Z ; ObjectPoolClass<GenericSLNode,256>::Free_Object_Memory
PUBLIC	?writeDummyPattern@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@K@Z ; ObjectPoolClass<GenericSLNode,256>::writeDummyPattern
PUBLIC	??__Finstancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@YAXXZ ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::`dynamic atexit destructor for 'instancex''
PUBLIC	??B?$RefArray@D$03@@QAEPADXZ			; RefArray<char,4>::operator char *
PUBLIC	??B?$RefArray@V?$RefArray@D$03@@$07@@QAEPAV?$RefArray@D$03@@XZ ; RefArray<RefArray<char,4>,8>::operator RefArray<char,4> *
PUBLIC	??_7GameObjObserverClass@@6B@			; GameObjObserverClass::`vftable'
PUBLIC	??_7ScriptClass@@6B@				; ScriptClass::`vftable'
PUBLIC	??_7ScriptImpClass@@6B@				; ScriptImpClass::`vftable'
PUBLIC	??_7ScriptFactory@@6B@				; ScriptFactory::`vftable'
PUBLIC	??_7ThreadClass@@6B@				; ThreadClass::`vftable'
PUBLIC	??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@ ; `string'
PUBLIC	??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ ; `string'
PUBLIC	??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_7INIClass@@6B@				; INIClass::`vftable'
PUBLIC	?_checking@?1??Security_Check@GenericDataSafeClass@@KAXXZ@4_NA ; `GenericDataSafeClass::Security_Check'::`2'::_checking
PUBLIC	?_calls@?1??Security_Check@GenericDataSafeClass@@KAXXZ@4KA ; `GenericDataSafeClass::Security_Check'::`2'::_calls
PUBLIC	??_7PostLoadableClass@@6B@			; PostLoadableClass::`vftable'
PUBLIC	??_7ReferencerClass@@6B@			; ReferencerClass::`vftable'
PUBLIC	??_7JFW_Key_Hook_Base@@6B@			; JFW_Key_Hook_Base::`vftable'
PUBLIC	??_7?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`vftable'
PUBLIC	??_7MultiKeyHookScriptImpClass@@6B@		; MultiKeyHookScriptImpClass::`vftable'
PUBLIC	??_7JFW_Object_Created_Hook_Base@@6B@		; JFW_Object_Created_Hook_Base::`vftable'
PUBLIC	??_7RA_Repair_Controller@@6B@			; RA_Repair_Controller::`vftable'
PUBLIC	??_7RA_Repair_Script@@6B@			; RA_Repair_Script::`vftable'
PUBLIC	??_7RA_Infantry_Spy@@6B@			; RA_Infantry_Spy::`vftable'
PUBLIC	??_7RA_Infantry_NotSpy@@6B@			; RA_Infantry_NotSpy::`vftable'
PUBLIC	??_7RA_Helipad_Zone@@6B@			; RA_Helipad_Zone::`vftable'
PUBLIC	??_7RA_MineLayer@@6B@				; RA_MineLayer::`vftable'
PUBLIC	??_7RA_Mine@@6B@				; RA_Mine::`vftable'
PUBLIC	??_7RA_Mine_Manager@@6B@			; RA_Mine_Manager::`vftable'
PUBLIC	??_7RA_ObjectDeath_OnCreate@@6B@		; RA_ObjectDeath_OnCreate::`vftable'
PUBLIC	??_7RA_Naval_Yard@@6B@				; RA_Naval_Yard::`vftable'
PUBLIC	??_7RA_Naval_PT_Pokable@@6B@			; RA_Naval_PT_Pokable::`vftable'
PUBLIC	??_7RA_Naval_Unit@@6B@				; RA_Naval_Unit::`vftable'
PUBLIC	??_7RA_Naval_Zone@@6B@				; RA_Naval_Zone::`vftable'
PUBLIC	??_7RA_Damaged_Credits@@6B@			; RA_Damaged_Credits::`vftable'
PUBLIC	??_7RA_GameStart_Detector@@6B@			; RA_GameStart_Detector::`vftable'
PUBLIC	??_7RA_DriverDeath@@6B@				; RA_DriverDeath::`vftable'
PUBLIC	??_7RA_Conyard_Repair@@6B@			; RA_Conyard_Repair::`vftable'
PUBLIC	??_7RA_ObjectDeath_OnDeath@@6B@			; RA_ObjectDeath_OnDeath::`vftable'
PUBLIC	??_7RA_Demolition_Truck_Improved@@6B@		; RA_Demolition_Truck_Improved::`vftable'
PUBLIC	??_7RA_CTF_Zone@@6B@				; RA_CTF_Zone::`vftable'
PUBLIC	??_7RA_MAD_Tank_Improved@@6B@			; RA_MAD_Tank_Improved::`vftable'
PUBLIC	??_7RA_Conyard_Controller_Improved@@6B@		; RA_Conyard_Controller_Improved::`vftable'
PUBLIC	??_7RA_Conyard_Controller_Improved_2@@6B@	; RA_Conyard_Controller_Improved_2::`vftable'
PUBLIC	??_7RA_Building_DeathSound@@6B@			; RA_Building_DeathSound::`vftable'
PUBLIC	??_7RA_Base_Defense_Simple@@6B@			; RA_Base_Defense_Simple::`vftable'
PUBLIC	??_7RA_Base_Defense_Powered@@6B@		; RA_Base_Defense_Powered::`vftable'
PUBLIC	??_7RA_Base_Defense_Chargeup@@6B@		; RA_Base_Defense_Chargeup::`vftable'
PUBLIC	??_7RA_Vehicle_Regen@@6B@			; RA_Vehicle_Regen::`vftable'
PUBLIC	??_7RA_Thief@@6B@				; RA_Thief::`vftable'
PUBLIC	??_7RA_Thief_Improved@@6B@			; RA_Thief_Improved::`vftable'
PUBLIC	??_7RA_Credit_Theft_Zone@@6B@			; RA_Credit_Theft_Zone::`vftable'
PUBLIC	??_7RA_Credit_Theft_Zone_Timer@@6B@		; RA_Credit_Theft_Zone_Timer::`vftable'
PUBLIC	??_7RA_DestroyNearest_OnDeath@@6B@		; RA_DestroyNearest_OnDeath::`vftable'
PUBLIC	??_7RA_Ore_Truck@@6B@				; RA_Ore_Truck::`vftable'
PUBLIC	??_7RA_Ore_Truck_2@@6B@				; RA_Ore_Truck_2::`vftable'
PUBLIC	??_7RA_Ore_Field@@6B@				; RA_Ore_Field::`vftable'
PUBLIC	??_7RA_Ore_Delivery_Zone@@6B@			; RA_Ore_Delivery_Zone::`vftable'
PUBLIC	??_7RA_Vehicle_Team_Set@@6B@			; RA_Vehicle_Team_Set::`vftable'
PUBLIC	??_7RA_Vehicle_Team_Timer@@6B@			; RA_Vehicle_Team_Timer::`vftable'
PUBLIC	??_7RA_Visible_Driver@@6B@			; RA_Visible_Driver::`vftable'
PUBLIC	??_7RA_Vision_Control@@6B@			; RA_Vision_Control::`vftable'
PUBLIC	??_7RA_Vision_Control_2@@6B@			; RA_Vision_Control_2::`vftable'
PUBLIC	??_7RA_Fog_Level_Settings@@6B@			; RA_Fog_Level_Settings::`vftable'
PUBLIC	??_7RA_Missile_Beacon@@6B@			; RA_Missile_Beacon::`vftable'
PUBLIC	??_7RA_Beacon_Terminal@@6B@			; RA_Beacon_Terminal::`vftable'
PUBLIC	??_7RA_Beacon_Terminal_2@@6B@			; RA_Beacon_Terminal_2::`vftable'
PUBLIC	??_7RA_Beacon_Timer@@6B@			; RA_Beacon_Timer::`vftable'
PUBLIC	??_7RA_Missile_Control@@6B@			; RA_Missile_Control::`vftable'
PUBLIC	??_7RA_Missile_Controller@@6B@			; RA_Missile_Controller::`vftable'
PUBLIC	??_7RA_Demolition_Truck_Retarded@@6B@		; RA_Demolition_Truck_Retarded::`vftable'
PUBLIC	??_7RA_MAD_Tank_Devolved@@6B@			; RA_MAD_Tank_Devolved::`vftable'
PUBLIC	??_7RA_Superweapon_Beacon@@6B@			; RA_Superweapon_Beacon::`vftable'
PUBLIC	??_C@_0N@PHKBDNCI@ScriptZoneID?$AA@		; `string'
PUBLIC	??_C@_0O@ENHMDGPL@TeamSelection?$AA@		; `string'
PUBLIC	??_C@_0BA@DBPAPOF@Reload_Interval?$AA@		; `string'
PUBLIC	??_C@_0BB@DJDJOOPC@Apache_Preset_ID?$AA@	; `string'
PUBLIC	??_C@_0BG@MGOLCACJ@Apache_Reload_Powerup?$AA@	; `string'
PUBLIC	??_C@_0P@DFEDGBNO@Hind_Preset_ID?$AA@		; `string'
PUBLIC	??_C@_0BE@ICDDOGML@Hind_Reload_Powerup?$AA@	; `string'
PUBLIC	??_C@_0BA@FMFKJJDO@Mine_Manager_ID?$AA@		; `string'
PUBLIC	??_C@_0BC@CBHFNPK@Is_Anti?9Personnel?$AA@	; `string'
PUBLIC	??_C@_0N@JAJHEDOP@Is_Anti?9Tank?$AA@		; `string'
PUBLIC	??_C@_0BA@LBFLGKJ@Trigger_Warhead?$AA@		; `string'
PUBLIC	??_C@_0P@CKNAPFGO@Trigger_Damage?$AA@		; `string'
PUBLIC	??_C@_0L@FEMAOEFO@Mine_Limit?$AA@		; `string'
PUBLIC	??_C@_08FPDFGKEJ@BoneName?$AA@			; `string'
PUBLIC	??_C@_0M@MGAOKMMO@Soviet_Mine?$AA@		; `string'
PUBLIC	??_C@_0M@MPNDCCKL@Mine_Reload?$AA@		; `string'
PUBLIC	??_C@_0M@OIJNDEED@Allied_Mine?$AA@		; `string'
PUBLIC	??_C@_05PGGAFPFO@Death?$AA@			; `string'
PUBLIC	??_C@_06ELFECKBG@Object?$AA@			; `string'
PUBLIC	??_C@_05GHJMOCPE@Limit?$AA@			; `string'
PUBLIC	??_C@_0N@GDBOJMMA@Disable_Time?$AA@		; `string'
PUBLIC	??_C@_04GBPANCCF@Team?$AA@			; `string'
PUBLIC	??_C@_04FICPKHNF@Cost?$AA@			; `string'
PUBLIC	??_C@_0O@KMKIEDFH@Controller_ID?$AA@		; `string'
PUBLIC	??_C@_07DINJEGDJ@Zone_ID?$AA@			; `string'
PUBLIC	??_C@_0M@KBNHOJJA@Preset_Name?$AA@		; `string'
PUBLIC	??_C@_0O@HFKHFDOD@RA_Naval_Unit?$AA@		; `string'
PUBLIC	??_C@_09HGNANIIM@Explosion?$AA@			; `string'
PUBLIC	??_C@_07EHHFIGEM@Divisor?$AA@			; `string'
PUBLIC	??_C@_08KDKDEPAG@Interval?$AA@			; `string'
PUBLIC	??_C@_0L@MGGOLNPC@ReceiverID?$AA@		; `string'
PUBLIC	??_C@_07BEIHKDLJ@Message?$AA@			; `string'
PUBLIC	??_C@_09HPDNJEFH@Parameter?$AA@			; `string'
PUBLIC	??_C@_0M@IPKOBAPD@BlamoKiller?$AA@		; `string'
PUBLIC	??_C@_0BB@KMLBNKBM@Repair_Frequency?$AA@	; `string'
PUBLIC	??_C@_04OHJIHAFH@None?$AA@			; `string'
PUBLIC	??_C@_06CKLLCHIK@Preset?$AA@			; `string'
PUBLIC	??_C@_07EDCLAFNL@Warhead?$AA@			; `string'
PUBLIC	??_C@_0P@PDFEMABG@DamageStrength?$AA@		; `string'
PUBLIC	??_C@_0N@DAHCFJAP@DamageRadius?$AA@		; `string'
PUBLIC	??_C@_01GBGANLPD@0?$AA@				; `string'
PUBLIC	??_C@_0P@JMLOMBPP@RA_DriverDeath?$AA@		; `string'
PUBLIC	??_C@_0BB@ELNDALFH@Flag_Preset_Name?$AA@	; `string'
PUBLIC	??_C@_07EIAFPCFB@Team_ID?$AA@			; `string'
PUBLIC	??_C@_0BB@OLPGPHAI@TDA_CTF_Attached?$AA@	; `string'
PUBLIC	??_C@_05JDJNJCFA@LHAND?$AA@			; `string'
PUBLIC	??_C@_0M@GNHEDHFO@Max_Capture?$AA@		; `string'
PUBLIC	??_C@_04CCGIJNFG@Bone?$AA@			; `string'
PUBLIC	??_C@_0BB@NHJNEILC@Invisible_Object?$AA@	; `string'
PUBLIC	??_C@_0N@OPMLCOMM@Attach_Model?$AA@		; `string'
PUBLIC	??_C@_0N@IKMPLOBB@Announcement?$AA@		; `string'
PUBLIC	??_C@_0BD@IANHLCC@Deployed_Animation?$AA@	; `string'
PUBLIC	??_C@_0N@JAJNNIDP@Sonic_Preset?$AA@		; `string'
PUBLIC	??_C@_0L@GKJDIJEO@Percentage?$AA@		; `string'
PUBLIC	??_C@_07MLBKNGKL@Preset1?$AA@			; `string'
PUBLIC	??_C@_07OADHIFGI@Preset2?$AA@			; `string'
PUBLIC	??_C@_07PJCMLECJ@Preset3?$AA@			; `string'
PUBLIC	??_C@_07LGGNCCOO@Preset4?$AA@			; `string'
PUBLIC	??_C@_07KPHGBDKP@Preset5?$AA@			; `string'
PUBLIC	??_C@_07IEFLEAGM@Preset6?$AA@			; `string'
PUBLIC	??_C@_07JNEAHBCN@Preset7?$AA@			; `string'
PUBLIC	??_C@_07BKNIGNOC@Preset8?$AA@			; `string'
PUBLIC	??_C@_09DLGDALPD@HalfSound?$AA@			; `string'
PUBLIC	??_C@_09HACJLOIJ@DeadSound?$AA@			; `string'
PUBLIC	??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@		; `string'
PUBLIC	??_C@_07NJFFFLDF@AntiAir?$AA@			; `string'
PUBLIC	??_C@_0L@ONGGIKDA@AntiGround?$AA@		; `string'
PUBLIC	??_C@_08JOBCAEBO@MaxRange?$AA@			; `string'
PUBLIC	??_C@_08EJPJLGFP@MinRange?$AA@			; `string'
PUBLIC	??_C@_0L@LLAOGGCM@TargetMode?$AA@		; `string'
PUBLIC	??_C@_09KGOAILDN@AdjustAim?$AA@			; `string'
PUBLIC	??_C@_0L@IDJIIOHN@ChargeAnim?$AA@		; `string'
PUBLIC	??_C@_0M@EEFBOHPC@ChargeSound?$AA@		; `string'
PUBLIC	??_C@_07JKEPGEHM@TimerID?$AA@			; `string'
PUBLIC	??_C@_04OKOFBOPB@Time?$AA@			; `string'
PUBLIC	??_C@_04NNPLJJOH@Heal?$AA@			; `string'
PUBLIC	??_C@_0O@MIIJBBJG@Enter_Message?$AA@		; `string'
PUBLIC	??_C@_08HADANCIC@RA_Thief?$AA@			; `string'
PUBLIC	??_C@_0CJ@JGGHHOJE@Credits?5Stolen?3?5?$CF?40f?6Credits?5Giv@ ; `string'
PUBLIC	??_C@_05MAHMNMLO@Sound?$AA@			; `string'
PUBLIC	??_C@_0BC@GOCDOIJN@RA_Thief_Improved?$AA@	; `string'
PUBLIC	??_C@_0M@LCJHHOCB@Field_Enter?$AA@		; `string'
PUBLIC	??_C@_0N@FEAECCKI@Max_Capacity?$AA@		; `string'
PUBLIC	??_C@_0N@BAAMNDP@Harvest_Anim?$AA@		; `string'
PUBLIC	??_C@_0L@KGCLACNJ@Field_Exit?$AA@		; `string'
PUBLIC	??_C@_0O@FMANAMEC@Deposit_Enter?$AA@		; `string'
PUBLIC	??_C@_0N@PONAAJDB@Deliver_Anim?$AA@		; `string'
PUBLIC	??_C@_0O@NMABFPAN@Harvest_Sound?$AA@		; `string'
PUBLIC	??_C@_0L@LICJIGHN@Dump_Sound?$AA@		; `string'
PUBLIC	??_C@_0N@KBNLAHDA@RA_Ore_Truck?$AA@		; `string'
PUBLIC	??_C@_0P@MLLCDPHH@RA_Ore_Truck_2?$AA@		; `string'
PUBLIC	??_C@_0M@DJINMBFD@Field_Value?$AA@		; `string'
PUBLIC	??_C@_05IAOCCJNL@Enter?$AA@			; `string'
PUBLIC	??_C@_04LBABLPF@Exit?$AA@			; `string'
PUBLIC	??_C@_0BG@HCDDJCHI@RA_Vehicle_Team_Timer?$AA@	; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0O@OFGDAIBO@VehicleFogEnd?$AA@		; `string'
PUBLIC	??_C@_0BA@OLNMMNF@VehicleFogStart?$AA@		; `string'
PUBLIC	??_C@_0P@EEDBCAGE@InfantryFogEnd?$AA@		; `string'
PUBLIC	??_C@_0BB@OONIFEAB@InfantryFogStart?$AA@	; `string'
PUBLIC	??_C@_0P@JAAENFLF@SiloPresetName?$AA@		; `string'
PUBLIC	??_C@_0BA@JCMKEIDO@RA_Beacon_Timer?$AA@		; `string'
PUBLIC	??_C@_0BB@OAPPKIAJ@BeaconReadySound?$AA@	; `string'
PUBLIC	??_C@_0O@IANNLIGI@BeaconPowerup?$AA@		; `string'
PUBLIC	??_C@_0BB@PKFMOKHA@BeaconTakenSound?$AA@	; `string'
PUBLIC	??_C@_0BB@CFBBPGKA@SiloDisableSound?$AA@	; `string'
PUBLIC	??_C@_0P@JEOPBNFB@SpyNotifySound?$AA@		; `string'
PUBLIC	??_C@_0O@MMHNBBEN@OfflineCustom?$AA@		; `string'
PUBLIC	??_C@_0N@DHHIFKOM@OnlineCustom?$AA@		; `string'
PUBLIC	??_C@_0O@HEOGOAJ@AnimationName?$AA@		; `string'
PUBLIC	??_C@_0BD@FHJIDJKJ@TerminalPresetName?$AA@	; `string'
PUBLIC	??_C@_03FCIIMNPF@MAD?$AA@			; `string'
PUBLIC	??_C@_0BA@OOIHOFIM@EnemyPercentage?$AA@		; `string'
PUBLIC	??_C@_0BB@IJDMLPMI@FriendPercentage?$AA@	; `string'
PUBLIC	??_C@_07EOGFGIGH@ForceFF?$AA@			; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Repair_Controller@@@@6B@ ; ScriptRegistrant<RA_Repair_Controller>::`vftable'
PUBLIC	?RA_Repair_Controller_Registrant@@3V?$ScriptRegistrant@VRA_Repair_Controller@@@@A ; RA_Repair_Controller_Registrant
PUBLIC	??_C@_0BD@JOHJGBBA@ScriptZoneID?$DN0?3int?$AA@	; `string'
PUBLIC	??_C@_0BF@DCBEKJC@RA_Repair_Controller?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Repair_Script@@@@6B@	; ScriptRegistrant<RA_Repair_Script>::`vftable'
PUBLIC	?RA_Repair_Script_Registrant@@3V?$ScriptRegistrant@VRA_Repair_Script@@@@A ; RA_Repair_Script_Registrant
PUBLIC	??_C@_0BE@GBPECEAC@TeamSelection?$DN0?3int?$AA@	; `string'
PUBLIC	??_C@_0BB@KLPHPIGA@RA_Repair_Script?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Infantry_Spy@@@@6B@	; ScriptRegistrant<RA_Infantry_Spy>::`vftable'
PUBLIC	?RA_Infantry_Spy_Registrant@@3V?$ScriptRegistrant@VRA_Infantry_Spy@@@@A ; RA_Infantry_Spy_Registrant
PUBLIC	??_C@_0BA@BILJLNN@RA_Infantry_Spy?$AA@		; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@6B@ ; ScriptRegistrant<RA_Infantry_NotSpy>::`vftable'
PUBLIC	?RA_Infantry_NotSpy_Registrant@@3V?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@A ; RA_Infantry_NotSpy_Registrant
PUBLIC	??_C@_0BD@BCCDCMEJ@RA_Infantry_NotSpy?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Helipad_Zone@@@@6B@	; ScriptRegistrant<RA_Helipad_Zone>::`vftable'
PUBLIC	?RA_Helipad_Zone_Registrant@@3V?$ScriptRegistrant@VRA_Helipad_Zone@@@@A ; RA_Helipad_Zone_Registrant
PUBLIC	??_C@_0JP@MJKKDFJK@TeamSelection?$DN0?3int?0Reload_Inter@ ; `string'
PUBLIC	??_C@_0BA@FLIHAMBL@RA_Helipad_Zone?$AA@		; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_MineLayer@@@@6B@	; ScriptRegistrant<RA_MineLayer>::`vftable'
PUBLIC	?RA_MineLayer_Registrant@@3V?$ScriptRegistrant@VRA_MineLayer@@@@A ; RA_MineLayer_Registrant
PUBLIC	??_C@_0BG@EKBLJKOH@Mine_Manager_ID?$DN0?3int?$AA@ ; `string'
PUBLIC	??_C@_0N@MHFMOKFN@RA_MineLayer?$AA@		; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Mine@@@@6B@		; ScriptRegistrant<RA_Mine>::`vftable'
PUBLIC	?RA_Mine_Registrant@@3V?$ScriptRegistrant@VRA_Mine@@@@A ; RA_Mine_Registrant
PUBLIC	??_C@_0HH@MHEDFFNG@Mine_Manager_ID?$DN0?3int?0Is_Anti?9Pe@ ; `string'
PUBLIC	??_C@_07COPEENHL@RA_Mine?$AA@			; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Mine_Manager@@@@6B@	; ScriptRegistrant<RA_Mine_Manager>::`vftable'
PUBLIC	?RA_Mine_Manager_Registrant@@3V?$ScriptRegistrant@VRA_Mine_Manager@@@@A ; RA_Mine_Manager_Registrant
PUBLIC	??_C@_0HC@KCKGPIHO@Allied_Mine?$DNBlank?3string?0Soviet_@ ; `string'
PUBLIC	??_C@_0BA@HFOOKAAN@RA_Mine_Manager?$AA@		; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@6B@ ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::`vftable'
PUBLIC	?RA_ObjectDeath_OnCreate_Registrant@@3V?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@A ; RA_ObjectDeath_OnCreate_Registrant
PUBLIC	??_C@_0BD@OABGKEKH@Object?$DNnull?3string?$AA@	; `string'
PUBLIC	??_C@_0BI@OODHAHCJ@RA_ObjectDeath_OnCreate?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Naval_Yard@@@@6B@	; ScriptRegistrant<RA_Naval_Yard>::`vftable'
PUBLIC	?RA_Naval_Yard_Registrant@@3V?$ScriptRegistrant@VRA_Naval_Yard@@@@A ; RA_Naval_Yard_Registrant
PUBLIC	??_C@_0CD@GOLPBKIF@Limit?$DN8?3int?0Disable_Time?$DN5?40?3flo@ ; `string'
PUBLIC	??_C@_0O@LCIFPAHE@RA_Naval_Yard?$AA@		; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@6B@ ; ScriptRegistrant<RA_Naval_PT_Pokable>::`vftable'
PUBLIC	?RA_Naval_PT_Pokable_Registrant@@3V?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@A ; RA_Naval_PT_Pokable_Registrant
PUBLIC	??_C@_0FF@BNKMBPJO@Preset_Name?$DNblank?3string?0Cost?$DN0?4@ ; `string'
PUBLIC	??_C@_0BE@DAIDDDDB@RA_Naval_PT_Pokable?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Naval_Unit@@@@6B@	; ScriptRegistrant<RA_Naval_Unit>::`vftable'
PUBLIC	?RA_Naval_Unit_Registrant@@3V?$ScriptRegistrant@VRA_Naval_Unit@@@@A ; RA_Naval_Unit_Registrant
PUBLIC	??_C@_0BE@DPAOAOHB@Controller_ID?$DN0?3int?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Naval_Zone@@@@6B@	; ScriptRegistrant<RA_Naval_Zone>::`vftable'
PUBLIC	?RA_Naval_Zone_Registrant@@3V?$ScriptRegistrant@VRA_Naval_Zone@@@@A ; RA_Naval_Zone_Registrant
PUBLIC	??_C@_0BH@LPAGAABD@Explosion?$DNblank?3string?$AA@ ; `string'
PUBLIC	??_C@_0O@BJNNJGMC@RA_Naval_Zone?$AA@		; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Damaged_Credits@@@@6B@ ; ScriptRegistrant<RA_Damaged_Credits>::`vftable'
PUBLIC	?RA_Damaged_Credits_Registrant@@3V?$ScriptRegistrant@VRA_Damaged_Credits@@@@A ; RA_Damaged_Credits_Registrant
PUBLIC	??_C@_0BC@FGLCBCFK@Divisor?$DN4?40?3float?$AA@	; `string'
PUBLIC	??_C@_0BD@MOIPLKEJ@RA_Damaged_Credits?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_GameStart_Detector@@@@6B@ ; ScriptRegistrant<RA_GameStart_Detector>::`vftable'
PUBLIC	?RA_GameStart_Detector_Registrant@@3V?$ScriptRegistrant@VRA_GameStart_Detector@@@@A ; RA_GameStart_Detector_Registrant
PUBLIC	??_C@_0EC@FPONCPAM@Interval?$DN5?40?3float?0ReceiverID?$DN0?3@ ; `string'
PUBLIC	??_C@_0BG@LLLIIPBA@RA_GameStart_Detector?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_DriverDeath@@@@6B@	; ScriptRegistrant<RA_DriverDeath>::`vftable'
PUBLIC	?RA_DriverDeath_Registrant@@3V?$ScriptRegistrant@VRA_DriverDeath@@@@A ; RA_DriverDeath_Registrant
PUBLIC	??_7?$ScriptRegistrant@VRA_Conyard_Repair@@@@6B@ ; ScriptRegistrant<RA_Conyard_Repair>::`vftable'
PUBLIC	?RA_Conyard_Repair_Registrant@@3V?$ScriptRegistrant@VRA_Conyard_Repair@@@@A ; RA_Conyard_Repair_Registrant
PUBLIC	??_C@_0BL@GCKCFGBE@Repair_Frequency?$DN1?40?3float?$AA@ ; `string'
PUBLIC	??_C@_0BC@PLCPOBGK@RA_Conyard_Repair?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@6B@ ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::`vftable'
PUBLIC	?RA_ObjectDeath_OnDeath_Registrant@@3V?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@A ; RA_ObjectDeath_OnDeath_Registrant
PUBLIC	??_C@_0BE@PJCHNJBB@Preset?$DNblank?3string?$AA@	; `string'
PUBLIC	??_C@_0BH@LIIDEAGO@RA_ObjectDeath_OnDeath?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@6B@ ; ScriptRegistrant<RA_Demolition_Truck_Improved>::`vftable'
PUBLIC	?RA_Demolition_Truck_Improved_Registrant@@3V?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@A ; RA_Demolition_Truck_Improved_Registrant
PUBLIC	??_C@_0GO@KODEMHGD@Explosion?$DNExplosion_Invis_Nuke?3s@ ; `string'
PUBLIC	??_C@_0BN@MFAOB@RA_Demolition_Truck_Improved?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_CTF_Zone@@@@6B@	; ScriptRegistrant<RA_CTF_Zone>::`vftable'
PUBLIC	?RA_CTF_Zone_Registrant@@3V?$ScriptRegistrant@VRA_CTF_Zone@@@@A ; RA_CTF_Zone_Registrant
PUBLIC	??_C@_0DI@COAKFENF@Team_ID?$DN0?3int?0Max_Capture?$DN5?3int?0@ ; `string'
PUBLIC	??_C@_0M@KMOGJHIB@RA_CTF_Zone?$AA@		; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@6B@ ; ScriptRegistrant<RA_MAD_Tank_Improved>::`vftable'
PUBLIC	?RA_MAD_Tank_Improved_Registrant@@3V?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@A ; RA_MAD_Tank_Improved_Registrant
PUBLIC	??_C@_0PC@DFICKEC@Attach_Model?$DNpistons?3string?0Depl@ ; `string'
PUBLIC	??_C@_0BF@IFEFMCNH@RA_MAD_Tank_Improved?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@6B@ ; ScriptRegistrant<RA_Conyard_Controller_Improved>::`vftable'
PUBLIC	?RA_Conyard_Controller_Improved_Registrant@@3V?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@A ; RA_Conyard_Controller_Improved_Registrant
PUBLIC	??_C@_0HE@HNENHIFJ@Team?$DN0?3int?0Preset1?$DNblank?3string?0@ ; `string'
PUBLIC	??_C@_0BP@NHCGCDLK@RA_Conyard_Controller_Improved?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@6B@ ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::`vftable'
PUBLIC	?RA_Conyard_Controller_Improved_2_Registrant@@3V?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@A ; RA_Conyard_Controller_Improved_2_Registrant
PUBLIC	??_C@_0LD@FLGPMNPO@Team?$DN0?3int?0Preset1?$DNblank?3string?0@ ; `string'
PUBLIC	??_C@_0CB@DGNNNNJK@RA_Conyard_Controller_Improved_2@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Building_DeathSound@@@@6B@ ; ScriptRegistrant<RA_Building_DeathSound>::`vftable'
PUBLIC	?RA_Building_DeathSound_Registrant@@3V?$ScriptRegistrant@VRA_Building_DeathSound@@@@A ; RA_Building_DeathSound_Registrant
PUBLIC	??_C@_0EM@CCCKBBEG@HalfSound?$DNExploSound_Bldg_Half?3s@ ; `string'
PUBLIC	??_C@_0BH@KNBAGKAE@RA_Building_DeathSound?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@6B@ ; ScriptRegistrant<RA_Base_Defense_Simple>::`vftable'
PUBLIC	?RA_Base_Defense_Simple_Registrant@@3V?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@A ; RA_Base_Defense_Simple_Registrant
PUBLIC	??_C@_0GI@FBDKCOCM@MinRange?$DN0?40?3float?0MaxRange?$DN100?4@ ; `string'
PUBLIC	??_C@_0BH@FGGFMFIJ@RA_Base_Defense_Simple?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@6B@ ; ScriptRegistrant<RA_Base_Defense_Powered>::`vftable'
PUBLIC	?RA_Base_Defense_Powered_Registrant@@3V?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@A ; RA_Base_Defense_Powered_Registrant
PUBLIC	??_C@_0BI@MCHHNLJI@RA_Base_Defense_Powered?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@6B@ ; ScriptRegistrant<RA_Base_Defense_Chargeup>::`vftable'
PUBLIC	?RA_Base_Defense_Chargeup_Registrant@@3V?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@A ; RA_Base_Defense_Chargeup_Registrant
PUBLIC	??_C@_0IN@EAGPGNEA@MinRange?$DN0?40?3float?0MaxRange?$DN100?4@ ; `string'
PUBLIC	??_C@_0BJ@OBJICIJE@RA_Base_Defense_Chargeup?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Vehicle_Regen@@@@6B@	; ScriptRegistrant<RA_Vehicle_Regen>::`vftable'
PUBLIC	?RA_Vehicle_Regen_Registrant@@3V?$ScriptRegistrant@VRA_Vehicle_Regen@@@@A ; RA_Vehicle_Regen_Registrant
PUBLIC	??_C@_0EF@NHEDFBAP@Percentage?$DN0?45?3float?0Heal?$DN1?40?3fl@ ; `string'
PUBLIC	??_C@_0BB@PFPIFCDO@RA_Vehicle_Regen?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Thief@@@@6B@		; ScriptRegistrant<RA_Thief>::`vftable'
PUBLIC	?RA_Thief_Registrant@@3V?$ScriptRegistrant@VRA_Thief@@@@A ; RA_Thief_Registrant
PUBLIC	??_C@_0CO@OHINKJD@Enter_Message?$DN357753?3int?0Percent@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Thief_Improved@@@@6B@ ; ScriptRegistrant<RA_Thief_Improved>::`vftable'
PUBLIC	?RA_Thief_Improved_Registrant@@3V?$ScriptRegistrant@VRA_Thief_Improved@@@@A ; RA_Thief_Improved_Registrant
PUBLIC	??_C@_0DL@PJDADANK@Enter_Message?$DN357753?3int?0Percent@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@6B@ ; ScriptRegistrant<RA_Credit_Theft_Zone>::`vftable'
PUBLIC	?RA_Credit_Theft_Zone_Registrant@@3V?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@A ; RA_Credit_Theft_Zone_Registrant
PUBLIC	??_C@_0CE@MCCMNKMM@Enter_Message?$DN357753?3int?0Team?$DN0?3@ ; `string'
PUBLIC	??_C@_0BF@HBHNBOBB@RA_Credit_Theft_Zone?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@6B@ ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::`vftable'
PUBLIC	?RA_Credit_Theft_Zone_Timer_Registrant@@3V?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@A ; RA_Credit_Theft_Zone_Timer_Registrant
PUBLIC	??_C@_0CP@JNDADJCE@Enter_Message?$DN357753?3int?0Team?$DN0?3@ ; `string'
PUBLIC	??_C@_0BL@JHMFHJBJ@RA_Credit_Theft_Zone_Timer?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@6B@ ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::`vftable'
PUBLIC	?RA_DestroyNearest_OnDeath_Registrant@@3V?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@A ; RA_DestroyNearest_OnDeath_Registrant
PUBLIC	??_C@_0BD@OEHGDLOH@Preset_Name?3string?$AA@	; `string'
PUBLIC	??_C@_0BK@OLAFLKMD@RA_DestroyNearest_OnDeath?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Ore_Truck@@@@6B@	; ScriptRegistrant<RA_Ore_Truck>::`vftable'
PUBLIC	?RA_Ore_Truck_Registrant@@3V?$ScriptRegistrant@VRA_Ore_Truck@@@@A ; RA_Ore_Truck_Registrant
PUBLIC	??_C@_0IA@KPNFALHO@Field_Enter?$DN456654?3int?0Field_Exi@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Ore_Truck_2@@@@6B@	; ScriptRegistrant<RA_Ore_Truck_2>::`vftable'
PUBLIC	?RA_Ore_Truck_2_Registrant@@3V?$ScriptRegistrant@VRA_Ore_Truck_2@@@@A ; RA_Ore_Truck_2_Registrant
PUBLIC	??_C@_0KH@BNIPDAMN@Field_Enter?$DN456654?3int?0Field_Exi@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Ore_Field@@@@6B@	; ScriptRegistrant<RA_Ore_Field>::`vftable'
PUBLIC	?RA_Ore_Field_Registrant@@3V?$ScriptRegistrant@VRA_Ore_Field@@@@A ; RA_Ore_Field_Registrant
PUBLIC	??_C@_0DE@MOLFFHGO@Field_Value?$DN700?3int?0Enter?$DN456654@ ; `string'
PUBLIC	??_C@_0N@CECIAOFO@RA_Ore_Field?$AA@		; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@6B@ ; ScriptRegistrant<RA_Ore_Delivery_Zone>::`vftable'
PUBLIC	?RA_Ore_Delivery_Zone_Registrant@@3V?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@A ; RA_Ore_Delivery_Zone_Registrant
PUBLIC	??_C@_0BI@MOLJAJBM@Team?$DN0?3int?0Enter?$DN321654?$AA@ ; `string'
PUBLIC	??_C@_0BF@EMNABKEN@RA_Ore_Delivery_Zone?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@6B@ ; ScriptRegistrant<RA_Vehicle_Team_Set>::`vftable'
PUBLIC	?RA_Vehicle_Team_Set_Registrant@@3V?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@A ; RA_Vehicle_Team_Set_Registrant
PUBLIC	??_C@_0BE@KJDBMHAJ@RA_Vehicle_Team_Set?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@6B@ ; ScriptRegistrant<RA_Vehicle_Team_Timer>::`vftable'
PUBLIC	?RA_Vehicle_Team_Timer_Registrant@@3V?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@A ; RA_Vehicle_Team_Timer_Registrant
PUBLIC	??_7?$ScriptRegistrant@VRA_Visible_Driver@@@@6B@ ; ScriptRegistrant<RA_Visible_Driver>::`vftable'
PUBLIC	?RA_Visible_Driver_Registrant@@3V?$ScriptRegistrant@VRA_Visible_Driver@@@@A ; RA_Visible_Driver_Registrant
PUBLIC	??_C@_0CJ@BDGDBJII@BoneName?$DNseat0?3string?0Message?$DN47@ ; `string'
PUBLIC	??_C@_0BC@IPDMJLDP@RA_Visible_Driver?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Vision_Control@@@@6B@ ; ScriptRegistrant<RA_Vision_Control>::`vftable'
PUBLIC	?RA_Vision_Control_Registrant@@3V?$ScriptRegistrant@VRA_Vision_Control@@@@A ; RA_Vision_Control_Registrant
PUBLIC	??_C@_0CF@LECGGIMJ@FogController?$DNRA_Game_Manager?3st@ ; `string'
PUBLIC	??_C@_0BC@KHDMLJMG@RA_Vision_Control?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Vision_Control_2@@@@6B@ ; ScriptRegistrant<RA_Vision_Control_2>::`vftable'
PUBLIC	?RA_Vision_Control_2_Registrant@@3V?$ScriptRegistrant@VRA_Vision_Control_2@@@@A ; RA_Vision_Control_2_Registrant
PUBLIC	??_C@_0ID@BNLLNEKL@FogController?$DNRA_Game_Manager?3st@ ; `string'
PUBLIC	??_C@_0BE@KFINOBCA@RA_Vision_Control_2?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@6B@ ; ScriptRegistrant<RA_Fog_Level_Settings>::`vftable'
PUBLIC	?RA_Fog_Level_Settings_Registrant@@3V?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@A ; RA_Fog_Level_Settings_Registrant
PUBLIC	??_C@_0DG@KNDOJIGM@FogEnable?$DN1?3int?0FogMin?$DN200?40?3flo@ ; `string'
PUBLIC	??_C@_0BG@GOFBAMMF@RA_Fog_Level_Settings?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Missile_Beacon@@@@6B@ ; ScriptRegistrant<RA_Missile_Beacon>::`vftable'
PUBLIC	?RA_Missile_Beacon_Registrant@@3V?$ScriptRegistrant@VRA_Missile_Beacon@@@@A ; RA_Missile_Beacon_Registrant
PUBLIC	??_C@_0BG@IMIJHAEH@SiloPresetName?3string?$AA@	; `string'
PUBLIC	??_C@_0BC@BBPABDKJ@RA_Missile_Beacon?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@6B@ ; ScriptRegistrant<RA_Superweapon_Beacon>::`vftable'
PUBLIC	?RA_Superweapon_Beacon_Registrant@@3V?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@A ; RA_Superweapon_Beacon_Registrant
PUBLIC	??_C@_0BG@NGCENKPP@RA_Superweapon_Beacon?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Beacon_Terminal@@@@6B@ ; ScriptRegistrant<RA_Beacon_Terminal>::`vftable'
PUBLIC	?RA_Beacon_Terminal_Registrant@@3V?$ScriptRegistrant@VRA_Beacon_Terminal@@@@A ; RA_Beacon_Terminal_Registrant
PUBLIC	??_C@_0HD@BADKHFBM@BeaconPowerup?3string?0BeaconReady@ ; `string'
PUBLIC	??_C@_0BD@LBKPOLB@RA_Beacon_Terminal?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@6B@ ; ScriptRegistrant<RA_Beacon_Terminal_2>::`vftable'
PUBLIC	?RA_Beacon_Terminal_2_Registrant@@3V?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@A ; RA_Beacon_Terminal_2_Registrant
PUBLIC	??_C@_0JF@BICBCKDG@BeaconPowerup?3string?0BeaconReady@ ; `string'
PUBLIC	??_C@_0BF@CNELHGAE@RA_Beacon_Terminal_2?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Beacon_Timer@@@@6B@	; ScriptRegistrant<RA_Beacon_Timer>::`vftable'
PUBLIC	?RA_Beacon_Timer_Registrant@@3V?$ScriptRegistrant@VRA_Beacon_Timer@@@@A ; RA_Beacon_Timer_Registrant
PUBLIC	??_7?$ScriptRegistrant@VRA_Missile_Control@@@@6B@ ; ScriptRegistrant<RA_Missile_Control>::`vftable'
PUBLIC	?RA_Missile_Control_Registrant@@3V?$ScriptRegistrant@VRA_Missile_Control@@@@A ; RA_Missile_Control_Registrant
PUBLIC	??_C@_0BF@CJIFCPNA@AnimationName?3string?$AA@	; `string'
PUBLIC	??_C@_0BD@IOKOIMBG@RA_Missile_Control?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Missile_Controller@@@@6B@ ; ScriptRegistrant<RA_Missile_Controller>::`vftable'
PUBLIC	?RA_Missile_Controller_Registrant@@3V?$ScriptRegistrant@VRA_Missile_Controller@@@@A ; RA_Missile_Controller_Registrant
PUBLIC	??_C@_0DA@KHMJHJGK@SiloPresetName?3string?0TerminalPr@ ; `string'
PUBLIC	??_C@_0BG@JMBGNMOA@RA_Missile_Controller?$AA@	; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@6B@ ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::`vftable'
PUBLIC	?RA_Demolition_Truck_Retarded_Registrant@@3V?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@A ; RA_Demolition_Truck_Retarded_Registrant
PUBLIC	??_C@_0BN@OOBBAPPJ@RA_Demolition_Truck_Retarded?$AA@ ; `string'
PUBLIC	??_7?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@6B@ ; ScriptRegistrant<RA_MAD_Tank_Devolved>::`vftable'
PUBLIC	?RA_MAD_Tank_Devolved_Registrant@@3V?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@A ; RA_MAD_Tank_Devolved_Registrant
PUBLIC	??_C@_0BCB@FLGFMEHB@Attach_Model?$DNpistons?3string?0Depl@ ; `string'
PUBLIC	??_C@_0BF@DMNHGAJK@RA_MAD_Tank_Devolved?$AA@	; `string'
PUBLIC	??_C@_0EJ@ENMBJFB@SList?$DMstruct?5MultiKeyHookScriptI@ ; `string'
PUBLIC	??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@ ; `string'
PUBLIC	??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ ; `string'
PUBLIC	??_C@_0EJ@OIGECPDF@SList?$DMstruct?5MultiKeyHookScriptI@ ; `string'
PUBLIC	??_C@_0EM@PPENJFKC@SList?$DMstruct?5MultiKeyHookScriptI@ ; `string'
PUBLIC	??_C@_0EH@CGJBMJBC@SList?$DMstruct?5MultiKeyHookScriptI@ ; `string'
PUBLIC	??_C@_0EL@MPFHHNNA@SList?$DMstruct?5MultiKeyHookScriptI@ ; `string'
PUBLIC	??_C@_0EO@OJGPEJGC@SList?$DMstruct?5MultiKeyHookScriptI@ ; `string'
PUBLIC	??_C@_0EN@HIHNAGN@SList?$DMstruct?5MultiKeyHookScriptI@ ; `string'
PUBLIC	??_C@_0DF@MHNGCFKE@ScriptRegistrant?$DMclass?5RA_Repair@ ; `string'
PUBLIC	??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@ ; `string'
PUBLIC	??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ ; `string'
PUBLIC	??_C@_0DB@DAMBEEDH@ScriptRegistrant?$DMclass?5RA_Repair@ ; `string'
PUBLIC	??_C@_0DA@JOAAEHEG@ScriptRegistrant?$DMclass?5RA_Infant@ ; `string'
PUBLIC	??_C@_0DD@PDBLKIMC@ScriptRegistrant?$DMclass?5RA_Infant@ ; `string'
PUBLIC	??_C@_0DA@BKCNMBIJ@ScriptRegistrant?$DMclass?5RA_Helipa@ ; `string'
PUBLIC	??_C@_0CN@FILGJJPD@ScriptRegistrant?$DMclass?5RA_MineLa@ ; `string'
PUBLIC	??_C@_0CI@OFDNLEKC@ScriptRegistrant?$DMclass?5RA_Mine?$DO?3@ ; `string'
PUBLIC	??_C@_0DA@BLJNGFMB@ScriptRegistrant?$DMclass?5RA_Mine_M@ ; `string'
PUBLIC	??_C@_0DI@HEBCOBOO@ScriptRegistrant?$DMclass?5RA_Object@ ; `string'
PUBLIC	??_C@_0CO@FECDCEFA@ScriptRegistrant?$DMclass?5RA_Naval_@ ; `string'
PUBLIC	??_C@_0DE@DMMBPLKA@ScriptRegistrant?$DMclass?5RA_Naval_@ ; `string'
PUBLIC	??_C@_0CO@IKNKONHB@ScriptRegistrant?$DMclass?5RA_Naval_@ ; `string'
PUBLIC	??_C@_0CO@BKDIHCIG@ScriptRegistrant?$DMclass?5RA_Naval_@ ; `string'
PUBLIC	??_C@_0DD@PPADHAPK@ScriptRegistrant?$DMclass?5RA_Damage@ ; `string'
PUBLIC	??_C@_0DG@FJOAKOGM@ScriptRegistrant?$DMclass?5RA_GameSt@ ; `string'
PUBLIC	??_C@_0CP@MPBGJGO@ScriptRegistrant?$DMclass?5RA_Driver@ ; `string'
PUBLIC	??_C@_0DC@HDNHJEMC@ScriptRegistrant?$DMclass?5RA_Conyar@ ; `string'
PUBLIC	??_C@_0DH@EICDCNJJ@ScriptRegistrant?$DMclass?5RA_Object@ ; `string'
PUBLIC	??_C@_0DN@GDFHIJNN@ScriptRegistrant?$DMclass?5RA_Demoli@ ; `string'
PUBLIC	??_C@_0CM@HJNEEDIG@ScriptRegistrant?$DMclass?5RA_CTF_Zo@ ; `string'
PUBLIC	??_C@_0DF@GEBNGCLA@ScriptRegistrant?$DMclass?5RA_MAD_Ta@ ; `string'
PUBLIC	??_C@_0DP@DIHNBFIL@ScriptRegistrant?$DMclass?5RA_Conyar@ ; `string'
PUBLIC	??_C@_0EB@KDLCFKAA@ScriptRegistrant?$DMclass?5RA_Conyar@ ; `string'
PUBLIC	??_C@_0DH@GEODKHLE@ScriptRegistrant?$DMclass?5RA_Buildi@ ; `string'
PUBLIC	??_C@_0DH@EBJBKDNK@ScriptRegistrant?$DMclass?5RA_Base_D@ ; `string'
PUBLIC	??_C@_0DI@EONKOGFH@ScriptRegistrant?$DMclass?5RA_Base_D@ ; `string'
PUBLIC	??_C@_0DJ@LHKLAEBI@ScriptRegistrant?$DMclass?5RA_Base_D@ ; `string'
PUBLIC	??_C@_0DB@HBBADMPJ@ScriptRegistrant?$DMclass?5RA_Vehicl@ ; `string'
PUBLIC	??_C@_0CJ@BFDGENND@ScriptRegistrant?$DMclass?5RA_Thief?$DO@ ; `string'
PUBLIC	??_C@_0DC@BEAEMMDO@ScriptRegistrant?$DMclass?5RA_Thief_@ ; `string'
PUBLIC	??_C@_0DF@OLPNMLBL@ScriptRegistrant?$DMclass?5RA_Credit@ ; `string'
PUBLIC	??_C@_0DL@ILMOPHDA@ScriptRegistrant?$DMclass?5RA_Credit@ ; `string'
PUBLIC	??_C@_0DK@BEMBIJEP@ScriptRegistrant?$DMclass?5RA_Destro@ ; `string'
PUBLIC	??_C@_0CN@HOFDPHIL@ScriptRegistrant?$DMclass?5RA_Ore_Tr@ ; `string'
PUBLIC	??_C@_0CP@ONLGJPHK@ScriptRegistrant?$DMclass?5RA_Ore_Tr@ ; `string'
PUBLIC	??_C@_0CN@OOFGBDLJ@ScriptRegistrant?$DMclass?5RA_Ore_Fi@ ; `string'
PUBLIC	??_C@_0DF@GFEJNBFO@ScriptRegistrant?$DMclass?5RA_Ore_De@ ; `string'
PUBLIC	??_C@_0DE@FPIKJKNI@ScriptRegistrant?$DMclass?5RA_Vehicl@ ; `string'
PUBLIC	??_C@_0DG@OFBDFIFO@ScriptRegistrant?$DMclass?5RA_Vehicl@ ; `string'
PUBLIC	??_C@_0DC@LAAHNECH@ScriptRegistrant?$DMclass?5RA_Visibl@ ; `string'
PUBLIC	??_C@_0DC@NKPOEDJG@ScriptRegistrant?$DMclass?5RA_Vision@ ; `string'
PUBLIC	??_C@_0DE@NONGCAFO@ScriptRegistrant?$DMclass?5RA_Vision@ ; `string'
PUBLIC	??_C@_0DG@OAPEGHL@ScriptRegistrant?$DMclass?5RA_Fog_Le@ ; `string'
PUBLIC	??_C@_0DC@KFIHPDDA@ScriptRegistrant?$DMclass?5RA_Missil@ ; `string'
PUBLIC	??_C@_0DG@DNKLBNDI@ScriptRegistrant?$DMclass?5RA_Superw@ ; `string'
PUBLIC	??_C@_0DD@IDCPALPD@ScriptRegistrant?$DMclass?5RA_Beacon@ ; `string'
PUBLIC	??_C@_0DF@LOFLCPMP@ScriptRegistrant?$DMclass?5RA_Beacon@ ; `string'
PUBLIC	??_C@_0DA@GMKHJBLH@ScriptRegistrant?$DMclass?5RA_Beacon@ ; `string'
PUBLIC	??_C@_0DD@HHNIJMOD@ScriptRegistrant?$DMclass?5RA_Missil@ ; `string'
PUBLIC	??_C@_0DG@BJICAEGO@ScriptRegistrant?$DMclass?5RA_Missil@ ; `string'
PUBLIC	??_C@_0DN@NCAOAPCC@ScriptRegistrant?$DMclass?5RA_Demoli@ ; `string'
PUBLIC	??_C@_0DF@OGDKEDLJ@ScriptRegistrant?$DMclass?5RA_MAD_Ta@ ; `string'
PUBLIC	?instancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@4V3@A ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::instancex
PUBLIC	??_B?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@51 ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::`local static guard'
PUBLIC	??_C@_0EB@IOGKEECK@ObjectPoolClass?$DMclass?5GenericSLN@ ; `string'
PUBLIC	??_C@_0FF@NOANHENP@?$CFd?5memory?5leaks?5found?5in?5ObjectP@ ; `string'
PUBLIC	??_C@_0DL@BOENBDGI@ObjectPoolClass?$DMclass?5GenericSLN@ ; `string'
PUBLIC	?oh_dear@?7???R?$SafeDataClass@H@@QBEAAHXZ@4HA	; `SafeDataClass<int>::operator()'::`8'::oh_dear
PUBLIC	??_R4ScriptFactory@@6B@				; ScriptFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVScriptFactory@@@8			; ScriptFactory `RTTI Type Descriptor'
PUBLIC	??_R3ScriptFactory@@8				; ScriptFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ScriptFactory@@8				; ScriptFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ScriptFactory@@8			; ScriptFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ScriptClass@@6B@				; ScriptClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVScriptClass@@@8				; ScriptClass `RTTI Type Descriptor'
PUBLIC	??_R3ScriptClass@@8				; ScriptClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ScriptClass@@8				; ScriptClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ScriptClass@@8			; ScriptClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@GameObjObserverClass@@8		; GameObjObserverClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVGameObjObserverClass@@@8		; GameObjObserverClass `RTTI Type Descriptor'
PUBLIC	??_R3GameObjObserverClass@@8			; GameObjObserverClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GameObjObserverClass@@8			; GameObjObserverClass::`RTTI Base Class Array'
PUBLIC	??_R4GameObjObserverClass@@6B@			; GameObjObserverClass::`RTTI Complete Object Locator'
PUBLIC	??_R4ScriptImpClass@@6B@			; ScriptImpClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVScriptImpClass@@@8			; ScriptImpClass `RTTI Type Descriptor'
PUBLIC	??_R3ScriptImpClass@@8				; ScriptImpClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ScriptImpClass@@8				; ScriptImpClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ScriptImpClass@@8			; ScriptImpClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ThreadClass@@6B@				; ThreadClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVThreadClass@@@8				; ThreadClass `RTTI Type Descriptor'
PUBLIC	??_R3ThreadClass@@8				; ThreadClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ThreadClass@@8				; ThreadClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ThreadClass@@8			; ThreadClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4INIClass@@6B@				; INIClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVINIClass@@@8				; INIClass `RTTI Type Descriptor'
PUBLIC	??_R3INIClass@@8				; INIClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2INIClass@@8				; INIClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@INIClass@@8			; INIClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@PostLoadableClass@@8		; PostLoadableClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVPostLoadableClass@@@8			; PostLoadableClass `RTTI Type Descriptor'
PUBLIC	??_R3PostLoadableClass@@8			; PostLoadableClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PostLoadableClass@@8			; PostLoadableClass::`RTTI Base Class Array'
PUBLIC	??_R4PostLoadableClass@@6B@			; PostLoadableClass::`RTTI Complete Object Locator'
PUBLIC	??_R4ReferencerClass@@6B@			; ReferencerClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVReferencerClass@@@8			; ReferencerClass `RTTI Type Descriptor'
PUBLIC	??_R3ReferencerClass@@8				; ReferencerClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReferencerClass@@8				; ReferencerClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReferencerClass@@8		; ReferencerClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JFW_Key_Hook_Base@@6B@			; JFW_Key_Hook_Base::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJFW_Key_Hook_Base@@@8			; JFW_Key_Hook_Base `RTTI Type Descriptor'
PUBLIC	??_R3JFW_Key_Hook_Base@@8			; JFW_Key_Hook_Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JFW_Key_Hook_Base@@8			; JFW_Key_Hook_Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JFW_Key_Hook_Base@@8		; JFW_Key_Hook_Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4MultiKeyHookScriptImpClass@@6B@		; MultiKeyHookScriptImpClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMultiKeyHookScriptImpClass@@@8		; MultiKeyHookScriptImpClass `RTTI Type Descriptor'
PUBLIC	??_R3MultiKeyHookScriptImpClass@@8		; MultiKeyHookScriptImpClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MultiKeyHookScriptImpClass@@8		; MultiKeyHookScriptImpClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MultiKeyHookScriptImpClass@@8	; MultiKeyHookScriptImpClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@@8 ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct> `RTTI Type Descriptor'
PUBLIC	??_R3?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8 ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8 ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8 ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4JFW_Object_Created_Hook_Base@@6B@		; JFW_Object_Created_Hook_Base::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVJFW_Object_Created_Hook_Base@@@8	; JFW_Object_Created_Hook_Base `RTTI Type Descriptor'
PUBLIC	??_R3JFW_Object_Created_Hook_Base@@8		; JFW_Object_Created_Hook_Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2JFW_Object_Created_Hook_Base@@8		; JFW_Object_Created_Hook_Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@JFW_Object_Created_Hook_Base@@8	; JFW_Object_Created_Hook_Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Repair_Controller@@6B@			; RA_Repair_Controller::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Repair_Controller@@@8		; RA_Repair_Controller `RTTI Type Descriptor'
PUBLIC	??_R3RA_Repair_Controller@@8			; RA_Repair_Controller::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Repair_Controller@@8			; RA_Repair_Controller::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Repair_Controller@@8		; RA_Repair_Controller::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Repair_Script@@6B@			; RA_Repair_Script::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Repair_Script@@@8			; RA_Repair_Script `RTTI Type Descriptor'
PUBLIC	??_R3RA_Repair_Script@@8			; RA_Repair_Script::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Repair_Script@@8			; RA_Repair_Script::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Repair_Script@@8		; RA_Repair_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Infantry_Spy@@6B@			; RA_Infantry_Spy::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Infantry_Spy@@@8			; RA_Infantry_Spy `RTTI Type Descriptor'
PUBLIC	??_R3RA_Infantry_Spy@@8				; RA_Infantry_Spy::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Infantry_Spy@@8				; RA_Infantry_Spy::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Infantry_Spy@@8		; RA_Infantry_Spy::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Infantry_NotSpy@@6B@			; RA_Infantry_NotSpy::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Infantry_NotSpy@@@8			; RA_Infantry_NotSpy `RTTI Type Descriptor'
PUBLIC	??_R3RA_Infantry_NotSpy@@8			; RA_Infantry_NotSpy::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Infantry_NotSpy@@8			; RA_Infantry_NotSpy::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Infantry_NotSpy@@8		; RA_Infantry_NotSpy::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Helipad_Zone@@6B@			; RA_Helipad_Zone::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Helipad_Zone@@@8			; RA_Helipad_Zone `RTTI Type Descriptor'
PUBLIC	??_R3RA_Helipad_Zone@@8				; RA_Helipad_Zone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Helipad_Zone@@8				; RA_Helipad_Zone::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Helipad_Zone@@8		; RA_Helipad_Zone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_MineLayer@@6B@				; RA_MineLayer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_MineLayer@@@8			; RA_MineLayer `RTTI Type Descriptor'
PUBLIC	??_R3RA_MineLayer@@8				; RA_MineLayer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_MineLayer@@8				; RA_MineLayer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_MineLayer@@8			; RA_MineLayer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Mine@@6B@				; RA_Mine::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Mine@@@8				; RA_Mine `RTTI Type Descriptor'
PUBLIC	??_R3RA_Mine@@8					; RA_Mine::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Mine@@8					; RA_Mine::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Mine@@8			; RA_Mine::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Mine_Manager@@6B@			; RA_Mine_Manager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Mine_Manager@@@8			; RA_Mine_Manager `RTTI Type Descriptor'
PUBLIC	??_R3RA_Mine_Manager@@8				; RA_Mine_Manager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Mine_Manager@@8				; RA_Mine_Manager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Mine_Manager@@8		; RA_Mine_Manager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_ObjectDeath_OnCreate@@6B@		; RA_ObjectDeath_OnCreate::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_ObjectDeath_OnCreate@@@8		; RA_ObjectDeath_OnCreate `RTTI Type Descriptor'
PUBLIC	??_R3RA_ObjectDeath_OnCreate@@8			; RA_ObjectDeath_OnCreate::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_ObjectDeath_OnCreate@@8			; RA_ObjectDeath_OnCreate::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_ObjectDeath_OnCreate@@8	; RA_ObjectDeath_OnCreate::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Naval_Yard@@6B@				; RA_Naval_Yard::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Naval_Yard@@@8			; RA_Naval_Yard `RTTI Type Descriptor'
PUBLIC	??_R3RA_Naval_Yard@@8				; RA_Naval_Yard::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Naval_Yard@@8				; RA_Naval_Yard::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Naval_Yard@@8			; RA_Naval_Yard::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Naval_PT_Pokable@@6B@			; RA_Naval_PT_Pokable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Naval_PT_Pokable@@@8			; RA_Naval_PT_Pokable `RTTI Type Descriptor'
PUBLIC	??_R3RA_Naval_PT_Pokable@@8			; RA_Naval_PT_Pokable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Naval_PT_Pokable@@8			; RA_Naval_PT_Pokable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Naval_PT_Pokable@@8		; RA_Naval_PT_Pokable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Naval_Unit@@6B@				; RA_Naval_Unit::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Naval_Unit@@@8			; RA_Naval_Unit `RTTI Type Descriptor'
PUBLIC	??_R3RA_Naval_Unit@@8				; RA_Naval_Unit::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Naval_Unit@@8				; RA_Naval_Unit::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Naval_Unit@@8			; RA_Naval_Unit::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Naval_Zone@@6B@				; RA_Naval_Zone::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Naval_Zone@@@8			; RA_Naval_Zone `RTTI Type Descriptor'
PUBLIC	??_R3RA_Naval_Zone@@8				; RA_Naval_Zone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Naval_Zone@@8				; RA_Naval_Zone::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Naval_Zone@@8			; RA_Naval_Zone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Damaged_Credits@@6B@			; RA_Damaged_Credits::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Damaged_Credits@@@8			; RA_Damaged_Credits `RTTI Type Descriptor'
PUBLIC	??_R3RA_Damaged_Credits@@8			; RA_Damaged_Credits::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Damaged_Credits@@8			; RA_Damaged_Credits::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Damaged_Credits@@8		; RA_Damaged_Credits::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_GameStart_Detector@@6B@			; RA_GameStart_Detector::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_GameStart_Detector@@@8		; RA_GameStart_Detector `RTTI Type Descriptor'
PUBLIC	??_R3RA_GameStart_Detector@@8			; RA_GameStart_Detector::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_GameStart_Detector@@8			; RA_GameStart_Detector::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_GameStart_Detector@@8		; RA_GameStart_Detector::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_DriverDeath@@6B@			; RA_DriverDeath::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_DriverDeath@@@8			; RA_DriverDeath `RTTI Type Descriptor'
PUBLIC	??_R3RA_DriverDeath@@8				; RA_DriverDeath::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_DriverDeath@@8				; RA_DriverDeath::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_DriverDeath@@8			; RA_DriverDeath::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Conyard_Repair@@6B@			; RA_Conyard_Repair::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Conyard_Repair@@@8			; RA_Conyard_Repair `RTTI Type Descriptor'
PUBLIC	??_R3RA_Conyard_Repair@@8			; RA_Conyard_Repair::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Conyard_Repair@@8			; RA_Conyard_Repair::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Conyard_Repair@@8		; RA_Conyard_Repair::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_ObjectDeath_OnDeath@@6B@		; RA_ObjectDeath_OnDeath::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_ObjectDeath_OnDeath@@@8		; RA_ObjectDeath_OnDeath `RTTI Type Descriptor'
PUBLIC	??_R3RA_ObjectDeath_OnDeath@@8			; RA_ObjectDeath_OnDeath::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_ObjectDeath_OnDeath@@8			; RA_ObjectDeath_OnDeath::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_ObjectDeath_OnDeath@@8		; RA_ObjectDeath_OnDeath::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Demolition_Truck_Improved@@6B@		; RA_Demolition_Truck_Improved::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Demolition_Truck_Improved@@@8	; RA_Demolition_Truck_Improved `RTTI Type Descriptor'
PUBLIC	??_R3RA_Demolition_Truck_Improved@@8		; RA_Demolition_Truck_Improved::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Demolition_Truck_Improved@@8		; RA_Demolition_Truck_Improved::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Demolition_Truck_Improved@@8	; RA_Demolition_Truck_Improved::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_CTF_Zone@@6B@				; RA_CTF_Zone::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_CTF_Zone@@@8				; RA_CTF_Zone `RTTI Type Descriptor'
PUBLIC	??_R3RA_CTF_Zone@@8				; RA_CTF_Zone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_CTF_Zone@@8				; RA_CTF_Zone::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_CTF_Zone@@8			; RA_CTF_Zone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_MAD_Tank_Improved@@6B@			; RA_MAD_Tank_Improved::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_MAD_Tank_Improved@@@8		; RA_MAD_Tank_Improved `RTTI Type Descriptor'
PUBLIC	??_R3RA_MAD_Tank_Improved@@8			; RA_MAD_Tank_Improved::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_MAD_Tank_Improved@@8			; RA_MAD_Tank_Improved::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_MAD_Tank_Improved@@8		; RA_MAD_Tank_Improved::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Conyard_Controller_Improved@@6B@	; RA_Conyard_Controller_Improved::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Conyard_Controller_Improved@@@8	; RA_Conyard_Controller_Improved `RTTI Type Descriptor'
PUBLIC	??_R3RA_Conyard_Controller_Improved@@8		; RA_Conyard_Controller_Improved::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Conyard_Controller_Improved@@8		; RA_Conyard_Controller_Improved::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Conyard_Controller_Improved@@8	; RA_Conyard_Controller_Improved::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Conyard_Controller_Improved_2@@6B@	; RA_Conyard_Controller_Improved_2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Conyard_Controller_Improved_2@@@8	; RA_Conyard_Controller_Improved_2 `RTTI Type Descriptor'
PUBLIC	??_R3RA_Conyard_Controller_Improved_2@@8	; RA_Conyard_Controller_Improved_2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Conyard_Controller_Improved_2@@8	; RA_Conyard_Controller_Improved_2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Conyard_Controller_Improved_2@@8 ; RA_Conyard_Controller_Improved_2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Building_DeathSound@@6B@		; RA_Building_DeathSound::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Building_DeathSound@@@8		; RA_Building_DeathSound `RTTI Type Descriptor'
PUBLIC	??_R3RA_Building_DeathSound@@8			; RA_Building_DeathSound::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Building_DeathSound@@8			; RA_Building_DeathSound::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Building_DeathSound@@8		; RA_Building_DeathSound::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Base_Defense_Simple@@6B@		; RA_Base_Defense_Simple::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Base_Defense_Simple@@@8		; RA_Base_Defense_Simple `RTTI Type Descriptor'
PUBLIC	??_R3RA_Base_Defense_Simple@@8			; RA_Base_Defense_Simple::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Base_Defense_Simple@@8			; RA_Base_Defense_Simple::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Base_Defense_Simple@@8		; RA_Base_Defense_Simple::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Base_Defense_Powered@@6B@		; RA_Base_Defense_Powered::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Base_Defense_Powered@@@8		; RA_Base_Defense_Powered `RTTI Type Descriptor'
PUBLIC	??_R3RA_Base_Defense_Powered@@8			; RA_Base_Defense_Powered::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Base_Defense_Powered@@8			; RA_Base_Defense_Powered::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Base_Defense_Powered@@8	; RA_Base_Defense_Powered::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Base_Defense_Chargeup@@6B@		; RA_Base_Defense_Chargeup::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Base_Defense_Chargeup@@@8		; RA_Base_Defense_Chargeup `RTTI Type Descriptor'
PUBLIC	??_R3RA_Base_Defense_Chargeup@@8		; RA_Base_Defense_Chargeup::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Base_Defense_Chargeup@@8		; RA_Base_Defense_Chargeup::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Base_Defense_Chargeup@@8	; RA_Base_Defense_Chargeup::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Vehicle_Regen@@6B@			; RA_Vehicle_Regen::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Vehicle_Regen@@@8			; RA_Vehicle_Regen `RTTI Type Descriptor'
PUBLIC	??_R3RA_Vehicle_Regen@@8			; RA_Vehicle_Regen::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Vehicle_Regen@@8			; RA_Vehicle_Regen::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Vehicle_Regen@@8		; RA_Vehicle_Regen::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Thief@@6B@				; RA_Thief::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Thief@@@8				; RA_Thief `RTTI Type Descriptor'
PUBLIC	??_R3RA_Thief@@8				; RA_Thief::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Thief@@8				; RA_Thief::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Thief@@8			; RA_Thief::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Thief_Improved@@6B@			; RA_Thief_Improved::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Thief_Improved@@@8			; RA_Thief_Improved `RTTI Type Descriptor'
PUBLIC	??_R3RA_Thief_Improved@@8			; RA_Thief_Improved::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Thief_Improved@@8			; RA_Thief_Improved::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Thief_Improved@@8		; RA_Thief_Improved::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Credit_Theft_Zone@@6B@			; RA_Credit_Theft_Zone::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Credit_Theft_Zone@@@8		; RA_Credit_Theft_Zone `RTTI Type Descriptor'
PUBLIC	??_R3RA_Credit_Theft_Zone@@8			; RA_Credit_Theft_Zone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Credit_Theft_Zone@@8			; RA_Credit_Theft_Zone::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Credit_Theft_Zone@@8		; RA_Credit_Theft_Zone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Credit_Theft_Zone_Timer@@6B@		; RA_Credit_Theft_Zone_Timer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Credit_Theft_Zone_Timer@@@8		; RA_Credit_Theft_Zone_Timer `RTTI Type Descriptor'
PUBLIC	??_R3RA_Credit_Theft_Zone_Timer@@8		; RA_Credit_Theft_Zone_Timer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Credit_Theft_Zone_Timer@@8		; RA_Credit_Theft_Zone_Timer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Credit_Theft_Zone_Timer@@8	; RA_Credit_Theft_Zone_Timer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_DestroyNearest_OnDeath@@6B@		; RA_DestroyNearest_OnDeath::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_DestroyNearest_OnDeath@@@8		; RA_DestroyNearest_OnDeath `RTTI Type Descriptor'
PUBLIC	??_R3RA_DestroyNearest_OnDeath@@8		; RA_DestroyNearest_OnDeath::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_DestroyNearest_OnDeath@@8		; RA_DestroyNearest_OnDeath::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_DestroyNearest_OnDeath@@8	; RA_DestroyNearest_OnDeath::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Ore_Truck@@6B@				; RA_Ore_Truck::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Ore_Truck@@@8			; RA_Ore_Truck `RTTI Type Descriptor'
PUBLIC	??_R3RA_Ore_Truck@@8				; RA_Ore_Truck::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Ore_Truck@@8				; RA_Ore_Truck::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Ore_Truck@@8			; RA_Ore_Truck::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Ore_Truck_2@@6B@			; RA_Ore_Truck_2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Ore_Truck_2@@@8			; RA_Ore_Truck_2 `RTTI Type Descriptor'
PUBLIC	??_R3RA_Ore_Truck_2@@8				; RA_Ore_Truck_2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Ore_Truck_2@@8				; RA_Ore_Truck_2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Ore_Truck_2@@8			; RA_Ore_Truck_2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Ore_Field@@6B@				; RA_Ore_Field::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Ore_Field@@@8			; RA_Ore_Field `RTTI Type Descriptor'
PUBLIC	??_R3RA_Ore_Field@@8				; RA_Ore_Field::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Ore_Field@@8				; RA_Ore_Field::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Ore_Field@@8			; RA_Ore_Field::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Ore_Delivery_Zone@@6B@			; RA_Ore_Delivery_Zone::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Ore_Delivery_Zone@@@8		; RA_Ore_Delivery_Zone `RTTI Type Descriptor'
PUBLIC	??_R3RA_Ore_Delivery_Zone@@8			; RA_Ore_Delivery_Zone::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Ore_Delivery_Zone@@8			; RA_Ore_Delivery_Zone::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Ore_Delivery_Zone@@8		; RA_Ore_Delivery_Zone::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Vehicle_Team_Set@@6B@			; RA_Vehicle_Team_Set::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Vehicle_Team_Set@@@8			; RA_Vehicle_Team_Set `RTTI Type Descriptor'
PUBLIC	??_R3RA_Vehicle_Team_Set@@8			; RA_Vehicle_Team_Set::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Vehicle_Team_Set@@8			; RA_Vehicle_Team_Set::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Vehicle_Team_Set@@8		; RA_Vehicle_Team_Set::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Vehicle_Team_Timer@@6B@			; RA_Vehicle_Team_Timer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Vehicle_Team_Timer@@@8		; RA_Vehicle_Team_Timer `RTTI Type Descriptor'
PUBLIC	??_R3RA_Vehicle_Team_Timer@@8			; RA_Vehicle_Team_Timer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Vehicle_Team_Timer@@8			; RA_Vehicle_Team_Timer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Vehicle_Team_Timer@@8		; RA_Vehicle_Team_Timer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Visible_Driver@@6B@			; RA_Visible_Driver::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Visible_Driver@@@8			; RA_Visible_Driver `RTTI Type Descriptor'
PUBLIC	??_R3RA_Visible_Driver@@8			; RA_Visible_Driver::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Visible_Driver@@8			; RA_Visible_Driver::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Visible_Driver@@8		; RA_Visible_Driver::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Vision_Control@@6B@			; RA_Vision_Control::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Vision_Control@@@8			; RA_Vision_Control `RTTI Type Descriptor'
PUBLIC	??_R3RA_Vision_Control@@8			; RA_Vision_Control::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Vision_Control@@8			; RA_Vision_Control::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Vision_Control@@8		; RA_Vision_Control::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Vision_Control_2@@6B@			; RA_Vision_Control_2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Vision_Control_2@@@8			; RA_Vision_Control_2 `RTTI Type Descriptor'
PUBLIC	??_R3RA_Vision_Control_2@@8			; RA_Vision_Control_2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Vision_Control_2@@8			; RA_Vision_Control_2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Vision_Control_2@@8		; RA_Vision_Control_2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Fog_Level_Settings@@6B@			; RA_Fog_Level_Settings::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Fog_Level_Settings@@@8		; RA_Fog_Level_Settings `RTTI Type Descriptor'
PUBLIC	??_R3RA_Fog_Level_Settings@@8			; RA_Fog_Level_Settings::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Fog_Level_Settings@@8			; RA_Fog_Level_Settings::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Fog_Level_Settings@@8		; RA_Fog_Level_Settings::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Missile_Beacon@@6B@			; RA_Missile_Beacon::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Missile_Beacon@@@8			; RA_Missile_Beacon `RTTI Type Descriptor'
PUBLIC	??_R3RA_Missile_Beacon@@8			; RA_Missile_Beacon::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Missile_Beacon@@8			; RA_Missile_Beacon::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Missile_Beacon@@8		; RA_Missile_Beacon::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Beacon_Terminal@@6B@			; RA_Beacon_Terminal::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Beacon_Terminal@@@8			; RA_Beacon_Terminal `RTTI Type Descriptor'
PUBLIC	??_R3RA_Beacon_Terminal@@8			; RA_Beacon_Terminal::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Beacon_Terminal@@8			; RA_Beacon_Terminal::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Beacon_Terminal@@8		; RA_Beacon_Terminal::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Beacon_Terminal_2@@6B@			; RA_Beacon_Terminal_2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Beacon_Terminal_2@@@8		; RA_Beacon_Terminal_2 `RTTI Type Descriptor'
PUBLIC	??_R3RA_Beacon_Terminal_2@@8			; RA_Beacon_Terminal_2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Beacon_Terminal_2@@8			; RA_Beacon_Terminal_2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Beacon_Terminal_2@@8		; RA_Beacon_Terminal_2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Beacon_Timer@@6B@			; RA_Beacon_Timer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Beacon_Timer@@@8			; RA_Beacon_Timer `RTTI Type Descriptor'
PUBLIC	??_R3RA_Beacon_Timer@@8				; RA_Beacon_Timer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Beacon_Timer@@8				; RA_Beacon_Timer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Beacon_Timer@@8		; RA_Beacon_Timer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Missile_Control@@6B@			; RA_Missile_Control::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Missile_Control@@@8			; RA_Missile_Control `RTTI Type Descriptor'
PUBLIC	??_R3RA_Missile_Control@@8			; RA_Missile_Control::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Missile_Control@@8			; RA_Missile_Control::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Missile_Control@@8		; RA_Missile_Control::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Missile_Controller@@6B@			; RA_Missile_Controller::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Missile_Controller@@@8		; RA_Missile_Controller `RTTI Type Descriptor'
PUBLIC	??_R3RA_Missile_Controller@@8			; RA_Missile_Controller::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Missile_Controller@@8			; RA_Missile_Controller::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Missile_Controller@@8		; RA_Missile_Controller::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Demolition_Truck_Retarded@@6B@		; RA_Demolition_Truck_Retarded::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Demolition_Truck_Retarded@@@8	; RA_Demolition_Truck_Retarded `RTTI Type Descriptor'
PUBLIC	??_R3RA_Demolition_Truck_Retarded@@8		; RA_Demolition_Truck_Retarded::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Demolition_Truck_Retarded@@8		; RA_Demolition_Truck_Retarded::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Demolition_Truck_Retarded@@8	; RA_Demolition_Truck_Retarded::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_MAD_Tank_Devolved@@6B@			; RA_MAD_Tank_Devolved::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_MAD_Tank_Devolved@@@8		; RA_MAD_Tank_Devolved `RTTI Type Descriptor'
PUBLIC	??_R3RA_MAD_Tank_Devolved@@8			; RA_MAD_Tank_Devolved::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_MAD_Tank_Devolved@@8			; RA_MAD_Tank_Devolved::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_MAD_Tank_Devolved@@8		; RA_MAD_Tank_Devolved::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RA_Superweapon_Beacon@@6B@			; RA_Superweapon_Beacon::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRA_Superweapon_Beacon@@@8		; RA_Superweapon_Beacon `RTTI Type Descriptor'
PUBLIC	??_R3RA_Superweapon_Beacon@@8			; RA_Superweapon_Beacon::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RA_Superweapon_Beacon@@8			; RA_Superweapon_Beacon::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RA_Superweapon_Beacon@@8		; RA_Superweapon_Beacon::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Repair_Controller@@@@6B@ ; ScriptRegistrant<RA_Repair_Controller>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Repair_Controller@@@@@8 ; ScriptRegistrant<RA_Repair_Controller> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Repair_Controller@@@@8 ; ScriptRegistrant<RA_Repair_Controller>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Repair_Controller@@@@8 ; ScriptRegistrant<RA_Repair_Controller>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Repair_Controller@@@@8 ; ScriptRegistrant<RA_Repair_Controller>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Repair_Script@@@@6B@ ; ScriptRegistrant<RA_Repair_Script>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Repair_Script@@@@@8 ; ScriptRegistrant<RA_Repair_Script> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Repair_Script@@@@8	; ScriptRegistrant<RA_Repair_Script>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Repair_Script@@@@8	; ScriptRegistrant<RA_Repair_Script>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Repair_Script@@@@8 ; ScriptRegistrant<RA_Repair_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Infantry_Spy@@@@6B@	; ScriptRegistrant<RA_Infantry_Spy>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Infantry_Spy@@@@@8 ; ScriptRegistrant<RA_Infantry_Spy> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Infantry_Spy@@@@8	; ScriptRegistrant<RA_Infantry_Spy>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Infantry_Spy@@@@8	; ScriptRegistrant<RA_Infantry_Spy>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Infantry_Spy@@@@8 ; ScriptRegistrant<RA_Infantry_Spy>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@6B@ ; ScriptRegistrant<RA_Infantry_NotSpy>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@@8 ; ScriptRegistrant<RA_Infantry_NotSpy> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@8 ; ScriptRegistrant<RA_Infantry_NotSpy>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@8 ; ScriptRegistrant<RA_Infantry_NotSpy>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@8 ; ScriptRegistrant<RA_Infantry_NotSpy>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Helipad_Zone@@@@6B@	; ScriptRegistrant<RA_Helipad_Zone>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Helipad_Zone@@@@@8 ; ScriptRegistrant<RA_Helipad_Zone> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Helipad_Zone@@@@8	; ScriptRegistrant<RA_Helipad_Zone>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Helipad_Zone@@@@8	; ScriptRegistrant<RA_Helipad_Zone>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Helipad_Zone@@@@8 ; ScriptRegistrant<RA_Helipad_Zone>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_MineLayer@@@@6B@	; ScriptRegistrant<RA_MineLayer>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_MineLayer@@@@@8	; ScriptRegistrant<RA_MineLayer> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_MineLayer@@@@8	; ScriptRegistrant<RA_MineLayer>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_MineLayer@@@@8	; ScriptRegistrant<RA_MineLayer>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_MineLayer@@@@8 ; ScriptRegistrant<RA_MineLayer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Mine@@@@6B@		; ScriptRegistrant<RA_Mine>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Mine@@@@@8	; ScriptRegistrant<RA_Mine> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Mine@@@@8		; ScriptRegistrant<RA_Mine>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Mine@@@@8		; ScriptRegistrant<RA_Mine>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Mine@@@@8	; ScriptRegistrant<RA_Mine>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Mine_Manager@@@@6B@	; ScriptRegistrant<RA_Mine_Manager>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Mine_Manager@@@@@8 ; ScriptRegistrant<RA_Mine_Manager> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Mine_Manager@@@@8	; ScriptRegistrant<RA_Mine_Manager>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Mine_Manager@@@@8	; ScriptRegistrant<RA_Mine_Manager>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Mine_Manager@@@@8 ; ScriptRegistrant<RA_Mine_Manager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@6B@ ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@@8 ; ScriptRegistrant<RA_ObjectDeath_OnCreate> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@8 ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@8 ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@8 ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Naval_Yard@@@@6B@	; ScriptRegistrant<RA_Naval_Yard>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Naval_Yard@@@@@8	; ScriptRegistrant<RA_Naval_Yard> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Naval_Yard@@@@8	; ScriptRegistrant<RA_Naval_Yard>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Naval_Yard@@@@8	; ScriptRegistrant<RA_Naval_Yard>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Naval_Yard@@@@8 ; ScriptRegistrant<RA_Naval_Yard>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@6B@ ; ScriptRegistrant<RA_Naval_PT_Pokable>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@@8 ; ScriptRegistrant<RA_Naval_PT_Pokable> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@8 ; ScriptRegistrant<RA_Naval_PT_Pokable>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@8 ; ScriptRegistrant<RA_Naval_PT_Pokable>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@8 ; ScriptRegistrant<RA_Naval_PT_Pokable>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Naval_Unit@@@@6B@	; ScriptRegistrant<RA_Naval_Unit>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Naval_Unit@@@@@8	; ScriptRegistrant<RA_Naval_Unit> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Naval_Unit@@@@8	; ScriptRegistrant<RA_Naval_Unit>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Naval_Unit@@@@8	; ScriptRegistrant<RA_Naval_Unit>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Naval_Unit@@@@8 ; ScriptRegistrant<RA_Naval_Unit>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Naval_Zone@@@@6B@	; ScriptRegistrant<RA_Naval_Zone>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Naval_Zone@@@@@8	; ScriptRegistrant<RA_Naval_Zone> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Naval_Zone@@@@8	; ScriptRegistrant<RA_Naval_Zone>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Naval_Zone@@@@8	; ScriptRegistrant<RA_Naval_Zone>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Naval_Zone@@@@8 ; ScriptRegistrant<RA_Naval_Zone>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Damaged_Credits@@@@6B@ ; ScriptRegistrant<RA_Damaged_Credits>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Damaged_Credits@@@@@8 ; ScriptRegistrant<RA_Damaged_Credits> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Damaged_Credits@@@@8 ; ScriptRegistrant<RA_Damaged_Credits>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Damaged_Credits@@@@8 ; ScriptRegistrant<RA_Damaged_Credits>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Damaged_Credits@@@@8 ; ScriptRegistrant<RA_Damaged_Credits>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_GameStart_Detector@@@@6B@ ; ScriptRegistrant<RA_GameStart_Detector>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_GameStart_Detector@@@@@8 ; ScriptRegistrant<RA_GameStart_Detector> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_GameStart_Detector@@@@8 ; ScriptRegistrant<RA_GameStart_Detector>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_GameStart_Detector@@@@8 ; ScriptRegistrant<RA_GameStart_Detector>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_GameStart_Detector@@@@8 ; ScriptRegistrant<RA_GameStart_Detector>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_DriverDeath@@@@6B@	; ScriptRegistrant<RA_DriverDeath>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_DriverDeath@@@@@8 ; ScriptRegistrant<RA_DriverDeath> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_DriverDeath@@@@8	; ScriptRegistrant<RA_DriverDeath>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_DriverDeath@@@@8	; ScriptRegistrant<RA_DriverDeath>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_DriverDeath@@@@8 ; ScriptRegistrant<RA_DriverDeath>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Conyard_Repair@@@@6B@ ; ScriptRegistrant<RA_Conyard_Repair>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Conyard_Repair@@@@@8 ; ScriptRegistrant<RA_Conyard_Repair> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Conyard_Repair@@@@8	; ScriptRegistrant<RA_Conyard_Repair>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Conyard_Repair@@@@8	; ScriptRegistrant<RA_Conyard_Repair>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Conyard_Repair@@@@8 ; ScriptRegistrant<RA_Conyard_Repair>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@6B@ ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@@8 ; ScriptRegistrant<RA_ObjectDeath_OnDeath> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@8 ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@8 ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@8 ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@6B@ ; ScriptRegistrant<RA_Demolition_Truck_Improved>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@@8 ; ScriptRegistrant<RA_Demolition_Truck_Improved> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@8 ; ScriptRegistrant<RA_Demolition_Truck_Improved>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@8 ; ScriptRegistrant<RA_Demolition_Truck_Improved>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@8 ; ScriptRegistrant<RA_Demolition_Truck_Improved>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_CTF_Zone@@@@6B@	; ScriptRegistrant<RA_CTF_Zone>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_CTF_Zone@@@@@8	; ScriptRegistrant<RA_CTF_Zone> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_CTF_Zone@@@@8	; ScriptRegistrant<RA_CTF_Zone>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_CTF_Zone@@@@8	; ScriptRegistrant<RA_CTF_Zone>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_CTF_Zone@@@@8 ; ScriptRegistrant<RA_CTF_Zone>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@6B@ ; ScriptRegistrant<RA_MAD_Tank_Improved>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@@8 ; ScriptRegistrant<RA_MAD_Tank_Improved> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@8 ; ScriptRegistrant<RA_MAD_Tank_Improved>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@8 ; ScriptRegistrant<RA_MAD_Tank_Improved>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@8 ; ScriptRegistrant<RA_MAD_Tank_Improved>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@6B@ ; ScriptRegistrant<RA_Conyard_Controller_Improved>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@@8 ; ScriptRegistrant<RA_Conyard_Controller_Improved> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@8 ; ScriptRegistrant<RA_Conyard_Controller_Improved>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@8 ; ScriptRegistrant<RA_Conyard_Controller_Improved>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@8 ; ScriptRegistrant<RA_Conyard_Controller_Improved>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@6B@ ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@@8 ; ScriptRegistrant<RA_Conyard_Controller_Improved_2> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@8 ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@8 ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@8 ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Building_DeathSound@@@@6B@ ; ScriptRegistrant<RA_Building_DeathSound>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Building_DeathSound@@@@@8 ; ScriptRegistrant<RA_Building_DeathSound> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Building_DeathSound@@@@8 ; ScriptRegistrant<RA_Building_DeathSound>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Building_DeathSound@@@@8 ; ScriptRegistrant<RA_Building_DeathSound>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Building_DeathSound@@@@8 ; ScriptRegistrant<RA_Building_DeathSound>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@6B@ ; ScriptRegistrant<RA_Base_Defense_Simple>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@@8 ; ScriptRegistrant<RA_Base_Defense_Simple> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@8 ; ScriptRegistrant<RA_Base_Defense_Simple>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@8 ; ScriptRegistrant<RA_Base_Defense_Simple>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@8 ; ScriptRegistrant<RA_Base_Defense_Simple>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@6B@ ; ScriptRegistrant<RA_Base_Defense_Powered>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@@8 ; ScriptRegistrant<RA_Base_Defense_Powered> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@8 ; ScriptRegistrant<RA_Base_Defense_Powered>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@8 ; ScriptRegistrant<RA_Base_Defense_Powered>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@8 ; ScriptRegistrant<RA_Base_Defense_Powered>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@6B@ ; ScriptRegistrant<RA_Base_Defense_Chargeup>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@@8 ; ScriptRegistrant<RA_Base_Defense_Chargeup> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@8 ; ScriptRegistrant<RA_Base_Defense_Chargeup>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@8 ; ScriptRegistrant<RA_Base_Defense_Chargeup>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@8 ; ScriptRegistrant<RA_Base_Defense_Chargeup>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Vehicle_Regen@@@@6B@ ; ScriptRegistrant<RA_Vehicle_Regen>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Vehicle_Regen@@@@@8 ; ScriptRegistrant<RA_Vehicle_Regen> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Vehicle_Regen@@@@8	; ScriptRegistrant<RA_Vehicle_Regen>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Vehicle_Regen@@@@8	; ScriptRegistrant<RA_Vehicle_Regen>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vehicle_Regen@@@@8 ; ScriptRegistrant<RA_Vehicle_Regen>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Thief@@@@6B@	; ScriptRegistrant<RA_Thief>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Thief@@@@@8	; ScriptRegistrant<RA_Thief> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Thief@@@@8		; ScriptRegistrant<RA_Thief>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Thief@@@@8		; ScriptRegistrant<RA_Thief>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Thief@@@@8	; ScriptRegistrant<RA_Thief>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Thief_Improved@@@@6B@ ; ScriptRegistrant<RA_Thief_Improved>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Thief_Improved@@@@@8 ; ScriptRegistrant<RA_Thief_Improved> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Thief_Improved@@@@8	; ScriptRegistrant<RA_Thief_Improved>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Thief_Improved@@@@8	; ScriptRegistrant<RA_Thief_Improved>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Thief_Improved@@@@8 ; ScriptRegistrant<RA_Thief_Improved>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@6B@ ; ScriptRegistrant<RA_Credit_Theft_Zone>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@@8 ; ScriptRegistrant<RA_Credit_Theft_Zone> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@8 ; ScriptRegistrant<RA_Credit_Theft_Zone>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@8 ; ScriptRegistrant<RA_Credit_Theft_Zone>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@8 ; ScriptRegistrant<RA_Credit_Theft_Zone>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@6B@ ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@@8 ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@8 ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@8 ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@8 ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@6B@ ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@@8 ; ScriptRegistrant<RA_DestroyNearest_OnDeath> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@8 ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@8 ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@8 ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Ore_Truck@@@@6B@	; ScriptRegistrant<RA_Ore_Truck>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Ore_Truck@@@@@8	; ScriptRegistrant<RA_Ore_Truck> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Ore_Truck@@@@8	; ScriptRegistrant<RA_Ore_Truck>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Ore_Truck@@@@8	; ScriptRegistrant<RA_Ore_Truck>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Ore_Truck@@@@8 ; ScriptRegistrant<RA_Ore_Truck>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Ore_Truck_2@@@@6B@	; ScriptRegistrant<RA_Ore_Truck_2>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Ore_Truck_2@@@@@8 ; ScriptRegistrant<RA_Ore_Truck_2> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Ore_Truck_2@@@@8	; ScriptRegistrant<RA_Ore_Truck_2>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Ore_Truck_2@@@@8	; ScriptRegistrant<RA_Ore_Truck_2>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Ore_Truck_2@@@@8 ; ScriptRegistrant<RA_Ore_Truck_2>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Ore_Field@@@@6B@	; ScriptRegistrant<RA_Ore_Field>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Ore_Field@@@@@8	; ScriptRegistrant<RA_Ore_Field> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Ore_Field@@@@8	; ScriptRegistrant<RA_Ore_Field>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Ore_Field@@@@8	; ScriptRegistrant<RA_Ore_Field>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Ore_Field@@@@8 ; ScriptRegistrant<RA_Ore_Field>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@6B@ ; ScriptRegistrant<RA_Ore_Delivery_Zone>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@@8 ; ScriptRegistrant<RA_Ore_Delivery_Zone> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@8 ; ScriptRegistrant<RA_Ore_Delivery_Zone>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@8 ; ScriptRegistrant<RA_Ore_Delivery_Zone>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@8 ; ScriptRegistrant<RA_Ore_Delivery_Zone>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@6B@ ; ScriptRegistrant<RA_Vehicle_Team_Set>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@@8 ; ScriptRegistrant<RA_Vehicle_Team_Set> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@8 ; ScriptRegistrant<RA_Vehicle_Team_Set>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@8 ; ScriptRegistrant<RA_Vehicle_Team_Set>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@8 ; ScriptRegistrant<RA_Vehicle_Team_Set>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@6B@ ; ScriptRegistrant<RA_Vehicle_Team_Timer>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@@8 ; ScriptRegistrant<RA_Vehicle_Team_Timer> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@8 ; ScriptRegistrant<RA_Vehicle_Team_Timer>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@8 ; ScriptRegistrant<RA_Vehicle_Team_Timer>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@8 ; ScriptRegistrant<RA_Vehicle_Team_Timer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Visible_Driver@@@@6B@ ; ScriptRegistrant<RA_Visible_Driver>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Visible_Driver@@@@@8 ; ScriptRegistrant<RA_Visible_Driver> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Visible_Driver@@@@8	; ScriptRegistrant<RA_Visible_Driver>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Visible_Driver@@@@8	; ScriptRegistrant<RA_Visible_Driver>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Visible_Driver@@@@8 ; ScriptRegistrant<RA_Visible_Driver>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Vision_Control@@@@6B@ ; ScriptRegistrant<RA_Vision_Control>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Vision_Control@@@@@8 ; ScriptRegistrant<RA_Vision_Control> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Vision_Control@@@@8	; ScriptRegistrant<RA_Vision_Control>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Vision_Control@@@@8	; ScriptRegistrant<RA_Vision_Control>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vision_Control@@@@8 ; ScriptRegistrant<RA_Vision_Control>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Vision_Control_2@@@@6B@ ; ScriptRegistrant<RA_Vision_Control_2>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Vision_Control_2@@@@@8 ; ScriptRegistrant<RA_Vision_Control_2> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Vision_Control_2@@@@8 ; ScriptRegistrant<RA_Vision_Control_2>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Vision_Control_2@@@@8 ; ScriptRegistrant<RA_Vision_Control_2>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vision_Control_2@@@@8 ; ScriptRegistrant<RA_Vision_Control_2>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@6B@ ; ScriptRegistrant<RA_Fog_Level_Settings>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@@8 ; ScriptRegistrant<RA_Fog_Level_Settings> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@8 ; ScriptRegistrant<RA_Fog_Level_Settings>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@8 ; ScriptRegistrant<RA_Fog_Level_Settings>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@8 ; ScriptRegistrant<RA_Fog_Level_Settings>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Missile_Beacon@@@@6B@ ; ScriptRegistrant<RA_Missile_Beacon>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Missile_Beacon@@@@@8 ; ScriptRegistrant<RA_Missile_Beacon> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Missile_Beacon@@@@8	; ScriptRegistrant<RA_Missile_Beacon>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Missile_Beacon@@@@8	; ScriptRegistrant<RA_Missile_Beacon>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Missile_Beacon@@@@8 ; ScriptRegistrant<RA_Missile_Beacon>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@6B@ ; ScriptRegistrant<RA_Superweapon_Beacon>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@@8 ; ScriptRegistrant<RA_Superweapon_Beacon> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@8 ; ScriptRegistrant<RA_Superweapon_Beacon>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@8 ; ScriptRegistrant<RA_Superweapon_Beacon>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@8 ; ScriptRegistrant<RA_Superweapon_Beacon>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Beacon_Terminal@@@@6B@ ; ScriptRegistrant<RA_Beacon_Terminal>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Beacon_Terminal@@@@@8 ; ScriptRegistrant<RA_Beacon_Terminal> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Beacon_Terminal@@@@8 ; ScriptRegistrant<RA_Beacon_Terminal>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Beacon_Terminal@@@@8 ; ScriptRegistrant<RA_Beacon_Terminal>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Beacon_Terminal@@@@8 ; ScriptRegistrant<RA_Beacon_Terminal>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@6B@ ; ScriptRegistrant<RA_Beacon_Terminal_2>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@@8 ; ScriptRegistrant<RA_Beacon_Terminal_2> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@8 ; ScriptRegistrant<RA_Beacon_Terminal_2>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@8 ; ScriptRegistrant<RA_Beacon_Terminal_2>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@8 ; ScriptRegistrant<RA_Beacon_Terminal_2>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Beacon_Timer@@@@6B@	; ScriptRegistrant<RA_Beacon_Timer>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Beacon_Timer@@@@@8 ; ScriptRegistrant<RA_Beacon_Timer> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Beacon_Timer@@@@8	; ScriptRegistrant<RA_Beacon_Timer>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Beacon_Timer@@@@8	; ScriptRegistrant<RA_Beacon_Timer>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Beacon_Timer@@@@8 ; ScriptRegistrant<RA_Beacon_Timer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Missile_Control@@@@6B@ ; ScriptRegistrant<RA_Missile_Control>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Missile_Control@@@@@8 ; ScriptRegistrant<RA_Missile_Control> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Missile_Control@@@@8 ; ScriptRegistrant<RA_Missile_Control>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Missile_Control@@@@8 ; ScriptRegistrant<RA_Missile_Control>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Missile_Control@@@@8 ; ScriptRegistrant<RA_Missile_Control>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Missile_Controller@@@@6B@ ; ScriptRegistrant<RA_Missile_Controller>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Missile_Controller@@@@@8 ; ScriptRegistrant<RA_Missile_Controller> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Missile_Controller@@@@8 ; ScriptRegistrant<RA_Missile_Controller>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Missile_Controller@@@@8 ; ScriptRegistrant<RA_Missile_Controller>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Missile_Controller@@@@8 ; ScriptRegistrant<RA_Missile_Controller>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@6B@ ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@@8 ; ScriptRegistrant<RA_Demolition_Truck_Retarded> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@8 ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@8 ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@8 ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@6B@ ; ScriptRegistrant<RA_MAD_Tank_Devolved>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@@8 ; ScriptRegistrant<RA_MAD_Tank_Devolved> `RTTI Type Descriptor'
PUBLIC	??_R3?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@8 ; ScriptRegistrant<RA_MAD_Tank_Devolved>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@8 ; ScriptRegistrant<RA_MAD_Tank_Devolved>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@8 ; ScriptRegistrant<RA_MAD_Tank_Devolved>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@02081cea
PUBLIC	__real@3e800000
PUBLIC	__real@3f000000
PUBLIC	__real@3f79999a
PUBLIC	__real@3f800000
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fc90fdb
PUBLIC	__real@3fd0000000000000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe8000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4024000000000000
PUBLIC	__real@40c00000
PUBLIC	__real@40c90fdb
PUBLIC	__real@41100000
PUBLIC	__real@41200000
PUBLIC	__real@41a00000
PUBLIC	__real@42200000
PUBLIC	__real@42960000
PUBLIC	__real@42c80000
PUBLIC	__real@43160000
PUBLIC	__real@43480000
PUBLIC	__real@437a0000
PUBLIC	__real@437f0000
PUBLIC	__real@43960000
PUBLIC	__real@44000000
PUBLIC	__real@44800000
PUBLIC	__real@461c4000
PUBLIC	__real@bf800000
PUBLIC	__real@c0000000
PUBLIC	__xmm@80000000000000008000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__imp___wassert:PROC
EXTRN	__imp__atof:PROC
EXTRN	__imp__ceil:PROC
EXTRN	__imp__atoi:PROC
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	__imp__sprintf:PROC
EXTRN	__imp___stricmp:PROC
EXTRN	__imp__GetCurrentThreadId@0:PROC
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	?SetThreadTrackingInformation@@YAXPBDI0@Z:PROC	; SetThreadTrackingInformation
EXTRN	?Random_Float@WWMath@@SAMXZ:PROC		; WWMath::Random_Float
EXTRN	??0ScriptImpClass@@QAE@XZ:PROC			; ScriptImpClass::ScriptImpClass
EXTRN	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z:PROC ; ScriptImpClass::Auto_Save_Variable
EXTRN	??1ScriptImpClass@@UAE@XZ:PROC			; ScriptImpClass::~ScriptImpClass
EXTRN	?Get_Name@ScriptImpClass@@UAEPBDXZ:PROC		; ScriptImpClass::Get_Name
EXTRN	?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z:PROC ; ScriptImpClass::Set_Parameters_String
EXTRN	?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z:PROC ; ScriptImpClass::Get_Parameters_String
EXTRN	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z:PROC	; ScriptImpClass::Get_Parameter
EXTRN	?Get_Parameter@ScriptImpClass@@QAEPBDH@Z:PROC	; ScriptImpClass::Get_Parameter
EXTRN	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z:PROC ; ScriptImpClass::Get_Int_Parameter
EXTRN	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z:PROC ; ScriptImpClass::Get_Float_Parameter
EXTRN	?Destroy_Script@ScriptImpClass@@QAEXXZ:PROC	; ScriptImpClass::Destroy_Script
EXTRN	?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z:PROC ; ScriptImpClass::Attach
EXTRN	?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z:PROC ; ScriptImpClass::Detach
EXTRN	?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z:PROC ; ScriptImpClass::Save
EXTRN	?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z:PROC ; ScriptImpClass::Load
EXTRN	??1ScriptFactory@@UAE@XZ:PROC			; ScriptFactory::~ScriptFactory
EXTRN	??0ScriptFactory@@IAE@PBD0@Z:PROC		; ScriptFactory::ScriptFactory
EXTRN	??1ThreadClass@@UAE@XZ:PROC			; ThreadClass::~ThreadClass
EXTRN	__imp_?Free_String@StringClass@@AAEXXZ:PROC
EXTRN	__imp_?Free_String@WideStringClass@@AAEXXZ:PROC
EXTRN	?Find_Entry@INIClass@@QBEPAUINIEntry@@PBD0@Z:PROC ; INIClass::Find_Entry
EXTRN	?Find_Section@INIClass@@QBEPAUINISection@@PBD@Z:PROC ; INIClass::Find_Section
EXTRN	??1INIClass@@UAE@XZ:PROC			; INIClass::~INIClass
EXTRN	?Set@Matrix3D@@QAEXABVMatrix3@@ABVVector3@@@Z:PROC ; Matrix3D::Set
EXTRN	?Set@Matrix3D@@QAEXABVQuaternion@@ABVVector3@@@Z:PROC ; Matrix3D::Set
EXTRN	?Get_Object_Type@@YAHPAVScriptableGameObj@@@Z:PROC ; Get_Object_Type
EXTRN	?Find_Object_By_Preset@@YAPAVScriptableGameObj@@HPBD@Z:PROC ; Find_Object_By_Preset
EXTRN	?Find_Nearest_Preset@@YAPAVScriptableGameObj@@VVector3@@PBD@Z:PROC ; Find_Nearest_Preset
EXTRN	?Send_Custom_To_Team_Buildings@@YAXHPAVScriptableGameObj@@HHM@Z:PROC ; Send_Custom_To_Team_Buildings
EXTRN	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z:PROC ; Send_Custom_To_Team_Preset
EXTRN	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z:PROC	; Get_GameObj
EXTRN	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z:PROC ; Get_Player_ID
EXTRN	?Get_Team_Player_Count@@YAHH@Z:PROC		; Get_Team_Player_Count
EXTRN	?Get_Current_Bullets@@YAHPAVScriptableGameObj@@@Z:PROC ; Get_Current_Bullets
EXTRN	?Get_Current_Weapon_Definition@@YAPBVWeaponDefinitionClass@@PAVScriptableGameObj@@@Z:PROC ; Get_Current_Weapon_Definition
EXTRN	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z:PROC ; Get_Vehicle
EXTRN	?Get_Vehicle_Occupant_Count@@YAHPAVScriptableGameObj@@@Z:PROC ; Get_Vehicle_Occupant_Count
EXTRN	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z:PROC ; Get_Vehicle_Driver
EXTRN	?Get_Vehicle_Gunner@@YAPAVScriptableGameObj@@PAV1@@Z:PROC ; Get_Vehicle_Gunner
EXTRN	?Force_Occupants_Exit@@YAXPAVScriptableGameObj@@@Z:PROC ; Force_Occupants_Exit
EXTRN	?Is_Stealth@@YA_NPAVScriptableGameObj@@@Z:PROC	; Is_Stealth
EXTRN	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z:PROC ; Get_Vehicle_Mode
EXTRN	?Is_Spy@@YA_NPAVScriptableGameObj@@@Z:PROC	; Is_Spy
EXTRN	?Set@Matrix3@@QAEXABVQuaternion@@@Z:PROC	; Matrix3::Set
EXTRN	?Get@SysTimeClass@@QAEIXZ:PROC			; SysTimeClass::Get
EXTRN	?Get_Entry@GenericDataSafeClass@@SAPAVDataSafeEntryClass@@VDataSafeHandleClass@@@Z:PROC ; GenericDataSafeClass::Get_Entry
EXTRN	?Shuffle@GenericDataSafeClass@@KAX_N@Z:PROC	; GenericDataSafeClass::Shuffle
EXTRN	?Mem_Copy_Decrypt@GenericDataSafeClass@@KAXPAX0H_N@Z:PROC ; GenericDataSafeClass::Mem_Copy_Decrypt
EXTRN	?Say_Security_Fault@GenericDataSafeClass@@KAXXZ:PROC ; GenericDataSafeClass::Say_Security_Fault
EXTRN	??1ReferencerClass@@UAE@XZ:PROC			; ReferencerClass::~ReferencerClass
EXTRN	?On_Post_Load@ReferencerClass@@UAEXXZ:PROC	; ReferencerClass::On_Post_Load
EXTRN	??4ReferencerClass@@QAEAAV0@PAVScriptableGameObj@@@Z:PROC ; ReferencerClass::operator=
EXTRN	?Is_Enemy@DamageableGameObj@@QAE_NPAV1@@Z:PROC	; DamageableGameObj::Is_Enemy
EXTRN	?Set@LineSegClass@@QAEXABV1@ABVMatrix3D@@@Z:PROC ; LineSegClass::Set
EXTRN	?Is_Obj_Visible@SmartGameObj@@QAE_NPAVPhysicalGameObj@@@Z:PROC ; SmartGameObj::Is_Obj_Visible
EXTRN	?Is_Building_Dead@@YA_NPAVScriptableGameObj@@@Z:PROC ; Is_Building_Dead
EXTRN	?Is_Base_Powered@@YA_NH@Z:PROC			; Is_Base_Powered
EXTRN	?Ranged_Scale_Damage_To_Buildings@@YAXMPBDVVector3@@MPAVScriptableGameObj@@@Z:PROC ; Ranged_Scale_Damage_To_Buildings
EXTRN	?Ranged_Percentage_Damage_To_Buildings@@YAXMPBDVVector3@@MPAVScriptableGameObj@@@Z:PROC ; Ranged_Percentage_Damage_To_Buildings
EXTRN	?Ranged_Percentage_Damage_To_Vehicles@@YAXMPBDVVector3@@MPAVScriptableGameObj@@@Z:PROC ; Ranged_Percentage_Damage_To_Vehicles
EXTRN	?Ranged_Variable_Percent_Vehicle_Damage@@YAXMM_NPBDVVector3@@MPAVScriptableGameObj@@@Z:PROC ; Ranged_Variable_Percent_Vehicle_Damage
EXTRN	?Remove_Script@@YAXPAVScriptableGameObj@@PBD@Z:PROC ; Remove_Script
EXTRN	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z:PROC ; Is_Script_Attached
EXTRN	?Attach_Script_Once@@YAXPAVScriptableGameObj@@PBD1@Z:PROC ; Attach_Script_Once
EXTRN	?Detach@JFW_Key_Hook_Base@@UAEXPAVScriptableGameObj@@@Z:PROC ; JFW_Key_Hook_Base::Detach
EXTRN	?Destroyed@JFW_Key_Hook_Base@@UAEXPAVScriptableGameObj@@@Z:PROC ; JFW_Key_Hook_Base::Destroyed
EXTRN	?InstallHook@JFW_Key_Hook_Base@@QAEXPBDPAVScriptableGameObj@@@Z:PROC ; JFW_Key_Hook_Base::InstallHook
EXTRN	?RemoveHook@JFW_Key_Hook_Base@@QAEXXZ:PROC	; JFW_Key_Hook_Base::RemoveHook
EXTRN	??1JFW_Key_Hook_Base@@UAE@XZ:PROC		; JFW_Key_Hook_Base::~JFW_Key_Hook_Base
EXTRN	?Detach@MultiKeyHookScriptImpClass@@UAEXPAVScriptableGameObj@@@Z:PROC ; MultiKeyHookScriptImpClass::Detach
EXTRN	?Destroyed@MultiKeyHookScriptImpClass@@UAEXPAVScriptableGameObj@@@Z:PROC ; MultiKeyHookScriptImpClass::Destroyed
EXTRN	??_E?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAXI@Z:PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`vector deleting destructor'
EXTRN	?Detach@JFW_Object_Created_Hook_Base@@UAEXPAVScriptableGameObj@@@Z:PROC ; JFW_Object_Created_Hook_Base::Detach
EXTRN	?Created@JFW_Object_Created_Hook_Base@@UAEXPAVScriptableGameObj@@@Z:PROC ; JFW_Object_Created_Hook_Base::Created
EXTRN	??1JFW_Object_Created_Hook_Base@@UAE@XZ:PROC	; JFW_Object_Created_Hook_Base::~JFW_Object_Created_Hook_Base
EXTRN	?Kill_All_Buildings_By_Team@@YAXH@Z:PROC	; Kill_All_Buildings_By_Team
EXTRN	?Send_Message_Team@@YAXHIIIPBD@Z:PROC		; Send_Message_Team
EXTRN	??_ERA_Repair_Controller@@UAEPAXI@Z:PROC	; RA_Repair_Controller::`vector deleting destructor'
EXTRN	??_ERA_Repair_Script@@UAEPAXI@Z:PROC		; RA_Repair_Script::`vector deleting destructor'
EXTRN	??_ERA_Infantry_Spy@@UAEPAXI@Z:PROC		; RA_Infantry_Spy::`vector deleting destructor'
EXTRN	??_ERA_Infantry_NotSpy@@UAEPAXI@Z:PROC		; RA_Infantry_NotSpy::`vector deleting destructor'
EXTRN	??_ERA_Helipad_Zone@@UAEPAXI@Z:PROC		; RA_Helipad_Zone::`vector deleting destructor'
EXTRN	??_ERA_MineLayer@@UAEPAXI@Z:PROC		; RA_MineLayer::`vector deleting destructor'
EXTRN	??_ERA_Mine@@UAEPAXI@Z:PROC			; RA_Mine::`vector deleting destructor'
EXTRN	??_ERA_Mine_Manager@@UAEPAXI@Z:PROC		; RA_Mine_Manager::`vector deleting destructor'
EXTRN	??_ERA_ObjectDeath_OnCreate@@UAEPAXI@Z:PROC	; RA_ObjectDeath_OnCreate::`vector deleting destructor'
EXTRN	??_ERA_Naval_Yard@@UAEPAXI@Z:PROC		; RA_Naval_Yard::`vector deleting destructor'
EXTRN	??_ERA_Naval_PT_Pokable@@UAEPAXI@Z:PROC		; RA_Naval_PT_Pokable::`vector deleting destructor'
EXTRN	??_ERA_Naval_Unit@@UAEPAXI@Z:PROC		; RA_Naval_Unit::`vector deleting destructor'
EXTRN	??_ERA_Naval_Zone@@UAEPAXI@Z:PROC		; RA_Naval_Zone::`vector deleting destructor'
EXTRN	??_ERA_Damaged_Credits@@UAEPAXI@Z:PROC		; RA_Damaged_Credits::`vector deleting destructor'
EXTRN	??_ERA_GameStart_Detector@@UAEPAXI@Z:PROC	; RA_GameStart_Detector::`vector deleting destructor'
EXTRN	??_ERA_DriverDeath@@UAEPAXI@Z:PROC		; RA_DriverDeath::`vector deleting destructor'
EXTRN	??_ERA_Conyard_Repair@@UAEPAXI@Z:PROC		; RA_Conyard_Repair::`vector deleting destructor'
EXTRN	??_ERA_ObjectDeath_OnDeath@@UAEPAXI@Z:PROC	; RA_ObjectDeath_OnDeath::`vector deleting destructor'
EXTRN	??_ERA_Demolition_Truck_Improved@@UAEPAXI@Z:PROC ; RA_Demolition_Truck_Improved::`vector deleting destructor'
EXTRN	??_ERA_CTF_Zone@@UAEPAXI@Z:PROC			; RA_CTF_Zone::`vector deleting destructor'
EXTRN	??_ERA_MAD_Tank_Improved@@UAEPAXI@Z:PROC	; RA_MAD_Tank_Improved::`vector deleting destructor'
EXTRN	??_ERA_Conyard_Controller_Improved@@UAEPAXI@Z:PROC ; RA_Conyard_Controller_Improved::`vector deleting destructor'
EXTRN	??_ERA_Conyard_Controller_Improved_2@@UAEPAXI@Z:PROC ; RA_Conyard_Controller_Improved_2::`vector deleting destructor'
EXTRN	??_ERA_Building_DeathSound@@UAEPAXI@Z:PROC	; RA_Building_DeathSound::`vector deleting destructor'
EXTRN	??_ERA_Base_Defense_Simple@@UAEPAXI@Z:PROC	; RA_Base_Defense_Simple::`vector deleting destructor'
EXTRN	??_ERA_Base_Defense_Powered@@UAEPAXI@Z:PROC	; RA_Base_Defense_Powered::`vector deleting destructor'
EXTRN	??_ERA_Base_Defense_Chargeup@@UAEPAXI@Z:PROC	; RA_Base_Defense_Chargeup::`vector deleting destructor'
EXTRN	??_ERA_Vehicle_Regen@@UAEPAXI@Z:PROC		; RA_Vehicle_Regen::`vector deleting destructor'
EXTRN	??_ERA_Thief@@UAEPAXI@Z:PROC			; RA_Thief::`vector deleting destructor'
EXTRN	??_ERA_Thief_Improved@@UAEPAXI@Z:PROC		; RA_Thief_Improved::`vector deleting destructor'
EXTRN	??_ERA_Credit_Theft_Zone@@UAEPAXI@Z:PROC	; RA_Credit_Theft_Zone::`vector deleting destructor'
EXTRN	??_ERA_Credit_Theft_Zone_Timer@@UAEPAXI@Z:PROC	; RA_Credit_Theft_Zone_Timer::`vector deleting destructor'
EXTRN	??_ERA_DestroyNearest_OnDeath@@UAEPAXI@Z:PROC	; RA_DestroyNearest_OnDeath::`vector deleting destructor'
EXTRN	??_ERA_Ore_Truck@@UAEPAXI@Z:PROC		; RA_Ore_Truck::`vector deleting destructor'
EXTRN	??_ERA_Ore_Truck_2@@UAEPAXI@Z:PROC		; RA_Ore_Truck_2::`vector deleting destructor'
EXTRN	??_ERA_Ore_Field@@UAEPAXI@Z:PROC		; RA_Ore_Field::`vector deleting destructor'
EXTRN	??_ERA_Ore_Delivery_Zone@@UAEPAXI@Z:PROC	; RA_Ore_Delivery_Zone::`vector deleting destructor'
EXTRN	??_ERA_Vehicle_Team_Set@@UAEPAXI@Z:PROC		; RA_Vehicle_Team_Set::`vector deleting destructor'
EXTRN	??_ERA_Vehicle_Team_Timer@@UAEPAXI@Z:PROC	; RA_Vehicle_Team_Timer::`vector deleting destructor'
EXTRN	??_ERA_Visible_Driver@@UAEPAXI@Z:PROC		; RA_Visible_Driver::`vector deleting destructor'
EXTRN	??_ERA_Vision_Control@@UAEPAXI@Z:PROC		; RA_Vision_Control::`vector deleting destructor'
EXTRN	??_ERA_Vision_Control_2@@UAEPAXI@Z:PROC		; RA_Vision_Control_2::`vector deleting destructor'
EXTRN	??_ERA_Fog_Level_Settings@@UAEPAXI@Z:PROC	; RA_Fog_Level_Settings::`vector deleting destructor'
EXTRN	??_ERA_Missile_Beacon@@UAEPAXI@Z:PROC		; RA_Missile_Beacon::`vector deleting destructor'
EXTRN	??_ERA_Beacon_Terminal@@UAEPAXI@Z:PROC		; RA_Beacon_Terminal::`vector deleting destructor'
EXTRN	??_ERA_Beacon_Terminal_2@@UAEPAXI@Z:PROC	; RA_Beacon_Terminal_2::`vector deleting destructor'
EXTRN	??_ERA_Beacon_Timer@@UAEPAXI@Z:PROC		; RA_Beacon_Timer::`vector deleting destructor'
EXTRN	??_ERA_Missile_Control@@UAEPAXI@Z:PROC		; RA_Missile_Control::`vector deleting destructor'
EXTRN	??_ERA_Missile_Controller@@UAEPAXI@Z:PROC	; RA_Missile_Controller::`vector deleting destructor'
EXTRN	??_ERA_Demolition_Truck_Retarded@@UAEPAXI@Z:PROC ; RA_Demolition_Truck_Retarded::`vector deleting destructor'
EXTRN	??_ERA_MAD_Tank_Devolved@@UAEPAXI@Z:PROC	; RA_MAD_Tank_Devolved::`vector deleting destructor'
EXTRN	??_ERA_Superweapon_Beacon@@UAEPAXI@Z:PROC	; RA_Superweapon_Beacon::`vector deleting destructor'
EXTRN	?Inside_Me@ScriptZoneGameObj@@QAE_NPAVPhysicalGameObj@@@Z:PROC ; ScriptZoneGameObj::Inside_Me
EXTRN	?Get_Warhead_Type@ArmorWarheadManager@@SAIPBD@Z:PROC ; ArmorWarheadManager::Get_Warhead_Type
EXTRN	?Launch@SuperweaponGameObj@@QAEXXZ:PROC		; SuperweaponGameObj::Launch
EXTRN	??_E?$ScriptRegistrant@VRA_Repair_Controller@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Repair_Controller>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Repair_Script@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Repair_Script>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Infantry_Spy@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Infantry_Spy>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Infantry_NotSpy>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Helipad_Zone@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Helipad_Zone>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_MineLayer@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_MineLayer>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Mine@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Mine>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Mine_Manager@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Mine_Manager>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Naval_Yard@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Naval_Yard>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Naval_PT_Pokable>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Naval_Unit@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Naval_Unit>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Naval_Zone@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Naval_Zone>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Damaged_Credits@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Damaged_Credits>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_GameStart_Detector@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_GameStart_Detector>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_DriverDeath@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_DriverDeath>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Conyard_Repair@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Conyard_Repair>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Demolition_Truck_Improved>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_CTF_Zone@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_CTF_Zone>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_MAD_Tank_Improved>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Conyard_Controller_Improved>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Building_DeathSound@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Building_DeathSound>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Base_Defense_Simple>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Base_Defense_Powered>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Base_Defense_Chargeup>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Vehicle_Regen@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Vehicle_Regen>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Thief@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Thief>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Thief_Improved@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Thief_Improved>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Credit_Theft_Zone>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Ore_Truck@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Ore_Truck>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Ore_Truck_2@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Ore_Truck_2>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Ore_Field@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Ore_Field>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Ore_Delivery_Zone>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Vehicle_Team_Set>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Vehicle_Team_Timer>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Visible_Driver@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Visible_Driver>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Vision_Control@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Vision_Control>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Vision_Control_2@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Vision_Control_2>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Fog_Level_Settings>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Missile_Beacon@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Missile_Beacon>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Superweapon_Beacon>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Beacon_Terminal@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Beacon_Terminal>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Beacon_Terminal_2>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Beacon_Timer@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Beacon_Timer>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Missile_Control@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Missile_Control>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Missile_Controller@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Missile_Controller>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::`vector deleting destructor'
EXTRN	??_E?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@UAEPAXI@Z:PROC ; ScriptRegistrant<RA_MAD_Tank_Devolved>::`vector deleting destructor'
EXTRN	__CIatan2:PROC
EXTRN	__libm_sse2_acos_precise:PROC
EXTRN	__libm_sse2_asin_precise:PROC
EXTRN	__libm_sse2_atan_precise:PROC
EXTRN	__libm_sse2_cos_precise:PROC
EXTRN	__libm_sse2_sin_precise:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	__libm_sse2_tan_precise:PROC
EXTRN	_floor:PROC
EXTRN	?Exe@@3HA:DWORD					; Exe
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?_FastAcosTable@@3AAV?$RefArrayHelper@M$0EAA@@@A:DWORD ; _FastAcosTable
EXTRN	?_FastAsinTable@@3AAV?$RefArrayHelper@M$0EAA@@@A:DWORD ; _FastAsinTable
EXTRN	?_FastSinTable@@3AAV?$RefArrayHelper@M$0EAA@@@A:DWORD ; _FastSinTable
EXTRN	?Commands@@3PAUScriptCommands@@A:DWORD		; Commands
EXTRN	?SystemTime@SysTimeClass@@2AAV1@A:DWORD		; SysTimeClass::SystemTime
EXTRN	?SimpleKey@GenericDataSafeClass@@1AAKA:DWORD	; GenericDataSafeClass::SimpleKey
EXTRN	?HandleKey@GenericDataSafeClass@@1AAKA:DWORD	; GenericDataSafeClass::HandleKey
EXTRN	?NumLists@GenericDataSafeClass@@1AAHA:DWORD	; GenericDataSafeClass::NumLists
EXTRN	?Safe@GenericDataSafeClass@@1AAV?$RefArray@PAVDataSafeEntryListClass@@$0CAAA@@@A:DWORD ; GenericDataSafeClass::Safe
EXTRN	?Checksum@GenericDataSafeClass@@1AAKA:DWORD	; GenericDataSafeClass::Checksum
EXTRN	?SecurityCheckDelay@GenericDataSafeClass@@1AAKA:DWORD ; GenericDataSafeClass::SecurityCheckDelay
EXTRN	?SentinelOne@GenericDataSafeClass@@1AAVDataSafeHandleClass@@A:DWORD ; GenericDataSafeClass::SentinelOne
EXTRN	?SentinelTwo@GenericDataSafeClass@@1AAVDataSafeHandleClass@@A:DWORD ; GenericDataSafeClass::SentinelTwo
EXTRN	?CRCErrors@GenericDataSafeClass@@1AAHA:DWORD	; GenericDataSafeClass::CRCErrors
EXTRN	?ReturnList@?$DataSafeClass@H@@0AAV?$RefArray@V?$RefArray@D$03@@$07@@A:DWORD ; DataSafeClass<int>::ReturnList
EXTRN	?ReturnIndex@?$DataSafeClass@H@@0AAHA:DWORD	; DataSafeClass<int>::ReturnIndex
EXTRN	?Steal_Team_Credits@@3P6AMMH@ZA:DWORD		; Steal_Team_Credits
EXTRN	?Set_Screen_Fade_Color_Player@@3P6AXPAVScriptableGameObj@@MMMM@ZA:DWORD ; Set_Screen_Fade_Color_Player
EXTRN	?Set_Screen_Fade_Opacity_Player@@3P6AXPAVScriptableGameObj@@MM@ZA:DWORD ; Set_Screen_Fade_Opacity_Player
EXTRN	?Set_Fog_Color_Player@@3P6AXPAVScriptableGameObj@@III@ZA:DWORD ; Set_Fog_Color_Player
EXTRN	?Display_Security_Dialog@@3P6AXPAVScriptableGameObj@@@ZA:DWORD ; Display_Security_Dialog
EXTRN	?SetExplosionObj@@3P6AXPAVScriptableGameObj@@@ZA:DWORD ; SetExplosionObj
EXTRN	?Set_Fog_Override_Player@@3P6AXPAVScriptableGameObj@@MM@ZA:DWORD ; Set_Fog_Override_Player
EXTRN	?Clear_Fog_Override_Player@@3P6AXPAVScriptableGameObj@@@ZA:DWORD ; Clear_Fog_Override_Player
EXTRN	?Get_Damage_Warhead@@3P6AIXZA:DWORD		; Get_Damage_Warhead
EXTRN	?Create_2D_Sound_Team@@3P6AHPBDH@ZA:DWORD	; Create_2D_Sound_Team
EXTRN	__fltused:DWORD
;	COMDAT ?_checking@?1??Security_Check@GenericDataSafeClass@@KAXXZ@4_NA
_BSS	SEGMENT
?_checking@?1??Security_Check@GenericDataSafeClass@@KAXXZ@4_NA DB 01H DUP (?) ; `GenericDataSafeClass::Security_Check'::`2'::_checking
_BSS	ENDS
;	COMDAT ?_calls@?1??Security_Check@GenericDataSafeClass@@KAXXZ@4KA
_BSS	SEGMENT
?_calls@?1??Security_Check@GenericDataSafeClass@@KAXXZ@4KA DD 01H DUP (?) ; `GenericDataSafeClass::Security_Check'::`2'::_calls
_BSS	ENDS
_BSS	SEGMENT
?RA_Repair_Controller_Registrant@@3V?$ScriptRegistrant@VRA_Repair_Controller@@@@A DB 010H DUP (?) ; RA_Repair_Controller_Registrant
?RA_Repair_Script_Registrant@@3V?$ScriptRegistrant@VRA_Repair_Script@@@@A DB 010H DUP (?) ; RA_Repair_Script_Registrant
?RA_Infantry_Spy_Registrant@@3V?$ScriptRegistrant@VRA_Infantry_Spy@@@@A DB 010H DUP (?) ; RA_Infantry_Spy_Registrant
?RA_Infantry_NotSpy_Registrant@@3V?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@A DB 010H DUP (?) ; RA_Infantry_NotSpy_Registrant
?RA_Helipad_Zone_Registrant@@3V?$ScriptRegistrant@VRA_Helipad_Zone@@@@A DB 010H DUP (?) ; RA_Helipad_Zone_Registrant
?RA_MineLayer_Registrant@@3V?$ScriptRegistrant@VRA_MineLayer@@@@A DB 010H DUP (?) ; RA_MineLayer_Registrant
?RA_Mine_Registrant@@3V?$ScriptRegistrant@VRA_Mine@@@@A DB 010H DUP (?) ; RA_Mine_Registrant
?RA_Mine_Manager_Registrant@@3V?$ScriptRegistrant@VRA_Mine_Manager@@@@A DB 010H DUP (?) ; RA_Mine_Manager_Registrant
?RA_ObjectDeath_OnCreate_Registrant@@3V?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@A DB 010H DUP (?) ; RA_ObjectDeath_OnCreate_Registrant
?RA_Naval_Yard_Registrant@@3V?$ScriptRegistrant@VRA_Naval_Yard@@@@A DB 010H DUP (?) ; RA_Naval_Yard_Registrant
?RA_Naval_PT_Pokable_Registrant@@3V?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@A DB 010H DUP (?) ; RA_Naval_PT_Pokable_Registrant
?RA_Naval_Unit_Registrant@@3V?$ScriptRegistrant@VRA_Naval_Unit@@@@A DB 010H DUP (?) ; RA_Naval_Unit_Registrant
?RA_Naval_Zone_Registrant@@3V?$ScriptRegistrant@VRA_Naval_Zone@@@@A DB 010H DUP (?) ; RA_Naval_Zone_Registrant
?RA_Damaged_Credits_Registrant@@3V?$ScriptRegistrant@VRA_Damaged_Credits@@@@A DB 010H DUP (?) ; RA_Damaged_Credits_Registrant
?RA_GameStart_Detector_Registrant@@3V?$ScriptRegistrant@VRA_GameStart_Detector@@@@A DB 010H DUP (?) ; RA_GameStart_Detector_Registrant
?RA_DriverDeath_Registrant@@3V?$ScriptRegistrant@VRA_DriverDeath@@@@A DB 010H DUP (?) ; RA_DriverDeath_Registrant
?RA_Conyard_Repair_Registrant@@3V?$ScriptRegistrant@VRA_Conyard_Repair@@@@A DB 010H DUP (?) ; RA_Conyard_Repair_Registrant
?RA_ObjectDeath_OnDeath_Registrant@@3V?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@A DB 010H DUP (?) ; RA_ObjectDeath_OnDeath_Registrant
?RA_Demolition_Truck_Improved_Registrant@@3V?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@A DB 010H DUP (?) ; RA_Demolition_Truck_Improved_Registrant
?RA_CTF_Zone_Registrant@@3V?$ScriptRegistrant@VRA_CTF_Zone@@@@A DB 010H DUP (?) ; RA_CTF_Zone_Registrant
?RA_MAD_Tank_Improved_Registrant@@3V?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@A DB 010H DUP (?) ; RA_MAD_Tank_Improved_Registrant
?RA_Conyard_Controller_Improved_Registrant@@3V?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@A DB 010H DUP (?) ; RA_Conyard_Controller_Improved_Registrant
?RA_Conyard_Controller_Improved_2_Registrant@@3V?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@A DB 010H DUP (?) ; RA_Conyard_Controller_Improved_2_Registrant
?RA_Building_DeathSound_Registrant@@3V?$ScriptRegistrant@VRA_Building_DeathSound@@@@A DB 010H DUP (?) ; RA_Building_DeathSound_Registrant
?RA_Base_Defense_Simple_Registrant@@3V?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@A DB 010H DUP (?) ; RA_Base_Defense_Simple_Registrant
?RA_Base_Defense_Powered_Registrant@@3V?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@A DB 010H DUP (?) ; RA_Base_Defense_Powered_Registrant
?RA_Base_Defense_Chargeup_Registrant@@3V?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@A DB 010H DUP (?) ; RA_Base_Defense_Chargeup_Registrant
?RA_Vehicle_Regen_Registrant@@3V?$ScriptRegistrant@VRA_Vehicle_Regen@@@@A DB 010H DUP (?) ; RA_Vehicle_Regen_Registrant
?RA_Thief_Registrant@@3V?$ScriptRegistrant@VRA_Thief@@@@A DB 010H DUP (?) ; RA_Thief_Registrant
?RA_Thief_Improved_Registrant@@3V?$ScriptRegistrant@VRA_Thief_Improved@@@@A DB 010H DUP (?) ; RA_Thief_Improved_Registrant
?RA_Credit_Theft_Zone_Registrant@@3V?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@A DB 010H DUP (?) ; RA_Credit_Theft_Zone_Registrant
?RA_Credit_Theft_Zone_Timer_Registrant@@3V?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@A DB 010H DUP (?) ; RA_Credit_Theft_Zone_Timer_Registrant
?RA_DestroyNearest_OnDeath_Registrant@@3V?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@A DB 010H DUP (?) ; RA_DestroyNearest_OnDeath_Registrant
?RA_Ore_Truck_Registrant@@3V?$ScriptRegistrant@VRA_Ore_Truck@@@@A DB 010H DUP (?) ; RA_Ore_Truck_Registrant
?RA_Ore_Truck_2_Registrant@@3V?$ScriptRegistrant@VRA_Ore_Truck_2@@@@A DB 010H DUP (?) ; RA_Ore_Truck_2_Registrant
?RA_Ore_Field_Registrant@@3V?$ScriptRegistrant@VRA_Ore_Field@@@@A DB 010H DUP (?) ; RA_Ore_Field_Registrant
?RA_Ore_Delivery_Zone_Registrant@@3V?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@A DB 010H DUP (?) ; RA_Ore_Delivery_Zone_Registrant
?RA_Vehicle_Team_Set_Registrant@@3V?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@A DB 010H DUP (?) ; RA_Vehicle_Team_Set_Registrant
?RA_Vehicle_Team_Timer_Registrant@@3V?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@A DB 010H DUP (?) ; RA_Vehicle_Team_Timer_Registrant
?RA_Visible_Driver_Registrant@@3V?$ScriptRegistrant@VRA_Visible_Driver@@@@A DB 010H DUP (?) ; RA_Visible_Driver_Registrant
?RA_Vision_Control_Registrant@@3V?$ScriptRegistrant@VRA_Vision_Control@@@@A DB 010H DUP (?) ; RA_Vision_Control_Registrant
?RA_Vision_Control_2_Registrant@@3V?$ScriptRegistrant@VRA_Vision_Control_2@@@@A DB 010H DUP (?) ; RA_Vision_Control_2_Registrant
?RA_Fog_Level_Settings_Registrant@@3V?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@A DB 010H DUP (?) ; RA_Fog_Level_Settings_Registrant
?RA_Missile_Beacon_Registrant@@3V?$ScriptRegistrant@VRA_Missile_Beacon@@@@A DB 010H DUP (?) ; RA_Missile_Beacon_Registrant
?RA_Superweapon_Beacon_Registrant@@3V?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@A DB 010H DUP (?) ; RA_Superweapon_Beacon_Registrant
?RA_Beacon_Terminal_Registrant@@3V?$ScriptRegistrant@VRA_Beacon_Terminal@@@@A DB 010H DUP (?) ; RA_Beacon_Terminal_Registrant
?RA_Beacon_Terminal_2_Registrant@@3V?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@A DB 010H DUP (?) ; RA_Beacon_Terminal_2_Registrant
?RA_Beacon_Timer_Registrant@@3V?$ScriptRegistrant@VRA_Beacon_Timer@@@@A DB 010H DUP (?) ; RA_Beacon_Timer_Registrant
?RA_Missile_Control_Registrant@@3V?$ScriptRegistrant@VRA_Missile_Control@@@@A DB 010H DUP (?) ; RA_Missile_Control_Registrant
?RA_Missile_Controller_Registrant@@3V?$ScriptRegistrant@VRA_Missile_Controller@@@@A DB 010H DUP (?) ; RA_Missile_Controller_Registrant
?RA_Demolition_Truck_Retarded_Registrant@@3V?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@A DB 010H DUP (?) ; RA_Demolition_Truck_Retarded_Registrant
?RA_MAD_Tank_Devolved_Registrant@@3V?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@A DB 010H DUP (?) ; RA_MAD_Tank_Devolved_Registrant
_BSS	ENDS
;	COMDAT ?instancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@4V3@A
_BSS	SEGMENT
?instancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@4V3@A DB 014H DUP (?) ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::instancex
_BSS	ENDS
;	COMDAT ??_B?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@51
_BSS	SEGMENT
??_B?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@51 DD 01H DUP (?) ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::`local static guard'
_BSS	ENDS
;	COMDAT ?oh_dear@?7???R?$SafeDataClass@H@@QBEAAHXZ@4HA
_BSS	SEGMENT
?oh_dear@?7???R?$SafeDataClass@H@@QBEAAHXZ@4HA DD 01H DUP (?) ; `SafeDataClass<int>::operator()'::`8'::oh_dear
_BSS	ENDS
CRT$XCU	SEGMENT
_RA_Repair_Controller_Registrant$initializer$ DD FLAT:??__ERA_Repair_Controller_Registrant@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@80000000000000008000000000000000
CONST	SEGMENT
__xmm@80000000000000008000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c0000000
CONST	SEGMENT
__real@c0000000 DD 0c0000000r			; -2
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@461c4000
CONST	SEGMENT
__real@461c4000 DD 0461c4000r			; 10000
CONST	ENDS
;	COMDAT __real@44800000
CONST	SEGMENT
__real@44800000 DD 044800000r			; 1024
CONST	ENDS
;	COMDAT __real@44000000
CONST	SEGMENT
__real@44000000 DD 044000000r			; 512
CONST	ENDS
;	COMDAT __real@43960000
CONST	SEGMENT
__real@43960000 DD 043960000r			; 300
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@437a0000
CONST	SEGMENT
__real@437a0000 DD 0437a0000r			; 250
CONST	ENDS
;	COMDAT __real@43480000
CONST	SEGMENT
__real@43480000 DD 043480000r			; 200
CONST	ENDS
;	COMDAT __real@43160000
CONST	SEGMENT
__real@43160000 DD 043160000r			; 150
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42960000
CONST	SEGMENT
__real@42960000 DD 042960000r			; 75
CONST	ENDS
;	COMDAT __real@42200000
CONST	SEGMENT
__real@42200000 DD 042200000r			; 40
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@41100000
CONST	SEGMENT
__real@41100000 DD 041100000r			; 9
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe8000000000000
CONST	SEGMENT
__real@3fe8000000000000 DQ 03fe8000000000000r	; 0.75
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
CONST	ENDS
;	COMDAT __real@3fc90fdb
CONST	SEGMENT
__real@3fc90fdb DD 03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f79999a
CONST	SEGMENT
__real@3f79999a DD 03f79999ar			; 0.975
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@02081cea
CONST	SEGMENT
__real@02081cea DD 002081cear			; 1e-037
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@@8 ; ScriptRegistrant<RA_MAD_Tank_Devolved>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@8 ; ScriptRegistrant<RA_MAD_Tank_Devolved>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@8 DD 00H ; ScriptRegistrant<RA_MAD_Tank_Devolved>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_MAD_Tank_Devolved> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@6B@ DD 00H ; ScriptRegistrant<RA_MAD_Tank_Devolved>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@@8 ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@8 ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@8 DD 00H ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Demolition_Truck_Retarded> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@'
	DB	00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@6B@ DD 00H ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Missile_Controller@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Missile_Controller@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Missile_Controller@@@@@8 ; ScriptRegistrant<RA_Missile_Controller>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Missile_Controller@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Missile_Controller@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Missile_Controller@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Missile_Controller@@@@8 ; ScriptRegistrant<RA_Missile_Controller>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Missile_Controller@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Missile_Controller@@@@8 DD 00H ; ScriptRegistrant<RA_Missile_Controller>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Missile_Controller@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Missile_Controller@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Missile_Controller@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Missile_Controller> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Missile_Controller@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Missile_Controller@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Missile_Controller@@@@6B@ DD 00H ; ScriptRegistrant<RA_Missile_Controller>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Missile_Controller@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Missile_Controller@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Missile_Control@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Missile_Control@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Missile_Control@@@@@8 ; ScriptRegistrant<RA_Missile_Control>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Missile_Control@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Missile_Control@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Missile_Control@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Missile_Control@@@@8 ; ScriptRegistrant<RA_Missile_Control>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Missile_Control@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Missile_Control@@@@8 DD 00H	; ScriptRegistrant<RA_Missile_Control>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Missile_Control@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Missile_Control@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Missile_Control@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Missile_Control> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Missile_Control@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Missile_Control@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Missile_Control@@@@6B@ DD 00H ; ScriptRegistrant<RA_Missile_Control>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Missile_Control@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Missile_Control@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Beacon_Timer@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Beacon_Timer@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Beacon_Timer@@@@@8 ; ScriptRegistrant<RA_Beacon_Timer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Beacon_Timer@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Beacon_Timer@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Beacon_Timer@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Beacon_Timer@@@@8 ; ScriptRegistrant<RA_Beacon_Timer>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Beacon_Timer@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Beacon_Timer@@@@8 DD 00H	; ScriptRegistrant<RA_Beacon_Timer>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Beacon_Timer@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Beacon_Timer@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Beacon_Timer@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Beacon_Timer> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Beacon_Timer@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Beacon_Timer@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Beacon_Timer@@@@6B@ DD 00H	; ScriptRegistrant<RA_Beacon_Timer>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Beacon_Timer@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Beacon_Timer@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@@8 ; ScriptRegistrant<RA_Beacon_Terminal_2>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@8 ; ScriptRegistrant<RA_Beacon_Terminal_2>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@8 DD 00H ; ScriptRegistrant<RA_Beacon_Terminal_2>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Beacon_Terminal_2> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@6B@ DD 00H ; ScriptRegistrant<RA_Beacon_Terminal_2>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Beacon_Terminal@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Beacon_Terminal@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Beacon_Terminal@@@@@8 ; ScriptRegistrant<RA_Beacon_Terminal>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Beacon_Terminal@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Beacon_Terminal@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Beacon_Terminal@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Beacon_Terminal@@@@8 ; ScriptRegistrant<RA_Beacon_Terminal>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Beacon_Terminal@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Beacon_Terminal@@@@8 DD 00H	; ScriptRegistrant<RA_Beacon_Terminal>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Beacon_Terminal@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Beacon_Terminal@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Beacon_Terminal@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Beacon_Terminal> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Beacon_Terminal@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Beacon_Terminal@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Beacon_Terminal@@@@6B@ DD 00H ; ScriptRegistrant<RA_Beacon_Terminal>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Beacon_Terminal@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Beacon_Terminal@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@@8 ; ScriptRegistrant<RA_Superweapon_Beacon>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@8 ; ScriptRegistrant<RA_Superweapon_Beacon>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@8 DD 00H ; ScriptRegistrant<RA_Superweapon_Beacon>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Superweapon_Beacon> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@6B@ DD 00H ; ScriptRegistrant<RA_Superweapon_Beacon>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Missile_Beacon@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Missile_Beacon@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Missile_Beacon@@@@@8 ; ScriptRegistrant<RA_Missile_Beacon>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Missile_Beacon@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Missile_Beacon@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Missile_Beacon@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Missile_Beacon@@@@8 ; ScriptRegistrant<RA_Missile_Beacon>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Missile_Beacon@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Missile_Beacon@@@@8 DD 00H	; ScriptRegistrant<RA_Missile_Beacon>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Missile_Beacon@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Missile_Beacon@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Missile_Beacon@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Missile_Beacon> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Missile_Beacon@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Missile_Beacon@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Missile_Beacon@@@@6B@ DD 00H ; ScriptRegistrant<RA_Missile_Beacon>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Missile_Beacon@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Missile_Beacon@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@@8 ; ScriptRegistrant<RA_Fog_Level_Settings>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@8 ; ScriptRegistrant<RA_Fog_Level_Settings>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@8 DD 00H ; ScriptRegistrant<RA_Fog_Level_Settings>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Fog_Level_Settings> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@6B@ DD 00H ; ScriptRegistrant<RA_Fog_Level_Settings>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vision_Control_2@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vision_Control_2@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Vision_Control_2@@@@@8 ; ScriptRegistrant<RA_Vision_Control_2>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Vision_Control_2@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Vision_Control_2@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Vision_Control_2@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vision_Control_2@@@@8 ; ScriptRegistrant<RA_Vision_Control_2>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Vision_Control_2@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Vision_Control_2@@@@8 DD 00H ; ScriptRegistrant<RA_Vision_Control_2>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Vision_Control_2@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Vision_Control_2@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Vision_Control_2@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Vision_Control_2> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Vision_Control_2@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Vision_Control_2@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Vision_Control_2@@@@6B@ DD 00H ; ScriptRegistrant<RA_Vision_Control_2>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Vision_Control_2@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Vision_Control_2@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vision_Control@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vision_Control@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Vision_Control@@@@@8 ; ScriptRegistrant<RA_Vision_Control>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Vision_Control@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Vision_Control@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Vision_Control@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vision_Control@@@@8 ; ScriptRegistrant<RA_Vision_Control>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Vision_Control@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Vision_Control@@@@8 DD 00H	; ScriptRegistrant<RA_Vision_Control>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Vision_Control@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Vision_Control@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Vision_Control@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Vision_Control> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Vision_Control@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Vision_Control@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Vision_Control@@@@6B@ DD 00H ; ScriptRegistrant<RA_Vision_Control>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Vision_Control@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Vision_Control@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Visible_Driver@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Visible_Driver@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Visible_Driver@@@@@8 ; ScriptRegistrant<RA_Visible_Driver>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Visible_Driver@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Visible_Driver@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Visible_Driver@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Visible_Driver@@@@8 ; ScriptRegistrant<RA_Visible_Driver>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Visible_Driver@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Visible_Driver@@@@8 DD 00H	; ScriptRegistrant<RA_Visible_Driver>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Visible_Driver@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Visible_Driver@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Visible_Driver@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Visible_Driver> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Visible_Driver@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Visible_Driver@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Visible_Driver@@@@6B@ DD 00H ; ScriptRegistrant<RA_Visible_Driver>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Visible_Driver@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Visible_Driver@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@@8 ; ScriptRegistrant<RA_Vehicle_Team_Timer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@8 ; ScriptRegistrant<RA_Vehicle_Team_Timer>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@8 DD 00H ; ScriptRegistrant<RA_Vehicle_Team_Timer>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Vehicle_Team_Timer> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@6B@ DD 00H ; ScriptRegistrant<RA_Vehicle_Team_Timer>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@@8 ; ScriptRegistrant<RA_Vehicle_Team_Set>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@8 ; ScriptRegistrant<RA_Vehicle_Team_Set>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@8 DD 00H ; ScriptRegistrant<RA_Vehicle_Team_Set>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Vehicle_Team_Set> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@6B@ DD 00H ; ScriptRegistrant<RA_Vehicle_Team_Set>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@@8 ; ScriptRegistrant<RA_Ore_Delivery_Zone>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@8 ; ScriptRegistrant<RA_Ore_Delivery_Zone>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@8 DD 00H ; ScriptRegistrant<RA_Ore_Delivery_Zone>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Ore_Delivery_Zone> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@6B@ DD 00H ; ScriptRegistrant<RA_Ore_Delivery_Zone>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Ore_Field@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Ore_Field@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Ore_Field@@@@@8 ; ScriptRegistrant<RA_Ore_Field>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Ore_Field@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Ore_Field@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Ore_Field@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Ore_Field@@@@8 ; ScriptRegistrant<RA_Ore_Field>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Ore_Field@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Ore_Field@@@@8 DD 00H	; ScriptRegistrant<RA_Ore_Field>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Ore_Field@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Ore_Field@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Ore_Field@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Ore_Field> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Ore_Field@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Ore_Field@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Ore_Field@@@@6B@ DD 00H	; ScriptRegistrant<RA_Ore_Field>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Ore_Field@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Ore_Field@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Ore_Truck_2@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Ore_Truck_2@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Ore_Truck_2@@@@@8 ; ScriptRegistrant<RA_Ore_Truck_2>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Ore_Truck_2@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Ore_Truck_2@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Ore_Truck_2@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Ore_Truck_2@@@@8 ; ScriptRegistrant<RA_Ore_Truck_2>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Ore_Truck_2@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Ore_Truck_2@@@@8 DD 00H	; ScriptRegistrant<RA_Ore_Truck_2>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Ore_Truck_2@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Ore_Truck_2@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Ore_Truck_2@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Ore_Truck_2> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Ore_Truck_2@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Ore_Truck_2@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Ore_Truck_2@@@@6B@ DD 00H	; ScriptRegistrant<RA_Ore_Truck_2>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Ore_Truck_2@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Ore_Truck_2@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Ore_Truck@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Ore_Truck@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Ore_Truck@@@@@8 ; ScriptRegistrant<RA_Ore_Truck>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Ore_Truck@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Ore_Truck@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Ore_Truck@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Ore_Truck@@@@8 ; ScriptRegistrant<RA_Ore_Truck>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Ore_Truck@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Ore_Truck@@@@8 DD 00H	; ScriptRegistrant<RA_Ore_Truck>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Ore_Truck@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Ore_Truck@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Ore_Truck@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Ore_Truck> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Ore_Truck@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Ore_Truck@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Ore_Truck@@@@6B@ DD 00H	; ScriptRegistrant<RA_Ore_Truck>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Ore_Truck@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Ore_Truck@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@@8 ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@8 ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@8 DD 00H ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_DestroyNearest_OnDeath> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@6B@ DD 00H ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@@8 ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@8 ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@8 DD 00H ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@6B@ DD 00H ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@@8 ; ScriptRegistrant<RA_Credit_Theft_Zone>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@8 ; ScriptRegistrant<RA_Credit_Theft_Zone>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@8 DD 00H ; ScriptRegistrant<RA_Credit_Theft_Zone>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Credit_Theft_Zone> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@6B@ DD 00H ; ScriptRegistrant<RA_Credit_Theft_Zone>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Thief_Improved@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Thief_Improved@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Thief_Improved@@@@@8 ; ScriptRegistrant<RA_Thief_Improved>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Thief_Improved@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Thief_Improved@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Thief_Improved@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Thief_Improved@@@@8 ; ScriptRegistrant<RA_Thief_Improved>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Thief_Improved@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Thief_Improved@@@@8 DD 00H	; ScriptRegistrant<RA_Thief_Improved>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Thief_Improved@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Thief_Improved@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Thief_Improved@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Thief_Improved> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Thief_Improved@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Thief_Improved@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Thief_Improved@@@@6B@ DD 00H ; ScriptRegistrant<RA_Thief_Improved>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Thief_Improved@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Thief_Improved@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Thief@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Thief@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Thief@@@@@8 ; ScriptRegistrant<RA_Thief>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Thief@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Thief@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Thief@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Thief@@@@8 ; ScriptRegistrant<RA_Thief>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Thief@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Thief@@@@8 DD 00H		; ScriptRegistrant<RA_Thief>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Thief@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Thief@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Thief@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Thief> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Thief@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Thief@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Thief@@@@6B@ DD 00H		; ScriptRegistrant<RA_Thief>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Thief@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Thief@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vehicle_Regen@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vehicle_Regen@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Vehicle_Regen@@@@@8 ; ScriptRegistrant<RA_Vehicle_Regen>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Vehicle_Regen@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Vehicle_Regen@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Vehicle_Regen@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Vehicle_Regen@@@@8 ; ScriptRegistrant<RA_Vehicle_Regen>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Vehicle_Regen@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Vehicle_Regen@@@@8 DD 00H	; ScriptRegistrant<RA_Vehicle_Regen>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Vehicle_Regen@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Vehicle_Regen@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Vehicle_Regen@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Vehicle_Regen> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Vehicle_Regen@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Vehicle_Regen@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Vehicle_Regen@@@@6B@ DD 00H	; ScriptRegistrant<RA_Vehicle_Regen>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Vehicle_Regen@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Vehicle_Regen@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@@8 ; ScriptRegistrant<RA_Base_Defense_Chargeup>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@8 ; ScriptRegistrant<RA_Base_Defense_Chargeup>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@8 DD 00H ; ScriptRegistrant<RA_Base_Defense_Chargeup>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Base_Defense_Chargeup> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@6B@ DD 00H ; ScriptRegistrant<RA_Base_Defense_Chargeup>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@@8 ; ScriptRegistrant<RA_Base_Defense_Powered>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@8 ; ScriptRegistrant<RA_Base_Defense_Powered>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@8 DD 00H ; ScriptRegistrant<RA_Base_Defense_Powered>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Base_Defense_Powered> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@6B@ DD 00H ; ScriptRegistrant<RA_Base_Defense_Powered>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@@8 ; ScriptRegistrant<RA_Base_Defense_Simple>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@8 ; ScriptRegistrant<RA_Base_Defense_Simple>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@8 DD 00H ; ScriptRegistrant<RA_Base_Defense_Simple>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Base_Defense_Simple> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@6B@ DD 00H ; ScriptRegistrant<RA_Base_Defense_Simple>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Building_DeathSound@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Building_DeathSound@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Building_DeathSound@@@@@8 ; ScriptRegistrant<RA_Building_DeathSound>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Building_DeathSound@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Building_DeathSound@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Building_DeathSound@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Building_DeathSound@@@@8 ; ScriptRegistrant<RA_Building_DeathSound>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Building_DeathSound@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Building_DeathSound@@@@8 DD 00H ; ScriptRegistrant<RA_Building_DeathSound>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Building_DeathSound@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Building_DeathSound@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Building_DeathSound@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Building_DeathSound> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Building_DeathSound@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Building_DeathSound@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Building_DeathSound@@@@6B@ DD 00H ; ScriptRegistrant<RA_Building_DeathSound>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Building_DeathSound@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Building_DeathSound@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@@8 ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@8 ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@8 DD 00H ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Conyard_Controller_Improved_2> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2'
	DB	'@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@6B@ DD 00H ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@@8 ; ScriptRegistrant<RA_Conyard_Controller_Improved>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@8 ; ScriptRegistrant<RA_Conyard_Controller_Improved>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@8 DD 00H ; ScriptRegistrant<RA_Conyard_Controller_Improved>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Conyard_Controller_Improved> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@'
	DB	'@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@6B@ DD 00H ; ScriptRegistrant<RA_Conyard_Controller_Improved>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@@8 ; ScriptRegistrant<RA_MAD_Tank_Improved>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@8 ; ScriptRegistrant<RA_MAD_Tank_Improved>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@8 DD 00H ; ScriptRegistrant<RA_MAD_Tank_Improved>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_MAD_Tank_Improved> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@6B@ DD 00H ; ScriptRegistrant<RA_MAD_Tank_Improved>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_CTF_Zone@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_CTF_Zone@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_CTF_Zone@@@@@8 ; ScriptRegistrant<RA_CTF_Zone>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_CTF_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_CTF_Zone@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_CTF_Zone@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_CTF_Zone@@@@8 ; ScriptRegistrant<RA_CTF_Zone>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_CTF_Zone@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_CTF_Zone@@@@8 DD 00H	; ScriptRegistrant<RA_CTF_Zone>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_CTF_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_CTF_Zone@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_CTF_Zone@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_CTF_Zone> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_CTF_Zone@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_CTF_Zone@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_CTF_Zone@@@@6B@ DD 00H	; ScriptRegistrant<RA_CTF_Zone>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_CTF_Zone@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_CTF_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@@8 ; ScriptRegistrant<RA_Demolition_Truck_Improved>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@8 ; ScriptRegistrant<RA_Demolition_Truck_Improved>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@8 DD 00H ; ScriptRegistrant<RA_Demolition_Truck_Improved>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Demolition_Truck_Improved> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@'
	DB	00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@6B@ DD 00H ; ScriptRegistrant<RA_Demolition_Truck_Improved>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@@8 ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@8 ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@8 DD 00H ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_ObjectDeath_OnDeath> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@6B@ DD 00H ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Conyard_Repair@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Conyard_Repair@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Conyard_Repair@@@@@8 ; ScriptRegistrant<RA_Conyard_Repair>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Conyard_Repair@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Conyard_Repair@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Conyard_Repair@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Conyard_Repair@@@@8 ; ScriptRegistrant<RA_Conyard_Repair>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Conyard_Repair@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Conyard_Repair@@@@8 DD 00H	; ScriptRegistrant<RA_Conyard_Repair>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Conyard_Repair@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Conyard_Repair@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Conyard_Repair@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Conyard_Repair> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Conyard_Repair@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Conyard_Repair@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Conyard_Repair@@@@6B@ DD 00H ; ScriptRegistrant<RA_Conyard_Repair>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Conyard_Repair@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Conyard_Repair@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_DriverDeath@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_DriverDeath@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_DriverDeath@@@@@8 ; ScriptRegistrant<RA_DriverDeath>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_DriverDeath@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_DriverDeath@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_DriverDeath@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_DriverDeath@@@@8 ; ScriptRegistrant<RA_DriverDeath>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_DriverDeath@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_DriverDeath@@@@8 DD 00H	; ScriptRegistrant<RA_DriverDeath>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_DriverDeath@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_DriverDeath@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_DriverDeath@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_DriverDeath> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_DriverDeath@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_DriverDeath@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_DriverDeath@@@@6B@ DD 00H	; ScriptRegistrant<RA_DriverDeath>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_DriverDeath@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_DriverDeath@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_GameStart_Detector@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_GameStart_Detector@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_GameStart_Detector@@@@@8 ; ScriptRegistrant<RA_GameStart_Detector>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_GameStart_Detector@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_GameStart_Detector@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_GameStart_Detector@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_GameStart_Detector@@@@8 ; ScriptRegistrant<RA_GameStart_Detector>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_GameStart_Detector@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_GameStart_Detector@@@@8 DD 00H ; ScriptRegistrant<RA_GameStart_Detector>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_GameStart_Detector@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_GameStart_Detector@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_GameStart_Detector@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_GameStart_Detector> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_GameStart_Detector@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_GameStart_Detector@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_GameStart_Detector@@@@6B@ DD 00H ; ScriptRegistrant<RA_GameStart_Detector>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_GameStart_Detector@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_GameStart_Detector@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Damaged_Credits@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Damaged_Credits@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Damaged_Credits@@@@@8 ; ScriptRegistrant<RA_Damaged_Credits>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Damaged_Credits@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Damaged_Credits@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Damaged_Credits@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Damaged_Credits@@@@8 ; ScriptRegistrant<RA_Damaged_Credits>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Damaged_Credits@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Damaged_Credits@@@@8 DD 00H	; ScriptRegistrant<RA_Damaged_Credits>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Damaged_Credits@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Damaged_Credits@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Damaged_Credits@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Damaged_Credits> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Damaged_Credits@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Damaged_Credits@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Damaged_Credits@@@@6B@ DD 00H ; ScriptRegistrant<RA_Damaged_Credits>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Damaged_Credits@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Damaged_Credits@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Naval_Zone@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Naval_Zone@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Naval_Zone@@@@@8 ; ScriptRegistrant<RA_Naval_Zone>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Naval_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Naval_Zone@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Naval_Zone@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Naval_Zone@@@@8 ; ScriptRegistrant<RA_Naval_Zone>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Naval_Zone@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Naval_Zone@@@@8 DD 00H	; ScriptRegistrant<RA_Naval_Zone>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Naval_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Naval_Zone@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Naval_Zone@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Naval_Zone> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Naval_Zone@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Naval_Zone@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Naval_Zone@@@@6B@ DD 00H	; ScriptRegistrant<RA_Naval_Zone>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Naval_Zone@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Naval_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Naval_Unit@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Naval_Unit@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Naval_Unit@@@@@8 ; ScriptRegistrant<RA_Naval_Unit>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Naval_Unit@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Naval_Unit@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Naval_Unit@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Naval_Unit@@@@8 ; ScriptRegistrant<RA_Naval_Unit>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Naval_Unit@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Naval_Unit@@@@8 DD 00H	; ScriptRegistrant<RA_Naval_Unit>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Naval_Unit@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Naval_Unit@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Naval_Unit@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Naval_Unit> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Naval_Unit@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Naval_Unit@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Naval_Unit@@@@6B@ DD 00H	; ScriptRegistrant<RA_Naval_Unit>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Naval_Unit@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Naval_Unit@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@@8 ; ScriptRegistrant<RA_Naval_PT_Pokable>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@8 ; ScriptRegistrant<RA_Naval_PT_Pokable>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@8 DD 00H ; ScriptRegistrant<RA_Naval_PT_Pokable>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Naval_PT_Pokable> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@6B@ DD 00H ; ScriptRegistrant<RA_Naval_PT_Pokable>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Naval_Yard@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Naval_Yard@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Naval_Yard@@@@@8 ; ScriptRegistrant<RA_Naval_Yard>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Naval_Yard@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Naval_Yard@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Naval_Yard@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Naval_Yard@@@@8 ; ScriptRegistrant<RA_Naval_Yard>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Naval_Yard@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Naval_Yard@@@@8 DD 00H	; ScriptRegistrant<RA_Naval_Yard>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Naval_Yard@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Naval_Yard@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Naval_Yard@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Naval_Yard> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Naval_Yard@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Naval_Yard@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Naval_Yard@@@@6B@ DD 00H	; ScriptRegistrant<RA_Naval_Yard>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Naval_Yard@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Naval_Yard@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@@8 ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@8 ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@8 DD 00H ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_ObjectDeath_OnCreate> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@6B@ DD 00H ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Mine_Manager@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Mine_Manager@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Mine_Manager@@@@@8 ; ScriptRegistrant<RA_Mine_Manager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Mine_Manager@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Mine_Manager@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Mine_Manager@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Mine_Manager@@@@8 ; ScriptRegistrant<RA_Mine_Manager>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Mine_Manager@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Mine_Manager@@@@8 DD 00H	; ScriptRegistrant<RA_Mine_Manager>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Mine_Manager@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Mine_Manager@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Mine_Manager@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Mine_Manager> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Mine_Manager@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Mine_Manager@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Mine_Manager@@@@6B@ DD 00H	; ScriptRegistrant<RA_Mine_Manager>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Mine_Manager@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Mine_Manager@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Mine@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Mine@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Mine@@@@@8 ; ScriptRegistrant<RA_Mine>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Mine@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Mine@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Mine@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Mine@@@@8 ; ScriptRegistrant<RA_Mine>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Mine@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Mine@@@@8 DD 00H		; ScriptRegistrant<RA_Mine>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Mine@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Mine@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Mine@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Mine> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Mine@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Mine@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Mine@@@@6B@ DD 00H		; ScriptRegistrant<RA_Mine>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Mine@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Mine@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_MineLayer@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_MineLayer@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_MineLayer@@@@@8 ; ScriptRegistrant<RA_MineLayer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_MineLayer@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_MineLayer@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_MineLayer@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_MineLayer@@@@8 ; ScriptRegistrant<RA_MineLayer>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_MineLayer@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_MineLayer@@@@8 DD 00H	; ScriptRegistrant<RA_MineLayer>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_MineLayer@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_MineLayer@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_MineLayer@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_MineLayer> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_MineLayer@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_MineLayer@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_MineLayer@@@@6B@ DD 00H	; ScriptRegistrant<RA_MineLayer>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_MineLayer@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_MineLayer@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Helipad_Zone@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Helipad_Zone@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Helipad_Zone@@@@@8 ; ScriptRegistrant<RA_Helipad_Zone>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Helipad_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Helipad_Zone@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Helipad_Zone@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Helipad_Zone@@@@8 ; ScriptRegistrant<RA_Helipad_Zone>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Helipad_Zone@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Helipad_Zone@@@@8 DD 00H	; ScriptRegistrant<RA_Helipad_Zone>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Helipad_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Helipad_Zone@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Helipad_Zone@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Helipad_Zone> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Helipad_Zone@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Helipad_Zone@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Helipad_Zone@@@@6B@ DD 00H	; ScriptRegistrant<RA_Helipad_Zone>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Helipad_Zone@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Helipad_Zone@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@@8 ; ScriptRegistrant<RA_Infantry_NotSpy>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@8 ; ScriptRegistrant<RA_Infantry_NotSpy>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@8 DD 00H	; ScriptRegistrant<RA_Infantry_NotSpy>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Infantry_NotSpy> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@6B@ DD 00H ; ScriptRegistrant<RA_Infantry_NotSpy>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Infantry_Spy@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Infantry_Spy@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Infantry_Spy@@@@@8 ; ScriptRegistrant<RA_Infantry_Spy>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Infantry_Spy@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Infantry_Spy@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Infantry_Spy@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Infantry_Spy@@@@8 ; ScriptRegistrant<RA_Infantry_Spy>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Infantry_Spy@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Infantry_Spy@@@@8 DD 00H	; ScriptRegistrant<RA_Infantry_Spy>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Infantry_Spy@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Infantry_Spy@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Infantry_Spy@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Infantry_Spy> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Infantry_Spy@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Infantry_Spy@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Infantry_Spy@@@@6B@ DD 00H	; ScriptRegistrant<RA_Infantry_Spy>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Infantry_Spy@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Infantry_Spy@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Repair_Script@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Repair_Script@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Repair_Script@@@@@8 ; ScriptRegistrant<RA_Repair_Script>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Repair_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Repair_Script@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Repair_Script@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Repair_Script@@@@8 ; ScriptRegistrant<RA_Repair_Script>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Repair_Script@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Repair_Script@@@@8 DD 00H	; ScriptRegistrant<RA_Repair_Script>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Repair_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Repair_Script@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Repair_Script@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Repair_Script> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Repair_Script@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Repair_Script@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Repair_Script@@@@6B@ DD 00H	; ScriptRegistrant<RA_Repair_Script>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Repair_Script@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Repair_Script@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Repair_Controller@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Repair_Controller@@@@8 DD FLAT:??_R0?AV?$ScriptRegistrant@VRA_Repair_Controller@@@@@8 ; ScriptRegistrant<RA_Repair_Controller>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Repair_Controller@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ScriptRegistrant@VRA_Repair_Controller@@@@8
rdata$r	SEGMENT
??_R2?$ScriptRegistrant@VRA_Repair_Controller@@@@8 DD FLAT:??_R1A@?0A@EA@?$ScriptRegistrant@VRA_Repair_Controller@@@@8 ; ScriptRegistrant<RA_Repair_Controller>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ScriptRegistrant@VRA_Repair_Controller@@@@8
rdata$r	SEGMENT
??_R3?$ScriptRegistrant@VRA_Repair_Controller@@@@8 DD 00H ; ScriptRegistrant<RA_Repair_Controller>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$ScriptRegistrant@VRA_Repair_Controller@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ScriptRegistrant@VRA_Repair_Controller@@@@@8
_DATA	SEGMENT
??_R0?AV?$ScriptRegistrant@VRA_Repair_Controller@@@@@8 DD FLAT:??_7type_info@@6B@ ; ScriptRegistrant<RA_Repair_Controller> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ScriptRegistrant@VRA_Repair_Controller@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$ScriptRegistrant@VRA_Repair_Controller@@@@6B@
rdata$r	SEGMENT
??_R4?$ScriptRegistrant@VRA_Repair_Controller@@@@6B@ DD 00H ; ScriptRegistrant<RA_Repair_Controller>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ScriptRegistrant@VRA_Repair_Controller@@@@@8
	DD	FLAT:??_R3?$ScriptRegistrant@VRA_Repair_Controller@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Superweapon_Beacon@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Superweapon_Beacon@@8 DD FLAT:??_R0?AVRA_Superweapon_Beacon@@@8 ; RA_Superweapon_Beacon::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Superweapon_Beacon@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Superweapon_Beacon@@8
rdata$r	SEGMENT
??_R2RA_Superweapon_Beacon@@8 DD FLAT:??_R1A@?0A@EA@RA_Superweapon_Beacon@@8 ; RA_Superweapon_Beacon::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Superweapon_Beacon@@8
rdata$r	SEGMENT
??_R3RA_Superweapon_Beacon@@8 DD 00H			; RA_Superweapon_Beacon::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Superweapon_Beacon@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Superweapon_Beacon@@@8
_DATA	SEGMENT
??_R0?AVRA_Superweapon_Beacon@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Superweapon_Beacon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Superweapon_Beacon@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Superweapon_Beacon@@6B@
rdata$r	SEGMENT
??_R4RA_Superweapon_Beacon@@6B@ DD 00H			; RA_Superweapon_Beacon::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Superweapon_Beacon@@@8
	DD	FLAT:??_R3RA_Superweapon_Beacon@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_MAD_Tank_Devolved@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_MAD_Tank_Devolved@@8 DD FLAT:??_R0?AVRA_MAD_Tank_Devolved@@@8 ; RA_MAD_Tank_Devolved::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_MAD_Tank_Devolved@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_MAD_Tank_Devolved@@8
rdata$r	SEGMENT
??_R2RA_MAD_Tank_Devolved@@8 DD FLAT:??_R1A@?0A@EA@RA_MAD_Tank_Devolved@@8 ; RA_MAD_Tank_Devolved::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@JFW_Key_Hook_Base@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_MAD_Tank_Devolved@@8
rdata$r	SEGMENT
??_R3RA_MAD_Tank_Devolved@@8 DD 00H			; RA_MAD_Tank_Devolved::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2RA_MAD_Tank_Devolved@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_MAD_Tank_Devolved@@@8
_DATA	SEGMENT
??_R0?AVRA_MAD_Tank_Devolved@@@8 DD FLAT:??_7type_info@@6B@ ; RA_MAD_Tank_Devolved `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_MAD_Tank_Devolved@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_MAD_Tank_Devolved@@6B@
rdata$r	SEGMENT
??_R4RA_MAD_Tank_Devolved@@6B@ DD 00H			; RA_MAD_Tank_Devolved::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_MAD_Tank_Devolved@@@8
	DD	FLAT:??_R3RA_MAD_Tank_Devolved@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Demolition_Truck_Retarded@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Demolition_Truck_Retarded@@8 DD FLAT:??_R0?AVRA_Demolition_Truck_Retarded@@@8 ; RA_Demolition_Truck_Retarded::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Demolition_Truck_Retarded@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Demolition_Truck_Retarded@@8
rdata$r	SEGMENT
??_R2RA_Demolition_Truck_Retarded@@8 DD FLAT:??_R1A@?0A@EA@RA_Demolition_Truck_Retarded@@8 ; RA_Demolition_Truck_Retarded::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Demolition_Truck_Retarded@@8
rdata$r	SEGMENT
??_R3RA_Demolition_Truck_Retarded@@8 DD 00H		; RA_Demolition_Truck_Retarded::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Demolition_Truck_Retarded@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Demolition_Truck_Retarded@@@8
_DATA	SEGMENT
??_R0?AVRA_Demolition_Truck_Retarded@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Demolition_Truck_Retarded `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Demolition_Truck_Retarded@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Demolition_Truck_Retarded@@6B@
rdata$r	SEGMENT
??_R4RA_Demolition_Truck_Retarded@@6B@ DD 00H		; RA_Demolition_Truck_Retarded::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Demolition_Truck_Retarded@@@8
	DD	FLAT:??_R3RA_Demolition_Truck_Retarded@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Missile_Controller@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Missile_Controller@@8 DD FLAT:??_R0?AVRA_Missile_Controller@@@8 ; RA_Missile_Controller::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Missile_Controller@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Missile_Controller@@8
rdata$r	SEGMENT
??_R2RA_Missile_Controller@@8 DD FLAT:??_R1A@?0A@EA@RA_Missile_Controller@@8 ; RA_Missile_Controller::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Missile_Controller@@8
rdata$r	SEGMENT
??_R3RA_Missile_Controller@@8 DD 00H			; RA_Missile_Controller::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Missile_Controller@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Missile_Controller@@@8
_DATA	SEGMENT
??_R0?AVRA_Missile_Controller@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Missile_Controller `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Missile_Controller@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Missile_Controller@@6B@
rdata$r	SEGMENT
??_R4RA_Missile_Controller@@6B@ DD 00H			; RA_Missile_Controller::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Missile_Controller@@@8
	DD	FLAT:??_R3RA_Missile_Controller@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Missile_Control@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Missile_Control@@8 DD FLAT:??_R0?AVRA_Missile_Control@@@8 ; RA_Missile_Control::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Missile_Control@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Missile_Control@@8
rdata$r	SEGMENT
??_R2RA_Missile_Control@@8 DD FLAT:??_R1A@?0A@EA@RA_Missile_Control@@8 ; RA_Missile_Control::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Missile_Control@@8
rdata$r	SEGMENT
??_R3RA_Missile_Control@@8 DD 00H			; RA_Missile_Control::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Missile_Control@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Missile_Control@@@8
_DATA	SEGMENT
??_R0?AVRA_Missile_Control@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Missile_Control `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Missile_Control@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Missile_Control@@6B@
rdata$r	SEGMENT
??_R4RA_Missile_Control@@6B@ DD 00H			; RA_Missile_Control::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Missile_Control@@@8
	DD	FLAT:??_R3RA_Missile_Control@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Beacon_Timer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Beacon_Timer@@8 DD FLAT:??_R0?AVRA_Beacon_Timer@@@8 ; RA_Beacon_Timer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Beacon_Timer@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Beacon_Timer@@8
rdata$r	SEGMENT
??_R2RA_Beacon_Timer@@8 DD FLAT:??_R1A@?0A@EA@RA_Beacon_Timer@@8 ; RA_Beacon_Timer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Beacon_Timer@@8
rdata$r	SEGMENT
??_R3RA_Beacon_Timer@@8 DD 00H				; RA_Beacon_Timer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Beacon_Timer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Beacon_Timer@@@8
_DATA	SEGMENT
??_R0?AVRA_Beacon_Timer@@@8 DD FLAT:??_7type_info@@6B@	; RA_Beacon_Timer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Beacon_Timer@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Beacon_Timer@@6B@
rdata$r	SEGMENT
??_R4RA_Beacon_Timer@@6B@ DD 00H			; RA_Beacon_Timer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Beacon_Timer@@@8
	DD	FLAT:??_R3RA_Beacon_Timer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Beacon_Terminal_2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Beacon_Terminal_2@@8 DD FLAT:??_R0?AVRA_Beacon_Terminal_2@@@8 ; RA_Beacon_Terminal_2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Beacon_Terminal_2@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Beacon_Terminal_2@@8
rdata$r	SEGMENT
??_R2RA_Beacon_Terminal_2@@8 DD FLAT:??_R1A@?0A@EA@RA_Beacon_Terminal_2@@8 ; RA_Beacon_Terminal_2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Beacon_Terminal_2@@8
rdata$r	SEGMENT
??_R3RA_Beacon_Terminal_2@@8 DD 00H			; RA_Beacon_Terminal_2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Beacon_Terminal_2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Beacon_Terminal_2@@@8
_DATA	SEGMENT
??_R0?AVRA_Beacon_Terminal_2@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Beacon_Terminal_2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Beacon_Terminal_2@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Beacon_Terminal_2@@6B@
rdata$r	SEGMENT
??_R4RA_Beacon_Terminal_2@@6B@ DD 00H			; RA_Beacon_Terminal_2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Beacon_Terminal_2@@@8
	DD	FLAT:??_R3RA_Beacon_Terminal_2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Beacon_Terminal@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Beacon_Terminal@@8 DD FLAT:??_R0?AVRA_Beacon_Terminal@@@8 ; RA_Beacon_Terminal::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Beacon_Terminal@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Beacon_Terminal@@8
rdata$r	SEGMENT
??_R2RA_Beacon_Terminal@@8 DD FLAT:??_R1A@?0A@EA@RA_Beacon_Terminal@@8 ; RA_Beacon_Terminal::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Beacon_Terminal@@8
rdata$r	SEGMENT
??_R3RA_Beacon_Terminal@@8 DD 00H			; RA_Beacon_Terminal::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Beacon_Terminal@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Beacon_Terminal@@@8
_DATA	SEGMENT
??_R0?AVRA_Beacon_Terminal@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Beacon_Terminal `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Beacon_Terminal@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Beacon_Terminal@@6B@
rdata$r	SEGMENT
??_R4RA_Beacon_Terminal@@6B@ DD 00H			; RA_Beacon_Terminal::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Beacon_Terminal@@@8
	DD	FLAT:??_R3RA_Beacon_Terminal@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Missile_Beacon@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Missile_Beacon@@8 DD FLAT:??_R0?AVRA_Missile_Beacon@@@8 ; RA_Missile_Beacon::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Missile_Beacon@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Missile_Beacon@@8
rdata$r	SEGMENT
??_R2RA_Missile_Beacon@@8 DD FLAT:??_R1A@?0A@EA@RA_Missile_Beacon@@8 ; RA_Missile_Beacon::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Missile_Beacon@@8
rdata$r	SEGMENT
??_R3RA_Missile_Beacon@@8 DD 00H			; RA_Missile_Beacon::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Missile_Beacon@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Missile_Beacon@@@8
_DATA	SEGMENT
??_R0?AVRA_Missile_Beacon@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Missile_Beacon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Missile_Beacon@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Missile_Beacon@@6B@
rdata$r	SEGMENT
??_R4RA_Missile_Beacon@@6B@ DD 00H			; RA_Missile_Beacon::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Missile_Beacon@@@8
	DD	FLAT:??_R3RA_Missile_Beacon@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Fog_Level_Settings@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Fog_Level_Settings@@8 DD FLAT:??_R0?AVRA_Fog_Level_Settings@@@8 ; RA_Fog_Level_Settings::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Fog_Level_Settings@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Fog_Level_Settings@@8
rdata$r	SEGMENT
??_R2RA_Fog_Level_Settings@@8 DD FLAT:??_R1A@?0A@EA@RA_Fog_Level_Settings@@8 ; RA_Fog_Level_Settings::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Fog_Level_Settings@@8
rdata$r	SEGMENT
??_R3RA_Fog_Level_Settings@@8 DD 00H			; RA_Fog_Level_Settings::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Fog_Level_Settings@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Fog_Level_Settings@@@8
_DATA	SEGMENT
??_R0?AVRA_Fog_Level_Settings@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Fog_Level_Settings `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Fog_Level_Settings@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Fog_Level_Settings@@6B@
rdata$r	SEGMENT
??_R4RA_Fog_Level_Settings@@6B@ DD 00H			; RA_Fog_Level_Settings::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Fog_Level_Settings@@@8
	DD	FLAT:??_R3RA_Fog_Level_Settings@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Vision_Control_2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Vision_Control_2@@8 DD FLAT:??_R0?AVRA_Vision_Control_2@@@8 ; RA_Vision_Control_2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Vision_Control_2@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Vision_Control_2@@8
rdata$r	SEGMENT
??_R2RA_Vision_Control_2@@8 DD FLAT:??_R1A@?0A@EA@RA_Vision_Control_2@@8 ; RA_Vision_Control_2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Vision_Control_2@@8
rdata$r	SEGMENT
??_R3RA_Vision_Control_2@@8 DD 00H			; RA_Vision_Control_2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Vision_Control_2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Vision_Control_2@@@8
_DATA	SEGMENT
??_R0?AVRA_Vision_Control_2@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Vision_Control_2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Vision_Control_2@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Vision_Control_2@@6B@
rdata$r	SEGMENT
??_R4RA_Vision_Control_2@@6B@ DD 00H			; RA_Vision_Control_2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Vision_Control_2@@@8
	DD	FLAT:??_R3RA_Vision_Control_2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Vision_Control@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Vision_Control@@8 DD FLAT:??_R0?AVRA_Vision_Control@@@8 ; RA_Vision_Control::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Vision_Control@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Vision_Control@@8
rdata$r	SEGMENT
??_R2RA_Vision_Control@@8 DD FLAT:??_R1A@?0A@EA@RA_Vision_Control@@8 ; RA_Vision_Control::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Vision_Control@@8
rdata$r	SEGMENT
??_R3RA_Vision_Control@@8 DD 00H			; RA_Vision_Control::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Vision_Control@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Vision_Control@@@8
_DATA	SEGMENT
??_R0?AVRA_Vision_Control@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Vision_Control `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Vision_Control@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Vision_Control@@6B@
rdata$r	SEGMENT
??_R4RA_Vision_Control@@6B@ DD 00H			; RA_Vision_Control::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Vision_Control@@@8
	DD	FLAT:??_R3RA_Vision_Control@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Visible_Driver@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Visible_Driver@@8 DD FLAT:??_R0?AVRA_Visible_Driver@@@8 ; RA_Visible_Driver::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Visible_Driver@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Visible_Driver@@8
rdata$r	SEGMENT
??_R2RA_Visible_Driver@@8 DD FLAT:??_R1A@?0A@EA@RA_Visible_Driver@@8 ; RA_Visible_Driver::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Visible_Driver@@8
rdata$r	SEGMENT
??_R3RA_Visible_Driver@@8 DD 00H			; RA_Visible_Driver::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Visible_Driver@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Visible_Driver@@@8
_DATA	SEGMENT
??_R0?AVRA_Visible_Driver@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Visible_Driver `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Visible_Driver@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Visible_Driver@@6B@
rdata$r	SEGMENT
??_R4RA_Visible_Driver@@6B@ DD 00H			; RA_Visible_Driver::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Visible_Driver@@@8
	DD	FLAT:??_R3RA_Visible_Driver@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Vehicle_Team_Timer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Vehicle_Team_Timer@@8 DD FLAT:??_R0?AVRA_Vehicle_Team_Timer@@@8 ; RA_Vehicle_Team_Timer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Vehicle_Team_Timer@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Vehicle_Team_Timer@@8
rdata$r	SEGMENT
??_R2RA_Vehicle_Team_Timer@@8 DD FLAT:??_R1A@?0A@EA@RA_Vehicle_Team_Timer@@8 ; RA_Vehicle_Team_Timer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Vehicle_Team_Timer@@8
rdata$r	SEGMENT
??_R3RA_Vehicle_Team_Timer@@8 DD 00H			; RA_Vehicle_Team_Timer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Vehicle_Team_Timer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Vehicle_Team_Timer@@@8
_DATA	SEGMENT
??_R0?AVRA_Vehicle_Team_Timer@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Vehicle_Team_Timer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Vehicle_Team_Timer@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Vehicle_Team_Timer@@6B@
rdata$r	SEGMENT
??_R4RA_Vehicle_Team_Timer@@6B@ DD 00H			; RA_Vehicle_Team_Timer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Vehicle_Team_Timer@@@8
	DD	FLAT:??_R3RA_Vehicle_Team_Timer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Vehicle_Team_Set@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Vehicle_Team_Set@@8 DD FLAT:??_R0?AVRA_Vehicle_Team_Set@@@8 ; RA_Vehicle_Team_Set::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Vehicle_Team_Set@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Vehicle_Team_Set@@8
rdata$r	SEGMENT
??_R2RA_Vehicle_Team_Set@@8 DD FLAT:??_R1A@?0A@EA@RA_Vehicle_Team_Set@@8 ; RA_Vehicle_Team_Set::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Vehicle_Team_Set@@8
rdata$r	SEGMENT
??_R3RA_Vehicle_Team_Set@@8 DD 00H			; RA_Vehicle_Team_Set::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Vehicle_Team_Set@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Vehicle_Team_Set@@@8
_DATA	SEGMENT
??_R0?AVRA_Vehicle_Team_Set@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Vehicle_Team_Set `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Vehicle_Team_Set@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Vehicle_Team_Set@@6B@
rdata$r	SEGMENT
??_R4RA_Vehicle_Team_Set@@6B@ DD 00H			; RA_Vehicle_Team_Set::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Vehicle_Team_Set@@@8
	DD	FLAT:??_R3RA_Vehicle_Team_Set@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Ore_Delivery_Zone@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Ore_Delivery_Zone@@8 DD FLAT:??_R0?AVRA_Ore_Delivery_Zone@@@8 ; RA_Ore_Delivery_Zone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Ore_Delivery_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Ore_Delivery_Zone@@8
rdata$r	SEGMENT
??_R2RA_Ore_Delivery_Zone@@8 DD FLAT:??_R1A@?0A@EA@RA_Ore_Delivery_Zone@@8 ; RA_Ore_Delivery_Zone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Ore_Delivery_Zone@@8
rdata$r	SEGMENT
??_R3RA_Ore_Delivery_Zone@@8 DD 00H			; RA_Ore_Delivery_Zone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Ore_Delivery_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Ore_Delivery_Zone@@@8
_DATA	SEGMENT
??_R0?AVRA_Ore_Delivery_Zone@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Ore_Delivery_Zone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Ore_Delivery_Zone@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Ore_Delivery_Zone@@6B@
rdata$r	SEGMENT
??_R4RA_Ore_Delivery_Zone@@6B@ DD 00H			; RA_Ore_Delivery_Zone::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Ore_Delivery_Zone@@@8
	DD	FLAT:??_R3RA_Ore_Delivery_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Ore_Field@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Ore_Field@@8 DD FLAT:??_R0?AVRA_Ore_Field@@@8 ; RA_Ore_Field::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Ore_Field@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Ore_Field@@8
rdata$r	SEGMENT
??_R2RA_Ore_Field@@8 DD FLAT:??_R1A@?0A@EA@RA_Ore_Field@@8 ; RA_Ore_Field::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Ore_Field@@8
rdata$r	SEGMENT
??_R3RA_Ore_Field@@8 DD 00H				; RA_Ore_Field::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Ore_Field@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Ore_Field@@@8
_DATA	SEGMENT
??_R0?AVRA_Ore_Field@@@8 DD FLAT:??_7type_info@@6B@	; RA_Ore_Field `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Ore_Field@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Ore_Field@@6B@
rdata$r	SEGMENT
??_R4RA_Ore_Field@@6B@ DD 00H				; RA_Ore_Field::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Ore_Field@@@8
	DD	FLAT:??_R3RA_Ore_Field@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Ore_Truck_2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Ore_Truck_2@@8 DD FLAT:??_R0?AVRA_Ore_Truck_2@@@8 ; RA_Ore_Truck_2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Ore_Truck_2@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Ore_Truck_2@@8
rdata$r	SEGMENT
??_R2RA_Ore_Truck_2@@8 DD FLAT:??_R1A@?0A@EA@RA_Ore_Truck_2@@8 ; RA_Ore_Truck_2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Ore_Truck_2@@8
rdata$r	SEGMENT
??_R3RA_Ore_Truck_2@@8 DD 00H				; RA_Ore_Truck_2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Ore_Truck_2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Ore_Truck_2@@@8
_DATA	SEGMENT
??_R0?AVRA_Ore_Truck_2@@@8 DD FLAT:??_7type_info@@6B@	; RA_Ore_Truck_2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Ore_Truck_2@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Ore_Truck_2@@6B@
rdata$r	SEGMENT
??_R4RA_Ore_Truck_2@@6B@ DD 00H				; RA_Ore_Truck_2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Ore_Truck_2@@@8
	DD	FLAT:??_R3RA_Ore_Truck_2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Ore_Truck@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Ore_Truck@@8 DD FLAT:??_R0?AVRA_Ore_Truck@@@8 ; RA_Ore_Truck::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Ore_Truck@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Ore_Truck@@8
rdata$r	SEGMENT
??_R2RA_Ore_Truck@@8 DD FLAT:??_R1A@?0A@EA@RA_Ore_Truck@@8 ; RA_Ore_Truck::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Ore_Truck@@8
rdata$r	SEGMENT
??_R3RA_Ore_Truck@@8 DD 00H				; RA_Ore_Truck::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Ore_Truck@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Ore_Truck@@@8
_DATA	SEGMENT
??_R0?AVRA_Ore_Truck@@@8 DD FLAT:??_7type_info@@6B@	; RA_Ore_Truck `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Ore_Truck@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Ore_Truck@@6B@
rdata$r	SEGMENT
??_R4RA_Ore_Truck@@6B@ DD 00H				; RA_Ore_Truck::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Ore_Truck@@@8
	DD	FLAT:??_R3RA_Ore_Truck@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_DestroyNearest_OnDeath@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_DestroyNearest_OnDeath@@8 DD FLAT:??_R0?AVRA_DestroyNearest_OnDeath@@@8 ; RA_DestroyNearest_OnDeath::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_DestroyNearest_OnDeath@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_DestroyNearest_OnDeath@@8
rdata$r	SEGMENT
??_R2RA_DestroyNearest_OnDeath@@8 DD FLAT:??_R1A@?0A@EA@RA_DestroyNearest_OnDeath@@8 ; RA_DestroyNearest_OnDeath::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_DestroyNearest_OnDeath@@8
rdata$r	SEGMENT
??_R3RA_DestroyNearest_OnDeath@@8 DD 00H		; RA_DestroyNearest_OnDeath::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_DestroyNearest_OnDeath@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_DestroyNearest_OnDeath@@@8
_DATA	SEGMENT
??_R0?AVRA_DestroyNearest_OnDeath@@@8 DD FLAT:??_7type_info@@6B@ ; RA_DestroyNearest_OnDeath `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_DestroyNearest_OnDeath@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_DestroyNearest_OnDeath@@6B@
rdata$r	SEGMENT
??_R4RA_DestroyNearest_OnDeath@@6B@ DD 00H		; RA_DestroyNearest_OnDeath::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_DestroyNearest_OnDeath@@@8
	DD	FLAT:??_R3RA_DestroyNearest_OnDeath@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Credit_Theft_Zone_Timer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Credit_Theft_Zone_Timer@@8 DD FLAT:??_R0?AVRA_Credit_Theft_Zone_Timer@@@8 ; RA_Credit_Theft_Zone_Timer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Credit_Theft_Zone_Timer@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Credit_Theft_Zone_Timer@@8
rdata$r	SEGMENT
??_R2RA_Credit_Theft_Zone_Timer@@8 DD FLAT:??_R1A@?0A@EA@RA_Credit_Theft_Zone_Timer@@8 ; RA_Credit_Theft_Zone_Timer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Credit_Theft_Zone_Timer@@8
rdata$r	SEGMENT
??_R3RA_Credit_Theft_Zone_Timer@@8 DD 00H		; RA_Credit_Theft_Zone_Timer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Credit_Theft_Zone_Timer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Credit_Theft_Zone_Timer@@@8
_DATA	SEGMENT
??_R0?AVRA_Credit_Theft_Zone_Timer@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Credit_Theft_Zone_Timer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Credit_Theft_Zone_Timer@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Credit_Theft_Zone_Timer@@6B@
rdata$r	SEGMENT
??_R4RA_Credit_Theft_Zone_Timer@@6B@ DD 00H		; RA_Credit_Theft_Zone_Timer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Credit_Theft_Zone_Timer@@@8
	DD	FLAT:??_R3RA_Credit_Theft_Zone_Timer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Credit_Theft_Zone@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Credit_Theft_Zone@@8 DD FLAT:??_R0?AVRA_Credit_Theft_Zone@@@8 ; RA_Credit_Theft_Zone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Credit_Theft_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Credit_Theft_Zone@@8
rdata$r	SEGMENT
??_R2RA_Credit_Theft_Zone@@8 DD FLAT:??_R1A@?0A@EA@RA_Credit_Theft_Zone@@8 ; RA_Credit_Theft_Zone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Credit_Theft_Zone@@8
rdata$r	SEGMENT
??_R3RA_Credit_Theft_Zone@@8 DD 00H			; RA_Credit_Theft_Zone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Credit_Theft_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Credit_Theft_Zone@@@8
_DATA	SEGMENT
??_R0?AVRA_Credit_Theft_Zone@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Credit_Theft_Zone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Credit_Theft_Zone@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Credit_Theft_Zone@@6B@
rdata$r	SEGMENT
??_R4RA_Credit_Theft_Zone@@6B@ DD 00H			; RA_Credit_Theft_Zone::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Credit_Theft_Zone@@@8
	DD	FLAT:??_R3RA_Credit_Theft_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Thief_Improved@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Thief_Improved@@8 DD FLAT:??_R0?AVRA_Thief_Improved@@@8 ; RA_Thief_Improved::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Thief_Improved@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Thief_Improved@@8
rdata$r	SEGMENT
??_R2RA_Thief_Improved@@8 DD FLAT:??_R1A@?0A@EA@RA_Thief_Improved@@8 ; RA_Thief_Improved::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Thief_Improved@@8
rdata$r	SEGMENT
??_R3RA_Thief_Improved@@8 DD 00H			; RA_Thief_Improved::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Thief_Improved@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Thief_Improved@@@8
_DATA	SEGMENT
??_R0?AVRA_Thief_Improved@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Thief_Improved `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Thief_Improved@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Thief_Improved@@6B@
rdata$r	SEGMENT
??_R4RA_Thief_Improved@@6B@ DD 00H			; RA_Thief_Improved::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Thief_Improved@@@8
	DD	FLAT:??_R3RA_Thief_Improved@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Thief@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Thief@@8 DD FLAT:??_R0?AVRA_Thief@@@8	; RA_Thief::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Thief@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Thief@@8
rdata$r	SEGMENT
??_R2RA_Thief@@8 DD FLAT:??_R1A@?0A@EA@RA_Thief@@8	; RA_Thief::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Thief@@8
rdata$r	SEGMENT
??_R3RA_Thief@@8 DD 00H					; RA_Thief::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Thief@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Thief@@@8
_DATA	SEGMENT
??_R0?AVRA_Thief@@@8 DD FLAT:??_7type_info@@6B@		; RA_Thief `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Thief@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Thief@@6B@
rdata$r	SEGMENT
??_R4RA_Thief@@6B@ DD 00H				; RA_Thief::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Thief@@@8
	DD	FLAT:??_R3RA_Thief@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Vehicle_Regen@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Vehicle_Regen@@8 DD FLAT:??_R0?AVRA_Vehicle_Regen@@@8 ; RA_Vehicle_Regen::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Vehicle_Regen@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Vehicle_Regen@@8
rdata$r	SEGMENT
??_R2RA_Vehicle_Regen@@8 DD FLAT:??_R1A@?0A@EA@RA_Vehicle_Regen@@8 ; RA_Vehicle_Regen::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Vehicle_Regen@@8
rdata$r	SEGMENT
??_R3RA_Vehicle_Regen@@8 DD 00H				; RA_Vehicle_Regen::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Vehicle_Regen@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Vehicle_Regen@@@8
_DATA	SEGMENT
??_R0?AVRA_Vehicle_Regen@@@8 DD FLAT:??_7type_info@@6B@	; RA_Vehicle_Regen `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Vehicle_Regen@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Vehicle_Regen@@6B@
rdata$r	SEGMENT
??_R4RA_Vehicle_Regen@@6B@ DD 00H			; RA_Vehicle_Regen::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Vehicle_Regen@@@8
	DD	FLAT:??_R3RA_Vehicle_Regen@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Base_Defense_Chargeup@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Base_Defense_Chargeup@@8 DD FLAT:??_R0?AVRA_Base_Defense_Chargeup@@@8 ; RA_Base_Defense_Chargeup::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Base_Defense_Chargeup@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Base_Defense_Chargeup@@8
rdata$r	SEGMENT
??_R2RA_Base_Defense_Chargeup@@8 DD FLAT:??_R1A@?0A@EA@RA_Base_Defense_Chargeup@@8 ; RA_Base_Defense_Chargeup::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Base_Defense_Chargeup@@8
rdata$r	SEGMENT
??_R3RA_Base_Defense_Chargeup@@8 DD 00H			; RA_Base_Defense_Chargeup::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Base_Defense_Chargeup@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Base_Defense_Chargeup@@@8
_DATA	SEGMENT
??_R0?AVRA_Base_Defense_Chargeup@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Base_Defense_Chargeup `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Base_Defense_Chargeup@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Base_Defense_Chargeup@@6B@
rdata$r	SEGMENT
??_R4RA_Base_Defense_Chargeup@@6B@ DD 00H		; RA_Base_Defense_Chargeup::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Base_Defense_Chargeup@@@8
	DD	FLAT:??_R3RA_Base_Defense_Chargeup@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Base_Defense_Powered@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Base_Defense_Powered@@8 DD FLAT:??_R0?AVRA_Base_Defense_Powered@@@8 ; RA_Base_Defense_Powered::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Base_Defense_Powered@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Base_Defense_Powered@@8
rdata$r	SEGMENT
??_R2RA_Base_Defense_Powered@@8 DD FLAT:??_R1A@?0A@EA@RA_Base_Defense_Powered@@8 ; RA_Base_Defense_Powered::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Base_Defense_Powered@@8
rdata$r	SEGMENT
??_R3RA_Base_Defense_Powered@@8 DD 00H			; RA_Base_Defense_Powered::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Base_Defense_Powered@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Base_Defense_Powered@@@8
_DATA	SEGMENT
??_R0?AVRA_Base_Defense_Powered@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Base_Defense_Powered `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Base_Defense_Powered@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Base_Defense_Powered@@6B@
rdata$r	SEGMENT
??_R4RA_Base_Defense_Powered@@6B@ DD 00H		; RA_Base_Defense_Powered::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Base_Defense_Powered@@@8
	DD	FLAT:??_R3RA_Base_Defense_Powered@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Base_Defense_Simple@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Base_Defense_Simple@@8 DD FLAT:??_R0?AVRA_Base_Defense_Simple@@@8 ; RA_Base_Defense_Simple::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Base_Defense_Simple@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Base_Defense_Simple@@8
rdata$r	SEGMENT
??_R2RA_Base_Defense_Simple@@8 DD FLAT:??_R1A@?0A@EA@RA_Base_Defense_Simple@@8 ; RA_Base_Defense_Simple::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Base_Defense_Simple@@8
rdata$r	SEGMENT
??_R3RA_Base_Defense_Simple@@8 DD 00H			; RA_Base_Defense_Simple::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Base_Defense_Simple@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Base_Defense_Simple@@@8
_DATA	SEGMENT
??_R0?AVRA_Base_Defense_Simple@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Base_Defense_Simple `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Base_Defense_Simple@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Base_Defense_Simple@@6B@
rdata$r	SEGMENT
??_R4RA_Base_Defense_Simple@@6B@ DD 00H			; RA_Base_Defense_Simple::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Base_Defense_Simple@@@8
	DD	FLAT:??_R3RA_Base_Defense_Simple@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Building_DeathSound@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Building_DeathSound@@8 DD FLAT:??_R0?AVRA_Building_DeathSound@@@8 ; RA_Building_DeathSound::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Building_DeathSound@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Building_DeathSound@@8
rdata$r	SEGMENT
??_R2RA_Building_DeathSound@@8 DD FLAT:??_R1A@?0A@EA@RA_Building_DeathSound@@8 ; RA_Building_DeathSound::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Building_DeathSound@@8
rdata$r	SEGMENT
??_R3RA_Building_DeathSound@@8 DD 00H			; RA_Building_DeathSound::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Building_DeathSound@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Building_DeathSound@@@8
_DATA	SEGMENT
??_R0?AVRA_Building_DeathSound@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Building_DeathSound `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Building_DeathSound@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Building_DeathSound@@6B@
rdata$r	SEGMENT
??_R4RA_Building_DeathSound@@6B@ DD 00H			; RA_Building_DeathSound::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Building_DeathSound@@@8
	DD	FLAT:??_R3RA_Building_DeathSound@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Conyard_Controller_Improved_2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Conyard_Controller_Improved_2@@8 DD FLAT:??_R0?AVRA_Conyard_Controller_Improved_2@@@8 ; RA_Conyard_Controller_Improved_2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Conyard_Controller_Improved_2@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Conyard_Controller_Improved_2@@8
rdata$r	SEGMENT
??_R2RA_Conyard_Controller_Improved_2@@8 DD FLAT:??_R1A@?0A@EA@RA_Conyard_Controller_Improved_2@@8 ; RA_Conyard_Controller_Improved_2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Conyard_Controller_Improved_2@@8
rdata$r	SEGMENT
??_R3RA_Conyard_Controller_Improved_2@@8 DD 00H		; RA_Conyard_Controller_Improved_2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Conyard_Controller_Improved_2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Conyard_Controller_Improved_2@@@8
_DATA	SEGMENT
??_R0?AVRA_Conyard_Controller_Improved_2@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Conyard_Controller_Improved_2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Conyard_Controller_Improved_2@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Conyard_Controller_Improved_2@@6B@
rdata$r	SEGMENT
??_R4RA_Conyard_Controller_Improved_2@@6B@ DD 00H	; RA_Conyard_Controller_Improved_2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Conyard_Controller_Improved_2@@@8
	DD	FLAT:??_R3RA_Conyard_Controller_Improved_2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Conyard_Controller_Improved@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Conyard_Controller_Improved@@8 DD FLAT:??_R0?AVRA_Conyard_Controller_Improved@@@8 ; RA_Conyard_Controller_Improved::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Conyard_Controller_Improved@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Conyard_Controller_Improved@@8
rdata$r	SEGMENT
??_R2RA_Conyard_Controller_Improved@@8 DD FLAT:??_R1A@?0A@EA@RA_Conyard_Controller_Improved@@8 ; RA_Conyard_Controller_Improved::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Conyard_Controller_Improved@@8
rdata$r	SEGMENT
??_R3RA_Conyard_Controller_Improved@@8 DD 00H		; RA_Conyard_Controller_Improved::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Conyard_Controller_Improved@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Conyard_Controller_Improved@@@8
_DATA	SEGMENT
??_R0?AVRA_Conyard_Controller_Improved@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Conyard_Controller_Improved `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Conyard_Controller_Improved@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Conyard_Controller_Improved@@6B@
rdata$r	SEGMENT
??_R4RA_Conyard_Controller_Improved@@6B@ DD 00H		; RA_Conyard_Controller_Improved::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Conyard_Controller_Improved@@@8
	DD	FLAT:??_R3RA_Conyard_Controller_Improved@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_MAD_Tank_Improved@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_MAD_Tank_Improved@@8 DD FLAT:??_R0?AVRA_MAD_Tank_Improved@@@8 ; RA_MAD_Tank_Improved::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_MAD_Tank_Improved@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_MAD_Tank_Improved@@8
rdata$r	SEGMENT
??_R2RA_MAD_Tank_Improved@@8 DD FLAT:??_R1A@?0A@EA@RA_MAD_Tank_Improved@@8 ; RA_MAD_Tank_Improved::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_MAD_Tank_Improved@@8
rdata$r	SEGMENT
??_R3RA_MAD_Tank_Improved@@8 DD 00H			; RA_MAD_Tank_Improved::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_MAD_Tank_Improved@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_MAD_Tank_Improved@@@8
_DATA	SEGMENT
??_R0?AVRA_MAD_Tank_Improved@@@8 DD FLAT:??_7type_info@@6B@ ; RA_MAD_Tank_Improved `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_MAD_Tank_Improved@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_MAD_Tank_Improved@@6B@
rdata$r	SEGMENT
??_R4RA_MAD_Tank_Improved@@6B@ DD 00H			; RA_MAD_Tank_Improved::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_MAD_Tank_Improved@@@8
	DD	FLAT:??_R3RA_MAD_Tank_Improved@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_CTF_Zone@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_CTF_Zone@@8 DD FLAT:??_R0?AVRA_CTF_Zone@@@8 ; RA_CTF_Zone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_CTF_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_CTF_Zone@@8
rdata$r	SEGMENT
??_R2RA_CTF_Zone@@8 DD FLAT:??_R1A@?0A@EA@RA_CTF_Zone@@8 ; RA_CTF_Zone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_CTF_Zone@@8
rdata$r	SEGMENT
??_R3RA_CTF_Zone@@8 DD 00H				; RA_CTF_Zone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_CTF_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_CTF_Zone@@@8
_DATA	SEGMENT
??_R0?AVRA_CTF_Zone@@@8 DD FLAT:??_7type_info@@6B@	; RA_CTF_Zone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_CTF_Zone@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_CTF_Zone@@6B@
rdata$r	SEGMENT
??_R4RA_CTF_Zone@@6B@ DD 00H				; RA_CTF_Zone::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_CTF_Zone@@@8
	DD	FLAT:??_R3RA_CTF_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Demolition_Truck_Improved@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Demolition_Truck_Improved@@8 DD FLAT:??_R0?AVRA_Demolition_Truck_Improved@@@8 ; RA_Demolition_Truck_Improved::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Demolition_Truck_Improved@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Demolition_Truck_Improved@@8
rdata$r	SEGMENT
??_R2RA_Demolition_Truck_Improved@@8 DD FLAT:??_R1A@?0A@EA@RA_Demolition_Truck_Improved@@8 ; RA_Demolition_Truck_Improved::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Demolition_Truck_Improved@@8
rdata$r	SEGMENT
??_R3RA_Demolition_Truck_Improved@@8 DD 00H		; RA_Demolition_Truck_Improved::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Demolition_Truck_Improved@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Demolition_Truck_Improved@@@8
_DATA	SEGMENT
??_R0?AVRA_Demolition_Truck_Improved@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Demolition_Truck_Improved `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Demolition_Truck_Improved@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Demolition_Truck_Improved@@6B@
rdata$r	SEGMENT
??_R4RA_Demolition_Truck_Improved@@6B@ DD 00H		; RA_Demolition_Truck_Improved::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Demolition_Truck_Improved@@@8
	DD	FLAT:??_R3RA_Demolition_Truck_Improved@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_ObjectDeath_OnDeath@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_ObjectDeath_OnDeath@@8 DD FLAT:??_R0?AVRA_ObjectDeath_OnDeath@@@8 ; RA_ObjectDeath_OnDeath::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_ObjectDeath_OnDeath@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_ObjectDeath_OnDeath@@8
rdata$r	SEGMENT
??_R2RA_ObjectDeath_OnDeath@@8 DD FLAT:??_R1A@?0A@EA@RA_ObjectDeath_OnDeath@@8 ; RA_ObjectDeath_OnDeath::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_ObjectDeath_OnDeath@@8
rdata$r	SEGMENT
??_R3RA_ObjectDeath_OnDeath@@8 DD 00H			; RA_ObjectDeath_OnDeath::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_ObjectDeath_OnDeath@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_ObjectDeath_OnDeath@@@8
_DATA	SEGMENT
??_R0?AVRA_ObjectDeath_OnDeath@@@8 DD FLAT:??_7type_info@@6B@ ; RA_ObjectDeath_OnDeath `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_ObjectDeath_OnDeath@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_ObjectDeath_OnDeath@@6B@
rdata$r	SEGMENT
??_R4RA_ObjectDeath_OnDeath@@6B@ DD 00H			; RA_ObjectDeath_OnDeath::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_ObjectDeath_OnDeath@@@8
	DD	FLAT:??_R3RA_ObjectDeath_OnDeath@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Conyard_Repair@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Conyard_Repair@@8 DD FLAT:??_R0?AVRA_Conyard_Repair@@@8 ; RA_Conyard_Repair::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Conyard_Repair@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Conyard_Repair@@8
rdata$r	SEGMENT
??_R2RA_Conyard_Repair@@8 DD FLAT:??_R1A@?0A@EA@RA_Conyard_Repair@@8 ; RA_Conyard_Repair::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Conyard_Repair@@8
rdata$r	SEGMENT
??_R3RA_Conyard_Repair@@8 DD 00H			; RA_Conyard_Repair::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Conyard_Repair@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Conyard_Repair@@@8
_DATA	SEGMENT
??_R0?AVRA_Conyard_Repair@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Conyard_Repair `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Conyard_Repair@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Conyard_Repair@@6B@
rdata$r	SEGMENT
??_R4RA_Conyard_Repair@@6B@ DD 00H			; RA_Conyard_Repair::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Conyard_Repair@@@8
	DD	FLAT:??_R3RA_Conyard_Repair@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_DriverDeath@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_DriverDeath@@8 DD FLAT:??_R0?AVRA_DriverDeath@@@8 ; RA_DriverDeath::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_DriverDeath@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_DriverDeath@@8
rdata$r	SEGMENT
??_R2RA_DriverDeath@@8 DD FLAT:??_R1A@?0A@EA@RA_DriverDeath@@8 ; RA_DriverDeath::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_DriverDeath@@8
rdata$r	SEGMENT
??_R3RA_DriverDeath@@8 DD 00H				; RA_DriverDeath::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_DriverDeath@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_DriverDeath@@@8
_DATA	SEGMENT
??_R0?AVRA_DriverDeath@@@8 DD FLAT:??_7type_info@@6B@	; RA_DriverDeath `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_DriverDeath@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_DriverDeath@@6B@
rdata$r	SEGMENT
??_R4RA_DriverDeath@@6B@ DD 00H				; RA_DriverDeath::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_DriverDeath@@@8
	DD	FLAT:??_R3RA_DriverDeath@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_GameStart_Detector@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_GameStart_Detector@@8 DD FLAT:??_R0?AVRA_GameStart_Detector@@@8 ; RA_GameStart_Detector::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_GameStart_Detector@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_GameStart_Detector@@8
rdata$r	SEGMENT
??_R2RA_GameStart_Detector@@8 DD FLAT:??_R1A@?0A@EA@RA_GameStart_Detector@@8 ; RA_GameStart_Detector::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_GameStart_Detector@@8
rdata$r	SEGMENT
??_R3RA_GameStart_Detector@@8 DD 00H			; RA_GameStart_Detector::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_GameStart_Detector@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_GameStart_Detector@@@8
_DATA	SEGMENT
??_R0?AVRA_GameStart_Detector@@@8 DD FLAT:??_7type_info@@6B@ ; RA_GameStart_Detector `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_GameStart_Detector@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_GameStart_Detector@@6B@
rdata$r	SEGMENT
??_R4RA_GameStart_Detector@@6B@ DD 00H			; RA_GameStart_Detector::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_GameStart_Detector@@@8
	DD	FLAT:??_R3RA_GameStart_Detector@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Damaged_Credits@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Damaged_Credits@@8 DD FLAT:??_R0?AVRA_Damaged_Credits@@@8 ; RA_Damaged_Credits::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Damaged_Credits@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Damaged_Credits@@8
rdata$r	SEGMENT
??_R2RA_Damaged_Credits@@8 DD FLAT:??_R1A@?0A@EA@RA_Damaged_Credits@@8 ; RA_Damaged_Credits::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Damaged_Credits@@8
rdata$r	SEGMENT
??_R3RA_Damaged_Credits@@8 DD 00H			; RA_Damaged_Credits::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Damaged_Credits@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Damaged_Credits@@@8
_DATA	SEGMENT
??_R0?AVRA_Damaged_Credits@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Damaged_Credits `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Damaged_Credits@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Damaged_Credits@@6B@
rdata$r	SEGMENT
??_R4RA_Damaged_Credits@@6B@ DD 00H			; RA_Damaged_Credits::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Damaged_Credits@@@8
	DD	FLAT:??_R3RA_Damaged_Credits@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Naval_Zone@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Naval_Zone@@8 DD FLAT:??_R0?AVRA_Naval_Zone@@@8 ; RA_Naval_Zone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Naval_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Naval_Zone@@8
rdata$r	SEGMENT
??_R2RA_Naval_Zone@@8 DD FLAT:??_R1A@?0A@EA@RA_Naval_Zone@@8 ; RA_Naval_Zone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Naval_Zone@@8
rdata$r	SEGMENT
??_R3RA_Naval_Zone@@8 DD 00H				; RA_Naval_Zone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Naval_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Naval_Zone@@@8
_DATA	SEGMENT
??_R0?AVRA_Naval_Zone@@@8 DD FLAT:??_7type_info@@6B@	; RA_Naval_Zone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Naval_Zone@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Naval_Zone@@6B@
rdata$r	SEGMENT
??_R4RA_Naval_Zone@@6B@ DD 00H				; RA_Naval_Zone::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Naval_Zone@@@8
	DD	FLAT:??_R3RA_Naval_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Naval_Unit@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Naval_Unit@@8 DD FLAT:??_R0?AVRA_Naval_Unit@@@8 ; RA_Naval_Unit::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Naval_Unit@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Naval_Unit@@8
rdata$r	SEGMENT
??_R2RA_Naval_Unit@@8 DD FLAT:??_R1A@?0A@EA@RA_Naval_Unit@@8 ; RA_Naval_Unit::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Naval_Unit@@8
rdata$r	SEGMENT
??_R3RA_Naval_Unit@@8 DD 00H				; RA_Naval_Unit::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Naval_Unit@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Naval_Unit@@@8
_DATA	SEGMENT
??_R0?AVRA_Naval_Unit@@@8 DD FLAT:??_7type_info@@6B@	; RA_Naval_Unit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Naval_Unit@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Naval_Unit@@6B@
rdata$r	SEGMENT
??_R4RA_Naval_Unit@@6B@ DD 00H				; RA_Naval_Unit::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Naval_Unit@@@8
	DD	FLAT:??_R3RA_Naval_Unit@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Naval_PT_Pokable@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Naval_PT_Pokable@@8 DD FLAT:??_R0?AVRA_Naval_PT_Pokable@@@8 ; RA_Naval_PT_Pokable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Naval_PT_Pokable@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Naval_PT_Pokable@@8
rdata$r	SEGMENT
??_R2RA_Naval_PT_Pokable@@8 DD FLAT:??_R1A@?0A@EA@RA_Naval_PT_Pokable@@8 ; RA_Naval_PT_Pokable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Naval_PT_Pokable@@8
rdata$r	SEGMENT
??_R3RA_Naval_PT_Pokable@@8 DD 00H			; RA_Naval_PT_Pokable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Naval_PT_Pokable@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Naval_PT_Pokable@@@8
_DATA	SEGMENT
??_R0?AVRA_Naval_PT_Pokable@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Naval_PT_Pokable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Naval_PT_Pokable@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Naval_PT_Pokable@@6B@
rdata$r	SEGMENT
??_R4RA_Naval_PT_Pokable@@6B@ DD 00H			; RA_Naval_PT_Pokable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Naval_PT_Pokable@@@8
	DD	FLAT:??_R3RA_Naval_PT_Pokable@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Naval_Yard@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Naval_Yard@@8 DD FLAT:??_R0?AVRA_Naval_Yard@@@8 ; RA_Naval_Yard::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Naval_Yard@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Naval_Yard@@8
rdata$r	SEGMENT
??_R2RA_Naval_Yard@@8 DD FLAT:??_R1A@?0A@EA@RA_Naval_Yard@@8 ; RA_Naval_Yard::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Naval_Yard@@8
rdata$r	SEGMENT
??_R3RA_Naval_Yard@@8 DD 00H				; RA_Naval_Yard::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Naval_Yard@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Naval_Yard@@@8
_DATA	SEGMENT
??_R0?AVRA_Naval_Yard@@@8 DD FLAT:??_7type_info@@6B@	; RA_Naval_Yard `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Naval_Yard@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Naval_Yard@@6B@
rdata$r	SEGMENT
??_R4RA_Naval_Yard@@6B@ DD 00H				; RA_Naval_Yard::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Naval_Yard@@@8
	DD	FLAT:??_R3RA_Naval_Yard@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_ObjectDeath_OnCreate@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_ObjectDeath_OnCreate@@8 DD FLAT:??_R0?AVRA_ObjectDeath_OnCreate@@@8 ; RA_ObjectDeath_OnCreate::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_ObjectDeath_OnCreate@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_ObjectDeath_OnCreate@@8
rdata$r	SEGMENT
??_R2RA_ObjectDeath_OnCreate@@8 DD FLAT:??_R1A@?0A@EA@RA_ObjectDeath_OnCreate@@8 ; RA_ObjectDeath_OnCreate::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_ObjectDeath_OnCreate@@8
rdata$r	SEGMENT
??_R3RA_ObjectDeath_OnCreate@@8 DD 00H			; RA_ObjectDeath_OnCreate::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_ObjectDeath_OnCreate@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_ObjectDeath_OnCreate@@@8
_DATA	SEGMENT
??_R0?AVRA_ObjectDeath_OnCreate@@@8 DD FLAT:??_7type_info@@6B@ ; RA_ObjectDeath_OnCreate `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_ObjectDeath_OnCreate@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_ObjectDeath_OnCreate@@6B@
rdata$r	SEGMENT
??_R4RA_ObjectDeath_OnCreate@@6B@ DD 00H		; RA_ObjectDeath_OnCreate::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_ObjectDeath_OnCreate@@@8
	DD	FLAT:??_R3RA_ObjectDeath_OnCreate@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Mine_Manager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Mine_Manager@@8 DD FLAT:??_R0?AVRA_Mine_Manager@@@8 ; RA_Mine_Manager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Mine_Manager@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Mine_Manager@@8
rdata$r	SEGMENT
??_R2RA_Mine_Manager@@8 DD FLAT:??_R1A@?0A@EA@RA_Mine_Manager@@8 ; RA_Mine_Manager::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Mine_Manager@@8
rdata$r	SEGMENT
??_R3RA_Mine_Manager@@8 DD 00H				; RA_Mine_Manager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Mine_Manager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Mine_Manager@@@8
_DATA	SEGMENT
??_R0?AVRA_Mine_Manager@@@8 DD FLAT:??_7type_info@@6B@	; RA_Mine_Manager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Mine_Manager@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Mine_Manager@@6B@
rdata$r	SEGMENT
??_R4RA_Mine_Manager@@6B@ DD 00H			; RA_Mine_Manager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Mine_Manager@@@8
	DD	FLAT:??_R3RA_Mine_Manager@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Mine@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Mine@@8 DD FLAT:??_R0?AVRA_Mine@@@8	; RA_Mine::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Mine@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Mine@@8
rdata$r	SEGMENT
??_R2RA_Mine@@8 DD FLAT:??_R1A@?0A@EA@RA_Mine@@8	; RA_Mine::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Mine@@8
rdata$r	SEGMENT
??_R3RA_Mine@@8 DD 00H					; RA_Mine::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Mine@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Mine@@@8
_DATA	SEGMENT
??_R0?AVRA_Mine@@@8 DD FLAT:??_7type_info@@6B@		; RA_Mine `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Mine@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Mine@@6B@
rdata$r	SEGMENT
??_R4RA_Mine@@6B@ DD 00H				; RA_Mine::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Mine@@@8
	DD	FLAT:??_R3RA_Mine@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_MineLayer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_MineLayer@@8 DD FLAT:??_R0?AVRA_MineLayer@@@8 ; RA_MineLayer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_MineLayer@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_MineLayer@@8
rdata$r	SEGMENT
??_R2RA_MineLayer@@8 DD FLAT:??_R1A@?0A@EA@RA_MineLayer@@8 ; RA_MineLayer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_MineLayer@@8
rdata$r	SEGMENT
??_R3RA_MineLayer@@8 DD 00H				; RA_MineLayer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_MineLayer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_MineLayer@@@8
_DATA	SEGMENT
??_R0?AVRA_MineLayer@@@8 DD FLAT:??_7type_info@@6B@	; RA_MineLayer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_MineLayer@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_MineLayer@@6B@
rdata$r	SEGMENT
??_R4RA_MineLayer@@6B@ DD 00H				; RA_MineLayer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_MineLayer@@@8
	DD	FLAT:??_R3RA_MineLayer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Helipad_Zone@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Helipad_Zone@@8 DD FLAT:??_R0?AVRA_Helipad_Zone@@@8 ; RA_Helipad_Zone::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Helipad_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Helipad_Zone@@8
rdata$r	SEGMENT
??_R2RA_Helipad_Zone@@8 DD FLAT:??_R1A@?0A@EA@RA_Helipad_Zone@@8 ; RA_Helipad_Zone::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Helipad_Zone@@8
rdata$r	SEGMENT
??_R3RA_Helipad_Zone@@8 DD 00H				; RA_Helipad_Zone::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Helipad_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Helipad_Zone@@@8
_DATA	SEGMENT
??_R0?AVRA_Helipad_Zone@@@8 DD FLAT:??_7type_info@@6B@	; RA_Helipad_Zone `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Helipad_Zone@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Helipad_Zone@@6B@
rdata$r	SEGMENT
??_R4RA_Helipad_Zone@@6B@ DD 00H			; RA_Helipad_Zone::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Helipad_Zone@@@8
	DD	FLAT:??_R3RA_Helipad_Zone@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Infantry_NotSpy@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Infantry_NotSpy@@8 DD FLAT:??_R0?AVRA_Infantry_NotSpy@@@8 ; RA_Infantry_NotSpy::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Infantry_NotSpy@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Infantry_NotSpy@@8
rdata$r	SEGMENT
??_R2RA_Infantry_NotSpy@@8 DD FLAT:??_R1A@?0A@EA@RA_Infantry_NotSpy@@8 ; RA_Infantry_NotSpy::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Infantry_NotSpy@@8
rdata$r	SEGMENT
??_R3RA_Infantry_NotSpy@@8 DD 00H			; RA_Infantry_NotSpy::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Infantry_NotSpy@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Infantry_NotSpy@@@8
_DATA	SEGMENT
??_R0?AVRA_Infantry_NotSpy@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Infantry_NotSpy `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Infantry_NotSpy@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Infantry_NotSpy@@6B@
rdata$r	SEGMENT
??_R4RA_Infantry_NotSpy@@6B@ DD 00H			; RA_Infantry_NotSpy::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Infantry_NotSpy@@@8
	DD	FLAT:??_R3RA_Infantry_NotSpy@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Infantry_Spy@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Infantry_Spy@@8 DD FLAT:??_R0?AVRA_Infantry_Spy@@@8 ; RA_Infantry_Spy::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Infantry_Spy@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Infantry_Spy@@8
rdata$r	SEGMENT
??_R2RA_Infantry_Spy@@8 DD FLAT:??_R1A@?0A@EA@RA_Infantry_Spy@@8 ; RA_Infantry_Spy::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Infantry_Spy@@8
rdata$r	SEGMENT
??_R3RA_Infantry_Spy@@8 DD 00H				; RA_Infantry_Spy::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Infantry_Spy@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Infantry_Spy@@@8
_DATA	SEGMENT
??_R0?AVRA_Infantry_Spy@@@8 DD FLAT:??_7type_info@@6B@	; RA_Infantry_Spy `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Infantry_Spy@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Infantry_Spy@@6B@
rdata$r	SEGMENT
??_R4RA_Infantry_Spy@@6B@ DD 00H			; RA_Infantry_Spy::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Infantry_Spy@@@8
	DD	FLAT:??_R3RA_Infantry_Spy@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Repair_Script@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Repair_Script@@8 DD FLAT:??_R0?AVRA_Repair_Script@@@8 ; RA_Repair_Script::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Repair_Script@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Repair_Script@@8
rdata$r	SEGMENT
??_R2RA_Repair_Script@@8 DD FLAT:??_R1A@?0A@EA@RA_Repair_Script@@8 ; RA_Repair_Script::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Repair_Script@@8
rdata$r	SEGMENT
??_R3RA_Repair_Script@@8 DD 00H				; RA_Repair_Script::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Repair_Script@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Repair_Script@@@8
_DATA	SEGMENT
??_R0?AVRA_Repair_Script@@@8 DD FLAT:??_7type_info@@6B@	; RA_Repair_Script `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Repair_Script@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Repair_Script@@6B@
rdata$r	SEGMENT
??_R4RA_Repair_Script@@6B@ DD 00H			; RA_Repair_Script::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Repair_Script@@@8
	DD	FLAT:??_R3RA_Repair_Script@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RA_Repair_Controller@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RA_Repair_Controller@@8 DD FLAT:??_R0?AVRA_Repair_Controller@@@8 ; RA_Repair_Controller::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RA_Repair_Controller@@8
rdata$r	ENDS
;	COMDAT ??_R2RA_Repair_Controller@@8
rdata$r	SEGMENT
??_R2RA_Repair_Controller@@8 DD FLAT:??_R1A@?0A@EA@RA_Repair_Controller@@8 ; RA_Repair_Controller::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3RA_Repair_Controller@@8
rdata$r	SEGMENT
??_R3RA_Repair_Controller@@8 DD 00H			; RA_Repair_Controller::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RA_Repair_Controller@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRA_Repair_Controller@@@8
_DATA	SEGMENT
??_R0?AVRA_Repair_Controller@@@8 DD FLAT:??_7type_info@@6B@ ; RA_Repair_Controller `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRA_Repair_Controller@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RA_Repair_Controller@@6B@
rdata$r	SEGMENT
??_R4RA_Repair_Controller@@6B@ DD 00H			; RA_Repair_Controller::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRA_Repair_Controller@@@8
	DD	FLAT:??_R3RA_Repair_Controller@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JFW_Object_Created_Hook_Base@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JFW_Object_Created_Hook_Base@@8 DD FLAT:??_R0?AVJFW_Object_Created_Hook_Base@@@8 ; JFW_Object_Created_Hook_Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JFW_Object_Created_Hook_Base@@8
rdata$r	ENDS
;	COMDAT ??_R2JFW_Object_Created_Hook_Base@@8
rdata$r	SEGMENT
??_R2JFW_Object_Created_Hook_Base@@8 DD FLAT:??_R1A@?0A@EA@JFW_Object_Created_Hook_Base@@8 ; JFW_Object_Created_Hook_Base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JFW_Object_Created_Hook_Base@@8
rdata$r	SEGMENT
??_R3JFW_Object_Created_Hook_Base@@8 DD 00H		; JFW_Object_Created_Hook_Base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JFW_Object_Created_Hook_Base@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJFW_Object_Created_Hook_Base@@@8
_DATA	SEGMENT
??_R0?AVJFW_Object_Created_Hook_Base@@@8 DD FLAT:??_7type_info@@6B@ ; JFW_Object_Created_Hook_Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJFW_Object_Created_Hook_Base@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JFW_Object_Created_Hook_Base@@6B@
rdata$r	SEGMENT
??_R4JFW_Object_Created_Hook_Base@@6B@ DD 00H		; JFW_Object_Created_Hook_Base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJFW_Object_Created_Hook_Base@@@8
	DD	FLAT:??_R3JFW_Object_Created_Hook_Base@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8 DD FLAT:??_R0?AV?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@@8 ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8
rdata$r	SEGMENT
??_R2?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8 DD FLAT:??_R1A@?0A@EA@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8 ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8
rdata$r	SEGMENT
??_R3?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8 DD 00H ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@@8
_DATA	SEGMENT
??_R0?AV?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@@8 DD FLAT:??_7type_info@@6B@ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpC'
	DB	'lass@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@
rdata$r	SEGMENT
??_R4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@ DD 00H ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@@8
	DD	FLAT:??_R3?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MultiKeyHookScriptImpClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MultiKeyHookScriptImpClass@@8 DD FLAT:??_R0?AVMultiKeyHookScriptImpClass@@@8 ; MultiKeyHookScriptImpClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MultiKeyHookScriptImpClass@@8
rdata$r	ENDS
;	COMDAT ??_R2MultiKeyHookScriptImpClass@@8
rdata$r	SEGMENT
??_R2MultiKeyHookScriptImpClass@@8 DD FLAT:??_R1A@?0A@EA@MultiKeyHookScriptImpClass@@8 ; MultiKeyHookScriptImpClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3MultiKeyHookScriptImpClass@@8
rdata$r	SEGMENT
??_R3MultiKeyHookScriptImpClass@@8 DD 00H		; MultiKeyHookScriptImpClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2MultiKeyHookScriptImpClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMultiKeyHookScriptImpClass@@@8
_DATA	SEGMENT
??_R0?AVMultiKeyHookScriptImpClass@@@8 DD FLAT:??_7type_info@@6B@ ; MultiKeyHookScriptImpClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMultiKeyHookScriptImpClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MultiKeyHookScriptImpClass@@6B@
rdata$r	SEGMENT
??_R4MultiKeyHookScriptImpClass@@6B@ DD 00H		; MultiKeyHookScriptImpClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMultiKeyHookScriptImpClass@@@8
	DD	FLAT:??_R3MultiKeyHookScriptImpClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@JFW_Key_Hook_Base@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@JFW_Key_Hook_Base@@8 DD FLAT:??_R0?AVJFW_Key_Hook_Base@@@8 ; JFW_Key_Hook_Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3JFW_Key_Hook_Base@@8
rdata$r	ENDS
;	COMDAT ??_R2JFW_Key_Hook_Base@@8
rdata$r	SEGMENT
??_R2JFW_Key_Hook_Base@@8 DD FLAT:??_R1A@?0A@EA@JFW_Key_Hook_Base@@8 ; JFW_Key_Hook_Base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptImpClass@@8
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3JFW_Key_Hook_Base@@8
rdata$r	SEGMENT
??_R3JFW_Key_Hook_Base@@8 DD 00H			; JFW_Key_Hook_Base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2JFW_Key_Hook_Base@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVJFW_Key_Hook_Base@@@8
_DATA	SEGMENT
??_R0?AVJFW_Key_Hook_Base@@@8 DD FLAT:??_7type_info@@6B@ ; JFW_Key_Hook_Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVJFW_Key_Hook_Base@@', 00H
_DATA	ENDS
;	COMDAT ??_R4JFW_Key_Hook_Base@@6B@
rdata$r	SEGMENT
??_R4JFW_Key_Hook_Base@@6B@ DD 00H			; JFW_Key_Hook_Base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVJFW_Key_Hook_Base@@@8
	DD	FLAT:??_R3JFW_Key_Hook_Base@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ReferencerClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReferencerClass@@8 DD FLAT:??_R0?AVReferencerClass@@@8 ; ReferencerClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ReferencerClass@@8
rdata$r	ENDS
;	COMDAT ??_R2ReferencerClass@@8
rdata$r	SEGMENT
??_R2ReferencerClass@@8 DD FLAT:??_R1A@?0A@EA@ReferencerClass@@8 ; ReferencerClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PostLoadableClass@@8
rdata$r	ENDS
;	COMDAT ??_R3ReferencerClass@@8
rdata$r	SEGMENT
??_R3ReferencerClass@@8 DD 00H				; ReferencerClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ReferencerClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReferencerClass@@@8
_DATA	SEGMENT
??_R0?AVReferencerClass@@@8 DD FLAT:??_7type_info@@6B@	; ReferencerClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReferencerClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ReferencerClass@@6B@
rdata$r	SEGMENT
??_R4ReferencerClass@@6B@ DD 00H			; ReferencerClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVReferencerClass@@@8
	DD	FLAT:??_R3ReferencerClass@@8
rdata$r	ENDS
;	COMDAT ??_R4PostLoadableClass@@6B@
rdata$r	SEGMENT
??_R4PostLoadableClass@@6B@ DD 00H			; PostLoadableClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPostLoadableClass@@@8
	DD	FLAT:??_R3PostLoadableClass@@8
rdata$r	ENDS
;	COMDAT ??_R2PostLoadableClass@@8
rdata$r	SEGMENT
??_R2PostLoadableClass@@8 DD FLAT:??_R1A@?0A@EA@PostLoadableClass@@8 ; PostLoadableClass::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3PostLoadableClass@@8
rdata$r	SEGMENT
??_R3PostLoadableClass@@8 DD 00H			; PostLoadableClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2PostLoadableClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPostLoadableClass@@@8
_DATA	SEGMENT
??_R0?AVPostLoadableClass@@@8 DD FLAT:??_7type_info@@6B@ ; PostLoadableClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPostLoadableClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@PostLoadableClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PostLoadableClass@@8 DD FLAT:??_R0?AVPostLoadableClass@@@8 ; PostLoadableClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PostLoadableClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@INIClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@INIClass@@8 DD FLAT:??_R0?AVINIClass@@@8	; INIClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3INIClass@@8
rdata$r	ENDS
;	COMDAT ??_R2INIClass@@8
rdata$r	SEGMENT
??_R2INIClass@@8 DD FLAT:??_R1A@?0A@EA@INIClass@@8	; INIClass::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3INIClass@@8
rdata$r	SEGMENT
??_R3INIClass@@8 DD 00H					; INIClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2INIClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVINIClass@@@8
_DATA	SEGMENT
??_R0?AVINIClass@@@8 DD FLAT:??_7type_info@@6B@		; INIClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVINIClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4INIClass@@6B@
rdata$r	SEGMENT
??_R4INIClass@@6B@ DD 00H				; INIClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVINIClass@@@8
	DD	FLAT:??_R3INIClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ThreadClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ThreadClass@@8 DD FLAT:??_R0?AVThreadClass@@@8 ; ThreadClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ThreadClass@@8
rdata$r	ENDS
;	COMDAT ??_R2ThreadClass@@8
rdata$r	SEGMENT
??_R2ThreadClass@@8 DD FLAT:??_R1A@?0A@EA@ThreadClass@@8 ; ThreadClass::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ThreadClass@@8
rdata$r	SEGMENT
??_R3ThreadClass@@8 DD 00H				; ThreadClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ThreadClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVThreadClass@@@8
_DATA	SEGMENT
??_R0?AVThreadClass@@@8 DD FLAT:??_7type_info@@6B@	; ThreadClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVThreadClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ThreadClass@@6B@
rdata$r	SEGMENT
??_R4ThreadClass@@6B@ DD 00H				; ThreadClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVThreadClass@@@8
	DD	FLAT:??_R3ThreadClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ScriptImpClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ScriptImpClass@@8 DD FLAT:??_R0?AVScriptImpClass@@@8 ; ScriptImpClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ScriptImpClass@@8
rdata$r	ENDS
;	COMDAT ??_R2ScriptImpClass@@8
rdata$r	SEGMENT
??_R2ScriptImpClass@@8 DD FLAT:??_R1A@?0A@EA@ScriptImpClass@@8 ; ScriptImpClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ScriptClass@@8
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3ScriptImpClass@@8
rdata$r	SEGMENT
??_R3ScriptImpClass@@8 DD 00H				; ScriptImpClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ScriptImpClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVScriptImpClass@@@8
_DATA	SEGMENT
??_R0?AVScriptImpClass@@@8 DD FLAT:??_7type_info@@6B@	; ScriptImpClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVScriptImpClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ScriptImpClass@@6B@
rdata$r	SEGMENT
??_R4ScriptImpClass@@6B@ DD 00H				; ScriptImpClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVScriptImpClass@@@8
	DD	FLAT:??_R3ScriptImpClass@@8
rdata$r	ENDS
;	COMDAT ??_R4GameObjObserverClass@@6B@
rdata$r	SEGMENT
??_R4GameObjObserverClass@@6B@ DD 00H			; GameObjObserverClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGameObjObserverClass@@@8
	DD	FLAT:??_R3GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R2GameObjObserverClass@@8
rdata$r	SEGMENT
??_R2GameObjObserverClass@@8 DD FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8 ; GameObjObserverClass::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3GameObjObserverClass@@8
rdata$r	SEGMENT
??_R3GameObjObserverClass@@8 DD 00H			; GameObjObserverClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGameObjObserverClass@@@8
_DATA	SEGMENT
??_R0?AVGameObjObserverClass@@@8 DD FLAT:??_7type_info@@6B@ ; GameObjObserverClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGameObjObserverClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GameObjObserverClass@@8 DD FLAT:??_R0?AVGameObjObserverClass@@@8 ; GameObjObserverClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ScriptClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ScriptClass@@8 DD FLAT:??_R0?AVScriptClass@@@8 ; ScriptClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ScriptClass@@8
rdata$r	ENDS
;	COMDAT ??_R2ScriptClass@@8
rdata$r	SEGMENT
??_R2ScriptClass@@8 DD FLAT:??_R1A@?0A@EA@ScriptClass@@8 ; ScriptClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@GameObjObserverClass@@8
rdata$r	ENDS
;	COMDAT ??_R3ScriptClass@@8
rdata$r	SEGMENT
??_R3ScriptClass@@8 DD 00H				; ScriptClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ScriptClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVScriptClass@@@8
_DATA	SEGMENT
??_R0?AVScriptClass@@@8 DD FLAT:??_7type_info@@6B@	; ScriptClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVScriptClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ScriptClass@@6B@
rdata$r	SEGMENT
??_R4ScriptClass@@6B@ DD 00H				; ScriptClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVScriptClass@@@8
	DD	FLAT:??_R3ScriptClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ScriptFactory@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ScriptFactory@@8 DD FLAT:??_R0?AVScriptFactory@@@8 ; ScriptFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R2ScriptFactory@@8
rdata$r	SEGMENT
??_R2ScriptFactory@@8 DD FLAT:??_R1A@?0A@EA@ScriptFactory@@8 ; ScriptFactory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ScriptFactory@@8
rdata$r	SEGMENT
??_R3ScriptFactory@@8 DD 00H				; ScriptFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVScriptFactory@@@8
_DATA	SEGMENT
??_R0?AVScriptFactory@@@8 DD FLAT:??_7type_info@@6B@	; ScriptFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVScriptFactory@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ScriptFactory@@6B@
rdata$r	SEGMENT
??_R4ScriptFactory@@6B@ DD 00H				; ScriptFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVScriptFactory@@@8
	DD	FLAT:??_R3ScriptFactory@@8
rdata$r	ENDS
;	COMDAT ??_C@_0DL@BOENBDGI@ObjectPoolClass?$DMclass?5GenericSLN@
CONST	SEGMENT
??_C@_0DL@BOENBDGI@ObjectPoolClass?$DMclass?5GenericSLN@ DB 'ObjectPoolCl'
	DB	'ass<class GenericSLNode,256>::~ObjectPoolClass', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@NOANHENP@?$CFd?5memory?5leaks?5found?5in?5ObjectP@
CONST	SEGMENT
??_C@_0FF@NOANHENP@?$CFd?5memory?5leaks?5found?5in?5ObjectP@ DB '%d memor'
	DB	'y leaks found in ObjectPoolClass<class GenericSLNode,256>::~O'
	DB	'bjectPoolClass', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@IOGKEECK@ObjectPoolClass?$DMclass?5GenericSLN@
CONST	SEGMENT
??_C@_0EB@IOGKEECK@ObjectPoolClass?$DMclass?5GenericSLN@ DB 'ObjectPoolCl'
	DB	'ass<class GenericSLNode,256>::Allocate_Object_Memory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@OGDKEDLJ@ScriptRegistrant?$DMclass?5RA_MAD_Ta@
CONST	SEGMENT
??_C@_0DF@OGDKEDLJ@ScriptRegistrant?$DMclass?5RA_MAD_Ta@ DB 'ScriptRegist'
	DB	'rant<class RA_MAD_Tank_Devolved>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@NCAOAPCC@ScriptRegistrant?$DMclass?5RA_Demoli@
CONST	SEGMENT
??_C@_0DN@NCAOAPCC@ScriptRegistrant?$DMclass?5RA_Demoli@ DB 'ScriptRegist'
	DB	'rant<class RA_Demolition_Truck_Retarded>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@BJICAEGO@ScriptRegistrant?$DMclass?5RA_Missil@
CONST	SEGMENT
??_C@_0DG@BJICAEGO@ScriptRegistrant?$DMclass?5RA_Missil@ DB 'ScriptRegist'
	DB	'rant<class RA_Missile_Controller>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@HHNIJMOD@ScriptRegistrant?$DMclass?5RA_Missil@
CONST	SEGMENT
??_C@_0DD@HHNIJMOD@ScriptRegistrant?$DMclass?5RA_Missil@ DB 'ScriptRegist'
	DB	'rant<class RA_Missile_Control>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@GMKHJBLH@ScriptRegistrant?$DMclass?5RA_Beacon@
CONST	SEGMENT
??_C@_0DA@GMKHJBLH@ScriptRegistrant?$DMclass?5RA_Beacon@ DB 'ScriptRegist'
	DB	'rant<class RA_Beacon_Timer>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@LOFLCPMP@ScriptRegistrant?$DMclass?5RA_Beacon@
CONST	SEGMENT
??_C@_0DF@LOFLCPMP@ScriptRegistrant?$DMclass?5RA_Beacon@ DB 'ScriptRegist'
	DB	'rant<class RA_Beacon_Terminal_2>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@IDCPALPD@ScriptRegistrant?$DMclass?5RA_Beacon@
CONST	SEGMENT
??_C@_0DD@IDCPALPD@ScriptRegistrant?$DMclass?5RA_Beacon@ DB 'ScriptRegist'
	DB	'rant<class RA_Beacon_Terminal>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@DNKLBNDI@ScriptRegistrant?$DMclass?5RA_Superw@
CONST	SEGMENT
??_C@_0DG@DNKLBNDI@ScriptRegistrant?$DMclass?5RA_Superw@ DB 'ScriptRegist'
	DB	'rant<class RA_Superweapon_Beacon>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@KFIHPDDA@ScriptRegistrant?$DMclass?5RA_Missil@
CONST	SEGMENT
??_C@_0DC@KFIHPDDA@ScriptRegistrant?$DMclass?5RA_Missil@ DB 'ScriptRegist'
	DB	'rant<class RA_Missile_Beacon>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@OAPEGHL@ScriptRegistrant?$DMclass?5RA_Fog_Le@
CONST	SEGMENT
??_C@_0DG@OAPEGHL@ScriptRegistrant?$DMclass?5RA_Fog_Le@ DB 'ScriptRegistr'
	DB	'ant<class RA_Fog_Level_Settings>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@NONGCAFO@ScriptRegistrant?$DMclass?5RA_Vision@
CONST	SEGMENT
??_C@_0DE@NONGCAFO@ScriptRegistrant?$DMclass?5RA_Vision@ DB 'ScriptRegist'
	DB	'rant<class RA_Vision_Control_2>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@NKPOEDJG@ScriptRegistrant?$DMclass?5RA_Vision@
CONST	SEGMENT
??_C@_0DC@NKPOEDJG@ScriptRegistrant?$DMclass?5RA_Vision@ DB 'ScriptRegist'
	DB	'rant<class RA_Vision_Control>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@LAAHNECH@ScriptRegistrant?$DMclass?5RA_Visibl@
CONST	SEGMENT
??_C@_0DC@LAAHNECH@ScriptRegistrant?$DMclass?5RA_Visibl@ DB 'ScriptRegist'
	DB	'rant<class RA_Visible_Driver>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@OFBDFIFO@ScriptRegistrant?$DMclass?5RA_Vehicl@
CONST	SEGMENT
??_C@_0DG@OFBDFIFO@ScriptRegistrant?$DMclass?5RA_Vehicl@ DB 'ScriptRegist'
	DB	'rant<class RA_Vehicle_Team_Timer>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@FPIKJKNI@ScriptRegistrant?$DMclass?5RA_Vehicl@
CONST	SEGMENT
??_C@_0DE@FPIKJKNI@ScriptRegistrant?$DMclass?5RA_Vehicl@ DB 'ScriptRegist'
	DB	'rant<class RA_Vehicle_Team_Set>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@GFEJNBFO@ScriptRegistrant?$DMclass?5RA_Ore_De@
CONST	SEGMENT
??_C@_0DF@GFEJNBFO@ScriptRegistrant?$DMclass?5RA_Ore_De@ DB 'ScriptRegist'
	DB	'rant<class RA_Ore_Delivery_Zone>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@OOFGBDLJ@ScriptRegistrant?$DMclass?5RA_Ore_Fi@
CONST	SEGMENT
??_C@_0CN@OOFGBDLJ@ScriptRegistrant?$DMclass?5RA_Ore_Fi@ DB 'ScriptRegist'
	DB	'rant<class RA_Ore_Field>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@ONLGJPHK@ScriptRegistrant?$DMclass?5RA_Ore_Tr@
CONST	SEGMENT
??_C@_0CP@ONLGJPHK@ScriptRegistrant?$DMclass?5RA_Ore_Tr@ DB 'ScriptRegist'
	DB	'rant<class RA_Ore_Truck_2>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@HOFDPHIL@ScriptRegistrant?$DMclass?5RA_Ore_Tr@
CONST	SEGMENT
??_C@_0CN@HOFDPHIL@ScriptRegistrant?$DMclass?5RA_Ore_Tr@ DB 'ScriptRegist'
	DB	'rant<class RA_Ore_Truck>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@BEMBIJEP@ScriptRegistrant?$DMclass?5RA_Destro@
CONST	SEGMENT
??_C@_0DK@BEMBIJEP@ScriptRegistrant?$DMclass?5RA_Destro@ DB 'ScriptRegist'
	DB	'rant<class RA_DestroyNearest_OnDeath>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@ILMOPHDA@ScriptRegistrant?$DMclass?5RA_Credit@
CONST	SEGMENT
??_C@_0DL@ILMOPHDA@ScriptRegistrant?$DMclass?5RA_Credit@ DB 'ScriptRegist'
	DB	'rant<class RA_Credit_Theft_Zone_Timer>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@OLPNMLBL@ScriptRegistrant?$DMclass?5RA_Credit@
CONST	SEGMENT
??_C@_0DF@OLPNMLBL@ScriptRegistrant?$DMclass?5RA_Credit@ DB 'ScriptRegist'
	DB	'rant<class RA_Credit_Theft_Zone>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@BEAEMMDO@ScriptRegistrant?$DMclass?5RA_Thief_@
CONST	SEGMENT
??_C@_0DC@BEAEMMDO@ScriptRegistrant?$DMclass?5RA_Thief_@ DB 'ScriptRegist'
	DB	'rant<class RA_Thief_Improved>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@BFDGENND@ScriptRegistrant?$DMclass?5RA_Thief?$DO@
CONST	SEGMENT
??_C@_0CJ@BFDGENND@ScriptRegistrant?$DMclass?5RA_Thief?$DO@ DB 'ScriptReg'
	DB	'istrant<class RA_Thief>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@HBBADMPJ@ScriptRegistrant?$DMclass?5RA_Vehicl@
CONST	SEGMENT
??_C@_0DB@HBBADMPJ@ScriptRegistrant?$DMclass?5RA_Vehicl@ DB 'ScriptRegist'
	DB	'rant<class RA_Vehicle_Regen>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@LHKLAEBI@ScriptRegistrant?$DMclass?5RA_Base_D@
CONST	SEGMENT
??_C@_0DJ@LHKLAEBI@ScriptRegistrant?$DMclass?5RA_Base_D@ DB 'ScriptRegist'
	DB	'rant<class RA_Base_Defense_Chargeup>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@EONKOGFH@ScriptRegistrant?$DMclass?5RA_Base_D@
CONST	SEGMENT
??_C@_0DI@EONKOGFH@ScriptRegistrant?$DMclass?5RA_Base_D@ DB 'ScriptRegist'
	DB	'rant<class RA_Base_Defense_Powered>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@EBJBKDNK@ScriptRegistrant?$DMclass?5RA_Base_D@
CONST	SEGMENT
??_C@_0DH@EBJBKDNK@ScriptRegistrant?$DMclass?5RA_Base_D@ DB 'ScriptRegist'
	DB	'rant<class RA_Base_Defense_Simple>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@GEODKHLE@ScriptRegistrant?$DMclass?5RA_Buildi@
CONST	SEGMENT
??_C@_0DH@GEODKHLE@ScriptRegistrant?$DMclass?5RA_Buildi@ DB 'ScriptRegist'
	DB	'rant<class RA_Building_DeathSound>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@KDLCFKAA@ScriptRegistrant?$DMclass?5RA_Conyar@
CONST	SEGMENT
??_C@_0EB@KDLCFKAA@ScriptRegistrant?$DMclass?5RA_Conyar@ DB 'ScriptRegist'
	DB	'rant<class RA_Conyard_Controller_Improved_2>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@DIHNBFIL@ScriptRegistrant?$DMclass?5RA_Conyar@
CONST	SEGMENT
??_C@_0DP@DIHNBFIL@ScriptRegistrant?$DMclass?5RA_Conyar@ DB 'ScriptRegist'
	DB	'rant<class RA_Conyard_Controller_Improved>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@GEBNGCLA@ScriptRegistrant?$DMclass?5RA_MAD_Ta@
CONST	SEGMENT
??_C@_0DF@GEBNGCLA@ScriptRegistrant?$DMclass?5RA_MAD_Ta@ DB 'ScriptRegist'
	DB	'rant<class RA_MAD_Tank_Improved>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@HJNEEDIG@ScriptRegistrant?$DMclass?5RA_CTF_Zo@
CONST	SEGMENT
??_C@_0CM@HJNEEDIG@ScriptRegistrant?$DMclass?5RA_CTF_Zo@ DB 'ScriptRegist'
	DB	'rant<class RA_CTF_Zone>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@GDFHIJNN@ScriptRegistrant?$DMclass?5RA_Demoli@
CONST	SEGMENT
??_C@_0DN@GDFHIJNN@ScriptRegistrant?$DMclass?5RA_Demoli@ DB 'ScriptRegist'
	DB	'rant<class RA_Demolition_Truck_Improved>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@EICDCNJJ@ScriptRegistrant?$DMclass?5RA_Object@
CONST	SEGMENT
??_C@_0DH@EICDCNJJ@ScriptRegistrant?$DMclass?5RA_Object@ DB 'ScriptRegist'
	DB	'rant<class RA_ObjectDeath_OnDeath>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@HDNHJEMC@ScriptRegistrant?$DMclass?5RA_Conyar@
CONST	SEGMENT
??_C@_0DC@HDNHJEMC@ScriptRegistrant?$DMclass?5RA_Conyar@ DB 'ScriptRegist'
	DB	'rant<class RA_Conyard_Repair>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@MPBGJGO@ScriptRegistrant?$DMclass?5RA_Driver@
CONST	SEGMENT
??_C@_0CP@MPBGJGO@ScriptRegistrant?$DMclass?5RA_Driver@ DB 'ScriptRegistr'
	DB	'ant<class RA_DriverDeath>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@FJOAKOGM@ScriptRegistrant?$DMclass?5RA_GameSt@
CONST	SEGMENT
??_C@_0DG@FJOAKOGM@ScriptRegistrant?$DMclass?5RA_GameSt@ DB 'ScriptRegist'
	DB	'rant<class RA_GameStart_Detector>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@PPADHAPK@ScriptRegistrant?$DMclass?5RA_Damage@
CONST	SEGMENT
??_C@_0DD@PPADHAPK@ScriptRegistrant?$DMclass?5RA_Damage@ DB 'ScriptRegist'
	DB	'rant<class RA_Damaged_Credits>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@BKDIHCIG@ScriptRegistrant?$DMclass?5RA_Naval_@
CONST	SEGMENT
??_C@_0CO@BKDIHCIG@ScriptRegistrant?$DMclass?5RA_Naval_@ DB 'ScriptRegist'
	DB	'rant<class RA_Naval_Zone>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@IKNKONHB@ScriptRegistrant?$DMclass?5RA_Naval_@
CONST	SEGMENT
??_C@_0CO@IKNKONHB@ScriptRegistrant?$DMclass?5RA_Naval_@ DB 'ScriptRegist'
	DB	'rant<class RA_Naval_Unit>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@DMMBPLKA@ScriptRegistrant?$DMclass?5RA_Naval_@
CONST	SEGMENT
??_C@_0DE@DMMBPLKA@ScriptRegistrant?$DMclass?5RA_Naval_@ DB 'ScriptRegist'
	DB	'rant<class RA_Naval_PT_Pokable>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@FECDCEFA@ScriptRegistrant?$DMclass?5RA_Naval_@
CONST	SEGMENT
??_C@_0CO@FECDCEFA@ScriptRegistrant?$DMclass?5RA_Naval_@ DB 'ScriptRegist'
	DB	'rant<class RA_Naval_Yard>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@HEBCOBOO@ScriptRegistrant?$DMclass?5RA_Object@
CONST	SEGMENT
??_C@_0DI@HEBCOBOO@ScriptRegistrant?$DMclass?5RA_Object@ DB 'ScriptRegist'
	DB	'rant<class RA_ObjectDeath_OnCreate>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@BLJNGFMB@ScriptRegistrant?$DMclass?5RA_Mine_M@
CONST	SEGMENT
??_C@_0DA@BLJNGFMB@ScriptRegistrant?$DMclass?5RA_Mine_M@ DB 'ScriptRegist'
	DB	'rant<class RA_Mine_Manager>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@OFDNLEKC@ScriptRegistrant?$DMclass?5RA_Mine?$DO?3@
CONST	SEGMENT
??_C@_0CI@OFDNLEKC@ScriptRegistrant?$DMclass?5RA_Mine?$DO?3@ DB 'ScriptRe'
	DB	'gistrant<class RA_Mine>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@FILGJJPD@ScriptRegistrant?$DMclass?5RA_MineLa@
CONST	SEGMENT
??_C@_0CN@FILGJJPD@ScriptRegistrant?$DMclass?5RA_MineLa@ DB 'ScriptRegist'
	DB	'rant<class RA_MineLayer>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@BKCNMBIJ@ScriptRegistrant?$DMclass?5RA_Helipa@
CONST	SEGMENT
??_C@_0DA@BKCNMBIJ@ScriptRegistrant?$DMclass?5RA_Helipa@ DB 'ScriptRegist'
	DB	'rant<class RA_Helipad_Zone>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@PDBLKIMC@ScriptRegistrant?$DMclass?5RA_Infant@
CONST	SEGMENT
??_C@_0DD@PDBLKIMC@ScriptRegistrant?$DMclass?5RA_Infant@ DB 'ScriptRegist'
	DB	'rant<class RA_Infantry_NotSpy>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@JOAAEHEG@ScriptRegistrant?$DMclass?5RA_Infant@
CONST	SEGMENT
??_C@_0DA@JOAAEHEG@ScriptRegistrant?$DMclass?5RA_Infant@ DB 'ScriptRegist'
	DB	'rant<class RA_Infantry_Spy>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@DAMBEEDH@ScriptRegistrant?$DMclass?5RA_Repair@
CONST	SEGMENT
??_C@_0DB@DAMBEEDH@ScriptRegistrant?$DMclass?5RA_Repair@ DB 'ScriptRegist'
	DB	'rant<class RA_Repair_Script>::Create', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
CONST	SEGMENT
??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ DB 'x'
	DB	00H, ':', 00H, '\', 00H, 'g', 00H, 'i', 00H, 't', 00H, 'h', 00H
	DB	'u', 00H, 'b', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'e'
	DB	00H, 'g', 00H, 'a', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'd', 00H
	DB	'r', 00H, 'a', 00H, 'g', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'd'
	DB	00H, 'e', 00H, '_', 00H, 'r', 00H, 'x', 00H, 'd', 00H, '\', 00H
	DB	's', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 's'
	DB	00H, '\', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H
	DB	't', 00H, 's', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
CONST	SEGMENT
??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@ DB 'x:\github\re'
	DB	'negade\dragonade_rxd\scripts\scripts.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@MHNGCFKE@ScriptRegistrant?$DMclass?5RA_Repair@
CONST	SEGMENT
??_C@_0DF@MHNGCFKE@ScriptRegistrant?$DMclass?5RA_Repair@ DB 'ScriptRegist'
	DB	'rant<class RA_Repair_Controller>::Create', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@HIHNAGN@SList?$DMstruct?5MultiKeyHookScriptI@
CONST	SEGMENT
??_C@_0EN@HIHNAGN@SList?$DMstruct?5MultiKeyHookScriptI@ DB 'SList<struct '
	DB	'MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Insert_Aft'
	DB	'er', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@OJGPEJGC@SList?$DMstruct?5MultiKeyHookScriptI@
CONST	SEGMENT
??_C@_0EO@OJGPEJGC@SList?$DMstruct?5MultiKeyHookScriptI@ DB 'SList<struct'
	DB	' MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Insert_Be'
	DB	'fore', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@MPFHHNNA@SList?$DMstruct?5MultiKeyHookScriptI@
CONST	SEGMENT
??_C@_0EL@MPFHHNNA@SList?$DMstruct?5MultiKeyHookScriptI@ DB 'SList<struct'
	DB	' MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_Al'
	DB	'l', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@CGJBMJBC@SList?$DMstruct?5MultiKeyHookScriptI@
CONST	SEGMENT
??_C@_0EH@CGJBMJBC@SList?$DMstruct?5MultiKeyHookScriptI@ DB 'SList<struct'
	DB	' MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@PPENJFKC@SList?$DMstruct?5MultiKeyHookScriptI@
CONST	SEGMENT
??_C@_0EM@PPENJFKC@SList?$DMstruct?5MultiKeyHookScriptI@ DB 'SList<struct'
	DB	' MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_He'
	DB	'ad', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@OIGECPDF@SList?$DMstruct?5MultiKeyHookScriptI@
CONST	SEGMENT
??_C@_0EJ@OIGECPDF@SList?$DMstruct?5MultiKeyHookScriptI@ DB 'SList<struct'
	DB	' MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Tail', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
CONST	SEGMENT
??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ DB 'x'
	DB	00H, ':', 00H, '\', 00H, 'g', 00H, 'i', 00H, 't', 00H, 'h', 00H
	DB	'u', 00H, 'b', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'e'
	DB	00H, 'g', 00H, 'a', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'd', 00H
	DB	'r', 00H, 'a', 00H, 'g', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'd'
	DB	00H, 'e', 00H, '_', 00H, 'r', 00H, 'x', 00H, 'd', 00H, '\', 00H
	DB	's', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 's'
	DB	00H, '\', 00H, 's', 00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
CONST	SEGMENT
??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@ DB 'x:\github\re'
	DB	'negade\dragonade_rxd\scripts\slist.h', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@ENMBJFB@SList?$DMstruct?5MultiKeyHookScriptI@
CONST	SEGMENT
??_C@_0EJ@ENMBJFB@SList?$DMstruct?5MultiKeyHookScriptI@ DB 'SList<struct '
	DB	'MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Head', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DMNHGAJK@RA_MAD_Tank_Devolved?$AA@
CONST	SEGMENT
??_C@_0BF@DMNHGAJK@RA_MAD_Tank_Devolved?$AA@ DB 'RA_MAD_Tank_Devolved', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BCB@FLGFMEHB@Attach_Model?$DNpistons?3string?0Depl@
CONST	SEGMENT
??_C@_0BCB@FLGFMEHB@Attach_Model?$DNpistons?3string?0Depl@ DB 'Attach_Mod'
	DB	'el=pistons:string,Deployed_Animation=V_SO_MADTANK.ANIM_MADTAN'
	DB	'K:string,Sonic_Preset=Sonic_Box:string,EnemyPercentage=0.34:f'
	DB	'loat,FriendPercentage=0.17:float,ForceFF=1:int,Warhead=Sonic:'
	DB	'string,DamageRadius=250.0:float,Announcement=MAD_Tank_Deploye'
	DB	'd:string,Bone=ROOTTRANSFORM:string', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@6B@ ; ScriptRegistrant<RA_MAD_Tank_Devolved>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BN@OOBBAPPJ@RA_Demolition_Truck_Retarded?$AA@
CONST	SEGMENT
??_C@_0BN@OOBBAPPJ@RA_Demolition_Truck_Retarded?$AA@ DB 'RA_Demolition_Tr'
	DB	'uck_Retarded', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@6B@ ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BG@JMBGNMOA@RA_Missile_Controller?$AA@
CONST	SEGMENT
??_C@_0BG@JMBGNMOA@RA_Missile_Controller?$AA@ DB 'RA_Missile_Controller', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@KHMJHJGK@SiloPresetName?3string?0TerminalPr@
CONST	SEGMENT
??_C@_0DA@KHMJHJGK@SiloPresetName?3string?0TerminalPr@ DB 'SiloPresetName'
	DB	':string,TerminalPresetName:string', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Missile_Controller@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Missile_Controller@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Missile_Controller@@@@6B@ ; ScriptRegistrant<RA_Missile_Controller>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Missile_Controller@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Missile_Controller@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BD@IOKOIMBG@RA_Missile_Control?$AA@
CONST	SEGMENT
??_C@_0BD@IOKOIMBG@RA_Missile_Control?$AA@ DB 'RA_Missile_Control', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CJIFCPNA@AnimationName?3string?$AA@
CONST	SEGMENT
??_C@_0BF@CJIFCPNA@AnimationName?3string?$AA@ DB 'AnimationName:string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Missile_Control@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Missile_Control@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Missile_Control@@@@6B@ ; ScriptRegistrant<RA_Missile_Control>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Missile_Control@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Missile_Control@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Beacon_Timer@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Beacon_Timer@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Beacon_Timer@@@@6B@ ; ScriptRegistrant<RA_Beacon_Timer>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Beacon_Timer@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Beacon_Timer@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BF@CNELHGAE@RA_Beacon_Terminal_2?$AA@
CONST	SEGMENT
??_C@_0BF@CNELHGAE@RA_Beacon_Terminal_2?$AA@ DB 'RA_Beacon_Terminal_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0JF@BICBCKDG@BeaconPowerup?3string?0BeaconReady@
CONST	SEGMENT
??_C@_0JF@BICBCKDG@BeaconPowerup?3string?0BeaconReady@ DB 'BeaconPowerup:'
	DB	'string,BeaconReadySound:string,BeaconTakenSound:string,SiloDi'
	DB	'sableSound:string,OfflineCustom:string,OnlineCustom:string,Wa'
	DB	'rhead:string', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@6B@ ; ScriptRegistrant<RA_Beacon_Terminal_2>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BD@LBKPOLB@RA_Beacon_Terminal?$AA@
CONST	SEGMENT
??_C@_0BD@LBKPOLB@RA_Beacon_Terminal?$AA@ DB 'RA_Beacon_Terminal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HD@BADKHFBM@BeaconPowerup?3string?0BeaconReady@
CONST	SEGMENT
??_C@_0HD@BADKHFBM@BeaconPowerup?3string?0BeaconReady@ DB 'BeaconPowerup:'
	DB	'string,BeaconReadySound:string,BeaconTakenSound:string,SiloDi'
	DB	'sableSound:string,SpyNotifySound:string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Beacon_Terminal@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Beacon_Terminal@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Beacon_Terminal@@@@6B@ ; ScriptRegistrant<RA_Beacon_Terminal>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Beacon_Terminal@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Beacon_Terminal@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BG@NGCENKPP@RA_Superweapon_Beacon?$AA@
CONST	SEGMENT
??_C@_0BG@NGCENKPP@RA_Superweapon_Beacon?$AA@ DB 'RA_Superweapon_Beacon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@6B@ ; ScriptRegistrant<RA_Superweapon_Beacon>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BC@BBPABDKJ@RA_Missile_Beacon?$AA@
CONST	SEGMENT
??_C@_0BC@BBPABDKJ@RA_Missile_Beacon?$AA@ DB 'RA_Missile_Beacon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IMIJHAEH@SiloPresetName?3string?$AA@
CONST	SEGMENT
??_C@_0BG@IMIJHAEH@SiloPresetName?3string?$AA@ DB 'SiloPresetName:string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Missile_Beacon@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Missile_Beacon@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Missile_Beacon@@@@6B@ ; ScriptRegistrant<RA_Missile_Beacon>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Missile_Beacon@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Missile_Beacon@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BG@GOFBAMMF@RA_Fog_Level_Settings?$AA@
CONST	SEGMENT
??_C@_0BG@GOFBAMMF@RA_Fog_Level_Settings?$AA@ DB 'RA_Fog_Level_Settings', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@KNDOJIGM@FogEnable?$DN1?3int?0FogMin?$DN200?40?3flo@
CONST	SEGMENT
??_C@_0DG@KNDOJIGM@FogEnable?$DN1?3int?0FogMin?$DN200?40?3flo@ DB 'FogEna'
	DB	'ble=1:int,FogMin=200.0:float,FogMax=300.0:float', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@6B@ ; ScriptRegistrant<RA_Fog_Level_Settings>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BE@KFINOBCA@RA_Vision_Control_2?$AA@
CONST	SEGMENT
??_C@_0BE@KFINOBCA@RA_Vision_Control_2?$AA@ DB 'RA_Vision_Control_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ID@BNLLNEKL@FogController?$DNRA_Game_Manager?3st@
CONST	SEGMENT
??_C@_0ID@BNLLNEKL@FogController?$DNRA_Game_Manager?3st@ DB 'FogControlle'
	DB	'r=RA_Game_Manager:string,InfantryFogStart=0:float,InfantryFog'
	DB	'End=9:float,VehicleFogStart=0:float,VehicleFogEnd=9:float', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Vision_Control_2@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Vision_Control_2@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Vision_Control_2@@@@6B@ ; ScriptRegistrant<RA_Vision_Control_2>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Vision_Control_2@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Vision_Control_2@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BC@KHDMLJMG@RA_Vision_Control?$AA@
CONST	SEGMENT
??_C@_0BC@KHDMLJMG@RA_Vision_Control?$AA@ DB 'RA_Vision_Control', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@LECGGIMJ@FogController?$DNRA_Game_Manager?3st@
CONST	SEGMENT
??_C@_0CF@LECGGIMJ@FogController?$DNRA_Game_Manager?3st@ DB 'FogControlle'
	DB	'r=RA_Game_Manager:string', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Vision_Control@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Vision_Control@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Vision_Control@@@@6B@ ; ScriptRegistrant<RA_Vision_Control>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Vision_Control@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Vision_Control@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BC@IPDMJLDP@RA_Visible_Driver?$AA@
CONST	SEGMENT
??_C@_0BC@IPDMJLDP@RA_Visible_Driver?$AA@ DB 'RA_Visible_Driver', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@BDGDBJII@BoneName?$DNseat0?3string?0Message?$DN47@
CONST	SEGMENT
??_C@_0CJ@BDGDBJII@BoneName?$DNseat0?3string?0Message?$DN47@ DB 'BoneName'
	DB	'=seat0:string,Message=471174:int', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Visible_Driver@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Visible_Driver@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Visible_Driver@@@@6B@ ; ScriptRegistrant<RA_Visible_Driver>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Visible_Driver@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Visible_Driver@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@6B@ ; ScriptRegistrant<RA_Vehicle_Team_Timer>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BE@KJDBMHAJ@RA_Vehicle_Team_Set?$AA@
CONST	SEGMENT
??_C@_0BE@KJDBMHAJ@RA_Vehicle_Team_Set?$AA@ DB 'RA_Vehicle_Team_Set', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@6B@ ; ScriptRegistrant<RA_Vehicle_Team_Set>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BF@EMNABKEN@RA_Ore_Delivery_Zone?$AA@
CONST	SEGMENT
??_C@_0BF@EMNABKEN@RA_Ore_Delivery_Zone?$AA@ DB 'RA_Ore_Delivery_Zone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MOLJAJBM@Team?$DN0?3int?0Enter?$DN321654?$AA@
CONST	SEGMENT
??_C@_0BI@MOLJAJBM@Team?$DN0?3int?0Enter?$DN321654?$AA@ DB 'Team=0:int,En'
	DB	'ter=321654', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@6B@ ; ScriptRegistrant<RA_Ore_Delivery_Zone>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0N@CECIAOFO@RA_Ore_Field?$AA@
CONST	SEGMENT
??_C@_0N@CECIAOFO@RA_Ore_Field?$AA@ DB 'RA_Ore_Field', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@MOLFFHGO@Field_Value?$DN700?3int?0Enter?$DN456654@
CONST	SEGMENT
??_C@_0DE@MOLFFHGO@Field_Value?$DN700?3int?0Enter?$DN456654@ DB 'Field_Va'
	DB	'lue=700:int,Enter=456654:int,Exit=75321:int', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Ore_Field@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Ore_Field@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Ore_Field@@@@6B@ ; ScriptRegistrant<RA_Ore_Field>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Ore_Field@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Ore_Field@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0KH@BNIPDAMN@Field_Enter?$DN456654?3int?0Field_Exi@
CONST	SEGMENT
??_C@_0KH@BNIPDAMN@Field_Enter?$DN456654?3int?0Field_Exi@ DB 'Field_Enter'
	DB	'=456654:int,Field_Exit=75321:int,Deposit_Enter=321654:int,Max'
	DB	'_Capacity=7:int,Harvest_Anim:string,Deliver_Anim:string,Harve'
	DB	'st_Sound:string,Dump_Sound:string', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Ore_Truck_2@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Ore_Truck_2@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Ore_Truck_2@@@@6B@ ; ScriptRegistrant<RA_Ore_Truck_2>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Ore_Truck_2@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Ore_Truck_2@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0IA@KPNFALHO@Field_Enter?$DN456654?3int?0Field_Exi@
CONST	SEGMENT
??_C@_0IA@KPNFALHO@Field_Enter?$DN456654?3int?0Field_Exi@ DB 'Field_Enter'
	DB	'=456654:int,Field_Exit=75321:int,Deposit_Enter=321654:int,Max'
	DB	'_Capacity=7:int,Harvest_Anim:string,Deliver_Anim:string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Ore_Truck@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Ore_Truck@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Ore_Truck@@@@6B@ ; ScriptRegistrant<RA_Ore_Truck>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Ore_Truck@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Ore_Truck@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BK@OLAFLKMD@RA_DestroyNearest_OnDeath?$AA@
CONST	SEGMENT
??_C@_0BK@OLAFLKMD@RA_DestroyNearest_OnDeath?$AA@ DB 'RA_DestroyNearest_O'
	DB	'nDeath', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OEHGDLOH@Preset_Name?3string?$AA@
CONST	SEGMENT
??_C@_0BD@OEHGDLOH@Preset_Name?3string?$AA@ DB 'Preset_Name:string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@6B@ ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BL@JHMFHJBJ@RA_Credit_Theft_Zone_Timer?$AA@
CONST	SEGMENT
??_C@_0BL@JHMFHJBJ@RA_Credit_Theft_Zone_Timer?$AA@ DB 'RA_Credit_Theft_Zo'
	DB	'ne_Timer', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@JNDADJCE@Enter_Message?$DN357753?3int?0Team?$DN0?3@
CONST	SEGMENT
??_C@_0CP@JNDADJCE@Enter_Message?$DN357753?3int?0Team?$DN0?3@ DB 'Enter_M'
	DB	'essage=357753:int,Team=0:int,Time:float', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@6B@ ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BF@HBHNBOBB@RA_Credit_Theft_Zone?$AA@
CONST	SEGMENT
??_C@_0BF@HBHNBOBB@RA_Credit_Theft_Zone?$AA@ DB 'RA_Credit_Theft_Zone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@MCCMNKMM@Enter_Message?$DN357753?3int?0Team?$DN0?3@
CONST	SEGMENT
??_C@_0CE@MCCMNKMM@Enter_Message?$DN357753?3int?0Team?$DN0?3@ DB 'Enter_M'
	DB	'essage=357753:int,Team=0:int', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@6B@ ; ScriptRegistrant<RA_Credit_Theft_Zone>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0DL@PJDADANK@Enter_Message?$DN357753?3int?0Percent@
CONST	SEGMENT
??_C@_0DL@PJDADANK@Enter_Message?$DN357753?3int?0Percent@ DB 'Enter_Messa'
	DB	'ge=357753:int,Percentage=0.5:float,Sound:string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Thief_Improved@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Thief_Improved@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Thief_Improved@@@@6B@ ; ScriptRegistrant<RA_Thief_Improved>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Thief_Improved@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Thief_Improved@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0CO@OHINKJD@Enter_Message?$DN357753?3int?0Percent@
CONST	SEGMENT
??_C@_0CO@OHINKJD@Enter_Message?$DN357753?3int?0Percent@ DB 'Enter_Messag'
	DB	'e=357753:int,Percentage=0.5:float', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Thief@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Thief@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Thief@@@@6B@ ; ScriptRegistrant<RA_Thief>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Thief@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Thief@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BB@PFPIFCDO@RA_Vehicle_Regen?$AA@
CONST	SEGMENT
??_C@_0BB@PFPIFCDO@RA_Vehicle_Regen?$AA@ DB 'RA_Vehicle_Regen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@NHEDFBAP@Percentage?$DN0?45?3float?0Heal?$DN1?40?3fl@
CONST	SEGMENT
??_C@_0EF@NHEDFBAP@Percentage?$DN0?45?3float?0Heal?$DN1?40?3fl@ DB 'Perce'
	DB	'ntage=0.5:float,Heal=1.0:float,Time=1.0:float,TimerID=87654:i'
	DB	'nt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Vehicle_Regen@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Vehicle_Regen@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Vehicle_Regen@@@@6B@ ; ScriptRegistrant<RA_Vehicle_Regen>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Vehicle_Regen@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Vehicle_Regen@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BJ@OBJICIJE@RA_Base_Defense_Chargeup?$AA@
CONST	SEGMENT
??_C@_0BJ@OBJICIJE@RA_Base_Defense_Chargeup?$AA@ DB 'RA_Base_Defense_Char'
	DB	'geup', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0IN@EAGPGNEA@MinRange?$DN0?40?3float?0MaxRange?$DN100?4@
CONST	SEGMENT
??_C@_0IN@EAGPGNEA@MinRange?$DN0?40?3float?0MaxRange?$DN100?4@ DB 'MinRan'
	DB	'ge=0.0:float,MaxRange=100.0:float,AntiAir=0:int,AntiGround=1:'
	DB	'int,AdjustAim=0:int,TargetMode=0:int,ChargeAnim:string,Charge'
	DB	'Sound:string', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@6B@ ; ScriptRegistrant<RA_Base_Defense_Chargeup>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BI@MCHHNLJI@RA_Base_Defense_Powered?$AA@
CONST	SEGMENT
??_C@_0BI@MCHHNLJI@RA_Base_Defense_Powered?$AA@ DB 'RA_Base_Defense_Power'
	DB	'ed', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@6B@ ; ScriptRegistrant<RA_Base_Defense_Powered>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BH@FGGFMFIJ@RA_Base_Defense_Simple?$AA@
CONST	SEGMENT
??_C@_0BH@FGGFMFIJ@RA_Base_Defense_Simple?$AA@ DB 'RA_Base_Defense_Simple'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FBDKCOCM@MinRange?$DN0?40?3float?0MaxRange?$DN100?4@
CONST	SEGMENT
??_C@_0GI@FBDKCOCM@MinRange?$DN0?40?3float?0MaxRange?$DN100?4@ DB 'MinRan'
	DB	'ge=0.0:float,MaxRange=100.0:float,AntiAir=0:int,AntiGround=1:'
	DB	'int,AdjustAim=0:int,TargetMode=0:int', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@6B@ ; ScriptRegistrant<RA_Base_Defense_Simple>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BH@KNBAGKAE@RA_Building_DeathSound?$AA@
CONST	SEGMENT
??_C@_0BH@KNBAGKAE@RA_Building_DeathSound?$AA@ DB 'RA_Building_DeathSound'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@CCCKBBEG@HalfSound?$DNExploSound_Bldg_Half?3s@
CONST	SEGMENT
??_C@_0EM@CCCKBBEG@HalfSound?$DNExploSound_Bldg_Half?3s@ DB 'HalfSound=Ex'
	DB	'ploSound_Bldg_Half:string,DeadSound=ExploSound_Bldg_Dead:stri'
	DB	'ng', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Building_DeathSound@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Building_DeathSound@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Building_DeathSound@@@@6B@ ; ScriptRegistrant<RA_Building_DeathSound>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Building_DeathSound@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Building_DeathSound@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0CB@DGNNNNJK@RA_Conyard_Controller_Improved_2@
CONST	SEGMENT
??_C@_0CB@DGNNNNJK@RA_Conyard_Controller_Improved_2@ DB 'RA_Conyard_Contr'
	DB	'oller_Improved_2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0LD@FLGPMNPO@Team?$DN0?3int?0Preset1?$DNblank?3string?0@
CONST	SEGMENT
??_C@_0LD@FLGPMNPO@Team?$DN0?3int?0Preset1?$DNblank?3string?0@ DB 'Team=0'
	DB	':int,Preset1=blank:string,Preset2=blank:string,Preset3=blank:'
	DB	'string,Preset4=blank:string,Preset5=blank:string,Preset6=blan'
	DB	'k:string,Preset7=blank:string,Preset8=blank:string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@6B@ ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BP@NHCGCDLK@RA_Conyard_Controller_Improved?$AA@
CONST	SEGMENT
??_C@_0BP@NHCGCDLK@RA_Conyard_Controller_Improved?$AA@ DB 'RA_Conyard_Con'
	DB	'troller_Improved', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0HE@HNENHIFJ@Team?$DN0?3int?0Preset1?$DNblank?3string?0@
CONST	SEGMENT
??_C@_0HE@HNENHIFJ@Team?$DN0?3int?0Preset1?$DNblank?3string?0@ DB 'Team=0'
	DB	':int,Preset1=blank:string,Preset2=blank:string,Preset3=blank:'
	DB	'string,Preset4=blank:string,Preset5=blank:string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@6B@ ; ScriptRegistrant<RA_Conyard_Controller_Improved>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BF@IFEFMCNH@RA_MAD_Tank_Improved?$AA@
CONST	SEGMENT
??_C@_0BF@IFEFMCNH@RA_MAD_Tank_Improved?$AA@ DB 'RA_MAD_Tank_Improved', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0PC@DFICKEC@Attach_Model?$DNpistons?3string?0Depl@
CONST	SEGMENT
??_C@_0PC@DFICKEC@Attach_Model?$DNpistons?3string?0Depl@ DB 'Attach_Model'
	DB	'=pistons:string,Deployed_Animation=V_SO_MADTANK.ANIM_MADTANK:'
	DB	'string,Sonic_Preset=Sonic_Box:string,Percentage=0.34:float,Wa'
	DB	'rhead=Sonic:string,DamageRadius=250.0:float,Announcement=MAD_'
	DB	'Tank_Deployed:string,Bone=ROOTTRANSFORM:string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@6B@ ; ScriptRegistrant<RA_MAD_Tank_Improved>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0M@KMOGJHIB@RA_CTF_Zone?$AA@
CONST	SEGMENT
??_C@_0M@KMOGJHIB@RA_CTF_Zone?$AA@ DB 'RA_CTF_Zone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@COAKFENF@Team_ID?$DN0?3int?0Max_Capture?$DN5?3int?0@
CONST	SEGMENT
??_C@_0DI@COAKFENF@Team_ID?$DN0?3int?0Max_Capture?$DN5?3int?0@ DB 'Team_I'
	DB	'D=0:int,Max_Capture=5:int,Flag_Preset_Name:string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_CTF_Zone@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_CTF_Zone@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_CTF_Zone@@@@6B@ ; ScriptRegistrant<RA_CTF_Zone>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_CTF_Zone@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_CTF_Zone@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BN@MFAOB@RA_Demolition_Truck_Improved?$AA@
CONST	SEGMENT
??_C@_0BN@MFAOB@RA_Demolition_Truck_Improved?$AA@ DB 'RA_Demolition_Truck'
	DB	'_Improved', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GO@KODEMHGD@Explosion?$DNExplosion_Invis_Nuke?3s@
CONST	SEGMENT
??_C@_0GO@KODEMHGD@Explosion?$DNExplosion_Invis_Nuke?3s@ DB 'Explosion=Ex'
	DB	'plosion_Invis_Nuke:string,Warhead=Nuke:string,DamageStrength='
	DB	'480.0:float,DamageRadius=120.0:float', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@6B@ ; ScriptRegistrant<RA_Demolition_Truck_Improved>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BH@LIIDEAGO@RA_ObjectDeath_OnDeath?$AA@
CONST	SEGMENT
??_C@_0BH@LIIDEAGO@RA_ObjectDeath_OnDeath?$AA@ DB 'RA_ObjectDeath_OnDeath'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PJCHNJBB@Preset?$DNblank?3string?$AA@
CONST	SEGMENT
??_C@_0BE@PJCHNJBB@Preset?$DNblank?3string?$AA@ DB 'Preset=blank:string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@6B@ ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BC@PLCPOBGK@RA_Conyard_Repair?$AA@
CONST	SEGMENT
??_C@_0BC@PLCPOBGK@RA_Conyard_Repair?$AA@ DB 'RA_Conyard_Repair', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GCKCFGBE@Repair_Frequency?$DN1?40?3float?$AA@
CONST	SEGMENT
??_C@_0BL@GCKCFGBE@Repair_Frequency?$DN1?40?3float?$AA@ DB 'Repair_Freque'
	DB	'ncy=1.0:float', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Conyard_Repair@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Conyard_Repair@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Conyard_Repair@@@@6B@ ; ScriptRegistrant<RA_Conyard_Repair>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Conyard_Repair@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Conyard_Repair@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_DriverDeath@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_DriverDeath@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_DriverDeath@@@@6B@ ; ScriptRegistrant<RA_DriverDeath>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_DriverDeath@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_DriverDeath@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BG@LLLIIPBA@RA_GameStart_Detector?$AA@
CONST	SEGMENT
??_C@_0BG@LLLIIPBA@RA_GameStart_Detector?$AA@ DB 'RA_GameStart_Detector', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@FPONCPAM@Interval?$DN5?40?3float?0ReceiverID?$DN0?3@
CONST	SEGMENT
??_C@_0EC@FPONCPAM@Interval?$DN5?40?3float?0ReceiverID?$DN0?3@ DB 'Interv'
	DB	'al=5.0:float,ReceiverID=0:int,Message=0:int,Parameter=0:int', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_GameStart_Detector@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_GameStart_Detector@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_GameStart_Detector@@@@6B@ ; ScriptRegistrant<RA_GameStart_Detector>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_GameStart_Detector@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_GameStart_Detector@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BD@MOIPLKEJ@RA_Damaged_Credits?$AA@
CONST	SEGMENT
??_C@_0BD@MOIPLKEJ@RA_Damaged_Credits?$AA@ DB 'RA_Damaged_Credits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FGLCBCFK@Divisor?$DN4?40?3float?$AA@
CONST	SEGMENT
??_C@_0BC@FGLCBCFK@Divisor?$DN4?40?3float?$AA@ DB 'Divisor=4.0:float', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Damaged_Credits@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Damaged_Credits@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Damaged_Credits@@@@6B@ ; ScriptRegistrant<RA_Damaged_Credits>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Damaged_Credits@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Damaged_Credits@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0O@BJNNJGMC@RA_Naval_Zone?$AA@
CONST	SEGMENT
??_C@_0O@BJNNJGMC@RA_Naval_Zone?$AA@ DB 'RA_Naval_Zone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LPAGAABD@Explosion?$DNblank?3string?$AA@
CONST	SEGMENT
??_C@_0BH@LPAGAABD@Explosion?$DNblank?3string?$AA@ DB 'Explosion=blank:st'
	DB	'ring', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Naval_Zone@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Naval_Zone@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Naval_Zone@@@@6B@ ; ScriptRegistrant<RA_Naval_Zone>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Naval_Zone@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Naval_Zone@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BE@DPAOAOHB@Controller_ID?$DN0?3int?$AA@
CONST	SEGMENT
??_C@_0BE@DPAOAOHB@Controller_ID?$DN0?3int?$AA@ DB 'Controller_ID=0:int', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Naval_Unit@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Naval_Unit@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Naval_Unit@@@@6B@ ; ScriptRegistrant<RA_Naval_Unit>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Naval_Unit@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Naval_Unit@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BE@DAIDDDDB@RA_Naval_PT_Pokable?$AA@
CONST	SEGMENT
??_C@_0BE@DAIDDDDB@RA_Naval_PT_Pokable?$AA@ DB 'RA_Naval_PT_Pokable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@BNKMBPJO@Preset_Name?$DNblank?3string?0Cost?$DN0?4@
CONST	SEGMENT
??_C@_0FF@BNKMBPJO@Preset_Name?$DNblank?3string?0Cost?$DN0?4@ DB 'Preset_'
	DB	'Name=blank:string,Cost=0.0:float,Team=0:int,Controller_ID=0:i'
	DB	'nt,Zone_ID=0:int', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@6B@ ; ScriptRegistrant<RA_Naval_PT_Pokable>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0O@LCIFPAHE@RA_Naval_Yard?$AA@
CONST	SEGMENT
??_C@_0O@LCIFPAHE@RA_Naval_Yard?$AA@ DB 'RA_Naval_Yard', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@GOLPBKIF@Limit?$DN8?3int?0Disable_Time?$DN5?40?3flo@
CONST	SEGMENT
??_C@_0CD@GOLPBKIF@Limit?$DN8?3int?0Disable_Time?$DN5?40?3flo@ DB 'Limit='
	DB	'8:int,Disable_Time=5.0:float', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Naval_Yard@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Naval_Yard@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Naval_Yard@@@@6B@ ; ScriptRegistrant<RA_Naval_Yard>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Naval_Yard@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Naval_Yard@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BI@OODHAHCJ@RA_ObjectDeath_OnCreate?$AA@
CONST	SEGMENT
??_C@_0BI@OODHAHCJ@RA_ObjectDeath_OnCreate?$AA@ DB 'RA_ObjectDeath_OnCrea'
	DB	'te', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OABGKEKH@Object?$DNnull?3string?$AA@
CONST	SEGMENT
??_C@_0BD@OABGKEKH@Object?$DNnull?3string?$AA@ DB 'Object=null:string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@6B@ ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BA@HFOOKAAN@RA_Mine_Manager?$AA@
CONST	SEGMENT
??_C@_0BA@HFOOKAAN@RA_Mine_Manager?$AA@ DB 'RA_Mine_Manager', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HC@KCKGPIHO@Allied_Mine?$DNBlank?3string?0Soviet_@
CONST	SEGMENT
??_C@_0HC@KCKGPIHO@Allied_Mine?$DNBlank?3string?0Soviet_@ DB 'Allied_Mine'
	DB	'=Blank:string,Soviet_Mine=Blank:string,Mine_Reload=Blank:stri'
	DB	'ng,BoneName=mine:string,Mine_Limit=30:int', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Mine_Manager@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Mine_Manager@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Mine_Manager@@@@6B@ ; ScriptRegistrant<RA_Mine_Manager>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Mine_Manager@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Mine_Manager@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_07COPEENHL@RA_Mine?$AA@
CONST	SEGMENT
??_C@_07COPEENHL@RA_Mine?$AA@ DB 'RA_Mine', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0HH@MHEDFFNG@Mine_Manager_ID?$DN0?3int?0Is_Anti?9Pe@
CONST	SEGMENT
??_C@_0HH@MHEDFFNG@Mine_Manager_ID?$DN0?3int?0Is_Anti?9Pe@ DB 'Mine_Manag'
	DB	'er_ID=0:int,Is_Anti-Personnel=0:int,Is_Anti-Tank=0:int,Trigge'
	DB	'r_Damage=1.0:float,Trigger_Warhead=Death:string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Mine@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Mine@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Mine@@@@6B@ ; ScriptRegistrant<RA_Mine>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Mine@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Mine@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0N@MHFMOKFN@RA_MineLayer?$AA@
CONST	SEGMENT
??_C@_0N@MHFMOKFN@RA_MineLayer?$AA@ DB 'RA_MineLayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EKBLJKOH@Mine_Manager_ID?$DN0?3int?$AA@
CONST	SEGMENT
??_C@_0BG@EKBLJKOH@Mine_Manager_ID?$DN0?3int?$AA@ DB 'Mine_Manager_ID=0:i'
	DB	'nt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_MineLayer@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_MineLayer@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_MineLayer@@@@6B@ ; ScriptRegistrant<RA_MineLayer>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_MineLayer@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_MineLayer@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BA@FLIHAMBL@RA_Helipad_Zone?$AA@
CONST	SEGMENT
??_C@_0BA@FLIHAMBL@RA_Helipad_Zone?$AA@ DB 'RA_Helipad_Zone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0JP@MJKKDFJK@TeamSelection?$DN0?3int?0Reload_Inter@
CONST	SEGMENT
??_C@_0JP@MJKKDFJK@TeamSelection?$DN0?3int?0Reload_Inter@ DB 'TeamSelecti'
	DB	'on=0:int,Reload_Interval=2.00:float,Apache_Preset_ID=0:int,Ap'
	DB	'ache_Reload_Powerup=Blank:string,Hind_Preset_ID=0:int,Hind_Re'
	DB	'load_Powerup=Blank:string', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Helipad_Zone@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Helipad_Zone@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Helipad_Zone@@@@6B@ ; ScriptRegistrant<RA_Helipad_Zone>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Helipad_Zone@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Helipad_Zone@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BD@BCCDCMEJ@RA_Infantry_NotSpy?$AA@
CONST	SEGMENT
??_C@_0BD@BCCDCMEJ@RA_Infantry_NotSpy?$AA@ DB 'RA_Infantry_NotSpy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@6B@ ; ScriptRegistrant<RA_Infantry_NotSpy>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BA@BILJLNN@RA_Infantry_Spy?$AA@
CONST	SEGMENT
??_C@_0BA@BILJLNN@RA_Infantry_Spy?$AA@ DB 'RA_Infantry_Spy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Infantry_Spy@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Infantry_Spy@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Infantry_Spy@@@@6B@ ; ScriptRegistrant<RA_Infantry_Spy>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Infantry_Spy@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Infantry_Spy@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BB@KLPHPIGA@RA_Repair_Script?$AA@
CONST	SEGMENT
??_C@_0BB@KLPHPIGA@RA_Repair_Script?$AA@ DB 'RA_Repair_Script', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GBPECEAC@TeamSelection?$DN0?3int?$AA@
CONST	SEGMENT
??_C@_0BE@GBPECEAC@TeamSelection?$DN0?3int?$AA@ DB 'TeamSelection=0:int', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Repair_Script@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Repair_Script@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Repair_Script@@@@6B@ ; ScriptRegistrant<RA_Repair_Script>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Repair_Script@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Repair_Script@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_0BF@DCBEKJC@RA_Repair_Controller?$AA@
CONST	SEGMENT
??_C@_0BF@DCBEKJC@RA_Repair_Controller?$AA@ DB 'RA_Repair_Controller', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JOHJGBBA@ScriptZoneID?$DN0?3int?$AA@
CONST	SEGMENT
??_C@_0BD@JOHJGBBA@ScriptZoneID?$DN0?3int?$AA@ DB 'ScriptZoneID=0:int', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$ScriptRegistrant@VRA_Repair_Controller@@@@6B@
CONST	SEGMENT
??_7?$ScriptRegistrant@VRA_Repair_Controller@@@@6B@ DD FLAT:??_R4?$ScriptRegistrant@VRA_Repair_Controller@@@@6B@ ; ScriptRegistrant<RA_Repair_Controller>::`vftable'
	DD	FLAT:??_E?$ScriptRegistrant@VRA_Repair_Controller@@@@UAEPAXI@Z
	DD	FLAT:?Create@?$ScriptRegistrant@VRA_Repair_Controller@@@@UAEPAVScriptImpClass@@XZ
CONST	ENDS
;	COMDAT ??_C@_07EOGFGIGH@ForceFF?$AA@
CONST	SEGMENT
??_C@_07EOGFGIGH@ForceFF?$AA@ DB 'ForceFF', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IJDMLPMI@FriendPercentage?$AA@
CONST	SEGMENT
??_C@_0BB@IJDMLPMI@FriendPercentage?$AA@ DB 'FriendPercentage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OOIHOFIM@EnemyPercentage?$AA@
CONST	SEGMENT
??_C@_0BA@OOIHOFIM@EnemyPercentage?$AA@ DB 'EnemyPercentage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03FCIIMNPF@MAD?$AA@
CONST	SEGMENT
??_C@_03FCIIMNPF@MAD?$AA@ DB 'MAD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FHJIDJKJ@TerminalPresetName?$AA@
CONST	SEGMENT
??_C@_0BD@FHJIDJKJ@TerminalPresetName?$AA@ DB 'TerminalPresetName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HEOGOAJ@AnimationName?$AA@
CONST	SEGMENT
??_C@_0O@HEOGOAJ@AnimationName?$AA@ DB 'AnimationName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DHHIFKOM@OnlineCustom?$AA@
CONST	SEGMENT
??_C@_0N@DHHIFKOM@OnlineCustom?$AA@ DB 'OnlineCustom', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MMHNBBEN@OfflineCustom?$AA@
CONST	SEGMENT
??_C@_0O@MMHNBBEN@OfflineCustom?$AA@ DB 'OfflineCustom', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JEOPBNFB@SpyNotifySound?$AA@
CONST	SEGMENT
??_C@_0P@JEOPBNFB@SpyNotifySound?$AA@ DB 'SpyNotifySound', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CFBBPGKA@SiloDisableSound?$AA@
CONST	SEGMENT
??_C@_0BB@CFBBPGKA@SiloDisableSound?$AA@ DB 'SiloDisableSound', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PKFMOKHA@BeaconTakenSound?$AA@
CONST	SEGMENT
??_C@_0BB@PKFMOKHA@BeaconTakenSound?$AA@ DB 'BeaconTakenSound', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IANNLIGI@BeaconPowerup?$AA@
CONST	SEGMENT
??_C@_0O@IANNLIGI@BeaconPowerup?$AA@ DB 'BeaconPowerup', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OAPPKIAJ@BeaconReadySound?$AA@
CONST	SEGMENT
??_C@_0BB@OAPPKIAJ@BeaconReadySound?$AA@ DB 'BeaconReadySound', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JCMKEIDO@RA_Beacon_Timer?$AA@
CONST	SEGMENT
??_C@_0BA@JCMKEIDO@RA_Beacon_Timer?$AA@ DB 'RA_Beacon_Timer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JAAENFLF@SiloPresetName?$AA@
CONST	SEGMENT
??_C@_0P@JAAENFLF@SiloPresetName?$AA@ DB 'SiloPresetName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OONIFEAB@InfantryFogStart?$AA@
CONST	SEGMENT
??_C@_0BB@OONIFEAB@InfantryFogStart?$AA@ DB 'InfantryFogStart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EEDBCAGE@InfantryFogEnd?$AA@
CONST	SEGMENT
??_C@_0P@EEDBCAGE@InfantryFogEnd?$AA@ DB 'InfantryFogEnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OLNMMNF@VehicleFogStart?$AA@
CONST	SEGMENT
??_C@_0BA@OLNMMNF@VehicleFogStart?$AA@ DB 'VehicleFogStart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OFGDAIBO@VehicleFogEnd?$AA@
CONST	SEGMENT
??_C@_0O@OFGDAIBO@VehicleFogEnd?$AA@ DB 'VehicleFogEnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HCDDJCHI@RA_Vehicle_Team_Timer?$AA@
CONST	SEGMENT
??_C@_0BG@HCDDJCHI@RA_Vehicle_Team_Timer?$AA@ DB 'RA_Vehicle_Team_Timer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04LBABLPF@Exit?$AA@
CONST	SEGMENT
??_C@_04LBABLPF@Exit?$AA@ DB 'Exit', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05IAOCCJNL@Enter?$AA@
CONST	SEGMENT
??_C@_05IAOCCJNL@Enter?$AA@ DB 'Enter', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DJINMBFD@Field_Value?$AA@
CONST	SEGMENT
??_C@_0M@DJINMBFD@Field_Value?$AA@ DB 'Field_Value', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MLLCDPHH@RA_Ore_Truck_2?$AA@
CONST	SEGMENT
??_C@_0P@MLLCDPHH@RA_Ore_Truck_2?$AA@ DB 'RA_Ore_Truck_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KBNLAHDA@RA_Ore_Truck?$AA@
CONST	SEGMENT
??_C@_0N@KBNLAHDA@RA_Ore_Truck?$AA@ DB 'RA_Ore_Truck', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LICJIGHN@Dump_Sound?$AA@
CONST	SEGMENT
??_C@_0L@LICJIGHN@Dump_Sound?$AA@ DB 'Dump_Sound', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NMABFPAN@Harvest_Sound?$AA@
CONST	SEGMENT
??_C@_0O@NMABFPAN@Harvest_Sound?$AA@ DB 'Harvest_Sound', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PONAAJDB@Deliver_Anim?$AA@
CONST	SEGMENT
??_C@_0N@PONAAJDB@Deliver_Anim?$AA@ DB 'Deliver_Anim', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FMANAMEC@Deposit_Enter?$AA@
CONST	SEGMENT
??_C@_0O@FMANAMEC@Deposit_Enter?$AA@ DB 'Deposit_Enter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KGCLACNJ@Field_Exit?$AA@
CONST	SEGMENT
??_C@_0L@KGCLACNJ@Field_Exit?$AA@ DB 'Field_Exit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BAAMNDP@Harvest_Anim?$AA@
CONST	SEGMENT
??_C@_0N@BAAMNDP@Harvest_Anim?$AA@ DB 'Harvest_Anim', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FEAECCKI@Max_Capacity?$AA@
CONST	SEGMENT
??_C@_0N@FEAECCKI@Max_Capacity?$AA@ DB 'Max_Capacity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LCJHHOCB@Field_Enter?$AA@
CONST	SEGMENT
??_C@_0M@LCJHHOCB@Field_Enter?$AA@ DB 'Field_Enter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GOCDOIJN@RA_Thief_Improved?$AA@
CONST	SEGMENT
??_C@_0BC@GOCDOIJN@RA_Thief_Improved?$AA@ DB 'RA_Thief_Improved', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MAHMNMLO@Sound?$AA@
CONST	SEGMENT
??_C@_05MAHMNMLO@Sound?$AA@ DB 'Sound', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JGGHHOJE@Credits?5Stolen?3?5?$CF?40f?6Credits?5Giv@
CONST	SEGMENT
??_C@_0CJ@JGGHHOJE@Credits?5Stolen?3?5?$CF?40f?6Credits?5Giv@ DB 'Credits'
	DB	' Stolen: %.0f', 0aH, 'Credits Given: %.0f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HADANCIC@RA_Thief?$AA@
CONST	SEGMENT
??_C@_08HADANCIC@RA_Thief?$AA@ DB 'RA_Thief', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MIIJBBJG@Enter_Message?$AA@
CONST	SEGMENT
??_C@_0O@MIIJBBJG@Enter_Message?$AA@ DB 'Enter_Message', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04NNPLJJOH@Heal?$AA@
CONST	SEGMENT
??_C@_04NNPLJJOH@Heal?$AA@ DB 'Heal', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OKOFBOPB@Time?$AA@
CONST	SEGMENT
??_C@_04OKOFBOPB@Time?$AA@ DB 'Time', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JKEPGEHM@TimerID?$AA@
CONST	SEGMENT
??_C@_07JKEPGEHM@TimerID?$AA@ DB 'TimerID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EEFBOHPC@ChargeSound?$AA@
CONST	SEGMENT
??_C@_0M@EEFBOHPC@ChargeSound?$AA@ DB 'ChargeSound', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IDJIIOHN@ChargeAnim?$AA@
CONST	SEGMENT
??_C@_0L@IDJIIOHN@ChargeAnim?$AA@ DB 'ChargeAnim', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KGOAILDN@AdjustAim?$AA@
CONST	SEGMENT
??_C@_09KGOAILDN@AdjustAim?$AA@ DB 'AdjustAim', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LLAOGGCM@TargetMode?$AA@
CONST	SEGMENT
??_C@_0L@LLAOGGCM@TargetMode?$AA@ DB 'TargetMode', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EJPJLGFP@MinRange?$AA@
CONST	SEGMENT
??_C@_08EJPJLGFP@MinRange?$AA@ DB 'MinRange', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JOBCAEBO@MaxRange?$AA@
CONST	SEGMENT
??_C@_08JOBCAEBO@MaxRange?$AA@ DB 'MaxRange', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ONGGIKDA@AntiGround?$AA@
CONST	SEGMENT
??_C@_0L@ONGGIKDA@AntiGround?$AA@ DB 'AntiGround', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07NJFFFLDF@AntiAir?$AA@
CONST	SEGMENT
??_C@_07NJFFFLDF@AntiAir?$AA@ DB 'AntiAir', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@
CONST	SEGMENT
??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@ DB 'JFW_Submarine', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HACJLOIJ@DeadSound?$AA@
CONST	SEGMENT
??_C@_09HACJLOIJ@DeadSound?$AA@ DB 'DeadSound', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DLGDALPD@HalfSound?$AA@
CONST	SEGMENT
??_C@_09DLGDALPD@HalfSound?$AA@ DB 'HalfSound', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07BKNIGNOC@Preset8?$AA@
CONST	SEGMENT
??_C@_07BKNIGNOC@Preset8?$AA@ DB 'Preset8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JNEAHBCN@Preset7?$AA@
CONST	SEGMENT
??_C@_07JNEAHBCN@Preset7?$AA@ DB 'Preset7', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07IEFLEAGM@Preset6?$AA@
CONST	SEGMENT
??_C@_07IEFLEAGM@Preset6?$AA@ DB 'Preset6', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KPHGBDKP@Preset5?$AA@
CONST	SEGMENT
??_C@_07KPHGBDKP@Preset5?$AA@ DB 'Preset5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LGGNCCOO@Preset4?$AA@
CONST	SEGMENT
??_C@_07LGGNCCOO@Preset4?$AA@ DB 'Preset4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07PJCMLECJ@Preset3?$AA@
CONST	SEGMENT
??_C@_07PJCMLECJ@Preset3?$AA@ DB 'Preset3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OADHIFGI@Preset2?$AA@
CONST	SEGMENT
??_C@_07OADHIFGI@Preset2?$AA@ DB 'Preset2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MLBKNGKL@Preset1?$AA@
CONST	SEGMENT
??_C@_07MLBKNGKL@Preset1?$AA@ DB 'Preset1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GKJDIJEO@Percentage?$AA@
CONST	SEGMENT
??_C@_0L@GKJDIJEO@Percentage?$AA@ DB 'Percentage', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JAJNNIDP@Sonic_Preset?$AA@
CONST	SEGMENT
??_C@_0N@JAJNNIDP@Sonic_Preset?$AA@ DB 'Sonic_Preset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IANHLCC@Deployed_Animation?$AA@
CONST	SEGMENT
??_C@_0BD@IANHLCC@Deployed_Animation?$AA@ DB 'Deployed_Animation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IKMPLOBB@Announcement?$AA@
CONST	SEGMENT
??_C@_0N@IKMPLOBB@Announcement?$AA@ DB 'Announcement', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OPMLCOMM@Attach_Model?$AA@
CONST	SEGMENT
??_C@_0N@OPMLCOMM@Attach_Model?$AA@ DB 'Attach_Model', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NHJNEILC@Invisible_Object?$AA@
CONST	SEGMENT
??_C@_0BB@NHJNEILC@Invisible_Object?$AA@ DB 'Invisible_Object', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04CCGIJNFG@Bone?$AA@
CONST	SEGMENT
??_C@_04CCGIJNFG@Bone?$AA@ DB 'Bone', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GNHEDHFO@Max_Capture?$AA@
CONST	SEGMENT
??_C@_0M@GNHEDHFO@Max_Capture?$AA@ DB 'Max_Capture', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05JDJNJCFA@LHAND?$AA@
CONST	SEGMENT
??_C@_05JDJNJCFA@LHAND?$AA@ DB 'LHAND', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OLPGPHAI@TDA_CTF_Attached?$AA@
CONST	SEGMENT
??_C@_0BB@OLPGPHAI@TDA_CTF_Attached?$AA@ DB 'TDA_CTF_Attached', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07EIAFPCFB@Team_ID?$AA@
CONST	SEGMENT
??_C@_07EIAFPCFB@Team_ID?$AA@ DB 'Team_ID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ELNDALFH@Flag_Preset_Name?$AA@
CONST	SEGMENT
??_C@_0BB@ELNDALFH@Flag_Preset_Name?$AA@ DB 'Flag_Preset_Name', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JMLOMBPP@RA_DriverDeath?$AA@
CONST	SEGMENT
??_C@_0P@JMLOMBPP@RA_DriverDeath?$AA@ DB 'RA_DriverDeath', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT
??_C@_01GBGANLPD@0?$AA@ DB '0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DAHCFJAP@DamageRadius?$AA@
CONST	SEGMENT
??_C@_0N@DAHCFJAP@DamageRadius?$AA@ DB 'DamageRadius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PDFEMABG@DamageStrength?$AA@
CONST	SEGMENT
??_C@_0P@PDFEMABG@DamageStrength?$AA@ DB 'DamageStrength', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07EDCLAFNL@Warhead?$AA@
CONST	SEGMENT
??_C@_07EDCLAFNL@Warhead?$AA@ DB 'Warhead', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKLLCHIK@Preset?$AA@
CONST	SEGMENT
??_C@_06CKLLCHIK@Preset?$AA@ DB 'Preset', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OHJIHAFH@None?$AA@
CONST	SEGMENT
??_C@_04OHJIHAFH@None?$AA@ DB 'None', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KMLBNKBM@Repair_Frequency?$AA@
CONST	SEGMENT
??_C@_0BB@KMLBNKBM@Repair_Frequency?$AA@ DB 'Repair_Frequency', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
CONST	SEGMENT
??_C@_0M@IPKOBAPD@BlamoKiller?$AA@ DB 'BlamoKiller', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HPDNJEFH@Parameter?$AA@
CONST	SEGMENT
??_C@_09HPDNJEFH@Parameter?$AA@ DB 'Parameter', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07BEIHKDLJ@Message?$AA@
CONST	SEGMENT
??_C@_07BEIHKDLJ@Message?$AA@ DB 'Message', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MGGOLNPC@ReceiverID?$AA@
CONST	SEGMENT
??_C@_0L@MGGOLNPC@ReceiverID?$AA@ DB 'ReceiverID', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08KDKDEPAG@Interval?$AA@
CONST	SEGMENT
??_C@_08KDKDEPAG@Interval?$AA@ DB 'Interval', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07EHHFIGEM@Divisor?$AA@
CONST	SEGMENT
??_C@_07EHHFIGEM@Divisor?$AA@ DB 'Divisor', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09HGNANIIM@Explosion?$AA@
CONST	SEGMENT
??_C@_09HGNANIIM@Explosion?$AA@ DB 'Explosion', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HFKHFDOD@RA_Naval_Unit?$AA@
CONST	SEGMENT
??_C@_0O@HFKHFDOD@RA_Naval_Unit?$AA@ DB 'RA_Naval_Unit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KBNHOJJA@Preset_Name?$AA@
CONST	SEGMENT
??_C@_0M@KBNHOJJA@Preset_Name?$AA@ DB 'Preset_Name', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DINJEGDJ@Zone_ID?$AA@
CONST	SEGMENT
??_C@_07DINJEGDJ@Zone_ID?$AA@ DB 'Zone_ID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KMKIEDFH@Controller_ID?$AA@
CONST	SEGMENT
??_C@_0O@KMKIEDFH@Controller_ID?$AA@ DB 'Controller_ID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04FICPKHNF@Cost?$AA@
CONST	SEGMENT
??_C@_04FICPKHNF@Cost?$AA@ DB 'Cost', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GBPANCCF@Team?$AA@
CONST	SEGMENT
??_C@_04GBPANCCF@Team?$AA@ DB 'Team', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GDBOJMMA@Disable_Time?$AA@
CONST	SEGMENT
??_C@_0N@GDBOJMMA@Disable_Time?$AA@ DB 'Disable_Time', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05GHJMOCPE@Limit?$AA@
CONST	SEGMENT
??_C@_05GHJMOCPE@Limit?$AA@ DB 'Limit', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06ELFECKBG@Object?$AA@
CONST	SEGMENT
??_C@_06ELFECKBG@Object?$AA@ DB 'Object', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PGGAFPFO@Death?$AA@
CONST	SEGMENT
??_C@_05PGGAFPFO@Death?$AA@ DB 'Death', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OIJNDEED@Allied_Mine?$AA@
CONST	SEGMENT
??_C@_0M@OIJNDEED@Allied_Mine?$AA@ DB 'Allied_Mine', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MPNDCCKL@Mine_Reload?$AA@
CONST	SEGMENT
??_C@_0M@MPNDCCKL@Mine_Reload?$AA@ DB 'Mine_Reload', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MGAOKMMO@Soviet_Mine?$AA@
CONST	SEGMENT
??_C@_0M@MGAOKMMO@Soviet_Mine?$AA@ DB 'Soviet_Mine', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FPDFGKEJ@BoneName?$AA@
CONST	SEGMENT
??_C@_08FPDFGKEJ@BoneName?$AA@ DB 'BoneName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FEMAOEFO@Mine_Limit?$AA@
CONST	SEGMENT
??_C@_0L@FEMAOEFO@Mine_Limit?$AA@ DB 'Mine_Limit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CKNAPFGO@Trigger_Damage?$AA@
CONST	SEGMENT
??_C@_0P@CKNAPFGO@Trigger_Damage?$AA@ DB 'Trigger_Damage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LBFLGKJ@Trigger_Warhead?$AA@
CONST	SEGMENT
??_C@_0BA@LBFLGKJ@Trigger_Warhead?$AA@ DB 'Trigger_Warhead', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JAJHEDOP@Is_Anti?9Tank?$AA@
CONST	SEGMENT
??_C@_0N@JAJHEDOP@Is_Anti?9Tank?$AA@ DB 'Is_Anti-Tank', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CBHFNPK@Is_Anti?9Personnel?$AA@
CONST	SEGMENT
??_C@_0BC@CBHFNPK@Is_Anti?9Personnel?$AA@ DB 'Is_Anti-Personnel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FMFKJJDO@Mine_Manager_ID?$AA@
CONST	SEGMENT
??_C@_0BA@FMFKJJDO@Mine_Manager_ID?$AA@ DB 'Mine_Manager_ID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ICDDOGML@Hind_Reload_Powerup?$AA@
CONST	SEGMENT
??_C@_0BE@ICDDOGML@Hind_Reload_Powerup?$AA@ DB 'Hind_Reload_Powerup', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DFEDGBNO@Hind_Preset_ID?$AA@
CONST	SEGMENT
??_C@_0P@DFEDGBNO@Hind_Preset_ID?$AA@ DB 'Hind_Preset_ID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MGOLCACJ@Apache_Reload_Powerup?$AA@
CONST	SEGMENT
??_C@_0BG@MGOLCACJ@Apache_Reload_Powerup?$AA@ DB 'Apache_Reload_Powerup', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DJDJOOPC@Apache_Preset_ID?$AA@
CONST	SEGMENT
??_C@_0BB@DJDJOOPC@Apache_Preset_ID?$AA@ DB 'Apache_Preset_ID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DBPAPOF@Reload_Interval?$AA@
CONST	SEGMENT
??_C@_0BA@DBPAPOF@Reload_Interval?$AA@ DB 'Reload_Interval', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ENHMDGPL@TeamSelection?$AA@
CONST	SEGMENT
??_C@_0O@ENHMDGPL@TeamSelection?$AA@ DB 'TeamSelection', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PHKBDNCI@ScriptZoneID?$AA@
CONST	SEGMENT
??_C@_0N@PHKBDNCI@ScriptZoneID?$AA@ DB 'ScriptZoneID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7RA_Superweapon_Beacon@@6B@
CONST	SEGMENT
??_7RA_Superweapon_Beacon@@6B@ DD FLAT:??_R4RA_Superweapon_Beacon@@6B@ ; RA_Superweapon_Beacon::`vftable'
	DD	FLAT:??_ERA_Superweapon_Beacon@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Superweapon_Beacon@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_MAD_Tank_Devolved@@6B@
CONST	SEGMENT
??_7RA_MAD_Tank_Devolved@@6B@ DD FLAT:??_R4RA_MAD_Tank_Devolved@@6B@ ; RA_MAD_Tank_Devolved::`vftable'
	DD	FLAT:??_ERA_MAD_Tank_Devolved@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@JFW_Key_Hook_Base@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_MAD_Tank_Devolved@@UAEXXZ
	DD	FLAT:?KeyHook@RA_MAD_Tank_Devolved@@EAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Demolition_Truck_Retarded@@6B@
CONST	SEGMENT
??_7RA_Demolition_Truck_Retarded@@6B@ DD FLAT:??_R4RA_Demolition_Truck_Retarded@@6B@ ; RA_Demolition_Truck_Retarded::`vftable'
	DD	FLAT:??_ERA_Demolition_Truck_Retarded@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Demolition_Truck_Retarded@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Missile_Controller@@6B@
CONST	SEGMENT
??_7RA_Missile_Controller@@6B@ DD FLAT:??_R4RA_Missile_Controller@@6B@ ; RA_Missile_Controller::`vftable'
	DD	FLAT:??_ERA_Missile_Controller@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@RA_Missile_Controller@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Missile_Control@@6B@
CONST	SEGMENT
??_7RA_Missile_Control@@6B@ DD FLAT:??_R4RA_Missile_Control@@6B@ ; RA_Missile_Control::`vftable'
	DD	FLAT:??_ERA_Missile_Control@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Missile_Control@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Missile_Control@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Missile_Control@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@RA_Missile_Control@@EAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Missile_Control@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Beacon_Timer@@6B@
CONST	SEGMENT
??_7RA_Beacon_Timer@@6B@ DD FLAT:??_R4RA_Beacon_Timer@@6B@ ; RA_Beacon_Timer::`vftable'
	DD	FLAT:??_ERA_Beacon_Timer@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Beacon_Timer@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Beacon_Timer@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Beacon_Terminal_2@@6B@
CONST	SEGMENT
??_7RA_Beacon_Terminal_2@@6B@ DD FLAT:??_R4RA_Beacon_Terminal_2@@6B@ ; RA_Beacon_Terminal_2::`vftable'
	DD	FLAT:??_ERA_Beacon_Terminal_2@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Beacon_Terminal@@6B@
CONST	SEGMENT
??_7RA_Beacon_Terminal@@6B@ DD FLAT:??_R4RA_Beacon_Terminal@@6B@ ; RA_Beacon_Terminal::`vftable'
	DD	FLAT:??_ERA_Beacon_Terminal@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Beacon_Terminal@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Missile_Beacon@@6B@
CONST	SEGMENT
??_7RA_Missile_Beacon@@6B@ DD FLAT:??_R4RA_Missile_Beacon@@6B@ ; RA_Missile_Beacon::`vftable'
	DD	FLAT:??_ERA_Missile_Beacon@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Missile_Beacon@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Fog_Level_Settings@@6B@
CONST	SEGMENT
??_7RA_Fog_Level_Settings@@6B@ DD FLAT:??_R4RA_Fog_Level_Settings@@6B@ ; RA_Fog_Level_Settings::`vftable'
	DD	FLAT:??_ERA_Fog_Level_Settings@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Fog_Level_Settings@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Vision_Control_2@@6B@
CONST	SEGMENT
??_7RA_Vision_Control_2@@6B@ DD FLAT:??_R4RA_Vision_Control_2@@6B@ ; RA_Vision_Control_2::`vftable'
	DD	FLAT:??_ERA_Vision_Control_2@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Vision_Control_2@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Vision_Control_2@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Vision_Control_2@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Vision_Control@@6B@
CONST	SEGMENT
??_7RA_Vision_Control@@6B@ DD FLAT:??_R4RA_Vision_Control@@6B@ ; RA_Vision_Control::`vftable'
	DD	FLAT:??_ERA_Vision_Control@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Vision_Control@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Vision_Control@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Vision_Control@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Visible_Driver@@6B@
CONST	SEGMENT
??_7RA_Visible_Driver@@6B@ DD FLAT:??_R4RA_Visible_Driver@@6B@ ; RA_Visible_Driver::`vftable'
	DD	FLAT:??_ERA_Visible_Driver@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Visible_Driver@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Vehicle_Team_Timer@@6B@
CONST	SEGMENT
??_7RA_Vehicle_Team_Timer@@6B@ DD FLAT:??_R4RA_Vehicle_Team_Timer@@6B@ ; RA_Vehicle_Team_Timer::`vftable'
	DD	FLAT:??_ERA_Vehicle_Team_Timer@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Vehicle_Team_Timer@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Vehicle_Team_Timer@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Vehicle_Team_Set@@6B@
CONST	SEGMENT
??_7RA_Vehicle_Team_Set@@6B@ DD FLAT:??_R4RA_Vehicle_Team_Set@@6B@ ; RA_Vehicle_Team_Set::`vftable'
	DD	FLAT:??_ERA_Vehicle_Team_Set@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Vehicle_Team_Set@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Ore_Delivery_Zone@@6B@
CONST	SEGMENT
??_7RA_Ore_Delivery_Zone@@6B@ DD FLAT:??_R4RA_Ore_Delivery_Zone@@6B@ ; RA_Ore_Delivery_Zone::`vftable'
	DD	FLAT:??_ERA_Ore_Delivery_Zone@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@RA_Ore_Delivery_Zone@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Ore_Field@@6B@
CONST	SEGMENT
??_7RA_Ore_Field@@6B@ DD FLAT:??_R4RA_Ore_Field@@6B@	; RA_Ore_Field::`vftable'
	DD	FLAT:??_ERA_Ore_Field@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@RA_Ore_Field@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@RA_Ore_Field@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Ore_Truck_2@@6B@
CONST	SEGMENT
??_7RA_Ore_Truck_2@@6B@ DD FLAT:??_R4RA_Ore_Truck_2@@6B@ ; RA_Ore_Truck_2::`vftable'
	DD	FLAT:??_ERA_Ore_Truck_2@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Ore_Truck_2@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Ore_Truck@@6B@
CONST	SEGMENT
??_7RA_Ore_Truck@@6B@ DD FLAT:??_R4RA_Ore_Truck@@6B@	; RA_Ore_Truck::`vftable'
	DD	FLAT:??_ERA_Ore_Truck@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Ore_Truck@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_DestroyNearest_OnDeath@@6B@
CONST	SEGMENT
??_7RA_DestroyNearest_OnDeath@@6B@ DD FLAT:??_R4RA_DestroyNearest_OnDeath@@6B@ ; RA_DestroyNearest_OnDeath::`vftable'
	DD	FLAT:??_ERA_DestroyNearest_OnDeath@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@RA_DestroyNearest_OnDeath@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Credit_Theft_Zone_Timer@@6B@
CONST	SEGMENT
??_7RA_Credit_Theft_Zone_Timer@@6B@ DD FLAT:??_R4RA_Credit_Theft_Zone_Timer@@6B@ ; RA_Credit_Theft_Zone_Timer::`vftable'
	DD	FLAT:??_ERA_Credit_Theft_Zone_Timer@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Credit_Theft_Zone_Timer@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@RA_Credit_Theft_Zone_Timer@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Credit_Theft_Zone@@6B@
CONST	SEGMENT
??_7RA_Credit_Theft_Zone@@6B@ DD FLAT:??_R4RA_Credit_Theft_Zone@@6B@ ; RA_Credit_Theft_Zone::`vftable'
	DD	FLAT:??_ERA_Credit_Theft_Zone@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@RA_Credit_Theft_Zone@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Thief_Improved@@6B@
CONST	SEGMENT
??_7RA_Thief_Improved@@6B@ DD FLAT:??_R4RA_Thief_Improved@@6B@ ; RA_Thief_Improved::`vftable'
	DD	FLAT:??_ERA_Thief_Improved@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Thief_Improved@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Thief@@6B@
CONST	SEGMENT
??_7RA_Thief@@6B@ DD FLAT:??_R4RA_Thief@@6B@		; RA_Thief::`vftable'
	DD	FLAT:??_ERA_Thief@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Thief@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Vehicle_Regen@@6B@
CONST	SEGMENT
??_7RA_Vehicle_Regen@@6B@ DD FLAT:??_R4RA_Vehicle_Regen@@6B@ ; RA_Vehicle_Regen::`vftable'
	DD	FLAT:??_ERA_Vehicle_Regen@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Vehicle_Regen@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@RA_Vehicle_Regen@@EAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Vehicle_Regen@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Vehicle_Regen@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Base_Defense_Chargeup@@6B@
CONST	SEGMENT
??_7RA_Base_Defense_Chargeup@@6B@ DD FLAT:??_R4RA_Base_Defense_Chargeup@@6B@ ; RA_Base_Defense_Chargeup::`vftable'
	DD	FLAT:??_ERA_Base_Defense_Chargeup@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Base_Defense_Chargeup@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Base_Defense_Powered@@6B@
CONST	SEGMENT
??_7RA_Base_Defense_Powered@@6B@ DD FLAT:??_R4RA_Base_Defense_Powered@@6B@ ; RA_Base_Defense_Powered::`vftable'
	DD	FLAT:??_ERA_Base_Defense_Powered@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Base_Defense_Powered@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Base_Defense_Simple@@6B@
CONST	SEGMENT
??_7RA_Base_Defense_Simple@@6B@ DD FLAT:??_R4RA_Base_Defense_Simple@@6B@ ; RA_Base_Defense_Simple::`vftable'
	DD	FLAT:??_ERA_Base_Defense_Simple@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Base_Defense_Simple@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Building_DeathSound@@6B@
CONST	SEGMENT
??_7RA_Building_DeathSound@@6B@ DD FLAT:??_R4RA_Building_DeathSound@@6B@ ; RA_Building_DeathSound::`vftable'
	DD	FLAT:??_ERA_Building_DeathSound@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Building_DeathSound@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@RA_Building_DeathSound@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@RA_Building_DeathSound@@EAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Building_DeathSound@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Conyard_Controller_Improved_2@@6B@
CONST	SEGMENT
??_7RA_Conyard_Controller_Improved_2@@6B@ DD FLAT:??_R4RA_Conyard_Controller_Improved_2@@6B@ ; RA_Conyard_Controller_Improved_2::`vftable'
	DD	FLAT:??_ERA_Conyard_Controller_Improved_2@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Conyard_Controller_Improved_2@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@RA_Conyard_Controller_Improved_2@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Conyard_Controller_Improved_2@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Conyard_Controller_Improved@@6B@
CONST	SEGMENT
??_7RA_Conyard_Controller_Improved@@6B@ DD FLAT:??_R4RA_Conyard_Controller_Improved@@6B@ ; RA_Conyard_Controller_Improved::`vftable'
	DD	FLAT:??_ERA_Conyard_Controller_Improved@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Conyard_Controller_Improved@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@RA_Conyard_Controller_Improved@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Conyard_Controller_Improved@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_MAD_Tank_Improved@@6B@
CONST	SEGMENT
??_7RA_MAD_Tank_Improved@@6B@ DD FLAT:??_R4RA_MAD_Tank_Improved@@6B@ ; RA_MAD_Tank_Improved::`vftable'
	DD	FLAT:??_ERA_MAD_Tank_Improved@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_MAD_Tank_Improved@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_CTF_Zone@@6B@
CONST	SEGMENT
??_7RA_CTF_Zone@@6B@ DD FLAT:??_R4RA_CTF_Zone@@6B@	; RA_CTF_Zone::`vftable'
	DD	FLAT:??_ERA_CTF_Zone@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_CTF_Zone@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Demolition_Truck_Improved@@6B@
CONST	SEGMENT
??_7RA_Demolition_Truck_Improved@@6B@ DD FLAT:??_R4RA_Demolition_Truck_Improved@@6B@ ; RA_Demolition_Truck_Improved::`vftable'
	DD	FLAT:??_ERA_Demolition_Truck_Improved@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Demolition_Truck_Improved@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_ObjectDeath_OnDeath@@6B@
CONST	SEGMENT
??_7RA_ObjectDeath_OnDeath@@6B@ DD FLAT:??_R4RA_ObjectDeath_OnDeath@@6B@ ; RA_ObjectDeath_OnDeath::`vftable'
	DD	FLAT:??_ERA_ObjectDeath_OnDeath@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@RA_ObjectDeath_OnDeath@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Conyard_Repair@@6B@
CONST	SEGMENT
??_7RA_Conyard_Repair@@6B@ DD FLAT:??_R4RA_Conyard_Repair@@6B@ ; RA_Conyard_Repair::`vftable'
	DD	FLAT:??_ERA_Conyard_Repair@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Conyard_Repair@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Conyard_Repair@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Conyard_Repair@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Conyard_Repair@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_DriverDeath@@6B@
CONST	SEGMENT
??_7RA_DriverDeath@@6B@ DD FLAT:??_R4RA_DriverDeath@@6B@ ; RA_DriverDeath::`vftable'
	DD	FLAT:??_ERA_DriverDeath@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_DriverDeath@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_DriverDeath@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_GameStart_Detector@@6B@
CONST	SEGMENT
??_7RA_GameStart_Detector@@6B@ DD FLAT:??_R4RA_GameStart_Detector@@6B@ ; RA_GameStart_Detector::`vftable'
	DD	FLAT:??_ERA_GameStart_Detector@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_GameStart_Detector@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@RA_GameStart_Detector@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_GameStart_Detector@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Damaged_Credits@@6B@
CONST	SEGMENT
??_7RA_Damaged_Credits@@6B@ DD FLAT:??_R4RA_Damaged_Credits@@6B@ ; RA_Damaged_Credits::`vftable'
	DD	FLAT:??_ERA_Damaged_Credits@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@RA_Damaged_Credits@@EAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Naval_Zone@@6B@
CONST	SEGMENT
??_7RA_Naval_Zone@@6B@ DD FLAT:??_R4RA_Naval_Zone@@6B@	; RA_Naval_Zone::`vftable'
	DD	FLAT:??_ERA_Naval_Zone@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Naval_Zone@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Naval_Unit@@6B@
CONST	SEGMENT
??_7RA_Naval_Unit@@6B@ DD FLAT:??_R4RA_Naval_Unit@@6B@	; RA_Naval_Unit::`vftable'
	DD	FLAT:??_ERA_Naval_Unit@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@RA_Naval_Unit@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Naval_PT_Pokable@@6B@
CONST	SEGMENT
??_7RA_Naval_PT_Pokable@@6B@ DD FLAT:??_R4RA_Naval_PT_Pokable@@6B@ ; RA_Naval_PT_Pokable::`vftable'
	DD	FLAT:??_ERA_Naval_PT_Pokable@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Naval_PT_Pokable@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Naval_Yard@@6B@
CONST	SEGMENT
??_7RA_Naval_Yard@@6B@ DD FLAT:??_R4RA_Naval_Yard@@6B@	; RA_Naval_Yard::`vftable'
	DD	FLAT:??_ERA_Naval_Yard@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Naval_Yard@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_ObjectDeath_OnCreate@@6B@
CONST	SEGMENT
??_7RA_ObjectDeath_OnCreate@@6B@ DD FLAT:??_R4RA_ObjectDeath_OnCreate@@6B@ ; RA_ObjectDeath_OnCreate::`vftable'
	DD	FLAT:??_ERA_ObjectDeath_OnCreate@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_ObjectDeath_OnCreate@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Mine_Manager@@6B@
CONST	SEGMENT
??_7RA_Mine_Manager@@6B@ DD FLAT:??_R4RA_Mine_Manager@@6B@ ; RA_Mine_Manager::`vftable'
	DD	FLAT:??_ERA_Mine_Manager@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Mine_Manager@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Mine_Manager@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Mine_Manager@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Mine@@6B@
CONST	SEGMENT
??_7RA_Mine@@6B@ DD FLAT:??_R4RA_Mine@@6B@		; RA_Mine::`vftable'
	DD	FLAT:??_ERA_Mine@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Mine@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@RA_Mine@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_Mine@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@RA_Mine@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_Mine@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_MineLayer@@6B@
CONST	SEGMENT
??_7RA_MineLayer@@6B@ DD FLAT:??_R4RA_MineLayer@@6B@	; RA_MineLayer::`vftable'
	DD	FLAT:??_ERA_MineLayer@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_MineLayer@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@RA_MineLayer@@EAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@RA_MineLayer@@EAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@RA_MineLayer@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Helipad_Zone@@6B@
CONST	SEGMENT
??_7RA_Helipad_Zone@@6B@ DD FLAT:??_R4RA_Helipad_Zone@@6B@ ; RA_Helipad_Zone::`vftable'
	DD	FLAT:??_ERA_Helipad_Zone@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Helipad_Zone@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@RA_Helipad_Zone@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Infantry_NotSpy@@6B@
CONST	SEGMENT
??_7RA_Infantry_NotSpy@@6B@ DD FLAT:??_R4RA_Infantry_NotSpy@@6B@ ; RA_Infantry_NotSpy::`vftable'
	DD	FLAT:??_ERA_Infantry_NotSpy@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Infantry_NotSpy@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Infantry_Spy@@6B@
CONST	SEGMENT
??_7RA_Infantry_Spy@@6B@ DD FLAT:??_R4RA_Infantry_Spy@@6B@ ; RA_Infantry_Spy::`vftable'
	DD	FLAT:??_ERA_Infantry_Spy@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@RA_Infantry_Spy@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@RA_Infantry_Spy@@EAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Repair_Script@@6B@
CONST	SEGMENT
??_7RA_Repair_Script@@6B@ DD FLAT:??_R4RA_Repair_Script@@6B@ ; RA_Repair_Script::`vftable'
	DD	FLAT:??_ERA_Repair_Script@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@RA_Repair_Script@@EAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@RA_Repair_Script@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7RA_Repair_Controller@@6B@
CONST	SEGMENT
??_7RA_Repair_Controller@@6B@ DD FLAT:??_R4RA_Repair_Controller@@6B@ ; RA_Repair_Controller::`vftable'
	DD	FLAT:??_ERA_Repair_Controller@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@RA_Repair_Controller@@EAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7JFW_Object_Created_Hook_Base@@6B@
CONST	SEGMENT
??_7JFW_Object_Created_Hook_Base@@6B@ DD FLAT:??_R4JFW_Object_Created_Hook_Base@@6B@ ; JFW_Object_Created_Hook_Base::`vftable'
	DD	FLAT:??_EJFW_Object_Created_Hook_Base@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@JFW_Object_Created_Hook_Base@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@JFW_Object_Created_Hook_Base@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7MultiKeyHookScriptImpClass@@6B@
CONST	SEGMENT
??_7MultiKeyHookScriptImpClass@@6B@ DD FLAT:??_R4MultiKeyHookScriptImpClass@@6B@ ; MultiKeyHookScriptImpClass::`vftable'
	DD	FLAT:??_EMultiKeyHookScriptImpClass@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@MultiKeyHookScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@MultiKeyHookScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@
CONST	SEGMENT
??_7?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@ DD FLAT:??_R4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`vftable'
	DD	FLAT:??_E?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAXI@Z
	DD	FLAT:?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z
	DD	FLAT:?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z
	DD	FLAT:?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z
	DD	FLAT:?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z
	DD	FLAT:?Remove_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ
	DD	FLAT:?Remove_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ
	DD	FLAT:?Remove@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPBUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z
	DD	FLAT:?Remove_All@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEXXZ
	DD	FLAT:?Insert_Before@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z
	DD	FLAT:?Insert_After@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z
	DD	FLAT:?Is_Empty@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBE_NXZ
	DD	FLAT:?Get_Count@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBEIXZ
CONST	ENDS
;	COMDAT ??_7JFW_Key_Hook_Base@@6B@
CONST	SEGMENT
??_7JFW_Key_Hook_Base@@6B@ DD FLAT:??_R4JFW_Key_Hook_Base@@6B@ ; JFW_Key_Hook_Base::`vftable'
	DD	FLAT:??_EJFW_Key_Hook_Base@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@JFW_Key_Hook_Base@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@JFW_Key_Hook_Base@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ReferencerClass@@6B@
CONST	SEGMENT
??_7ReferencerClass@@6B@ DD FLAT:??_R4ReferencerClass@@6B@ ; ReferencerClass::`vftable'
	DD	FLAT:??_EReferencerClass@@UAEPAXI@Z
	DD	FLAT:?On_Post_Load@ReferencerClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7PostLoadableClass@@6B@
CONST	SEGMENT
??_7PostLoadableClass@@6B@ DD FLAT:??_R4PostLoadableClass@@6B@ ; PostLoadableClass::`vftable'
	DD	FLAT:??_EPostLoadableClass@@UAEPAXI@Z
	DD	FLAT:?On_Post_Load@PostLoadableClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7INIClass@@6B@
CONST	SEGMENT
??_7INIClass@@6B@ DD FLAT:??_R4INIClass@@6B@		; INIClass::`vftable'
	DD	FLAT:??_EINIClass@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ DB 'f', 00H, 'a', 00H
	DB	'l', 00H, 's', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
CONST	SEGMENT
??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ DB 'x'
	DB	00H, ':', 00H, '\', 00H, 'g', 00H, 'i', 00H, 't', 00H, 'h', 00H
	DB	'u', 00H, 'b', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'e'
	DB	00H, 'g', 00H, 'a', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'd', 00H
	DB	'r', 00H, 'a', 00H, 'g', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'd'
	DB	00H, 'e', 00H, '_', 00H, 'r', 00H, 'x', 00H, 'd', 00H, '\', 00H
	DB	's', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 's'
	DB	00H, '\', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 'i', 00H, 'n', 00H
	DB	'e', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '.', 00H, 'h', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@
CONST	SEGMENT
??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@ DB 'x:\github\re'
	DB	'negade\dragonade_rxd\scripts\engine_vector.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7ThreadClass@@6B@
CONST	SEGMENT
??_7ThreadClass@@6B@ DD FLAT:??_R4ThreadClass@@6B@	; ThreadClass::`vftable'
	DD	FLAT:??_EThreadClass@@UAEPAXI@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ScriptFactory@@6B@
CONST	SEGMENT
??_7ScriptFactory@@6B@ DD FLAT:??_R4ScriptFactory@@6B@	; ScriptFactory::`vftable'
	DD	FLAT:??_EScriptFactory@@UAEPAXI@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ScriptImpClass@@6B@
CONST	SEGMENT
??_7ScriptImpClass@@6B@ DD FLAT:??_R4ScriptImpClass@@6B@ ; ScriptImpClass::`vftable'
	DD	FLAT:??_EScriptImpClass@@UAEPAXI@Z
	DD	FLAT:?Get_Name@ScriptImpClass@@UAEPBDXZ
	DD	FLAT:?Attach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
	DD	FLAT:?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
	DD	FLAT:?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
	DD	FLAT:?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
	DD	FLAT:?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
	DD	FLAT:?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
	DD	FLAT:?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
	DD	FLAT:?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
	DD	FLAT:?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
	DD	FLAT:?Set_Parameters_String@ScriptImpClass@@UAEXPBD@Z
	DD	FLAT:?Get_Parameters_String@ScriptImpClass@@UAEXPADI@Z
	DD	FLAT:?Save@ScriptImpClass@@MAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load@ScriptImpClass@@MAEXAAVScriptLoader@@@Z
	DD	FLAT:?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
	DD	FLAT:?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
	DD	FLAT:?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7ScriptClass@@6B@
CONST	SEGMENT
??_7ScriptClass@@6B@ DD FLAT:??_R4ScriptClass@@6B@	; ScriptClass::`vftable'
	DD	FLAT:??_EScriptClass@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?Owner@GameObjObserverClass@@UAEPAVScriptableGameObj@@XZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7GameObjObserverClass@@6B@
CONST	SEGMENT
??_7GameObjObserverClass@@6B@ DD FLAT:??_R4GameObjObserverClass@@6B@ ; GameObjObserverClass::`vftable'
	DD	FLAT:??_EGameObjObserverClass@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?Owner@GameObjObserverClass@@UAEPAVScriptableGameObj@@XZ
CONST	ENDS
CRT$XCU	SEGMENT
_RA_Repair_Script_Registrant$initializer$ DD FLAT:??__ERA_Repair_Script_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Infantry_Spy_Registrant$initializer$ DD FLAT:??__ERA_Infantry_Spy_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Infantry_NotSpy_Registrant$initializer$ DD FLAT:??__ERA_Infantry_NotSpy_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Helipad_Zone_Registrant$initializer$ DD FLAT:??__ERA_Helipad_Zone_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_MineLayer_Registrant$initializer$ DD FLAT:??__ERA_MineLayer_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Mine_Registrant$initializer$ DD FLAT:??__ERA_Mine_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Mine_Manager_Registrant$initializer$ DD FLAT:??__ERA_Mine_Manager_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_ObjectDeath_OnCreate_Registrant$initializer$ DD FLAT:??__ERA_ObjectDeath_OnCreate_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Naval_Yard_Registrant$initializer$ DD FLAT:??__ERA_Naval_Yard_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Naval_PT_Pokable_Registrant$initializer$ DD FLAT:??__ERA_Naval_PT_Pokable_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Naval_Unit_Registrant$initializer$ DD FLAT:??__ERA_Naval_Unit_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Naval_Zone_Registrant$initializer$ DD FLAT:??__ERA_Naval_Zone_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Damaged_Credits_Registrant$initializer$ DD FLAT:??__ERA_Damaged_Credits_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_GameStart_Detector_Registrant$initializer$ DD FLAT:??__ERA_GameStart_Detector_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_DriverDeath_Registrant$initializer$ DD FLAT:??__ERA_DriverDeath_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Conyard_Repair_Registrant$initializer$ DD FLAT:??__ERA_Conyard_Repair_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_ObjectDeath_OnDeath_Registrant$initializer$ DD FLAT:??__ERA_ObjectDeath_OnDeath_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Demolition_Truck_Improved_Registrant$initializer$ DD FLAT:??__ERA_Demolition_Truck_Improved_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_CTF_Zone_Registrant$initializer$ DD FLAT:??__ERA_CTF_Zone_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_MAD_Tank_Improved_Registrant$initializer$ DD FLAT:??__ERA_MAD_Tank_Improved_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Conyard_Controller_Improved_Registrant$initializer$ DD FLAT:??__ERA_Conyard_Controller_Improved_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Conyard_Controller_Improved_2_Registrant$initializer$ DD FLAT:??__ERA_Conyard_Controller_Improved_2_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Building_DeathSound_Registrant$initializer$ DD FLAT:??__ERA_Building_DeathSound_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Base_Defense_Simple_Registrant$initializer$ DD FLAT:??__ERA_Base_Defense_Simple_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Base_Defense_Powered_Registrant$initializer$ DD FLAT:??__ERA_Base_Defense_Powered_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Base_Defense_Chargeup_Registrant$initializer$ DD FLAT:??__ERA_Base_Defense_Chargeup_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Vehicle_Regen_Registrant$initializer$ DD FLAT:??__ERA_Vehicle_Regen_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Thief_Registrant$initializer$ DD FLAT:??__ERA_Thief_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Thief_Improved_Registrant$initializer$ DD FLAT:??__ERA_Thief_Improved_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Credit_Theft_Zone_Registrant$initializer$ DD FLAT:??__ERA_Credit_Theft_Zone_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Credit_Theft_Zone_Timer_Registrant$initializer$ DD FLAT:??__ERA_Credit_Theft_Zone_Timer_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_DestroyNearest_OnDeath_Registrant$initializer$ DD FLAT:??__ERA_DestroyNearest_OnDeath_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Ore_Truck_Registrant$initializer$ DD FLAT:??__ERA_Ore_Truck_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Ore_Truck_2_Registrant$initializer$ DD FLAT:??__ERA_Ore_Truck_2_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Ore_Field_Registrant$initializer$ DD FLAT:??__ERA_Ore_Field_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Ore_Delivery_Zone_Registrant$initializer$ DD FLAT:??__ERA_Ore_Delivery_Zone_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Vehicle_Team_Set_Registrant$initializer$ DD FLAT:??__ERA_Vehicle_Team_Set_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Vehicle_Team_Timer_Registrant$initializer$ DD FLAT:??__ERA_Vehicle_Team_Timer_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Visible_Driver_Registrant$initializer$ DD FLAT:??__ERA_Visible_Driver_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Vision_Control_Registrant$initializer$ DD FLAT:??__ERA_Vision_Control_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Vision_Control_2_Registrant$initializer$ DD FLAT:??__ERA_Vision_Control_2_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Fog_Level_Settings_Registrant$initializer$ DD FLAT:??__ERA_Fog_Level_Settings_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Missile_Beacon_Registrant$initializer$ DD FLAT:??__ERA_Missile_Beacon_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Superweapon_Beacon_Registrant$initializer$ DD FLAT:??__ERA_Superweapon_Beacon_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Beacon_Terminal_Registrant$initializer$ DD FLAT:??__ERA_Beacon_Terminal_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Beacon_Terminal_2_Registrant$initializer$ DD FLAT:??__ERA_Beacon_Terminal_2_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Beacon_Timer_Registrant$initializer$ DD FLAT:??__ERA_Beacon_Timer_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Missile_Control_Registrant$initializer$ DD FLAT:??__ERA_Missile_Control_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Missile_Controller_Registrant$initializer$ DD FLAT:??__ERA_Missile_Controller_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_Demolition_Truck_Retarded_Registrant$initializer$ DD FLAT:??__ERA_Demolition_Truck_Retarded_Registrant@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_RA_MAD_Tank_Devolved_Registrant$initializer$ DD FLAT:??__ERA_MAD_Tank_Devolved_Registrant@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\datasafe.h
;	COMDAT ??B?$RefArray@V?$RefArray@D$03@@$07@@QAEPAV?$RefArray@D$03@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$RefArray@V?$RefArray@D$03@@$07@@QAEPAV?$RefArray@D$03@@XZ PROC ; RefArray<RefArray<char,4>,8>::operator RefArray<char,4> *, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 45   : 		return (T*) this;

	mov	eax, DWORD PTR _this$[ebp]

; 46   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$RefArray@V?$RefArray@D$03@@$07@@QAEPAV?$RefArray@D$03@@XZ ENDP ; RefArray<RefArray<char,4>,8>::operator RefArray<char,4> *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\datasafe.h
;	COMDAT ??B?$RefArray@D$03@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$RefArray@D$03@@QAEPADXZ PROC			; RefArray<char,4>::operator char *, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 45   : 		return (T*) this;

	mov	eax, DWORD PTR _this$[ebp]

; 46   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$RefArray@D$03@@QAEPADXZ ENDP			; RefArray<char,4>::operator char *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__Finstancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@YAXXZ
text$yd	SEGMENT
??__Finstancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@YAXXZ PROC ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::`dynamic atexit destructor for 'instancex'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?instancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@4V3@A ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::instancex
	call	??1?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ ; ObjectPoolClass<GenericSLNode,256>::~ObjectPoolClass<GenericSLNode,256>
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__Finstancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@YAXXZ ENDP ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::`dynamic atexit destructor for 'instancex''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?writeDummyPattern@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@K@Z
_TEXT	SEGMENT
_endDword$ = -12					; size = 4
_dword$ = -8						; size = 4
_this$ = -4						; size = 4
_object$ = 8						; size = 4
_pattern$ = 12						; size = 4
?writeDummyPattern@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@K@Z PROC ; ObjectPoolClass<GenericSLNode,256>::writeDummyPattern, COMDAT
; _this$ = ecx

; 1445 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1446 : #ifdef DEBUG
; 1447 : 		static_assert(sizeof(T) % 4 == 0, "Expected type size to be a multiple of 4.");
; 1448 : 		DWORD* dword = (DWORD*)&object;

	mov	eax, DWORD PTR _object$[ebp]
	mov	DWORD PTR _dword$[ebp], eax

; 1449 : 		DWORD* endDword = (DWORD*)(&object+1);

	mov	eax, DWORD PTR _object$[ebp]
	add	eax, 8
	mov	DWORD PTR _endDword$[ebp], eax

; 1450 : 		for (; dword < endDword; ++dword)

	jmp	SHORT $LN3@writeDummy
$LN2@writeDummy:
	mov	eax, DWORD PTR _dword$[ebp]
	add	eax, 4
	mov	DWORD PTR _dword$[ebp], eax
$LN3@writeDummy:
	mov	eax, DWORD PTR _dword$[ebp]
	cmp	eax, DWORD PTR _endDword$[ebp]
	jae	SHORT $LN4@writeDummy

; 1451 : 			*dword = pattern;

	mov	eax, DWORD PTR _dword$[ebp]
	mov	ecx, DWORD PTR _pattern$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN2@writeDummy
$LN4@writeDummy:

; 1452 : #endif
; 1453 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?writeDummyPattern@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@K@Z ENDP ; ObjectPoolClass<GenericSLNode,256>::writeDummyPattern
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?Free_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@@Z
_TEXT	SEGMENT
_lock$ = -8						; size = 4
_this$ = -4						; size = 4
_object$ = 8						; size = 4
?Free_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@@Z PROC ; ObjectPoolClass<GenericSLNode,256>::Free_Object_Memory, COMDAT
; _this$ = ecx

; 1436 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1437 : 		FastCriticalSectionClass::LockClass lock(ObjectPoolCS);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0LockClass@FastCriticalSectionClass@@QAE@AAV1@@Z ; FastCriticalSectionClass::LockClass::LockClass

; 1438 : 		writeDummyPattern(object, 0xEDE7E10D);

	push	-303570675				; ede7e10dH
	mov	eax, DWORD PTR _object$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeDummyPattern@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@K@Z ; ObjectPoolClass<GenericSLNode,256>::writeDummyPattern

; 1439 : 		(T*&)object = FreeListHead;

	mov	eax, DWORD PTR _object$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 1440 : 		FreeListHead = &object;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _object$[ebp]
	mov	DWORD PTR [eax], ecx

; 1441 : 		FreeObjectCount++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1442 : 	}

	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1LockClass@FastCriticalSectionClass@@QAE@XZ ; FastCriticalSectionClass::LockClass::~LockClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Free_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@@Z ENDP ; ObjectPoolClass<GenericSLNode,256>::Free_Object_Memory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?Allocate_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEPAVGenericSLNode@@XZ
_TEXT	SEGMENT
tv82 = -96						; size = 4
$T1 = -92						; size = 4
$T2 = -88						; size = 4
_object$ = -20						; size = 4
_i$3 = -16						; size = 4
_newBlockListHead$4 = -12				; size = 4
_lock$ = -8						; size = 4
_this$ = -4						; size = 4
?Allocate_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEPAVGenericSLNode@@XZ PROC ; ObjectPoolClass<GenericSLNode,256>::Allocate_Object_Memory, COMDAT
; _this$ = ecx

; 1413 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1414 : 		FastCriticalSectionClass::LockClass lock(ObjectPoolCS);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0LockClass@FastCriticalSectionClass@@QAE@AAV1@@Z ; FastCriticalSectionClass::LockClass::LockClass

; 1415 :  		if (!FreeListHead)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	$LN4@Allocate_O

; 1416 : 		{
; 1417 : 			void* newBlockListHead = (void*)((void*)new char[sizeof(void*) + sizeof(T[BLOCK_SIZE])]);

	push	OFFSET ??_C@_0EB@IOGKEECK@ObjectPoolClass?$DMclass?5GenericSLN@
	push	1417					; 00000589H
	push	OFFSET ??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN8@Allocate_O
	xor	ecx, ecx
	jne	SHORT $LN7@Allocate_O
	push	1417					; 00000589H
	push	OFFSET ??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN7@Allocate_O:
	mov	DWORD PTR tv82[ebp], 0
	jmp	SHORT $LN9@Allocate_O
$LN8@Allocate_O:
	push	2052					; 00000804H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv82[ebp], eax
$LN9@Allocate_O:
	mov	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR _newBlockListHead$4[ebp], ecx

; 1418 : 			*(void**)newBlockListHead = BlockListHead;

	mov	eax, DWORD PTR _newBlockListHead$4[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 1419 : 			BlockListHead = newBlockListHead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newBlockListHead$4[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1420 : 			FreeListHead = (T*)((intptr_t)BlockListHead + sizeof(void*));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx

; 1421 : 			for (int i = 0; i < BLOCK_SIZE; i++)

	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN3@Allocate_O
$LN2@Allocate_O:
	mov	eax, DWORD PTR _i$3[ebp]
	add	eax, 1
	mov	DWORD PTR _i$3[ebp], eax
$LN3@Allocate_O:
	cmp	DWORD PTR _i$3[ebp], 256		; 00000100H
	jge	SHORT $LN1@Allocate_O

; 1422 : 				(T*&)FreeListHead[i] = &FreeListHead[i+1];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _i$3[ebp]
	lea	eax, DWORD PTR [ecx+edx*8+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _i$3[ebp]
	mov	DWORD PTR [edx+ecx*8], eax
	jmp	SHORT $LN2@Allocate_O
$LN1@Allocate_O:

; 1423 : 			
; 1424 : 			(T*&)FreeListHead[BLOCK_SIZE-1] = NULL;

	mov	eax, 8
	imul	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx], 0

; 1425 : 			FreeObjectCount += BLOCK_SIZE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1426 : 			TotalObjectCount += BLOCK_SIZE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
$LN4@Allocate_O:

; 1427 : 		}
; 1428 : 
; 1429 : 		T* object = FreeListHead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _object$[ebp], ecx

; 1430 : 		FreeListHead = *(T**)(FreeListHead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 1431 : 		FreeObjectCount--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1432 : 		return object;

	mov	eax, DWORD PTR _object$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1LockClass@FastCriticalSectionClass@@QAE@XZ ; FastCriticalSectionClass::LockClass::~LockClass
	mov	eax, DWORD PTR $T2[ebp]

; 1433 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Allocate_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEPAVGenericSLNode@@XZ ENDP ; ObjectPoolClass<GenericSLNode,256>::Allocate_Object_Memory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ??1?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ
_TEXT	SEGMENT
$T1 = -336						; size = 4
_nextBlock$2 = -268					; size = 4
_block$ = -264						; size = 4
_buffer$3 = -260					; size = 256
_this$ = -4						; size = 4
??1?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ PROC ; ObjectPoolClass<GenericSLNode,256>::~ObjectPoolClass<GenericSLNode,256>, COMDAT
; _this$ = ecx

; 1393 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1394 : 		// If you hit the following assert, one or more objects were not freed.
; 1395 : 		if (FreeObjectCount != TotalObjectCount)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+12]
	je	SHORT $LN3@ObjectPool

; 1396 : 		{
; 1397 : 			char buffer[256];
; 1398 : 			sprintf(buffer, "%d memory leaks found in " __FUNCTION__ "\n", TotalObjectCount - FreeObjectCount);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+8]
	push	edx
	push	OFFSET ??_C@_0FF@NOANHENP@?$CFd?5memory?5leaks?5found?5in?5ObjectP@
	lea	eax, DWORD PTR _buffer$3[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH

; 1399 : 			OutputDebugStringA(buffer);

	lea	eax, DWORD PTR _buffer$3[ebp]
	push	eax
	call	DWORD PTR __imp__OutputDebugStringA@4
$LN3@ObjectPool:

; 1400 : 			// TODO: There are quite a few mem leaks of this kind. Fix them.
; 1401 : 		}
; 1402 : 
; 1403 : 		void* block = BlockListHead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _block$[ebp], ecx
$LN2@ObjectPool:

; 1404 :  		while (block)

	cmp	DWORD PTR _block$[ebp], 0
	je	SHORT $LN4@ObjectPool

; 1405 : 		{
; 1406 : 			void* nextBlock = *(void**)block;

	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _nextBlock$2[ebp], ecx

; 1407 : 			delete[] block;

	push	OFFSET ??_C@_0DL@BOENBDGI@ObjectPoolClass?$DMclass?5GenericSLN@
	push	1407					; 0000057fH
	push	OFFSET ??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN7@ObjectPool
	xor	ecx, ecx
	jne	SHORT $LN6@ObjectPool
	push	1407					; 0000057fH
	push	OFFSET ??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN6@ObjectPool:
	jmp	SHORT $LN8@ObjectPool
$LN7@ObjectPool:
	mov	eax, DWORD PTR _block$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN8@ObjectPool:

; 1408 : 			block = nextBlock;

	mov	eax, DWORD PTR _nextBlock$2[ebp]
	mov	DWORD PTR _block$[ebp], eax

; 1409 : 		}

	jmp	SHORT $LN2@ObjectPool
$LN4@ObjectPool:

; 1410 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ ENDP ; ObjectPoolClass<GenericSLNode,256>::~ObjectPoolClass<GenericSLNode,256>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ??0?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ PROC ; ObjectPoolClass<GenericSLNode,256>::ObjectPoolClass<GenericSLNode,256>, COMDAT
; _this$ = ecx

; 1384 : 	ObjectPoolClass()

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0FastCriticalSectionClass@@QAE@XZ	; FastCriticalSectionClass::FastCriticalSectionClass
	mov	eax, DWORD PTR [eax]

; 1385 : 	{
; 1386 : 		FreeListHead = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 1387 : 		BlockListHead = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1388 : 		FreeObjectCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 1389 : 		TotalObjectCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 1390 : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ ENDP ; ObjectPoolClass<GenericSLNode,256>::ObjectPoolClass<GenericSLNode,256>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\singleton.h
;	COMDAT ?getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ
_TEXT	SEGMENT
?getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ PROC ; Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance, COMDAT

; 59   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 60   : 		static T instancex;

	mov	eax, DWORD PTR ??_B?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@51
	and	eax, 1
	jne	SHORT $LN1@getInstanc
	mov	eax, DWORD PTR ??_B?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@51
	or	eax, 1
	mov	DWORD PTR ??_B?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@51, eax
	mov	ecx, OFFSET ?instancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@4V3@A ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::instancex
	call	??0?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAE@XZ ; ObjectPoolClass<GenericSLNode,256>::ObjectPoolClass<GenericSLNode,256>
	push	OFFSET ??__Finstancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@YAXXZ ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::`dynamic atexit destructor for 'instancex''
	call	_atexit
	add	esp, 4
$LN1@getInstanc:

; 61   : 		return instancex;

	mov	eax, OFFSET ?instancex@?1??getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ@4V3@A ; `Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance'::`2'::instancex

; 62   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ ENDP ; Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z PROC ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>, COMDAT
; _this$ = ecx

; 69   : 	SLNode(T *obj) : GenericSLNode(obj) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0GenericSLNode@@IAE@PAX@Z		; GenericSLNode::GenericSLNode
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ENDP ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ PROC ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data, COMDAT
; _this$ = ecx

; 65   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 66   : 		return (T*)NodeData;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 67   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ENDP ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ PROC ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next, COMDAT
; _this$ = ecx

; 61   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 62   : 		return (SLNode<T>*)NodeNext;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 63   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ENDP ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_n$ = 8							; size = 4
?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z PROC ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next, COMDAT
; _this$ = ecx

; 57   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 58   : 		NodeNext = n;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax], ecx

; 59   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ENDP ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_MAD_Tank_Devolved_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_MAD_Tank_Devolved_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_MAD_Tank_Devolved_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_MAD_Tank_Devolved_Registrant@@3V?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@A ; RA_MAD_Tank_Devolved_Registrant
	call	??1?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_MAD_Tank_Devolved_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_MAD_Tank_Devolved_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_MAD_Tank_Devolved_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_MAD_Tank_Devolved_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_MAD_Tank_Devolved_Registrant'', COMDAT

; 4038 : ScriptRegistrant<RA_MAD_Tank_Devolved> RA_MAD_Tank_Devolved_Registrant("RA_MAD_Tank_Devolved", "Attach_Model=pistons:string,Deployed_Animation=V_SO_MADTANK.ANIM_MADTANK:string,Sonic_Preset=Sonic_Box:string,EnemyPercentage=0.34:float,FriendPercentage=0.17:float,ForceFF=1:int,Warhead=Sonic:string,DamageRadius=250.0:float,Announcement=MAD_Tank_Deployed:string,Bone=ROOTTRANSFORM:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BCB@FLGFMEHB@Attach_Model?$DNpistons?3string?0Depl@
	push	OFFSET ??_C@_0BF@DMNHGAJK@RA_MAD_Tank_Devolved?$AA@
	mov	ecx, OFFSET ?RA_MAD_Tank_Devolved_Registrant@@3V?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@A ; RA_MAD_Tank_Devolved_Registrant
	call	??0?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_MAD_Tank_Devolved>::ScriptRegistrant<RA_MAD_Tank_Devolved>
	push	OFFSET ??__FRA_MAD_Tank_Devolved_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_MAD_Tank_Devolved_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_MAD_Tank_Devolved_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_MAD_Tank_Devolved_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_MAD_Tank_Devolved>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_MAD_Tank_Devolved>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@UAE@XZ PROC ; ScriptRegistrant<RA_MAD_Tank_Devolved>::~ScriptRegistrant<RA_MAD_Tank_Devolved>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_MAD_Tank_Devolved>::~ScriptRegistrant<RA_MAD_Tank_Devolved>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_MAD_Tank_Devolved>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DF@OGDKEDLJ@ScriptRegistrant?$DMclass?5RA_MAD_Ta@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_MAD_Tank_Devolved@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_MAD_Tank_Devolved>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_MAD_Tank_Devolved>::ScriptRegistrant<RA_MAD_Tank_Devolved>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_MAD_Tank_Devolved@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_MAD_Tank_Devolved>::ScriptRegistrant<RA_MAD_Tank_Devolved>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Demolition_Truck_Retarded_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Demolition_Truck_Retarded_Registrant@@YAXXZ PROC ; `dynamic atexit destructor for 'RA_Demolition_Truck_Retarded_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Demolition_Truck_Retarded_Registrant@@3V?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@A ; RA_Demolition_Truck_Retarded_Registrant
	call	??1?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Demolition_Truck_Retarded_Registrant@@YAXXZ ENDP ; `dynamic atexit destructor for 'RA_Demolition_Truck_Retarded_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Demolition_Truck_Retarded_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Demolition_Truck_Retarded_Registrant@@YAXXZ PROC ; `dynamic initializer for 'RA_Demolition_Truck_Retarded_Registrant'', COMDAT

; 4037 : ScriptRegistrant<RA_Demolition_Truck_Retarded> RA_Demolition_Truck_Retarded_Registrant("RA_Demolition_Truck_Retarded", "Explosion=Explosion_Invis_Nuke:string,Warhead=Nuke:string,DamageStrength=480.0:float,DamageRadius=120.0:float");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0GO@KODEMHGD@Explosion?$DNExplosion_Invis_Nuke?3s@
	push	OFFSET ??_C@_0BN@OOBBAPPJ@RA_Demolition_Truck_Retarded?$AA@
	mov	ecx, OFFSET ?RA_Demolition_Truck_Retarded_Registrant@@3V?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@A ; RA_Demolition_Truck_Retarded_Registrant
	call	??0?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::ScriptRegistrant<RA_Demolition_Truck_Retarded>
	push	OFFSET ??__FRA_Demolition_Truck_Retarded_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Demolition_Truck_Retarded_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Demolition_Truck_Retarded_Registrant@@YAXXZ ENDP ; `dynamic initializer for 'RA_Demolition_Truck_Retarded_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::~ScriptRegistrant<RA_Demolition_Truck_Retarded>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::~ScriptRegistrant<RA_Demolition_Truck_Retarded>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DN@NCAOAPCC@ScriptRegistrant?$DMclass?5RA_Demoli@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Demolition_Truck_Retarded@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::ScriptRegistrant<RA_Demolition_Truck_Retarded>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Demolition_Truck_Retarded@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Demolition_Truck_Retarded>::ScriptRegistrant<RA_Demolition_Truck_Retarded>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Missile_Controller_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Missile_Controller_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_Missile_Controller_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Missile_Controller_Registrant@@3V?$ScriptRegistrant@VRA_Missile_Controller@@@@A ; RA_Missile_Controller_Registrant
	call	??1?$ScriptRegistrant@VRA_Missile_Controller@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Missile_Controller_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_Missile_Controller_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Missile_Controller_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Missile_Controller_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_Missile_Controller_Registrant'', COMDAT

; 4036 : ScriptRegistrant<RA_Missile_Controller> RA_Missile_Controller_Registrant("RA_Missile_Controller","SiloPresetName:string,TerminalPresetName:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0DA@KHMJHJGK@SiloPresetName?3string?0TerminalPr@
	push	OFFSET ??_C@_0BG@JMBGNMOA@RA_Missile_Controller?$AA@
	mov	ecx, OFFSET ?RA_Missile_Controller_Registrant@@3V?$ScriptRegistrant@VRA_Missile_Controller@@@@A ; RA_Missile_Controller_Registrant
	call	??0?$ScriptRegistrant@VRA_Missile_Controller@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Missile_Controller>::ScriptRegistrant<RA_Missile_Controller>
	push	OFFSET ??__FRA_Missile_Controller_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Missile_Controller_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Missile_Controller_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_Missile_Controller_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Missile_Controller@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Missile_Controller@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Missile_Controller>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Missile_Controller@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Missile_Controller@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Missile_Controller>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Missile_Controller@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Missile_Controller@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Missile_Controller>::~ScriptRegistrant<RA_Missile_Controller>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Missile_Controller@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Missile_Controller>::~ScriptRegistrant<RA_Missile_Controller>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Missile_Controller@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Missile_Controller@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Missile_Controller>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DG@BJICAEGO@ScriptRegistrant?$DMclass?5RA_Missil@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Missile_Controller@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Missile_Controller@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Missile_Controller>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Missile_Controller@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Missile_Controller@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Missile_Controller>::ScriptRegistrant<RA_Missile_Controller>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Missile_Controller@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Missile_Controller@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Missile_Controller>::ScriptRegistrant<RA_Missile_Controller>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Missile_Control_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Missile_Control_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Missile_Control_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Missile_Control_Registrant@@3V?$ScriptRegistrant@VRA_Missile_Control@@@@A ; RA_Missile_Control_Registrant
	call	??1?$ScriptRegistrant@VRA_Missile_Control@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Missile_Control_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Missile_Control_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Missile_Control_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Missile_Control_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Missile_Control_Registrant'', COMDAT

; 4035 : ScriptRegistrant<RA_Missile_Control> RA_Missile_Control_Registrant("RA_Missile_Control","AnimationName:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BF@CJIFCPNA@AnimationName?3string?$AA@
	push	OFFSET ??_C@_0BD@IOKOIMBG@RA_Missile_Control?$AA@
	mov	ecx, OFFSET ?RA_Missile_Control_Registrant@@3V?$ScriptRegistrant@VRA_Missile_Control@@@@A ; RA_Missile_Control_Registrant
	call	??0?$ScriptRegistrant@VRA_Missile_Control@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Missile_Control>::ScriptRegistrant<RA_Missile_Control>
	push	OFFSET ??__FRA_Missile_Control_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Missile_Control_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Missile_Control_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Missile_Control_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Missile_Control@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Missile_Control@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Missile_Control>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Missile_Control@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Missile_Control@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Missile_Control>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Missile_Control@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Missile_Control@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Missile_Control>::~ScriptRegistrant<RA_Missile_Control>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Missile_Control@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Missile_Control>::~ScriptRegistrant<RA_Missile_Control>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Missile_Control@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Missile_Control@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Missile_Control>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DD@HHNIJMOD@ScriptRegistrant?$DMclass?5RA_Missil@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Missile_Control@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Missile_Control@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Missile_Control>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Missile_Control@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Missile_Control@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Missile_Control>::ScriptRegistrant<RA_Missile_Control>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Missile_Control@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Missile_Control@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Missile_Control>::ScriptRegistrant<RA_Missile_Control>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Beacon_Timer_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Beacon_Timer_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Beacon_Timer_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Beacon_Timer_Registrant@@3V?$ScriptRegistrant@VRA_Beacon_Timer@@@@A ; RA_Beacon_Timer_Registrant
	call	??1?$ScriptRegistrant@VRA_Beacon_Timer@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Beacon_Timer_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Beacon_Timer_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Beacon_Timer_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Beacon_Timer_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Beacon_Timer_Registrant'', COMDAT

; 4034 : ScriptRegistrant<RA_Beacon_Timer> RA_Beacon_Timer_Registrant("RA_Beacon_Timer", "");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BA@JCMKEIDO@RA_Beacon_Timer?$AA@
	mov	ecx, OFFSET ?RA_Beacon_Timer_Registrant@@3V?$ScriptRegistrant@VRA_Beacon_Timer@@@@A ; RA_Beacon_Timer_Registrant
	call	??0?$ScriptRegistrant@VRA_Beacon_Timer@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Beacon_Timer>::ScriptRegistrant<RA_Beacon_Timer>
	push	OFFSET ??__FRA_Beacon_Timer_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Beacon_Timer_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Beacon_Timer_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Beacon_Timer_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Beacon_Timer@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Beacon_Timer@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Beacon_Timer>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Beacon_Timer@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Beacon_Timer@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Beacon_Timer>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Beacon_Timer@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Beacon_Timer@@@@UAE@XZ PROC	; ScriptRegistrant<RA_Beacon_Timer>::~ScriptRegistrant<RA_Beacon_Timer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Beacon_Timer@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_Beacon_Timer>::~ScriptRegistrant<RA_Beacon_Timer>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Beacon_Timer@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Beacon_Timer@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Beacon_Timer>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DA@GMKHJBLH@ScriptRegistrant?$DMclass?5RA_Beacon@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Beacon_Timer@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Beacon_Timer@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Beacon_Timer>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Beacon_Timer@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Beacon_Timer@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Beacon_Timer>::ScriptRegistrant<RA_Beacon_Timer>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Beacon_Timer@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Beacon_Timer@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Beacon_Timer>::ScriptRegistrant<RA_Beacon_Timer>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Beacon_Terminal_2_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Beacon_Terminal_2_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_Beacon_Terminal_2_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Beacon_Terminal_2_Registrant@@3V?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@A ; RA_Beacon_Terminal_2_Registrant
	call	??1?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Beacon_Terminal_2_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_Beacon_Terminal_2_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Beacon_Terminal_2_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Beacon_Terminal_2_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_Beacon_Terminal_2_Registrant'', COMDAT

; 4033 : ScriptRegistrant<RA_Beacon_Terminal_2> RA_Beacon_Terminal_2_Registrant("RA_Beacon_Terminal_2", "BeaconPowerup:string,BeaconReadySound:string,BeaconTakenSound:string,SiloDisableSound:string,OfflineCustom:string,OnlineCustom:string,Warhead:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0JF@BICBCKDG@BeaconPowerup?3string?0BeaconReady@
	push	OFFSET ??_C@_0BF@CNELHGAE@RA_Beacon_Terminal_2?$AA@
	mov	ecx, OFFSET ?RA_Beacon_Terminal_2_Registrant@@3V?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@A ; RA_Beacon_Terminal_2_Registrant
	call	??0?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Beacon_Terminal_2>::ScriptRegistrant<RA_Beacon_Terminal_2>
	push	OFFSET ??__FRA_Beacon_Terminal_2_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Beacon_Terminal_2_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Beacon_Terminal_2_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_Beacon_Terminal_2_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Beacon_Terminal_2>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Beacon_Terminal_2>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Beacon_Terminal_2>::~ScriptRegistrant<RA_Beacon_Terminal_2>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Beacon_Terminal_2>::~ScriptRegistrant<RA_Beacon_Terminal_2>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Beacon_Terminal_2>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DF@LOFLCPMP@ScriptRegistrant?$DMclass?5RA_Beacon@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Beacon_Terminal_2@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Beacon_Terminal_2>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Beacon_Terminal_2>::ScriptRegistrant<RA_Beacon_Terminal_2>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Beacon_Terminal_2@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Beacon_Terminal_2>::ScriptRegistrant<RA_Beacon_Terminal_2>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Beacon_Terminal_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Beacon_Terminal_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Beacon_Terminal_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Beacon_Terminal_Registrant@@3V?$ScriptRegistrant@VRA_Beacon_Terminal@@@@A ; RA_Beacon_Terminal_Registrant
	call	??1?$ScriptRegistrant@VRA_Beacon_Terminal@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Beacon_Terminal_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Beacon_Terminal_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Beacon_Terminal_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Beacon_Terminal_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Beacon_Terminal_Registrant'', COMDAT

; 4032 : ScriptRegistrant<RA_Beacon_Terminal> RA_Beacon_Terminal_Registrant("RA_Beacon_Terminal", "BeaconPowerup:string,BeaconReadySound:string,BeaconTakenSound:string,SiloDisableSound:string,SpyNotifySound:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0HD@BADKHFBM@BeaconPowerup?3string?0BeaconReady@
	push	OFFSET ??_C@_0BD@LBKPOLB@RA_Beacon_Terminal?$AA@
	mov	ecx, OFFSET ?RA_Beacon_Terminal_Registrant@@3V?$ScriptRegistrant@VRA_Beacon_Terminal@@@@A ; RA_Beacon_Terminal_Registrant
	call	??0?$ScriptRegistrant@VRA_Beacon_Terminal@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Beacon_Terminal>::ScriptRegistrant<RA_Beacon_Terminal>
	push	OFFSET ??__FRA_Beacon_Terminal_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Beacon_Terminal_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Beacon_Terminal_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Beacon_Terminal_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Beacon_Terminal@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Beacon_Terminal@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Beacon_Terminal>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Beacon_Terminal@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Beacon_Terminal@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Beacon_Terminal>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Beacon_Terminal@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Beacon_Terminal@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Beacon_Terminal>::~ScriptRegistrant<RA_Beacon_Terminal>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Beacon_Terminal@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Beacon_Terminal>::~ScriptRegistrant<RA_Beacon_Terminal>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Beacon_Terminal@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Beacon_Terminal@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Beacon_Terminal>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DD@IDCPALPD@ScriptRegistrant?$DMclass?5RA_Beacon@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Beacon_Terminal@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Beacon_Terminal@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Beacon_Terminal>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Beacon_Terminal@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Beacon_Terminal@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Beacon_Terminal>::ScriptRegistrant<RA_Beacon_Terminal>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Beacon_Terminal@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Beacon_Terminal@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Beacon_Terminal>::ScriptRegistrant<RA_Beacon_Terminal>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Superweapon_Beacon_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Superweapon_Beacon_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_Superweapon_Beacon_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Superweapon_Beacon_Registrant@@3V?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@A ; RA_Superweapon_Beacon_Registrant
	call	??1?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Superweapon_Beacon_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_Superweapon_Beacon_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Superweapon_Beacon_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Superweapon_Beacon_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_Superweapon_Beacon_Registrant'', COMDAT

; 4031 : ScriptRegistrant<RA_Superweapon_Beacon> RA_Superweapon_Beacon_Registrant("RA_Superweapon_Beacon", "SiloPresetName:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BG@IMIJHAEH@SiloPresetName?3string?$AA@
	push	OFFSET ??_C@_0BG@NGCENKPP@RA_Superweapon_Beacon?$AA@
	mov	ecx, OFFSET ?RA_Superweapon_Beacon_Registrant@@3V?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@A ; RA_Superweapon_Beacon_Registrant
	call	??0?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Superweapon_Beacon>::ScriptRegistrant<RA_Superweapon_Beacon>
	push	OFFSET ??__FRA_Superweapon_Beacon_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Superweapon_Beacon_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Superweapon_Beacon_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_Superweapon_Beacon_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Superweapon_Beacon>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Superweapon_Beacon>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Superweapon_Beacon>::~ScriptRegistrant<RA_Superweapon_Beacon>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Superweapon_Beacon>::~ScriptRegistrant<RA_Superweapon_Beacon>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Superweapon_Beacon>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DG@DNKLBNDI@ScriptRegistrant?$DMclass?5RA_Superw@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Superweapon_Beacon@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Superweapon_Beacon>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Superweapon_Beacon>::ScriptRegistrant<RA_Superweapon_Beacon>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Superweapon_Beacon@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Superweapon_Beacon>::ScriptRegistrant<RA_Superweapon_Beacon>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Missile_Beacon_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Missile_Beacon_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Missile_Beacon_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Missile_Beacon_Registrant@@3V?$ScriptRegistrant@VRA_Missile_Beacon@@@@A ; RA_Missile_Beacon_Registrant
	call	??1?$ScriptRegistrant@VRA_Missile_Beacon@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Missile_Beacon_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Missile_Beacon_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Missile_Beacon_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Missile_Beacon_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Missile_Beacon_Registrant'', COMDAT

; 4030 : ScriptRegistrant<RA_Missile_Beacon> RA_Missile_Beacon_Registrant("RA_Missile_Beacon", "SiloPresetName:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BG@IMIJHAEH@SiloPresetName?3string?$AA@
	push	OFFSET ??_C@_0BC@BBPABDKJ@RA_Missile_Beacon?$AA@
	mov	ecx, OFFSET ?RA_Missile_Beacon_Registrant@@3V?$ScriptRegistrant@VRA_Missile_Beacon@@@@A ; RA_Missile_Beacon_Registrant
	call	??0?$ScriptRegistrant@VRA_Missile_Beacon@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Missile_Beacon>::ScriptRegistrant<RA_Missile_Beacon>
	push	OFFSET ??__FRA_Missile_Beacon_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Missile_Beacon_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Missile_Beacon_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Missile_Beacon_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Missile_Beacon@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Missile_Beacon@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Missile_Beacon>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Missile_Beacon@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Missile_Beacon@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Missile_Beacon>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Missile_Beacon@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Missile_Beacon@@@@UAE@XZ PROC	; ScriptRegistrant<RA_Missile_Beacon>::~ScriptRegistrant<RA_Missile_Beacon>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Missile_Beacon@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_Missile_Beacon>::~ScriptRegistrant<RA_Missile_Beacon>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Missile_Beacon@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Missile_Beacon@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Missile_Beacon>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DC@KFIHPDDA@ScriptRegistrant?$DMclass?5RA_Missil@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Missile_Beacon@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Missile_Beacon@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Missile_Beacon>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Missile_Beacon@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Missile_Beacon@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Missile_Beacon>::ScriptRegistrant<RA_Missile_Beacon>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Missile_Beacon@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Missile_Beacon@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Missile_Beacon>::ScriptRegistrant<RA_Missile_Beacon>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Fog_Level_Settings_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Fog_Level_Settings_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_Fog_Level_Settings_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Fog_Level_Settings_Registrant@@3V?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@A ; RA_Fog_Level_Settings_Registrant
	call	??1?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Fog_Level_Settings_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_Fog_Level_Settings_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Fog_Level_Settings_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Fog_Level_Settings_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_Fog_Level_Settings_Registrant'', COMDAT

; 4029 : ScriptRegistrant<RA_Fog_Level_Settings> RA_Fog_Level_Settings_Registrant("RA_Fog_Level_Settings", "FogEnable=1:int,FogMin=200.0:float,FogMax=300.0:float");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0DG@KNDOJIGM@FogEnable?$DN1?3int?0FogMin?$DN200?40?3flo@
	push	OFFSET ??_C@_0BG@GOFBAMMF@RA_Fog_Level_Settings?$AA@
	mov	ecx, OFFSET ?RA_Fog_Level_Settings_Registrant@@3V?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@A ; RA_Fog_Level_Settings_Registrant
	call	??0?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Fog_Level_Settings>::ScriptRegistrant<RA_Fog_Level_Settings>
	push	OFFSET ??__FRA_Fog_Level_Settings_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Fog_Level_Settings_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Fog_Level_Settings_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_Fog_Level_Settings_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Fog_Level_Settings>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Fog_Level_Settings>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Fog_Level_Settings>::~ScriptRegistrant<RA_Fog_Level_Settings>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Fog_Level_Settings>::~ScriptRegistrant<RA_Fog_Level_Settings>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Fog_Level_Settings>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DG@OAPEGHL@ScriptRegistrant?$DMclass?5RA_Fog_Le@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Fog_Level_Settings@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Fog_Level_Settings>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Fog_Level_Settings>::ScriptRegistrant<RA_Fog_Level_Settings>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Fog_Level_Settings@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Fog_Level_Settings>::ScriptRegistrant<RA_Fog_Level_Settings>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Vision_Control_2_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Vision_Control_2_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Vision_Control_2_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Vision_Control_2_Registrant@@3V?$ScriptRegistrant@VRA_Vision_Control_2@@@@A ; RA_Vision_Control_2_Registrant
	call	??1?$ScriptRegistrant@VRA_Vision_Control_2@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Vision_Control_2_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Vision_Control_2_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Vision_Control_2_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Vision_Control_2_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Vision_Control_2_Registrant'', COMDAT

; 4028 : ScriptRegistrant<RA_Vision_Control_2> RA_Vision_Control_2_Registrant("RA_Vision_Control_2","FogController=RA_Game_Manager:string,InfantryFogStart=0:float,InfantryFogEnd=9:float,VehicleFogStart=0:float,VehicleFogEnd=9:float");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0ID@BNLLNEKL@FogController?$DNRA_Game_Manager?3st@
	push	OFFSET ??_C@_0BE@KFINOBCA@RA_Vision_Control_2?$AA@
	mov	ecx, OFFSET ?RA_Vision_Control_2_Registrant@@3V?$ScriptRegistrant@VRA_Vision_Control_2@@@@A ; RA_Vision_Control_2_Registrant
	call	??0?$ScriptRegistrant@VRA_Vision_Control_2@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Vision_Control_2>::ScriptRegistrant<RA_Vision_Control_2>
	push	OFFSET ??__FRA_Vision_Control_2_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Vision_Control_2_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Vision_Control_2_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Vision_Control_2_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Vision_Control_2@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Vision_Control_2@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Vision_Control_2>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Vision_Control_2@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Vision_Control_2@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Vision_Control_2>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Vision_Control_2@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Vision_Control_2@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Vision_Control_2>::~ScriptRegistrant<RA_Vision_Control_2>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Vision_Control_2@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Vision_Control_2>::~ScriptRegistrant<RA_Vision_Control_2>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Vision_Control_2@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Vision_Control_2@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Vision_Control_2>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DE@NONGCAFO@ScriptRegistrant?$DMclass?5RA_Vision@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Vision_Control_2@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Vision_Control_2@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Vision_Control_2>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Vision_Control_2@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Vision_Control_2@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Vision_Control_2>::ScriptRegistrant<RA_Vision_Control_2>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Vision_Control_2@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Vision_Control_2@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Vision_Control_2>::ScriptRegistrant<RA_Vision_Control_2>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Vision_Control_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Vision_Control_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Vision_Control_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Vision_Control_Registrant@@3V?$ScriptRegistrant@VRA_Vision_Control@@@@A ; RA_Vision_Control_Registrant
	call	??1?$ScriptRegistrant@VRA_Vision_Control@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Vision_Control_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Vision_Control_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Vision_Control_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Vision_Control_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Vision_Control_Registrant'', COMDAT

; 4027 : ScriptRegistrant<RA_Vision_Control> RA_Vision_Control_Registrant("RA_Vision_Control","FogController=RA_Game_Manager:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0CF@LECGGIMJ@FogController?$DNRA_Game_Manager?3st@
	push	OFFSET ??_C@_0BC@KHDMLJMG@RA_Vision_Control?$AA@
	mov	ecx, OFFSET ?RA_Vision_Control_Registrant@@3V?$ScriptRegistrant@VRA_Vision_Control@@@@A ; RA_Vision_Control_Registrant
	call	??0?$ScriptRegistrant@VRA_Vision_Control@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Vision_Control>::ScriptRegistrant<RA_Vision_Control>
	push	OFFSET ??__FRA_Vision_Control_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Vision_Control_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Vision_Control_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Vision_Control_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Vision_Control@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Vision_Control@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Vision_Control>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Vision_Control@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Vision_Control@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Vision_Control>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Vision_Control@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Vision_Control@@@@UAE@XZ PROC	; ScriptRegistrant<RA_Vision_Control>::~ScriptRegistrant<RA_Vision_Control>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Vision_Control@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_Vision_Control>::~ScriptRegistrant<RA_Vision_Control>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Vision_Control@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Vision_Control@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Vision_Control>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DC@NKPOEDJG@ScriptRegistrant?$DMclass?5RA_Vision@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Vision_Control@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Vision_Control@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Vision_Control>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Vision_Control@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Vision_Control@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Vision_Control>::ScriptRegistrant<RA_Vision_Control>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Vision_Control@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Vision_Control@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Vision_Control>::ScriptRegistrant<RA_Vision_Control>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Visible_Driver_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Visible_Driver_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Visible_Driver_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Visible_Driver_Registrant@@3V?$ScriptRegistrant@VRA_Visible_Driver@@@@A ; RA_Visible_Driver_Registrant
	call	??1?$ScriptRegistrant@VRA_Visible_Driver@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Visible_Driver_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Visible_Driver_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Visible_Driver_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Visible_Driver_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Visible_Driver_Registrant'', COMDAT

; 4026 : ScriptRegistrant<RA_Visible_Driver> RA_Visible_Driver_Registrant("RA_Visible_Driver","BoneName=seat0:string,Message=471174:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0CJ@BDGDBJII@BoneName?$DNseat0?3string?0Message?$DN47@
	push	OFFSET ??_C@_0BC@IPDMJLDP@RA_Visible_Driver?$AA@
	mov	ecx, OFFSET ?RA_Visible_Driver_Registrant@@3V?$ScriptRegistrant@VRA_Visible_Driver@@@@A ; RA_Visible_Driver_Registrant
	call	??0?$ScriptRegistrant@VRA_Visible_Driver@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Visible_Driver>::ScriptRegistrant<RA_Visible_Driver>
	push	OFFSET ??__FRA_Visible_Driver_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Visible_Driver_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Visible_Driver_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Visible_Driver_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Visible_Driver@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Visible_Driver@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Visible_Driver>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Visible_Driver@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Visible_Driver@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Visible_Driver>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Visible_Driver@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Visible_Driver@@@@UAE@XZ PROC	; ScriptRegistrant<RA_Visible_Driver>::~ScriptRegistrant<RA_Visible_Driver>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Visible_Driver@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_Visible_Driver>::~ScriptRegistrant<RA_Visible_Driver>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Visible_Driver@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Visible_Driver@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Visible_Driver>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DC@LAAHNECH@ScriptRegistrant?$DMclass?5RA_Visibl@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Visible_Driver@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Visible_Driver@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Visible_Driver>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Visible_Driver@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Visible_Driver@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Visible_Driver>::ScriptRegistrant<RA_Visible_Driver>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Visible_Driver@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Visible_Driver@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Visible_Driver>::ScriptRegistrant<RA_Visible_Driver>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Vehicle_Team_Timer_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Vehicle_Team_Timer_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_Vehicle_Team_Timer_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Vehicle_Team_Timer_Registrant@@3V?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@A ; RA_Vehicle_Team_Timer_Registrant
	call	??1?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Vehicle_Team_Timer_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_Vehicle_Team_Timer_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Vehicle_Team_Timer_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Vehicle_Team_Timer_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_Vehicle_Team_Timer_Registrant'', COMDAT

; 4025 : ScriptRegistrant<RA_Vehicle_Team_Timer> RA_Vehicle_Team_Timer_Registrant("RA_Vehicle_Team_Timer","");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BG@HCDDJCHI@RA_Vehicle_Team_Timer?$AA@
	mov	ecx, OFFSET ?RA_Vehicle_Team_Timer_Registrant@@3V?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@A ; RA_Vehicle_Team_Timer_Registrant
	call	??0?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Vehicle_Team_Timer>::ScriptRegistrant<RA_Vehicle_Team_Timer>
	push	OFFSET ??__FRA_Vehicle_Team_Timer_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Vehicle_Team_Timer_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Vehicle_Team_Timer_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_Vehicle_Team_Timer_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Vehicle_Team_Timer>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Vehicle_Team_Timer>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Vehicle_Team_Timer>::~ScriptRegistrant<RA_Vehicle_Team_Timer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Vehicle_Team_Timer>::~ScriptRegistrant<RA_Vehicle_Team_Timer>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Vehicle_Team_Timer>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DG@OFBDFIFO@ScriptRegistrant?$DMclass?5RA_Vehicl@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Vehicle_Team_Timer@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Vehicle_Team_Timer>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Vehicle_Team_Timer>::ScriptRegistrant<RA_Vehicle_Team_Timer>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Vehicle_Team_Timer@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Vehicle_Team_Timer>::ScriptRegistrant<RA_Vehicle_Team_Timer>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Vehicle_Team_Set_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Vehicle_Team_Set_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Vehicle_Team_Set_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Vehicle_Team_Set_Registrant@@3V?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@A ; RA_Vehicle_Team_Set_Registrant
	call	??1?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Vehicle_Team_Set_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Vehicle_Team_Set_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Vehicle_Team_Set_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Vehicle_Team_Set_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Vehicle_Team_Set_Registrant'', COMDAT

; 4024 : ScriptRegistrant<RA_Vehicle_Team_Set> RA_Vehicle_Team_Set_Registrant("RA_Vehicle_Team_Set","");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BE@KJDBMHAJ@RA_Vehicle_Team_Set?$AA@
	mov	ecx, OFFSET ?RA_Vehicle_Team_Set_Registrant@@3V?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@A ; RA_Vehicle_Team_Set_Registrant
	call	??0?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Vehicle_Team_Set>::ScriptRegistrant<RA_Vehicle_Team_Set>
	push	OFFSET ??__FRA_Vehicle_Team_Set_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Vehicle_Team_Set_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Vehicle_Team_Set_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Vehicle_Team_Set_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Vehicle_Team_Set>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Vehicle_Team_Set>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Vehicle_Team_Set>::~ScriptRegistrant<RA_Vehicle_Team_Set>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Vehicle_Team_Set>::~ScriptRegistrant<RA_Vehicle_Team_Set>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Vehicle_Team_Set>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DE@FPIKJKNI@ScriptRegistrant?$DMclass?5RA_Vehicl@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Vehicle_Team_Set@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Vehicle_Team_Set>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Vehicle_Team_Set>::ScriptRegistrant<RA_Vehicle_Team_Set>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Vehicle_Team_Set@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Vehicle_Team_Set>::ScriptRegistrant<RA_Vehicle_Team_Set>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Ore_Delivery_Zone_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Ore_Delivery_Zone_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_Ore_Delivery_Zone_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Ore_Delivery_Zone_Registrant@@3V?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@A ; RA_Ore_Delivery_Zone_Registrant
	call	??1?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Ore_Delivery_Zone_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_Ore_Delivery_Zone_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Ore_Delivery_Zone_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Ore_Delivery_Zone_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_Ore_Delivery_Zone_Registrant'', COMDAT

; 4023 : ScriptRegistrant<RA_Ore_Delivery_Zone> RA_Ore_Delivery_Zone_Registrant("RA_Ore_Delivery_Zone", "Team=0:int,Enter=321654");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BI@MOLJAJBM@Team?$DN0?3int?0Enter?$DN321654?$AA@
	push	OFFSET ??_C@_0BF@EMNABKEN@RA_Ore_Delivery_Zone?$AA@
	mov	ecx, OFFSET ?RA_Ore_Delivery_Zone_Registrant@@3V?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@A ; RA_Ore_Delivery_Zone_Registrant
	call	??0?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Ore_Delivery_Zone>::ScriptRegistrant<RA_Ore_Delivery_Zone>
	push	OFFSET ??__FRA_Ore_Delivery_Zone_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Ore_Delivery_Zone_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Ore_Delivery_Zone_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_Ore_Delivery_Zone_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Ore_Delivery_Zone>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Ore_Delivery_Zone>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Ore_Delivery_Zone>::~ScriptRegistrant<RA_Ore_Delivery_Zone>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Ore_Delivery_Zone>::~ScriptRegistrant<RA_Ore_Delivery_Zone>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Ore_Delivery_Zone>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DF@GFEJNBFO@ScriptRegistrant?$DMclass?5RA_Ore_De@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Ore_Delivery_Zone@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Ore_Delivery_Zone>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Ore_Delivery_Zone>::ScriptRegistrant<RA_Ore_Delivery_Zone>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Ore_Delivery_Zone@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Ore_Delivery_Zone>::ScriptRegistrant<RA_Ore_Delivery_Zone>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Ore_Field_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Ore_Field_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Ore_Field_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Ore_Field_Registrant@@3V?$ScriptRegistrant@VRA_Ore_Field@@@@A ; RA_Ore_Field_Registrant
	call	??1?$ScriptRegistrant@VRA_Ore_Field@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Ore_Field_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Ore_Field_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Ore_Field_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Ore_Field_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Ore_Field_Registrant'', COMDAT

; 4022 : ScriptRegistrant<RA_Ore_Field> RA_Ore_Field_Registrant("RA_Ore_Field", "Field_Value=700:int,Enter=456654:int,Exit=75321:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0DE@MOLFFHGO@Field_Value?$DN700?3int?0Enter?$DN456654@
	push	OFFSET ??_C@_0N@CECIAOFO@RA_Ore_Field?$AA@
	mov	ecx, OFFSET ?RA_Ore_Field_Registrant@@3V?$ScriptRegistrant@VRA_Ore_Field@@@@A ; RA_Ore_Field_Registrant
	call	??0?$ScriptRegistrant@VRA_Ore_Field@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Ore_Field>::ScriptRegistrant<RA_Ore_Field>
	push	OFFSET ??__FRA_Ore_Field_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Ore_Field_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Ore_Field_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Ore_Field_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Ore_Field@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Ore_Field@@@@UAEPAXI@Z PROC	; ScriptRegistrant<RA_Ore_Field>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Ore_Field@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Ore_Field@@@@UAEPAXI@Z ENDP	; ScriptRegistrant<RA_Ore_Field>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Ore_Field@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Ore_Field@@@@UAE@XZ PROC	; ScriptRegistrant<RA_Ore_Field>::~ScriptRegistrant<RA_Ore_Field>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Ore_Field@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_Ore_Field>::~ScriptRegistrant<RA_Ore_Field>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Ore_Field@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Ore_Field@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Ore_Field>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0CN@OOFGBDLJ@ScriptRegistrant?$DMclass?5RA_Ore_Fi@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Ore_Field@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Ore_Field@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Ore_Field>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Ore_Field@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Ore_Field@@@@QAE@PBD0@Z PROC	; ScriptRegistrant<RA_Ore_Field>::ScriptRegistrant<RA_Ore_Field>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Ore_Field@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Ore_Field@@@@QAE@PBD0@Z ENDP	; ScriptRegistrant<RA_Ore_Field>::ScriptRegistrant<RA_Ore_Field>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Ore_Truck_2_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Ore_Truck_2_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Ore_Truck_2_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Ore_Truck_2_Registrant@@3V?$ScriptRegistrant@VRA_Ore_Truck_2@@@@A ; RA_Ore_Truck_2_Registrant
	call	??1?$ScriptRegistrant@VRA_Ore_Truck_2@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Ore_Truck_2_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Ore_Truck_2_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Ore_Truck_2_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Ore_Truck_2_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Ore_Truck_2_Registrant'', COMDAT

; 4021 : ScriptRegistrant<RA_Ore_Truck_2> RA_Ore_Truck_2_Registrant("RA_Ore_Truck_2", "Field_Enter=456654:int,Field_Exit=75321:int,Deposit_Enter=321654:int,Max_Capacity=7:int,Harvest_Anim:string,Deliver_Anim:string,Harvest_Sound:string,Dump_Sound:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0KH@BNIPDAMN@Field_Enter?$DN456654?3int?0Field_Exi@
	push	OFFSET ??_C@_0P@MLLCDPHH@RA_Ore_Truck_2?$AA@
	mov	ecx, OFFSET ?RA_Ore_Truck_2_Registrant@@3V?$ScriptRegistrant@VRA_Ore_Truck_2@@@@A ; RA_Ore_Truck_2_Registrant
	call	??0?$ScriptRegistrant@VRA_Ore_Truck_2@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Ore_Truck_2>::ScriptRegistrant<RA_Ore_Truck_2>
	push	OFFSET ??__FRA_Ore_Truck_2_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Ore_Truck_2_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Ore_Truck_2_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Ore_Truck_2_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Ore_Truck_2@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Ore_Truck_2@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Ore_Truck_2>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Ore_Truck_2@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Ore_Truck_2@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Ore_Truck_2>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Ore_Truck_2@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Ore_Truck_2@@@@UAE@XZ PROC	; ScriptRegistrant<RA_Ore_Truck_2>::~ScriptRegistrant<RA_Ore_Truck_2>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Ore_Truck_2@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_Ore_Truck_2>::~ScriptRegistrant<RA_Ore_Truck_2>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Ore_Truck_2@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Ore_Truck_2@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Ore_Truck_2>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0CP@ONLGJPHK@ScriptRegistrant?$DMclass?5RA_Ore_Tr@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Ore_Truck_2@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Ore_Truck_2@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Ore_Truck_2>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Ore_Truck_2@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Ore_Truck_2@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Ore_Truck_2>::ScriptRegistrant<RA_Ore_Truck_2>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Ore_Truck_2@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Ore_Truck_2@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Ore_Truck_2>::ScriptRegistrant<RA_Ore_Truck_2>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Ore_Truck_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Ore_Truck_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Ore_Truck_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Ore_Truck_Registrant@@3V?$ScriptRegistrant@VRA_Ore_Truck@@@@A ; RA_Ore_Truck_Registrant
	call	??1?$ScriptRegistrant@VRA_Ore_Truck@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Ore_Truck_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Ore_Truck_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Ore_Truck_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Ore_Truck_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Ore_Truck_Registrant'', COMDAT

; 4020 : ScriptRegistrant<RA_Ore_Truck> RA_Ore_Truck_Registrant("RA_Ore_Truck", "Field_Enter=456654:int,Field_Exit=75321:int,Deposit_Enter=321654:int,Max_Capacity=7:int,Harvest_Anim:string,Deliver_Anim:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0IA@KPNFALHO@Field_Enter?$DN456654?3int?0Field_Exi@
	push	OFFSET ??_C@_0N@KBNLAHDA@RA_Ore_Truck?$AA@
	mov	ecx, OFFSET ?RA_Ore_Truck_Registrant@@3V?$ScriptRegistrant@VRA_Ore_Truck@@@@A ; RA_Ore_Truck_Registrant
	call	??0?$ScriptRegistrant@VRA_Ore_Truck@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Ore_Truck>::ScriptRegistrant<RA_Ore_Truck>
	push	OFFSET ??__FRA_Ore_Truck_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Ore_Truck_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Ore_Truck_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Ore_Truck_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Ore_Truck@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Ore_Truck@@@@UAEPAXI@Z PROC	; ScriptRegistrant<RA_Ore_Truck>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Ore_Truck@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Ore_Truck@@@@UAEPAXI@Z ENDP	; ScriptRegistrant<RA_Ore_Truck>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Ore_Truck@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Ore_Truck@@@@UAE@XZ PROC	; ScriptRegistrant<RA_Ore_Truck>::~ScriptRegistrant<RA_Ore_Truck>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Ore_Truck@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_Ore_Truck>::~ScriptRegistrant<RA_Ore_Truck>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Ore_Truck@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Ore_Truck@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Ore_Truck>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0CN@HOFDPHIL@ScriptRegistrant?$DMclass?5RA_Ore_Tr@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Ore_Truck@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Ore_Truck@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Ore_Truck>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Ore_Truck@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Ore_Truck@@@@QAE@PBD0@Z PROC	; ScriptRegistrant<RA_Ore_Truck>::ScriptRegistrant<RA_Ore_Truck>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Ore_Truck@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Ore_Truck@@@@QAE@PBD0@Z ENDP	; ScriptRegistrant<RA_Ore_Truck>::ScriptRegistrant<RA_Ore_Truck>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_DestroyNearest_OnDeath_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_DestroyNearest_OnDeath_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_DestroyNearest_OnDeath_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_DestroyNearest_OnDeath_Registrant@@3V?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@A ; RA_DestroyNearest_OnDeath_Registrant
	call	??1?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_DestroyNearest_OnDeath_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_DestroyNearest_OnDeath_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_DestroyNearest_OnDeath_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_DestroyNearest_OnDeath_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_DestroyNearest_OnDeath_Registrant'', COMDAT

; 4019 : ScriptRegistrant<RA_DestroyNearest_OnDeath> RA_DestroyNearest_OnDeath_Registrant("RA_DestroyNearest_OnDeath", "Preset_Name:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BD@OEHGDLOH@Preset_Name?3string?$AA@
	push	OFFSET ??_C@_0BK@OLAFLKMD@RA_DestroyNearest_OnDeath?$AA@
	mov	ecx, OFFSET ?RA_DestroyNearest_OnDeath_Registrant@@3V?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@A ; RA_DestroyNearest_OnDeath_Registrant
	call	??0?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::ScriptRegistrant<RA_DestroyNearest_OnDeath>
	push	OFFSET ??__FRA_DestroyNearest_OnDeath_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_DestroyNearest_OnDeath_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_DestroyNearest_OnDeath_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_DestroyNearest_OnDeath_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@UAE@XZ PROC ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::~ScriptRegistrant<RA_DestroyNearest_OnDeath>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::~ScriptRegistrant<RA_DestroyNearest_OnDeath>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DK@BEMBIJEP@ScriptRegistrant?$DMclass?5RA_Destro@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_DestroyNearest_OnDeath@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::ScriptRegistrant<RA_DestroyNearest_OnDeath>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_DestroyNearest_OnDeath@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_DestroyNearest_OnDeath>::ScriptRegistrant<RA_DestroyNearest_OnDeath>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Credit_Theft_Zone_Timer_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Credit_Theft_Zone_Timer_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_Credit_Theft_Zone_Timer_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Credit_Theft_Zone_Timer_Registrant@@3V?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@A ; RA_Credit_Theft_Zone_Timer_Registrant
	call	??1?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Credit_Theft_Zone_Timer_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_Credit_Theft_Zone_Timer_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Credit_Theft_Zone_Timer_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Credit_Theft_Zone_Timer_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_Credit_Theft_Zone_Timer_Registrant'', COMDAT

; 4018 : ScriptRegistrant<RA_Credit_Theft_Zone_Timer> RA_Credit_Theft_Zone_Timer_Registrant("RA_Credit_Theft_Zone_Timer", "Enter_Message=357753:int,Team=0:int,Time:float");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0CP@JNDADJCE@Enter_Message?$DN357753?3int?0Team?$DN0?3@
	push	OFFSET ??_C@_0BL@JHMFHJBJ@RA_Credit_Theft_Zone_Timer?$AA@
	mov	ecx, OFFSET ?RA_Credit_Theft_Zone_Timer_Registrant@@3V?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@A ; RA_Credit_Theft_Zone_Timer_Registrant
	call	??0?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::ScriptRegistrant<RA_Credit_Theft_Zone_Timer>
	push	OFFSET ??__FRA_Credit_Theft_Zone_Timer_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Credit_Theft_Zone_Timer_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Credit_Theft_Zone_Timer_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_Credit_Theft_Zone_Timer_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::~ScriptRegistrant<RA_Credit_Theft_Zone_Timer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::~ScriptRegistrant<RA_Credit_Theft_Zone_Timer>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DL@ILMOPHDA@ScriptRegistrant?$DMclass?5RA_Credit@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Credit_Theft_Zone_Timer@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::ScriptRegistrant<RA_Credit_Theft_Zone_Timer>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Credit_Theft_Zone_Timer@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Credit_Theft_Zone_Timer>::ScriptRegistrant<RA_Credit_Theft_Zone_Timer>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Credit_Theft_Zone_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Credit_Theft_Zone_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_Credit_Theft_Zone_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Credit_Theft_Zone_Registrant@@3V?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@A ; RA_Credit_Theft_Zone_Registrant
	call	??1?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Credit_Theft_Zone_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_Credit_Theft_Zone_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Credit_Theft_Zone_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Credit_Theft_Zone_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_Credit_Theft_Zone_Registrant'', COMDAT

; 4017 : ScriptRegistrant<RA_Credit_Theft_Zone> RA_Credit_Theft_Zone_Registrant("RA_Credit_Theft_Zone", "Enter_Message=357753:int,Team=0:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0CE@MCCMNKMM@Enter_Message?$DN357753?3int?0Team?$DN0?3@
	push	OFFSET ??_C@_0BF@HBHNBOBB@RA_Credit_Theft_Zone?$AA@
	mov	ecx, OFFSET ?RA_Credit_Theft_Zone_Registrant@@3V?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@A ; RA_Credit_Theft_Zone_Registrant
	call	??0?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Credit_Theft_Zone>::ScriptRegistrant<RA_Credit_Theft_Zone>
	push	OFFSET ??__FRA_Credit_Theft_Zone_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Credit_Theft_Zone_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Credit_Theft_Zone_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_Credit_Theft_Zone_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Credit_Theft_Zone>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Credit_Theft_Zone>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Credit_Theft_Zone>::~ScriptRegistrant<RA_Credit_Theft_Zone>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Credit_Theft_Zone>::~ScriptRegistrant<RA_Credit_Theft_Zone>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Credit_Theft_Zone>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DF@OLPNMLBL@ScriptRegistrant?$DMclass?5RA_Credit@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Credit_Theft_Zone@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Credit_Theft_Zone>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Credit_Theft_Zone>::ScriptRegistrant<RA_Credit_Theft_Zone>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Credit_Theft_Zone@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Credit_Theft_Zone>::ScriptRegistrant<RA_Credit_Theft_Zone>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Thief_Improved_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Thief_Improved_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Thief_Improved_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Thief_Improved_Registrant@@3V?$ScriptRegistrant@VRA_Thief_Improved@@@@A ; RA_Thief_Improved_Registrant
	call	??1?$ScriptRegistrant@VRA_Thief_Improved@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Thief_Improved_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Thief_Improved_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Thief_Improved_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Thief_Improved_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Thief_Improved_Registrant'', COMDAT

; 4016 : ScriptRegistrant<RA_Thief_Improved> RA_Thief_Improved_Registrant("RA_Thief_Improved", "Enter_Message=357753:int,Percentage=0.5:float,Sound:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0DL@PJDADANK@Enter_Message?$DN357753?3int?0Percent@
	push	OFFSET ??_C@_0BC@GOCDOIJN@RA_Thief_Improved?$AA@
	mov	ecx, OFFSET ?RA_Thief_Improved_Registrant@@3V?$ScriptRegistrant@VRA_Thief_Improved@@@@A ; RA_Thief_Improved_Registrant
	call	??0?$ScriptRegistrant@VRA_Thief_Improved@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Thief_Improved>::ScriptRegistrant<RA_Thief_Improved>
	push	OFFSET ??__FRA_Thief_Improved_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Thief_Improved_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Thief_Improved_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Thief_Improved_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Thief_Improved@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Thief_Improved@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Thief_Improved>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Thief_Improved@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Thief_Improved@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Thief_Improved>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Thief_Improved@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Thief_Improved@@@@UAE@XZ PROC	; ScriptRegistrant<RA_Thief_Improved>::~ScriptRegistrant<RA_Thief_Improved>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Thief_Improved@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_Thief_Improved>::~ScriptRegistrant<RA_Thief_Improved>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Thief_Improved@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Thief_Improved@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Thief_Improved>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DC@BEAEMMDO@ScriptRegistrant?$DMclass?5RA_Thief_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Thief_Improved@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Thief_Improved@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Thief_Improved>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Thief_Improved@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Thief_Improved@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Thief_Improved>::ScriptRegistrant<RA_Thief_Improved>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Thief_Improved@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Thief_Improved@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Thief_Improved>::ScriptRegistrant<RA_Thief_Improved>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Thief_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Thief_Registrant@@YAXXZ PROC			; `dynamic atexit destructor for 'RA_Thief_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Thief_Registrant@@3V?$ScriptRegistrant@VRA_Thief@@@@A ; RA_Thief_Registrant
	call	??1?$ScriptRegistrant@VRA_Thief@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Thief_Registrant@@YAXXZ ENDP			; `dynamic atexit destructor for 'RA_Thief_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Thief_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Thief_Registrant@@YAXXZ PROC			; `dynamic initializer for 'RA_Thief_Registrant'', COMDAT

; 4015 : ScriptRegistrant<RA_Thief> RA_Thief_Registrant("RA_Thief", "Enter_Message=357753:int,Percentage=0.5:float");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0CO@OHINKJD@Enter_Message?$DN357753?3int?0Percent@
	push	OFFSET ??_C@_08HADANCIC@RA_Thief?$AA@
	mov	ecx, OFFSET ?RA_Thief_Registrant@@3V?$ScriptRegistrant@VRA_Thief@@@@A ; RA_Thief_Registrant
	call	??0?$ScriptRegistrant@VRA_Thief@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Thief>::ScriptRegistrant<RA_Thief>
	push	OFFSET ??__FRA_Thief_Registrant@@YAXXZ	; `dynamic atexit destructor for 'RA_Thief_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Thief_Registrant@@YAXXZ ENDP			; `dynamic initializer for 'RA_Thief_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Thief@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Thief@@@@UAEPAXI@Z PROC	; ScriptRegistrant<RA_Thief>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Thief@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Thief@@@@UAEPAXI@Z ENDP	; ScriptRegistrant<RA_Thief>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Thief@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Thief@@@@UAE@XZ PROC		; ScriptRegistrant<RA_Thief>::~ScriptRegistrant<RA_Thief>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Thief@@@@UAE@XZ ENDP		; ScriptRegistrant<RA_Thief>::~ScriptRegistrant<RA_Thief>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Thief@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Thief@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Thief>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0CJ@BFDGENND@ScriptRegistrant?$DMclass?5RA_Thief?$DO@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Thief@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Thief@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Thief>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Thief@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Thief@@@@QAE@PBD0@Z PROC	; ScriptRegistrant<RA_Thief>::ScriptRegistrant<RA_Thief>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Thief@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Thief@@@@QAE@PBD0@Z ENDP	; ScriptRegistrant<RA_Thief>::ScriptRegistrant<RA_Thief>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Vehicle_Regen_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Vehicle_Regen_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Vehicle_Regen_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Vehicle_Regen_Registrant@@3V?$ScriptRegistrant@VRA_Vehicle_Regen@@@@A ; RA_Vehicle_Regen_Registrant
	call	??1?$ScriptRegistrant@VRA_Vehicle_Regen@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Vehicle_Regen_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Vehicle_Regen_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Vehicle_Regen_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Vehicle_Regen_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Vehicle_Regen_Registrant'', COMDAT

; 4014 : ScriptRegistrant<RA_Vehicle_Regen> RA_Vehicle_Regen_Registrant("RA_Vehicle_Regen", "Percentage=0.5:float,Heal=1.0:float,Time=1.0:float,TimerID=87654:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0EF@NHEDFBAP@Percentage?$DN0?45?3float?0Heal?$DN1?40?3fl@
	push	OFFSET ??_C@_0BB@PFPIFCDO@RA_Vehicle_Regen?$AA@
	mov	ecx, OFFSET ?RA_Vehicle_Regen_Registrant@@3V?$ScriptRegistrant@VRA_Vehicle_Regen@@@@A ; RA_Vehicle_Regen_Registrant
	call	??0?$ScriptRegistrant@VRA_Vehicle_Regen@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Vehicle_Regen>::ScriptRegistrant<RA_Vehicle_Regen>
	push	OFFSET ??__FRA_Vehicle_Regen_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Vehicle_Regen_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Vehicle_Regen_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Vehicle_Regen_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Vehicle_Regen@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Vehicle_Regen@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Vehicle_Regen>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Vehicle_Regen@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Vehicle_Regen@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Vehicle_Regen>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Vehicle_Regen@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Vehicle_Regen@@@@UAE@XZ PROC	; ScriptRegistrant<RA_Vehicle_Regen>::~ScriptRegistrant<RA_Vehicle_Regen>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Vehicle_Regen@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_Vehicle_Regen>::~ScriptRegistrant<RA_Vehicle_Regen>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Vehicle_Regen@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Vehicle_Regen@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Vehicle_Regen>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DB@HBBADMPJ@ScriptRegistrant?$DMclass?5RA_Vehicl@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Vehicle_Regen@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Vehicle_Regen@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Vehicle_Regen>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Vehicle_Regen@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Vehicle_Regen@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Vehicle_Regen>::ScriptRegistrant<RA_Vehicle_Regen>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Vehicle_Regen@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Vehicle_Regen@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Vehicle_Regen>::ScriptRegistrant<RA_Vehicle_Regen>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Base_Defense_Chargeup_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Base_Defense_Chargeup_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_Base_Defense_Chargeup_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Base_Defense_Chargeup_Registrant@@3V?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@A ; RA_Base_Defense_Chargeup_Registrant
	call	??1?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Base_Defense_Chargeup_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_Base_Defense_Chargeup_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Base_Defense_Chargeup_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Base_Defense_Chargeup_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_Base_Defense_Chargeup_Registrant'', COMDAT

; 4013 : ScriptRegistrant<RA_Base_Defense_Chargeup> RA_Base_Defense_Chargeup_Registrant("RA_Base_Defense_Chargeup","MinRange=0.0:float,MaxRange=100.0:float,AntiAir=0:int,AntiGround=1:int,AdjustAim=0:int,TargetMode=0:int,ChargeAnim:string,ChargeSound:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0IN@EAGPGNEA@MinRange?$DN0?40?3float?0MaxRange?$DN100?4@
	push	OFFSET ??_C@_0BJ@OBJICIJE@RA_Base_Defense_Chargeup?$AA@
	mov	ecx, OFFSET ?RA_Base_Defense_Chargeup_Registrant@@3V?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@A ; RA_Base_Defense_Chargeup_Registrant
	call	??0?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Base_Defense_Chargeup>::ScriptRegistrant<RA_Base_Defense_Chargeup>
	push	OFFSET ??__FRA_Base_Defense_Chargeup_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Base_Defense_Chargeup_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Base_Defense_Chargeup_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_Base_Defense_Chargeup_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Base_Defense_Chargeup>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Base_Defense_Chargeup>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Base_Defense_Chargeup>::~ScriptRegistrant<RA_Base_Defense_Chargeup>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Base_Defense_Chargeup>::~ScriptRegistrant<RA_Base_Defense_Chargeup>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Base_Defense_Chargeup>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DJ@LHKLAEBI@ScriptRegistrant?$DMclass?5RA_Base_D@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Base_Defense_Chargeup@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Base_Defense_Chargeup>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Base_Defense_Chargeup>::ScriptRegistrant<RA_Base_Defense_Chargeup>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Base_Defense_Chargeup@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Base_Defense_Chargeup>::ScriptRegistrant<RA_Base_Defense_Chargeup>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Base_Defense_Powered_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Base_Defense_Powered_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_Base_Defense_Powered_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Base_Defense_Powered_Registrant@@3V?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@A ; RA_Base_Defense_Powered_Registrant
	call	??1?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Base_Defense_Powered_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_Base_Defense_Powered_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Base_Defense_Powered_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Base_Defense_Powered_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_Base_Defense_Powered_Registrant'', COMDAT

; 4012 : ScriptRegistrant<RA_Base_Defense_Powered> RA_Base_Defense_Powered_Registrant("RA_Base_Defense_Powered","MinRange=0.0:float,MaxRange=100.0:float,AntiAir=0:int,AntiGround=1:int,AdjustAim=0:int,TargetMode=0:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0GI@FBDKCOCM@MinRange?$DN0?40?3float?0MaxRange?$DN100?4@
	push	OFFSET ??_C@_0BI@MCHHNLJI@RA_Base_Defense_Powered?$AA@
	mov	ecx, OFFSET ?RA_Base_Defense_Powered_Registrant@@3V?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@A ; RA_Base_Defense_Powered_Registrant
	call	??0?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Base_Defense_Powered>::ScriptRegistrant<RA_Base_Defense_Powered>
	push	OFFSET ??__FRA_Base_Defense_Powered_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Base_Defense_Powered_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Base_Defense_Powered_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_Base_Defense_Powered_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Base_Defense_Powered>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Base_Defense_Powered>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Base_Defense_Powered>::~ScriptRegistrant<RA_Base_Defense_Powered>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Base_Defense_Powered>::~ScriptRegistrant<RA_Base_Defense_Powered>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Base_Defense_Powered>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DI@EONKOGFH@ScriptRegistrant?$DMclass?5RA_Base_D@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Base_Defense_Powered@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Base_Defense_Powered>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Base_Defense_Powered>::ScriptRegistrant<RA_Base_Defense_Powered>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Base_Defense_Powered@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Base_Defense_Powered>::ScriptRegistrant<RA_Base_Defense_Powered>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Base_Defense_Simple_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Base_Defense_Simple_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_Base_Defense_Simple_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Base_Defense_Simple_Registrant@@3V?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@A ; RA_Base_Defense_Simple_Registrant
	call	??1?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Base_Defense_Simple_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_Base_Defense_Simple_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Base_Defense_Simple_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Base_Defense_Simple_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_Base_Defense_Simple_Registrant'', COMDAT

; 4011 : ScriptRegistrant<RA_Base_Defense_Simple> RA_Base_Defense_Simple_Registrant("RA_Base_Defense_Simple","MinRange=0.0:float,MaxRange=100.0:float,AntiAir=0:int,AntiGround=1:int,AdjustAim=0:int,TargetMode=0:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0GI@FBDKCOCM@MinRange?$DN0?40?3float?0MaxRange?$DN100?4@
	push	OFFSET ??_C@_0BH@FGGFMFIJ@RA_Base_Defense_Simple?$AA@
	mov	ecx, OFFSET ?RA_Base_Defense_Simple_Registrant@@3V?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@A ; RA_Base_Defense_Simple_Registrant
	call	??0?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Base_Defense_Simple>::ScriptRegistrant<RA_Base_Defense_Simple>
	push	OFFSET ??__FRA_Base_Defense_Simple_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Base_Defense_Simple_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Base_Defense_Simple_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_Base_Defense_Simple_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Base_Defense_Simple>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Base_Defense_Simple>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Base_Defense_Simple>::~ScriptRegistrant<RA_Base_Defense_Simple>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Base_Defense_Simple>::~ScriptRegistrant<RA_Base_Defense_Simple>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Base_Defense_Simple>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DH@EBJBKDNK@ScriptRegistrant?$DMclass?5RA_Base_D@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Base_Defense_Simple@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Base_Defense_Simple>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Base_Defense_Simple>::ScriptRegistrant<RA_Base_Defense_Simple>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Base_Defense_Simple@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Base_Defense_Simple>::ScriptRegistrant<RA_Base_Defense_Simple>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Building_DeathSound_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Building_DeathSound_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_Building_DeathSound_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Building_DeathSound_Registrant@@3V?$ScriptRegistrant@VRA_Building_DeathSound@@@@A ; RA_Building_DeathSound_Registrant
	call	??1?$ScriptRegistrant@VRA_Building_DeathSound@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Building_DeathSound_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_Building_DeathSound_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Building_DeathSound_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Building_DeathSound_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_Building_DeathSound_Registrant'', COMDAT

; 4010 : ScriptRegistrant<RA_Building_DeathSound> RA_Building_DeathSound_Registrant("RA_Building_DeathSound", "HalfSound=ExploSound_Bldg_Half:string,DeadSound=ExploSound_Bldg_Dead:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0EM@CCCKBBEG@HalfSound?$DNExploSound_Bldg_Half?3s@
	push	OFFSET ??_C@_0BH@KNBAGKAE@RA_Building_DeathSound?$AA@
	mov	ecx, OFFSET ?RA_Building_DeathSound_Registrant@@3V?$ScriptRegistrant@VRA_Building_DeathSound@@@@A ; RA_Building_DeathSound_Registrant
	call	??0?$ScriptRegistrant@VRA_Building_DeathSound@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Building_DeathSound>::ScriptRegistrant<RA_Building_DeathSound>
	push	OFFSET ??__FRA_Building_DeathSound_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Building_DeathSound_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Building_DeathSound_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_Building_DeathSound_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Building_DeathSound@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Building_DeathSound@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Building_DeathSound>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Building_DeathSound@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Building_DeathSound@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Building_DeathSound>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Building_DeathSound@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Building_DeathSound@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Building_DeathSound>::~ScriptRegistrant<RA_Building_DeathSound>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Building_DeathSound@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Building_DeathSound>::~ScriptRegistrant<RA_Building_DeathSound>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Building_DeathSound@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Building_DeathSound@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Building_DeathSound>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DH@GEODKHLE@ScriptRegistrant?$DMclass?5RA_Buildi@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Building_DeathSound@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Building_DeathSound@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Building_DeathSound>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Building_DeathSound@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Building_DeathSound@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Building_DeathSound>::ScriptRegistrant<RA_Building_DeathSound>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Building_DeathSound@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Building_DeathSound@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Building_DeathSound>::ScriptRegistrant<RA_Building_DeathSound>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Conyard_Controller_Improved_2_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Conyard_Controller_Improved_2_Registrant@@YAXXZ PROC ; `dynamic atexit destructor for 'RA_Conyard_Controller_Improved_2_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Conyard_Controller_Improved_2_Registrant@@3V?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@A ; RA_Conyard_Controller_Improved_2_Registrant
	call	??1?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Conyard_Controller_Improved_2_Registrant@@YAXXZ ENDP ; `dynamic atexit destructor for 'RA_Conyard_Controller_Improved_2_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Conyard_Controller_Improved_2_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Conyard_Controller_Improved_2_Registrant@@YAXXZ PROC ; `dynamic initializer for 'RA_Conyard_Controller_Improved_2_Registrant'', COMDAT

; 4009 : ScriptRegistrant<RA_Conyard_Controller_Improved_2> RA_Conyard_Controller_Improved_2_Registrant("RA_Conyard_Controller_Improved_2", "Team=0:int,Preset1=blank:string,Preset2=blank:string,Preset3=blank:string,Preset4=blank:string,Preset5=blank:string,Preset6=blank:string,Preset7=blank:string,Preset8=blank:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0LD@FLGPMNPO@Team?$DN0?3int?0Preset1?$DNblank?3string?0@
	push	OFFSET ??_C@_0CB@DGNNNNJK@RA_Conyard_Controller_Improved_2@
	mov	ecx, OFFSET ?RA_Conyard_Controller_Improved_2_Registrant@@3V?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@A ; RA_Conyard_Controller_Improved_2_Registrant
	call	??0?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::ScriptRegistrant<RA_Conyard_Controller_Improved_2>
	push	OFFSET ??__FRA_Conyard_Controller_Improved_2_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Conyard_Controller_Improved_2_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Conyard_Controller_Improved_2_Registrant@@YAXXZ ENDP ; `dynamic initializer for 'RA_Conyard_Controller_Improved_2_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::~ScriptRegistrant<RA_Conyard_Controller_Improved_2>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::~ScriptRegistrant<RA_Conyard_Controller_Improved_2>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0EB@KDLCFKAA@ScriptRegistrant?$DMclass?5RA_Conyar@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Conyard_Controller_Improved_2@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::ScriptRegistrant<RA_Conyard_Controller_Improved_2>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Conyard_Controller_Improved_2@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Conyard_Controller_Improved_2>::ScriptRegistrant<RA_Conyard_Controller_Improved_2>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Conyard_Controller_Improved_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Conyard_Controller_Improved_Registrant@@YAXXZ PROC ; `dynamic atexit destructor for 'RA_Conyard_Controller_Improved_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Conyard_Controller_Improved_Registrant@@3V?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@A ; RA_Conyard_Controller_Improved_Registrant
	call	??1?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Conyard_Controller_Improved_Registrant@@YAXXZ ENDP ; `dynamic atexit destructor for 'RA_Conyard_Controller_Improved_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Conyard_Controller_Improved_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Conyard_Controller_Improved_Registrant@@YAXXZ PROC ; `dynamic initializer for 'RA_Conyard_Controller_Improved_Registrant'', COMDAT

; 4008 : ScriptRegistrant<RA_Conyard_Controller_Improved> RA_Conyard_Controller_Improved_Registrant("RA_Conyard_Controller_Improved", "Team=0:int,Preset1=blank:string,Preset2=blank:string,Preset3=blank:string,Preset4=blank:string,Preset5=blank:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0HE@HNENHIFJ@Team?$DN0?3int?0Preset1?$DNblank?3string?0@
	push	OFFSET ??_C@_0BP@NHCGCDLK@RA_Conyard_Controller_Improved?$AA@
	mov	ecx, OFFSET ?RA_Conyard_Controller_Improved_Registrant@@3V?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@A ; RA_Conyard_Controller_Improved_Registrant
	call	??0?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Conyard_Controller_Improved>::ScriptRegistrant<RA_Conyard_Controller_Improved>
	push	OFFSET ??__FRA_Conyard_Controller_Improved_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Conyard_Controller_Improved_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Conyard_Controller_Improved_Registrant@@YAXXZ ENDP ; `dynamic initializer for 'RA_Conyard_Controller_Improved_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Conyard_Controller_Improved>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Conyard_Controller_Improved>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Conyard_Controller_Improved>::~ScriptRegistrant<RA_Conyard_Controller_Improved>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Conyard_Controller_Improved>::~ScriptRegistrant<RA_Conyard_Controller_Improved>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Conyard_Controller_Improved>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DP@DIHNBFIL@ScriptRegistrant?$DMclass?5RA_Conyar@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Conyard_Controller_Improved@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Conyard_Controller_Improved>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Conyard_Controller_Improved>::ScriptRegistrant<RA_Conyard_Controller_Improved>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Conyard_Controller_Improved@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Conyard_Controller_Improved>::ScriptRegistrant<RA_Conyard_Controller_Improved>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_MAD_Tank_Improved_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_MAD_Tank_Improved_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_MAD_Tank_Improved_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_MAD_Tank_Improved_Registrant@@3V?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@A ; RA_MAD_Tank_Improved_Registrant
	call	??1?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_MAD_Tank_Improved_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_MAD_Tank_Improved_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_MAD_Tank_Improved_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_MAD_Tank_Improved_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_MAD_Tank_Improved_Registrant'', COMDAT

; 4007 : ScriptRegistrant<RA_MAD_Tank_Improved> RA_MAD_Tank_Improved_Registrant("RA_MAD_Tank_Improved", "Attach_Model=pistons:string,Deployed_Animation=V_SO_MADTANK.ANIM_MADTANK:string,Sonic_Preset=Sonic_Box:string,Percentage=0.34:float,Warhead=Sonic:string,DamageRadius=250.0:float,Announcement=MAD_Tank_Deployed:string,Bone=ROOTTRANSFORM:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0PC@DFICKEC@Attach_Model?$DNpistons?3string?0Depl@
	push	OFFSET ??_C@_0BF@IFEFMCNH@RA_MAD_Tank_Improved?$AA@
	mov	ecx, OFFSET ?RA_MAD_Tank_Improved_Registrant@@3V?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@A ; RA_MAD_Tank_Improved_Registrant
	call	??0?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_MAD_Tank_Improved>::ScriptRegistrant<RA_MAD_Tank_Improved>
	push	OFFSET ??__FRA_MAD_Tank_Improved_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_MAD_Tank_Improved_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_MAD_Tank_Improved_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_MAD_Tank_Improved_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_MAD_Tank_Improved>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_MAD_Tank_Improved>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@UAE@XZ PROC ; ScriptRegistrant<RA_MAD_Tank_Improved>::~ScriptRegistrant<RA_MAD_Tank_Improved>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_MAD_Tank_Improved>::~ScriptRegistrant<RA_MAD_Tank_Improved>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_MAD_Tank_Improved>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DF@GEBNGCLA@ScriptRegistrant?$DMclass?5RA_MAD_Ta@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_MAD_Tank_Improved@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_MAD_Tank_Improved>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_MAD_Tank_Improved>::ScriptRegistrant<RA_MAD_Tank_Improved>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_MAD_Tank_Improved@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_MAD_Tank_Improved>::ScriptRegistrant<RA_MAD_Tank_Improved>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_CTF_Zone_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_CTF_Zone_Registrant@@YAXXZ PROC			; `dynamic atexit destructor for 'RA_CTF_Zone_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_CTF_Zone_Registrant@@3V?$ScriptRegistrant@VRA_CTF_Zone@@@@A ; RA_CTF_Zone_Registrant
	call	??1?$ScriptRegistrant@VRA_CTF_Zone@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_CTF_Zone_Registrant@@YAXXZ ENDP			; `dynamic atexit destructor for 'RA_CTF_Zone_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_CTF_Zone_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_CTF_Zone_Registrant@@YAXXZ PROC			; `dynamic initializer for 'RA_CTF_Zone_Registrant'', COMDAT

; 4006 : ScriptRegistrant<RA_CTF_Zone> RA_CTF_Zone_Registrant("RA_CTF_Zone","Team_ID=0:int,Max_Capture=5:int,Flag_Preset_Name:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0DI@COAKFENF@Team_ID?$DN0?3int?0Max_Capture?$DN5?3int?0@
	push	OFFSET ??_C@_0M@KMOGJHIB@RA_CTF_Zone?$AA@
	mov	ecx, OFFSET ?RA_CTF_Zone_Registrant@@3V?$ScriptRegistrant@VRA_CTF_Zone@@@@A ; RA_CTF_Zone_Registrant
	call	??0?$ScriptRegistrant@VRA_CTF_Zone@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_CTF_Zone>::ScriptRegistrant<RA_CTF_Zone>
	push	OFFSET ??__FRA_CTF_Zone_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_CTF_Zone_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_CTF_Zone_Registrant@@YAXXZ ENDP			; `dynamic initializer for 'RA_CTF_Zone_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_CTF_Zone@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_CTF_Zone@@@@UAEPAXI@Z PROC	; ScriptRegistrant<RA_CTF_Zone>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_CTF_Zone@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_CTF_Zone@@@@UAEPAXI@Z ENDP	; ScriptRegistrant<RA_CTF_Zone>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_CTF_Zone@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_CTF_Zone@@@@UAE@XZ PROC	; ScriptRegistrant<RA_CTF_Zone>::~ScriptRegistrant<RA_CTF_Zone>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_CTF_Zone@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_CTF_Zone>::~ScriptRegistrant<RA_CTF_Zone>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_CTF_Zone@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_CTF_Zone@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_CTF_Zone>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0CM@HJNEEDIG@ScriptRegistrant?$DMclass?5RA_CTF_Zo@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	52					; 00000034H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_CTF_Zone@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_CTF_Zone@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_CTF_Zone>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_CTF_Zone@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_CTF_Zone@@@@QAE@PBD0@Z PROC	; ScriptRegistrant<RA_CTF_Zone>::ScriptRegistrant<RA_CTF_Zone>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_CTF_Zone@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_CTF_Zone@@@@QAE@PBD0@Z ENDP	; ScriptRegistrant<RA_CTF_Zone>::ScriptRegistrant<RA_CTF_Zone>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Demolition_Truck_Improved_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Demolition_Truck_Improved_Registrant@@YAXXZ PROC ; `dynamic atexit destructor for 'RA_Demolition_Truck_Improved_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Demolition_Truck_Improved_Registrant@@3V?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@A ; RA_Demolition_Truck_Improved_Registrant
	call	??1?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Demolition_Truck_Improved_Registrant@@YAXXZ ENDP ; `dynamic atexit destructor for 'RA_Demolition_Truck_Improved_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Demolition_Truck_Improved_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Demolition_Truck_Improved_Registrant@@YAXXZ PROC ; `dynamic initializer for 'RA_Demolition_Truck_Improved_Registrant'', COMDAT

; 4005 : ScriptRegistrant<RA_Demolition_Truck_Improved> RA_Demolition_Truck_Improved_Registrant("RA_Demolition_Truck_Improved", "Explosion=Explosion_Invis_Nuke:string,Warhead=Nuke:string,DamageStrength=480.0:float,DamageRadius=120.0:float");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0GO@KODEMHGD@Explosion?$DNExplosion_Invis_Nuke?3s@
	push	OFFSET ??_C@_0BN@MFAOB@RA_Demolition_Truck_Improved?$AA@
	mov	ecx, OFFSET ?RA_Demolition_Truck_Improved_Registrant@@3V?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@A ; RA_Demolition_Truck_Improved_Registrant
	call	??0?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Demolition_Truck_Improved>::ScriptRegistrant<RA_Demolition_Truck_Improved>
	push	OFFSET ??__FRA_Demolition_Truck_Improved_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Demolition_Truck_Improved_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Demolition_Truck_Improved_Registrant@@YAXXZ ENDP ; `dynamic initializer for 'RA_Demolition_Truck_Improved_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Demolition_Truck_Improved>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Demolition_Truck_Improved>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Demolition_Truck_Improved>::~ScriptRegistrant<RA_Demolition_Truck_Improved>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Demolition_Truck_Improved>::~ScriptRegistrant<RA_Demolition_Truck_Improved>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Demolition_Truck_Improved>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DN@GDFHIJNN@ScriptRegistrant?$DMclass?5RA_Demoli@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Demolition_Truck_Improved@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Demolition_Truck_Improved>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Demolition_Truck_Improved>::ScriptRegistrant<RA_Demolition_Truck_Improved>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Demolition_Truck_Improved@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Demolition_Truck_Improved>::ScriptRegistrant<RA_Demolition_Truck_Improved>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_ObjectDeath_OnDeath_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_ObjectDeath_OnDeath_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_ObjectDeath_OnDeath_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_ObjectDeath_OnDeath_Registrant@@3V?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@A ; RA_ObjectDeath_OnDeath_Registrant
	call	??1?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_ObjectDeath_OnDeath_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_ObjectDeath_OnDeath_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_ObjectDeath_OnDeath_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_ObjectDeath_OnDeath_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_ObjectDeath_OnDeath_Registrant'', COMDAT

; 4004 : ScriptRegistrant<RA_ObjectDeath_OnDeath> RA_ObjectDeath_OnDeath_Registrant("RA_ObjectDeath_OnDeath","Preset=blank:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BE@PJCHNJBB@Preset?$DNblank?3string?$AA@
	push	OFFSET ??_C@_0BH@LIIDEAGO@RA_ObjectDeath_OnDeath?$AA@
	mov	ecx, OFFSET ?RA_ObjectDeath_OnDeath_Registrant@@3V?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@A ; RA_ObjectDeath_OnDeath_Registrant
	call	??0?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::ScriptRegistrant<RA_ObjectDeath_OnDeath>
	push	OFFSET ??__FRA_ObjectDeath_OnDeath_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_ObjectDeath_OnDeath_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_ObjectDeath_OnDeath_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_ObjectDeath_OnDeath_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@UAE@XZ PROC ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::~ScriptRegistrant<RA_ObjectDeath_OnDeath>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::~ScriptRegistrant<RA_ObjectDeath_OnDeath>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DH@EICDCNJJ@ScriptRegistrant?$DMclass?5RA_Object@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_ObjectDeath_OnDeath@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::ScriptRegistrant<RA_ObjectDeath_OnDeath>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_ObjectDeath_OnDeath@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_ObjectDeath_OnDeath>::ScriptRegistrant<RA_ObjectDeath_OnDeath>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Conyard_Repair_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Conyard_Repair_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Conyard_Repair_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Conyard_Repair_Registrant@@3V?$ScriptRegistrant@VRA_Conyard_Repair@@@@A ; RA_Conyard_Repair_Registrant
	call	??1?$ScriptRegistrant@VRA_Conyard_Repair@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Conyard_Repair_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Conyard_Repair_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Conyard_Repair_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Conyard_Repair_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Conyard_Repair_Registrant'', COMDAT

; 4003 : ScriptRegistrant<RA_Conyard_Repair> RA_Conyard_Repair_Registrant("RA_Conyard_Repair", "Repair_Frequency=1.0:float");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BL@GCKCFGBE@Repair_Frequency?$DN1?40?3float?$AA@
	push	OFFSET ??_C@_0BC@PLCPOBGK@RA_Conyard_Repair?$AA@
	mov	ecx, OFFSET ?RA_Conyard_Repair_Registrant@@3V?$ScriptRegistrant@VRA_Conyard_Repair@@@@A ; RA_Conyard_Repair_Registrant
	call	??0?$ScriptRegistrant@VRA_Conyard_Repair@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Conyard_Repair>::ScriptRegistrant<RA_Conyard_Repair>
	push	OFFSET ??__FRA_Conyard_Repair_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Conyard_Repair_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Conyard_Repair_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Conyard_Repair_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Conyard_Repair@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Conyard_Repair@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Conyard_Repair>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Conyard_Repair@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Conyard_Repair@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Conyard_Repair>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Conyard_Repair@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Conyard_Repair@@@@UAE@XZ PROC	; ScriptRegistrant<RA_Conyard_Repair>::~ScriptRegistrant<RA_Conyard_Repair>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Conyard_Repair@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_Conyard_Repair>::~ScriptRegistrant<RA_Conyard_Repair>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Conyard_Repair@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Conyard_Repair@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Conyard_Repair>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DC@HDNHJEMC@ScriptRegistrant?$DMclass?5RA_Conyar@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Conyard_Repair@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Conyard_Repair@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Conyard_Repair>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Conyard_Repair@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Conyard_Repair@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Conyard_Repair>::ScriptRegistrant<RA_Conyard_Repair>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Conyard_Repair@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Conyard_Repair@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Conyard_Repair>::ScriptRegistrant<RA_Conyard_Repair>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_DriverDeath_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_DriverDeath_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_DriverDeath_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_DriverDeath_Registrant@@3V?$ScriptRegistrant@VRA_DriverDeath@@@@A ; RA_DriverDeath_Registrant
	call	??1?$ScriptRegistrant@VRA_DriverDeath@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_DriverDeath_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_DriverDeath_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_DriverDeath_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_DriverDeath_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_DriverDeath_Registrant'', COMDAT

; 4002 : ScriptRegistrant<RA_DriverDeath> RA_DriverDeath_Registrant("RA_DriverDeath", "");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0P@JMLOMBPP@RA_DriverDeath?$AA@
	mov	ecx, OFFSET ?RA_DriverDeath_Registrant@@3V?$ScriptRegistrant@VRA_DriverDeath@@@@A ; RA_DriverDeath_Registrant
	call	??0?$ScriptRegistrant@VRA_DriverDeath@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_DriverDeath>::ScriptRegistrant<RA_DriverDeath>
	push	OFFSET ??__FRA_DriverDeath_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_DriverDeath_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_DriverDeath_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_DriverDeath_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_DriverDeath@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_DriverDeath@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_DriverDeath>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_DriverDeath@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_DriverDeath@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_DriverDeath>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_DriverDeath@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_DriverDeath@@@@UAE@XZ PROC	; ScriptRegistrant<RA_DriverDeath>::~ScriptRegistrant<RA_DriverDeath>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_DriverDeath@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_DriverDeath>::~ScriptRegistrant<RA_DriverDeath>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_DriverDeath@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_DriverDeath@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_DriverDeath>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0CP@MPBGJGO@ScriptRegistrant?$DMclass?5RA_Driver@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_DriverDeath@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_DriverDeath@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_DriverDeath>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_DriverDeath@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_DriverDeath@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_DriverDeath>::ScriptRegistrant<RA_DriverDeath>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_DriverDeath@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_DriverDeath@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_DriverDeath>::ScriptRegistrant<RA_DriverDeath>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_GameStart_Detector_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_GameStart_Detector_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_GameStart_Detector_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_GameStart_Detector_Registrant@@3V?$ScriptRegistrant@VRA_GameStart_Detector@@@@A ; RA_GameStart_Detector_Registrant
	call	??1?$ScriptRegistrant@VRA_GameStart_Detector@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_GameStart_Detector_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_GameStart_Detector_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_GameStart_Detector_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_GameStart_Detector_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_GameStart_Detector_Registrant'', COMDAT

; 4001 : ScriptRegistrant<RA_GameStart_Detector> RA_GameStart_Detector_Registrant("RA_GameStart_Detector", "Interval=5.0:float,ReceiverID=0:int,Message=0:int,Parameter=0:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0EC@FPONCPAM@Interval?$DN5?40?3float?0ReceiverID?$DN0?3@
	push	OFFSET ??_C@_0BG@LLLIIPBA@RA_GameStart_Detector?$AA@
	mov	ecx, OFFSET ?RA_GameStart_Detector_Registrant@@3V?$ScriptRegistrant@VRA_GameStart_Detector@@@@A ; RA_GameStart_Detector_Registrant
	call	??0?$ScriptRegistrant@VRA_GameStart_Detector@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_GameStart_Detector>::ScriptRegistrant<RA_GameStart_Detector>
	push	OFFSET ??__FRA_GameStart_Detector_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_GameStart_Detector_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_GameStart_Detector_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_GameStart_Detector_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_GameStart_Detector@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_GameStart_Detector@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_GameStart_Detector>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_GameStart_Detector@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_GameStart_Detector@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_GameStart_Detector>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_GameStart_Detector@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_GameStart_Detector@@@@UAE@XZ PROC ; ScriptRegistrant<RA_GameStart_Detector>::~ScriptRegistrant<RA_GameStart_Detector>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_GameStart_Detector@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_GameStart_Detector>::~ScriptRegistrant<RA_GameStart_Detector>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_GameStart_Detector@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_GameStart_Detector@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_GameStart_Detector>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DG@FJOAKOGM@ScriptRegistrant?$DMclass?5RA_GameSt@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_GameStart_Detector@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_GameStart_Detector@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_GameStart_Detector>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_GameStart_Detector@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_GameStart_Detector@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_GameStart_Detector>::ScriptRegistrant<RA_GameStart_Detector>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_GameStart_Detector@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_GameStart_Detector@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_GameStart_Detector>::ScriptRegistrant<RA_GameStart_Detector>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Damaged_Credits_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Damaged_Credits_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Damaged_Credits_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Damaged_Credits_Registrant@@3V?$ScriptRegistrant@VRA_Damaged_Credits@@@@A ; RA_Damaged_Credits_Registrant
	call	??1?$ScriptRegistrant@VRA_Damaged_Credits@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Damaged_Credits_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Damaged_Credits_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Damaged_Credits_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Damaged_Credits_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Damaged_Credits_Registrant'', COMDAT

; 4000 : ScriptRegistrant<RA_Damaged_Credits> RA_Damaged_Credits_Registrant("RA_Damaged_Credits","Divisor=4.0:float");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BC@FGLCBCFK@Divisor?$DN4?40?3float?$AA@
	push	OFFSET ??_C@_0BD@MOIPLKEJ@RA_Damaged_Credits?$AA@
	mov	ecx, OFFSET ?RA_Damaged_Credits_Registrant@@3V?$ScriptRegistrant@VRA_Damaged_Credits@@@@A ; RA_Damaged_Credits_Registrant
	call	??0?$ScriptRegistrant@VRA_Damaged_Credits@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Damaged_Credits>::ScriptRegistrant<RA_Damaged_Credits>
	push	OFFSET ??__FRA_Damaged_Credits_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Damaged_Credits_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Damaged_Credits_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Damaged_Credits_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Damaged_Credits@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Damaged_Credits@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Damaged_Credits>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Damaged_Credits@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Damaged_Credits@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Damaged_Credits>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Damaged_Credits@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Damaged_Credits@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Damaged_Credits>::~ScriptRegistrant<RA_Damaged_Credits>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Damaged_Credits@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Damaged_Credits>::~ScriptRegistrant<RA_Damaged_Credits>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Damaged_Credits@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Damaged_Credits@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Damaged_Credits>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DD@PPADHAPK@ScriptRegistrant?$DMclass?5RA_Damage@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Damaged_Credits@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Damaged_Credits@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Damaged_Credits>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Damaged_Credits@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Damaged_Credits@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Damaged_Credits>::ScriptRegistrant<RA_Damaged_Credits>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Damaged_Credits@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Damaged_Credits@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Damaged_Credits>::ScriptRegistrant<RA_Damaged_Credits>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Naval_Zone_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Naval_Zone_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Naval_Zone_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Naval_Zone_Registrant@@3V?$ScriptRegistrant@VRA_Naval_Zone@@@@A ; RA_Naval_Zone_Registrant
	call	??1?$ScriptRegistrant@VRA_Naval_Zone@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Naval_Zone_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Naval_Zone_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Naval_Zone_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Naval_Zone_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Naval_Zone_Registrant'', COMDAT

; 3999 : ScriptRegistrant<RA_Naval_Zone> RA_Naval_Zone_Registrant("RA_Naval_Zone", "Explosion=blank:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BH@LPAGAABD@Explosion?$DNblank?3string?$AA@
	push	OFFSET ??_C@_0O@BJNNJGMC@RA_Naval_Zone?$AA@
	mov	ecx, OFFSET ?RA_Naval_Zone_Registrant@@3V?$ScriptRegistrant@VRA_Naval_Zone@@@@A ; RA_Naval_Zone_Registrant
	call	??0?$ScriptRegistrant@VRA_Naval_Zone@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Naval_Zone>::ScriptRegistrant<RA_Naval_Zone>
	push	OFFSET ??__FRA_Naval_Zone_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Naval_Zone_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Naval_Zone_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Naval_Zone_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Naval_Zone@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Naval_Zone@@@@UAEPAXI@Z PROC	; ScriptRegistrant<RA_Naval_Zone>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Naval_Zone@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Naval_Zone@@@@UAEPAXI@Z ENDP	; ScriptRegistrant<RA_Naval_Zone>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Naval_Zone@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Naval_Zone@@@@UAE@XZ PROC	; ScriptRegistrant<RA_Naval_Zone>::~ScriptRegistrant<RA_Naval_Zone>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Naval_Zone@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_Naval_Zone>::~ScriptRegistrant<RA_Naval_Zone>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Naval_Zone@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Naval_Zone@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Naval_Zone>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0CO@BKDIHCIG@ScriptRegistrant?$DMclass?5RA_Naval_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Naval_Zone@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Naval_Zone@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Naval_Zone>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Naval_Zone@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Naval_Zone@@@@QAE@PBD0@Z PROC	; ScriptRegistrant<RA_Naval_Zone>::ScriptRegistrant<RA_Naval_Zone>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Naval_Zone@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Naval_Zone@@@@QAE@PBD0@Z ENDP	; ScriptRegistrant<RA_Naval_Zone>::ScriptRegistrant<RA_Naval_Zone>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Naval_Unit_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Naval_Unit_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Naval_Unit_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Naval_Unit_Registrant@@3V?$ScriptRegistrant@VRA_Naval_Unit@@@@A ; RA_Naval_Unit_Registrant
	call	??1?$ScriptRegistrant@VRA_Naval_Unit@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Naval_Unit_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Naval_Unit_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Naval_Unit_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Naval_Unit_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Naval_Unit_Registrant'', COMDAT

; 3998 : ScriptRegistrant<RA_Naval_Unit> RA_Naval_Unit_Registrant("RA_Naval_Unit", "Controller_ID=0:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BE@DPAOAOHB@Controller_ID?$DN0?3int?$AA@
	push	OFFSET ??_C@_0O@HFKHFDOD@RA_Naval_Unit?$AA@
	mov	ecx, OFFSET ?RA_Naval_Unit_Registrant@@3V?$ScriptRegistrant@VRA_Naval_Unit@@@@A ; RA_Naval_Unit_Registrant
	call	??0?$ScriptRegistrant@VRA_Naval_Unit@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Naval_Unit>::ScriptRegistrant<RA_Naval_Unit>
	push	OFFSET ??__FRA_Naval_Unit_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Naval_Unit_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Naval_Unit_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Naval_Unit_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Naval_Unit@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Naval_Unit@@@@UAEPAXI@Z PROC	; ScriptRegistrant<RA_Naval_Unit>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Naval_Unit@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Naval_Unit@@@@UAEPAXI@Z ENDP	; ScriptRegistrant<RA_Naval_Unit>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Naval_Unit@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Naval_Unit@@@@UAE@XZ PROC	; ScriptRegistrant<RA_Naval_Unit>::~ScriptRegistrant<RA_Naval_Unit>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Naval_Unit@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_Naval_Unit>::~ScriptRegistrant<RA_Naval_Unit>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Naval_Unit@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Naval_Unit@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Naval_Unit>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0CO@IKNKONHB@ScriptRegistrant?$DMclass?5RA_Naval_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Naval_Unit@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Naval_Unit@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Naval_Unit>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Naval_Unit@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Naval_Unit@@@@QAE@PBD0@Z PROC	; ScriptRegistrant<RA_Naval_Unit>::ScriptRegistrant<RA_Naval_Unit>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Naval_Unit@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Naval_Unit@@@@QAE@PBD0@Z ENDP	; ScriptRegistrant<RA_Naval_Unit>::ScriptRegistrant<RA_Naval_Unit>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Naval_PT_Pokable_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Naval_PT_Pokable_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Naval_PT_Pokable_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Naval_PT_Pokable_Registrant@@3V?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@A ; RA_Naval_PT_Pokable_Registrant
	call	??1?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Naval_PT_Pokable_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Naval_PT_Pokable_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Naval_PT_Pokable_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Naval_PT_Pokable_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Naval_PT_Pokable_Registrant'', COMDAT

; 3997 : ScriptRegistrant<RA_Naval_PT_Pokable> RA_Naval_PT_Pokable_Registrant("RA_Naval_PT_Pokable", "Preset_Name=blank:string,Cost=0.0:float,Team=0:int,Controller_ID=0:int,Zone_ID=0:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0FF@BNKMBPJO@Preset_Name?$DNblank?3string?0Cost?$DN0?4@
	push	OFFSET ??_C@_0BE@DAIDDDDB@RA_Naval_PT_Pokable?$AA@
	mov	ecx, OFFSET ?RA_Naval_PT_Pokable_Registrant@@3V?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@A ; RA_Naval_PT_Pokable_Registrant
	call	??0?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Naval_PT_Pokable>::ScriptRegistrant<RA_Naval_PT_Pokable>
	push	OFFSET ??__FRA_Naval_PT_Pokable_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Naval_PT_Pokable_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Naval_PT_Pokable_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Naval_PT_Pokable_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Naval_PT_Pokable>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Naval_PT_Pokable>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Naval_PT_Pokable>::~ScriptRegistrant<RA_Naval_PT_Pokable>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Naval_PT_Pokable>::~ScriptRegistrant<RA_Naval_PT_Pokable>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Naval_PT_Pokable>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DE@DMMBPLKA@ScriptRegistrant?$DMclass?5RA_Naval_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Naval_PT_Pokable@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Naval_PT_Pokable>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Naval_PT_Pokable>::ScriptRegistrant<RA_Naval_PT_Pokable>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Naval_PT_Pokable@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Naval_PT_Pokable>::ScriptRegistrant<RA_Naval_PT_Pokable>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Naval_Yard_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Naval_Yard_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Naval_Yard_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Naval_Yard_Registrant@@3V?$ScriptRegistrant@VRA_Naval_Yard@@@@A ; RA_Naval_Yard_Registrant
	call	??1?$ScriptRegistrant@VRA_Naval_Yard@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Naval_Yard_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Naval_Yard_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Naval_Yard_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Naval_Yard_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Naval_Yard_Registrant'', COMDAT

; 3996 : ScriptRegistrant<RA_Naval_Yard> RA_Naval_Yard_Registrant("RA_Naval_Yard", "Limit=8:int,Disable_Time=5.0:float");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0CD@GOLPBKIF@Limit?$DN8?3int?0Disable_Time?$DN5?40?3flo@
	push	OFFSET ??_C@_0O@LCIFPAHE@RA_Naval_Yard?$AA@
	mov	ecx, OFFSET ?RA_Naval_Yard_Registrant@@3V?$ScriptRegistrant@VRA_Naval_Yard@@@@A ; RA_Naval_Yard_Registrant
	call	??0?$ScriptRegistrant@VRA_Naval_Yard@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Naval_Yard>::ScriptRegistrant<RA_Naval_Yard>
	push	OFFSET ??__FRA_Naval_Yard_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Naval_Yard_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Naval_Yard_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Naval_Yard_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Naval_Yard@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Naval_Yard@@@@UAEPAXI@Z PROC	; ScriptRegistrant<RA_Naval_Yard>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Naval_Yard@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Naval_Yard@@@@UAEPAXI@Z ENDP	; ScriptRegistrant<RA_Naval_Yard>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Naval_Yard@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Naval_Yard@@@@UAE@XZ PROC	; ScriptRegistrant<RA_Naval_Yard>::~ScriptRegistrant<RA_Naval_Yard>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Naval_Yard@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_Naval_Yard>::~ScriptRegistrant<RA_Naval_Yard>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Naval_Yard@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Naval_Yard@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Naval_Yard>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0CO@FECDCEFA@ScriptRegistrant?$DMclass?5RA_Naval_@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Naval_Yard@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Naval_Yard@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Naval_Yard>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Naval_Yard@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Naval_Yard@@@@QAE@PBD0@Z PROC	; ScriptRegistrant<RA_Naval_Yard>::ScriptRegistrant<RA_Naval_Yard>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Naval_Yard@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Naval_Yard@@@@QAE@PBD0@Z ENDP	; ScriptRegistrant<RA_Naval_Yard>::ScriptRegistrant<RA_Naval_Yard>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_ObjectDeath_OnCreate_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_ObjectDeath_OnCreate_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_ObjectDeath_OnCreate_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_ObjectDeath_OnCreate_Registrant@@3V?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@A ; RA_ObjectDeath_OnCreate_Registrant
	call	??1?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_ObjectDeath_OnCreate_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_ObjectDeath_OnCreate_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_ObjectDeath_OnCreate_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_ObjectDeath_OnCreate_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_ObjectDeath_OnCreate_Registrant'', COMDAT

; 3995 : ScriptRegistrant<RA_ObjectDeath_OnCreate> RA_ObjectDeath_OnCreate_Registrant("RA_ObjectDeath_OnCreate","Object=null:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BD@OABGKEKH@Object?$DNnull?3string?$AA@
	push	OFFSET ??_C@_0BI@OODHAHCJ@RA_ObjectDeath_OnCreate?$AA@
	mov	ecx, OFFSET ?RA_ObjectDeath_OnCreate_Registrant@@3V?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@A ; RA_ObjectDeath_OnCreate_Registrant
	call	??0?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::ScriptRegistrant<RA_ObjectDeath_OnCreate>
	push	OFFSET ??__FRA_ObjectDeath_OnCreate_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_ObjectDeath_OnCreate_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_ObjectDeath_OnCreate_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_ObjectDeath_OnCreate_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@UAE@XZ PROC ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::~ScriptRegistrant<RA_ObjectDeath_OnCreate>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::~ScriptRegistrant<RA_ObjectDeath_OnCreate>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DI@HEBCOBOO@ScriptRegistrant?$DMclass?5RA_Object@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_ObjectDeath_OnCreate@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::ScriptRegistrant<RA_ObjectDeath_OnCreate>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_ObjectDeath_OnCreate@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_ObjectDeath_OnCreate>::ScriptRegistrant<RA_ObjectDeath_OnCreate>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Mine_Manager_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Mine_Manager_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Mine_Manager_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Mine_Manager_Registrant@@3V?$ScriptRegistrant@VRA_Mine_Manager@@@@A ; RA_Mine_Manager_Registrant
	call	??1?$ScriptRegistrant@VRA_Mine_Manager@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Mine_Manager_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Mine_Manager_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Mine_Manager_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Mine_Manager_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Mine_Manager_Registrant'', COMDAT

; 3994 : ScriptRegistrant<RA_Mine_Manager> RA_Mine_Manager_Registrant("RA_Mine_Manager", "Allied_Mine=Blank:string,Soviet_Mine=Blank:string,Mine_Reload=Blank:string,BoneName=mine:string,Mine_Limit=30:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0HC@KCKGPIHO@Allied_Mine?$DNBlank?3string?0Soviet_@
	push	OFFSET ??_C@_0BA@HFOOKAAN@RA_Mine_Manager?$AA@
	mov	ecx, OFFSET ?RA_Mine_Manager_Registrant@@3V?$ScriptRegistrant@VRA_Mine_Manager@@@@A ; RA_Mine_Manager_Registrant
	call	??0?$ScriptRegistrant@VRA_Mine_Manager@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Mine_Manager>::ScriptRegistrant<RA_Mine_Manager>
	push	OFFSET ??__FRA_Mine_Manager_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Mine_Manager_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Mine_Manager_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Mine_Manager_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Mine_Manager@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Mine_Manager@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Mine_Manager>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Mine_Manager@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Mine_Manager@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Mine_Manager>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Mine_Manager@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Mine_Manager@@@@UAE@XZ PROC	; ScriptRegistrant<RA_Mine_Manager>::~ScriptRegistrant<RA_Mine_Manager>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Mine_Manager@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_Mine_Manager>::~ScriptRegistrant<RA_Mine_Manager>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Mine_Manager@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Mine_Manager@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Mine_Manager>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DA@BLJNGFMB@ScriptRegistrant?$DMclass?5RA_Mine_M@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Mine_Manager@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Mine_Manager@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Mine_Manager>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Mine_Manager@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Mine_Manager@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Mine_Manager>::ScriptRegistrant<RA_Mine_Manager>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Mine_Manager@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Mine_Manager@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Mine_Manager>::ScriptRegistrant<RA_Mine_Manager>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Mine_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Mine_Registrant@@YAXXZ PROC			; `dynamic atexit destructor for 'RA_Mine_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Mine_Registrant@@3V?$ScriptRegistrant@VRA_Mine@@@@A ; RA_Mine_Registrant
	call	??1?$ScriptRegistrant@VRA_Mine@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Mine_Registrant@@YAXXZ ENDP			; `dynamic atexit destructor for 'RA_Mine_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Mine_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Mine_Registrant@@YAXXZ PROC			; `dynamic initializer for 'RA_Mine_Registrant'', COMDAT

; 3993 : ScriptRegistrant<RA_Mine> RA_Mine_Registrant("RA_Mine", "Mine_Manager_ID=0:int,Is_Anti-Personnel=0:int,Is_Anti-Tank=0:int,Trigger_Damage=1.0:float,Trigger_Warhead=Death:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0HH@MHEDFFNG@Mine_Manager_ID?$DN0?3int?0Is_Anti?9Pe@
	push	OFFSET ??_C@_07COPEENHL@RA_Mine?$AA@
	mov	ecx, OFFSET ?RA_Mine_Registrant@@3V?$ScriptRegistrant@VRA_Mine@@@@A ; RA_Mine_Registrant
	call	??0?$ScriptRegistrant@VRA_Mine@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Mine>::ScriptRegistrant<RA_Mine>
	push	OFFSET ??__FRA_Mine_Registrant@@YAXXZ	; `dynamic atexit destructor for 'RA_Mine_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Mine_Registrant@@YAXXZ ENDP			; `dynamic initializer for 'RA_Mine_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Mine@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Mine@@@@UAEPAXI@Z PROC	; ScriptRegistrant<RA_Mine>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Mine@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Mine@@@@UAEPAXI@Z ENDP	; ScriptRegistrant<RA_Mine>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Mine@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Mine@@@@UAE@XZ PROC		; ScriptRegistrant<RA_Mine>::~ScriptRegistrant<RA_Mine>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Mine@@@@UAE@XZ ENDP		; ScriptRegistrant<RA_Mine>::~ScriptRegistrant<RA_Mine>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Mine@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Mine@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Mine>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0CI@OFDNLEKC@ScriptRegistrant?$DMclass?5RA_Mine?$DO?3@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Mine@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Mine@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Mine>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Mine@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Mine@@@@QAE@PBD0@Z PROC	; ScriptRegistrant<RA_Mine>::ScriptRegistrant<RA_Mine>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Mine@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Mine@@@@QAE@PBD0@Z ENDP	; ScriptRegistrant<RA_Mine>::ScriptRegistrant<RA_Mine>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_MineLayer_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_MineLayer_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_MineLayer_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_MineLayer_Registrant@@3V?$ScriptRegistrant@VRA_MineLayer@@@@A ; RA_MineLayer_Registrant
	call	??1?$ScriptRegistrant@VRA_MineLayer@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_MineLayer_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_MineLayer_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_MineLayer_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_MineLayer_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_MineLayer_Registrant'', COMDAT

; 3992 : ScriptRegistrant<RA_MineLayer> RA_MineLayer_Registrant("RA_MineLayer", "Mine_Manager_ID=0:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BG@EKBLJKOH@Mine_Manager_ID?$DN0?3int?$AA@
	push	OFFSET ??_C@_0N@MHFMOKFN@RA_MineLayer?$AA@
	mov	ecx, OFFSET ?RA_MineLayer_Registrant@@3V?$ScriptRegistrant@VRA_MineLayer@@@@A ; RA_MineLayer_Registrant
	call	??0?$ScriptRegistrant@VRA_MineLayer@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_MineLayer>::ScriptRegistrant<RA_MineLayer>
	push	OFFSET ??__FRA_MineLayer_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_MineLayer_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_MineLayer_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_MineLayer_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_MineLayer@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_MineLayer@@@@UAEPAXI@Z PROC	; ScriptRegistrant<RA_MineLayer>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_MineLayer@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_MineLayer@@@@UAEPAXI@Z ENDP	; ScriptRegistrant<RA_MineLayer>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_MineLayer@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_MineLayer@@@@UAE@XZ PROC	; ScriptRegistrant<RA_MineLayer>::~ScriptRegistrant<RA_MineLayer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_MineLayer@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_MineLayer>::~ScriptRegistrant<RA_MineLayer>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_MineLayer@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_MineLayer@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_MineLayer>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0CN@FILGJJPD@ScriptRegistrant?$DMclass?5RA_MineLa@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_MineLayer@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_MineLayer@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_MineLayer>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_MineLayer@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_MineLayer@@@@QAE@PBD0@Z PROC	; ScriptRegistrant<RA_MineLayer>::ScriptRegistrant<RA_MineLayer>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_MineLayer@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_MineLayer@@@@QAE@PBD0@Z ENDP	; ScriptRegistrant<RA_MineLayer>::ScriptRegistrant<RA_MineLayer>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Helipad_Zone_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Helipad_Zone_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Helipad_Zone_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Helipad_Zone_Registrant@@3V?$ScriptRegistrant@VRA_Helipad_Zone@@@@A ; RA_Helipad_Zone_Registrant
	call	??1?$ScriptRegistrant@VRA_Helipad_Zone@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Helipad_Zone_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Helipad_Zone_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Helipad_Zone_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Helipad_Zone_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Helipad_Zone_Registrant'', COMDAT

; 3991 : ScriptRegistrant<RA_Helipad_Zone> RA_Helipad_Zone_Registrant("RA_Helipad_Zone", "TeamSelection=0:int,Reload_Interval=2.00:float,Apache_Preset_ID=0:int,Apache_Reload_Powerup=Blank:string,Hind_Preset_ID=0:int,Hind_Reload_Powerup=Blank:string");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0JP@MJKKDFJK@TeamSelection?$DN0?3int?0Reload_Inter@
	push	OFFSET ??_C@_0BA@FLIHAMBL@RA_Helipad_Zone?$AA@
	mov	ecx, OFFSET ?RA_Helipad_Zone_Registrant@@3V?$ScriptRegistrant@VRA_Helipad_Zone@@@@A ; RA_Helipad_Zone_Registrant
	call	??0?$ScriptRegistrant@VRA_Helipad_Zone@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Helipad_Zone>::ScriptRegistrant<RA_Helipad_Zone>
	push	OFFSET ??__FRA_Helipad_Zone_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Helipad_Zone_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Helipad_Zone_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Helipad_Zone_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Helipad_Zone@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Helipad_Zone@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Helipad_Zone>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Helipad_Zone@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Helipad_Zone@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Helipad_Zone>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Helipad_Zone@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Helipad_Zone@@@@UAE@XZ PROC	; ScriptRegistrant<RA_Helipad_Zone>::~ScriptRegistrant<RA_Helipad_Zone>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Helipad_Zone@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_Helipad_Zone>::~ScriptRegistrant<RA_Helipad_Zone>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Helipad_Zone@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Helipad_Zone@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Helipad_Zone>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DA@BKCNMBIJ@ScriptRegistrant?$DMclass?5RA_Helipa@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Helipad_Zone@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Helipad_Zone@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Helipad_Zone>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Helipad_Zone@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Helipad_Zone@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Helipad_Zone>::ScriptRegistrant<RA_Helipad_Zone>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Helipad_Zone@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Helipad_Zone@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Helipad_Zone>::ScriptRegistrant<RA_Helipad_Zone>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Infantry_NotSpy_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Infantry_NotSpy_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Infantry_NotSpy_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Infantry_NotSpy_Registrant@@3V?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@A ; RA_Infantry_NotSpy_Registrant
	call	??1?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Infantry_NotSpy_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Infantry_NotSpy_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Infantry_NotSpy_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Infantry_NotSpy_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Infantry_NotSpy_Registrant'', COMDAT

; 3990 : ScriptRegistrant<RA_Infantry_NotSpy> RA_Infantry_NotSpy_Registrant("RA_Infantry_NotSpy", "");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BD@BCCDCMEJ@RA_Infantry_NotSpy?$AA@
	mov	ecx, OFFSET ?RA_Infantry_NotSpy_Registrant@@3V?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@A ; RA_Infantry_NotSpy_Registrant
	call	??0?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Infantry_NotSpy>::ScriptRegistrant<RA_Infantry_NotSpy>
	push	OFFSET ??__FRA_Infantry_NotSpy_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Infantry_NotSpy_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Infantry_NotSpy_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Infantry_NotSpy_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Infantry_NotSpy>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Infantry_NotSpy>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Infantry_NotSpy>::~ScriptRegistrant<RA_Infantry_NotSpy>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Infantry_NotSpy>::~ScriptRegistrant<RA_Infantry_NotSpy>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Infantry_NotSpy>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DD@PDBLKIMC@ScriptRegistrant?$DMclass?5RA_Infant@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Infantry_NotSpy@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Infantry_NotSpy>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Infantry_NotSpy>::ScriptRegistrant<RA_Infantry_NotSpy>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Infantry_NotSpy@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Infantry_NotSpy>::ScriptRegistrant<RA_Infantry_NotSpy>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Infantry_Spy_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Infantry_Spy_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Infantry_Spy_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Infantry_Spy_Registrant@@3V?$ScriptRegistrant@VRA_Infantry_Spy@@@@A ; RA_Infantry_Spy_Registrant
	call	??1?$ScriptRegistrant@VRA_Infantry_Spy@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Infantry_Spy_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Infantry_Spy_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Infantry_Spy_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Infantry_Spy_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Infantry_Spy_Registrant'', COMDAT

; 3989 : ScriptRegistrant<RA_Infantry_Spy> RA_Infantry_Spy_Registrant("RA_Infantry_Spy", "");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BA@BILJLNN@RA_Infantry_Spy?$AA@
	mov	ecx, OFFSET ?RA_Infantry_Spy_Registrant@@3V?$ScriptRegistrant@VRA_Infantry_Spy@@@@A ; RA_Infantry_Spy_Registrant
	call	??0?$ScriptRegistrant@VRA_Infantry_Spy@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Infantry_Spy>::ScriptRegistrant<RA_Infantry_Spy>
	push	OFFSET ??__FRA_Infantry_Spy_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Infantry_Spy_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Infantry_Spy_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Infantry_Spy_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Infantry_Spy@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Infantry_Spy@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Infantry_Spy>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Infantry_Spy@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Infantry_Spy@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Infantry_Spy>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Infantry_Spy@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Infantry_Spy@@@@UAE@XZ PROC	; ScriptRegistrant<RA_Infantry_Spy>::~ScriptRegistrant<RA_Infantry_Spy>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Infantry_Spy@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_Infantry_Spy>::~ScriptRegistrant<RA_Infantry_Spy>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Infantry_Spy@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Infantry_Spy@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Infantry_Spy>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DA@JOAAEHEG@ScriptRegistrant?$DMclass?5RA_Infant@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Infantry_Spy@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Infantry_Spy@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Infantry_Spy>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Infantry_Spy@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Infantry_Spy@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Infantry_Spy>::ScriptRegistrant<RA_Infantry_Spy>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Infantry_Spy@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Infantry_Spy@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Infantry_Spy>::ScriptRegistrant<RA_Infantry_Spy>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Repair_Script_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Repair_Script_Registrant@@YAXXZ PROC		; `dynamic atexit destructor for 'RA_Repair_Script_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Repair_Script_Registrant@@3V?$ScriptRegistrant@VRA_Repair_Script@@@@A ; RA_Repair_Script_Registrant
	call	??1?$ScriptRegistrant@VRA_Repair_Script@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Repair_Script_Registrant@@YAXXZ ENDP		; `dynamic atexit destructor for 'RA_Repair_Script_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Repair_Script_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Repair_Script_Registrant@@YAXXZ PROC		; `dynamic initializer for 'RA_Repair_Script_Registrant'', COMDAT

; 3988 : ScriptRegistrant<RA_Repair_Script> RA_Repair_Script_Registrant("RA_Repair_Script","TeamSelection=0:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BE@GBPECEAC@TeamSelection?$DN0?3int?$AA@
	push	OFFSET ??_C@_0BB@KLPHPIGA@RA_Repair_Script?$AA@
	mov	ecx, OFFSET ?RA_Repair_Script_Registrant@@3V?$ScriptRegistrant@VRA_Repair_Script@@@@A ; RA_Repair_Script_Registrant
	call	??0?$ScriptRegistrant@VRA_Repair_Script@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Repair_Script>::ScriptRegistrant<RA_Repair_Script>
	push	OFFSET ??__FRA_Repair_Script_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Repair_Script_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Repair_Script_Registrant@@YAXXZ ENDP		; `dynamic initializer for 'RA_Repair_Script_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Repair_Script@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Repair_Script@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Repair_Script>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Repair_Script@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Repair_Script@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Repair_Script>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Repair_Script@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Repair_Script@@@@UAE@XZ PROC	; ScriptRegistrant<RA_Repair_Script>::~ScriptRegistrant<RA_Repair_Script>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Repair_Script@@@@UAE@XZ ENDP	; ScriptRegistrant<RA_Repair_Script>::~ScriptRegistrant<RA_Repair_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Repair_Script@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Repair_Script@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Repair_Script>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DB@DAMBEEDH@ScriptRegistrant?$DMclass?5RA_Repair@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Repair_Script@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Repair_Script@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Repair_Script>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Repair_Script@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Repair_Script@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Repair_Script>::ScriptRegistrant<RA_Repair_Script>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Repair_Script@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Repair_Script@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Repair_Script>::ScriptRegistrant<RA_Repair_Script>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__FRA_Repair_Controller_Registrant@@YAXXZ
text$yd	SEGMENT
??__FRA_Repair_Controller_Registrant@@YAXXZ PROC	; `dynamic atexit destructor for 'RA_Repair_Controller_Registrant'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?RA_Repair_Controller_Registrant@@3V?$ScriptRegistrant@VRA_Repair_Controller@@@@A ; RA_Repair_Controller_Registrant
	call	??1?$ScriptRegistrant@VRA_Repair_Controller@@@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__FRA_Repair_Controller_Registrant@@YAXXZ ENDP	; `dynamic atexit destructor for 'RA_Repair_Controller_Registrant''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ??__ERA_Repair_Controller_Registrant@@YAXXZ
text$yc	SEGMENT
??__ERA_Repair_Controller_Registrant@@YAXXZ PROC	; `dynamic initializer for 'RA_Repair_Controller_Registrant'', COMDAT

; 3987 : ScriptRegistrant<RA_Repair_Controller> RA_Repair_Controller_Registrant("RA_Repair_Controller","ScriptZoneID=0:int");

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	OFFSET ??_C@_0BD@JOHJGBBA@ScriptZoneID?$DN0?3int?$AA@
	push	OFFSET ??_C@_0BF@DCBEKJC@RA_Repair_Controller?$AA@
	mov	ecx, OFFSET ?RA_Repair_Controller_Registrant@@3V?$ScriptRegistrant@VRA_Repair_Controller@@@@A ; RA_Repair_Controller_Registrant
	call	??0?$ScriptRegistrant@VRA_Repair_Controller@@@@QAE@PBD0@Z ; ScriptRegistrant<RA_Repair_Controller>::ScriptRegistrant<RA_Repair_Controller>
	push	OFFSET ??__FRA_Repair_Controller_Registrant@@YAXXZ ; `dynamic atexit destructor for 'RA_Repair_Controller_Registrant''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__ERA_Repair_Controller_Registrant@@YAXXZ ENDP	; `dynamic initializer for 'RA_Repair_Controller_Registrant''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$ScriptRegistrant@VRA_Repair_Controller@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$ScriptRegistrant@VRA_Repair_Controller@@@@UAEPAXI@Z PROC ; ScriptRegistrant<RA_Repair_Controller>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ScriptRegistrant@VRA_Repair_Controller@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$ScriptRegistrant@VRA_Repair_Controller@@@@UAEPAXI@Z ENDP ; ScriptRegistrant<RA_Repair_Controller>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$ScriptRegistrant@VRA_Repair_Controller@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$ScriptRegistrant@VRA_Repair_Controller@@@@UAE@XZ PROC ; ScriptRegistrant<RA_Repair_Controller>::~ScriptRegistrant<RA_Repair_Controller>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$ScriptRegistrant@VRA_Repair_Controller@@@@UAE@XZ ENDP ; ScriptRegistrant<RA_Repair_Controller>::~ScriptRegistrant<RA_Repair_Controller>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Create@?$ScriptRegistrant@VRA_Repair_Controller@@@@UAEPAVScriptImpClass@@XZ
_TEXT	SEGMENT
tv77 = -84						; size = 4
tv79 = -80						; size = 4
$T1 = -76						; size = 4
_script$ = -8						; size = 4
_this$ = -4						; size = 4
?Create@?$ScriptRegistrant@VRA_Repair_Controller@@@@UAEPAVScriptImpClass@@XZ PROC ; ScriptRegistrant<RA_Repair_Controller>::Create, COMDAT
; _this$ = ecx

; 552  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 553  : 		T* script = new T;

	push	OFFSET ??_C@_0DF@MHNGCFKE@ScriptRegistrant?$DMclass?5RA_Repair@
	push	553					; 00000229H
	push	OFFSET ??_C@_0DD@KMKBFFOF@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Create
	xor	ecx, ecx
	jne	SHORT $LN3@Create
	push	553					; 00000229H
	push	OFFSET ??_C@_1GG@OGNLNBPD@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@Create:
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@Create
$LN6@Create:
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN4@Create
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0RA_Repair_Controller@@QAE@XZ
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	DWORD PTR tv77[ebp], 0
$LN5@Create:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN7@Create:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _script$[ebp], ecx

; 554  : 		script->SetFactory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _script$[ebp]
	call	?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ; ScriptImpClass::SetFactory

; 555  : 		script->Register_Auto_Save_Variables();

	mov	eax, DWORD PTR _script$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _script$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 556  : 		return script;

	mov	eax, DWORD PTR _script$[ebp]

; 557  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@?$ScriptRegistrant@VRA_Repair_Controller@@@@UAEPAVScriptImpClass@@XZ ENDP ; ScriptRegistrant<RA_Repair_Controller>::Create
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0?$ScriptRegistrant@VRA_Repair_Controller@@@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_param$ = 12						; size = 4
??0?$ScriptRegistrant@VRA_Repair_Controller@@@@QAE@PBD0@Z PROC ; ScriptRegistrant<RA_Repair_Controller>::ScriptRegistrant<RA_Repair_Controller>, COMDAT
; _this$ = ecx

; 549  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptFactory@@IAE@PBD0@Z		; ScriptFactory::ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$ScriptRegistrant@VRA_Repair_Controller@@@@6B@

; 550  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$ScriptRegistrant@VRA_Repair_Controller@@@@QAE@PBD0@Z ENDP ; ScriptRegistrant<RA_Repair_Controller>::ScriptRegistrant<RA_Repair_Controller>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\coltest.h
;	COMDAT ?Cull@OBBoxCollisionTestClass@@QAE_NABVVector3@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_min$ = 8						; size = 4
_max$ = 12						; size = 4
?Cull@OBBoxCollisionTestClass@@QAE_NABVVector3@@0@Z PROC ; OBBoxCollisionTestClass::Cull, COMDAT
; _this$ = ecx

; 148  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 149  : 	if ((SweepMin.X > max.X) || (SweepMax.X < min.X))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _max$[ebp]
	movss	xmm0, DWORD PTR [eax+84]
	comiss	xmm0, DWORD PTR [ecx]
	ja	SHORT $LN5@Cull
	mov	eax, DWORD PTR _min$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	comiss	xmm0, DWORD PTR [ecx+96]
	jbe	SHORT $LN6@Cull
$LN5@Cull:

; 150  : 	{
; 151  : 		return true;

	mov	al, 1
	jmp	SHORT $LN7@Cull
$LN6@Cull:

; 152  : 	}
; 153  : 	if ((SweepMin.Y > max.Y) || (SweepMax.Y < min.Y))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _max$[ebp]
	movss	xmm0, DWORD PTR [eax+88]
	comiss	xmm0, DWORD PTR [ecx+4]
	ja	SHORT $LN3@Cull
	mov	eax, DWORD PTR _min$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	comiss	xmm0, DWORD PTR [ecx+100]
	jbe	SHORT $LN4@Cull
$LN3@Cull:

; 154  : 	{
; 155  : 		return true;

	mov	al, 1
	jmp	SHORT $LN7@Cull
$LN4@Cull:

; 156  : 	}
; 157  : 	if ((SweepMin.Z > max.Z) || (SweepMax.Z < min.Z))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _max$[ebp]
	movss	xmm0, DWORD PTR [eax+92]
	comiss	xmm0, DWORD PTR [ecx+8]
	ja	SHORT $LN1@Cull
	mov	eax, DWORD PTR _min$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	comiss	xmm0, DWORD PTR [ecx+104]
	jbe	SHORT $LN2@Cull
$LN1@Cull:

; 158  : 	{
; 159  : 		return true;

	mov	al, 1
	jmp	SHORT $LN7@Cull
$LN2@Cull:

; 160  : 	}
; 161  : 	return false;

	xor	al, al
$LN7@Cull:

; 162  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Cull@OBBoxCollisionTestClass@@QAE_NABVVector3@@0@Z ENDP ; OBBoxCollisionTestClass::Cull
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\coltest.h
;	COMDAT ?Translate@AABoxCollisionTestClass@@QAEXABVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_translation$ = 8					; size = 4
?Translate@AABoxCollisionTestClass@@QAEXABVVector3@@@Z PROC ; AABoxCollisionTestClass::Translate, COMDAT
; _this$ = ecx

; 106  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 107  : 	Box.Center += translation;

	mov	eax, DWORD PTR _translation$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator+=

; 108  : 	SweepMin += translation;

	mov	eax, DWORD PTR _translation$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??YVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator+=

; 109  : 	SweepMax += translation;

	mov	eax, DWORD PTR _translation$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??YVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator+=

; 110  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Translate@AABoxCollisionTestClass@@QAEXABVVector3@@@Z ENDP ; AABoxCollisionTestClass::Translate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\coltest.h
;	COMDAT ?Cull@AABoxCollisionTestClass@@QAE_NABVVector3@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_min$ = 8						; size = 4
_max$ = 12						; size = 4
?Cull@AABoxCollisionTestClass@@QAE_NABVVector3@@0@Z PROC ; AABoxCollisionTestClass::Cull, COMDAT
; _this$ = ecx

; 113  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 	if ((SweepMin.X > max.X) || (SweepMax.X < min.X))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _max$[ebp]
	movss	xmm0, DWORD PTR [eax+48]
	comiss	xmm0, DWORD PTR [ecx]
	ja	SHORT $LN5@Cull
	mov	eax, DWORD PTR _min$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	comiss	xmm0, DWORD PTR [ecx+60]
	jbe	SHORT $LN6@Cull
$LN5@Cull:

; 115  : 	{
; 116  : 		return true;

	mov	al, 1
	jmp	SHORT $LN7@Cull
$LN6@Cull:

; 117  : 	}
; 118  : 	if ((SweepMin.Y > max.Y) || (SweepMax.Y < min.Y))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _max$[ebp]
	movss	xmm0, DWORD PTR [eax+52]
	comiss	xmm0, DWORD PTR [ecx+4]
	ja	SHORT $LN3@Cull
	mov	eax, DWORD PTR _min$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	comiss	xmm0, DWORD PTR [ecx+64]
	jbe	SHORT $LN4@Cull
$LN3@Cull:

; 119  : 	{
; 120  : 		return true;

	mov	al, 1
	jmp	SHORT $LN7@Cull
$LN4@Cull:

; 121  : 	}
; 122  : 	if ((SweepMin.Z > max.Z) || (SweepMax.Z < min.Z))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _max$[ebp]
	movss	xmm0, DWORD PTR [eax+56]
	comiss	xmm0, DWORD PTR [ecx+8]
	ja	SHORT $LN1@Cull
	mov	eax, DWORD PTR _min$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	comiss	xmm0, DWORD PTR [ecx+68]
	jbe	SHORT $LN2@Cull
$LN1@Cull:

; 123  : 	{
; 124  : 		return true;

	mov	al, 1
	jmp	SHORT $LN7@Cull
$LN2@Cull:

; 125  : 	}
; 126  : 	return false;

	xor	al, al
$LN7@Cull:

; 127  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Cull@AABoxCollisionTestClass@@QAE_NABVVector3@@0@Z ENDP ; AABoxCollisionTestClass::Cull
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CollisionTestClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CollisionTestClass@@QAEAAV0@ABV0@@Z PROC		; CollisionTestClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4CollisionTestClass@@QAEAAV0@ABV0@@Z ENDP		; CollisionTestClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\coltest.h
;	COMDAT ??0CollisionTestClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_that$ = 8						; size = 4
??0CollisionTestClass@@QAE@ABV0@@Z PROC			; CollisionTestClass::CollisionTestClass, COMDAT
; _this$ = ecx

; 43   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 44   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0CollisionTestClass@@QAE@ABV0@@Z ENDP			; CollisionTestClass::CollisionTestClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\coltest.h
;	COMDAT ??0CollisionTestClass@@QAE@PAUCastResultStruct@@W4Collision_Type@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_res$ = 8						; size = 4
_collision_type$ = 12					; size = 4
??0CollisionTestClass@@QAE@PAUCastResultStruct@@W4Collision_Type@@@Z PROC ; CollisionTestClass::CollisionTestClass, COMDAT
; _this$ = ecx

; 36   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _res$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _collision_type$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 37   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0CollisionTestClass@@QAE@PAUCastResultStruct@@W4Collision_Type@@@Z ENDP ; CollisionTestClass::CollisionTestClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_ECollideableObjClass@AnimCollisionManagerClass@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_ECollideableObjClass@AnimCollisionManagerClass@@QAEPAXI@Z PROC ; AnimCollisionManagerClass::CollideableObjClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1CollideableObjClass@AnimCollisionManagerClass@@QAE@XZ ; AnimCollisionManagerClass::CollideableObjClass::~CollideableObjClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	100					; 00000064H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CollideableObjClass@AnimCollisionManagerClass@@QAE@XZ ; AnimCollisionManagerClass::CollideableObjClass::~CollideableObjClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECollideableObjClass@AnimCollisionManagerClass@@QAEPAXI@Z ENDP ; AnimCollisionManagerClass::CollideableObjClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\animcollisionmanagerclass.h
;	COMDAT ??1CollideableObjClass@AnimCollisionManagerClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CollideableObjClass@AnimCollisionManagerClass@@QAE@XZ PROC ; AnimCollisionManagerClass::CollideableObjClass::~CollideableObjClass, COMDAT
; _this$ = ecx

; 120  : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 121  : 			REF_PTR_RELEASE(CollisionMesh);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Collideabl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Release_Ref@RefCountClass@@QAEXXZ	; RefCountClass::Release_Ref
$LN1@Collideabl:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 122  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CollideableObjClass@AnimCollisionManagerClass@@QAE@XZ ENDP ; AnimCollisionManagerClass::CollideableObjClass::~CollideableObjClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4ArmorWarheadManager@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4ArmorWarheadManager@@QAEAAV0@ABV0@@Z PROC		; ArmorWarheadManager::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ArmorWarheadManager@@QAEAAV0@ABV0@@Z ENDP		; ArmorWarheadManager::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Superweapon_Beacon@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Superweapon_Beacon@@UAEPAXI@Z PROC		; RA_Superweapon_Beacon::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Superweapon_Beacon@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Superweapon_Beacon@@UAEPAXI@Z ENDP		; RA_Superweapon_Beacon::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Superweapon_Beacon@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Superweapon_Beacon@@UAE@XZ PROC			; RA_Superweapon_Beacon::~RA_Superweapon_Beacon, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Superweapon_Beacon@@UAE@XZ ENDP			; RA_Superweapon_Beacon::~RA_Superweapon_Beacon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Superweapon_Beacon@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Superweapon_Beacon@@QAE@XZ PROC			; RA_Superweapon_Beacon::RA_Superweapon_Beacon, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Superweapon_Beacon@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Superweapon_Beacon@@QAE@XZ ENDP			; RA_Superweapon_Beacon::RA_Superweapon_Beacon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Superweapon_Beacon@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
tv94 = -76						; size = 4
tv84 = -76						; size = 4
_silo$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Superweapon_Beacon@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Superweapon_Beacon::Created, COMDAT
; _this$ = ecx

; 3580 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3581 : 	GameObject *silo = Find_Object_By_Preset(2, Get_Parameter("SiloPresetName"));

	push	OFFSET ??_C@_0P@JAAENFLF@SiloPresetName?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	push	2
	call	?Find_Object_By_Preset@@YAPAVScriptableGameObj@@HPBD@Z ; Find_Object_By_Preset
	add	esp, 8
	mov	DWORD PTR _silo$[ebp], eax

; 3582 : 	if (silo->As_BuildingGameObj() && silo->As_BuildingGameObj()->As_SuperweaponGameObj())

	mov	eax, DWORD PTR _silo$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _silo$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	test	eax, eax
	je	SHORT $LN1@Created
	mov	eax, DWORD PTR _silo$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _silo$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	mov	DWORD PTR tv84[ebp], eax
	mov	ecx, DWORD PTR tv84[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv84[ebp]
	mov	eax, DWORD PTR [edx+172]
	call	eax
	test	eax, eax
	je	SHORT $LN1@Created

; 3583 : 	{
; 3584 : 		silo->As_BuildingGameObj()->As_SuperweaponGameObj()->Launch();

	mov	eax, DWORD PTR _silo$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _silo$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	mov	DWORD PTR tv94[ebp], eax
	mov	ecx, DWORD PTR tv94[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv94[ebp]
	mov	eax, DWORD PTR [edx+172]
	call	eax
	mov	ecx, eax
	call	?Launch@SuperweaponGameObj@@QAEXXZ	; SuperweaponGameObj::Launch
$LN1@Created:

; 3585 : 	}
; 3586 : 	Destroy_Script();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Destroy_Script@ScriptImpClass@@QAEXXZ	; ScriptImpClass::Destroy_Script

; 3587 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Superweapon_Beacon@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Superweapon_Beacon::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_MAD_Tank_Devolved@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_MAD_Tank_Devolved@@UAEPAXI@Z PROC		; RA_MAD_Tank_Devolved::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_MAD_Tank_Devolved@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_MAD_Tank_Devolved@@UAEPAXI@Z ENDP		; RA_MAD_Tank_Devolved::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_MAD_Tank_Devolved@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_MAD_Tank_Devolved@@UAE@XZ PROC			; RA_MAD_Tank_Devolved::~RA_MAD_Tank_Devolved, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JFW_Key_Hook_Base@@UAE@XZ		; JFW_Key_Hook_Base::~JFW_Key_Hook_Base
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_MAD_Tank_Devolved@@UAE@XZ ENDP			; RA_MAD_Tank_Devolved::~RA_MAD_Tank_Devolved
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_MAD_Tank_Devolved@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_MAD_Tank_Devolved@@QAE@XZ PROC			; RA_MAD_Tank_Devolved::RA_MAD_Tank_Devolved, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0JFW_Key_Hook_Base@@QAE@XZ		; JFW_Key_Hook_Base::JFW_Key_Hook_Base
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_MAD_Tank_Devolved@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_MAD_Tank_Devolved@@QAE@XZ ENDP			; RA_MAD_Tank_Devolved::RA_MAD_Tank_Devolved
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_MAD_Tank_Devolved@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_MAD_Tank_Devolved@@UAEXXZ PROC ; RA_MAD_Tank_Devolved::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 3979 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3980 : 	Auto_Save_Variable(&deployed,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3981 : 	Auto_Save_Variable(&newobjID,4,3);

	push	3
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3982 : 	Auto_Save_Variable(&ownerID,4,4);

	push	4
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3983 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_MAD_Tank_Devolved@@UAEXXZ ENDP ; RA_MAD_Tank_Devolved::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?KeyHook@RA_MAD_Tank_Devolved@@EAEXXZ
_TEXT	SEGMENT
_newobj$1 = -12						; size = 4
_obj$ = -8						; size = 4
_this$ = -4						; size = 4
?KeyHook@RA_MAD_Tank_Devolved@@EAEXXZ PROC		; RA_MAD_Tank_Devolved::KeyHook, COMDAT
; _this$ = ecx

; 3906 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3907 : 	GameObject *obj = Owner();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	mov	DWORD PTR _obj$[ebp], eax

; 3908 : 	if (!ownerID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	jne	$LN1@KeyHook

; 3909 : 	{
; 3910 : 		//Create Object to jam MAD Tank in place
; 3911 : 		GameObject *newobj = Commands->Create_Object_At_Bone(obj, "Invisible_Object", Get_Parameter("Bone"));

	push	OFFSET ??_C@_04CCGIJNFG@Bone?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	push	OFFSET ??_C@_0BB@NHJNEILC@Invisible_Object?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+104]
	call	edx
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _newobj$1[ebp], eax

; 3912 : 		Commands->Set_Model(newobj, Get_Parameter("Attach_Model"));

	push	OFFSET ??_C@_0N@OPMLCOMM@Attach_Model?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _newobj$1[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 3913 : 		Commands->Attach_To_Object_Bone(newobj, obj, Get_Parameter("Bone"));

	push	OFFSET ??_C@_04CCGIJNFG@Bone?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newobj$1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 3914 : 		newobjID = Commands->Get_ID(newobj);

	mov	eax, DWORD PTR _newobj$1[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], eax

; 3915 : 		//Animate MAD Tank, record player ID of owner
; 3916 : 		Commands->Create_2D_Sound(Get_Parameter("Announcement"));

	push	OFFSET ??_C@_0N@IKMPLOBB@Announcement?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+176]
	call	ecx
	add	esp, 4

; 3917 : 		Commands->Set_Animation(obj, Get_Parameter("Deployed_Animation"), false, 0, 0, -1, false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BD@IANHLCC@Deployed_Animation?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3918 : 		ownerID = Get_Player_ID(Get_Vehicle_Gunner(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Gunner@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Gunner
	add	esp, 4
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+44], eax

; 3919 : 		//New stuff added for v0.9935
; 3920 : 		Force_Occupants_Exit(obj); //kick driver out

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Force_Occupants_Exit@@YAXPAVScriptableGameObj@@@Z ; Force_Occupants_Exit
	add	esp, 4

; 3921 : 		Commands->Enable_HUD_Pokable_Indicator(obj, false);	//this was to correct some issue

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+780]
	call	edx
	add	esp, 8

; 3922 : 		Commands->Enable_Vehicle_Transitions(obj, false); //no getting back in

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+728]
	call	edx
	add	esp, 8

; 3923 : 		Commands->Set_Player_Type(obj, Commands->Get_Player_Type(Get_Vehicle_Gunner(obj))); //set team

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Gunner@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Gunner
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+252]
	call	edx
	add	esp, 8

; 3924 : 		//End New Stuff
; 3925 : 		deployed = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 1
$LN1@KeyHook:

; 3926 : 	}
; 3927 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?KeyHook@RA_MAD_Tank_Devolved@@EAEXXZ ENDP		; RA_MAD_Tank_Devolved::KeyHook
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Destroyed@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_MAD_Tank_Devolved::Destroyed, COMDAT
; _this$ = ecx

; 3970 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3971 : 	//MAD Tank dead, get rid of piston object if it exists
; 3972 : 	if (newobjID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN2@Destroyed

; 3973 : 	{
; 3974 : 		Commands->Destroy_Object(Commands->Find_Object(newobjID));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN2@Destroyed:

; 3975 : 	}
; 3976 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Destroyed@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_MAD_Tank_Devolved::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Animation_Complete@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@PBD@Z
_TEXT	SEGMENT
$T1 = -136						; size = 12
$T2 = -120						; size = 12
$T3 = -104						; size = 12
_range$4 = -28						; size = 4
_warhead$5 = -24					; size = 4
_FF$6 = -17						; size = 1
_Fpercentage$7 = -16					; size = 4
_Epercentage$8 = -12					; size = 4
_SonicBox$9 = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_animation_name$ = 12					; size = 4
?Animation_Complete@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@PBD@Z PROC ; RA_MAD_Tank_Devolved::Animation_Complete, COMDAT
; _this$ = ecx

; 3942 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 136				; 00000088H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3943 : 	if (!_stricmp(animation_name, Get_Parameter("Deployed_Animation"))) //Is this the right animation?

	push	OFFSET ??_C@_0BD@IANHLCC@Deployed_Animation?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _animation_name$[ebp]
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN2@Animation_

; 3944 : 	{
; 3945 : 		if (Get_GameObj(ownerID)) //sonic pulse only if owner still valid

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	test	eax, eax
	je	$LN1@Animation_

; 3946 : 		{
; 3947 : 			//Create/Kill Object for Sonic Pulse, this is meant for visual explosion effect only
; 3948 : 			GameObject *SonicBox = Commands->Create_Object(Get_Parameter("Sonic_Preset"), Commands->Get_Position(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0N@JAJNNIDP@Sonic_Preset?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _SonicBox$9[ebp], eax

; 3949 : 			Commands->Set_Player_Type(SonicBox, 2); //just in case

	push	2
	mov	eax, DWORD PTR _SonicBox$9[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+252]
	call	edx
	add	esp, 8

; 3950 : 			Commands->Apply_Damage(SonicBox,100,"BlamoKiller",Get_GameObj(ownerID));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _SonicBox$9[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+616]
	call	ecx
	add	esp, 16					; 00000010H

; 3951 : 			//Setup for building damage
; 3952 : 			float Epercentage = Get_Float_Parameter("EnemyPercentage");

	push	OFFSET ??_C@_0BA@OOIHOFIM@EnemyPercentage?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _Epercentage$8[ebp]

; 3953 : 			float Fpercentage = Get_Float_Parameter("FriendPercentage");

	push	OFFSET ??_C@_0BB@IJDMLPMI@FriendPercentage?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _Fpercentage$7[ebp]

; 3954 : 			bool FF = Get_Bool_Parameter("ForceFF");

	push	OFFSET ??_C@_07EOGFGIGH@ForceFF?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Bool_Parameter@ScriptImpClass@@QAE_NPBD@Z ; ScriptImpClass::Get_Bool_Parameter
	mov	BYTE PTR _FF$6[ebp], al

; 3955 : 			const char *warhead = Get_Parameter("Warhead");

	push	OFFSET ??_C@_07EDCLAFNL@Warhead?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	mov	DWORD PTR _warhead$5[ebp], eax

; 3956 : 			float range = Get_Float_Parameter("DamageRadius");

	push	OFFSET ??_C@_0N@DAHCFJAP@DamageRadius?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _range$4[ebp]

; 3957 : 			//Time to break a few windows
; 3958 : 			SetExplosionObj(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?SetExplosionObj@@3P6AXPAVScriptableGameObj@@@ZA ; SetExplosionObj
	add	esp, 4

; 3959 : 			Ranged_Percentage_Damage_To_Buildings(Epercentage, warhead, Commands->Get_Position(obj), range, Get_GameObj(ownerID));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _range$4[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+64]
	call	edx
	add	esp, -4					; fffffffcH
	mov	ecx, esp
	push	eax
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _warhead$5[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _Epercentage$8[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Ranged_Percentage_Damage_To_Buildings@@YAXMPBDVVector3@@MPAVScriptableGameObj@@@Z ; Ranged_Percentage_Damage_To_Buildings
	add	esp, 28					; 0000001cH

; 3960 : 			Ranged_Variable_Percent_Vehicle_Damage(Epercentage, Fpercentage, FF, warhead, Commands->Get_Position(obj), range, Get_GameObj(ownerID)); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _range$4[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+64]
	call	edx
	add	esp, -4					; fffffffcH
	mov	ecx, esp
	push	eax
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _warhead$5[ebp]
	push	eax
	movzx	ecx, BYTE PTR _FF$6[ebp]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _Fpercentage$7[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _Epercentage$8[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Ranged_Variable_Percent_Vehicle_Damage@@YAXMM_NPBDVVector3@@MPAVScriptableGameObj@@@Z ; Ranged_Variable_Percent_Vehicle_Damage
	add	esp, 36					; 00000024H

; 3961 : 			SetExplosionObj(0);

	push	0
	call	DWORD PTR ?SetExplosionObj@@3P6AXPAVScriptableGameObj@@@ZA ; SetExplosionObj
	add	esp, 4
$LN1@Animation_:

; 3962 : 		}
; 3963 : 		//Kill MAD Tank 
; 3964 : 		//'0' Damager used so owner won't get points for tank itself
; 3965 : 		Commands->Apply_Damage(obj,10000,"BlamoKiller",0);

	push	0
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@461c4000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H
$LN2@Animation_:

; 3966 : 	}
; 3967 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Animation_Complete@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@PBD@Z ENDP ; RA_MAD_Tank_Devolved::Animation_Complete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_MAD_Tank_Devolved::Custom, COMDAT
; _this$ = ecx

; 3930 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3931 : 	if (type == CUSTOM_EVENT_VEHICLE_ENTERED)

	cmp	DWORD PTR _type$[ebp], 1000000028	; 3b9aca1cH
	jne	SHORT $LN2@Custom

; 3932 : 	{
; 3933 : 		InstallHook("MAD",sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	push	OFFSET ??_C@_03FCIIMNPF@MAD?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InstallHook@JFW_Key_Hook_Base@@QAEXPBDPAVScriptableGameObj@@@Z ; JFW_Key_Hook_Base::InstallHook
$LN2@Custom:

; 3934 : 	}
; 3935 : 	if (type == CUSTOM_EVENT_VEHICLE_EXITED)

	cmp	DWORD PTR _type$[ebp], 1000000029	; 3b9aca1dH
	jne	SHORT $LN3@Custom

; 3936 : 	{
; 3937 : 		RemoveHook();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveHook@JFW_Key_Hook_Base@@QAEXXZ	; JFW_Key_Hook_Base::RemoveHook
$LN3@Custom:

; 3938 : 	}
; 3939 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_MAD_Tank_Devolved::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_MAD_Tank_Devolved::Created, COMDAT
; _this$ = ecx

; 3898 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3899 : 	//Initializing variables
; 3900 : 	deployed = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 0

; 3901 : 	newobjID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0

; 3902 : 	ownerID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0

; 3903 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_MAD_Tank_Devolved@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_MAD_Tank_Devolved::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Demolition_Truck_Retarded@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Demolition_Truck_Retarded@@UAEPAXI@Z PROC	; RA_Demolition_Truck_Retarded::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Demolition_Truck_Retarded@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Demolition_Truck_Retarded@@UAEPAXI@Z ENDP	; RA_Demolition_Truck_Retarded::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Demolition_Truck_Retarded@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Demolition_Truck_Retarded@@UAE@XZ PROC		; RA_Demolition_Truck_Retarded::~RA_Demolition_Truck_Retarded, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Demolition_Truck_Retarded@@UAE@XZ ENDP		; RA_Demolition_Truck_Retarded::~RA_Demolition_Truck_Retarded
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Demolition_Truck_Retarded@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Demolition_Truck_Retarded@@QAE@XZ PROC		; RA_Demolition_Truck_Retarded::RA_Demolition_Truck_Retarded, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Demolition_Truck_Retarded@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Demolition_Truck_Retarded@@QAE@XZ ENDP		; RA_Demolition_Truck_Retarded::RA_Demolition_Truck_Retarded
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Demolition_Truck_Retarded@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Demolition_Truck_Retarded@@UAEXXZ PROC ; RA_Demolition_Truck_Retarded::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 3889 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3890 : 	Auto_Save_Variable(&driverID,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3891 : 	Auto_Save_Variable(&triggered,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3892 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Demolition_Truck_Retarded@@UAEXXZ ENDP ; RA_Demolition_Truck_Retarded::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Killed@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
$T1 = -144						; size = 12
$T2 = -128						; size = 12
$T3 = -112						; size = 12
_radius$ = -36						; size = 4
_damage$ = -32						; size = 4
_warhead$ = -28						; size = 4
_explosion$ = -24					; size = 4
_testID$ = -20						; size = 4
_pos$ = -16						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_killer$ = 12						; size = 4
?Killed@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Demolition_Truck_Retarded::Killed, COMDAT
; _this$ = ecx

; 3856 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 144				; 00000090H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3857 : 	Vector3 pos;

	lea	ecx, DWORD PTR _pos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 3858 : 	pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 3859 : 	int testID = 0;

	mov	DWORD PTR _testID$[ebp], 0

; 3860 : 	if (killer)

	cmp	DWORD PTR _killer$[ebp], 0
	je	SHORT $LN5@Killed

; 3861 : 	{
; 3862 : 		testID = Commands->Get_ID(killer);

	mov	eax, DWORD PTR _killer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _testID$[ebp], eax
$LN5@Killed:

; 3863 : 	}
; 3864 : 	const char *explosion = Get_Parameter("Explosion");

	push	OFFSET ??_C@_09HGNANIIM@Explosion?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	mov	DWORD PTR _explosion$[ebp], eax

; 3865 : 	const char *warhead = Get_Parameter("Warhead");

	push	OFFSET ??_C@_07EDCLAFNL@Warhead?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	mov	DWORD PTR _warhead$[ebp], eax

; 3866 : 	float damage = Get_Float_Parameter("DamageStrength");

	push	OFFSET ??_C@_0P@PDFEMABG@DamageStrength?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _damage$[ebp]

; 3867 : 	float radius = Get_Float_Parameter("DamageRadius");

	push	OFFSET ??_C@_0N@DAHCFJAP@DamageRadius?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _radius$[ebp]

; 3868 : 	if (testID) //is there a real killer?

	cmp	DWORD PTR _testID$[ebp], 0
	je	$LN4@Killed

; 3869 : 	{
; 3870 : 		SetExplosionObj(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?SetExplosionObj@@3P6AXPAVScriptableGameObj@@@ZA ; SetExplosionObj
	add	esp, 4

; 3871 : 		Commands->Create_Explosion(explosion, pos, killer); //first half, obey friendly fire rules

	mov	eax, DWORD PTR _killer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _explosion$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+416]
	call	ecx
	add	esp, 12					; 0000000cH

; 3872 : 		Commands->Create_Explosion(explosion, pos, 0); //second half, ignore rules

	push	0
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _explosion$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+416]
	call	eax
	add	esp, 12					; 0000000cH

; 3873 : 		Ranged_Scale_Damage_To_Buildings(damage, warhead,Commands->Get_Position(obj),radius,killer);

	mov	eax, DWORD PTR _killer$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _radius$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, -4					; fffffffcH
	mov	ecx, esp
	push	eax
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	edx, DWORD PTR _warhead$[ebp]
	push	edx
	push	ecx
	movss	xmm0, DWORD PTR _damage$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Ranged_Scale_Damage_To_Buildings@@YAXMPBDVVector3@@MPAVScriptableGameObj@@@Z ; Ranged_Scale_Damage_To_Buildings
	add	esp, 28					; 0000001cH

; 3874 : 		SetExplosionObj(0);

	push	0
	call	DWORD PTR ?SetExplosionObj@@3P6AXPAVScriptableGameObj@@@ZA ; SetExplosionObj
	add	esp, 4
	jmp	$LN2@Killed
$LN4@Killed:

; 3875 : 	}
; 3876 : 	else if (triggered)//then was it the driver?

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	$LN2@Killed

; 3877 : 	{
; 3878 : 		Commands->Create_Explosion(explosion, pos, Commands->Find_Object(driverID)); //first half, obey rules

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _explosion$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+416]
	call	ecx
	add	esp, 12					; 0000000cH

; 3879 : 		Commands->Create_Explosion(explosion, pos, 0); //second half, ignore rules

	push	0
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _explosion$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+416]
	call	eax
	add	esp, 12					; 0000000cH

; 3880 : 		Ranged_Scale_Damage_To_Buildings(damage,warhead,Commands->Get_Position(obj),radius,Commands->Find_Object(driverID));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _radius$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, -4					; fffffffcH
	mov	ecx, esp
	push	eax
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	edx, DWORD PTR _warhead$[ebp]
	push	edx
	push	ecx
	movss	xmm0, DWORD PTR _damage$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Ranged_Scale_Damage_To_Buildings@@YAXMPBDVVector3@@MPAVScriptableGameObj@@@Z ; Ranged_Scale_Damage_To_Buildings
	add	esp, 28					; 0000001cH
$LN2@Killed:

; 3881 : 	}
; 3882 : 	if (driverID)//If there's a driver, kill him

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN1@Killed

; 3883 : 	{
; 3884 : 		Commands->Attach_Script(Commands->Find_Object(driverID),"RA_DriverDeath", "0");

	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	push	OFFSET ??_C@_0P@JMLOMBPP@RA_DriverDeath?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH
$LN1@Killed:

; 3885 : 	}
; 3886 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Demolition_Truck_Retarded::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Damaged@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
_warhead$1 = -12					; size = 4
_testID$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_amount$ = 16						; size = 4
?Damaged@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@0M@Z PROC ; RA_Demolition_Truck_Retarded::Damaged, COMDAT
; _this$ = ecx

; 3839 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3840 : 	if (!driverID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN2@Damaged

; 3841 : 	{
; 3842 : 		return; //if there's no driver, don't bother

	jmp	SHORT $LN3@Damaged
$LN2@Damaged:

; 3843 : 	}
; 3844 : 	int testID;
; 3845 : 	testID = Commands->Get_ID(damager);

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _testID$[ebp], eax

; 3846 : 	if (driverID == testID) //did the driver shoot me?

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _testID$[ebp]
	jne	SHORT $LN1@Damaged

; 3847 : 	{
; 3848 : 		const char *warhead = "Death";

	mov	DWORD PTR _warhead$1[ebp], OFFSET ??_C@_05PGGAFPFO@Death?$AA@

; 3849 : 		//I can't take it any more! *bang*
; 3850 : 		Commands->Apply_Damage(obj, 100.00, warhead, 0);

	push	0
	mov	eax, DWORD PTR _warhead$1[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+616]
	call	eax
	add	esp, 16					; 00000010H

; 3851 : 		triggered = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 1
$LN1@Damaged:
$LN3@Damaged:

; 3852 : 	}
; 3853 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@0M@Z ENDP ; RA_Demolition_Truck_Retarded::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_testID$1 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Demolition_Truck_Retarded::Custom, COMDAT
; _this$ = ecx

; 3817 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3818 : 	//checks when someone gets in or out and records ID
; 3819 : 	//this should account for when there are passengers too
; 3820 : 	if (type == CUSTOM_EVENT_VEHICLE_ENTERED)

	cmp	DWORD PTR _type$[ebp], 1000000028	; 3b9aca1cH
	jne	SHORT $LN5@Custom

; 3821 : 	{
; 3822 : 		if (!driverID) //is there a driver already?

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN4@Custom

; 3823 : 		{
; 3824 : 			driverID = Commands->Get_ID(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
$LN4@Custom:

; 3825 : 		}
; 3826 : 	}

	jmp	SHORT $LN6@Custom
$LN5@Custom:

; 3827 : 	else if (type == CUSTOM_EVENT_VEHICLE_EXITED)

	cmp	DWORD PTR _type$[ebp], 1000000029	; 3b9aca1dH
	jne	SHORT $LN6@Custom

; 3828 : 	{
; 3829 : 		int testID;
; 3830 : 		testID = Commands->Get_ID(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _testID$1[ebp], eax

; 3831 : 		if (driverID == testID) //is it the driver that got out?

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _testID$1[ebp]
	jne	SHORT $LN6@Custom

; 3832 : 		{
; 3833 : 			driverID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN6@Custom:

; 3834 : 		}
; 3835 : 	}
; 3836 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Demolition_Truck_Retarded::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Demolition_Truck_Retarded::Created, COMDAT
; _this$ = ecx

; 3811 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3812 : 	driverID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 3813 : 	triggered = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 3814 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Demolition_Truck_Retarded@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Demolition_Truck_Retarded::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Missile_Controller@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Missile_Controller@@UAEPAXI@Z PROC		; RA_Missile_Controller::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Missile_Controller@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Missile_Controller@@UAEPAXI@Z ENDP		; RA_Missile_Controller::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Missile_Controller@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Missile_Controller@@UAE@XZ PROC			; RA_Missile_Controller::~RA_Missile_Controller, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Missile_Controller@@UAE@XZ ENDP			; RA_Missile_Controller::~RA_Missile_Controller
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Missile_Controller@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Missile_Controller@@QAE@XZ PROC			; RA_Missile_Controller::RA_Missile_Controller, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Missile_Controller@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Missile_Controller@@QAE@XZ ENDP			; RA_Missile_Controller::RA_Missile_Controller
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Killed@RA_Missile_Controller@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_receiver$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_killer$ = 12						; size = 4
?Killed@RA_Missile_Controller@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Missile_Controller::Killed, COMDAT
; _this$ = ecx

; 3801 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3802 : 	GameObject *receiver = Find_Object_By_Preset(2, Get_Parameter("SiloPresetName"));

	push	OFFSET ??_C@_0P@JAAENFLF@SiloPresetName?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	push	2
	call	?Find_Object_By_Preset@@YAPAVScriptableGameObj@@HPBD@Z ; Find_Object_By_Preset
	add	esp, 8
	mov	DWORD PTR _receiver$[ebp], eax

; 3803 : 	Commands->Send_Custom_Event(obj, receiver, 962962, 0, 0.0); //inform silo of death

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	962962					; 000eb192H
	mov	eax, DWORD PTR _receiver$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 3804 : 	receiver = Find_Object_By_Preset(2, Get_Parameter("TerminalPresetName"));

	push	OFFSET ??_C@_0BD@FHJIDJKJ@TerminalPresetName?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	push	2
	call	?Find_Object_By_Preset@@YAPAVScriptableGameObj@@HPBD@Z ; Find_Object_By_Preset
	add	esp, 8
	mov	DWORD PTR _receiver$[ebp], eax

; 3805 : 	Commands->Send_Custom_Event(obj, receiver, 962962, 0, 0.0); //inform terminal of death

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	962962					; 000eb192H
	mov	eax, DWORD PTR _receiver$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 3806 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@RA_Missile_Controller@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Missile_Controller::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Missile_Control@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Missile_Control@@UAEPAXI@Z PROC			; RA_Missile_Control::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Missile_Control@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Missile_Control@@UAEPAXI@Z ENDP			; RA_Missile_Control::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Missile_Control@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Missile_Control@@UAE@XZ PROC			; RA_Missile_Control::~RA_Missile_Control, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Missile_Control@@UAE@XZ ENDP			; RA_Missile_Control::~RA_Missile_Control
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Missile_Control@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Missile_Control@@QAE@XZ PROC			; RA_Missile_Control::RA_Missile_Control, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Missile_Control@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Missile_Control@@QAE@XZ ENDP			; RA_Missile_Control::RA_Missile_Control
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Missile_Control@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Missile_Control@@UAEXXZ PROC ; RA_Missile_Control::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 3793 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3794 : 	Auto_Save_Variable(&launching,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3795 : 	Auto_Save_Variable(&alive,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 29					; 0000001dH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3796 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Missile_Control@@UAEXXZ ENDP ; RA_Missile_Control::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Missile_Control@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Missile_Control@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_Missile_Control::Timer_Expired, COMDAT
; _this$ = ecx

; 3787 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3788 : 	//This is a time delay to kill a beacon, prevents glitches
; 3789 : 	Commands->Apply_Damage(Commands->Find_Object(number), 100, "BlamoKiller", 0);

	push	0
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+616]
	call	ecx
	add	esp, 16					; 00000010H

; 3790 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_Missile_Control@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Missile_Control::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Animation_Complete@RA_Missile_Control@@EAEXPAVScriptableGameObj@@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_animation_name$ = 12					; size = 4
?Animation_Complete@RA_Missile_Control@@EAEXPAVScriptableGameObj@@PBD@Z PROC ; RA_Missile_Control::Animation_Complete, COMDAT
; _this$ = ecx

; 3778 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3779 : 	if(!_stricmp(animation_name, Get_Parameter("AnimationName")))

	push	OFFSET ??_C@_0O@HEOGOAJ@AnimationName?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _animation_name$[ebp]
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@Animation_

; 3780 : 	{
; 3781 : 		obj->As_PhysicalGameObj()->Clear_Animation();

	mov	eax, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	mov	ecx, eax
	call	?Clear_Animation@PhysicalGameObj@@QAEXXZ ; PhysicalGameObj::Clear_Animation

; 3782 : 		launching = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0
$LN2@Animation_:

; 3783 : 	}
; 3784 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Animation_Complete@RA_Missile_Control@@EAEXPAVScriptableGameObj@@PBD@Z ENDP ; RA_Missile_Control::Animation_Complete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Missile_Control@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Missile_Control@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Missile_Control::Custom, COMDAT
; _this$ = ecx

; 3755 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3756 : 	if(type == 269269) //beacon deployed message

	cmp	DWORD PTR _type$[ebp], 269269		; 00041bd5H
	jne	$LN6@Custom

; 3757 : 	{
; 3758 : 		if(alive)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+29]
	test	ecx, ecx
	je	SHORT $LN5@Custom

; 3759 : 		{
; 3760 : 			if(!launching)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	jne	SHORT $LN4@Custom

; 3761 : 			{
; 3762 : 				launching = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 1

; 3763 : 				Commands->Set_Animation(obj, Get_Parameter("AnimationName"), false, 0, 0, -1, true);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0O@HEOGOAJ@AnimationName?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH
$LN4@Custom:

; 3764 : 			}
; 3765 : 		}
; 3766 : 		else

	jmp	SHORT $LN3@Custom
$LN5@Custom:

; 3767 : 		{
; 3768 : 			Commands->Start_Timer(obj, this, 1.0, Commands->Get_ID(sender)); //beacon kill time delay

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN3@Custom:

; 3769 : 		}

	jmp	SHORT $LN1@Custom
$LN6@Custom:

; 3770 : 	}
; 3771 : 	else if(type == 962962)

	cmp	DWORD PTR _type$[ebp], 962962		; 000eb192H
	jne	SHORT $LN1@Custom

; 3772 : 	{
; 3773 : 		alive = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+29], 0
$LN1@Custom:

; 3774 : 	}
; 3775 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Missile_Control@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Missile_Control::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Missile_Control@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Missile_Control@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Missile_Control::Created, COMDAT
; _this$ = ecx

; 3749 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3750 : 	launching = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0

; 3751 : 	alive = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+29], 1

; 3752 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Missile_Control@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Missile_Control::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Beacon_Timer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Beacon_Timer@@UAEPAXI@Z PROC			; RA_Beacon_Timer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Beacon_Timer@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Beacon_Timer@@UAEPAXI@Z ENDP			; RA_Beacon_Timer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Beacon_Timer@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Beacon_Timer@@UAE@XZ PROC				; RA_Beacon_Timer::~RA_Beacon_Timer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Beacon_Timer@@UAE@XZ ENDP				; RA_Beacon_Timer::~RA_Beacon_Timer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Beacon_Timer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Beacon_Timer@@QAE@XZ PROC				; RA_Beacon_Timer::RA_Beacon_Timer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Beacon_Timer@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Beacon_Timer@@QAE@XZ ENDP				; RA_Beacon_Timer::RA_Beacon_Timer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Beacon_Timer@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Beacon_Timer@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_Beacon_Timer::Timer_Expired, COMDAT
; _this$ = ecx

; 3741 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3742 : 	Commands->Send_Custom_Event(obj, obj, 456369, 0, 0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	456369					; 0006f6b1H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 3743 : 	Remove_Script(obj, "RA_Beacon_Timer");

	push	OFFSET ??_C@_0BA@JCMKEIDO@RA_Beacon_Timer?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Remove_Script@@YAXPAVScriptableGameObj@@PBD@Z ; Remove_Script
	add	esp, 8

; 3744 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_Beacon_Timer@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Beacon_Timer::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Beacon_Timer@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Beacon_Timer@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Beacon_Timer::Created, COMDAT
; _this$ = ecx

; 3735 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3736 : 	Commands->Start_Timer(obj, this, 300.0, 147);

	push	147					; 00000093H
	push	ecx
	movss	xmm0, DWORD PTR __real@43960000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 3737 : 	//Commands->Start_Timer(obj, this, 3.0, 147);
; 3738 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Beacon_Timer@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Beacon_Timer::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Beacon_Terminal_2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Beacon_Terminal_2@@UAEPAXI@Z PROC		; RA_Beacon_Terminal_2::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Beacon_Terminal_2@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Beacon_Terminal_2@@UAEPAXI@Z ENDP		; RA_Beacon_Terminal_2::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Beacon_Terminal_2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Beacon_Terminal_2@@UAE@XZ PROC			; RA_Beacon_Terminal_2::~RA_Beacon_Terminal_2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Beacon_Terminal_2@@UAE@XZ ENDP			; RA_Beacon_Terminal_2::~RA_Beacon_Terminal_2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Beacon_Terminal_2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Beacon_Terminal_2@@QAE@XZ PROC			; RA_Beacon_Terminal_2::RA_Beacon_Terminal_2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Beacon_Terminal_2@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Beacon_Terminal_2@@QAE@XZ ENDP			; RA_Beacon_Terminal_2::RA_Beacon_Terminal_2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_Beacon_Terminal_2::Timer_Expired, COMDAT
; _this$ = ecx

; 3709 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3710 : 	Attach_Script_Once(obj, "RA_Beacon_Timer", "");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BA@JCMKEIDO@RA_Beacon_Timer?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Attach_Script_Once@@YAXPAVScriptableGameObj@@PBD1@Z ; Attach_Script_Once
	add	esp, 12					; 0000000cH

; 3711 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Beacon_Terminal_2::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Damaged@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
_warhead$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_amount$ = 16						; size = 4
?Damaged@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@0M@Z PROC ; RA_Beacon_Terminal_2::Damaged, COMDAT
; _this$ = ecx

; 3698 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3699 : 	unsigned int warhead = ArmorWarheadManager::Get_Warhead_Type(Get_Parameter("Warhead"));

	push	OFFSET ??_C@_07EDCLAFNL@Warhead?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	call	?Get_Warhead_Type@ArmorWarheadManager@@SAIPBD@Z ; ArmorWarheadManager::Get_Warhead_Type
	add	esp, 4
	mov	DWORD PTR _warhead$[ebp], eax

; 3700 : 	if (warhead == Get_Damage_Warhead())

	call	DWORD PTR ?Get_Damage_Warhead@@3P6AIXZA	; Get_Damage_Warhead
	cmp	DWORD PTR _warhead$[ebp], eax
	jne	SHORT $LN1@Damaged

; 3701 : 	{
; 3702 : 		active = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0

; 3703 : 		Remove_Script(obj, "RA_Beacon_Timer");

	push	OFFSET ??_C@_0BA@JCMKEIDO@RA_Beacon_Timer?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Remove_Script@@YAXPAVScriptableGameObj@@PBD@Z ; Remove_Script
	add	esp, 8

; 3704 : 		Commands->Start_Timer(obj,this,1,1);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN1@Damaged:

; 3705 : 	}
; 3706 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@0M@Z ENDP ; RA_Beacon_Terminal_2::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Poked@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_poker$ = 12						; size = 4
?Poked@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Beacon_Terminal_2::Poked, COMDAT
; _this$ = ecx

; 3714 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3715 : 	if(Commands->Get_Player_Type(poker) == Commands->Get_Player_Type(obj))

	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	cmp	esi, eax
	jne	$LN3@Poked

; 3716 : 	{
; 3717 : 		if(active)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	je	$LN2@Poked

; 3718 : 		{
; 3719 : 			Commands->Give_PowerUp(poker, Get_Parameter("BeaconPowerup"), false);

	push	0
	push	OFFSET ??_C@_0O@IANNLIGI@BeaconPowerup?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+432]
	call	edx
	add	esp, 12					; 0000000cH

; 3720 : 			Attach_Script_Once(obj, "RA_Beacon_Timer", "");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BA@JCMKEIDO@RA_Beacon_Timer?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Attach_Script_Once@@YAXPAVScriptableGameObj@@PBD1@Z ; Attach_Script_Once
	add	esp, 12					; 0000000cH

; 3721 : 			active = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0

; 3722 : 			Commands->Enable_HUD_Pokable_Indicator(obj, false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+780]
	call	edx
	add	esp, 8

; 3723 : 			Create_2D_Sound_Team(Get_Parameter("BeaconTakenSound"), Commands->Get_Player_Type(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BB@PKFMOKHA@BeaconTakenSound?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Team@@3P6AHPBDH@ZA ; Create_2D_Sound_Team
	add	esp, 8
$LN2@Poked:

; 3724 : 		}
; 3725 : 	}
; 3726 : 	else

	jmp	SHORT $LN4@Poked
$LN3@Poked:

; 3727 : 	{
; 3728 : 		Display_Security_Dialog(poker);

	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	call	DWORD PTR ?Display_Security_Dialog@@3P6AXPAVScriptableGameObj@@@ZA ; Display_Security_Dialog
	add	esp, 4
$LN4@Poked:

; 3729 : 	}
; 3730 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Poked@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Beacon_Terminal_2::Poked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Beacon_Terminal_2::Custom, COMDAT
; _this$ = ecx

; 3672 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3673 : 	if(type == 962962) //building dead

	cmp	DWORD PTR _type$[ebp], 962962		; 000eb192H
	jne	SHORT $LN8@Custom

; 3674 : 	{
; 3675 : 		Commands->Destroy_Object(obj); //building dead, remove terminal

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
	jmp	$LN9@Custom
$LN8@Custom:

; 3676 : 	}
; 3677 : 	else if(type == 456369) //timer complete

	cmp	DWORD PTR _type$[ebp], 456369		; 0006f6b1H
	jne	SHORT $LN6@Custom

; 3678 : 	{
; 3679 : 		if (!active)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	jne	SHORT $LN5@Custom

; 3680 : 		{
; 3681 : 			active = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 1

; 3682 : 			Commands->Enable_HUD_Pokable_Indicator(obj, true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+780]
	call	edx
	add	esp, 8

; 3683 : 			Create_2D_Sound_Team(Get_Parameter("BeaconReadySound"), Commands->Get_Player_Type(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BB@OAPPKIAJ@BeaconReadySound?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Team@@3P6AHPBDH@ZA ; Create_2D_Sound_Team
	add	esp, 8
$LN5@Custom:

; 3684 : 		}
; 3685 : 	}

	jmp	SHORT $LN9@Custom
$LN6@Custom:

; 3686 : 	else if (type == Get_Int_Parameter("OfflineCustom"))

	push	OFFSET ??_C@_0O@MMHNBBEN@OfflineCustom?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	DWORD PTR _type$[ebp], eax
	jne	SHORT $LN3@Custom

; 3687 : 	{
; 3688 : 		active = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0

; 3689 : 		Remove_Script(obj, "RA_Beacon_Timer");

	push	OFFSET ??_C@_0BA@JCMKEIDO@RA_Beacon_Timer?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Remove_Script@@YAXPAVScriptableGameObj@@PBD@Z ; Remove_Script
	add	esp, 8
	jmp	SHORT $LN9@Custom
$LN3@Custom:

; 3690 : 	}
; 3691 : 	else if (type == Get_Int_Parameter("OnlineCustom"))

	push	OFFSET ??_C@_0N@DHHIFKOM@OnlineCustom?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	DWORD PTR _type$[ebp], eax
	jne	SHORT $LN9@Custom

; 3692 : 	{
; 3693 : 		Attach_Script_Once(obj, "RA_Beacon_Timer", "");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BA@JCMKEIDO@RA_Beacon_Timer?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Attach_Script_Once@@YAXPAVScriptableGameObj@@PBD1@Z ; Attach_Script_Once
	add	esp, 12					; 0000000cH
$LN9@Custom:

; 3694 : 	}
; 3695 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Beacon_Terminal_2::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Beacon_Terminal_2::Created, COMDAT
; _this$ = ecx

; 3665 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3666 : 	active = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0

; 3667 : 	Commands->Enable_HUD_Pokable_Indicator(obj, false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+780]
	call	edx
	add	esp, 8

; 3668 : 	Attach_Script_Once(obj, "RA_Beacon_Timer", "");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BA@JCMKEIDO@RA_Beacon_Timer?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Attach_Script_Once@@YAXPAVScriptableGameObj@@PBD1@Z ; Attach_Script_Once
	add	esp, 12					; 0000000cH

; 3669 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Beacon_Terminal_2@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Beacon_Terminal_2::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Beacon_Terminal@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Beacon_Terminal@@UAEPAXI@Z PROC			; RA_Beacon_Terminal::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Beacon_Terminal@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Beacon_Terminal@@UAEPAXI@Z ENDP			; RA_Beacon_Terminal::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Beacon_Terminal@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Beacon_Terminal@@UAE@XZ PROC			; RA_Beacon_Terminal::~RA_Beacon_Terminal, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Beacon_Terminal@@UAE@XZ ENDP			; RA_Beacon_Terminal::~RA_Beacon_Terminal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Beacon_Terminal@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Beacon_Terminal@@QAE@XZ PROC			; RA_Beacon_Terminal::RA_Beacon_Terminal, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Beacon_Terminal@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Beacon_Terminal@@QAE@XZ ENDP			; RA_Beacon_Terminal::RA_Beacon_Terminal
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Beacon_Terminal@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Beacon_Terminal@@UAEXXZ PROC ; RA_Beacon_Terminal::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 3658 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3659 : 	Auto_Save_Variable(&active,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3660 : 	Auto_Save_Variable(&reset,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 29					; 0000001dH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3661 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Beacon_Terminal@@UAEXXZ ENDP ; RA_Beacon_Terminal::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_Beacon_Terminal::Timer_Expired, COMDAT
; _this$ = ecx

; 3650 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3651 : 	if(number == 95132)

	cmp	DWORD PTR _number$[ebp], 95132		; 0001739cH
	jne	SHORT $LN2@Timer_Expi

; 3652 : 	{
; 3653 : 		Attach_Script_Once(obj, "RA_Beacon_Timer", ""); //restart beacon timer

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BA@JCMKEIDO@RA_Beacon_Timer?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Attach_Script_Once@@YAXPAVScriptableGameObj@@PBD1@Z ; Attach_Script_Once
	add	esp, 12					; 0000000cH
$LN2@Timer_Expi:

; 3654 : 	}
; 3655 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Beacon_Terminal::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Poked@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_poker$ = 12						; size = 4
?Poked@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Beacon_Terminal::Poked, COMDAT
; _this$ = ecx

; 3618 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3619 : 	if(Commands->Get_Player_Type(poker) == Commands->Get_Player_Type(obj))

	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	cmp	esi, eax
	jne	$LN6@Poked

; 3620 : 	{
; 3621 : 		if(active)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	je	$LN5@Poked

; 3622 : 		{
; 3623 : 			Commands->Give_PowerUp(poker, Get_Parameter("BeaconPowerup"), false);

	push	0
	push	OFFSET ??_C@_0O@IANNLIGI@BeaconPowerup?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+432]
	call	edx
	add	esp, 12					; 0000000cH

; 3624 : 			Attach_Script_Once(obj, "RA_Beacon_Timer", "");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BA@JCMKEIDO@RA_Beacon_Timer?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Attach_Script_Once@@YAXPAVScriptableGameObj@@PBD1@Z ; Attach_Script_Once
	add	esp, 12					; 0000000cH

; 3625 : 			active = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0

; 3626 : 			Commands->Enable_HUD_Pokable_Indicator(obj, false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+780]
	call	edx
	add	esp, 8

; 3627 : 			Create_2D_Sound_Team(Get_Parameter("BeaconTakenSound"), Commands->Get_Player_Type(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BB@PKFMOKHA@BeaconTakenSound?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Team@@3P6AHPBDH@ZA ; Create_2D_Sound_Team
	add	esp, 8
$LN5@Poked:

; 3628 : 		}
; 3629 : 	}

	jmp	$LN1@Poked
$LN6@Poked:

; 3630 : 	else if (Is_Spy(poker))

	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	call	?Is_Spy@@YA_NPAVScriptableGameObj@@@Z	; Is_Spy
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@Poked

; 3631 : 	{
; 3632 : 		if(!reset)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+29]
	test	ecx, ecx
	jne	$LN2@Poked

; 3633 : 		{
; 3634 : 			Remove_Script(obj, "RA_Beacon_Timer");

	push	OFFSET ??_C@_0BA@JCMKEIDO@RA_Beacon_Timer?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Remove_Script@@YAXPAVScriptableGameObj@@PBD@Z ; Remove_Script
	add	esp, 8

; 3635 : 			Commands->Start_Timer(obj, this, 2, 95132); //2 second delay until timer script restarts

	push	95132					; 0001739cH
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 3636 : 			active = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0

; 3637 : 			reset = true; //timer can only be reset once per 'cycle'

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+29], 1

; 3638 : 			Commands->Enable_HUD_Pokable_Indicator(obj, false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+780]
	call	edx
	add	esp, 8

; 3639 : 			Create_2D_Sound_Team(Get_Parameter("SiloDisableSound"), Commands->Get_Player_Type(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BB@CFBBPGKA@SiloDisableSound?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Team@@3P6AHPBDH@ZA ; Create_2D_Sound_Team
	add	esp, 8

; 3640 : 			Create_2D_Sound_Team(Get_Parameter("SpyNotifySound"), Commands->Get_Player_Type(poker));

	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0P@JEOPBNFB@SpyNotifySound?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Team@@3P6AHPBDH@ZA ; Create_2D_Sound_Team
	add	esp, 8
$LN2@Poked:

; 3641 : 		}
; 3642 : 	}
; 3643 : 	else

	jmp	SHORT $LN1@Poked
$LN3@Poked:

; 3644 : 	{
; 3645 : 		Display_Security_Dialog(poker);

	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	call	DWORD PTR ?Display_Security_Dialog@@3P6AXPAVScriptableGameObj@@@ZA ; Display_Security_Dialog
	add	esp, 4
$LN1@Poked:

; 3646 : 	}
; 3647 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Poked@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Beacon_Terminal::Poked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Beacon_Terminal::Custom, COMDAT
; _this$ = ecx

; 3600 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3601 : 	if(type == 962962) //building dead

	cmp	DWORD PTR _type$[ebp], 962962		; 000eb192H
	jne	SHORT $LN4@Custom

; 3602 : 	{
; 3603 : 		Commands->Destroy_Object(obj); //building dead, remove terminal

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
	jmp	SHORT $LN5@Custom
$LN4@Custom:

; 3604 : 	}
; 3605 : 	else if(type == 456369) //timer complete

	cmp	DWORD PTR _type$[ebp], 456369		; 0006f6b1H
	jne	SHORT $LN5@Custom

; 3606 : 	{
; 3607 : 		if (!active)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	jne	SHORT $LN5@Custom

; 3608 : 		{
; 3609 : 			active = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 1

; 3610 : 			reset = false; //if timer couldn't be reset, it now can be

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+29], 0

; 3611 : 			Commands->Enable_HUD_Pokable_Indicator(obj, true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+780]
	call	edx
	add	esp, 8

; 3612 : 			Create_2D_Sound_Team(Get_Parameter("BeaconReadySound"), Commands->Get_Player_Type(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BB@OAPPKIAJ@BeaconReadySound?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Team@@3P6AHPBDH@ZA ; Create_2D_Sound_Team
	add	esp, 8
$LN5@Custom:

; 3613 : 		}
; 3614 : 	}
; 3615 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Beacon_Terminal::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Beacon_Terminal::Created, COMDAT
; _this$ = ecx

; 3592 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3593 : 	active = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0

; 3594 : 	reset = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+29], 0

; 3595 : 	Commands->Enable_HUD_Pokable_Indicator(obj, false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+780]
	call	edx
	add	esp, 8

; 3596 : 	Attach_Script_Once(obj, "RA_Beacon_Timer", "");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BA@JCMKEIDO@RA_Beacon_Timer?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Attach_Script_Once@@YAXPAVScriptableGameObj@@PBD1@Z ; Attach_Script_Once
	add	esp, 12					; 0000000cH

; 3597 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Beacon_Terminal@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Beacon_Terminal::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Missile_Beacon@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Missile_Beacon@@UAEPAXI@Z PROC			; RA_Missile_Beacon::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Missile_Beacon@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Missile_Beacon@@UAEPAXI@Z ENDP			; RA_Missile_Beacon::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Missile_Beacon@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Missile_Beacon@@UAE@XZ PROC			; RA_Missile_Beacon::~RA_Missile_Beacon, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Missile_Beacon@@UAE@XZ ENDP			; RA_Missile_Beacon::~RA_Missile_Beacon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Missile_Beacon@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Missile_Beacon@@QAE@XZ PROC			; RA_Missile_Beacon::RA_Missile_Beacon, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Missile_Beacon@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Missile_Beacon@@QAE@XZ ENDP			; RA_Missile_Beacon::RA_Missile_Beacon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Missile_Beacon@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_silo$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Missile_Beacon@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Missile_Beacon::Created, COMDAT
; _this$ = ecx

; 3571 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3572 : 	GameObject *silo = Find_Object_By_Preset(2, Get_Parameter("SiloPresetName"));

	push	OFFSET ??_C@_0P@JAAENFLF@SiloPresetName?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	push	2
	call	?Find_Object_By_Preset@@YAPAVScriptableGameObj@@HPBD@Z ; Find_Object_By_Preset
	add	esp, 8
	mov	DWORD PTR _silo$[ebp], eax

; 3573 : 	Commands->Send_Custom_Event(obj, silo, 269269, 0, 0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	269269					; 00041bd5H
	mov	eax, DWORD PTR _silo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 3574 : 	Destroy_Script();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Destroy_Script@ScriptImpClass@@QAEXXZ	; ScriptImpClass::Destroy_Script

; 3575 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Missile_Beacon@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Missile_Beacon::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Fog_Level_Settings@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Fog_Level_Settings@@UAEPAXI@Z PROC		; RA_Fog_Level_Settings::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Fog_Level_Settings@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Fog_Level_Settings@@UAEPAXI@Z ENDP		; RA_Fog_Level_Settings::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Fog_Level_Settings@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Fog_Level_Settings@@UAE@XZ PROC			; RA_Fog_Level_Settings::~RA_Fog_Level_Settings, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Fog_Level_Settings@@UAE@XZ ENDP			; RA_Fog_Level_Settings::~RA_Fog_Level_Settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Fog_Level_Settings@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Fog_Level_Settings@@QAE@XZ PROC			; RA_Fog_Level_Settings::RA_Fog_Level_Settings, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Fog_Level_Settings@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Fog_Level_Settings@@QAE@XZ ENDP			; RA_Fog_Level_Settings::RA_Fog_Level_Settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Fog_Level_Settings@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Fog_Level_Settings@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Fog_Level_Settings::Custom, COMDAT
; _this$ = ecx

; 3565 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3566 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Fog_Level_Settings@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Fog_Level_Settings::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Vision_Control_2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Vision_Control_2@@UAEPAXI@Z PROC			; RA_Vision_Control_2::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Vision_Control_2@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Vision_Control_2@@UAEPAXI@Z ENDP			; RA_Vision_Control_2::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Vision_Control_2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Vision_Control_2@@UAE@XZ PROC			; RA_Vision_Control_2::~RA_Vision_Control_2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Vision_Control_2@@UAE@XZ ENDP			; RA_Vision_Control_2::~RA_Vision_Control_2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Vision_Control_2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Vision_Control_2@@QAE@XZ PROC			; RA_Vision_Control_2::RA_Vision_Control_2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Vision_Control_2@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Vision_Control_2@@QAE@XZ ENDP			; RA_Vision_Control_2::RA_Vision_Control_2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Vision_Control_2@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Vision_Control_2@@UAEXXZ PROC ; RA_Vision_Control_2::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 3555 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3556 : 	Auto_Save_Variable(&allowed,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3557 : 	Auto_Save_Variable(&underwater,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 29					; 0000001dH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3558 : 	Auto_Save_Variable(&driving,4,3);

	push	3
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 30					; 0000001eH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3559 : 	Auto_Save_Variable(&blackout,4,4);

	push	4
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 31					; 0000001fH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3560 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Vision_Control_2@@UAEXXZ ENDP ; RA_Vision_Control_2::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Vision_Control_2@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
tv64 = -72						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Vision_Control_2@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Vision_Control_2::Custom, COMDAT
; _this$ = ecx

; 3478 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3479 : 	switch(type)

	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 325523		; 0004f793H
	jg	SHORT $LN24@Custom
	cmp	DWORD PTR tv64[ebp], 325523		; 0004f793H
	je	$LN12@Custom
	cmp	DWORD PTR tv64[ebp], 103301		; 00019385H
	je	$LN1@Custom
	cmp	DWORD PTR tv64[ebp], 258258		; 0003f0d2H
	je	SHORT $LN18@Custom
	cmp	DWORD PTR tv64[ebp], 310013		; 0004bafdH
	je	$LN3@Custom
	jmp	$LN20@Custom
$LN24@Custom:
	cmp	DWORD PTR tv64[ebp], 789789		; 000c0d1dH
	je	SHORT $LN17@Custom
	cmp	DWORD PTR tv64[ebp], 852852		; 000d0374H
	je	SHORT $LN19@Custom
	cmp	DWORD PTR tv64[ebp], 987987		; 000f1353H
	je	$LN13@Custom
	jmp	$LN20@Custom
$LN19@Custom:

; 3480 : 	{
; 3481 : 	case 852852: //Disabling type, will cause 'underwater' messages to be ignored
; 3482 : 		allowed = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0

; 3483 : 		break;

	jmp	$LN20@Custom
$LN18@Custom:

; 3484 : 	case 258258: //Enabling type, will allow 'underwater' messages
; 3485 : 		allowed = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 1

; 3486 : 		break;

	jmp	$LN20@Custom
$LN17@Custom:

; 3487 : 	case 789789: //Diving type, will activate underwater effect (overrides other effects)
; 3488 : 		if (allowed)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	je	$LN16@Custom

; 3489 : 		{
; 3490 : 			if (!driving) //oops, did I go overboard?

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+30]
	test	ecx, ecx
	jne	SHORT $LN15@Custom

; 3491 : 			{
; 3492 : 				Commands->Apply_Damage(obj, 100, "Death", 0); //I drowned

	push	0
	push	OFFSET ??_C@_05PGGAFPFO@Death?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H
$LN15@Custom:

; 3493 : 			}
; 3494 : 			if (blackout)//if blackout in effect, deactivate

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+31]
	test	ecx, ecx
	je	SHORT $LN14@Custom

; 3495 : 			{	
; 3496 : 				Set_Fog_Color_Player(obj, 256, 256, 256);

	push	256					; 00000100H
	push	256					; 00000100H
	push	256					; 00000100H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Fog_Color_Player@@3P6AXPAVScriptableGameObj@@III@ZA ; Set_Fog_Color_Player
	add	esp, 16					; 00000010H

; 3497 : 				Clear_Fog_Override_Player(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Clear_Fog_Override_Player@@3P6AXPAVScriptableGameObj@@@ZA ; Clear_Fog_Override_Player
	add	esp, 4

; 3498 : 				blackout = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+31], 0
$LN14@Custom:

; 3499 : 			}
; 3500 : 			Set_Screen_Fade_Color_Player(obj, 0, 0, 1, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Color_Player@@3P6AXPAVScriptableGameObj@@MMMM@ZA ; Set_Screen_Fade_Color_Player
	add	esp, 20					; 00000014H

; 3501 : 			Set_Screen_Fade_Opacity_Player(obj, 150, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@43160000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Opacity_Player@@3P6AXPAVScriptableGameObj@@MM@ZA ; Set_Screen_Fade_Opacity_Player
	add	esp, 12					; 0000000cH

; 3502 : 			underwater = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+29], 1
$LN16@Custom:

; 3503 : 		}
; 3504 : 		break;

	jmp	$LN20@Custom
$LN13@Custom:

; 3505 : 	case 987987: //Surfacing type, will deactivate underwater effect
; 3506 : 		Set_Screen_Fade_Color_Player(obj, 0, 0, 0, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Color_Player@@3P6AXPAVScriptableGameObj@@MMMM@ZA ; Set_Screen_Fade_Color_Player
	add	esp, 20					; 00000014H

; 3507 : 		Set_Screen_Fade_Opacity_Player(obj, 0, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Opacity_Player@@3P6AXPAVScriptableGameObj@@MM@ZA ; Set_Screen_Fade_Opacity_Player
	add	esp, 12					; 0000000cH

; 3508 : 		underwater = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+29], 0

; 3509 : 		break;

	jmp	$LN20@Custom
$LN12@Custom:

; 3510 : 	case 325523: //Blackout type, param 0 = blackout off, param 1 = blackout on
; 3511 : 		if (!underwater) //Underwater takes priority

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+29]
	test	ecx, ecx
	jne	$LN4@Custom

; 3512 : 		{
; 3513 : 			if (param == 1) //turn on effect

	cmp	DWORD PTR _param$[ebp], 1
	jne	$LN10@Custom

; 3514 : 			{
; 3515 : 				if (!blackout)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+31]
	test	ecx, ecx
	jne	$LN9@Custom

; 3516 : 				{
; 3517 : 					Set_Screen_Fade_Color_Player(obj, 0, 0, 0, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Color_Player@@3P6AXPAVScriptableGameObj@@MMMM@ZA ; Set_Screen_Fade_Color_Player
	add	esp, 20					; 00000014H

; 3518 : 					Set_Screen_Fade_Opacity_Player(obj, 150, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@43160000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Opacity_Player@@3P6AXPAVScriptableGameObj@@MM@ZA ; Set_Screen_Fade_Opacity_Player
	add	esp, 12					; 0000000cH

; 3519 : 					if (Get_Vehicle(obj))

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@Custom

; 3520 : 					{
; 3521 : 						Set_Fog_Override_Player(obj, Get_Float_Parameter("VehicleFogStart"), Get_Float_Parameter("VehicleFogEnd"));

	push	OFFSET ??_C@_0O@OFGDAIBO@VehicleFogEnd?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_0BA@OLNMMNF@VehicleFogStart?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Fog_Override_Player@@3P6AXPAVScriptableGameObj@@MM@ZA ; Set_Fog_Override_Player
	add	esp, 12					; 0000000cH

; 3522 : 					}
; 3523 : 					else

	jmp	SHORT $LN7@Custom
$LN8@Custom:

; 3524 : 					{
; 3525 : 						Set_Fog_Override_Player(obj, Get_Float_Parameter("InfantryFogStart"), Get_Float_Parameter("InfantryFogEnd"));

	push	OFFSET ??_C@_0P@EEDBCAGE@InfantryFogEnd?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_0BB@OONIFEAB@InfantryFogStart?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Fog_Override_Player@@3P6AXPAVScriptableGameObj@@MM@ZA ; Set_Fog_Override_Player
	add	esp, 12					; 0000000cH
$LN7@Custom:

; 3526 : 					}
; 3527 : 					Set_Fog_Color_Player(obj, 0, 0, 0);

	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Fog_Color_Player@@3P6AXPAVScriptableGameObj@@III@ZA ; Set_Fog_Color_Player
	add	esp, 16					; 00000010H

; 3528 : 					blackout = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+31], 1
$LN9@Custom:

; 3529 : 				}
; 3530 : 			}

	jmp	$LN4@Custom
$LN10@Custom:

; 3531 : 			else if (!param) //turn off effect

	cmp	DWORD PTR _param$[ebp], 0
	jne	$LN4@Custom

; 3532 : 			{
; 3533 : 				if (blackout)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+31]
	test	ecx, ecx
	je	$LN4@Custom

; 3534 : 				{
; 3535 : 					Set_Screen_Fade_Color_Player(obj, 0, 0, 0, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Color_Player@@3P6AXPAVScriptableGameObj@@MMMM@ZA ; Set_Screen_Fade_Color_Player
	add	esp, 20					; 00000014H

; 3536 : 					Set_Screen_Fade_Opacity_Player(obj, 0, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Opacity_Player@@3P6AXPAVScriptableGameObj@@MM@ZA ; Set_Screen_Fade_Opacity_Player
	add	esp, 12					; 0000000cH

; 3537 : 					Clear_Fog_Override_Player(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Clear_Fog_Override_Player@@3P6AXPAVScriptableGameObj@@@ZA ; Clear_Fog_Override_Player
	add	esp, 4

; 3538 : 					blackout = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+31], 0
$LN4@Custom:

; 3539 : 				}
; 3540 : 			}
; 3541 : 		}
; 3542 : 		break;

	jmp	SHORT $LN20@Custom
$LN3@Custom:

; 3543 : 	case 310013: //Exited Vehicle Message
; 3544 : 		driving = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+30], 0

; 3545 : 		if (underwater)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+29]
	test	ecx, ecx
	je	SHORT $LN2@Custom

; 3546 : 			Commands->Apply_Damage(obj, 100, "Death", 0);

	push	0
	push	OFFSET ??_C@_05PGGAFPFO@Death?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H
$LN2@Custom:

; 3547 : 		break;

	jmp	SHORT $LN20@Custom
$LN1@Custom:

; 3548 : 	case 103301: //Entered Vehicle Message
; 3549 : 		driving = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+30], 1
$LN20@Custom:

; 3550 : 		break;
; 3551 : 	}
; 3552 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Vision_Control_2@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Vision_Control_2::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Vision_Control_2@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Vision_Control_2@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Vision_Control_2::Created, COMDAT
; _this$ = ecx

; 3465 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3466 : 	allowed = true; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 1

; 3467 : 	underwater = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+29], 0

; 3468 : 	driving = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+30], 0

; 3469 : 	blackout = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+31], 0

; 3470 : 	//Revert the screen incase player died while underwater
; 3471 : 	Set_Screen_Fade_Color_Player(obj, 0, 0, 0, 0); //revert color

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Color_Player@@3P6AXPAVScriptableGameObj@@MMMM@ZA ; Set_Screen_Fade_Color_Player
	add	esp, 20					; 00000014H

; 3472 : 	Set_Screen_Fade_Opacity_Player(obj,0, 0); //revert opacity

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Opacity_Player@@3P6AXPAVScriptableGameObj@@MM@ZA ; Set_Screen_Fade_Opacity_Player
	add	esp, 12					; 0000000cH

; 3473 : 	Set_Fog_Color_Player(obj, 256, 256, 256);

	push	256					; 00000100H
	push	256					; 00000100H
	push	256					; 00000100H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Fog_Color_Player@@3P6AXPAVScriptableGameObj@@III@ZA ; Set_Fog_Color_Player
	add	esp, 16					; 00000010H

; 3474 : 	Clear_Fog_Override_Player(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Clear_Fog_Override_Player@@3P6AXPAVScriptableGameObj@@@ZA ; Clear_Fog_Override_Player
	add	esp, 4

; 3475 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Vision_Control_2@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Vision_Control_2::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Vision_Control@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Vision_Control@@UAEPAXI@Z PROC			; RA_Vision_Control::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Vision_Control@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Vision_Control@@UAEPAXI@Z ENDP			; RA_Vision_Control::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Vision_Control@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Vision_Control@@UAE@XZ PROC			; RA_Vision_Control::~RA_Vision_Control, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Vision_Control@@UAE@XZ ENDP			; RA_Vision_Control::~RA_Vision_Control
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Vision_Control@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Vision_Control@@QAE@XZ PROC			; RA_Vision_Control::RA_Vision_Control, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Vision_Control@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Vision_Control@@QAE@XZ ENDP			; RA_Vision_Control::RA_Vision_Control
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Vision_Control@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Vision_Control@@UAEXXZ PROC ; RA_Vision_Control::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 3455 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3456 : 	Auto_Save_Variable(&allowed,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3457 : 	Auto_Save_Variable(&underwater,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 29					; 0000001dH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3458 : 	Auto_Save_Variable(&driving,4,3);

	push	3
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 30					; 0000001eH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3459 : 	Auto_Save_Variable(&blackout,4,4);

	push	4
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 31					; 0000001fH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3460 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Vision_Control@@UAEXXZ ENDP ; RA_Vision_Control::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Vision_Control@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
tv64 = -72						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Vision_Control@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Vision_Control::Custom, COMDAT
; _this$ = ecx

; 3385 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3386 : 	switch(type)

	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 325523		; 0004f793H
	jg	SHORT $LN22@Custom
	cmp	DWORD PTR tv64[ebp], 325523		; 0004f793H
	je	$LN10@Custom
	cmp	DWORD PTR tv64[ebp], 103301		; 00019385H
	je	$LN1@Custom
	cmp	DWORD PTR tv64[ebp], 258258		; 0003f0d2H
	je	SHORT $LN16@Custom
	cmp	DWORD PTR tv64[ebp], 310013		; 0004bafdH
	je	$LN3@Custom
	jmp	$LN18@Custom
$LN22@Custom:
	cmp	DWORD PTR tv64[ebp], 789789		; 000c0d1dH
	je	SHORT $LN15@Custom
	cmp	DWORD PTR tv64[ebp], 852852		; 000d0374H
	je	SHORT $LN17@Custom
	cmp	DWORD PTR tv64[ebp], 987987		; 000f1353H
	je	$LN11@Custom
	jmp	$LN18@Custom
$LN17@Custom:

; 3387 : 	{
; 3388 : 	case 852852: //Disabling type, will cause 'underwater' messages to be ignored
; 3389 : 		allowed = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0

; 3390 : 		break;

	jmp	$LN18@Custom
$LN16@Custom:

; 3391 : 	case 258258: //Enabling type, will allow 'underwater' messages
; 3392 : 		allowed = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 1

; 3393 : 		break;

	jmp	$LN18@Custom
$LN15@Custom:

; 3394 : 	case 789789: //Diving type, will activate underwater effect (overrides other effects)
; 3395 : 		if (allowed)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	je	$LN14@Custom

; 3396 : 		{
; 3397 : 			if (!driving) //oops, did I go overboard?

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+30]
	test	ecx, ecx
	jne	SHORT $LN13@Custom

; 3398 : 			{
; 3399 : 				Commands->Apply_Damage(obj, 100, "Death", 0); //I drowned

	push	0
	push	OFFSET ??_C@_05PGGAFPFO@Death?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H
$LN13@Custom:

; 3400 : 			}
; 3401 : 			if (blackout)//if blackout in effect, deactivate

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+31]
	test	ecx, ecx
	je	SHORT $LN12@Custom

; 3402 : 			{	
; 3403 : 				Set_Fog_Color_Player(obj, 256, 256, 256);

	push	256					; 00000100H
	push	256					; 00000100H
	push	256					; 00000100H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Fog_Color_Player@@3P6AXPAVScriptableGameObj@@III@ZA ; Set_Fog_Color_Player
	add	esp, 16					; 00000010H

; 3404 : 				Clear_Fog_Override_Player(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Clear_Fog_Override_Player@@3P6AXPAVScriptableGameObj@@@ZA ; Clear_Fog_Override_Player
	add	esp, 4

; 3405 : 				blackout = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+31], 0
$LN12@Custom:

; 3406 : 			}
; 3407 : 			Set_Screen_Fade_Color_Player(obj, 0, 0, 1, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Color_Player@@3P6AXPAVScriptableGameObj@@MMMM@ZA ; Set_Screen_Fade_Color_Player
	add	esp, 20					; 00000014H

; 3408 : 			Set_Screen_Fade_Opacity_Player(obj, 150, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@43160000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Opacity_Player@@3P6AXPAVScriptableGameObj@@MM@ZA ; Set_Screen_Fade_Opacity_Player
	add	esp, 12					; 0000000cH

; 3409 : 			underwater = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+29], 1
$LN14@Custom:

; 3410 : 		}
; 3411 : 		break;

	jmp	$LN18@Custom
$LN11@Custom:

; 3412 : 	case 987987: //Surfacing type, will deactivate underwater effect
; 3413 : 		Set_Screen_Fade_Color_Player(obj, 0, 0, 0, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Color_Player@@3P6AXPAVScriptableGameObj@@MMMM@ZA ; Set_Screen_Fade_Color_Player
	add	esp, 20					; 00000014H

; 3414 : 		Set_Screen_Fade_Opacity_Player(obj, 0, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Opacity_Player@@3P6AXPAVScriptableGameObj@@MM@ZA ; Set_Screen_Fade_Opacity_Player
	add	esp, 12					; 0000000cH

; 3415 : 		underwater = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+29], 0

; 3416 : 		break;

	jmp	$LN18@Custom
$LN10@Custom:

; 3417 : 	case 325523: //Blackout type, param 0 = blackout off, param 1 = blackout on
; 3418 : 		if (!underwater) //Underwater takes priority

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+29]
	test	ecx, ecx
	jne	$LN4@Custom

; 3419 : 		{
; 3420 : 			if (param == 1) //turn on effect

	cmp	DWORD PTR _param$[ebp], 1
	jne	$LN8@Custom

; 3421 : 			{
; 3422 : 				if (!blackout)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+31]
	test	ecx, ecx
	jne	$LN7@Custom

; 3423 : 				{
; 3424 : 					Set_Screen_Fade_Color_Player(obj, 0, 0, 0, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Color_Player@@3P6AXPAVScriptableGameObj@@MMMM@ZA ; Set_Screen_Fade_Color_Player
	add	esp, 20					; 00000014H

; 3425 : 					Set_Screen_Fade_Opacity_Player(obj, 150, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@43160000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Opacity_Player@@3P6AXPAVScriptableGameObj@@MM@ZA ; Set_Screen_Fade_Opacity_Player
	add	esp, 12					; 0000000cH

; 3426 : 					Set_Fog_Override_Player(obj, 0, 9);

	push	ecx
	movss	xmm0, DWORD PTR __real@41100000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Fog_Override_Player@@3P6AXPAVScriptableGameObj@@MM@ZA ; Set_Fog_Override_Player
	add	esp, 12					; 0000000cH

; 3427 : 					Set_Fog_Color_Player(obj, 0, 0, 0);

	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Fog_Color_Player@@3P6AXPAVScriptableGameObj@@III@ZA ; Set_Fog_Color_Player
	add	esp, 16					; 00000010H

; 3428 : 					blackout = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+31], 1
$LN7@Custom:

; 3429 : 				}
; 3430 : 			}

	jmp	$LN4@Custom
$LN8@Custom:

; 3431 : 			else if (!param) //turn off effect

	cmp	DWORD PTR _param$[ebp], 0
	jne	$LN4@Custom

; 3432 : 			{
; 3433 : 				if (blackout)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+31]
	test	ecx, ecx
	je	$LN4@Custom

; 3434 : 				{
; 3435 : 					Set_Screen_Fade_Color_Player(obj, 0, 0, 0, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Color_Player@@3P6AXPAVScriptableGameObj@@MMMM@ZA ; Set_Screen_Fade_Color_Player
	add	esp, 20					; 00000014H

; 3436 : 					Set_Screen_Fade_Opacity_Player(obj, 0, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Opacity_Player@@3P6AXPAVScriptableGameObj@@MM@ZA ; Set_Screen_Fade_Opacity_Player
	add	esp, 12					; 0000000cH

; 3437 : 					Clear_Fog_Override_Player(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Clear_Fog_Override_Player@@3P6AXPAVScriptableGameObj@@@ZA ; Clear_Fog_Override_Player
	add	esp, 4

; 3438 : 					blackout = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+31], 0
$LN4@Custom:

; 3439 : 				}
; 3440 : 			}
; 3441 : 		}
; 3442 : 		break;

	jmp	SHORT $LN18@Custom
$LN3@Custom:

; 3443 : 	case 310013: //Exited Vehicle Message
; 3444 : 		driving = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+30], 0

; 3445 : 		if (underwater)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+29]
	test	ecx, ecx
	je	SHORT $LN2@Custom

; 3446 : 			Commands->Apply_Damage(obj, 100, "Death", 0);

	push	0
	push	OFFSET ??_C@_05PGGAFPFO@Death?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H
$LN2@Custom:

; 3447 : 		break;

	jmp	SHORT $LN18@Custom
$LN1@Custom:

; 3448 : 	case 103301: //Entered Vehicle Message
; 3449 : 		driving = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+30], 1
$LN18@Custom:

; 3450 : 		break;
; 3451 : 	}
; 3452 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Vision_Control@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Vision_Control::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Vision_Control@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Vision_Control@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Vision_Control::Created, COMDAT
; _this$ = ecx

; 3372 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3373 : 	allowed = true; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 1

; 3374 : 	underwater = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+29], 0

; 3375 : 	driving = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+30], 0

; 3376 : 	blackout = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+31], 0

; 3377 : 	//Revert the screen incase player died while underwater
; 3378 : 	Set_Screen_Fade_Color_Player(obj, 0, 0, 0, 0); //revert color

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Color_Player@@3P6AXPAVScriptableGameObj@@MMMM@ZA ; Set_Screen_Fade_Color_Player
	add	esp, 20					; 00000014H

; 3379 : 	Set_Screen_Fade_Opacity_Player(obj,0, 0); //revert opacity

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Screen_Fade_Opacity_Player@@3P6AXPAVScriptableGameObj@@MM@ZA ; Set_Screen_Fade_Opacity_Player
	add	esp, 12					; 0000000cH

; 3380 : 	Set_Fog_Color_Player(obj, 256, 256, 256);

	push	256					; 00000100H
	push	256					; 00000100H
	push	256					; 00000100H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Set_Fog_Color_Player@@3P6AXPAVScriptableGameObj@@III@ZA ; Set_Fog_Color_Player
	add	esp, 16					; 00000010H

; 3381 : 	Clear_Fog_Override_Player(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?Clear_Fog_Override_Player@@3P6AXPAVScriptableGameObj@@@ZA ; Clear_Fog_Override_Player
	add	esp, 4

; 3382 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Vision_Control@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Vision_Control::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Visible_Driver@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Visible_Driver@@UAEPAXI@Z PROC			; RA_Visible_Driver::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Visible_Driver@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Visible_Driver@@UAEPAXI@Z ENDP			; RA_Visible_Driver::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Visible_Driver@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Visible_Driver@@UAE@XZ PROC			; RA_Visible_Driver::~RA_Visible_Driver, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Visible_Driver@@UAE@XZ ENDP			; RA_Visible_Driver::~RA_Visible_Driver
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Visible_Driver@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Visible_Driver@@QAE@XZ PROC			; RA_Visible_Driver::RA_Visible_Driver, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Visible_Driver@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Visible_Driver@@QAE@XZ ENDP			; RA_Visible_Driver::RA_Visible_Driver
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Visible_Driver@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Visible_Driver@@UAEXXZ PROC ; RA_Visible_Driver::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 3364 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3365 : 	Auto_Save_Variable(&modelID,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3366 : 	Auto_Save_Variable(&driverID,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3367 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Visible_Driver@@UAEXXZ ENDP ; RA_Visible_Driver::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Destroyed@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Visible_Driver::Destroyed, COMDAT
; _this$ = ecx

; 3355 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3356 : 	if (modelID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN2@Destroyed

; 3357 : 	{
; 3358 : 		Commands->Destroy_Object(Commands->Find_Object(modelID));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4

; 3359 : 		modelID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN2@Destroyed:

; 3360 : 	}
; 3361 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Destroyed@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Visible_Driver::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Killed@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_killer$ = 12						; size = 4
?Killed@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Visible_Driver::Killed, COMDAT
; _this$ = ecx

; 3346 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3347 : 	if (modelID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN2@Killed

; 3348 : 	{
; 3349 : 		Commands->Destroy_Object(Commands->Find_Object(modelID));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4

; 3350 : 		modelID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN2@Killed:

; 3351 : 	}
; 3352 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Visible_Driver::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
$T1 = -96						; size = 12
_object$2 = -20						; size = 4
_position$3 = -16					; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_Visible_Driver::Timer_Expired, COMDAT
; _this$ = ecx

; 3315 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3316 : 	if (number == 321789)

	cmp	DWORD PTR _number$[ebp], 321789		; 0004e8fdH
	jne	$LN6@Timer_Expi

; 3317 : 	{
; 3318 : 		if (Is_Stealth(obj))

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Is_Stealth@@YA_NPAVScriptableGameObj@@@Z ; Is_Stealth
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@Timer_Expi

; 3319 : 		{
; 3320 : 			if (modelID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN4@Timer_Expi

; 3321 : 			{
; 3322 : 				Commands->Destroy_Object(Commands->Find_Object(modelID));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4

; 3323 : 				modelID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN4@Timer_Expi:

; 3324 : 			}
; 3325 : 		}
; 3326 : 		else

	jmp	$LN1@Timer_Expi
$LN5@Timer_Expi:

; 3327 : 		{
; 3328 : 			if (driverID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	$LN1@Timer_Expi

; 3329 : 			{
; 3330 : 				if (!modelID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	$LN1@Timer_Expi

; 3331 : 				{
; 3332 : 					Vector3 position = Commands->Get_Bone_Position(obj, Get_Parameter("BoneName"));

	push	OFFSET ??_C@_08FPDFGKEJ@BoneName?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+68]
	call	eax
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _position$3[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 3333 : 					GameObject *object = Commands->Create_Object("Invisible_Object", position);

	lea	eax, DWORD PTR _position$3[ebp]
	push	eax
	push	OFFSET ??_C@_0BB@NHJNEILC@Invisible_Object?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _object$2[ebp], eax

; 3334 : 					Commands->Attach_To_Object_Bone(object, obj, Get_Parameter("BoneName"));

	push	OFFSET ??_C@_08FPDFGKEJ@BoneName?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _object$2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 3335 : 					Commands->Send_Custom_Event(obj, Commands->Find_Object(driverID), Get_Int_Parameter("Message"), Commands->Get_ID(object), 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _object$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_07BEIHKDLJ@Message?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 3336 : 					modelID = Commands->Get_ID(object);

	mov	eax, DWORD PTR _object$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
$LN1@Timer_Expi:

; 3337 : 				}
; 3338 : 
; 3339 : 			}
; 3340 : 		}
; 3341 : 		Commands->Start_Timer(obj, this, 2, 321789);

	push	321789					; 0004e8fdH
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN6@Timer_Expi:

; 3342 : 	}
; 3343 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Visible_Driver::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
$T1 = -96						; size = 12
_object$2 = -20						; size = 4
_position$3 = -16					; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Visible_Driver::Custom, COMDAT
; _this$ = ecx

; 3283 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3284 : 	if (type == CUSTOM_EVENT_VEHICLE_ENTERED)

	cmp	DWORD PTR _type$[ebp], 1000000028	; 3b9aca1cH
	jne	$LN5@Custom

; 3285 : 	{
; 3286 : 		if (!driverID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	$LN5@Custom

; 3287 : 		{
; 3288 : 			if (modelID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN4@Custom

; 3289 : 			{
; 3290 : 				Commands->Destroy_Object(Commands->Find_Object(modelID));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN4@Custom:

; 3291 : 			}
; 3292 : 			Vector3 position = Commands->Get_Bone_Position(obj,Get_Parameter("BoneName"));

	push	OFFSET ??_C@_08FPDFGKEJ@BoneName?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+68]
	call	eax
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _position$3[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 3293 : 			GameObject *object = Commands->Create_Object("Invisible_Object", position);

	lea	eax, DWORD PTR _position$3[ebp]
	push	eax
	push	OFFSET ??_C@_0BB@NHJNEILC@Invisible_Object?$AA@
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _object$2[ebp], eax

; 3294 : 			Commands->Attach_To_Object_Bone(object, obj, Get_Parameter("BoneName"));

	push	OFFSET ??_C@_08FPDFGKEJ@BoneName?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _object$2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 3295 : 			Commands->Send_Custom_Event(obj, sender, Get_Int_Parameter("Message"), Commands->Get_ID(object), 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _object$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_07BEIHKDLJ@Message?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 3296 : 			modelID = Commands->Get_ID(object);

	mov	eax, DWORD PTR _object$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax

; 3297 : 			driverID = Commands->Get_ID(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax
$LN5@Custom:

; 3298 : 		}
; 3299 : 	}
; 3300 : 	if (type == CUSTOM_EVENT_VEHICLE_EXITED)

	cmp	DWORD PTR _type$[ebp], 1000000029	; 3b9aca1dH
	jne	SHORT $LN1@Custom

; 3301 : 	{
; 3302 : 		if (modelID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN2@Custom

; 3303 : 		{
; 3304 : 			Commands->Destroy_Object(Commands->Find_Object(modelID));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4

; 3305 : 			modelID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN2@Custom:

; 3306 : 		}
; 3307 : 		if (Get_Vehicle_Occupant_Count(obj) == 0)

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Occupant_Count@@YAHPAVScriptableGameObj@@@Z ; Get_Vehicle_Occupant_Count
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@Custom

; 3308 : 		{
; 3309 : 			driverID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
$LN1@Custom:

; 3310 : 		}
; 3311 : 	}
; 3312 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Visible_Driver::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Visible_Driver::Created, COMDAT
; _this$ = ecx

; 3276 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3277 : 	modelID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 3278 : 	driverID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0

; 3279 : 	Commands->Start_Timer(obj, this, 2, 321789);

	push	321789					; 0004e8fdH
	push	ecx
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 3280 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Visible_Driver@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Visible_Driver::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Vehicle_Team_Timer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Vehicle_Team_Timer@@UAEPAXI@Z PROC		; RA_Vehicle_Team_Timer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Vehicle_Team_Timer@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Vehicle_Team_Timer@@UAEPAXI@Z ENDP		; RA_Vehicle_Team_Timer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Vehicle_Team_Timer@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Vehicle_Team_Timer@@UAE@XZ PROC			; RA_Vehicle_Team_Timer::~RA_Vehicle_Team_Timer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Vehicle_Team_Timer@@UAE@XZ ENDP			; RA_Vehicle_Team_Timer::~RA_Vehicle_Team_Timer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Vehicle_Team_Timer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Vehicle_Team_Timer@@QAE@XZ PROC			; RA_Vehicle_Team_Timer::RA_Vehicle_Team_Timer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Vehicle_Team_Timer@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Vehicle_Team_Timer@@QAE@XZ ENDP			; RA_Vehicle_Team_Timer::RA_Vehicle_Team_Timer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Vehicle_Team_Timer@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Vehicle_Team_Timer@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_Vehicle_Team_Timer::Timer_Expired, COMDAT
; _this$ = ecx

; 3265 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3266 : 	if (number == 32158)

	cmp	DWORD PTR _number$[ebp], 32158		; 00007d9eH
	jne	SHORT $LN2@Timer_Expi

; 3267 : 	{
; 3268 : 		Commands->Set_Player_Type(obj, -2); //make unteamed

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+252]
	call	edx
	add	esp, 8

; 3269 : 		Remove_Script(obj, "RA_Vehicle_Team_Timer"); //strip script (not really needed, but whatever)

	push	OFFSET ??_C@_0BG@HCDDJCHI@RA_Vehicle_Team_Timer?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Remove_Script@@YAXPAVScriptableGameObj@@PBD@Z ; Remove_Script
	add	esp, 8
$LN2@Timer_Expi:

; 3270 : 	}
; 3271 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_Vehicle_Team_Timer@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Vehicle_Team_Timer::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Vehicle_Team_Timer@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Vehicle_Team_Timer@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Vehicle_Team_Timer::Created, COMDAT
; _this$ = ecx

; 3260 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3261 : 	Commands->Start_Timer(obj, this, 20, 32158);

	push	32158					; 00007d9eH
	push	ecx
	movss	xmm0, DWORD PTR __real@41a00000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 3262 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Vehicle_Team_Timer@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Vehicle_Team_Timer::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Vehicle_Team_Set@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Vehicle_Team_Set@@UAEPAXI@Z PROC			; RA_Vehicle_Team_Set::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Vehicle_Team_Set@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Vehicle_Team_Set@@UAEPAXI@Z ENDP			; RA_Vehicle_Team_Set::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Vehicle_Team_Set@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Vehicle_Team_Set@@UAE@XZ PROC			; RA_Vehicle_Team_Set::~RA_Vehicle_Team_Set, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Vehicle_Team_Set@@UAE@XZ ENDP			; RA_Vehicle_Team_Set::~RA_Vehicle_Team_Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Vehicle_Team_Set@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Vehicle_Team_Set@@QAE@XZ PROC			; RA_Vehicle_Team_Set::RA_Vehicle_Team_Set, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Vehicle_Team_Set@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Vehicle_Team_Set@@QAE@XZ ENDP			; RA_Vehicle_Team_Set::RA_Vehicle_Team_Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Vehicle_Team_Set@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Vehicle_Team_Set@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Vehicle_Team_Set::Custom, COMDAT
; _this$ = ecx

; 3242 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3243 : 	if (type == CUSTOM_EVENT_VEHICLE_ENTERED)

	cmp	DWORD PTR _type$[ebp], 1000000028	; 3b9aca1cH
	jne	SHORT $LN4@Custom

; 3244 : 	{
; 3245 : 		Remove_Script(obj, "RA_Vehicle_Team_Timer"); //strip timer script if it exists

	push	OFFSET ??_C@_0BG@HCDDJCHI@RA_Vehicle_Team_Timer?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Remove_Script@@YAXPAVScriptableGameObj@@PBD@Z ; Remove_Script
	add	esp, 8
	jmp	SHORT $LN5@Custom
$LN4@Custom:

; 3246 : 	}
; 3247 : 	else if (type == CUSTOM_EVENT_VEHICLE_EXITED)

	cmp	DWORD PTR _type$[ebp], 1000000029	; 3b9aca1dH
	jne	SHORT $LN5@Custom

; 3248 : 	{
; 3249 : 		if (!Get_Vehicle_Occupant_Count(obj)) //If no one left in vehicle

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Vehicle_Occupant_Count@@YAHPAVScriptableGameObj@@@Z ; Get_Vehicle_Occupant_Count
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN5@Custom

; 3250 : 		{
; 3251 : 			Commands->Set_Player_Type(obj, Commands->Get_Player_Type(sender)); //set team type

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+252]
	call	edx
	add	esp, 8

; 3252 : 			Attach_Script_Once(obj, "RA_Vehicle_Team_Timer", ""); //attach timer script if it doesn't exist

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ??_C@_0BG@HCDDJCHI@RA_Vehicle_Team_Timer?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Attach_Script_Once@@YAXPAVScriptableGameObj@@PBD1@Z ; Attach_Script_Once
	add	esp, 12					; 0000000cH
$LN5@Custom:

; 3253 : 		}
; 3254 : 	}
; 3255 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Vehicle_Team_Set@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Vehicle_Team_Set::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Ore_Delivery_Zone@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Ore_Delivery_Zone@@UAEPAXI@Z PROC		; RA_Ore_Delivery_Zone::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Ore_Delivery_Zone@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Ore_Delivery_Zone@@UAEPAXI@Z ENDP		; RA_Ore_Delivery_Zone::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Ore_Delivery_Zone@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Ore_Delivery_Zone@@UAE@XZ PROC			; RA_Ore_Delivery_Zone::~RA_Ore_Delivery_Zone, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Ore_Delivery_Zone@@UAE@XZ ENDP			; RA_Ore_Delivery_Zone::~RA_Ore_Delivery_Zone
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Ore_Delivery_Zone@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Ore_Delivery_Zone@@QAE@XZ PROC			; RA_Ore_Delivery_Zone::RA_Ore_Delivery_Zone, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Ore_Delivery_Zone@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Ore_Delivery_Zone@@QAE@XZ ENDP			; RA_Ore_Delivery_Zone::RA_Ore_Delivery_Zone
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Entered@RA_Ore_Delivery_Zone@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_enterer$ = 12						; size = 4
?Entered@RA_Ore_Delivery_Zone@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Ore_Delivery_Zone::Entered, COMDAT
; _this$ = ecx

; 3229 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3230 : 	if (Is_Script_Attached(enterer, "RA_Ore_Truck") || Is_Script_Attached(enterer, "RA_Ore_Truck_2")) //Is this an Ore Truck?

	push	OFFSET ??_C@_0N@KBNLAHDA@RA_Ore_Truck?$AA@
	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@Entered
	push	OFFSET ??_C@_0P@MLLCDPHH@RA_Ore_Truck_2?$AA@
	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Entered
$LN2@Entered:

; 3231 : 	{
; 3232 : 		if (Commands->Get_Player_Type(enterer) == Get_Int_Parameter("Team")) //Is it a friendly truck?

	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	esi, eax
	push	OFFSET ??_C@_04GBPANCCF@Team?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	esi, eax
	jne	SHORT $LN1@Entered

; 3233 : 		{
; 3234 : 			Commands->Send_Custom_Event(obj, enterer, Get_Int_Parameter("Enter"), 0, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	OFFSET ??_C@_05IAOCCJNL@Enter?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN1@Entered:

; 3235 : 		}
; 3236 : 	}
; 3237 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Entered@RA_Ore_Delivery_Zone@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Ore_Delivery_Zone::Entered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Ore_Field@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Ore_Field@@UAEPAXI@Z PROC			; RA_Ore_Field::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Ore_Field@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Ore_Field@@UAEPAXI@Z ENDP			; RA_Ore_Field::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Ore_Field@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Ore_Field@@UAE@XZ PROC				; RA_Ore_Field::~RA_Ore_Field, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Ore_Field@@UAE@XZ ENDP				; RA_Ore_Field::~RA_Ore_Field
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Ore_Field@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Ore_Field@@QAE@XZ PROC				; RA_Ore_Field::RA_Ore_Field, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Ore_Field@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Ore_Field@@QAE@XZ ENDP				; RA_Ore_Field::RA_Ore_Field
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Exited@RA_Ore_Field@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_exiter$ = 12						; size = 4
?Exited@RA_Ore_Field@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Ore_Field::Exited, COMDAT
; _this$ = ecx

; 3219 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3220 : 	if (Is_Script_Attached(exiter, "RA_Ore_Truck") || Is_Script_Attached(exiter, "RA_Ore_Truck_2")) //Is this an Ore Truck?

	push	OFFSET ??_C@_0N@KBNLAHDA@RA_Ore_Truck?$AA@
	mov	eax, DWORD PTR _exiter$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@Exited
	push	OFFSET ??_C@_0P@MLLCDPHH@RA_Ore_Truck_2?$AA@
	mov	eax, DWORD PTR _exiter$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Exited
$LN1@Exited:

; 3221 : 	{
; 3222 : 		Commands->Send_Custom_Event(obj, exiter, Get_Int_Parameter("Exit"), 0, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	OFFSET ??_C@_04LBABLPF@Exit?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR _exiter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN2@Exited:

; 3223 : 	}
; 3224 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Exited@RA_Ore_Field@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Ore_Field::Exited
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Entered@RA_Ore_Field@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_enterer$ = 12						; size = 4
?Entered@RA_Ore_Field@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Ore_Field::Entered, COMDAT
; _this$ = ecx

; 3211 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3212 : 	if (Is_Script_Attached(enterer, "RA_Ore_Truck") || Is_Script_Attached(enterer, "RA_Ore_Truck_2")) //Is this an Ore Truck?

	push	OFFSET ??_C@_0N@KBNLAHDA@RA_Ore_Truck?$AA@
	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@Entered
	push	OFFSET ??_C@_0P@MLLCDPHH@RA_Ore_Truck_2?$AA@
	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Entered
$LN1@Entered:

; 3213 : 	{
; 3214 : 		Commands->Send_Custom_Event(obj, enterer, Get_Int_Parameter("Enter"), Get_Int_Parameter("Field_Value"), 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0M@DJINMBFD@Field_Value?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	push	OFFSET ??_C@_05IAOCCJNL@Enter?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN2@Entered:

; 3215 : 	}
; 3216 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Entered@RA_Ore_Field@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Ore_Field::Entered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Ore_Truck_2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Ore_Truck_2@@UAEPAXI@Z PROC			; RA_Ore_Truck_2::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Ore_Truck_2@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Ore_Truck_2@@UAEPAXI@Z ENDP			; RA_Ore_Truck_2::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Ore_Truck_2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Ore_Truck_2@@UAE@XZ PROC				; RA_Ore_Truck_2::~RA_Ore_Truck_2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Ore_Truck_2@@UAE@XZ ENDP				; RA_Ore_Truck_2::~RA_Ore_Truck_2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Ore_Truck_2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Ore_Truck_2@@QAE@XZ PROC				; RA_Ore_Truck_2::RA_Ore_Truck_2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Ore_Truck_2@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Ore_Truck_2@@QAE@XZ ENDP				; RA_Ore_Truck_2::RA_Ore_Truck_2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Ore_Truck_2@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Ore_Truck_2@@UAEXXZ PROC ; RA_Ore_Truck_2::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 3201 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3202 : 	Auto_Save_Variable(&scoops,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3203 : 	Auto_Save_Variable(&value,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3204 : 	Auto_Save_Variable(&harvesting,1,3);

	push	3
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3205 : 	Auto_Save_Variable(&field,4,4);

	push	4
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3206 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Ore_Truck_2@@UAEXXZ ENDP ; RA_Ore_Truck_2::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
$T1 = -80						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_Ore_Truck_2::Timer_Expired, COMDAT
; _this$ = ecx

; 3172 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3173 : 	if (number == 95123)

	cmp	DWORD PTR _number$[ebp], 95123		; 00017393H
	jne	$LN1@Timer_Expi

; 3174 : 	{
; 3175 : 		if (scoops < Get_Int_Parameter("Max_Capacity"))

	push	OFFSET ??_C@_0N@FEAECCKI@Max_Capacity?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+28], eax
	jge	$LN4@Timer_Expi

; 3176 : 		{
; 3177 : 			if (harvesting) //is truck still in the zone

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+36]
	test	ecx, ecx
	je	$LN3@Timer_Expi

; 3178 : 			{
; 3179 : 				Commands->Set_Animation(obj, Get_Parameter("Harvest_Anim"), false, 0, 0, -1, false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0N@BAAMNDP@Harvest_Anim?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3180 : 				scoops++; //take in scoop

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], ecx

; 3181 : 				Commands->Create_Sound(Get_Parameter("Harvest_Sound"),Commands->Get_Position(obj),obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0O@NMABFPAN@Harvest_Sound?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+172]
	call	eax
	add	esp, 12					; 0000000cH

; 3182 : 				value += (field / Get_Int_Parameter("Max_Capacity")); //add now

	push	OFFSET ??_C@_0N@FEAECCKI@Max_Capacity?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	cdq
	idiv	ecx
	cvtsi2ss xmm0, eax
	mov	eax, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [eax+32]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+32], xmm0

; 3183 : 				//Note: variable 'field' can be changed if new enter message was received between 'scoops'
; 3184 : 				//This allows the truck to enter a new field type in middle of harvesting, 
; 3185 : 				//Keeping the correct amount for old scoop, and receving new amount for new scoop
; 3186 : 			}
; 3187 : 			else

	jmp	SHORT $LN2@Timer_Expi
$LN3@Timer_Expi:

; 3188 : 			{
; 3189 : 				field = 0; //forget old field value

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
$LN2@Timer_Expi:

; 3190 : 			}
; 3191 : 		}
; 3192 : 		else

	jmp	SHORT $LN1@Timer_Expi
$LN4@Timer_Expi:

; 3193 : 		{
; 3194 : 			harvesting = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 0

; 3195 : 			field = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
$LN1@Timer_Expi:

; 3196 : 		}
; 3197 : 	}
; 3198 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Ore_Truck_2::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Animation_Complete@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_animation_name$ = 12					; size = 4
?Animation_Complete@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@PBD@Z PROC ; RA_Ore_Truck_2::Animation_Complete, COMDAT
; _this$ = ecx

; 3124 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3125 : 	if (!_stricmp(animation_name, Get_Parameter("Harvest_Anim")))

	push	OFFSET ??_C@_0N@BAAMNDP@Harvest_Anim?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _animation_name$[ebp]
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@Animation_

; 3126 : 	{
; 3127 : 		obj->As_PhysicalGameObj()->Clear_Animation();

	mov	eax, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	mov	ecx, eax
	call	?Clear_Animation@PhysicalGameObj@@QAEXXZ ; PhysicalGameObj::Clear_Animation

; 3128 : 		Commands->Start_Timer(obj, this, 0.25, 95123); //wait 0.25 seconds to start new anim

	push	95123					; 00017393H
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
	jmp	SHORT $LN1@Animation_
$LN3@Animation_:

; 3129 : 	}
; 3130 : 	else if (!_stricmp(animation_name, Get_Parameter("Deliver_Anim")))

	push	OFFSET ??_C@_0N@PONAAJDB@Deliver_Anim?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _animation_name$[ebp]
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@Animation_

; 3131 : 	{
; 3132 : 		//Ore delivered to refinery
; 3133 : 		Commands->Give_Money(obj, value, true); //pass out the cash

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+32]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+644]
	call	eax
	add	esp, 12					; 0000000cH

; 3134 : #ifdef SSGM
; 3135 : 		int PlayerID;
; 3136 : 		GameObject *driver = Get_Vehicle_Driver(obj);
; 3137 : 		float reward = 0.0f;
; 3138 : 		if(driver)
; 3139 : 		{
; 3140 : 			PlayerID = Get_Player_ID( driver);
; 3141 : 			if(value == 700)
; 3142 : 			{
; 3143 : 				reward = 5.0f;
; 3144 : 			}
; 3145 : 			else if(value == 1050)
; 3146 : 			{
; 3147 : 				reward = 7.0f;
; 3148 : 			}
; 3149 : 			else if(value == 1400)
; 3150 : 			{
; 3151 : 				reward = 10.0f;
; 3152 : 			}
; 3153 : 			StringClass msg;
; 3154 : 			const char *str2 = Get_Team_Name(Get_Team(PlayerID));
; 3155 : 			const char *str = Get_Player_Name_By_ID(PlayerID);
; 3156 : 			msg.Format("%s dumped some Ore at the refinary, giving the %s %d additional credits each.", str, str2, (int)value);
; 3157 : 			delete[] str2;
; 3158 : 			delete[] str;
; 3159 : 			SSGMGameLog::Log_Message(msg,"_OREDUMP");
; 3160 : 			msg.Format("ppage %d Well done soldier, you have given your team mates an extra %d credits each", PlayerID, (int)value);
; 3161 : 			Console_Input(msg);
; 3162 : 			Commands->Give_Points(driver, reward, false);
; 3163 : 		}
; 3164 : 		Create_2D_WAV_Sound_Team("gsweep.wav",0);
; 3165 : #endif
; 3166 : 		scoops = 0; //reset capacity

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 3167 : 		value = 0; //reset value

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+32], xmm0
$LN1@Animation_:

; 3168 : 	}
; 3169 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Animation_Complete@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@PBD@Z ENDP ; RA_Ore_Truck_2::Animation_Complete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
$T1 = -92						; size = 12
$T2 = -80						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Ore_Truck_2::Custom, COMDAT
; _this$ = ecx

; 3085 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3086 : 	if (type == Get_Int_Parameter("Field_Enter"))

	push	OFFSET ??_C@_0M@LCJHHOCB@Field_Enter?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	DWORD PTR _type$[ebp], eax
	jne	$LN10@Custom

; 3087 : 	{
; 3088 : 		if (scoops < Get_Int_Parameter("Max_Capacity"))

	push	OFFSET ??_C@_0N@FEAECCKI@Max_Capacity?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+28], eax
	jge	$LN9@Custom

; 3089 : 		{
; 3090 : 			field = param; //remember the field value

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _param$[ebp]
	mov	DWORD PTR [eax+40], ecx

; 3091 : 			if (!harvesting) //Only begin new anim if not harvesting

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+36]
	test	ecx, ecx
	jne	$LN8@Custom

; 3092 : 			{
; 3093 : 				Commands->Set_Animation(obj, Get_Parameter("Harvest_Anim"), false, 0, 0, -1, false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0N@BAAMNDP@Harvest_Anim?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3094 : 				scoops++; //take in scoop

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], ecx

; 3095 : 				Commands->Create_Sound(Get_Parameter("Harvest_Sound"),Commands->Get_Position(obj),obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0O@NMABFPAN@Harvest_Sound?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+172]
	call	eax
	add	esp, 12					; 0000000cH

; 3096 : 				value += (field / Get_Int_Parameter("Max_Capacity")); //add scoop value to total value

	push	OFFSET ??_C@_0N@FEAECCKI@Max_Capacity?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	cdq
	idiv	ecx
	cvtsi2ss xmm0, eax
	mov	eax, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [eax+32]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+32], xmm0
$LN8@Custom:

; 3097 : 			}
; 3098 : 			harvesting = true; //now harvesting

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 1

; 3099 : 		}
; 3100 : 		else

	jmp	SHORT $LN7@Custom
$LN9@Custom:

; 3101 : 		{
; 3102 : 			harvesting = false; //truck full, can't harvest any more

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 0

; 3103 : 			field = 0; //forget old field

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
$LN7@Custom:

; 3104 : 		}

	jmp	$LN1@Custom
$LN10@Custom:

; 3105 : 	}
; 3106 : 	else if (type == Get_Int_Parameter("Field_Exit"))

	push	OFFSET ??_C@_0L@KGCLACNJ@Field_Exit?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	DWORD PTR _type$[ebp], eax
	jne	SHORT $LN5@Custom

; 3107 : 	{
; 3108 : 		if (harvesting)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+36]
	test	ecx, ecx
	je	SHORT $LN4@Custom

; 3109 : 		{
; 3110 : 			harvesting = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 0
$LN4@Custom:

; 3111 : 		}
; 3112 : 	}

	jmp	$LN1@Custom
$LN5@Custom:

; 3113 : 	else if (type == Get_Int_Parameter("Deposit_Enter"))//Entered deposit zone

	push	OFFSET ??_C@_0O@FMANAMEC@Deposit_Enter?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	DWORD PTR _type$[ebp], eax
	jne	$LN1@Custom

; 3114 : 	{
; 3115 : 		if (value) //only dump ore if there is ore to dump

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+32]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@Custom

; 3116 : 		{
; 3117 : 			Commands->Create_Sound(Get_Parameter("Dump_Sound"),Commands->Get_Position(obj),obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0L@LICJIGHN@Dump_Sound?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+172]
	call	eax
	add	esp, 12					; 0000000cH

; 3118 : 			Commands->Set_Animation(obj, Get_Parameter("Deliver_Anim"), false, 0, 0, -1, false); 

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0N@PONAAJDB@Deliver_Anim?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH
$LN1@Custom:

; 3119 : 		}
; 3120 : 	}
; 3121 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Ore_Truck_2::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Ore_Truck_2::Created, COMDAT
; _this$ = ecx

; 3077 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3078 : 	scoops = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 3079 : 	value = 0;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+32], xmm0

; 3080 : 	harvesting = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 0

; 3081 : 	field = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0

; 3082 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Ore_Truck_2@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Ore_Truck_2::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Ore_Truck@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Ore_Truck@@UAEPAXI@Z PROC			; RA_Ore_Truck::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Ore_Truck@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Ore_Truck@@UAEPAXI@Z ENDP			; RA_Ore_Truck::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Ore_Truck@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Ore_Truck@@UAE@XZ PROC				; RA_Ore_Truck::~RA_Ore_Truck, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Ore_Truck@@UAE@XZ ENDP				; RA_Ore_Truck::~RA_Ore_Truck
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Ore_Truck@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Ore_Truck@@QAE@XZ PROC				; RA_Ore_Truck::RA_Ore_Truck, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Ore_Truck@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Ore_Truck@@QAE@XZ ENDP				; RA_Ore_Truck::RA_Ore_Truck
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Ore_Truck@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Ore_Truck@@UAEXXZ PROC	; RA_Ore_Truck::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 3067 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3068 : 	Auto_Save_Variable(&scoops,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3069 : 	Auto_Save_Variable(&value,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3070 : 	Auto_Save_Variable(&harvesting,1,3);

	push	3
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3071 : 	Auto_Save_Variable(&field,4,4);

	push	4
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 3072 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Ore_Truck@@UAEXXZ ENDP	; RA_Ore_Truck::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_Ore_Truck::Timer_Expired, COMDAT
; _this$ = ecx

; 3039 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 3040 : 	if (number == 95123)

	cmp	DWORD PTR _number$[ebp], 95123		; 00017393H
	jne	$LN1@Timer_Expi

; 3041 : 	{
; 3042 : 		if (scoops < Get_Int_Parameter("Max_Capacity"))

	push	OFFSET ??_C@_0N@FEAECCKI@Max_Capacity?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+28], eax
	jge	$LN4@Timer_Expi

; 3043 : 		{
; 3044 : 			if (harvesting) //is truck still in the zone

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+36]
	test	ecx, ecx
	je	$LN3@Timer_Expi

; 3045 : 			{
; 3046 : 				Commands->Set_Animation(obj, Get_Parameter("Harvest_Anim"), false, 0, 0, -1, false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0N@BAAMNDP@Harvest_Anim?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 3047 : 				scoops++; //take in scoop

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], ecx

; 3048 : 				value += (field / Get_Int_Parameter("Max_Capacity")); //add now

	push	OFFSET ??_C@_0N@FEAECCKI@Max_Capacity?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	cdq
	idiv	ecx
	cvtsi2ss xmm0, eax
	mov	eax, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [eax+32]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+32], xmm0

; 3049 : 				//Note: variable 'field' can be changed if new enter message was received between 'scoops'
; 3050 : 				//This allows the truck to enter a new field type in middle of harvesting, 
; 3051 : 				//Keeping the correct amount for old scoop, and receving new amount for new scoop
; 3052 : 			}
; 3053 : 			else

	jmp	SHORT $LN2@Timer_Expi
$LN3@Timer_Expi:

; 3054 : 			{
; 3055 : 				field = 0; //forget old field value

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
$LN2@Timer_Expi:

; 3056 : 			}
; 3057 : 		}
; 3058 : 		else

	jmp	SHORT $LN1@Timer_Expi
$LN4@Timer_Expi:

; 3059 : 		{
; 3060 : 			harvesting = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 0

; 3061 : 			field = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
$LN1@Timer_Expi:

; 3062 : 		}
; 3063 : 	}
; 3064 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Ore_Truck::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Animation_Complete@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_animation_name$ = 12					; size = 4
?Animation_Complete@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@PBD@Z PROC ; RA_Ore_Truck::Animation_Complete, COMDAT
; _this$ = ecx

; 2991 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2992 : 	if (!_stricmp(animation_name, Get_Parameter("Harvest_Anim")))

	push	OFFSET ??_C@_0N@BAAMNDP@Harvest_Anim?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _animation_name$[ebp]
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@Animation_

; 2993 : 	{
; 2994 : 		obj->As_PhysicalGameObj()->Clear_Animation();

	mov	eax, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	mov	ecx, eax
	call	?Clear_Animation@PhysicalGameObj@@QAEXXZ ; PhysicalGameObj::Clear_Animation

; 2995 : 		Commands->Start_Timer(obj, this, 0.25, 95123); //wait 0.25 seconds to start new anim

	push	95123					; 00017393H
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
	jmp	SHORT $LN1@Animation_
$LN3@Animation_:

; 2996 : 	}
; 2997 : 	else if (!_stricmp(animation_name, Get_Parameter("Deliver_Anim")))

	push	OFFSET ??_C@_0N@PONAAJDB@Deliver_Anim?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _animation_name$[ebp]
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@Animation_

; 2998 : 	{
; 2999 : 		//Ore delivered to refinery
; 3000 : 		Commands->Give_Money(obj, value, true); //pass out the cash

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+32]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+644]
	call	eax
	add	esp, 12					; 0000000cH

; 3001 : #ifdef SSGM
; 3002 : 		int PlayerID;
; 3003 : 		GameObject *driver = Get_Vehicle_Driver(obj);
; 3004 : 		float reward = 0.0f;
; 3005 : 		if(driver)
; 3006 : 		{
; 3007 : 			PlayerID = Get_Player_ID( driver);
; 3008 : 			if(value == 700)
; 3009 : 			{
; 3010 : 				reward = 5.0f;
; 3011 : 			}
; 3012 : 			else if(value == 1050)
; 3013 : 			{
; 3014 : 				reward = 7.0f;
; 3015 : 			}
; 3016 : 			else if(value == 1400)
; 3017 : 			{
; 3018 : 				reward = 10.0f;
; 3019 : 			}
; 3020 : 			StringClass msg;
; 3021 : 			const char *str2 = Get_Team_Name(Get_Team(PlayerID));
; 3022 : 			const char *str = Get_Player_Name_By_ID(PlayerID);
; 3023 : 			msg.Format("%s dumped some Ore at the refinary, giving the %s %d additional credits each.", str, str2, (int)value);
; 3024 : 			delete[] str2;
; 3025 : 			delete[] str;
; 3026 : 			SSGMGameLog::Log_Message(msg,"_OREDUMP");
; 3027 : 			msg.Format("ppage %d Well done soldier, you have given your team mates an extra %d credits each", PlayerID, (int)value);
; 3028 : 			Console_Input(msg);
; 3029 : 			Commands->Give_Points(driver, reward, false);
; 3030 : 		}
; 3031 : 		Create_2D_WAV_Sound_Team("gsweep.wav",0);
; 3032 : #endif
; 3033 : 		scoops = 0; //reset capacity

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 3034 : 		value = 0; //reset value

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+32], xmm0
$LN1@Animation_:

; 3035 : 	}
; 3036 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Animation_Complete@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@PBD@Z ENDP ; RA_Ore_Truck::Animation_Complete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Ore_Truck::Custom, COMDAT
; _this$ = ecx

; 2954 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2955 : 	if (type == Get_Int_Parameter("Field_Enter"))

	push	OFFSET ??_C@_0M@LCJHHOCB@Field_Enter?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	DWORD PTR _type$[ebp], eax
	jne	$LN10@Custom

; 2956 : 	{
; 2957 : 		if (scoops < Get_Int_Parameter("Max_Capacity"))

	push	OFFSET ??_C@_0N@FEAECCKI@Max_Capacity?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+28], eax
	jge	$LN9@Custom

; 2958 : 		{
; 2959 : 			field = param; //remember the field value

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _param$[ebp]
	mov	DWORD PTR [eax+40], ecx

; 2960 : 			if (!harvesting) //Only begin new anim if not harvesting

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+36]
	test	ecx, ecx
	jne	$LN8@Custom

; 2961 : 			{
; 2962 : 				Commands->Set_Animation(obj, Get_Parameter("Harvest_Anim"), false, 0, 0, -1, false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0N@BAAMNDP@Harvest_Anim?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 2963 : 				scoops++; //take in scoop

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], ecx

; 2964 : 				value += (field / Get_Int_Parameter("Max_Capacity")); //add scoop value to total value

	push	OFFSET ??_C@_0N@FEAECCKI@Max_Capacity?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	cdq
	idiv	ecx
	cvtsi2ss xmm0, eax
	mov	eax, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [eax+32]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+32], xmm0
$LN8@Custom:

; 2965 : 			}
; 2966 : 			harvesting = true; //now harvesting

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 1

; 2967 : 		}
; 2968 : 		else

	jmp	SHORT $LN7@Custom
$LN9@Custom:

; 2969 : 		{
; 2970 : 			harvesting = false; //truck full, can't harvest any more

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 0

; 2971 : 			field = 0; //forget old field

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
$LN7@Custom:

; 2972 : 		}

	jmp	$LN1@Custom
$LN10@Custom:

; 2973 : 	}
; 2974 : 	else if (type == Get_Int_Parameter("Field_Exit"))

	push	OFFSET ??_C@_0L@KGCLACNJ@Field_Exit?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	DWORD PTR _type$[ebp], eax
	jne	SHORT $LN5@Custom

; 2975 : 	{
; 2976 : 		if (harvesting)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+36]
	test	ecx, ecx
	je	SHORT $LN4@Custom

; 2977 : 		{
; 2978 : 			harvesting = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 0
$LN4@Custom:

; 2979 : 		}
; 2980 : 	}

	jmp	SHORT $LN1@Custom
$LN5@Custom:

; 2981 : 	else if (type == Get_Int_Parameter("Deposit_Enter"))//Entered deposit zone

	push	OFFSET ??_C@_0O@FMANAMEC@Deposit_Enter?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	DWORD PTR _type$[ebp], eax
	jne	SHORT $LN1@Custom

; 2982 : 	{
; 2983 : 		if (value) //only dump ore if there is ore to dump

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+32]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@Custom

; 2984 : 		{
; 2985 : 			Commands->Set_Animation(obj, Get_Parameter("Deliver_Anim"), false, 0, 0, -1, false); 

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0N@PONAAJDB@Deliver_Anim?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH
$LN1@Custom:

; 2986 : 		}
; 2987 : 	}
; 2988 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Ore_Truck::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Ore_Truck::Created, COMDAT
; _this$ = ecx

; 2946 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2947 : 	scoops = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 2948 : 	value = 0;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+32], xmm0

; 2949 : 	harvesting = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 0

; 2950 : 	field = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0

; 2951 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Ore_Truck@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Ore_Truck::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_DestroyNearest_OnDeath@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_DestroyNearest_OnDeath@@UAEPAXI@Z PROC		; RA_DestroyNearest_OnDeath::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_DestroyNearest_OnDeath@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_DestroyNearest_OnDeath@@UAEPAXI@Z ENDP		; RA_DestroyNearest_OnDeath::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_DestroyNearest_OnDeath@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_DestroyNearest_OnDeath@@UAE@XZ PROC		; RA_DestroyNearest_OnDeath::~RA_DestroyNearest_OnDeath, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_DestroyNearest_OnDeath@@UAE@XZ ENDP		; RA_DestroyNearest_OnDeath::~RA_DestroyNearest_OnDeath
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_DestroyNearest_OnDeath@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_DestroyNearest_OnDeath@@QAE@XZ PROC		; RA_DestroyNearest_OnDeath::RA_DestroyNearest_OnDeath, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_DestroyNearest_OnDeath@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_DestroyNearest_OnDeath@@QAE@XZ ENDP		; RA_DestroyNearest_OnDeath::RA_DestroyNearest_OnDeath
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Killed@RA_DestroyNearest_OnDeath@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
$T1 = -84						; size = 12
_victim$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_killer$ = 12						; size = 4
?Killed@RA_DestroyNearest_OnDeath@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_DestroyNearest_OnDeath::Killed, COMDAT
; _this$ = ecx

; 2934 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2935 : 	GameObject *victim = 0;

	mov	DWORD PTR _victim$[ebp], 0

; 2936 : 	victim = Find_Nearest_Preset(Commands->Get_Position(obj), Get_Parameter("Preset_Name"));

	push	OFFSET ??_C@_0M@KBNHOJJA@Preset_Name?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, -4					; fffffffcH
	mov	ecx, esp
	push	eax
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	call	?Find_Nearest_Preset@@YAPAVScriptableGameObj@@VVector3@@PBD@Z ; Find_Nearest_Preset
	add	esp, 16					; 00000010H
	mov	DWORD PTR _victim$[ebp], eax

; 2937 : 	if (victim)

	cmp	DWORD PTR _victim$[ebp], 0
	je	SHORT $LN2@Killed

; 2938 : 	{
; 2939 : 		Commands->Destroy_Object(victim);

	mov	eax, DWORD PTR _victim$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN2@Killed:

; 2940 : 	}
; 2941 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@RA_DestroyNearest_OnDeath@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_DestroyNearest_OnDeath::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Credit_Theft_Zone_Timer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Credit_Theft_Zone_Timer@@UAEPAXI@Z PROC		; RA_Credit_Theft_Zone_Timer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Credit_Theft_Zone_Timer@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Credit_Theft_Zone_Timer@@UAEPAXI@Z ENDP		; RA_Credit_Theft_Zone_Timer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Credit_Theft_Zone_Timer@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Credit_Theft_Zone_Timer@@UAE@XZ PROC		; RA_Credit_Theft_Zone_Timer::~RA_Credit_Theft_Zone_Timer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Credit_Theft_Zone_Timer@@UAE@XZ ENDP		; RA_Credit_Theft_Zone_Timer::~RA_Credit_Theft_Zone_Timer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Credit_Theft_Zone_Timer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Credit_Theft_Zone_Timer@@QAE@XZ PROC		; RA_Credit_Theft_Zone_Timer::RA_Credit_Theft_Zone_Timer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Credit_Theft_Zone_Timer@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Credit_Theft_Zone_Timer@@QAE@XZ ENDP		; RA_Credit_Theft_Zone_Timer::RA_Credit_Theft_Zone_Timer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Credit_Theft_Zone_Timer@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_thief$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Credit_Theft_Zone_Timer@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_Credit_Theft_Zone_Timer::Timer_Expired, COMDAT
; _this$ = ecx

; 2920 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2921 : 	GameObject *thief = Commands->Find_Object(number);

	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	mov	DWORD PTR _thief$[ebp], eax

; 2922 : 	if (thief)

	cmp	DWORD PTR _thief$[ebp], 0
	je	SHORT $LN1@Timer_Expi

; 2923 : 	{
; 2924 : 		if (!Get_Vehicle(thief) && obj->As_ScriptZoneGameObj()->Inside_Me(thief->As_SmartGameObj()))

	mov	eax, DWORD PTR _thief$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@Timer_Expi
	mov	eax, DWORD PTR _thief$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _thief$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+72]
	call	eax
	mov	ecx, eax
	call	?Inside_Me@ScriptZoneGameObj@@QAE_NPAVPhysicalGameObj@@@Z ; ScriptZoneGameObj::Inside_Me
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Timer_Expi

; 2925 : 		{
; 2926 : 			Commands->Send_Custom_Event(obj, thief, Get_Int_Parameter("Enter_Message"), Get_Int_Parameter("Team"), 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_04GBPANCCF@Team?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	push	OFFSET ??_C@_0O@MIIJBBJG@Enter_Message?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR _thief$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN1@Timer_Expi:

; 2927 : 		}
; 2928 : 	}
; 2929 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_Credit_Theft_Zone_Timer@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Credit_Theft_Zone_Timer::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Entered@RA_Credit_Theft_Zone_Timer@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_enterer$ = 12						; size = 4
?Entered@RA_Credit_Theft_Zone_Timer@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Credit_Theft_Zone_Timer::Entered, COMDAT
; _this$ = ecx

; 2909 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2910 : 	if (Is_Script_Attached(enterer, "RA_Thief") || Is_Script_Attached(enterer, "RA_Thief_Improved"))

	push	OFFSET ??_C@_08HADANCIC@RA_Thief?$AA@
	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@Entered
	push	OFFSET ??_C@_0BC@GOCDOIJN@RA_Thief_Improved?$AA@
	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Entered
$LN2@Entered:

; 2911 : 	{
; 2912 : 		if (!Get_Vehicle(enterer))

	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@Entered

; 2913 : 		{
; 2914 : 			Commands->Start_Timer(obj,this,Get_Float_Parameter("Time"),Commands->Get_ID(enterer));

	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_04OKOFBOPB@Time?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN1@Entered:

; 2915 : 		}
; 2916 : 	}
; 2917 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Entered@RA_Credit_Theft_Zone_Timer@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Credit_Theft_Zone_Timer::Entered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Credit_Theft_Zone@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Credit_Theft_Zone@@UAEPAXI@Z PROC		; RA_Credit_Theft_Zone::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Credit_Theft_Zone@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Credit_Theft_Zone@@UAEPAXI@Z ENDP		; RA_Credit_Theft_Zone::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Credit_Theft_Zone@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Credit_Theft_Zone@@UAE@XZ PROC			; RA_Credit_Theft_Zone::~RA_Credit_Theft_Zone, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Credit_Theft_Zone@@UAE@XZ ENDP			; RA_Credit_Theft_Zone::~RA_Credit_Theft_Zone
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Credit_Theft_Zone@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Credit_Theft_Zone@@QAE@XZ PROC			; RA_Credit_Theft_Zone::RA_Credit_Theft_Zone, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Credit_Theft_Zone@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Credit_Theft_Zone@@QAE@XZ ENDP			; RA_Credit_Theft_Zone::RA_Credit_Theft_Zone
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Entered@RA_Credit_Theft_Zone@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_enterer$ = 12						; size = 4
?Entered@RA_Credit_Theft_Zone@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Credit_Theft_Zone::Entered, COMDAT
; _this$ = ecx

; 2896 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2897 : 	if (Is_Script_Attached(enterer, "RA_Thief") || Is_Script_Attached(enterer, "RA_Thief_Improved")) //Is it a thief?

	push	OFFSET ??_C@_08HADANCIC@RA_Thief?$AA@
	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@Entered
	push	OFFSET ??_C@_0BC@GOCDOIJN@RA_Thief_Improved?$AA@
	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Entered
$LN2@Entered:

; 2898 : 	{
; 2899 : 		if (!Get_Vehicle(enterer))

	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@Entered

; 2900 : 		{
; 2901 : 	 		Commands->Send_Custom_Event(obj, enterer, Get_Int_Parameter("Enter_Message"), Get_Int_Parameter("Team"), 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	OFFSET ??_C@_04GBPANCCF@Team?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	push	OFFSET ??_C@_0O@MIIJBBJG@Enter_Message?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN1@Entered:

; 2902 : 		}
; 2903 : 	}
; 2904 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Entered@RA_Credit_Theft_Zone@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Credit_Theft_Zone::Entered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Thief_Improved@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Thief_Improved@@UAEPAXI@Z PROC			; RA_Thief_Improved::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Thief_Improved@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Thief_Improved@@UAEPAXI@Z ENDP			; RA_Thief_Improved::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Thief_Improved@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Thief_Improved@@UAE@XZ PROC			; RA_Thief_Improved::~RA_Thief_Improved, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Thief_Improved@@UAE@XZ ENDP			; RA_Thief_Improved::~RA_Thief_Improved
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Thief_Improved@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Thief_Improved@@QAE@XZ PROC			; RA_Thief_Improved::RA_Thief_Improved, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Thief_Improved@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Thief_Improved@@QAE@XZ ENDP			; RA_Thief_Improved::RA_Thief_Improved
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Thief_Improved@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_str$1 = -120						; size = 100
_credits$2 = -20					; size = 4
_theft$3 = -16						; size = 4
_ally$4 = -12						; size = 4
_enemy$5 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Thief_Improved@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Thief_Improved::Custom, COMDAT
; _this$ = ecx

; 2873 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 184				; 000000b8H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2874 : 	if (type == Get_Int_Parameter("Enter_Message"))

	push	OFFSET ??_C@_0O@MIIJBBJG@Enter_Message?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	DWORD PTR _type$[ebp], eax
	jne	$LN2@Custom

; 2875 : 	{
; 2876 : 		int enemy = param; //param will be team type to steal from

	mov	eax, DWORD PTR _param$[ebp]
	mov	DWORD PTR _enemy$5[ebp], eax

; 2877 : 		int ally = Commands->Get_Player_Type(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _ally$4[ebp], eax

; 2878 : 		if (ally == enemy)

	mov	eax, DWORD PTR _ally$4[ebp]
	cmp	eax, DWORD PTR _enemy$5[ebp]
	jne	SHORT $LN1@Custom

; 2879 : 		{
; 2880 : 			return; //Don't bother to steal from self...

	jmp	$LN3@Custom
$LN1@Custom:

; 2881 : 		}
; 2882 : 		float theft = Steal_Team_Credits(Get_Float_Parameter("Percentage"), enemy);

	mov	eax, DWORD PTR _enemy$5[ebp]
	push	eax
	push	OFFSET ??_C@_0L@GKJDIJEO@Percentage?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	call	DWORD PTR ?Steal_Team_Credits@@3P6AMMH@ZA ; Steal_Team_Credits
	add	esp, 8
	fstp	DWORD PTR _theft$3[ebp]

; 2883 : 		float credits = theft / Get_Team_Player_Count(ally);

	mov	eax, DWORD PTR _ally$4[ebp]
	push	eax
	call	?Get_Team_Player_Count@@YAHH@Z		; Get_Team_Player_Count
	add	esp, 4
	cvtsi2ss xmm0, eax
	movss	xmm1, DWORD PTR _theft$3[ebp]
	divss	xmm1, xmm0
	movss	DWORD PTR _credits$2[ebp], xmm1

; 2884 : 		Commands->Give_Money(obj, credits, true);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR _credits$2[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+644]
	call	edx
	add	esp, 12					; 0000000cH

; 2885 : 		char str[100];
; 2886 : 		sprintf(str,"Credits Stolen: %.0f\nCredits Given: %.0f",theft,credits);

	cvtss2sd xmm0, DWORD PTR _credits$2[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _theft$3[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0CJ@JGGHHOJE@Credits?5Stolen?3?5?$CF?40f?6Credits?5Giv@
	lea	eax, DWORD PTR _str$1[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 24					; 00000018H

; 2887 : 		Send_Message_Team(ally,255,255,255,str);

	lea	eax, DWORD PTR _str$1[ebp]
	push	eax
	push	255					; 000000ffH
	push	255					; 000000ffH
	push	255					; 000000ffH
	mov	ecx, DWORD PTR _ally$4[ebp]
	push	ecx
	call	?Send_Message_Team@@YAXHIIIPBD@Z	; Send_Message_Team
	add	esp, 20					; 00000014H

; 2888 : 		Create_2D_Sound_Team(Get_Parameter("Sound"),ally);

	mov	eax, DWORD PTR _ally$4[ebp]
	push	eax
	push	OFFSET ??_C@_05MAHMNMLO@Sound?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	call	DWORD PTR ?Create_2D_Sound_Team@@3P6AHPBDH@ZA ; Create_2D_Sound_Team
	add	esp, 8

; 2889 : 		Remove_Script(obj, "RA_Thief_Improved"); //Strip off script after use

	push	OFFSET ??_C@_0BC@GOCDOIJN@RA_Thief_Improved?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Remove_Script@@YAXPAVScriptableGameObj@@PBD@Z ; Remove_Script
	add	esp, 8
$LN2@Custom:
$LN3@Custom:

; 2890 : 	}
; 2891 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Thief_Improved@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Thief_Improved::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Thief@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Thief@@UAEPAXI@Z PROC				; RA_Thief::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Thief@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Thief@@UAEPAXI@Z ENDP				; RA_Thief::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Thief@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Thief@@UAE@XZ PROC				; RA_Thief::~RA_Thief, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Thief@@UAE@XZ ENDP				; RA_Thief::~RA_Thief
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Thief@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Thief@@QAE@XZ PROC				; RA_Thief::RA_Thief, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Thief@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Thief@@QAE@XZ ENDP				; RA_Thief::RA_Thief
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Thief@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_credits$1 = -20					; size = 4
_theft$2 = -16						; size = 4
_ally$3 = -12						; size = 4
_enemy$4 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Thief@@EAEXPAVScriptableGameObj@@HH0@Z PROC	; RA_Thief::Custom, COMDAT
; _this$ = ecx

; 2854 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2855 : 	if (type == Get_Int_Parameter("Enter_Message"))

	push	OFFSET ??_C@_0O@MIIJBBJG@Enter_Message?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	DWORD PTR _type$[ebp], eax
	jne	$LN2@Custom

; 2856 : 	{
; 2857 : 		int enemy = param; //param will be team type to steal from

	mov	eax, DWORD PTR _param$[ebp]
	mov	DWORD PTR _enemy$4[ebp], eax

; 2858 : 		int ally = Commands->Get_Player_Type(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _ally$3[ebp], eax

; 2859 : 		if (ally == enemy)

	mov	eax, DWORD PTR _ally$3[ebp]
	cmp	eax, DWORD PTR _enemy$4[ebp]
	jne	SHORT $LN1@Custom

; 2860 : 		{
; 2861 : 			return; //Don't bother to steal from self...

	jmp	SHORT $LN3@Custom
$LN1@Custom:

; 2862 : 		}
; 2863 : 		float theft = Steal_Team_Credits(Get_Float_Parameter("Percentage"), enemy);

	mov	eax, DWORD PTR _enemy$4[ebp]
	push	eax
	push	OFFSET ??_C@_0L@GKJDIJEO@Percentage?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	call	DWORD PTR ?Steal_Team_Credits@@3P6AMMH@ZA ; Steal_Team_Credits
	add	esp, 8
	fstp	DWORD PTR _theft$2[ebp]

; 2864 : 		float credits = theft / Get_Team_Player_Count(ally);

	mov	eax, DWORD PTR _ally$3[ebp]
	push	eax
	call	?Get_Team_Player_Count@@YAHH@Z		; Get_Team_Player_Count
	add	esp, 4
	cvtsi2ss xmm0, eax
	movss	xmm1, DWORD PTR _theft$2[ebp]
	divss	xmm1, xmm0
	movss	DWORD PTR _credits$1[ebp], xmm1

; 2865 : 		Commands->Give_Money(obj, credits, true);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR _credits$1[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+644]
	call	edx
	add	esp, 12					; 0000000cH

; 2866 : 		Remove_Script(obj, "RA_Thief"); //Strip off script after use

	push	OFFSET ??_C@_08HADANCIC@RA_Thief?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Remove_Script@@YAXPAVScriptableGameObj@@PBD@Z ; Remove_Script
	add	esp, 8
$LN2@Custom:
$LN3@Custom:

; 2867 : 	}
; 2868 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Thief@@EAEXPAVScriptableGameObj@@HH0@Z ENDP	; RA_Thief::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Vehicle_Regen@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Vehicle_Regen@@UAEPAXI@Z PROC			; RA_Vehicle_Regen::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Vehicle_Regen@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Vehicle_Regen@@UAEPAXI@Z ENDP			; RA_Vehicle_Regen::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Vehicle_Regen@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Vehicle_Regen@@UAE@XZ PROC			; RA_Vehicle_Regen::~RA_Vehicle_Regen, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Vehicle_Regen@@UAE@XZ ENDP			; RA_Vehicle_Regen::~RA_Vehicle_Regen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Vehicle_Regen@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Vehicle_Regen@@QAE@XZ PROC			; RA_Vehicle_Regen::RA_Vehicle_Regen, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Vehicle_Regen@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Vehicle_Regen@@QAE@XZ ENDP			; RA_Vehicle_Regen::RA_Vehicle_Regen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Vehicle_Regen@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Vehicle_Regen@@UAEXXZ PROC ; RA_Vehicle_Regen::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 2847 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2848 : 	Auto_Save_Variable(&healing,1,1);

	push	1
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 2849 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Vehicle_Regen@@UAEXXZ ENDP ; RA_Vehicle_Regen::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Vehicle_Regen@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
tv272 = -96						; size = 4
tv257 = -96						; size = 4
tv230 = -96						; size = 4
tv216 = -96						; size = 4
tv297 = -92						; size = 4
tv295 = -92						; size = 4
tv293 = -92						; size = 4
tv291 = -92						; size = 4
tv200 = -92						; size = 4
tv289 = -88						; size = 4
tv268 = -88						; size = 4
tv253 = -88						; size = 4
tv234 = -88						; size = 4
tv223 = -88						; size = 4
tv209 = -88						; size = 4
_health$1 = -20						; size = 4
_max_health$2 = -16					; size = 4
_cur_total$3 = -12					; size = 4
_max_total$4 = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Vehicle_Regen@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_Vehicle_Regen::Timer_Expired, COMDAT
; _this$ = ecx

; 2820 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2821 : 	if (number == Get_Float_Parameter("TimerID"))

	cvtsi2ss xmm0, DWORD PTR _number$[ebp]
	push	OFFSET ??_C@_07JKEPGEHM@TimerID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv289[ebp], xmm0
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR tv200[ebp]
	movss	xmm0, DWORD PTR tv289[ebp]
	ucomiss	xmm0, DWORD PTR tv200[ebp]
	lahf
	test	ah, 68					; 00000044H
	jp	$LN1@Timer_Expi

; 2822 : 	{
; 2823 : 		float max_total = Commands->Get_Max_Health(obj) + Commands->Get_Max_Shield_Strength(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+224]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv209[ebp]
	movss	xmm0, DWORD PTR tv209[ebp]
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+236]
	movss	DWORD PTR tv291[ebp], xmm0
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv216[ebp]
	movss	xmm0, DWORD PTR tv291[ebp]
	addss	xmm0, DWORD PTR tv216[ebp]
	movss	DWORD PTR _max_total$4[ebp], xmm0

; 2824 : 		float cur_total = Commands->Get_Health(obj) + Commands->Get_Shield_Strength(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv223[ebp]
	movss	xmm0, DWORD PTR tv223[ebp]
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+232]
	movss	DWORD PTR tv293[ebp], xmm0
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv230[ebp]
	movss	xmm0, DWORD PTR tv293[ebp]
	addss	xmm0, DWORD PTR tv230[ebp]
	movss	DWORD PTR _cur_total$3[ebp], xmm0

; 2825 : 		if (cur_total < (max_total * Get_Float_Parameter("Percentage")))

	push	OFFSET ??_C@_0L@GKJDIJEO@Percentage?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR tv234[ebp]
	movss	xmm0, DWORD PTR tv234[ebp]
	mulss	xmm0, DWORD PTR _max_total$4[ebp]
	comiss	xmm0, DWORD PTR _cur_total$3[ebp]
	jbe	$LN4@Timer_Expi

; 2826 : 		{
; 2827 : 			float max_health = Commands->Get_Max_Health(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+224]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _max_health$2[ebp]

; 2828 : 			float health = Commands->Get_Health(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _health$1[ebp]

; 2829 : 			if (health < max_health) //Is the Health hurt?

	movss	xmm0, DWORD PTR _max_health$2[ebp]
	comiss	xmm0, DWORD PTR _health$1[ebp]
	jbe	SHORT $LN3@Timer_Expi

; 2830 : 			{
; 2831 : 				Commands->Set_Health(obj, Commands->Get_Health(obj) + Get_Float_Parameter("Heal"));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv253[ebp]
	movss	xmm0, DWORD PTR tv253[ebp]
	push	OFFSET ??_C@_04NNPLJJOH@Heal?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv295[ebp], xmm0
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR tv257[ebp]
	movss	xmm0, DWORD PTR tv295[ebp]
	addss	xmm0, DWORD PTR tv257[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+228]
	call	edx
	add	esp, 8

; 2832 : 			}
; 2833 : 			else //Must be the shield then

	jmp	SHORT $LN2@Timer_Expi
$LN3@Timer_Expi:

; 2834 : 			{
; 2835 : 				Commands->Set_Shield_Strength(obj, Commands->Get_Shield_Strength(obj) + Get_Float_Parameter("Heal"));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+232]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv268[ebp]
	movss	xmm0, DWORD PTR tv268[ebp]
	push	OFFSET ??_C@_04NNPLJJOH@Heal?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv297[ebp], xmm0
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR tv272[ebp]
	movss	xmm0, DWORD PTR tv297[ebp]
	addss	xmm0, DWORD PTR tv272[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+240]
	call	edx
	add	esp, 8
$LN2@Timer_Expi:

; 2836 : 			}
; 2837 : 			Commands->Start_Timer(obj, this, Get_Float_Parameter("Time"), Get_Int_Parameter("TimerID"));

	push	OFFSET ??_C@_07JKEPGEHM@TimerID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	push	OFFSET ??_C@_04OKOFBOPB@Time?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 2838 : 		}
; 2839 : 		else

	jmp	SHORT $LN1@Timer_Expi
$LN4@Timer_Expi:

; 2840 : 		{
; 2841 : 			healing = false; //above percentage

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0
$LN1@Timer_Expi:

; 2842 : 		}
; 2843 : 	}
; 2844 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_Vehicle_Regen@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Vehicle_Regen::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Damaged@RA_Vehicle_Regen@@EAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
tv179 = -88						; size = 4
tv165 = -88						; size = 4
tv199 = -84						; size = 4
tv197 = -84						; size = 4
tv183 = -80						; size = 4
tv172 = -80						; size = 4
tv158 = -80						; size = 4
_cur_total$1 = -12					; size = 4
_max_total$2 = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_amount$ = 16						; size = 4
?Damaged@RA_Vehicle_Regen@@EAEXPAVScriptableGameObj@@0M@Z PROC ; RA_Vehicle_Regen::Damaged, COMDAT
; _this$ = ecx

; 2806 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2807 : 	if (!healing)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	jne	$LN1@Damaged

; 2808 : 	{
; 2809 : 		float max_total = Commands->Get_Max_Health(obj) + Commands->Get_Max_Shield_Strength(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+224]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv158[ebp]
	movss	xmm0, DWORD PTR tv158[ebp]
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+236]
	movss	DWORD PTR tv197[ebp], xmm0
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv165[ebp]
	movss	xmm0, DWORD PTR tv197[ebp]
	addss	xmm0, DWORD PTR tv165[ebp]
	movss	DWORD PTR _max_total$2[ebp], xmm0

; 2810 : 		float cur_total = Commands->Get_Health(obj) + Commands->Get_Shield_Strength(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv172[ebp]
	movss	xmm0, DWORD PTR tv172[ebp]
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+232]
	movss	DWORD PTR tv199[ebp], xmm0
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv179[ebp]
	movss	xmm0, DWORD PTR tv199[ebp]
	addss	xmm0, DWORD PTR tv179[ebp]
	movss	DWORD PTR _cur_total$1[ebp], xmm0

; 2811 : 		if (cur_total < (max_total * Get_Float_Parameter("Percentage")))

	push	OFFSET ??_C@_0L@GKJDIJEO@Percentage?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR tv183[ebp]
	movss	xmm0, DWORD PTR tv183[ebp]
	mulss	xmm0, DWORD PTR _max_total$2[ebp]
	comiss	xmm0, DWORD PTR _cur_total$1[ebp]
	jbe	SHORT $LN1@Damaged

; 2812 : 		{
; 2813 : 			Commands->Start_Timer(obj, this, Get_Float_Parameter("Time"), Get_Int_Parameter("TimerID"));

	push	OFFSET ??_C@_07JKEPGEHM@TimerID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	push	OFFSET ??_C@_04OKOFBOPB@Time?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 2814 : 			healing = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 1
$LN1@Damaged:

; 2815 : 		}
; 2816 : 	}
; 2817 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@RA_Vehicle_Regen@@EAEXPAVScriptableGameObj@@0M@Z ENDP ; RA_Vehicle_Regen::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Vehicle_Regen@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Vehicle_Regen@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Vehicle_Regen::Created, COMDAT
; _this$ = ecx

; 2801 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2802 : 	healing = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0

; 2803 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Vehicle_Regen@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Vehicle_Regen::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Base_Defense_Chargeup@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Base_Defense_Chargeup@@UAEPAXI@Z PROC		; RA_Base_Defense_Chargeup::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Base_Defense_Chargeup@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Base_Defense_Chargeup@@UAEPAXI@Z ENDP		; RA_Base_Defense_Chargeup::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Base_Defense_Chargeup@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Base_Defense_Chargeup@@UAE@XZ PROC		; RA_Base_Defense_Chargeup::~RA_Base_Defense_Chargeup, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Base_Defense_Chargeup@@UAE@XZ ENDP		; RA_Base_Defense_Chargeup::~RA_Base_Defense_Chargeup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Base_Defense_Chargeup@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Base_Defense_Chargeup@@QAE@XZ PROC		; RA_Base_Defense_Chargeup::RA_Base_Defense_Chargeup, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Base_Defense_Chargeup@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Base_Defense_Chargeup@@QAE@XZ ENDP		; RA_Base_Defense_Chargeup::RA_Base_Defense_Chargeup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Base_Defense_Chargeup@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Base_Defense_Chargeup@@UAEXXZ PROC ; RA_Base_Defense_Chargeup::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 2510 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2511 : 	Auto_Save_Variable(&targetID,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 2512 : 	Auto_Save_Variable(&attacking,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 2513 : 	Auto_Save_Variable(&current_priority,4,3);

	push	3
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 2514 : 	Auto_Save_Variable(&attack_timer,4,4);

	push	4
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 2515 : 	Auto_Save_Variable(&loop_count,4,5);

	push	5
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 2516 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Base_Defense_Chargeup@@UAEXXZ ENDP ; RA_Base_Defense_Chargeup::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Animation_Complete@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@PBD@Z
_TEXT	SEGMENT
tv93 = -72						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_animation_name$ = 12					; size = 4
?Animation_Complete@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@PBD@Z PROC ; RA_Base_Defense_Chargeup::Animation_Complete, COMDAT
; _this$ = ecx

; 2273 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2274 : 	if (Commands->Get_Health(Commands->Find_Object(damageID)))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv93[ebp]
	movss	xmm0, DWORD PTR tv93[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@Animation_

; 2275 : 	{
; 2276 : 		Attack(Commands->Find_Object(damagerID),Commands->Find_Object(damageID));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attack@RA_Base_Defense_Chargeup@@AAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Chargeup::Attack
$LN1@Animation_:

; 2277 : 	}
; 2278 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Animation_Complete@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@PBD@Z ENDP ; RA_Base_Defense_Chargeup::Animation_Complete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Action_Complete@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_action_id$ = 12					; size = 4
_complete_reason$ = 16					; size = 4
?Action_Complete@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z PROC ; RA_Base_Defense_Chargeup::Action_Complete, COMDAT
; _this$ = ecx

; 2500 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2501 : 	if (action_id == 100) //Attack completed

	cmp	DWORD PTR _action_id$[ebp], 100		; 00000064H
	jne	SHORT $LN2@Action_Com

; 2502 : 	{
; 2503 : 		attacking = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+40], 0

; 2504 : 		targetID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 2505 : 		current_priority = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 10			; 0000000aH
$LN2@Action_Com:

; 2506 : 	}
; 2507 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Action_Complete@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z ENDP ; RA_Base_Defense_Chargeup::Action_Complete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
tv139 = -368						; size = 4
$T1 = -364						; size = 12
$T2 = -352						; size = 12
$T3 = -340						; size = 12
_min$4 = -264						; size = 4
_max$5 = -260						; size = 4
_range$6 = -256						; size = 4
_targetPos$7 = -252					; size = 12
_objPos$8 = -240					; size = 12
_myType$9 = -228					; size = 4
_TargetType$10 = -224					; size = 4
_target$11 = -220					; size = 4
_params$12 = -216					; size = 196
_pos$13 = -20						; size = 12
_call_attack$ = -5					; size = 1
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@H@Z PROC ; RA_Base_Defense_Chargeup::Timer_Expired, COMDAT
; _this$ = ecx

; 2369 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 368				; 00000170H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2370 : 	if (number == 1)

	cmp	DWORD PTR _number$[ebp], 1
	jne	$LN30@Timer_Expi

; 2371 : 	{
; 2372 : 		if (Is_Base_Powered(Get_Object_Type(obj)))

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Object_Type@@YAHPAVScriptableGameObj@@@Z ; Get_Object_Type
	add	esp, 4
	push	eax
	call	?Is_Base_Powered@@YA_NH@Z		; Is_Base_Powered
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN29@Timer_Expi

; 2373 : 		{
; 2374 : 			Commands->Enable_Enemy_Seen(obj,true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+300]
	call	edx
	add	esp, 8

; 2375 : 		}
; 2376 : 		else

	jmp	SHORT $LN28@Timer_Expi
$LN29@Timer_Expi:

; 2377 : 		{
; 2378 : 			Commands->Enable_Enemy_Seen(obj,false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+300]
	call	edx
	add	esp, 8

; 2379 : 			//should cause the defense to stop attacking if the power goes low
; 2380 : 			Commands->Action_Reset(obj, 100); //I have no idea what this number does...

	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 8

; 2381 : 			attacking = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+40], 0

; 2382 : 			current_priority = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 10			; 0000000aH
$LN28@Timer_Expi:

; 2383 : 		}
; 2384 : 		Commands->Start_Timer(obj,this,1.0,1);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN30@Timer_Expi:

; 2385 : 	}
; 2386 : 	if (number != 11)

	cmp	DWORD PTR _number$[ebp], 11		; 0000000bH
	je	SHORT $LN27@Timer_Expi

; 2387 : 	{
; 2388 : 		return; //If its not the timer we're interested in, end now

	jmp	$LN31@Timer_Expi
$LN27@Timer_Expi:

; 2389 : 	}
; 2390 : 	bool call_attack = true;

	mov	BYTE PTR _call_attack$[ebp], 1

; 2391 : 	if (!attacking)	//skip facing action if attacking

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	test	ecx, ecx
	jne	$LN26@Timer_Expi

; 2392 : 	{
; 2393 : 		if (loop_count > 4) //only face new direction every 5th loop

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 4
	jle	$LN25@Timer_Expi

; 2394 : 		{
; 2395 : 			Vector3 pos = Commands->Get_Position(obj); 

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos$13[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2396 : 			switch (Commands->Get_Random_Int(0,8))

	push	8
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	DWORD PTR tv139[ebp], eax
	cmp	DWORD PTR tv139[ebp], 7
	ja	$LN14@Timer_Expi
	mov	edx, DWORD PTR tv139[ebp]
	jmp	DWORD PTR $LN33@Timer_Expi[edx*4]
$LN22@Timer_Expi:

; 2397 : 			{
; 2398 : 				case 0:
; 2399 : 					pos.X += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 2400 : 					pos.Y -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 2401 : 					break;

	jmp	$LN23@Timer_Expi
$LN21@Timer_Expi:

; 2402 : 				case 1:
; 2403 : 					pos.X -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 2404 : 					pos.Y -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 2405 : 					break;

	jmp	$LN23@Timer_Expi
$LN20@Timer_Expi:

; 2406 : 				case 2:
; 2407 : 					pos.X += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 2408 : 					pos.Y += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 2409 : 					break;

	jmp	$LN23@Timer_Expi
$LN19@Timer_Expi:

; 2410 : 				case 3:
; 2411 : 					pos.X -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 2412 : 					pos.Y += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 2413 : 					break;

	jmp	SHORT $LN23@Timer_Expi
$LN18@Timer_Expi:

; 2414 : 				case 4:
; 2415 : 					pos.X += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 2416 : 					break;

	jmp	SHORT $LN23@Timer_Expi
$LN17@Timer_Expi:

; 2417 : 				case 5:
; 2418 : 					pos.X -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 2419 : 					break;

	jmp	SHORT $LN23@Timer_Expi
$LN16@Timer_Expi:

; 2420 : 				case 6:
; 2421 : 					pos.Y += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 2422 : 					break;

	jmp	SHORT $LN23@Timer_Expi
$LN15@Timer_Expi:

; 2423 : 				case 7:
; 2424 : 					pos.Y -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 2425 : 					break;

	jmp	SHORT $LN23@Timer_Expi
$LN14@Timer_Expi:

; 2426 : 				default: 
; 2427 : 					pos.X += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0
$LN23@Timer_Expi:

; 2428 : 					break;
; 2429 : 			}
; 2430 : 			ActionParamsStruct params;

	lea	ecx, DWORD PTR _params$12[ebp]
	call	??0ActionParamsStruct@@QAE@XZ		; ActionParamsStruct::ActionParamsStruct

; 2431 : 			params.Set_Basic(this, 1, 30); //priority low

	push	-1
	push	30					; 0000001eH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$12[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 2432 : 			params.Set_Face_Location(pos, 6);

	push	ecx
	movss	xmm0, DWORD PTR __real@40c00000
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR _pos$13[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$12[ebp]
	call	?Set_Face_Location@ActionParamsStruct@@QAEXABVVector3@@M@Z ; ActionParamsStruct::Set_Face_Location

; 2433 : 			Commands->Action_Face_Location(obj, params);

	lea	eax, DWORD PTR _params$12[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+32]
	call	eax
	add	esp, 8
$LN25@Timer_Expi:

; 2434 : 		}
; 2435 : 	}
; 2436 : 	else

	jmp	$LN2@Timer_Expi
$LN26@Timer_Expi:

; 2437 : 	{
; 2438 : 		//force ceasefire before checking to continue (helps fight client glitches... I hope...)
; 2439 : 		Commands->Action_Reset(obj, 100); //I have no idea what this number does...

	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 8

; 2440 : 		attacking = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+40], 0

; 2441 : 		current_priority = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 10			; 0000000aH

; 2442 : 		GameObject *target = Commands->Find_Object(targetID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _target$11[ebp], eax

; 2443 : 		if (!(target)) //If target invalid, end now

	cmp	DWORD PTR _target$11[ebp], 0
	jne	SHORT $LN12@Timer_Expi

; 2444 : 		{
; 2445 : 			targetID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 2446 : 			call_attack = false;

	mov	BYTE PTR _call_attack$[ebp], 0

; 2447 : 		}
; 2448 : 		else

	jmp	$LN3@Timer_Expi
$LN12@Timer_Expi:

; 2449 : 		{
; 2450 : 			int TargetType = Commands->Get_Player_Type(target);

	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _TargetType$10[ebp], eax

; 2451 : 			int myType = Commands->Get_Player_Type(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _myType$9[ebp], eax

; 2452 : 			if (myType == TargetType) //Check old target for team change

	mov	eax, DWORD PTR _myType$9[ebp]
	cmp	eax, DWORD PTR _TargetType$10[ebp]
	jne	SHORT $LN10@Timer_Expi

; 2453 : 			{
; 2454 : 				targetID = 0; //old target a friend now

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 2455 : 				call_attack = false;

	mov	BYTE PTR _call_attack$[ebp], 0
$LN10@Timer_Expi:

; 2456 : 			}
; 2457 : 			//Check Range
; 2458 : 			Vector3 objPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _objPos$8[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2459 : 			Vector3 targetPos = Commands->Get_Position(target);

	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _targetPos$7[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2460 : 			float range = Commands->Get_Distance(objPos, targetPos);

	lea	eax, DWORD PTR _targetPos$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _objPos$8[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR _range$6[ebp]

; 2461 : 			float max = Get_Float_Parameter("MaxRange");

	push	OFFSET ??_C@_08JOBCAEBO@MaxRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _max$5[ebp]

; 2462 : 			float min = Get_Float_Parameter("MinRange");

	push	OFFSET ??_C@_08EJPJLGFP@MinRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _min$4[ebp]

; 2463 : 			if (range < min || range > max)

	movss	xmm0, DWORD PTR _min$4[ebp]
	comiss	xmm0, DWORD PTR _range$6[ebp]
	ja	SHORT $LN8@Timer_Expi
	movss	xmm0, DWORD PTR _range$6[ebp]
	comiss	xmm0, DWORD PTR _max$5[ebp]
	jbe	SHORT $LN9@Timer_Expi
$LN8@Timer_Expi:

; 2464 : 			{
; 2465 : 				targetID = 0; //old target out of range

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 2466 : 				call_attack = false;

	mov	BYTE PTR _call_attack$[ebp], 0
$LN9@Timer_Expi:

; 2467 : 			}
; 2468 : 			//Check Settings
; 2469 : 			if (((Get_Vehicle_Mode(target) == VEHICLE_TYPE_FLYING) || (Get_Vehicle_Mode(Get_Vehicle(target)) == VEHICLE_TYPE_FLYING)) && !Is_Script_Attached(target,"JFW_Submarine"))

	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	je	SHORT $LN6@Timer_Expi
	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN7@Timer_Expi
$LN6@Timer_Expi:
	push	OFFSET ??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@
	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@Timer_Expi

; 2470 : 			{
; 2471 : 				if (!(Get_Int_Parameter("AntiAir")))

	push	OFFSET ??_C@_07NJFFFLDF@AntiAir?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN5@Timer_Expi

; 2472 : 				{
; 2473 : 					targetID = 0; //old target not targetable

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 2474 : 					call_attack = false;

	mov	BYTE PTR _call_attack$[ebp], 0
$LN5@Timer_Expi:

; 2475 : 				}
; 2476 : 			}
; 2477 : 			else

	jmp	SHORT $LN3@Timer_Expi
$LN7@Timer_Expi:

; 2478 : 			{
; 2479 : 				if (!(Get_Int_Parameter("AntiGround")))

	push	OFFSET ??_C@_0L@ONGGIKDA@AntiGround?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN3@Timer_Expi

; 2480 : 				{
; 2481 : 					targetID = 0; //old target not targetable

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 2482 : 					call_attack = false;

	mov	BYTE PTR _call_attack$[ebp], 0
$LN3@Timer_Expi:

; 2483 : 				}
; 2484 : 			}
; 2485 : 		}
; 2486 : 		if (call_attack && obj->As_DamageableGameObj()->Is_Enemy(target->As_DamageableGameObj())) //if attack and if call_attack was not turned false

	movzx	eax, BYTE PTR _call_attack$[ebp]
	test	eax, eax
	je	SHORT $LN2@Timer_Expi
	mov	eax, DWORD PTR _target$11[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$11[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	mov	ecx, eax
	call	?Is_Enemy@DamageableGameObj@@QAE_NPAV1@@Z ; DamageableGameObj::Is_Enemy
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Timer_Expi

; 2487 : 		{
; 2488 : 			Attack_Charged(obj, target);

	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attack_Charged@RA_Base_Defense_Chargeup@@AAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Chargeup::Attack_Charged
$LN2@Timer_Expi:

; 2489 : 		}
; 2490 : 	}
; 2491 : 	if (loop_count > 4)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 4
	jle	SHORT $LN1@Timer_Expi

; 2492 : 	{
; 2493 : 		loop_count = 0; //reset counter

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
$LN1@Timer_Expi:

; 2494 : 	}
; 2495 : 	loop_count++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+52], ecx

; 2496 : 	Commands->Start_Timer(obj, this, attack_timer, 11);

	push	11					; 0000000bH
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+48]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+128]
	call	ecx
	add	esp, 16					; 00000010H
$LN31@Timer_Expi:

; 2497 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN33@Timer_Expi:
	DD	$LN22@Timer_Expi
	DD	$LN21@Timer_Expi
	DD	$LN20@Timer_Expi
	DD	$LN19@Timer_Expi
	DD	$LN18@Timer_Expi
	DD	$LN17@Timer_Expi
	DD	$LN16@Timer_Expi
	DD	$LN15@Timer_Expi
?Timer_Expired@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Base_Defense_Chargeup::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Damaged@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
_damagerID$1 = -16					; size = 4
_objID$2 = -12						; size = 4
_newID$3 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_amount$ = 16						; size = 4
?Damaged@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@0M@Z PROC ; RA_Base_Defense_Chargeup::Damaged, COMDAT
; _this$ = ecx

; 2299 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2300 : 	if (Is_Base_Powered(Get_Object_Type(obj)))

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Object_Type@@YAHPAVScriptableGameObj@@@Z ; Get_Object_Type
	add	esp, 4
	push	eax
	call	?Is_Base_Powered@@YA_NH@Z		; Is_Base_Powered
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	$LN9@Damaged

; 2301 : 	{
; 2302 : 		if ((Get_Vehicle_Mode(damager) == VEHICLE_TYPE_FLYING) && !Is_Script_Attached(damager,"JFW_Submarine"))

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN8@Damaged
	push	OFFSET ??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN8@Damaged

; 2303 : 		{
; 2304 : 			if (!(Get_Int_Parameter("AntiAir")))

	push	OFFSET ??_C@_07NJFFFLDF@AntiAir?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN7@Damaged

; 2305 : 			{
; 2306 : 				return; //Ignore the target

	jmp	$LN10@Damaged
$LN7@Damaged:

; 2307 : 			}
; 2308 : 		}
; 2309 : 		else

	jmp	SHORT $LN5@Damaged
$LN8@Damaged:

; 2310 : 		{
; 2311 : 			if (!(Get_Int_Parameter("AntiGround")))

	push	OFFSET ??_C@_0L@ONGGIKDA@AntiGround?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN5@Damaged

; 2312 : 			{
; 2313 : 				return; //Ignore the target

	jmp	$LN10@Damaged
$LN5@Damaged:

; 2314 : 			}
; 2315 : 		}
; 2316 : 		if (targetID) //check for current target

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN3@Damaged

; 2317 : 		{
; 2318 : 			unsigned long newID = Commands->Get_ID(damager);

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _newID$3[ebp], eax

; 2319 : 			if (targetID == newID)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _newID$3[ebp]
	jne	SHORT $LN3@Damaged

; 2320 : 			{
; 2321 : 				return; //already firing at target

	jmp	$LN10@Damaged
$LN3@Damaged:

; 2322 : 			}
; 2323 : 		}
; 2324 : 		int objID = Commands->Get_Player_Type(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _objID$2[ebp], eax

; 2325 : 		int damagerID = Commands->Get_Player_Type(damager);

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _damagerID$1[ebp], eax

; 2326 : 		if (objID != damagerID) //Make sure an enemy attacked

	mov	eax, DWORD PTR _objID$2[ebp]
	cmp	eax, DWORD PTR _damagerID$1[ebp]
	je	SHORT $LN2@Damaged

; 2327 : 		{
; 2328 : 			Attack_Charged(obj, damager);

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attack_Charged@RA_Base_Defense_Chargeup@@AAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Chargeup::Attack_Charged
$LN2@Damaged:

; 2329 : 		}
; 2330 : 	}
; 2331 : 	else

	jmp	SHORT $LN1@Damaged
$LN9@Damaged:

; 2332 : 	{
; 2333 : 		Commands->Enable_Enemy_Seen(obj,false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+300]
	call	edx
	add	esp, 8

; 2334 : 		//should cause the defense to stop attacking if the power goes low
; 2335 : 		Commands->Action_Reset(obj, 100); //I have no idea what this number does...

	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 8

; 2336 : 		attacking = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+40], 0

; 2337 : 		current_priority = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 10			; 0000000aH
$LN1@Damaged:
$LN10@Damaged:

; 2338 : 	}
; 2339 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@0M@Z ENDP ; RA_Base_Defense_Chargeup::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Enemy_Seen@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_newID$1 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_enemy$ = 12						; size = 4
?Enemy_Seen@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@0@Z PROC ; RA_Base_Defense_Chargeup::Enemy_Seen, COMDAT
; _this$ = ecx

; 2342 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2343 : 	if ((Get_Vehicle_Mode(enemy) == VEHICLE_TYPE_FLYING) && !Is_Script_Attached(enemy,"JFW_Submarine"))

	mov	eax, DWORD PTR _enemy$[ebp]
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN6@Enemy_Seen
	push	OFFSET ??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@
	mov	eax, DWORD PTR _enemy$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN6@Enemy_Seen

; 2344 : 	{
; 2345 : 		if (!(Get_Int_Parameter("AntiAir")))

	push	OFFSET ??_C@_07NJFFFLDF@AntiAir?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN5@Enemy_Seen

; 2346 : 		{
; 2347 : 			return; //Ignore the target

	jmp	SHORT $LN7@Enemy_Seen
$LN5@Enemy_Seen:

; 2348 : 		}
; 2349 : 	}
; 2350 : 	else

	jmp	SHORT $LN4@Enemy_Seen
$LN6@Enemy_Seen:

; 2351 : 	{
; 2352 : 		if (!(Get_Int_Parameter("AntiGround")))

	push	OFFSET ??_C@_0L@ONGGIKDA@AntiGround?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN4@Enemy_Seen

; 2353 : 		{
; 2354 : 			return; //Ignore the target

	jmp	SHORT $LN7@Enemy_Seen
$LN4@Enemy_Seen:

; 2355 : 		}
; 2356 : 	}
; 2357 : 	if (targetID) //check for current target

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN2@Enemy_Seen

; 2358 : 	{
; 2359 : 		unsigned long newID = Commands->Get_ID(enemy);

	mov	eax, DWORD PTR _enemy$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _newID$1[ebp], eax

; 2360 : 		if (targetID == newID)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _newID$1[ebp]
	jne	SHORT $LN2@Enemy_Seen

; 2361 : 		{
; 2362 : 			return; //already firing at target

	jmp	SHORT $LN7@Enemy_Seen
$LN2@Enemy_Seen:

; 2363 : 		}
; 2364 : 	}
; 2365 : 	Attack_Charged(obj,enemy);

	mov	eax, DWORD PTR _enemy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attack_Charged@RA_Base_Defense_Chargeup@@AAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Chargeup::Attack_Charged
$LN7@Enemy_Seen:

; 2366 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Enemy_Seen@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Base_Defense_Chargeup::Enemy_Seen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@@Z PROC ; RA_Base_Defense_Chargeup::Created, COMDAT
; _this$ = ecx

; 2254 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2255 : 	//Initialize Variables
; 2256 : 	targetID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 2257 : 	damageID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0

; 2258 : 	damagerID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0

; 2259 : 	attacking = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+40], 0

; 2260 : 	current_priority = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 10			; 0000000aH

; 2261 : 	attack_timer = 1.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+48], xmm0

; 2262 : 	loop_count = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0

; 2263 : 	//Standard AI Startup Junk
; 2264 : 	Commands->Enable_Enemy_Seen(obj, true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+300]
	call	edx
	add	esp, 8

; 2265 : 	Commands->Enable_Vehicle_Transitions(obj, false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+728]
	call	edx
	add	esp, 8

; 2266 : 	Commands->Enable_Hibernation(obj,false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+568]
	call	edx
	add	esp, 8

; 2267 : 	Commands->Innate_Enable(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+440]
	call	edx
	add	esp, 4

; 2268 : 	Commands->Start_Timer(obj,this,1.0,1);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 2269 : 	Commands->Start_Timer(obj,this,attack_timer,11);

	push	11					; 0000000bH
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+48]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+128]
	call	ecx
	add	esp, 16					; 00000010H

; 2270 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Base_Defense_Chargeup@@UAEXPAVScriptableGameObj@@@Z ENDP ; RA_Base_Defense_Chargeup::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Adjust_For_Infantry@RA_Base_Defense_Chargeup@@AAE_NPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
?Adjust_For_Infantry@RA_Base_Defense_Chargeup@@AAE_NPAVScriptableGameObj@@@Z PROC ; RA_Base_Defense_Chargeup::Adjust_For_Infantry, COMDAT
; _this$ = ecx

; 2786 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2787 : 	if (Get_Int_Parameter("AdjustAim"))

	push	OFFSET ??_C@_09KGOAILDN@AdjustAim?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	SHORT $LN2@Adjust_For

; 2788 : 	{
; 2789 : 		if (target->As_SoldierGameObj())

	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	je	SHORT $LN2@Adjust_For

; 2790 : 		{
; 2791 : 			return true;

	mov	al, 1
	jmp	SHORT $LN3@Adjust_For
$LN2@Adjust_For:

; 2792 : 		}
; 2793 : 	}
; 2794 : 	//No need to adjust if parameter says not to
; 2795 : 	return false;

	xor	al, al
$LN3@Adjust_For:

; 2796 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Adjust_For_Infantry@RA_Base_Defense_Chargeup@@AAE_NPAVScriptableGameObj@@@Z ENDP ; RA_Base_Defense_Chargeup::Adjust_For_Infantry
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Tie_Breaker@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@00@Z
_TEXT	SEGMENT
tv350 = -200						; size = 4
tv339 = -200						; size = 4
tv319 = -200						; size = 4
tv309 = -200						; size = 4
$T1 = -196						; size = 12
$T2 = -184						; size = 12
$T3 = -172						; size = 12
_test$4 = -96						; size = 4
_max_potential$ = -92					; size = 4
_old_range$ = -88					; size = 4
_new_range$ = -84					; size = 4
_old_pos$ = -80						; size = 12
_new_pos$ = -68						; size = 12
_obj_pos$ = -56						; size = 12
_min_range$ = -44					; size = 4
_max_range$ = -40					; size = 4
_old_percent$ = -36					; size = 4
_new_percent$ = -32					; size = 4
_old_max$ = -28						; size = 4
_new_max$ = -24						; size = 4
_target$ = -20						; size = 4
_old$ = -16						; size = 4
_new_rating$ = -12					; size = 4
_old_rating$ = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_new_target$ = 12					; size = 4
_old_target$ = 16					; size = 4
?Tie_Breaker@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@00@Z PROC ; RA_Base_Defense_Chargeup::Tie_Breaker, COMDAT
; _this$ = ecx

; 2677 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2678 : 	//This function compiles several methods of breaking ties
; 2679 : 	//-lower health gives higher rating
; 2680 : 	//-closer distance gives higher rating
; 2681 : 	//-being player gives higher rating
; 2682 : 	float old_rating = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _old_rating$[ebp], xmm0

; 2683 : 	float new_rating = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _new_rating$[ebp], xmm0

; 2684 : 	//Player Evaluation
; 2685 : 	if (Commands->Is_A_Star(old_target))

	mov	eax, DWORD PTR _old_target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@Tie_Breake

; 2686 : 	{
; 2687 : 		old_rating += 100; //automatic +100 for being human

	movss	xmm0, DWORD PTR _old_rating$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _old_rating$[ebp], xmm0
$LN20@Tie_Breake:

; 2688 : 	}
; 2689 : 	if (Commands->Is_A_Star(new_target))

	mov	eax, DWORD PTR _new_target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN19@Tie_Breake

; 2690 : 	{
; 2691 : 		new_rating += 100; //automatic +100 for being human

	movss	xmm0, DWORD PTR _new_rating$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _new_rating$[ebp], xmm0
$LN19@Tie_Breake:

; 2692 : 	}
; 2693 : 	//Health Evaluation
; 2694 : 	GameObject *old = old_target;

	mov	eax, DWORD PTR _old_target$[ebp]
	mov	DWORD PTR _old$[ebp], eax

; 2695 : 	GameObject *target = new_target;

	mov	eax, DWORD PTR _new_target$[ebp]
	mov	DWORD PTR _target$[ebp], eax

; 2696 : 	//Health needs to be tested for vehicle being driven, if it exists
; 2697 : 	if (Get_Vehicle(old_target))

	mov	eax, DWORD PTR _old_target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	je	SHORT $LN18@Tie_Breake

; 2698 : 	{
; 2699 : 		old = Get_Vehicle(old_target);

	mov	eax, DWORD PTR _old_target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	mov	DWORD PTR _old$[ebp], eax
$LN18@Tie_Breake:

; 2700 : 	}
; 2701 : 	if (Get_Vehicle(new_target))

	mov	eax, DWORD PTR _new_target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	je	SHORT $LN17@Tie_Breake

; 2702 : 	{
; 2703 : 		target = Get_Vehicle(old_target);

	mov	eax, DWORD PTR _old_target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	mov	DWORD PTR _target$[ebp], eax
$LN17@Tie_Breake:

; 2704 : 	}
; 2705 : 	float new_max = Commands->Get_Max_Health(target);

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+224]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _new_max$[ebp]

; 2706 : 	float old_max = Commands->Get_Max_Health(old);

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+224]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _old_max$[ebp]

; 2707 : 	float new_percent = 0; //set to minimum

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _new_percent$[ebp], xmm0

; 2708 : 	float old_percent = 0; //set to minimum

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _old_percent$[ebp], xmm0

; 2709 : 	if (new_max > 0) //just to be sure

	movss	xmm0, DWORD PTR _new_max$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN16@Tie_Breake

; 2710 : 	{
; 2711 : 		new_percent = ((100 * Commands->Get_Health(target)) / (new_max));

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv309[ebp]
	movss	xmm0, DWORD PTR tv309[ebp]
	mulss	xmm0, DWORD PTR __real@42c80000
	divss	xmm0, DWORD PTR _new_max$[ebp]
	movss	DWORD PTR _new_percent$[ebp], xmm0

; 2712 : 	}
; 2713 : 	else

	jmp	SHORT $LN15@Tie_Breake
$LN16@Tie_Breake:

; 2714 : 	{
; 2715 : 		new_percent += 100; //If maximum health is 0, always at 100% health

	movss	xmm0, DWORD PTR _new_percent$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _new_percent$[ebp], xmm0
$LN15@Tie_Breake:

; 2716 : 	}
; 2717 : 	if (old_max > 0) //just to be sure

	movss	xmm0, DWORD PTR _old_max$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN14@Tie_Breake

; 2718 : 	{
; 2719 : 		old_percent = ((100 * Commands->Get_Health(old)) / (old_max));

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv319[ebp]
	movss	xmm0, DWORD PTR tv319[ebp]
	mulss	xmm0, DWORD PTR __real@42c80000
	divss	xmm0, DWORD PTR _old_max$[ebp]
	movss	DWORD PTR _old_percent$[ebp], xmm0

; 2720 : 	}
; 2721 : 	else

	jmp	SHORT $LN13@Tie_Breake
$LN14@Tie_Breake:

; 2722 : 	{
; 2723 : 		old_percent += 100; //If maximum health is 0, always at 100% health

	movss	xmm0, DWORD PTR _old_percent$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _old_percent$[ebp], xmm0
$LN13@Tie_Breake:

; 2724 : 	}
; 2725 : 	new_max = Commands->Get_Max_Shield_Strength(target);

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+236]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _new_max$[ebp]

; 2726 : 	old_max = Commands->Get_Max_Shield_Strength(old);

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+236]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _old_max$[ebp]

; 2727 : 	if (new_max > 0) //just to be sure

	movss	xmm0, DWORD PTR _new_max$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN12@Tie_Breake

; 2728 : 	{
; 2729 : 		new_percent += ((100 * Commands->Get_Health(target)) / (new_max)); //Add in shield percent

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv339[ebp]
	movss	xmm0, DWORD PTR tv339[ebp]
	mulss	xmm0, DWORD PTR __real@42c80000
	divss	xmm0, DWORD PTR _new_max$[ebp]
	addss	xmm0, DWORD PTR _new_percent$[ebp]
	movss	DWORD PTR _new_percent$[ebp], xmm0

; 2730 : 	}
; 2731 : 	else

	jmp	SHORT $LN11@Tie_Breake
$LN12@Tie_Breake:

; 2732 : 	{
; 2733 : 		new_percent += 100; //If maximum shield is 0, always at 100% shield

	movss	xmm0, DWORD PTR _new_percent$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _new_percent$[ebp], xmm0
$LN11@Tie_Breake:

; 2734 : 	}
; 2735 : 	if (old_max > 0) //just to be sure

	movss	xmm0, DWORD PTR _old_max$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN10@Tie_Breake

; 2736 : 	{
; 2737 : 		old_percent += ((100 * Commands->Get_Health(old)) / (old_max)); //Add in shield percent

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv350[ebp]
	movss	xmm0, DWORD PTR tv350[ebp]
	mulss	xmm0, DWORD PTR __real@42c80000
	divss	xmm0, DWORD PTR _old_max$[ebp]
	addss	xmm0, DWORD PTR _old_percent$[ebp]
	movss	DWORD PTR _old_percent$[ebp], xmm0

; 2738 : 	}
; 2739 : 	else

	jmp	SHORT $LN9@Tie_Breake
$LN10@Tie_Breake:

; 2740 : 	{
; 2741 : 		old_percent += 100; //If maximum shield is 0, always at 100% shield

	movss	xmm0, DWORD PTR _old_percent$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _old_percent$[ebp], xmm0
$LN9@Tie_Breake:

; 2742 : 	}
; 2743 : 	old_rating += 200 - old_percent;

	movss	xmm0, DWORD PTR __real@43480000
	subss	xmm0, DWORD PTR _old_percent$[ebp]
	addss	xmm0, DWORD PTR _old_rating$[ebp]
	movss	DWORD PTR _old_rating$[ebp], xmm0

; 2744 : 	new_rating += 200 - new_percent;

	movss	xmm0, DWORD PTR __real@43480000
	subss	xmm0, DWORD PTR _new_percent$[ebp]
	addss	xmm0, DWORD PTR _new_rating$[ebp]
	movss	DWORD PTR _new_rating$[ebp], xmm0

; 2745 : 	//Range Evaluation
; 2746 : 	float max_range = Get_Float_Parameter("MaxRange");

	push	OFFSET ??_C@_08JOBCAEBO@MaxRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _max_range$[ebp]

; 2747 : 	float min_range = Get_Float_Parameter("MinRange");

	push	OFFSET ??_C@_08EJPJLGFP@MinRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _min_range$[ebp]

; 2748 : 	Vector3 obj_pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _obj_pos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2749 : 	Vector3 new_pos = Commands->Get_Position(new_target);

	mov	eax, DWORD PTR _new_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _new_pos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2750 : 	Vector3 old_pos = Commands->Get_Position(old_target);

	mov	eax, DWORD PTR _old_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _old_pos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2751 : 	float new_range = Commands->Get_Distance(obj_pos, new_pos);

	lea	eax, DWORD PTR _new_pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _obj_pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR _new_range$[ebp]

; 2752 : 	float old_range = Commands->Get_Distance(obj_pos, old_pos);

	lea	eax, DWORD PTR _old_pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _obj_pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR _old_range$[ebp]

; 2753 : 	if (new_range < max_range && new_range > min_range)

	movss	xmm0, DWORD PTR _max_range$[ebp]
	comiss	xmm0, DWORD PTR _new_range$[ebp]
	jbe	SHORT $LN8@Tie_Breake
	movss	xmm0, DWORD PTR _new_range$[ebp]
	comiss	xmm0, DWORD PTR _min_range$[ebp]
	jbe	SHORT $LN8@Tie_Breake

; 2754 : 	{
; 2755 : 		new_rating += max_range - (new_range - min_range); //not sure if this is good

	movss	xmm0, DWORD PTR _new_range$[ebp]
	subss	xmm0, DWORD PTR _min_range$[ebp]
	movss	xmm1, DWORD PTR _max_range$[ebp]
	subss	xmm1, xmm0
	addss	xmm1, DWORD PTR _new_rating$[ebp]
	movss	DWORD PTR _new_rating$[ebp], xmm1
$LN8@Tie_Breake:

; 2756 : 	}
; 2757 : 	if (old_range < max_range && old_range > min_range)

	movss	xmm0, DWORD PTR _max_range$[ebp]
	comiss	xmm0, DWORD PTR _old_range$[ebp]
	jbe	SHORT $LN7@Tie_Breake
	movss	xmm0, DWORD PTR _old_range$[ebp]
	comiss	xmm0, DWORD PTR _min_range$[ebp]
	jbe	SHORT $LN7@Tie_Breake

; 2758 : 	{
; 2759 : 		old_rating += max_range - (old_range - min_range);

	movss	xmm0, DWORD PTR _old_range$[ebp]
	subss	xmm0, DWORD PTR _min_range$[ebp]
	movss	xmm1, DWORD PTR _max_range$[ebp]
	subss	xmm1, xmm0
	addss	xmm1, DWORD PTR _old_rating$[ebp]
	movss	DWORD PTR _old_rating$[ebp], xmm1
$LN7@Tie_Breake:

; 2760 : 	}
; 2761 : 	//Final Evaluation
; 2762 : 	float max_potential = 300 + max_range; //300 = 100 from Player vs AI + 200 from health

	movss	xmm0, DWORD PTR __real@43960000
	addss	xmm0, DWORD PTR _max_range$[ebp]
	movss	DWORD PTR _max_potential$[ebp], xmm0

; 2763 : 	if (old_rating > new_rating)

	movss	xmm0, DWORD PTR _old_rating$[ebp]
	comiss	xmm0, DWORD PTR _new_rating$[ebp]
	jbe	SHORT $LN6@Tie_Breake

; 2764 : 	{
; 2765 : 		return old_target;

	mov	eax, DWORD PTR _old_target$[ebp]
	jmp	SHORT $LN1@Tie_Breake
	jmp	SHORT $LN1@Tie_Breake
$LN6@Tie_Breake:

; 2766 : 	}
; 2767 : 	else if (old_rating < new_rating)

	movss	xmm0, DWORD PTR _new_rating$[ebp]
	comiss	xmm0, DWORD PTR _old_rating$[ebp]
	jbe	SHORT $LN4@Tie_Breake

; 2768 : 	{
; 2769 : 		float test = new_rating - old_rating;

	movss	xmm0, DWORD PTR _new_rating$[ebp]
	subss	xmm0, DWORD PTR _old_rating$[ebp]
	movss	DWORD PTR _test$4[ebp], xmm0

; 2770 : 		if (test > (max_potential * 0.1)) //new target must be at least 10% greater priority

	cvtss2sd xmm0, DWORD PTR _test$4[ebp]
	cvtss2sd xmm1, DWORD PTR _max_potential$[ebp]
	mulsd	xmm1, QWORD PTR __real@3fb999999999999a
	comisd	xmm0, xmm1
	jbe	SHORT $LN3@Tie_Breake

; 2771 : 		{
; 2772 : 			return new_target;

	mov	eax, DWORD PTR _new_target$[ebp]
	jmp	SHORT $LN1@Tie_Breake

; 2773 : 		}
; 2774 : 		else

	jmp	SHORT $LN2@Tie_Breake
$LN3@Tie_Breake:

; 2775 : 		{
; 2776 : 			return old_target;

	mov	eax, DWORD PTR _old_target$[ebp]
	jmp	SHORT $LN1@Tie_Breake
$LN2@Tie_Breake:

; 2777 : 		}
; 2778 : 	}
; 2779 : 	else

	jmp	SHORT $LN1@Tie_Breake
$LN4@Tie_Breake:

; 2780 : 	{
; 2781 : 		return old_target; //rating tie, don't change targets

	mov	eax, DWORD PTR _old_target$[ebp]
$LN1@Tie_Breake:

; 2782 : 	}
; 2783 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Tie_Breaker@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@00@Z ENDP ; RA_Base_Defense_Chargeup::Tie_Breaker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Set_Target@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@@Z
_TEXT	SEGMENT
_vehicle$1 = -8						; size = 4
_this$ = -4						; size = 4
_target$ = 8						; size = 4
?Set_Target@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@@Z PROC ; RA_Base_Defense_Chargeup::Set_Target, COMDAT
; _this$ = ecx

; 2628 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2629 : 	if (target) //confirm non-NULL pointer

	cmp	DWORD PTR _target$[ebp], 0
	je	$LN12@Set_Target

; 2630 : 	{
; 2631 : 		if (Commands->Is_A_Star(target)) //Is it a player?

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	$LN11@Set_Target

; 2632 : 		{
; 2633 : 			GameObject *vehicle = Get_Vehicle(target); 

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	mov	DWORD PTR _vehicle$1[ebp], eax

; 2634 : 			if (vehicle) //Are they in a vehicle

	cmp	DWORD PTR _vehicle$1[ebp], 0
	je	SHORT $LN10@Set_Target

; 2635 : 			{
; 2636 : 				if ((Get_Vehicle_Mode(target) == VEHICLE_TYPE_FLYING) && !Is_Script_Attached(target,"JFW_Submarine"))

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN9@Set_Target
	push	OFFSET ??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN9@Set_Target

; 2637 : 				{
; 2638 : 					if (!(Get_Int_Parameter("AntiAir")))

	push	OFFSET ??_C@_07NJFFFLDF@AntiAir?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN8@Set_Target

; 2639 : 					{
; 2640 : 						return 0; //Ignore the target

	xor	eax, eax
	jmp	SHORT $LN13@Set_Target
$LN8@Set_Target:

; 2641 : 					}
; 2642 : 				}
; 2643 : 				else

	jmp	SHORT $LN7@Set_Target
$LN9@Set_Target:

; 2644 : 				{
; 2645 : 					if (!(Get_Int_Parameter("AntiGround")))

	push	OFFSET ??_C@_0L@ONGGIKDA@AntiGround?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN7@Set_Target

; 2646 : 					{
; 2647 : 						return 0; //Ignore the target

	xor	eax, eax
	jmp	SHORT $LN13@Set_Target
$LN7@Set_Target:

; 2648 : 					}
; 2649 : 				}
; 2650 : 				return vehicle; //if so, return vehicle

	mov	eax, DWORD PTR _vehicle$1[ebp]
	jmp	SHORT $LN13@Set_Target

; 2651 : 			}
; 2652 : 			else

	jmp	SHORT $LN11@Set_Target
$LN10@Set_Target:

; 2653 : 			{
; 2654 : 				if ((Get_Vehicle_Mode(target) == VEHICLE_TYPE_FLYING) && !Is_Script_Attached(target,"JFW_Submarine"))

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN4@Set_Target
	push	OFFSET ??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@Set_Target

; 2655 : 				{
; 2656 : 					if (!(Get_Int_Parameter("AntiAir")))

	push	OFFSET ??_C@_07NJFFFLDF@AntiAir?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN3@Set_Target

; 2657 : 					{
; 2658 : 						return 0; //Ignore the target

	xor	eax, eax
	jmp	SHORT $LN13@Set_Target
$LN3@Set_Target:

; 2659 : 					}
; 2660 : 				}
; 2661 : 				else

	jmp	SHORT $LN2@Set_Target
$LN4@Set_Target:

; 2662 : 				{
; 2663 : 					if (!(Get_Int_Parameter("AntiGround")))

	push	OFFSET ??_C@_0L@ONGGIKDA@AntiGround?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN2@Set_Target

; 2664 : 					{
; 2665 : 						return 0; //Ignore the target

	xor	eax, eax
	jmp	SHORT $LN13@Set_Target
$LN2@Set_Target:

; 2666 : 					}
; 2667 : 				}
; 2668 : 				return target; //if not, return player

	mov	eax, DWORD PTR _target$[ebp]
	jmp	SHORT $LN13@Set_Target
$LN11@Set_Target:

; 2669 : 			}
; 2670 : 		}
; 2671 : 		return target; //nothing left but the target

	mov	eax, DWORD PTR _target$[ebp]
	jmp	SHORT $LN13@Set_Target
$LN12@Set_Target:

; 2672 : 	}
; 2673 : 	return 0;

	xor	eax, eax
$LN13@Set_Target:

; 2674 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_Target@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@@Z ENDP ; RA_Base_Defense_Chargeup::Set_Target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Select_Target@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@0@Z
_TEXT	SEGMENT
tv81 = -80						; size = 4
_toggle$ = -12						; size = 4
_old$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_target$ = 12						; size = 4
?Select_Target@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@0@Z PROC ; RA_Base_Defense_Chargeup::Select_Target, COMDAT
; _this$ = ecx

; 2563 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2564 : 	//Targets passed into Select_Target have already been
; 2565 : 	//checked for "infantry in vehicle" by Set_Target
; 2566 : 	if (!(target)) //First see if there is a valid target

	cmp	DWORD PTR _target$[ebp], 0
	jne	SHORT $LN19@Select_Tar

; 2567 : 	{
; 2568 : 		return Commands->Find_Object(targetID);; //no need to test an invalid target

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	jmp	$LN20@Select_Tar
$LN19@Select_Tar:

; 2569 : 	}
; 2570 : 	GameObject *old = Commands->Find_Object(targetID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _old$[ebp], eax

; 2571 : 	if (!(old)) //is there a current target?

	cmp	DWORD PTR _old$[ebp], 0
	jne	SHORT $LN18@Select_Tar

; 2572 : 	{
; 2573 : 		return target; //no need to test an invalid target

	mov	eax, DWORD PTR _target$[ebp]
	jmp	$LN20@Select_Tar
$LN18@Select_Tar:

; 2574 : 	}
; 2575 : 	int toggle = Get_Int_Parameter("TargetMode");

	push	OFFSET ??_C@_0L@LLAOGGCM@TargetMode?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _toggle$[ebp], eax

; 2576 : 	switch(toggle)

	mov	eax, DWORD PTR _toggle$[ebp]
	mov	DWORD PTR tv81[ebp], eax
	cmp	DWORD PTR tv81[ebp], 0
	je	SHORT $LN15@Select_Tar
	cmp	DWORD PTR tv81[ebp], 1
	je	SHORT $LN10@Select_Tar
	jmp	$LN1@Select_Tar
$LN15@Select_Tar:

; 2577 : 	{
; 2578 : 	case 0: //Case 0 prioritizes vehicles over infantry
; 2579 : 		if (old->As_SoldierGameObj() && !(target->As_SoldierGameObj()))

	mov	eax, DWORD PTR _old$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _old$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	je	SHORT $LN14@Select_Tar
	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	jne	SHORT $LN14@Select_Tar

; 2580 : 		{
; 2581 : 			return target; //new target is a vehicle

	mov	eax, DWORD PTR _target$[ebp]
	jmp	$LN20@Select_Tar
	jmp	SHORT $LN13@Select_Tar
$LN14@Select_Tar:

; 2582 : 		}
; 2583 : 		else if (!(old->As_SoldierGameObj()) && target->As_SoldierGameObj())

	mov	eax, DWORD PTR _old$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _old$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	jne	SHORT $LN12@Select_Tar
	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	je	SHORT $LN12@Select_Tar

; 2584 : 		{
; 2585 : 			return old; //old target is a vehicle

	mov	eax, DWORD PTR _old$[ebp]
	jmp	$LN20@Select_Tar

; 2586 : 		}
; 2587 : 		else

	jmp	SHORT $LN13@Select_Tar
$LN12@Select_Tar:

; 2588 : 		{
; 2589 : 			return Tie_Breaker(obj, target, old); //both targets the same, let tie breaker decide

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Tie_Breaker@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Chargeup::Tie_Breaker
	jmp	$LN20@Select_Tar
$LN13@Select_Tar:

; 2590 : 		}
; 2591 : 		break;//just to be safe

	jmp	$LN20@Select_Tar
$LN10@Select_Tar:

; 2592 : 	case 1: //Case 1 prioritizes infantry over vehicles
; 2593 : 		if (old->As_SoldierGameObj() && !(target->As_SoldierGameObj()))

	mov	eax, DWORD PTR _old$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _old$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	je	SHORT $LN9@Select_Tar
	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	jne	SHORT $LN9@Select_Tar

; 2594 : 		{
; 2595 : 			if (Get_Vehicle(old))// Did the old target get in a vehicle?

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@Select_Tar

; 2596 : 			{
; 2597 : 				return Tie_Breaker(obj, target, old); //both vehicle

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Tie_Breaker@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Chargeup::Tie_Breaker
	jmp	$LN20@Select_Tar

; 2598 : 			}
; 2599 : 			else

	jmp	SHORT $LN7@Select_Tar
$LN8@Select_Tar:

; 2600 : 			{
; 2601 : 				return old; //old soldier

	mov	eax, DWORD PTR _old$[ebp]
	jmp	SHORT $LN20@Select_Tar
$LN7@Select_Tar:

; 2602 : 			}

	jmp	SHORT $LN6@Select_Tar
$LN9@Select_Tar:

; 2603 : 		}
; 2604 : 		else if (!(old->As_SoldierGameObj()) && target->As_SoldierGameObj())

	mov	eax, DWORD PTR _old$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _old$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	jne	SHORT $LN5@Select_Tar
	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	je	SHORT $LN5@Select_Tar

; 2605 : 		{
; 2606 : 			if (Get_Vehicle(target))// Did the new target get in a vehicle? 

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@Select_Tar

; 2607 : 			{
; 2608 : 				return Tie_Breaker(obj, target, old); //both vehicle 

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Tie_Breaker@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Chargeup::Tie_Breaker
	jmp	SHORT $LN20@Select_Tar

; 2609 : 			}
; 2610 : 			//Needs to pass in the vehicle instead of old?
; 2611 : 			else

	jmp	SHORT $LN3@Select_Tar
$LN4@Select_Tar:

; 2612 : 			{
; 2613 : 				return target; //target soldier

	mov	eax, DWORD PTR _target$[ebp]
	jmp	SHORT $LN20@Select_Tar
$LN3@Select_Tar:

; 2614 : 			}
; 2615 : 		}
; 2616 : 		else

	jmp	SHORT $LN6@Select_Tar
$LN5@Select_Tar:

; 2617 : 		{
; 2618 : 			return Tie_Breaker(obj, target, old); //both targets the same, let tie breaker decide

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Tie_Breaker@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Chargeup::Tie_Breaker
	jmp	SHORT $LN20@Select_Tar
$LN6@Select_Tar:

; 2619 : 		}
; 2620 : 		break; //just to be safe

	jmp	SHORT $LN20@Select_Tar
$LN1@Select_Tar:

; 2621 : 	default: //Default doesn't prioritize target type
; 2622 : 		return Tie_Breaker(obj, target, old); //all people are equal in my gun sights

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Tie_Breaker@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Chargeup::Tie_Breaker
$LN20@Select_Tar:

; 2623 : 		break; //yes, being safe still
; 2624 : 	}
; 2625 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Select_Target@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@0@Z ENDP ; RA_Base_Defense_Chargeup::Select_Target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Attack_Charged@RA_Base_Defense_Chargeup@@AAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
tv203 = -84						; size = 4
$T1 = -80						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_target$ = 12						; size = 4
?Attack_Charged@RA_Base_Defense_Chargeup@@AAEXPAVScriptableGameObj@@0@Z PROC ; RA_Base_Defense_Chargeup::Attack_Charged, COMDAT
; _this$ = ecx

; 2281 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2282 : 	damagerID = Commands->Get_ID(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], eax

; 2283 : 	damageID = Commands->Get_ID(target);

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax

; 2284 : 	if (Get_Current_Weapon_Definition(obj)->ClipSize == Get_Current_Bullets(obj))

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Current_Weapon_Definition@@YAPBVWeaponDefinitionClass@@PAVScriptableGameObj@@@Z ; Get_Current_Weapon_Definition
	add	esp, 4
	add	eax, 116				; 00000074H
	mov	ecx, eax
	call	??B?$SafeDataClass@H@@QBEHXZ		; SafeDataClass<int>::operator int
	mov	esi, eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	call	?Get_Current_Bullets@@YAHPAVScriptableGameObj@@@Z ; Get_Current_Bullets
	add	esp, 4
	cmp	esi, eax
	jne	$LN3@Attack_Cha

; 2285 : 	{
; 2286 : 		Commands->Set_Animation(obj,Get_Parameter("ChargeAnim"),false,0,0,-1,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0L@IDJIIOHN@ChargeAnim?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 2287 : 		Commands->Create_Sound(Get_Parameter("ChargeSound"),Commands->Get_Position(obj),obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0M@EEFBOHPC@ChargeSound?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+172]
	call	eax
	add	esp, 12					; 0000000cH

; 2288 : 	}
; 2289 : 	else

	jmp	SHORT $LN1@Attack_Cha
$LN3@Attack_Cha:

; 2290 : 	{
; 2291 : 		if (Commands->Get_Health(Commands->Find_Object(damageID)))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv203[ebp]
	movss	xmm0, DWORD PTR tv203[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@Attack_Cha

; 2292 : 		{
; 2293 : 			Attack(Commands->Find_Object(damagerID),Commands->Find_Object(damageID));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attack@RA_Base_Defense_Chargeup@@AAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Chargeup::Attack
$LN1@Attack_Cha:

; 2294 : 		}
; 2295 : 	}
; 2296 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Attack_Charged@RA_Base_Defense_Chargeup@@AAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Base_Defense_Chargeup::Attack_Charged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Attack@RA_Base_Defense_Chargeup@@AAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
$T1 = -328						; size = 12
$T2 = -316						; size = 12
_params$3 = -240					; size = 196
_min$4 = -44						; size = 4
_max$5 = -40						; size = 4
_range$6 = -36						; size = 4
_targetPos$7 = -32					; size = 12
_objPos$8 = -20						; size = 12
_FinalTarget$ = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_target$ = 12						; size = 4
?Attack@RA_Base_Defense_Chargeup@@AAEXPAVScriptableGameObj@@0@Z PROC ; RA_Base_Defense_Chargeup::Attack, COMDAT
; _this$ = ecx

; 2519 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2520 : 	/**************Evaluate Target Threat****************/
; 2521 : 	GameObject *FinalTarget = Set_Target(target);

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set_Target@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@@Z ; RA_Base_Defense_Chargeup::Set_Target
	mov	DWORD PTR _FinalTarget$[ebp], eax

; 2522 : 	if (FinalTarget) //Was there a non-NULL return from Set_Target?

	cmp	DWORD PTR _FinalTarget$[ebp], 0
	je	SHORT $LN6@Attack

; 2523 : 	{
; 2524 : 		FinalTarget = Select_Target(obj, FinalTarget); //Was Rate_Target

	mov	eax, DWORD PTR _FinalTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Select_Target@RA_Base_Defense_Chargeup@@AAEPAVScriptableGameObj@@PAV2@0@Z ; RA_Base_Defense_Chargeup::Select_Target
	mov	DWORD PTR _FinalTarget$[ebp], eax
$LN6@Attack:

; 2525 : 	}
; 2526 : 	/****************Execute Final Attack****************/
; 2527 : 	if (FinalTarget && FinalTarget->As_DamageableGameObj()->Is_Enemy(obj->As_DamageableGameObj()))

	cmp	DWORD PTR _FinalTarget$[ebp], 0
	je	$LN1@Attack
	mov	eax, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _FinalTarget$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _FinalTarget$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	mov	ecx, eax
	call	?Is_Enemy@DamageableGameObj@@QAE_NPAV1@@Z ; DamageableGameObj::Is_Enemy
	movzx	ecx, al
	test	ecx, ecx
	je	$LN1@Attack

; 2528 : 	{
; 2529 : 		targetID = Commands->Get_ID(FinalTarget); //remember new target, or re-remember old target

	mov	eax, DWORD PTR _FinalTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax

; 2530 : 		Vector3 objPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _objPos$8[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2531 : 		Vector3 targetPos = Commands->Get_Position(FinalTarget);

	mov	eax, DWORD PTR _FinalTarget$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _targetPos$7[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2532 : 		float range = Commands->Get_Distance(objPos, targetPos);

	lea	eax, DWORD PTR _targetPos$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _objPos$8[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR _range$6[ebp]

; 2533 : 		float max = Get_Float_Parameter("MaxRange");

	push	OFFSET ??_C@_08JOBCAEBO@MaxRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _max$5[ebp]

; 2534 : 		float min = Get_Float_Parameter("MinRange");

	push	OFFSET ??_C@_08EJPJLGFP@MinRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _min$4[ebp]

; 2535 : 		if (min < range && range < max && (obj->As_SmartGameObj()->Is_Obj_Visible(FinalTarget->As_PhysicalGameObj())))

	movss	xmm0, DWORD PTR _range$6[ebp]
	comiss	xmm0, DWORD PTR _min$4[ebp]
	jbe	$LN4@Attack
	movss	xmm0, DWORD PTR _max$5[ebp]
	comiss	xmm0, DWORD PTR _range$6[ebp]
	jbe	$LN4@Attack
	mov	eax, DWORD PTR _FinalTarget$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _FinalTarget$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	mov	ecx, eax
	call	?Is_Obj_Visible@SmartGameObj@@QAE_NPAVPhysicalGameObj@@@Z ; SmartGameObj::Is_Obj_Visible
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@Attack

; 2536 : 		{
; 2537 : 			ActionParamsStruct params;

	lea	ecx, DWORD PTR _params$3[ebp]
	call	??0ActionParamsStruct@@QAE@XZ		; ActionParamsStruct::ActionParamsStruct

; 2538 : 			params.Set_Basic(this,(float)current_priority, 100);

	push	-1
	push	100					; 00000064H
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+44]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _params$3[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 2539 : 			if (Adjust_For_Infantry(FinalTarget))

	mov	eax, DWORD PTR _FinalTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Adjust_For_Infantry@RA_Base_Defense_Chargeup@@AAE_NPAVScriptableGameObj@@@Z ; RA_Base_Defense_Chargeup::Adjust_For_Infantry
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Attack

; 2540 : 			{
; 2541 : 				params.Set_Attack(targetPos, range, 0, true);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _range$6[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR _targetPos$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$3[ebp]
	call	?Set_Attack@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ; ActionParamsStruct::Set_Attack

; 2542 : 				params.AttackCheckBlocked = false;

	mov	BYTE PTR _params$3[ebp+108], 0

; 2543 : 			}
; 2544 : 			else

	jmp	SHORT $LN2@Attack
$LN3@Attack:

; 2545 : 			{
; 2546 : 				params.Set_Attack(FinalTarget, range, 0, true);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _range$6[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _FinalTarget$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$3[ebp]
	call	?Set_Attack@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z ; ActionParamsStruct::Set_Attack

; 2547 : 				params.AttackCheckBlocked = false;

	mov	BYTE PTR _params$3[ebp+108], 0
$LN2@Attack:

; 2548 : 			}
; 2549 : 			Commands->Action_Attack(obj, params);

	lea	eax, DWORD PTR _params$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+20]
	call	eax
	add	esp, 8

; 2550 : 			current_priority++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], ecx

; 2551 : 			attacking = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+40], 1

; 2552 : 		}
; 2553 : 		else

	jmp	SHORT $LN1@Attack
$LN4@Attack:

; 2554 : 		{
; 2555 : 			attacking = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+40], 0

; 2556 : 			targetID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 2557 : 			current_priority = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 10			; 0000000aH
$LN1@Attack:

; 2558 : 		}
; 2559 : 	}
; 2560 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Attack@RA_Base_Defense_Chargeup@@AAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Base_Defense_Chargeup::Attack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Base_Defense_Powered@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Base_Defense_Powered@@UAEPAXI@Z PROC		; RA_Base_Defense_Powered::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Base_Defense_Powered@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Base_Defense_Powered@@UAEPAXI@Z ENDP		; RA_Base_Defense_Powered::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Base_Defense_Powered@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Base_Defense_Powered@@UAE@XZ PROC			; RA_Base_Defense_Powered::~RA_Base_Defense_Powered, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Base_Defense_Powered@@UAE@XZ ENDP			; RA_Base_Defense_Powered::~RA_Base_Defense_Powered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Base_Defense_Powered@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Base_Defense_Powered@@QAE@XZ PROC			; RA_Base_Defense_Powered::RA_Base_Defense_Powered, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Base_Defense_Powered@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Base_Defense_Powered@@QAE@XZ ENDP			; RA_Base_Defense_Powered::RA_Base_Defense_Powered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Base_Defense_Powered@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Base_Defense_Powered@@UAEXXZ PROC ; RA_Base_Defense_Powered::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 1961 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1962 : 	Auto_Save_Variable(&targetID,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 1963 : 	Auto_Save_Variable(&attacking,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 1964 : 	Auto_Save_Variable(&current_priority,4,3);

	push	3
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 1965 : 	Auto_Save_Variable(&attack_timer,4,4);

	push	4
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 1966 : 	Auto_Save_Variable(&loop_count,4,5);

	push	5
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 1967 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Base_Defense_Powered@@UAEXXZ ENDP ; RA_Base_Defense_Powered::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Action_Complete@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_action_id$ = 12					; size = 4
_complete_reason$ = 16					; size = 4
?Action_Complete@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z PROC ; RA_Base_Defense_Powered::Action_Complete, COMDAT
; _this$ = ecx

; 1951 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1952 : 	if (action_id == 100) //Attack completed

	cmp	DWORD PTR _action_id$[ebp], 100		; 00000064H
	jne	SHORT $LN2@Action_Com

; 1953 : 	{
; 1954 : 		attacking = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 1955 : 		targetID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 1956 : 		current_priority = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 10			; 0000000aH
$LN2@Action_Com:

; 1957 : 	}
; 1958 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Action_Complete@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z ENDP ; RA_Base_Defense_Powered::Action_Complete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
tv425 = -368						; size = 4
tv145 = -368						; size = 4
$T1 = -364						; size = 12
$T2 = -352						; size = 12
$T3 = -340						; size = 12
_min$4 = -264						; size = 4
_max$5 = -260						; size = 4
_range$6 = -256						; size = 4
_targetPos$7 = -252					; size = 12
_objPos$8 = -240					; size = 12
_myType$9 = -228					; size = 4
_TargetType$10 = -224					; size = 4
_target$11 = -220					; size = 4
_params$12 = -216					; size = 196
_pos$13 = -20						; size = 12
_call_attack$ = -5					; size = 1
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@H@Z PROC ; RA_Base_Defense_Powered::Timer_Expired, COMDAT
; _this$ = ecx

; 1817 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 368				; 00000170H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1818 : 	if (number == 1)

	cmp	DWORD PTR _number$[ebp], 1
	jne	$LN32@Timer_Expi

; 1819 : 	{
; 1820 : 		if (Is_Base_Powered(Get_Object_Type(obj)))

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Object_Type@@YAHPAVScriptableGameObj@@@Z ; Get_Object_Type
	add	esp, 4
	push	eax
	call	?Is_Base_Powered@@YA_NH@Z		; Is_Base_Powered
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN31@Timer_Expi

; 1821 : 		{
; 1822 : 			Commands->Enable_Enemy_Seen(obj,true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+300]
	call	edx
	add	esp, 8

; 1823 : 		}
; 1824 : 		else

	jmp	SHORT $LN30@Timer_Expi
$LN31@Timer_Expi:

; 1825 : 		{
; 1826 : 			Commands->Enable_Enemy_Seen(obj,false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+300]
	call	edx
	add	esp, 8

; 1827 : 			//should cause the defense to stop attacking if the power goes low
; 1828 : 			Commands->Action_Reset(obj, 100); //I have no idea what this number does...

	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 8

; 1829 : 			attacking = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 1830 : 			current_priority = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 10			; 0000000aH
$LN30@Timer_Expi:

; 1831 : 		}
; 1832 : 		Commands->Start_Timer(obj,this,1.0,1);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN32@Timer_Expi:

; 1833 : 	}
; 1834 : 	if (number != 11)

	cmp	DWORD PTR _number$[ebp], 11		; 0000000bH
	je	SHORT $LN29@Timer_Expi

; 1835 : 	{
; 1836 : 		return; //If its not the timer we're interested in, end now

	jmp	$LN33@Timer_Expi
$LN29@Timer_Expi:

; 1837 : 	}
; 1838 : 	bool call_attack = true;

	mov	BYTE PTR _call_attack$[ebp], 1

; 1839 : 	if (!attacking && Is_Base_Powered(Get_Object_Type(obj)))	//skip facing action if attacking

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	jne	$LN28@Timer_Expi
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Object_Type@@YAHPAVScriptableGameObj@@@Z ; Get_Object_Type
	add	esp, 4
	push	eax
	call	?Is_Base_Powered@@YA_NH@Z		; Is_Base_Powered
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	$LN28@Timer_Expi

; 1840 : 	{
; 1841 : 		if (loop_count > 4) //only face new direction every 5th loop

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 4
	jle	$LN27@Timer_Expi

; 1842 : 		{
; 1843 : 			Vector3 pos = Commands->Get_Position(obj); 

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos$13[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1844 : 			switch (Commands->Get_Random_Int(0,8))

	push	8
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	DWORD PTR tv145[ebp], eax
	cmp	DWORD PTR tv145[ebp], 7
	ja	$LN16@Timer_Expi
	mov	edx, DWORD PTR tv145[ebp]
	jmp	DWORD PTR $LN35@Timer_Expi[edx*4]
$LN24@Timer_Expi:

; 1845 : 			{
; 1846 : 				case 0:
; 1847 : 					pos.X += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 1848 : 					pos.Y -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 1849 : 					break;

	jmp	$LN25@Timer_Expi
$LN23@Timer_Expi:

; 1850 : 				case 1:
; 1851 : 					pos.X -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 1852 : 					pos.Y -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 1853 : 					break;

	jmp	$LN25@Timer_Expi
$LN22@Timer_Expi:

; 1854 : 				case 2:
; 1855 : 					pos.X += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 1856 : 					pos.Y += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 1857 : 					break;

	jmp	$LN25@Timer_Expi
$LN21@Timer_Expi:

; 1858 : 				case 3:
; 1859 : 					pos.X -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 1860 : 					pos.Y += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 1861 : 					break;

	jmp	SHORT $LN25@Timer_Expi
$LN20@Timer_Expi:

; 1862 : 				case 4:
; 1863 : 					pos.X += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 1864 : 					break;

	jmp	SHORT $LN25@Timer_Expi
$LN19@Timer_Expi:

; 1865 : 				case 5:
; 1866 : 					pos.X -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 1867 : 					break;

	jmp	SHORT $LN25@Timer_Expi
$LN18@Timer_Expi:

; 1868 : 				case 6:
; 1869 : 					pos.Y += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 1870 : 					break;

	jmp	SHORT $LN25@Timer_Expi
$LN17@Timer_Expi:

; 1871 : 				case 7:
; 1872 : 					pos.Y -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 1873 : 					break;

	jmp	SHORT $LN25@Timer_Expi
$LN16@Timer_Expi:

; 1874 : 				default: 
; 1875 : 					pos.X += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0
$LN25@Timer_Expi:

; 1876 : 					break;
; 1877 : 			}
; 1878 : 			ActionParamsStruct params;

	lea	ecx, DWORD PTR _params$12[ebp]
	call	??0ActionParamsStruct@@QAE@XZ		; ActionParamsStruct::ActionParamsStruct

; 1879 : 			params.Set_Basic(this, 1, 30); //priority low

	push	-1
	push	30					; 0000001eH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$12[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 1880 : 			params.Set_Face_Location(pos, 6);

	push	ecx
	movss	xmm0, DWORD PTR __real@40c00000
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR _pos$13[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$12[ebp]
	call	?Set_Face_Location@ActionParamsStruct@@QAEXABVVector3@@M@Z ; ActionParamsStruct::Set_Face_Location

; 1881 : 			Commands->Action_Face_Location(obj, params);

	lea	eax, DWORD PTR _params$12[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+32]
	call	eax
	add	esp, 8
$LN27@Timer_Expi:

; 1882 : 		}
; 1883 : 	}
; 1884 : 	else

	jmp	$LN2@Timer_Expi
$LN28@Timer_Expi:

; 1885 : 	{
; 1886 : 		attacking = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 1887 : 		current_priority = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 10			; 0000000aH

; 1888 : 		GameObject *target = Commands->Find_Object(targetID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _target$11[ebp], eax

; 1889 : 		if (!(target)) //If target invalid, end now

	cmp	DWORD PTR _target$11[ebp], 0
	jne	SHORT $LN14@Timer_Expi

; 1890 : 		{
; 1891 : 			targetID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 1892 : 			call_attack = false;

	mov	BYTE PTR _call_attack$[ebp], 0

; 1893 : 		}
; 1894 : 		else

	jmp	$LN5@Timer_Expi
$LN14@Timer_Expi:

; 1895 : 		{
; 1896 : 			int TargetType = Commands->Get_Player_Type(target);

	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _TargetType$10[ebp], eax

; 1897 : 			int myType = Commands->Get_Player_Type(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _myType$9[ebp], eax

; 1898 : 			if (myType == TargetType) //Check old target for team change

	mov	eax, DWORD PTR _myType$9[ebp]
	cmp	eax, DWORD PTR _TargetType$10[ebp]
	jne	SHORT $LN12@Timer_Expi

; 1899 : 			{
; 1900 : 				targetID = 0; //old target a friend now

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 1901 : 				call_attack = false;

	mov	BYTE PTR _call_attack$[ebp], 0
$LN12@Timer_Expi:

; 1902 : 			}
; 1903 : 			//Check Range
; 1904 : 			Vector3 objPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _objPos$8[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1905 : 			Vector3 targetPos = Commands->Get_Position(target);

	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _targetPos$7[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1906 : 			float range = Commands->Get_Distance(objPos, targetPos);

	lea	eax, DWORD PTR _targetPos$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _objPos$8[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR _range$6[ebp]

; 1907 : 			float max = Get_Float_Parameter("MaxRange");

	push	OFFSET ??_C@_08JOBCAEBO@MaxRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _max$5[ebp]

; 1908 : 			float min = Get_Float_Parameter("MinRange");

	push	OFFSET ??_C@_08EJPJLGFP@MinRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _min$4[ebp]

; 1909 : 			if (range < min || range > max)

	movss	xmm0, DWORD PTR _min$4[ebp]
	comiss	xmm0, DWORD PTR _range$6[ebp]
	ja	SHORT $LN10@Timer_Expi
	movss	xmm0, DWORD PTR _range$6[ebp]
	comiss	xmm0, DWORD PTR _max$5[ebp]
	jbe	SHORT $LN11@Timer_Expi
$LN10@Timer_Expi:

; 1910 : 			{
; 1911 : 				targetID = 0; //old target out of range

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 1912 : 				call_attack = false;

	mov	BYTE PTR _call_attack$[ebp], 0
$LN11@Timer_Expi:

; 1913 : 			}
; 1914 : 			//Check Settings
; 1915 : 			if (((Get_Vehicle_Mode(target) == VEHICLE_TYPE_FLYING) || (Get_Vehicle_Mode(Get_Vehicle(target)) == VEHICLE_TYPE_FLYING)) && !Is_Script_Attached(target,"JFW_Submarine"))

	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	je	SHORT $LN8@Timer_Expi
	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN9@Timer_Expi
$LN8@Timer_Expi:
	push	OFFSET ??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@
	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN9@Timer_Expi

; 1916 : 			{
; 1917 : 				if (!(Get_Int_Parameter("AntiAir")))

	push	OFFSET ??_C@_07NJFFFLDF@AntiAir?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN7@Timer_Expi

; 1918 : 				{
; 1919 : 					targetID = 0; //old target not targetable

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 1920 : 					call_attack = false;

	mov	BYTE PTR _call_attack$[ebp], 0
$LN7@Timer_Expi:

; 1921 : 				}
; 1922 : 			}
; 1923 : 			else

	jmp	SHORT $LN5@Timer_Expi
$LN9@Timer_Expi:

; 1924 : 			{
; 1925 : 				if (!(Get_Int_Parameter("AntiGround")))

	push	OFFSET ??_C@_0L@ONGGIKDA@AntiGround?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN5@Timer_Expi

; 1926 : 				{
; 1927 : 					targetID = 0; //old target not targetable

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 1928 : 					call_attack = false;

	mov	BYTE PTR _call_attack$[ebp], 0
$LN5@Timer_Expi:

; 1929 : 				}
; 1930 : 			}
; 1931 : 		}
; 1932 : 		if (call_attack && obj->As_DamageableGameObj()->Is_Enemy(target->As_DamageableGameObj())) //if attack and if call_attack was not turned false

	movzx	eax, BYTE PTR _call_attack$[ebp]
	test	eax, eax
	je	SHORT $LN4@Timer_Expi
	mov	eax, DWORD PTR _target$11[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$11[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	mov	ecx, eax
	call	?Is_Enemy@DamageableGameObj@@QAE_NPAV1@@Z ; DamageableGameObj::Is_Enemy
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@Timer_Expi

; 1933 : 		{
; 1934 : 			if (Commands->Get_Health(target))

	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv425[ebp]
	movss	xmm0, DWORD PTR tv425[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN3@Timer_Expi

; 1935 : 			{
; 1936 : 				Attack(obj, target);

	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attack@RA_Base_Defense_Powered@@AAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Powered::Attack
$LN3@Timer_Expi:

; 1937 : 			}
; 1938 : 		}
; 1939 : 		else 

	jmp	SHORT $LN2@Timer_Expi
$LN4@Timer_Expi:

; 1940 : 			Commands->Action_Reset(obj, 100);

	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 8
$LN2@Timer_Expi:

; 1941 : 	}
; 1942 : 	if (loop_count > 4)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 4
	jle	SHORT $LN1@Timer_Expi

; 1943 : 	{
; 1944 : 		loop_count = 0; //reset counter

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
$LN1@Timer_Expi:

; 1945 : 	}
; 1946 : 	loop_count++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], ecx

; 1947 : 	Commands->Start_Timer(obj, this, attack_timer, 11);

	push	11					; 0000000bH
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+40]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+128]
	call	ecx
	add	esp, 16					; 00000010H
$LN33@Timer_Expi:

; 1948 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN35@Timer_Expi:
	DD	$LN24@Timer_Expi
	DD	$LN23@Timer_Expi
	DD	$LN22@Timer_Expi
	DD	$LN21@Timer_Expi
	DD	$LN20@Timer_Expi
	DD	$LN19@Timer_Expi
	DD	$LN18@Timer_Expi
	DD	$LN17@Timer_Expi
?Timer_Expired@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Base_Defense_Powered::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Damaged@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
tv189 = -84						; size = 4
_damagerID$1 = -16					; size = 4
_objID$2 = -12						; size = 4
_newID$3 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_amount$ = 16						; size = 4
?Damaged@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@0M@Z PROC ; RA_Base_Defense_Powered::Damaged, COMDAT
; _this$ = ecx

; 1737 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 	if (!damager || amount <= 0)

	cmp	DWORD PTR _damager$[ebp], 0
	je	SHORT $LN11@Damaged
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _amount$[ebp]
	jb	SHORT $LN12@Damaged
$LN11@Damaged:

; 1739 : 	{
; 1740 : 		return;

	jmp	$LN13@Damaged
$LN12@Damaged:

; 1741 : 	}
; 1742 : 	if (Is_Base_Powered(Get_Object_Type(obj)))

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Object_Type@@YAHPAVScriptableGameObj@@@Z ; Get_Object_Type
	add	esp, 4
	push	eax
	call	?Is_Base_Powered@@YA_NH@Z		; Is_Base_Powered
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	$LN10@Damaged

; 1743 : 	{
; 1744 : 		if ((Get_Vehicle_Mode(damager) == VEHICLE_TYPE_FLYING) && !Is_Script_Attached(damager,"JFW_Submarine"))

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN9@Damaged
	push	OFFSET ??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN9@Damaged

; 1745 : 		{
; 1746 : 			if (!(Get_Int_Parameter("AntiAir")))

	push	OFFSET ??_C@_07NJFFFLDF@AntiAir?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN8@Damaged

; 1747 : 			{
; 1748 : 				return; //Ignore the target

	jmp	$LN13@Damaged
$LN8@Damaged:

; 1749 : 			}
; 1750 : 		}
; 1751 : 		else

	jmp	SHORT $LN6@Damaged
$LN9@Damaged:

; 1752 : 		{
; 1753 : 			if (!(Get_Int_Parameter("AntiGround")))

	push	OFFSET ??_C@_0L@ONGGIKDA@AntiGround?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN6@Damaged

; 1754 : 			{
; 1755 : 				return; //Ignore the target

	jmp	$LN13@Damaged
$LN6@Damaged:

; 1756 : 			}
; 1757 : 		}
; 1758 : 		if (targetID) //check for current target

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN4@Damaged

; 1759 : 		{
; 1760 : 			unsigned long newID = Commands->Get_ID(damager);

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _newID$3[ebp], eax

; 1761 : 			if (targetID == newID)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _newID$3[ebp]
	jne	SHORT $LN4@Damaged

; 1762 : 			{
; 1763 : 				return; //already firing at target

	jmp	$LN13@Damaged
$LN4@Damaged:

; 1764 : 			}
; 1765 : 		}
; 1766 : 		int objID = Commands->Get_Player_Type(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _objID$2[ebp], eax

; 1767 : 		int damagerID = Commands->Get_Player_Type(damager);

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _damagerID$1[ebp], eax

; 1768 : 		if (objID != damagerID) //Make sure an enemy attacked

	mov	eax, DWORD PTR _objID$2[ebp]
	cmp	eax, DWORD PTR _damagerID$1[ebp]
	je	SHORT $LN2@Damaged

; 1769 : 		{
; 1770 : 			if (Commands->Get_Health(damager))

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv189[ebp]
	movss	xmm0, DWORD PTR tv189[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN2@Damaged

; 1771 : 			{
; 1772 : 				Attack(obj, damager);

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attack@RA_Base_Defense_Powered@@AAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Powered::Attack
$LN2@Damaged:

; 1773 : 			}
; 1774 : 		}
; 1775 : 	}
; 1776 : 	else

	jmp	SHORT $LN1@Damaged
$LN10@Damaged:

; 1777 : 	{
; 1778 : 		Commands->Enable_Enemy_Seen(obj,false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+300]
	call	edx
	add	esp, 8

; 1779 : 		//should cause the defense to stop attacking if the power goes low
; 1780 : 		Commands->Action_Reset(obj, 100); //I have no idea what this number does...

	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 8

; 1781 : 		attacking = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 1782 : 		current_priority = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 10			; 0000000aH
$LN1@Damaged:
$LN13@Damaged:

; 1783 : 	}
; 1784 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@0M@Z ENDP ; RA_Base_Defense_Powered::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Enemy_Seen@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
tv153 = -76						; size = 4
_newID$1 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_enemy$ = 12						; size = 4
?Enemy_Seen@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@0@Z PROC ; RA_Base_Defense_Powered::Enemy_Seen, COMDAT
; _this$ = ecx

; 1787 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1788 : 	if ((Get_Vehicle_Mode(enemy) == VEHICLE_TYPE_FLYING) && !Is_Script_Attached(enemy,"JFW_Submarine"))

	mov	eax, DWORD PTR _enemy$[ebp]
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN7@Enemy_Seen
	push	OFFSET ??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@
	mov	eax, DWORD PTR _enemy$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@Enemy_Seen

; 1789 : 	{
; 1790 : 		if (!(Get_Int_Parameter("AntiAir")))

	push	OFFSET ??_C@_07NJFFFLDF@AntiAir?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN6@Enemy_Seen

; 1791 : 		{
; 1792 : 			return; //Ignore the target

	jmp	SHORT $LN8@Enemy_Seen
$LN6@Enemy_Seen:

; 1793 : 		}
; 1794 : 	}
; 1795 : 	else

	jmp	SHORT $LN4@Enemy_Seen
$LN7@Enemy_Seen:

; 1796 : 	{
; 1797 : 		if (!(Get_Int_Parameter("AntiGround")))

	push	OFFSET ??_C@_0L@ONGGIKDA@AntiGround?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN4@Enemy_Seen

; 1798 : 		{
; 1799 : 			return; //Ignore the target

	jmp	SHORT $LN8@Enemy_Seen
$LN4@Enemy_Seen:

; 1800 : 		}
; 1801 : 	}
; 1802 : 	if (targetID) //check for current target

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN2@Enemy_Seen

; 1803 : 	{
; 1804 : 		unsigned long newID = Commands->Get_ID(enemy);

	mov	eax, DWORD PTR _enemy$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _newID$1[ebp], eax

; 1805 : 		if (targetID == newID)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _newID$1[ebp]
	jne	SHORT $LN2@Enemy_Seen

; 1806 : 		{
; 1807 : 			return; //already firing at target

	jmp	SHORT $LN8@Enemy_Seen
$LN2@Enemy_Seen:

; 1808 : 		}
; 1809 : 	}
; 1810 : 	if (Commands->Get_Health(enemy))

	mov	eax, DWORD PTR _enemy$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv153[ebp]
	movss	xmm0, DWORD PTR tv153[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@Enemy_Seen

; 1811 : 	{
; 1812 : 		Attack(obj,enemy);

	mov	eax, DWORD PTR _enemy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attack@RA_Base_Defense_Powered@@AAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Powered::Attack
$LN1@Enemy_Seen:
$LN8@Enemy_Seen:

; 1813 : 	}
; 1814 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Enemy_Seen@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Base_Defense_Powered::Enemy_Seen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@@Z PROC ; RA_Base_Defense_Powered::Created, COMDAT
; _this$ = ecx

; 1720 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1721 : 	//Initialize Variables
; 1722 : 	targetID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 1723 : 	attacking = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 1724 : 	current_priority = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 10			; 0000000aH

; 1725 : 	attack_timer = 1.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+40], xmm0

; 1726 : 	loop_count = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0

; 1727 : 	//Standard AI Startup Junk
; 1728 : 	Commands->Enable_Enemy_Seen(obj, true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+300]
	call	edx
	add	esp, 8

; 1729 : 	Commands->Enable_Vehicle_Transitions(obj, false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+728]
	call	edx
	add	esp, 8

; 1730 : 	Commands->Enable_Hibernation(obj,false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+568]
	call	edx
	add	esp, 8

; 1731 : 	Commands->Innate_Enable(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+440]
	call	edx
	add	esp, 4

; 1732 : 	Commands->Start_Timer(obj,this,1.0,1);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 1733 : 	Commands->Start_Timer(obj,this,attack_timer,11);

	push	11					; 0000000bH
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+40]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+128]
	call	ecx
	add	esp, 16					; 00000010H

; 1734 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Base_Defense_Powered@@UAEXPAVScriptableGameObj@@@Z ENDP ; RA_Base_Defense_Powered::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Adjust_For_Infantry@RA_Base_Defense_Powered@@AAE_NPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
?Adjust_For_Infantry@RA_Base_Defense_Powered@@AAE_NPAVScriptableGameObj@@@Z PROC ; RA_Base_Defense_Powered::Adjust_For_Infantry, COMDAT
; _this$ = ecx

; 2239 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2240 : 	if (Get_Int_Parameter("AdjustAim"))

	push	OFFSET ??_C@_09KGOAILDN@AdjustAim?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	SHORT $LN2@Adjust_For

; 2241 : 	{
; 2242 : 		if (target->As_SoldierGameObj())

	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	je	SHORT $LN2@Adjust_For

; 2243 : 		{
; 2244 : 			return true;

	mov	al, 1
	jmp	SHORT $LN3@Adjust_For
$LN2@Adjust_For:

; 2245 : 		}
; 2246 : 	}
; 2247 : 	//No need to adjust if parameter says not to
; 2248 : 	return false;

	xor	al, al
$LN3@Adjust_For:

; 2249 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Adjust_For_Infantry@RA_Base_Defense_Powered@@AAE_NPAVScriptableGameObj@@@Z ENDP ; RA_Base_Defense_Powered::Adjust_For_Infantry
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Tie_Breaker@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@00@Z
_TEXT	SEGMENT
tv350 = -200						; size = 4
tv339 = -200						; size = 4
tv319 = -200						; size = 4
tv309 = -200						; size = 4
$T1 = -196						; size = 12
$T2 = -184						; size = 12
$T3 = -172						; size = 12
_test$4 = -96						; size = 4
_max_potential$ = -92					; size = 4
_old_range$ = -88					; size = 4
_new_range$ = -84					; size = 4
_old_pos$ = -80						; size = 12
_new_pos$ = -68						; size = 12
_obj_pos$ = -56						; size = 12
_min_range$ = -44					; size = 4
_max_range$ = -40					; size = 4
_old_percent$ = -36					; size = 4
_new_percent$ = -32					; size = 4
_old_max$ = -28						; size = 4
_new_max$ = -24						; size = 4
_target$ = -20						; size = 4
_old$ = -16						; size = 4
_new_rating$ = -12					; size = 4
_old_rating$ = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_new_target$ = 12					; size = 4
_old_target$ = 16					; size = 4
?Tie_Breaker@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@00@Z PROC ; RA_Base_Defense_Powered::Tie_Breaker, COMDAT
; _this$ = ecx

; 2130 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2131 : 	//This function compiles several methods of breaking ties
; 2132 : 	//-lower health gives higher rating
; 2133 : 	//-closer distance gives higher rating
; 2134 : 	//-being player gives higher rating
; 2135 : 	float old_rating = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _old_rating$[ebp], xmm0

; 2136 : 	float new_rating = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _new_rating$[ebp], xmm0

; 2137 : 	//Player Evaluation
; 2138 : 	if (Commands->Is_A_Star(old_target))

	mov	eax, DWORD PTR _old_target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@Tie_Breake

; 2139 : 	{
; 2140 : 		old_rating += 100; //automatic +100 for being human

	movss	xmm0, DWORD PTR _old_rating$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _old_rating$[ebp], xmm0
$LN20@Tie_Breake:

; 2141 : 	}
; 2142 : 	if (Commands->Is_A_Star(new_target))

	mov	eax, DWORD PTR _new_target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN19@Tie_Breake

; 2143 : 	{
; 2144 : 		new_rating += 100; //automatic +100 for being human

	movss	xmm0, DWORD PTR _new_rating$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _new_rating$[ebp], xmm0
$LN19@Tie_Breake:

; 2145 : 	}
; 2146 : 	//Health Evaluation
; 2147 : 	GameObject *old = old_target;

	mov	eax, DWORD PTR _old_target$[ebp]
	mov	DWORD PTR _old$[ebp], eax

; 2148 : 	GameObject *target = new_target;

	mov	eax, DWORD PTR _new_target$[ebp]
	mov	DWORD PTR _target$[ebp], eax

; 2149 : 	//Health needs to be tested for vehicle being driven, if it exists
; 2150 : 	if (Get_Vehicle(old_target))

	mov	eax, DWORD PTR _old_target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	je	SHORT $LN18@Tie_Breake

; 2151 : 	{
; 2152 : 		old = Get_Vehicle(old_target);

	mov	eax, DWORD PTR _old_target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	mov	DWORD PTR _old$[ebp], eax
$LN18@Tie_Breake:

; 2153 : 	}
; 2154 : 	if (Get_Vehicle(new_target))

	mov	eax, DWORD PTR _new_target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	je	SHORT $LN17@Tie_Breake

; 2155 : 	{
; 2156 : 		target = Get_Vehicle(old_target);

	mov	eax, DWORD PTR _old_target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	mov	DWORD PTR _target$[ebp], eax
$LN17@Tie_Breake:

; 2157 : 	}
; 2158 : 	float new_max = Commands->Get_Max_Health(target);

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+224]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _new_max$[ebp]

; 2159 : 	float old_max = Commands->Get_Max_Health(old);

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+224]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _old_max$[ebp]

; 2160 : 	float new_percent = 0; //set to minimum

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _new_percent$[ebp], xmm0

; 2161 : 	float old_percent = 0; //set to minimum

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _old_percent$[ebp], xmm0

; 2162 : 	if (new_max > 0) //just to be sure

	movss	xmm0, DWORD PTR _new_max$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN16@Tie_Breake

; 2163 : 	{
; 2164 : 		new_percent = ((100 * Commands->Get_Health(target)) / (new_max));

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv309[ebp]
	movss	xmm0, DWORD PTR tv309[ebp]
	mulss	xmm0, DWORD PTR __real@42c80000
	divss	xmm0, DWORD PTR _new_max$[ebp]
	movss	DWORD PTR _new_percent$[ebp], xmm0

; 2165 : 	}
; 2166 : 	else

	jmp	SHORT $LN15@Tie_Breake
$LN16@Tie_Breake:

; 2167 : 	{
; 2168 : 		new_percent += 100; //If maximum health is 0, always at 100% health

	movss	xmm0, DWORD PTR _new_percent$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _new_percent$[ebp], xmm0
$LN15@Tie_Breake:

; 2169 : 	}
; 2170 : 	if (old_max > 0) //just to be sure

	movss	xmm0, DWORD PTR _old_max$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN14@Tie_Breake

; 2171 : 	{
; 2172 : 		old_percent = ((100 * Commands->Get_Health(old)) / (old_max));

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv319[ebp]
	movss	xmm0, DWORD PTR tv319[ebp]
	mulss	xmm0, DWORD PTR __real@42c80000
	divss	xmm0, DWORD PTR _old_max$[ebp]
	movss	DWORD PTR _old_percent$[ebp], xmm0

; 2173 : 	}
; 2174 : 	else

	jmp	SHORT $LN13@Tie_Breake
$LN14@Tie_Breake:

; 2175 : 	{
; 2176 : 		old_percent += 100; //If maximum health is 0, always at 100% health

	movss	xmm0, DWORD PTR _old_percent$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _old_percent$[ebp], xmm0
$LN13@Tie_Breake:

; 2177 : 	}
; 2178 : 	new_max = Commands->Get_Max_Shield_Strength(target);

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+236]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _new_max$[ebp]

; 2179 : 	old_max = Commands->Get_Max_Shield_Strength(old);

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+236]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _old_max$[ebp]

; 2180 : 	if (new_max > 0) //just to be sure

	movss	xmm0, DWORD PTR _new_max$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN12@Tie_Breake

; 2181 : 	{
; 2182 : 		new_percent += ((100 * Commands->Get_Health(target)) / (new_max)); //Add in shield percent

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv339[ebp]
	movss	xmm0, DWORD PTR tv339[ebp]
	mulss	xmm0, DWORD PTR __real@42c80000
	divss	xmm0, DWORD PTR _new_max$[ebp]
	addss	xmm0, DWORD PTR _new_percent$[ebp]
	movss	DWORD PTR _new_percent$[ebp], xmm0

; 2183 : 	}
; 2184 : 	else

	jmp	SHORT $LN11@Tie_Breake
$LN12@Tie_Breake:

; 2185 : 	{
; 2186 : 		new_percent += 100; //If maximum shield is 0, always at 100% shield

	movss	xmm0, DWORD PTR _new_percent$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _new_percent$[ebp], xmm0
$LN11@Tie_Breake:

; 2187 : 	}
; 2188 : 	if (old_max > 0) //just to be sure

	movss	xmm0, DWORD PTR _old_max$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN10@Tie_Breake

; 2189 : 	{
; 2190 : 		old_percent += ((100 * Commands->Get_Health(old)) / (old_max)); //Add in shield percent

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv350[ebp]
	movss	xmm0, DWORD PTR tv350[ebp]
	mulss	xmm0, DWORD PTR __real@42c80000
	divss	xmm0, DWORD PTR _old_max$[ebp]
	addss	xmm0, DWORD PTR _old_percent$[ebp]
	movss	DWORD PTR _old_percent$[ebp], xmm0

; 2191 : 	}
; 2192 : 	else

	jmp	SHORT $LN9@Tie_Breake
$LN10@Tie_Breake:

; 2193 : 	{
; 2194 : 		old_percent += 100; //If maximum shield is 0, always at 100% shield

	movss	xmm0, DWORD PTR _old_percent$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _old_percent$[ebp], xmm0
$LN9@Tie_Breake:

; 2195 : 	}
; 2196 : 	old_rating += 200 - old_percent;

	movss	xmm0, DWORD PTR __real@43480000
	subss	xmm0, DWORD PTR _old_percent$[ebp]
	addss	xmm0, DWORD PTR _old_rating$[ebp]
	movss	DWORD PTR _old_rating$[ebp], xmm0

; 2197 : 	new_rating += 200 - new_percent;

	movss	xmm0, DWORD PTR __real@43480000
	subss	xmm0, DWORD PTR _new_percent$[ebp]
	addss	xmm0, DWORD PTR _new_rating$[ebp]
	movss	DWORD PTR _new_rating$[ebp], xmm0

; 2198 : 	//Range Evaluation
; 2199 : 	float max_range = Get_Float_Parameter("MaxRange");

	push	OFFSET ??_C@_08JOBCAEBO@MaxRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _max_range$[ebp]

; 2200 : 	float min_range = Get_Float_Parameter("MinRange");

	push	OFFSET ??_C@_08EJPJLGFP@MinRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _min_range$[ebp]

; 2201 : 	Vector3 obj_pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _obj_pos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2202 : 	Vector3 new_pos = Commands->Get_Position(new_target);

	mov	eax, DWORD PTR _new_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _new_pos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2203 : 	Vector3 old_pos = Commands->Get_Position(old_target);

	mov	eax, DWORD PTR _old_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _old_pos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 2204 : 	float new_range = Commands->Get_Distance(obj_pos, new_pos);

	lea	eax, DWORD PTR _new_pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _obj_pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR _new_range$[ebp]

; 2205 : 	float old_range = Commands->Get_Distance(obj_pos, old_pos);

	lea	eax, DWORD PTR _old_pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _obj_pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR _old_range$[ebp]

; 2206 : 	if (new_range < max_range && new_range > min_range)

	movss	xmm0, DWORD PTR _max_range$[ebp]
	comiss	xmm0, DWORD PTR _new_range$[ebp]
	jbe	SHORT $LN8@Tie_Breake
	movss	xmm0, DWORD PTR _new_range$[ebp]
	comiss	xmm0, DWORD PTR _min_range$[ebp]
	jbe	SHORT $LN8@Tie_Breake

; 2207 : 	{
; 2208 : 		new_rating += max_range - (new_range - min_range); //not sure if this is good

	movss	xmm0, DWORD PTR _new_range$[ebp]
	subss	xmm0, DWORD PTR _min_range$[ebp]
	movss	xmm1, DWORD PTR _max_range$[ebp]
	subss	xmm1, xmm0
	addss	xmm1, DWORD PTR _new_rating$[ebp]
	movss	DWORD PTR _new_rating$[ebp], xmm1
$LN8@Tie_Breake:

; 2209 : 	}
; 2210 : 	if (old_range < max_range && old_range > min_range)

	movss	xmm0, DWORD PTR _max_range$[ebp]
	comiss	xmm0, DWORD PTR _old_range$[ebp]
	jbe	SHORT $LN7@Tie_Breake
	movss	xmm0, DWORD PTR _old_range$[ebp]
	comiss	xmm0, DWORD PTR _min_range$[ebp]
	jbe	SHORT $LN7@Tie_Breake

; 2211 : 	{
; 2212 : 		old_rating += max_range - (old_range - min_range);

	movss	xmm0, DWORD PTR _old_range$[ebp]
	subss	xmm0, DWORD PTR _min_range$[ebp]
	movss	xmm1, DWORD PTR _max_range$[ebp]
	subss	xmm1, xmm0
	addss	xmm1, DWORD PTR _old_rating$[ebp]
	movss	DWORD PTR _old_rating$[ebp], xmm1
$LN7@Tie_Breake:

; 2213 : 	}
; 2214 : 	//Final Evaluation
; 2215 : 	float max_potential = 300 + max_range; //300 = 100 from Player vs AI + 200 from health

	movss	xmm0, DWORD PTR __real@43960000
	addss	xmm0, DWORD PTR _max_range$[ebp]
	movss	DWORD PTR _max_potential$[ebp], xmm0

; 2216 : 	if (old_rating > new_rating)

	movss	xmm0, DWORD PTR _old_rating$[ebp]
	comiss	xmm0, DWORD PTR _new_rating$[ebp]
	jbe	SHORT $LN6@Tie_Breake

; 2217 : 	{
; 2218 : 		return old_target;

	mov	eax, DWORD PTR _old_target$[ebp]
	jmp	SHORT $LN1@Tie_Breake
	jmp	SHORT $LN1@Tie_Breake
$LN6@Tie_Breake:

; 2219 : 	}
; 2220 : 	else if (old_rating < new_rating)

	movss	xmm0, DWORD PTR _new_rating$[ebp]
	comiss	xmm0, DWORD PTR _old_rating$[ebp]
	jbe	SHORT $LN4@Tie_Breake

; 2221 : 	{
; 2222 : 		float test = new_rating - old_rating;

	movss	xmm0, DWORD PTR _new_rating$[ebp]
	subss	xmm0, DWORD PTR _old_rating$[ebp]
	movss	DWORD PTR _test$4[ebp], xmm0

; 2223 : 		if (test > (max_potential * 0.1)) //new target must be at least 10% greater priority

	cvtss2sd xmm0, DWORD PTR _test$4[ebp]
	cvtss2sd xmm1, DWORD PTR _max_potential$[ebp]
	mulsd	xmm1, QWORD PTR __real@3fb999999999999a
	comisd	xmm0, xmm1
	jbe	SHORT $LN3@Tie_Breake

; 2224 : 		{
; 2225 : 			return new_target;

	mov	eax, DWORD PTR _new_target$[ebp]
	jmp	SHORT $LN1@Tie_Breake

; 2226 : 		}
; 2227 : 		else

	jmp	SHORT $LN2@Tie_Breake
$LN3@Tie_Breake:

; 2228 : 		{
; 2229 : 			return old_target;

	mov	eax, DWORD PTR _old_target$[ebp]
	jmp	SHORT $LN1@Tie_Breake
$LN2@Tie_Breake:

; 2230 : 		}
; 2231 : 	}
; 2232 : 	else

	jmp	SHORT $LN1@Tie_Breake
$LN4@Tie_Breake:

; 2233 : 	{
; 2234 : 		return old_target; //rating tie, don't change targets

	mov	eax, DWORD PTR _old_target$[ebp]
$LN1@Tie_Breake:

; 2235 : 	}
; 2236 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Tie_Breaker@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@00@Z ENDP ; RA_Base_Defense_Powered::Tie_Breaker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Set_Target@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@@Z
_TEXT	SEGMENT
_vehicle$1 = -8						; size = 4
_this$ = -4						; size = 4
_target$ = 8						; size = 4
?Set_Target@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@@Z PROC ; RA_Base_Defense_Powered::Set_Target, COMDAT
; _this$ = ecx

; 2081 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2082 : 	if (target) //confirm non-NULL pointer

	cmp	DWORD PTR _target$[ebp], 0
	je	$LN12@Set_Target

; 2083 : 	{
; 2084 : 		if (Commands->Is_A_Star(target)) //Is it a player?

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	$LN11@Set_Target

; 2085 : 		{
; 2086 : 			GameObject *vehicle = Get_Vehicle(target); 

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	mov	DWORD PTR _vehicle$1[ebp], eax

; 2087 : 			if (vehicle) //Are they in a vehicle

	cmp	DWORD PTR _vehicle$1[ebp], 0
	je	SHORT $LN10@Set_Target

; 2088 : 			{
; 2089 : 				if ((Get_Vehicle_Mode(target) == VEHICLE_TYPE_FLYING) && !Is_Script_Attached(target,"JFW_Submarine"))

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN9@Set_Target
	push	OFFSET ??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN9@Set_Target

; 2090 : 				{
; 2091 : 					if (!(Get_Int_Parameter("AntiAir")))

	push	OFFSET ??_C@_07NJFFFLDF@AntiAir?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN8@Set_Target

; 2092 : 					{
; 2093 : 						return 0; //Ignore the target

	xor	eax, eax
	jmp	SHORT $LN13@Set_Target
$LN8@Set_Target:

; 2094 : 					}
; 2095 : 				}
; 2096 : 				else

	jmp	SHORT $LN7@Set_Target
$LN9@Set_Target:

; 2097 : 				{
; 2098 : 					if (!(Get_Int_Parameter("AntiGround")))

	push	OFFSET ??_C@_0L@ONGGIKDA@AntiGround?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN7@Set_Target

; 2099 : 					{
; 2100 : 						return 0; //Ignore the target

	xor	eax, eax
	jmp	SHORT $LN13@Set_Target
$LN7@Set_Target:

; 2101 : 					}
; 2102 : 				}
; 2103 : 				return vehicle; //if so, return vehicle

	mov	eax, DWORD PTR _vehicle$1[ebp]
	jmp	SHORT $LN13@Set_Target

; 2104 : 			}
; 2105 : 			else

	jmp	SHORT $LN11@Set_Target
$LN10@Set_Target:

; 2106 : 			{
; 2107 : 				if ((Get_Vehicle_Mode(target) == VEHICLE_TYPE_FLYING) && !Is_Script_Attached(target,"JFW_Submarine"))

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN4@Set_Target
	push	OFFSET ??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@Set_Target

; 2108 : 				{
; 2109 : 					if (!(Get_Int_Parameter("AntiAir")))

	push	OFFSET ??_C@_07NJFFFLDF@AntiAir?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN3@Set_Target

; 2110 : 					{
; 2111 : 						return 0; //Ignore the target

	xor	eax, eax
	jmp	SHORT $LN13@Set_Target
$LN3@Set_Target:

; 2112 : 					}
; 2113 : 				}
; 2114 : 				else

	jmp	SHORT $LN2@Set_Target
$LN4@Set_Target:

; 2115 : 				{
; 2116 : 					if (!(Get_Int_Parameter("AntiGround")))

	push	OFFSET ??_C@_0L@ONGGIKDA@AntiGround?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN2@Set_Target

; 2117 : 					{
; 2118 : 						return 0; //Ignore the target

	xor	eax, eax
	jmp	SHORT $LN13@Set_Target
$LN2@Set_Target:

; 2119 : 					}
; 2120 : 				}
; 2121 : 				return target; //if not, return player

	mov	eax, DWORD PTR _target$[ebp]
	jmp	SHORT $LN13@Set_Target
$LN11@Set_Target:

; 2122 : 			}
; 2123 : 		}
; 2124 : 		return target; //nothing left but the target

	mov	eax, DWORD PTR _target$[ebp]
	jmp	SHORT $LN13@Set_Target
$LN12@Set_Target:

; 2125 : 	}
; 2126 : 	return 0;

	xor	eax, eax
$LN13@Set_Target:

; 2127 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_Target@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@@Z ENDP ; RA_Base_Defense_Powered::Set_Target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Select_Target@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@0@Z
_TEXT	SEGMENT
tv81 = -80						; size = 4
_toggle$ = -12						; size = 4
_old$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_target$ = 12						; size = 4
?Select_Target@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@0@Z PROC ; RA_Base_Defense_Powered::Select_Target, COMDAT
; _this$ = ecx

; 2016 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 2017 : 	//Targets passed into Select_Target have already been
; 2018 : 	//checked for "infantry in vehicle" by Set_Target
; 2019 : 	if (!(target)) //First see if there is a valid target

	cmp	DWORD PTR _target$[ebp], 0
	jne	SHORT $LN19@Select_Tar

; 2020 : 	{
; 2021 : 		return Commands->Find_Object(targetID);; //no need to test an invalid target

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	jmp	$LN20@Select_Tar
$LN19@Select_Tar:

; 2022 : 	}
; 2023 : 	GameObject *old = Commands->Find_Object(targetID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _old$[ebp], eax

; 2024 : 	if (!(old)) //is there a current target?

	cmp	DWORD PTR _old$[ebp], 0
	jne	SHORT $LN18@Select_Tar

; 2025 : 	{
; 2026 : 		return target; //no need to test an invalid target

	mov	eax, DWORD PTR _target$[ebp]
	jmp	$LN20@Select_Tar
$LN18@Select_Tar:

; 2027 : 	}
; 2028 : 	int toggle = Get_Int_Parameter("TargetMode");

	push	OFFSET ??_C@_0L@LLAOGGCM@TargetMode?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _toggle$[ebp], eax

; 2029 : 	switch(toggle)

	mov	eax, DWORD PTR _toggle$[ebp]
	mov	DWORD PTR tv81[ebp], eax
	cmp	DWORD PTR tv81[ebp], 0
	je	SHORT $LN15@Select_Tar
	cmp	DWORD PTR tv81[ebp], 1
	je	SHORT $LN10@Select_Tar
	jmp	$LN1@Select_Tar
$LN15@Select_Tar:

; 2030 : 	{
; 2031 : 	case 0: //Case 0 prioritizes vehicles over infantry
; 2032 : 		if (old->As_SoldierGameObj() && !(target->As_SoldierGameObj()))

	mov	eax, DWORD PTR _old$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _old$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	je	SHORT $LN14@Select_Tar
	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	jne	SHORT $LN14@Select_Tar

; 2033 : 		{
; 2034 : 			return target; //new target is a vehicle

	mov	eax, DWORD PTR _target$[ebp]
	jmp	$LN20@Select_Tar
	jmp	SHORT $LN13@Select_Tar
$LN14@Select_Tar:

; 2035 : 		}
; 2036 : 		else if (!(old->As_SoldierGameObj()) && target->As_SoldierGameObj())

	mov	eax, DWORD PTR _old$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _old$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	jne	SHORT $LN12@Select_Tar
	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	je	SHORT $LN12@Select_Tar

; 2037 : 		{
; 2038 : 			return old; //old target is a vehicle

	mov	eax, DWORD PTR _old$[ebp]
	jmp	$LN20@Select_Tar

; 2039 : 		}
; 2040 : 		else

	jmp	SHORT $LN13@Select_Tar
$LN12@Select_Tar:

; 2041 : 		{
; 2042 : 			return Tie_Breaker(obj, target, old); //both targets the same, let tie breaker decide

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Tie_Breaker@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Powered::Tie_Breaker
	jmp	$LN20@Select_Tar
$LN13@Select_Tar:

; 2043 : 		}
; 2044 : 		break;//just to be safe

	jmp	$LN20@Select_Tar
$LN10@Select_Tar:

; 2045 : 	case 1: //Case 1 prioritizes infantry over vehicles
; 2046 : 		if (old->As_SoldierGameObj() && !(target->As_SoldierGameObj()))

	mov	eax, DWORD PTR _old$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _old$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	je	SHORT $LN9@Select_Tar
	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	jne	SHORT $LN9@Select_Tar

; 2047 : 		{
; 2048 : 			if (Get_Vehicle(old))// Did the old target get in a vehicle?

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@Select_Tar

; 2049 : 			{
; 2050 : 				return Tie_Breaker(obj, target, old); //both vehicle

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Tie_Breaker@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Powered::Tie_Breaker
	jmp	$LN20@Select_Tar

; 2051 : 			}
; 2052 : 			else

	jmp	SHORT $LN7@Select_Tar
$LN8@Select_Tar:

; 2053 : 			{
; 2054 : 				return old; //old soldier

	mov	eax, DWORD PTR _old$[ebp]
	jmp	SHORT $LN20@Select_Tar
$LN7@Select_Tar:

; 2055 : 			}

	jmp	SHORT $LN6@Select_Tar
$LN9@Select_Tar:

; 2056 : 		}
; 2057 : 		else if (!(old->As_SoldierGameObj()) && target->As_SoldierGameObj())

	mov	eax, DWORD PTR _old$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _old$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	jne	SHORT $LN5@Select_Tar
	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	je	SHORT $LN5@Select_Tar

; 2058 : 		{
; 2059 : 			if (Get_Vehicle(target))// Did the new target get in a vehicle? 

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@Select_Tar

; 2060 : 			{
; 2061 : 				return Tie_Breaker(obj, target, old); //both vehicle 

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Tie_Breaker@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Powered::Tie_Breaker
	jmp	SHORT $LN20@Select_Tar

; 2062 : 			}
; 2063 : 			//Needs to pass in the vehicle instead of old?
; 2064 : 			else

	jmp	SHORT $LN3@Select_Tar
$LN4@Select_Tar:

; 2065 : 			{
; 2066 : 				return target; //target soldier

	mov	eax, DWORD PTR _target$[ebp]
	jmp	SHORT $LN20@Select_Tar
$LN3@Select_Tar:

; 2067 : 			}
; 2068 : 		}
; 2069 : 		else

	jmp	SHORT $LN6@Select_Tar
$LN5@Select_Tar:

; 2070 : 		{
; 2071 : 			return Tie_Breaker(obj, target, old); //both targets the same, let tie breaker decide

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Tie_Breaker@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Powered::Tie_Breaker
	jmp	SHORT $LN20@Select_Tar
$LN6@Select_Tar:

; 2072 : 		}
; 2073 : 		break; //just to be safe

	jmp	SHORT $LN20@Select_Tar
$LN1@Select_Tar:

; 2074 : 	default: //Default doesn't prioritize target type
; 2075 : 		return Tie_Breaker(obj, target, old); //all people are equal in my gun sights

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Tie_Breaker@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Powered::Tie_Breaker
$LN20@Select_Tar:

; 2076 : 		break; //yes, being safe still
; 2077 : 	}
; 2078 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Select_Target@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@0@Z ENDP ; RA_Base_Defense_Powered::Select_Target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Attack@RA_Base_Defense_Powered@@AAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
$T1 = -328						; size = 12
$T2 = -316						; size = 12
_params$3 = -240					; size = 196
_min$4 = -44						; size = 4
_max$5 = -40						; size = 4
_range$6 = -36						; size = 4
_targetPos$7 = -32					; size = 12
_objPos$8 = -20						; size = 12
_FinalTarget$ = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_target$ = 12						; size = 4
?Attack@RA_Base_Defense_Powered@@AAEXPAVScriptableGameObj@@0@Z PROC ; RA_Base_Defense_Powered::Attack, COMDAT
; _this$ = ecx

; 1970 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1971 : 	/**************Evaluate Target Threat****************/
; 1972 : 	GameObject *FinalTarget = Set_Target(target);

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set_Target@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@@Z ; RA_Base_Defense_Powered::Set_Target
	mov	DWORD PTR _FinalTarget$[ebp], eax

; 1973 : 	if (FinalTarget) //Was there a non-NULL return from Set_Target?

	cmp	DWORD PTR _FinalTarget$[ebp], 0
	je	SHORT $LN6@Attack

; 1974 : 	{
; 1975 : 		FinalTarget = Select_Target(obj, FinalTarget); //Was Rate_Target

	mov	eax, DWORD PTR _FinalTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Select_Target@RA_Base_Defense_Powered@@AAEPAVScriptableGameObj@@PAV2@0@Z ; RA_Base_Defense_Powered::Select_Target
	mov	DWORD PTR _FinalTarget$[ebp], eax
$LN6@Attack:

; 1976 : 	}
; 1977 : 	/****************Execute Final Attack****************/
; 1978 : 	if (FinalTarget && FinalTarget->As_DamageableGameObj()->Is_Enemy(obj->As_DamageableGameObj()))

	cmp	DWORD PTR _FinalTarget$[ebp], 0
	je	$LN1@Attack
	mov	eax, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _FinalTarget$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _FinalTarget$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	mov	ecx, eax
	call	?Is_Enemy@DamageableGameObj@@QAE_NPAV1@@Z ; DamageableGameObj::Is_Enemy
	movzx	ecx, al
	test	ecx, ecx
	je	$LN1@Attack

; 1979 : 	{
; 1980 : 		targetID = Commands->Get_ID(FinalTarget); //remember new target, or re-remember old target

	mov	eax, DWORD PTR _FinalTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax

; 1981 : 		Vector3 objPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _objPos$8[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1982 : 		Vector3 targetPos = Commands->Get_Position(FinalTarget);

	mov	eax, DWORD PTR _FinalTarget$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _targetPos$7[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1983 : 		float range = Commands->Get_Distance(objPos, targetPos);

	lea	eax, DWORD PTR _targetPos$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _objPos$8[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR _range$6[ebp]

; 1984 : 		float max = Get_Float_Parameter("MaxRange");

	push	OFFSET ??_C@_08JOBCAEBO@MaxRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _max$5[ebp]

; 1985 : 		float min = Get_Float_Parameter("MinRange");

	push	OFFSET ??_C@_08EJPJLGFP@MinRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _min$4[ebp]

; 1986 : 		if (min < range && range < max && (obj->As_SmartGameObj()->Is_Obj_Visible(FinalTarget->As_PhysicalGameObj())))

	movss	xmm0, DWORD PTR _range$6[ebp]
	comiss	xmm0, DWORD PTR _min$4[ebp]
	jbe	$LN4@Attack
	movss	xmm0, DWORD PTR _max$5[ebp]
	comiss	xmm0, DWORD PTR _range$6[ebp]
	jbe	$LN4@Attack
	mov	eax, DWORD PTR _FinalTarget$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _FinalTarget$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	mov	ecx, eax
	call	?Is_Obj_Visible@SmartGameObj@@QAE_NPAVPhysicalGameObj@@@Z ; SmartGameObj::Is_Obj_Visible
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@Attack

; 1987 : 		{
; 1988 : 			ActionParamsStruct params;

	lea	ecx, DWORD PTR _params$3[ebp]
	call	??0ActionParamsStruct@@QAE@XZ		; ActionParamsStruct::ActionParamsStruct

; 1989 : 			params.Set_Basic(this,(float)current_priority, 100);

	push	-1
	push	100					; 00000064H
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+36]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _params$3[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 1990 : 			if (Adjust_For_Infantry(FinalTarget))

	mov	eax, DWORD PTR _FinalTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Adjust_For_Infantry@RA_Base_Defense_Powered@@AAE_NPAVScriptableGameObj@@@Z ; RA_Base_Defense_Powered::Adjust_For_Infantry
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Attack

; 1991 : 			{
; 1992 : 				params.AttackObject = NULL;

	mov	DWORD PTR _params$3[ebp+88], 0

; 1993 : 				params.Set_Attack(targetPos, range, 0, true);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _range$6[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR _targetPos$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$3[ebp]
	call	?Set_Attack@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ; ActionParamsStruct::Set_Attack

; 1994 : 				params.AttackCheckBlocked = false;

	mov	BYTE PTR _params$3[ebp+108], 0

; 1995 : 			}
; 1996 : 			else

	jmp	SHORT $LN2@Attack
$LN3@Attack:

; 1997 : 			{
; 1998 : 				params.Set_Attack(FinalTarget, range, 0, true);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _range$6[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _FinalTarget$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$3[ebp]
	call	?Set_Attack@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z ; ActionParamsStruct::Set_Attack

; 1999 : 				params.AttackCheckBlocked = false;

	mov	BYTE PTR _params$3[ebp+108], 0
$LN2@Attack:

; 2000 : 			}
; 2001 : 			Commands->Action_Attack(obj, params);

	lea	eax, DWORD PTR _params$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+20]
	call	eax
	add	esp, 8

; 2002 : 			current_priority++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], ecx

; 2003 : 			attacking = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 1

; 2004 : 		}
; 2005 : 		else

	jmp	SHORT $LN1@Attack
$LN4@Attack:

; 2006 : 		{
; 2007 : 			Commands->Action_Reset(obj, 100);

	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 8

; 2008 : 			attacking = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 2009 : 			targetID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 2010 : 			current_priority = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 10			; 0000000aH
$LN1@Attack:

; 2011 : 		}
; 2012 : 	}
; 2013 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Attack@RA_Base_Defense_Powered@@AAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Base_Defense_Powered::Attack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Base_Defense_Simple@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Base_Defense_Simple@@UAEPAXI@Z PROC		; RA_Base_Defense_Simple::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Base_Defense_Simple@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Base_Defense_Simple@@UAEPAXI@Z ENDP		; RA_Base_Defense_Simple::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Base_Defense_Simple@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Base_Defense_Simple@@UAE@XZ PROC			; RA_Base_Defense_Simple::~RA_Base_Defense_Simple, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Base_Defense_Simple@@UAE@XZ ENDP			; RA_Base_Defense_Simple::~RA_Base_Defense_Simple
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Base_Defense_Simple@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Base_Defense_Simple@@QAE@XZ PROC			; RA_Base_Defense_Simple::RA_Base_Defense_Simple, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Base_Defense_Simple@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Base_Defense_Simple@@QAE@XZ ENDP			; RA_Base_Defense_Simple::RA_Base_Defense_Simple
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Base_Defense_Simple@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Base_Defense_Simple@@UAEXXZ PROC ; RA_Base_Defense_Simple::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 1427 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1428 : 	Auto_Save_Variable(&targetID,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 1429 : 	Auto_Save_Variable(&attacking,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 1430 : 	Auto_Save_Variable(&current_priority,4,3);

	push	3
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 1431 : 	Auto_Save_Variable(&attack_timer,4,4);

	push	4
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 1432 : 	Auto_Save_Variable(&loop_count,4,5);

	push	5
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 1433 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Base_Defense_Simple@@UAEXXZ ENDP ; RA_Base_Defense_Simple::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Action_Complete@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_action_id$ = 12					; size = 4
_complete_reason$ = 16					; size = 4
?Action_Complete@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z PROC ; RA_Base_Defense_Simple::Action_Complete, COMDAT
; _this$ = ecx

; 1417 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1418 : 	if (action_id == 100) //Attack completed

	cmp	DWORD PTR _action_id$[ebp], 100		; 00000064H
	jne	SHORT $LN2@Action_Com

; 1419 : 	{
; 1420 : 		attacking = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 1421 : 		targetID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 1422 : 		current_priority = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 10			; 0000000aH
$LN2@Action_Com:

; 1423 : 	}
; 1424 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Action_Complete@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z ENDP ; RA_Base_Defense_Simple::Action_Complete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
tv367 = -368						; size = 4
tv80 = -368						; size = 4
$T1 = -364						; size = 12
$T2 = -352						; size = 12
$T3 = -340						; size = 12
_min$4 = -264						; size = 4
_max$5 = -260						; size = 4
_range$6 = -256						; size = 4
_targetPos$7 = -252					; size = 12
_objPos$8 = -240					; size = 12
_myType$9 = -228					; size = 4
_TargetType$10 = -224					; size = 4
_target$11 = -220					; size = 4
_params$12 = -216					; size = 196
_pos$13 = -20						; size = 12
_call_attack$ = -5					; size = 1
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@H@Z PROC ; RA_Base_Defense_Simple::Timer_Expired, COMDAT
; _this$ = ecx

; 1299 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 368				; 00000170H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1300 : 	if (number != 11)

	cmp	DWORD PTR _number$[ebp], 11		; 0000000bH
	je	SHORT $LN29@Timer_Expi

; 1301 : 	{
; 1302 : 		return; //If its not the timer we're interested in, end now

	jmp	$LN30@Timer_Expi
$LN29@Timer_Expi:

; 1303 : 	}
; 1304 : 	bool call_attack = true;

	mov	BYTE PTR _call_attack$[ebp], 1

; 1305 : 	if (!attacking)	//skip facing action if attacking

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	jne	$LN28@Timer_Expi

; 1306 : 	{
; 1307 : 		if (loop_count > 4) //only face new direction every 5th loop

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 4
	jle	$LN27@Timer_Expi

; 1308 : 		{
; 1309 : 			Vector3 pos = Commands->Get_Position(obj); 

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos$13[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1310 : 			switch (Commands->Get_Random_Int(0,8))

	push	8
	push	0
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	add	esp, 8
	mov	DWORD PTR tv80[ebp], eax
	cmp	DWORD PTR tv80[ebp], 7
	ja	$LN16@Timer_Expi
	mov	edx, DWORD PTR tv80[ebp]
	jmp	DWORD PTR $LN32@Timer_Expi[edx*4]
$LN24@Timer_Expi:

; 1311 : 			{
; 1312 : 				case 0:
; 1313 : 					pos.X += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 1314 : 					pos.Y -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 1315 : 					break;

	jmp	$LN25@Timer_Expi
$LN23@Timer_Expi:

; 1316 : 				case 1:
; 1317 : 					pos.X -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 1318 : 					pos.Y -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 1319 : 					break;

	jmp	$LN25@Timer_Expi
$LN22@Timer_Expi:

; 1320 : 				case 2:
; 1321 : 					pos.X += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 1322 : 					pos.Y += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 1323 : 					break;

	jmp	$LN25@Timer_Expi
$LN21@Timer_Expi:

; 1324 : 				case 3:
; 1325 : 					pos.X -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 1326 : 					pos.Y += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 1327 : 					break;

	jmp	SHORT $LN25@Timer_Expi
$LN20@Timer_Expi:

; 1328 : 				case 4:
; 1329 : 					pos.X += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 1330 : 					break;

	jmp	SHORT $LN25@Timer_Expi
$LN19@Timer_Expi:

; 1331 : 				case 5:
; 1332 : 					pos.X -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0

; 1333 : 					break;

	jmp	SHORT $LN25@Timer_Expi
$LN18@Timer_Expi:

; 1334 : 				case 6:
; 1335 : 					pos.Y += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 1336 : 					break;

	jmp	SHORT $LN25@Timer_Expi
$LN17@Timer_Expi:

; 1337 : 				case 7:
; 1338 : 					pos.Y -= 10;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	subss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 1339 : 					break;

	jmp	SHORT $LN25@Timer_Expi
$LN16@Timer_Expi:

; 1340 : 				default: 
; 1341 : 					pos.X += 10;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	addss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _pos$13[ebp], xmm0
$LN25@Timer_Expi:

; 1342 : 					break;
; 1343 : 			}
; 1344 : 			ActionParamsStruct params;

	lea	ecx, DWORD PTR _params$12[ebp]
	call	??0ActionParamsStruct@@QAE@XZ		; ActionParamsStruct::ActionParamsStruct

; 1345 : 			params.Set_Basic(this, 1, 30); //priority low

	push	-1
	push	30					; 0000001eH
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$12[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 1346 : 			params.Set_Face_Location(pos, 6);

	push	ecx
	movss	xmm0, DWORD PTR __real@40c00000
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR _pos$13[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$12[ebp]
	call	?Set_Face_Location@ActionParamsStruct@@QAEXABVVector3@@M@Z ; ActionParamsStruct::Set_Face_Location

; 1347 : 			Commands->Action_Face_Location(obj, params);

	lea	eax, DWORD PTR _params$12[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+32]
	call	eax
	add	esp, 8
$LN27@Timer_Expi:

; 1348 : 		}
; 1349 : 	}
; 1350 : 	else

	jmp	$LN2@Timer_Expi
$LN28@Timer_Expi:

; 1351 : 	{
; 1352 : 		attacking = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 1353 : 		current_priority = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 10			; 0000000aH

; 1354 : 		GameObject *target = Commands->Find_Object(targetID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _target$11[ebp], eax

; 1355 : 		if (!(target)) //If target invalid, end now

	cmp	DWORD PTR _target$11[ebp], 0
	jne	SHORT $LN14@Timer_Expi

; 1356 : 		{
; 1357 : 			targetID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 1358 : 			call_attack = false;

	mov	BYTE PTR _call_attack$[ebp], 0

; 1359 : 		}
; 1360 : 		else

	jmp	$LN5@Timer_Expi
$LN14@Timer_Expi:

; 1361 : 		{
; 1362 : 			int TargetType = Commands->Get_Player_Type(target);

	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _TargetType$10[ebp], eax

; 1363 : 			int myType = Commands->Get_Player_Type(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _myType$9[ebp], eax

; 1364 : 			if (myType == TargetType) //Check old target for team change

	mov	eax, DWORD PTR _myType$9[ebp]
	cmp	eax, DWORD PTR _TargetType$10[ebp]
	jne	SHORT $LN12@Timer_Expi

; 1365 : 			{
; 1366 : 				targetID = 0; //old target a friend now

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 1367 : 				call_attack = false;

	mov	BYTE PTR _call_attack$[ebp], 0
$LN12@Timer_Expi:

; 1368 : 			}
; 1369 : 			//Check Range
; 1370 : 			Vector3 objPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _objPos$8[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1371 : 			Vector3 targetPos = Commands->Get_Position(target);

	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _targetPos$7[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1372 : 			float range = Commands->Get_Distance(objPos, targetPos);

	lea	eax, DWORD PTR _targetPos$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _objPos$8[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR _range$6[ebp]

; 1373 : 			float max = Get_Float_Parameter("MaxRange");

	push	OFFSET ??_C@_08JOBCAEBO@MaxRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _max$5[ebp]

; 1374 : 			float min = Get_Float_Parameter("MinRange");

	push	OFFSET ??_C@_08EJPJLGFP@MinRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _min$4[ebp]

; 1375 : 			if (range < min || range > max)

	movss	xmm0, DWORD PTR _min$4[ebp]
	comiss	xmm0, DWORD PTR _range$6[ebp]
	ja	SHORT $LN10@Timer_Expi
	movss	xmm0, DWORD PTR _range$6[ebp]
	comiss	xmm0, DWORD PTR _max$5[ebp]
	jbe	SHORT $LN11@Timer_Expi
$LN10@Timer_Expi:

; 1376 : 			{
; 1377 : 				targetID = 0; //old target out of range

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 1378 : 				call_attack = false;

	mov	BYTE PTR _call_attack$[ebp], 0
$LN11@Timer_Expi:

; 1379 : 			}
; 1380 : 			//Check Settings
; 1381 : 			if (((Get_Vehicle_Mode(target) == VEHICLE_TYPE_FLYING) || (Get_Vehicle_Mode(Get_Vehicle(target)) == VEHICLE_TYPE_FLYING)) && !Is_Script_Attached(target,"JFW_Submarine"))

	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	je	SHORT $LN8@Timer_Expi
	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN9@Timer_Expi
$LN8@Timer_Expi:
	push	OFFSET ??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@
	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN9@Timer_Expi

; 1382 : 			{
; 1383 : 				if (!(Get_Int_Parameter("AntiAir")))

	push	OFFSET ??_C@_07NJFFFLDF@AntiAir?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN7@Timer_Expi

; 1384 : 				{
; 1385 : 					targetID = 0; //old target not targetable

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 1386 : 					call_attack = false;

	mov	BYTE PTR _call_attack$[ebp], 0
$LN7@Timer_Expi:

; 1387 : 				}
; 1388 : 			}
; 1389 : 			else

	jmp	SHORT $LN5@Timer_Expi
$LN9@Timer_Expi:

; 1390 : 			{
; 1391 : 				if (!(Get_Int_Parameter("AntiGround")))

	push	OFFSET ??_C@_0L@ONGGIKDA@AntiGround?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN5@Timer_Expi

; 1392 : 				{
; 1393 : 					targetID = 0; //old target not targetable

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 1394 : 					call_attack = false;

	mov	BYTE PTR _call_attack$[ebp], 0
$LN5@Timer_Expi:

; 1395 : 				}
; 1396 : 			}
; 1397 : 		}
; 1398 : 		if (call_attack && obj->As_DamageableGameObj()->Is_Enemy(target->As_DamageableGameObj())) //if attack and if call_attack was not turned false

	movzx	eax, BYTE PTR _call_attack$[ebp]
	test	eax, eax
	je	SHORT $LN4@Timer_Expi
	mov	eax, DWORD PTR _target$11[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$11[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	mov	ecx, eax
	call	?Is_Enemy@DamageableGameObj@@QAE_NPAV1@@Z ; DamageableGameObj::Is_Enemy
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@Timer_Expi

; 1399 : 		{
; 1400 : 			if (Commands->Get_Health(target))

	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv367[ebp]
	movss	xmm0, DWORD PTR tv367[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN3@Timer_Expi

; 1401 : 			{
; 1402 : 				Attack(obj, target);

	mov	eax, DWORD PTR _target$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attack@RA_Base_Defense_Simple@@AAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Simple::Attack
$LN3@Timer_Expi:

; 1403 : 			}
; 1404 : 		}
; 1405 : 		else 

	jmp	SHORT $LN2@Timer_Expi
$LN4@Timer_Expi:

; 1406 : 			Commands->Action_Reset(obj, 100);

	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 8
$LN2@Timer_Expi:

; 1407 : 	}
; 1408 : 	if (loop_count > 4)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 4
	jle	SHORT $LN1@Timer_Expi

; 1409 : 	{
; 1410 : 		loop_count = 0; //reset counter

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
$LN1@Timer_Expi:

; 1411 : 	}
; 1412 : 	loop_count++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], ecx

; 1413 : 	Commands->Start_Timer(obj, this, attack_timer, 11);

	push	11					; 0000000bH
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+40]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+128]
	call	ecx
	add	esp, 16					; 00000010H
$LN30@Timer_Expi:

; 1414 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN32@Timer_Expi:
	DD	$LN24@Timer_Expi
	DD	$LN23@Timer_Expi
	DD	$LN22@Timer_Expi
	DD	$LN21@Timer_Expi
	DD	$LN20@Timer_Expi
	DD	$LN19@Timer_Expi
	DD	$LN18@Timer_Expi
	DD	$LN17@Timer_Expi
?Timer_Expired@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Base_Defense_Simple::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Damaged@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
tv177 = -84						; size = 4
_damagerID$ = -16					; size = 4
_objID$ = -12						; size = 4
_newID$1 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_amount$ = 16						; size = 4
?Damaged@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@0M@Z PROC ; RA_Base_Defense_Simple::Damaged, COMDAT
; _this$ = ecx

; 1225 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1226 : 	if(Get_Object_Type(obj)==-2)

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Get_Object_Type@@YAHPAVScriptableGameObj@@@Z ; Get_Object_Type
	add	esp, 4
	cmp	eax, -2					; fffffffeH
	jne	SHORT $LN11@Damaged

; 1227 : 	{
; 1228 : 		return;

	jmp	$LN12@Damaged
$LN11@Damaged:

; 1229 : 	}
; 1230 : 
; 1231 : 	if (!damager || amount <= 0)

	cmp	DWORD PTR _damager$[ebp], 0
	je	SHORT $LN9@Damaged
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _amount$[ebp]
	jb	SHORT $LN10@Damaged
$LN9@Damaged:

; 1232 : 	{
; 1233 : 		return;

	jmp	$LN12@Damaged
$LN10@Damaged:

; 1234 : 	}
; 1235 : 	if ((Get_Vehicle_Mode(damager) == VEHICLE_TYPE_FLYING) && !Is_Script_Attached(damager,"JFW_Submarine"))

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN8@Damaged
	push	OFFSET ??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN8@Damaged

; 1236 : 	{
; 1237 : 		if (!(Get_Int_Parameter("AntiAir")))

	push	OFFSET ??_C@_07NJFFFLDF@AntiAir?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN7@Damaged

; 1238 : 		{
; 1239 : 			return; //Ignore the target

	jmp	$LN12@Damaged
$LN7@Damaged:

; 1240 : 		}
; 1241 : 	}
; 1242 : 	else

	jmp	SHORT $LN5@Damaged
$LN8@Damaged:

; 1243 : 	{
; 1244 : 		if (!(Get_Int_Parameter("AntiGround")))

	push	OFFSET ??_C@_0L@ONGGIKDA@AntiGround?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN5@Damaged

; 1245 : 		{
; 1246 : 			return; //Ignore the target

	jmp	$LN12@Damaged
$LN5@Damaged:

; 1247 : 		}
; 1248 : 	}
; 1249 : 	if (targetID) //check for current target

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN3@Damaged

; 1250 : 	{
; 1251 : 		unsigned long newID = Commands->Get_ID(damager);

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _newID$1[ebp], eax

; 1252 : 		if (targetID == newID)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _newID$1[ebp]
	jne	SHORT $LN3@Damaged

; 1253 : 		{
; 1254 : 			return; //already firing at target

	jmp	SHORT $LN12@Damaged
$LN3@Damaged:

; 1255 : 		}
; 1256 : 	}
; 1257 : 	int objID = Commands->Get_Player_Type(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _objID$[ebp], eax

; 1258 : 	int damagerID = Commands->Get_Player_Type(damager);

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _damagerID$[ebp], eax

; 1259 : 	if (objID != damagerID) //Make sure an enemy attacked

	mov	eax, DWORD PTR _objID$[ebp]
	cmp	eax, DWORD PTR _damagerID$[ebp]
	je	SHORT $LN1@Damaged

; 1260 : 	{
; 1261 : 		if (Commands->Get_Health(damager))

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv177[ebp]
	movss	xmm0, DWORD PTR tv177[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@Damaged

; 1262 : 		{
; 1263 : 			Attack(obj, damager);

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attack@RA_Base_Defense_Simple@@AAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Simple::Attack
$LN1@Damaged:
$LN12@Damaged:

; 1264 : 		}
; 1265 : 	}
; 1266 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@0M@Z ENDP ; RA_Base_Defense_Simple::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Enemy_Seen@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
tv153 = -76						; size = 4
_newID$1 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_enemy$ = 12						; size = 4
?Enemy_Seen@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@0@Z PROC ; RA_Base_Defense_Simple::Enemy_Seen, COMDAT
; _this$ = ecx

; 1269 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1270 : 	if ((Get_Vehicle_Mode(enemy) == VEHICLE_TYPE_FLYING) && !Is_Script_Attached(enemy,"JFW_Submarine"))

	mov	eax, DWORD PTR _enemy$[ebp]
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN7@Enemy_Seen
	push	OFFSET ??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@
	mov	eax, DWORD PTR _enemy$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@Enemy_Seen

; 1271 : 	{
; 1272 : 		if (!(Get_Int_Parameter("AntiAir")))

	push	OFFSET ??_C@_07NJFFFLDF@AntiAir?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN6@Enemy_Seen

; 1273 : 		{
; 1274 : 			return; //Ignore the target

	jmp	SHORT $LN8@Enemy_Seen
$LN6@Enemy_Seen:

; 1275 : 		}
; 1276 : 	}
; 1277 : 	else

	jmp	SHORT $LN4@Enemy_Seen
$LN7@Enemy_Seen:

; 1278 : 	{
; 1279 : 		if (!(Get_Int_Parameter("AntiGround")))

	push	OFFSET ??_C@_0L@ONGGIKDA@AntiGround?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN4@Enemy_Seen

; 1280 : 		{
; 1281 : 			return; //Ignore the target

	jmp	SHORT $LN8@Enemy_Seen
$LN4@Enemy_Seen:

; 1282 : 		}
; 1283 : 	}
; 1284 : 	if (targetID) //check for current target

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN2@Enemy_Seen

; 1285 : 	{
; 1286 : 		unsigned long newID = Commands->Get_ID(enemy);

	mov	eax, DWORD PTR _enemy$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _newID$1[ebp], eax

; 1287 : 		if (targetID == newID)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _newID$1[ebp]
	jne	SHORT $LN2@Enemy_Seen

; 1288 : 		{
; 1289 : 			return; //already firing at target

	jmp	SHORT $LN8@Enemy_Seen
$LN2@Enemy_Seen:

; 1290 : 		}
; 1291 : 	}
; 1292 : 	if (Commands->Get_Health(enemy))

	mov	eax, DWORD PTR _enemy$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv153[ebp]
	movss	xmm0, DWORD PTR tv153[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@Enemy_Seen

; 1293 : 	{
; 1294 : 		Attack(obj,enemy);

	mov	eax, DWORD PTR _enemy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attack@RA_Base_Defense_Simple@@AAEXPAVScriptableGameObj@@0@Z ; RA_Base_Defense_Simple::Attack
$LN1@Enemy_Seen:
$LN8@Enemy_Seen:

; 1295 : 	}
; 1296 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Enemy_Seen@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Base_Defense_Simple::Enemy_Seen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@@Z PROC ; RA_Base_Defense_Simple::Created, COMDAT
; _this$ = ecx

; 1209 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1210 : 	//Initialize Variables
; 1211 : 	targetID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 1212 : 	attacking = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 1213 : 	current_priority = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 10			; 0000000aH

; 1214 : 	attack_timer = 1.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+40], xmm0

; 1215 : 	loop_count = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0

; 1216 : 	//Standard AI Startup Junk
; 1217 : 	Commands->Enable_Enemy_Seen(obj, true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+300]
	call	edx
	add	esp, 8

; 1218 : 	Commands->Enable_Vehicle_Transitions(obj, false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+728]
	call	edx
	add	esp, 8

; 1219 : 	Commands->Enable_Hibernation(obj,false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+568]
	call	edx
	add	esp, 8

; 1220 : 	Commands->Innate_Enable(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+440]
	call	edx
	add	esp, 4

; 1221 : 	Commands->Start_Timer(obj, this, attack_timer, 11);

	push	11					; 0000000bH
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+40]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+128]
	call	ecx
	add	esp, 16					; 00000010H

; 1222 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Base_Defense_Simple@@UAEXPAVScriptableGameObj@@@Z ENDP ; RA_Base_Defense_Simple::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Adjust_For_Infantry@RA_Base_Defense_Simple@@AAE_NPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
?Adjust_For_Infantry@RA_Base_Defense_Simple@@AAE_NPAVScriptableGameObj@@@Z PROC ; RA_Base_Defense_Simple::Adjust_For_Infantry, COMDAT
; _this$ = ecx

; 1705 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1706 : 	if (Get_Int_Parameter("AdjustAim"))

	push	OFFSET ??_C@_09KGOAILDN@AdjustAim?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	SHORT $LN2@Adjust_For

; 1707 : 	{
; 1708 : 		if (target->As_SoldierGameObj())

	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	je	SHORT $LN2@Adjust_For

; 1709 : 		{
; 1710 : 			return true;

	mov	al, 1
	jmp	SHORT $LN3@Adjust_For
$LN2@Adjust_For:

; 1711 : 		}
; 1712 : 	}
; 1713 : 	//No need to adjust if parameter says not to
; 1714 : 	return false;

	xor	al, al
$LN3@Adjust_For:

; 1715 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Adjust_For_Infantry@RA_Base_Defense_Simple@@AAE_NPAVScriptableGameObj@@@Z ENDP ; RA_Base_Defense_Simple::Adjust_For_Infantry
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Tie_Breaker@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@00@Z
_TEXT	SEGMENT
tv350 = -200						; size = 4
tv339 = -200						; size = 4
tv319 = -200						; size = 4
tv309 = -200						; size = 4
$T1 = -196						; size = 12
$T2 = -184						; size = 12
$T3 = -172						; size = 12
_test$4 = -96						; size = 4
_max_potential$ = -92					; size = 4
_old_range$ = -88					; size = 4
_new_range$ = -84					; size = 4
_old_pos$ = -80						; size = 12
_new_pos$ = -68						; size = 12
_obj_pos$ = -56						; size = 12
_min_range$ = -44					; size = 4
_max_range$ = -40					; size = 4
_old_percent$ = -36					; size = 4
_new_percent$ = -32					; size = 4
_old_max$ = -28						; size = 4
_new_max$ = -24						; size = 4
_target$ = -20						; size = 4
_old$ = -16						; size = 4
_new_rating$ = -12					; size = 4
_old_rating$ = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_new_target$ = 12					; size = 4
_old_target$ = 16					; size = 4
?Tie_Breaker@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@00@Z PROC ; RA_Base_Defense_Simple::Tie_Breaker, COMDAT
; _this$ = ecx

; 1596 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1597 : 	//This function compiles several methods of breaking ties
; 1598 : 	//-lower health gives higher rating
; 1599 : 	//-closer distance gives higher rating
; 1600 : 	//-being player gives higher rating
; 1601 : 	float old_rating = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _old_rating$[ebp], xmm0

; 1602 : 	float new_rating = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _new_rating$[ebp], xmm0

; 1603 : 	//Player Evaluation
; 1604 : 	if (Commands->Is_A_Star(old_target))

	mov	eax, DWORD PTR _old_target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN20@Tie_Breake

; 1605 : 	{
; 1606 : 		old_rating += 100; //automatic +100 for being human

	movss	xmm0, DWORD PTR _old_rating$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _old_rating$[ebp], xmm0
$LN20@Tie_Breake:

; 1607 : 	}
; 1608 : 	if (Commands->Is_A_Star(new_target))

	mov	eax, DWORD PTR _new_target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN19@Tie_Breake

; 1609 : 	{
; 1610 : 		new_rating += 100; //automatic +100 for being human

	movss	xmm0, DWORD PTR _new_rating$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _new_rating$[ebp], xmm0
$LN19@Tie_Breake:

; 1611 : 	}
; 1612 : 	//Health Evaluation
; 1613 : 	GameObject *old = old_target;

	mov	eax, DWORD PTR _old_target$[ebp]
	mov	DWORD PTR _old$[ebp], eax

; 1614 : 	GameObject *target = new_target;

	mov	eax, DWORD PTR _new_target$[ebp]
	mov	DWORD PTR _target$[ebp], eax

; 1615 : 	//Health needs to be tested for vehicle being driven, if it exists
; 1616 : 	if (Get_Vehicle(old_target))

	mov	eax, DWORD PTR _old_target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	je	SHORT $LN18@Tie_Breake

; 1617 : 	{
; 1618 : 		old = Get_Vehicle(old_target);

	mov	eax, DWORD PTR _old_target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	mov	DWORD PTR _old$[ebp], eax
$LN18@Tie_Breake:

; 1619 : 	}
; 1620 : 	if (Get_Vehicle(new_target))

	mov	eax, DWORD PTR _new_target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	je	SHORT $LN17@Tie_Breake

; 1621 : 	{
; 1622 : 		target = Get_Vehicle(old_target);

	mov	eax, DWORD PTR _old_target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	mov	DWORD PTR _target$[ebp], eax
$LN17@Tie_Breake:

; 1623 : 	}
; 1624 : 	float new_max = Commands->Get_Max_Health(target);

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+224]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _new_max$[ebp]

; 1625 : 	float old_max = Commands->Get_Max_Health(old);

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+224]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _old_max$[ebp]

; 1626 : 	float new_percent = 0; //set to minimum

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _new_percent$[ebp], xmm0

; 1627 : 	float old_percent = 0; //set to minimum

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _old_percent$[ebp], xmm0

; 1628 : 	if (new_max > 0) //just to be sure

	movss	xmm0, DWORD PTR _new_max$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN16@Tie_Breake

; 1629 : 	{
; 1630 : 		new_percent = ((100 * Commands->Get_Health(target)) / (new_max));

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv309[ebp]
	movss	xmm0, DWORD PTR tv309[ebp]
	mulss	xmm0, DWORD PTR __real@42c80000
	divss	xmm0, DWORD PTR _new_max$[ebp]
	movss	DWORD PTR _new_percent$[ebp], xmm0

; 1631 : 	}
; 1632 : 	else

	jmp	SHORT $LN15@Tie_Breake
$LN16@Tie_Breake:

; 1633 : 	{
; 1634 : 		new_percent += 100; //If maximum health is 0, always at 100% health

	movss	xmm0, DWORD PTR _new_percent$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _new_percent$[ebp], xmm0
$LN15@Tie_Breake:

; 1635 : 	}
; 1636 : 	if (old_max > 0) //just to be sure

	movss	xmm0, DWORD PTR _old_max$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN14@Tie_Breake

; 1637 : 	{
; 1638 : 		old_percent = ((100 * Commands->Get_Health(old)) / (old_max));

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv319[ebp]
	movss	xmm0, DWORD PTR tv319[ebp]
	mulss	xmm0, DWORD PTR __real@42c80000
	divss	xmm0, DWORD PTR _old_max$[ebp]
	movss	DWORD PTR _old_percent$[ebp], xmm0

; 1639 : 	}
; 1640 : 	else

	jmp	SHORT $LN13@Tie_Breake
$LN14@Tie_Breake:

; 1641 : 	{
; 1642 : 		old_percent += 100; //If maximum health is 0, always at 100% health

	movss	xmm0, DWORD PTR _old_percent$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _old_percent$[ebp], xmm0
$LN13@Tie_Breake:

; 1643 : 	}
; 1644 : 	new_max = Commands->Get_Max_Shield_Strength(target);

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+236]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _new_max$[ebp]

; 1645 : 	old_max = Commands->Get_Max_Shield_Strength(old);

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+236]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _old_max$[ebp]

; 1646 : 	if (new_max > 0) //just to be sure

	movss	xmm0, DWORD PTR _new_max$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN12@Tie_Breake

; 1647 : 	{
; 1648 : 		new_percent += ((100 * Commands->Get_Health(target)) / (new_max)); //Add in shield percent

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv339[ebp]
	movss	xmm0, DWORD PTR tv339[ebp]
	mulss	xmm0, DWORD PTR __real@42c80000
	divss	xmm0, DWORD PTR _new_max$[ebp]
	addss	xmm0, DWORD PTR _new_percent$[ebp]
	movss	DWORD PTR _new_percent$[ebp], xmm0

; 1649 : 	}
; 1650 : 	else

	jmp	SHORT $LN11@Tie_Breake
$LN12@Tie_Breake:

; 1651 : 	{
; 1652 : 		new_percent += 100; //If maximum shield is 0, always at 100% shield

	movss	xmm0, DWORD PTR _new_percent$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _new_percent$[ebp], xmm0
$LN11@Tie_Breake:

; 1653 : 	}
; 1654 : 	if (old_max > 0) //just to be sure

	movss	xmm0, DWORD PTR _old_max$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN10@Tie_Breake

; 1655 : 	{
; 1656 : 		old_percent += ((100 * Commands->Get_Health(old)) / (old_max)); //Add in shield percent

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv350[ebp]
	movss	xmm0, DWORD PTR tv350[ebp]
	mulss	xmm0, DWORD PTR __real@42c80000
	divss	xmm0, DWORD PTR _old_max$[ebp]
	addss	xmm0, DWORD PTR _old_percent$[ebp]
	movss	DWORD PTR _old_percent$[ebp], xmm0

; 1657 : 	}
; 1658 : 	else

	jmp	SHORT $LN9@Tie_Breake
$LN10@Tie_Breake:

; 1659 : 	{
; 1660 : 		old_percent += 100; //If maximum shield is 0, always at 100% shield

	movss	xmm0, DWORD PTR _old_percent$[ebp]
	addss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _old_percent$[ebp], xmm0
$LN9@Tie_Breake:

; 1661 : 	}
; 1662 : 	old_rating += 200 - old_percent;

	movss	xmm0, DWORD PTR __real@43480000
	subss	xmm0, DWORD PTR _old_percent$[ebp]
	addss	xmm0, DWORD PTR _old_rating$[ebp]
	movss	DWORD PTR _old_rating$[ebp], xmm0

; 1663 : 	new_rating += 200 - new_percent;

	movss	xmm0, DWORD PTR __real@43480000
	subss	xmm0, DWORD PTR _new_percent$[ebp]
	addss	xmm0, DWORD PTR _new_rating$[ebp]
	movss	DWORD PTR _new_rating$[ebp], xmm0

; 1664 : 	//Range Evaluation
; 1665 : 	float max_range = Get_Float_Parameter("MaxRange");

	push	OFFSET ??_C@_08JOBCAEBO@MaxRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _max_range$[ebp]

; 1666 : 	float min_range = Get_Float_Parameter("MinRange");

	push	OFFSET ??_C@_08EJPJLGFP@MinRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _min_range$[ebp]

; 1667 : 	Vector3 obj_pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _obj_pos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1668 : 	Vector3 new_pos = Commands->Get_Position(new_target);

	mov	eax, DWORD PTR _new_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _new_pos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1669 : 	Vector3 old_pos = Commands->Get_Position(old_target);

	mov	eax, DWORD PTR _old_target$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _old_pos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1670 : 	float new_range = Commands->Get_Distance(obj_pos, new_pos);

	lea	eax, DWORD PTR _new_pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _obj_pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR _new_range$[ebp]

; 1671 : 	float old_range = Commands->Get_Distance(obj_pos, old_pos);

	lea	eax, DWORD PTR _old_pos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _obj_pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR _old_range$[ebp]

; 1672 : 	if (new_range < max_range && new_range > min_range)

	movss	xmm0, DWORD PTR _max_range$[ebp]
	comiss	xmm0, DWORD PTR _new_range$[ebp]
	jbe	SHORT $LN8@Tie_Breake
	movss	xmm0, DWORD PTR _new_range$[ebp]
	comiss	xmm0, DWORD PTR _min_range$[ebp]
	jbe	SHORT $LN8@Tie_Breake

; 1673 : 	{
; 1674 : 		new_rating += max_range - (new_range - min_range); //not sure if this is good

	movss	xmm0, DWORD PTR _new_range$[ebp]
	subss	xmm0, DWORD PTR _min_range$[ebp]
	movss	xmm1, DWORD PTR _max_range$[ebp]
	subss	xmm1, xmm0
	addss	xmm1, DWORD PTR _new_rating$[ebp]
	movss	DWORD PTR _new_rating$[ebp], xmm1
$LN8@Tie_Breake:

; 1675 : 	}
; 1676 : 	if (old_range < max_range && old_range > min_range)

	movss	xmm0, DWORD PTR _max_range$[ebp]
	comiss	xmm0, DWORD PTR _old_range$[ebp]
	jbe	SHORT $LN7@Tie_Breake
	movss	xmm0, DWORD PTR _old_range$[ebp]
	comiss	xmm0, DWORD PTR _min_range$[ebp]
	jbe	SHORT $LN7@Tie_Breake

; 1677 : 	{
; 1678 : 		old_rating += max_range - (old_range - min_range);

	movss	xmm0, DWORD PTR _old_range$[ebp]
	subss	xmm0, DWORD PTR _min_range$[ebp]
	movss	xmm1, DWORD PTR _max_range$[ebp]
	subss	xmm1, xmm0
	addss	xmm1, DWORD PTR _old_rating$[ebp]
	movss	DWORD PTR _old_rating$[ebp], xmm1
$LN7@Tie_Breake:

; 1679 : 	}
; 1680 : 	//Final Evaluation
; 1681 : 	float max_potential = 300 + max_range; //300 = 100 from Player vs AI + 200 from health

	movss	xmm0, DWORD PTR __real@43960000
	addss	xmm0, DWORD PTR _max_range$[ebp]
	movss	DWORD PTR _max_potential$[ebp], xmm0

; 1682 : 	if (old_rating > new_rating)

	movss	xmm0, DWORD PTR _old_rating$[ebp]
	comiss	xmm0, DWORD PTR _new_rating$[ebp]
	jbe	SHORT $LN6@Tie_Breake

; 1683 : 	{
; 1684 : 		return old_target;

	mov	eax, DWORD PTR _old_target$[ebp]
	jmp	SHORT $LN1@Tie_Breake
	jmp	SHORT $LN1@Tie_Breake
$LN6@Tie_Breake:

; 1685 : 	}
; 1686 : 	else if (old_rating < new_rating)

	movss	xmm0, DWORD PTR _new_rating$[ebp]
	comiss	xmm0, DWORD PTR _old_rating$[ebp]
	jbe	SHORT $LN4@Tie_Breake

; 1687 : 	{
; 1688 : 		float test = new_rating - old_rating;

	movss	xmm0, DWORD PTR _new_rating$[ebp]
	subss	xmm0, DWORD PTR _old_rating$[ebp]
	movss	DWORD PTR _test$4[ebp], xmm0

; 1689 : 		if (test > (max_potential * 0.1)) //new target must be at least 10% greater priority

	cvtss2sd xmm0, DWORD PTR _test$4[ebp]
	cvtss2sd xmm1, DWORD PTR _max_potential$[ebp]
	mulsd	xmm1, QWORD PTR __real@3fb999999999999a
	comisd	xmm0, xmm1
	jbe	SHORT $LN3@Tie_Breake

; 1690 : 		{
; 1691 : 			return new_target;

	mov	eax, DWORD PTR _new_target$[ebp]
	jmp	SHORT $LN1@Tie_Breake

; 1692 : 		}
; 1693 : 		else

	jmp	SHORT $LN2@Tie_Breake
$LN3@Tie_Breake:

; 1694 : 		{
; 1695 : 			return old_target;

	mov	eax, DWORD PTR _old_target$[ebp]
	jmp	SHORT $LN1@Tie_Breake
$LN2@Tie_Breake:

; 1696 : 		}
; 1697 : 	}
; 1698 : 	else

	jmp	SHORT $LN1@Tie_Breake
$LN4@Tie_Breake:

; 1699 : 	{
; 1700 : 		return old_target; //rating tie, don't change targets

	mov	eax, DWORD PTR _old_target$[ebp]
$LN1@Tie_Breake:

; 1701 : 	}
; 1702 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Tie_Breaker@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@00@Z ENDP ; RA_Base_Defense_Simple::Tie_Breaker
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Set_Target@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@@Z
_TEXT	SEGMENT
_vehicle$1 = -8						; size = 4
_this$ = -4						; size = 4
_target$ = 8						; size = 4
?Set_Target@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@@Z PROC ; RA_Base_Defense_Simple::Set_Target, COMDAT
; _this$ = ecx

; 1547 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1548 : 	if (target) //confirm non-NULL pointer

	cmp	DWORD PTR _target$[ebp], 0
	je	$LN12@Set_Target

; 1549 : 	{
; 1550 : 		if (Commands->Is_A_Star(target)) //Is it a player?

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	$LN11@Set_Target

; 1551 : 		{
; 1552 : 			GameObject *vehicle = Get_Vehicle(target); 

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	mov	DWORD PTR _vehicle$1[ebp], eax

; 1553 : 			if (vehicle) //Are they in a vehicle

	cmp	DWORD PTR _vehicle$1[ebp], 0
	je	SHORT $LN10@Set_Target

; 1554 : 			{
; 1555 : 				if ((Get_Vehicle_Mode(target) == VEHICLE_TYPE_FLYING) && !Is_Script_Attached(target,"JFW_Submarine"))

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN9@Set_Target
	push	OFFSET ??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN9@Set_Target

; 1556 : 				{
; 1557 : 					if (!(Get_Int_Parameter("AntiAir")))

	push	OFFSET ??_C@_07NJFFFLDF@AntiAir?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN8@Set_Target

; 1558 : 					{
; 1559 : 						return 0; //Ignore the target

	xor	eax, eax
	jmp	SHORT $LN13@Set_Target
$LN8@Set_Target:

; 1560 : 					}
; 1561 : 				}
; 1562 : 				else

	jmp	SHORT $LN7@Set_Target
$LN9@Set_Target:

; 1563 : 				{
; 1564 : 					if (!(Get_Int_Parameter("AntiGround")))

	push	OFFSET ??_C@_0L@ONGGIKDA@AntiGround?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN7@Set_Target

; 1565 : 					{
; 1566 : 						return 0; //Ignore the target

	xor	eax, eax
	jmp	SHORT $LN13@Set_Target
$LN7@Set_Target:

; 1567 : 					}
; 1568 : 				}
; 1569 : 				return vehicle; //if so, return vehicle

	mov	eax, DWORD PTR _vehicle$1[ebp]
	jmp	SHORT $LN13@Set_Target

; 1570 : 			}
; 1571 : 			else

	jmp	SHORT $LN11@Set_Target
$LN10@Set_Target:

; 1572 : 			{
; 1573 : 				if ((Get_Vehicle_Mode(target) == VEHICLE_TYPE_FLYING) && !Is_Script_Attached(target,"JFW_Submarine"))

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Get_Vehicle_Mode@@YAIPAVScriptableGameObj@@@Z ; Get_Vehicle_Mode
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN4@Set_Target
	push	OFFSET ??_C@_0O@MPOIOAGG@JFW_Submarine?$AA@
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Is_Script_Attached@@YA_NPAVScriptableGameObj@@PBD@Z ; Is_Script_Attached
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@Set_Target

; 1574 : 				{
; 1575 : 					if (!(Get_Int_Parameter("AntiAir")))

	push	OFFSET ??_C@_07NJFFFLDF@AntiAir?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN3@Set_Target

; 1576 : 					{
; 1577 : 						return 0; //Ignore the target

	xor	eax, eax
	jmp	SHORT $LN13@Set_Target
$LN3@Set_Target:

; 1578 : 					}
; 1579 : 				}
; 1580 : 				else

	jmp	SHORT $LN2@Set_Target
$LN4@Set_Target:

; 1581 : 				{
; 1582 : 					if (!(Get_Int_Parameter("AntiGround")))

	push	OFFSET ??_C@_0L@ONGGIKDA@AntiGround?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN2@Set_Target

; 1583 : 					{
; 1584 : 						return 0; //Ignore the target

	xor	eax, eax
	jmp	SHORT $LN13@Set_Target
$LN2@Set_Target:

; 1585 : 					}
; 1586 : 				}
; 1587 : 				return target; //if not, return player

	mov	eax, DWORD PTR _target$[ebp]
	jmp	SHORT $LN13@Set_Target
$LN11@Set_Target:

; 1588 : 			}
; 1589 : 		}
; 1590 : 		return target; //nothing left but the target

	mov	eax, DWORD PTR _target$[ebp]
	jmp	SHORT $LN13@Set_Target
$LN12@Set_Target:

; 1591 : 	}
; 1592 : 	return 0;

	xor	eax, eax
$LN13@Set_Target:

; 1593 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_Target@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@@Z ENDP ; RA_Base_Defense_Simple::Set_Target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Select_Target@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@0@Z
_TEXT	SEGMENT
tv81 = -80						; size = 4
_toggle$ = -12						; size = 4
_old$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_target$ = 12						; size = 4
?Select_Target@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@0@Z PROC ; RA_Base_Defense_Simple::Select_Target, COMDAT
; _this$ = ecx

; 1482 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1483 : 	//Targets passed into Select_Target have already been
; 1484 : 	//checked for "infantry in vehicle" by Set_Target
; 1485 : 	if (!(target)) //First see if there is a valid target

	cmp	DWORD PTR _target$[ebp], 0
	jne	SHORT $LN19@Select_Tar

; 1486 : 	{
; 1487 : 		return Commands->Find_Object(targetID); //no need to test an invalid target

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	jmp	$LN20@Select_Tar
$LN19@Select_Tar:

; 1488 : 	}
; 1489 : 	GameObject *old = Commands->Find_Object(targetID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _old$[ebp], eax

; 1490 : 	if (!(old)) //is there a current target?

	cmp	DWORD PTR _old$[ebp], 0
	jne	SHORT $LN18@Select_Tar

; 1491 : 	{
; 1492 : 		return target; //no need to test an invalid target

	mov	eax, DWORD PTR _target$[ebp]
	jmp	$LN20@Select_Tar
$LN18@Select_Tar:

; 1493 : 	}
; 1494 : 	int toggle = Get_Int_Parameter("TargetMode");

	push	OFFSET ??_C@_0L@LLAOGGCM@TargetMode?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _toggle$[ebp], eax

; 1495 : 	switch(toggle)

	mov	eax, DWORD PTR _toggle$[ebp]
	mov	DWORD PTR tv81[ebp], eax
	cmp	DWORD PTR tv81[ebp], 0
	je	SHORT $LN15@Select_Tar
	cmp	DWORD PTR tv81[ebp], 1
	je	SHORT $LN10@Select_Tar
	jmp	$LN1@Select_Tar
$LN15@Select_Tar:

; 1496 : 	{
; 1497 : 	case 0: //Case 0 prioritizes vehicles over infantry
; 1498 : 		if (old->As_SoldierGameObj() && !(target->As_SoldierGameObj()))

	mov	eax, DWORD PTR _old$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _old$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	je	SHORT $LN14@Select_Tar
	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	jne	SHORT $LN14@Select_Tar

; 1499 : 		{
; 1500 : 			return target; //new target is a vehicle

	mov	eax, DWORD PTR _target$[ebp]
	jmp	$LN20@Select_Tar
	jmp	SHORT $LN13@Select_Tar
$LN14@Select_Tar:

; 1501 : 		}
; 1502 : 		else if (!(old->As_SoldierGameObj()) && target->As_SoldierGameObj())

	mov	eax, DWORD PTR _old$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _old$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	jne	SHORT $LN12@Select_Tar
	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	je	SHORT $LN12@Select_Tar

; 1503 : 		{
; 1504 : 			return old; //old target is a vehicle

	mov	eax, DWORD PTR _old$[ebp]
	jmp	$LN20@Select_Tar

; 1505 : 		}
; 1506 : 		else

	jmp	SHORT $LN13@Select_Tar
$LN12@Select_Tar:

; 1507 : 		{
; 1508 : 			return Tie_Breaker(obj, target, old); //both targets the same, let tie breaker decide

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Tie_Breaker@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Simple::Tie_Breaker
	jmp	$LN20@Select_Tar
$LN13@Select_Tar:

; 1509 : 		}
; 1510 : 		break;//just to be safe

	jmp	$LN20@Select_Tar
$LN10@Select_Tar:

; 1511 : 	case 1: //Case 1 prioritizes infantry over vehicles
; 1512 : 		if (old->As_SoldierGameObj() && !(target->As_SoldierGameObj()))

	mov	eax, DWORD PTR _old$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _old$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	je	SHORT $LN9@Select_Tar
	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	jne	SHORT $LN9@Select_Tar

; 1513 : 		{
; 1514 : 			if (Get_Vehicle(old))// Did the old target get in a vehicle?

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@Select_Tar

; 1515 : 			{
; 1516 : 				return Tie_Breaker(obj, target, old); //both vehicle

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Tie_Breaker@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Simple::Tie_Breaker
	jmp	$LN20@Select_Tar

; 1517 : 			}
; 1518 : 			else

	jmp	SHORT $LN7@Select_Tar
$LN8@Select_Tar:

; 1519 : 			{
; 1520 : 				return old; //old soldier

	mov	eax, DWORD PTR _old$[ebp]
	jmp	SHORT $LN20@Select_Tar
$LN7@Select_Tar:

; 1521 : 			}

	jmp	SHORT $LN6@Select_Tar
$LN9@Select_Tar:

; 1522 : 		}
; 1523 : 		else if (!(old->As_SoldierGameObj()) && target->As_SoldierGameObj())

	mov	eax, DWORD PTR _old$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _old$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	jne	SHORT $LN5@Select_Tar
	mov	eax, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	je	SHORT $LN5@Select_Tar

; 1524 : 		{
; 1525 : 			if (Get_Vehicle(target))// Did the new target get in a vehicle? 

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	?Get_Vehicle@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@Select_Tar

; 1526 : 			{
; 1527 : 				return Tie_Breaker(obj, target, old); //both vehicle 

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Tie_Breaker@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Simple::Tie_Breaker
	jmp	SHORT $LN20@Select_Tar

; 1528 : 			}
; 1529 : 			//Needs to pass in the vehicle instead of old?
; 1530 : 			else

	jmp	SHORT $LN3@Select_Tar
$LN4@Select_Tar:

; 1531 : 			{
; 1532 : 				return target; //target soldier

	mov	eax, DWORD PTR _target$[ebp]
	jmp	SHORT $LN20@Select_Tar
$LN3@Select_Tar:

; 1533 : 			}
; 1534 : 		}
; 1535 : 		else

	jmp	SHORT $LN6@Select_Tar
$LN5@Select_Tar:

; 1536 : 		{
; 1537 : 			return Tie_Breaker(obj, target, old); //both targets the same, let tie breaker decide

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Tie_Breaker@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Simple::Tie_Breaker
	jmp	SHORT $LN20@Select_Tar
$LN6@Select_Tar:

; 1538 : 		}
; 1539 : 		break; //just to be safe

	jmp	SHORT $LN20@Select_Tar
$LN1@Select_Tar:

; 1540 : 	default: //Default doesn't prioritize target type
; 1541 : 		return Tie_Breaker(obj, target, old); //all people are equal in my gun sights

	mov	eax, DWORD PTR _old$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Tie_Breaker@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@00@Z ; RA_Base_Defense_Simple::Tie_Breaker
$LN20@Select_Tar:

; 1542 : 		break; //yes, being safe still
; 1543 : 	}
; 1544 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Select_Target@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@0@Z ENDP ; RA_Base_Defense_Simple::Select_Target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Attack@RA_Base_Defense_Simple@@AAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
$T1 = -328						; size = 12
$T2 = -316						; size = 12
_params$3 = -240					; size = 196
_min$4 = -44						; size = 4
_max$5 = -40						; size = 4
_range$6 = -36						; size = 4
_targetPos$7 = -32					; size = 12
_objPos$8 = -20						; size = 12
_FinalTarget$ = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_target$ = 12						; size = 4
?Attack@RA_Base_Defense_Simple@@AAEXPAVScriptableGameObj@@0@Z PROC ; RA_Base_Defense_Simple::Attack, COMDAT
; _this$ = ecx

; 1436 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1437 : 	/**************Evaluate Target Threat****************/
; 1438 : 	GameObject *FinalTarget = Set_Target(target);

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set_Target@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@@Z ; RA_Base_Defense_Simple::Set_Target
	mov	DWORD PTR _FinalTarget$[ebp], eax

; 1439 : 	if (FinalTarget) //Was there a non-NULL return from Set_Target?

	cmp	DWORD PTR _FinalTarget$[ebp], 0
	je	SHORT $LN6@Attack

; 1440 : 	{
; 1441 : 		FinalTarget = Select_Target(obj, FinalTarget); //Was Rate_Target

	mov	eax, DWORD PTR _FinalTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Select_Target@RA_Base_Defense_Simple@@AAEPAVScriptableGameObj@@PAV2@0@Z ; RA_Base_Defense_Simple::Select_Target
	mov	DWORD PTR _FinalTarget$[ebp], eax
$LN6@Attack:

; 1442 : 	}
; 1443 : 	/****************Execute Final Attack****************/
; 1444 : 	if (FinalTarget && FinalTarget->As_DamageableGameObj()->Is_Enemy(obj->As_DamageableGameObj()))

	cmp	DWORD PTR _FinalTarget$[ebp], 0
	je	$LN1@Attack
	mov	eax, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _FinalTarget$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _FinalTarget$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	mov	ecx, eax
	call	?Is_Enemy@DamageableGameObj@@QAE_NPAV1@@Z ; DamageableGameObj::Is_Enemy
	movzx	ecx, al
	test	ecx, ecx
	je	$LN1@Attack

; 1445 : 	{
; 1446 : 		targetID = Commands->Get_ID(FinalTarget); //remember new target, or re-remember old target

	mov	eax, DWORD PTR _FinalTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax

; 1447 : 		Vector3 objPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _objPos$8[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1448 : 		Vector3 targetPos = Commands->Get_Position(FinalTarget);

	mov	eax, DWORD PTR _FinalTarget$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _targetPos$7[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 1449 : 		float range = Commands->Get_Distance(objPos, targetPos);

	lea	eax, DWORD PTR _targetPos$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _objPos$8[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR _range$6[ebp]

; 1450 : 		float max = Get_Float_Parameter("MaxRange");

	push	OFFSET ??_C@_08JOBCAEBO@MaxRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _max$5[ebp]

; 1451 : 		float min = Get_Float_Parameter("MinRange");

	push	OFFSET ??_C@_08EJPJLGFP@MinRange?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _min$4[ebp]

; 1452 : 		if (min < range && range < max && (obj->As_SmartGameObj()->Is_Obj_Visible(FinalTarget->As_PhysicalGameObj())))

	movss	xmm0, DWORD PTR _range$6[ebp]
	comiss	xmm0, DWORD PTR _min$4[ebp]
	jbe	$LN4@Attack
	movss	xmm0, DWORD PTR _max$5[ebp]
	comiss	xmm0, DWORD PTR _range$6[ebp]
	jbe	$LN4@Attack
	mov	eax, DWORD PTR _FinalTarget$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _FinalTarget$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	mov	ecx, eax
	call	?Is_Obj_Visible@SmartGameObj@@QAE_NPAVPhysicalGameObj@@@Z ; SmartGameObj::Is_Obj_Visible
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@Attack

; 1453 : 		{
; 1454 : 			ActionParamsStruct params;

	lea	ecx, DWORD PTR _params$3[ebp]
	call	??0ActionParamsStruct@@QAE@XZ		; ActionParamsStruct::ActionParamsStruct

; 1455 : 			params.Set_Basic(this,(float)current_priority, 100);

	push	-1
	push	100					; 00000064H
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+36]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _params$3[ebp]
	call	?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ; ActionParamsStruct::Set_Basic

; 1456 : 			if (Adjust_For_Infantry(FinalTarget))

	mov	eax, DWORD PTR _FinalTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Adjust_For_Infantry@RA_Base_Defense_Simple@@AAE_NPAVScriptableGameObj@@@Z ; RA_Base_Defense_Simple::Adjust_For_Infantry
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Attack

; 1457 : 			{
; 1458 : 				params.AttackObject = NULL;

	mov	DWORD PTR _params$3[ebp+88], 0

; 1459 : 				params.Set_Attack(targetPos, range, 0, true);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _range$6[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR _targetPos$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$3[ebp]
	call	?Set_Attack@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ; ActionParamsStruct::Set_Attack

; 1460 : 				params.AttackCheckBlocked = false;

	mov	BYTE PTR _params$3[ebp+108], 0

; 1461 : 			}
; 1462 : 			else

	jmp	SHORT $LN2@Attack
$LN3@Attack:

; 1463 : 			{
; 1464 : 				params.Set_Attack(FinalTarget, range, 0, true);

	push	1
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _range$6[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _FinalTarget$[ebp]
	push	eax
	lea	ecx, DWORD PTR _params$3[ebp]
	call	?Set_Attack@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z ; ActionParamsStruct::Set_Attack

; 1465 : 				params.AttackCheckBlocked = false;

	mov	BYTE PTR _params$3[ebp+108], 0
$LN2@Attack:

; 1466 : 			}
; 1467 : 			Commands->Action_Attack(obj, params);

	lea	eax, DWORD PTR _params$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+20]
	call	eax
	add	esp, 8

; 1468 : 			current_priority++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], ecx

; 1469 : 			attacking = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 1

; 1470 : 		}
; 1471 : 		else

	jmp	SHORT $LN1@Attack
$LN4@Attack:

; 1472 : 		{
; 1473 : 			Commands->Action_Reset(obj, 100);

	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 8

; 1474 : 			attacking = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 1475 : 			targetID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 1476 : 			current_priority = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 10			; 0000000aH
$LN1@Attack:

; 1477 : 		}
; 1478 : 	}
; 1479 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Attack@RA_Base_Defense_Simple@@AAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Base_Defense_Simple::Attack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Building_DeathSound@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Building_DeathSound@@UAEPAXI@Z PROC		; RA_Building_DeathSound::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Building_DeathSound@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Building_DeathSound@@UAEPAXI@Z ENDP		; RA_Building_DeathSound::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Building_DeathSound@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Building_DeathSound@@UAE@XZ PROC			; RA_Building_DeathSound::~RA_Building_DeathSound, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Building_DeathSound@@UAE@XZ ENDP			; RA_Building_DeathSound::~RA_Building_DeathSound
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Building_DeathSound@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Building_DeathSound@@QAE@XZ PROC			; RA_Building_DeathSound::RA_Building_DeathSound, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Building_DeathSound@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Building_DeathSound@@QAE@XZ ENDP			; RA_Building_DeathSound::RA_Building_DeathSound
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Building_DeathSound@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Building_DeathSound@@UAEXXZ PROC ; RA_Building_DeathSound::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 1202 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1203 : 	Auto_Save_Variable(&halfdead,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 1204 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Building_DeathSound@@UAEXXZ ENDP ; RA_Building_DeathSound::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Killed@RA_Building_DeathSound@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
$T1 = -80						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_killer$ = 12						; size = 4
?Killed@RA_Building_DeathSound@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Building_DeathSound::Killed, COMDAT
; _this$ = ecx

; 1197 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1198 : 	Commands->Create_Sound(Get_Parameter("DeadSound"), Commands->Get_Position(obj), obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_09HACJLOIJ@DeadSound?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+172]
	call	eax
	add	esp, 12					; 0000000cH

; 1199 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@RA_Building_DeathSound@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Building_DeathSound::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Damaged@RA_Building_DeathSound@@EAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
$T1 = -88						; size = 12
_current$ = -12						; size = 4
_max$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_amount$ = 16						; size = 4
?Damaged@RA_Building_DeathSound@@EAEXPAVScriptableGameObj@@0M@Z PROC ; RA_Building_DeathSound::Damaged, COMDAT
; _this$ = ecx

; 1176 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1177 : 	const float max = Commands->Get_Max_Health(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+224]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _max$[ebp]

; 1178 : 	const float current = Commands->Get_Health(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _current$[ebp]

; 1179 : 	if (current <= (max/2))

	movss	xmm0, DWORD PTR _max$[ebp]
	divss	xmm0, DWORD PTR __real@40000000
	comiss	xmm0, DWORD PTR _current$[ebp]
	jb	SHORT $LN4@Damaged

; 1180 : 	{
; 1181 : 		if (!halfdead)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	jne	SHORT $LN3@Damaged

; 1182 : 		{
; 1183 : 			halfdead = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 1

; 1184 : 			Commands->Create_Sound(Get_Parameter("HalfSound"), Commands->Get_Position(obj), obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_09DLGDALPD@HalfSound?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+172]
	call	eax
	add	esp, 12					; 0000000cH
$LN3@Damaged:

; 1185 : 		}
; 1186 : 	}
; 1187 : 	else

	jmp	SHORT $LN1@Damaged
$LN4@Damaged:

; 1188 : 	{
; 1189 : 		if (halfdead)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	je	SHORT $LN1@Damaged

; 1190 : 		{
; 1191 : 			halfdead = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0
$LN1@Damaged:

; 1192 : 		}
; 1193 : 	}
; 1194 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@RA_Building_DeathSound@@EAEXPAVScriptableGameObj@@0M@Z ENDP ; RA_Building_DeathSound::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Building_DeathSound@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Building_DeathSound@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Building_DeathSound::Created, COMDAT
; _this$ = ecx

; 1171 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1172 : 	halfdead = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0

; 1173 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Building_DeathSound@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Building_DeathSound::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Conyard_Controller_Improved_2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Conyard_Controller_Improved_2@@UAEPAXI@Z PROC	; RA_Conyard_Controller_Improved_2::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Conyard_Controller_Improved_2@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Conyard_Controller_Improved_2@@UAEPAXI@Z ENDP	; RA_Conyard_Controller_Improved_2::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Conyard_Controller_Improved_2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Conyard_Controller_Improved_2@@UAE@XZ PROC	; RA_Conyard_Controller_Improved_2::~RA_Conyard_Controller_Improved_2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Conyard_Controller_Improved_2@@UAE@XZ ENDP	; RA_Conyard_Controller_Improved_2::~RA_Conyard_Controller_Improved_2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Conyard_Controller_Improved_2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Conyard_Controller_Improved_2@@QAE@XZ PROC	; RA_Conyard_Controller_Improved_2::RA_Conyard_Controller_Improved_2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Conyard_Controller_Improved_2@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Conyard_Controller_Improved_2@@QAE@XZ ENDP	; RA_Conyard_Controller_Improved_2::RA_Conyard_Controller_Improved_2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Conyard_Controller_Improved_2@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_team$1 = -28						; size = 4
__param$2 = -24						; size = 4
__message$3 = -20					; size = 4
_team$4 = -16						; size = 4
__param$5 = -12						; size = 4
__message$6 = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Conyard_Controller_Improved_2@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Conyard_Controller_Improved_2::Custom, COMDAT
; _this$ = ecx

; 1132 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1133 : 	if ((type == 3000) && (!Is_Building_Dead(obj)))

	cmp	DWORD PTR _type$[ebp], 3000		; 00000bb8H
	jne	$LN1@Custom
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Is_Building_Dead@@YA_NPAVScriptableGameObj@@@Z ; Is_Building_Dead
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN1@Custom

; 1134 : 	{
; 1135 : 		if (param == 230032)

	cmp	DWORD PTR _param$[ebp], 230032		; 00038290H
	jne	$LN3@Custom

; 1136 : 		{
; 1137 : 			int _message = 3000;

	mov	DWORD PTR __message$6[ebp], 3000	; 00000bb8H

; 1138 : 			int _param = 230032;

	mov	DWORD PTR __param$5[ebp], 230032	; 00038290H

; 1139 : 			int team = Get_Int_Parameter("Team");

	push	OFFSET ??_C@_04GBPANCCF@Team?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _team$4[ebp], eax

; 1140 : 			Send_Custom_To_Team_Buildings(team,obj,_message,_param,1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$5[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$6[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR _team$4[ebp]
	push	eax
	call	?Send_Custom_To_Team_Buildings@@YAXHPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Buildings
	add	esp, 20					; 00000014H

; 1141 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset1"), obj, _message, _param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$5[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$6[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07MLBKNGKL@Preset1?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$4[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1142 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset2"), obj, _message, _param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$5[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$6[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07OADHIFGI@Preset2?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$4[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1143 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset3"), obj, _message, _param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$5[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$6[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07PJCMLECJ@Preset3?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$4[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1144 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset4"), obj, _message, _param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$5[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$6[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07LGGNCCOO@Preset4?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$4[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1145 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset5"), obj, _message, _param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$5[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$6[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07KPHGBDKP@Preset5?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$4[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1146 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset6"), obj, _message, _param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$5[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$6[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07IEFLEAGM@Preset6?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$4[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1147 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset7"), obj, _message, _param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$5[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$6[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07JNEAHBCN@Preset7?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$4[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1148 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset8"), obj, _message, _param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$5[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$6[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07BKNIGNOC@Preset8?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$4[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H
	jmp	$LN1@Custom
$LN3@Custom:

; 1149 : 		}
; 1150 : 		else if (param == 320023)

	cmp	DWORD PTR _param$[ebp], 320023		; 0004e217H
	jne	$LN1@Custom

; 1151 : 		{
; 1152 : 			int _message = 3000;

	mov	DWORD PTR __message$3[ebp], 3000	; 00000bb8H

; 1153 : 			int _param = 320023;

	mov	DWORD PTR __param$2[ebp], 320023	; 0004e217H

; 1154 : 			int team = Get_Int_Parameter("Team");

	push	OFFSET ??_C@_04GBPANCCF@Team?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _team$1[ebp], eax

; 1155 : 			Send_Custom_To_Team_Buildings(team,obj,_message,_param,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR _team$1[ebp]
	push	eax
	call	?Send_Custom_To_Team_Buildings@@YAXHPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Buildings
	add	esp, 20					; 00000014H

; 1156 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset1"), obj, _message, _param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07MLBKNGKL@Preset1?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$1[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1157 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset2"), obj, _message, _param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07OADHIFGI@Preset2?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$1[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1158 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset3"), obj, _message, _param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07PJCMLECJ@Preset3?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$1[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1159 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset4"), obj, _message, _param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07LGGNCCOO@Preset4?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$1[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1160 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset5"), obj, _message, _param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07KPHGBDKP@Preset5?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$1[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1161 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset6"), obj, _message, _param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07IEFLEAGM@Preset6?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$1[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1162 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset7"), obj, _message, _param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07JNEAHBCN@Preset7?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$1[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1163 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset8"), obj, _message, _param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07BKNIGNOC@Preset8?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$1[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H
$LN1@Custom:

; 1164 : 		}
; 1165 : 	}
; 1166 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Conyard_Controller_Improved_2@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Conyard_Controller_Improved_2::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Killed@RA_Conyard_Controller_Improved_2@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_team$ = -16						; size = 4
_param$ = -12						; size = 4
_type$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_killer$ = 12						; size = 4
?Killed@RA_Conyard_Controller_Improved_2@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Conyard_Controller_Improved_2::Killed, COMDAT
; _this$ = ecx

; 1116 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1117 : 	int type = 3000;

	mov	DWORD PTR _type$[ebp], 3000		; 00000bb8H

; 1118 : 	int param = 320023;

	mov	DWORD PTR _param$[ebp], 320023		; 0004e217H

; 1119 : 	int team = Get_Int_Parameter("Team");

	push	OFFSET ??_C@_04GBPANCCF@Team?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _team$[ebp], eax

; 1120 : 	Send_Custom_To_Team_Buildings(team,obj,type,param,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Buildings@@YAXHPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Buildings
	add	esp, 20					; 00000014H

; 1121 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset1"), obj, type, param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07MLBKNGKL@Preset1?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1122 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset2"), obj, type, param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07OADHIFGI@Preset2?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1123 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset3"), obj, type, param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07PJCMLECJ@Preset3?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1124 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset4"), obj, type, param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07LGGNCCOO@Preset4?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1125 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset5"), obj, type, param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07KPHGBDKP@Preset5?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1126 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset6"), obj, type, param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07IEFLEAGM@Preset6?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1127 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset7"), obj, type, param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07JNEAHBCN@Preset7?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1128 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset8"), obj, type, param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07BKNIGNOC@Preset8?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1129 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@RA_Conyard_Controller_Improved_2@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Conyard_Controller_Improved_2::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Conyard_Controller_Improved_2@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_team$ = -16						; size = 4
_param$ = -12						; size = 4
_type$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Conyard_Controller_Improved_2@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Conyard_Controller_Improved_2::Created, COMDAT
; _this$ = ecx

; 1100 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1101 : 	int type = 3000;

	mov	DWORD PTR _type$[ebp], 3000		; 00000bb8H

; 1102 : 	int param = 230032;

	mov	DWORD PTR _param$[ebp], 230032		; 00038290H

; 1103 : 	int team = Get_Int_Parameter("Team");

	push	OFFSET ??_C@_04GBPANCCF@Team?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _team$[ebp], eax

; 1104 : 	Send_Custom_To_Team_Buildings(team,obj,type,param,1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Buildings@@YAXHPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Buildings
	add	esp, 20					; 00000014H

; 1105 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset1"), obj, type, param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07MLBKNGKL@Preset1?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1106 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset2"), obj, type, param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07OADHIFGI@Preset2?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1107 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset3"), obj, type, param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07PJCMLECJ@Preset3?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1108 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset4"), obj, type, param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07LGGNCCOO@Preset4?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1109 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset5"), obj, type, param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07KPHGBDKP@Preset5?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1110 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset6"), obj, type, param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07IEFLEAGM@Preset6?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1111 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset7"), obj, type, param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07JNEAHBCN@Preset7?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1112 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset8"), obj, type, param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07BKNIGNOC@Preset8?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1113 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Conyard_Controller_Improved_2@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Conyard_Controller_Improved_2::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Conyard_Controller_Improved@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Conyard_Controller_Improved@@UAEPAXI@Z PROC	; RA_Conyard_Controller_Improved::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Conyard_Controller_Improved@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Conyard_Controller_Improved@@UAEPAXI@Z ENDP	; RA_Conyard_Controller_Improved::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Conyard_Controller_Improved@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Conyard_Controller_Improved@@UAE@XZ PROC		; RA_Conyard_Controller_Improved::~RA_Conyard_Controller_Improved, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Conyard_Controller_Improved@@UAE@XZ ENDP		; RA_Conyard_Controller_Improved::~RA_Conyard_Controller_Improved
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Conyard_Controller_Improved@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Conyard_Controller_Improved@@QAE@XZ PROC		; RA_Conyard_Controller_Improved::RA_Conyard_Controller_Improved, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Conyard_Controller_Improved@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Conyard_Controller_Improved@@QAE@XZ ENDP		; RA_Conyard_Controller_Improved::RA_Conyard_Controller_Improved
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Conyard_Controller_Improved@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_team$1 = -28						; size = 4
__param$2 = -24						; size = 4
__message$3 = -20					; size = 4
_team$4 = -16						; size = 4
__param$5 = -12						; size = 4
__message$6 = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Conyard_Controller_Improved@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Conyard_Controller_Improved::Custom, COMDAT
; _this$ = ecx

; 1067 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1068 : 	if ((type == 3000) && (!Is_Building_Dead(obj)))

	cmp	DWORD PTR _type$[ebp], 3000		; 00000bb8H
	jne	$LN1@Custom
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Is_Building_Dead@@YA_NPAVScriptableGameObj@@@Z ; Is_Building_Dead
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN1@Custom

; 1069 : 	{
; 1070 : 		if (param == 230032)

	cmp	DWORD PTR _param$[ebp], 230032		; 00038290H
	jne	$LN3@Custom

; 1071 : 		{
; 1072 : 			int _message = 3000;

	mov	DWORD PTR __message$6[ebp], 3000	; 00000bb8H

; 1073 : 			int _param = 230032;

	mov	DWORD PTR __param$5[ebp], 230032	; 00038290H

; 1074 : 			int team = Get_Int_Parameter("Team");

	push	OFFSET ??_C@_04GBPANCCF@Team?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _team$4[ebp], eax

; 1075 : 			Send_Custom_To_Team_Buildings(team,obj,_message,_param,1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$5[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$6[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR _team$4[ebp]
	push	eax
	call	?Send_Custom_To_Team_Buildings@@YAXHPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Buildings
	add	esp, 20					; 00000014H

; 1076 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset1"), obj, _message, _param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$5[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$6[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07MLBKNGKL@Preset1?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$4[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1077 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset2"), obj, _message, _param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$5[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$6[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07OADHIFGI@Preset2?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$4[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1078 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset3"), obj, _message, _param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$5[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$6[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07PJCMLECJ@Preset3?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$4[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1079 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset4"), obj, _message, _param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$5[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$6[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07LGGNCCOO@Preset4?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$4[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1080 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset5"), obj, _message, _param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$5[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$6[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07KPHGBDKP@Preset5?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$4[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H
	jmp	$LN1@Custom
$LN3@Custom:

; 1081 : 		}
; 1082 : 		else if (param == 320023)

	cmp	DWORD PTR _param$[ebp], 320023		; 0004e217H
	jne	$LN1@Custom

; 1083 : 		{
; 1084 : 			int _message = 3000;

	mov	DWORD PTR __message$3[ebp], 3000	; 00000bb8H

; 1085 : 			int _param = 320023;

	mov	DWORD PTR __param$2[ebp], 320023	; 0004e217H

; 1086 : 			int team = Get_Int_Parameter("Team");

	push	OFFSET ??_C@_04GBPANCCF@Team?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _team$1[ebp], eax

; 1087 : 			Send_Custom_To_Team_Buildings(team,obj,_message,_param,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR _team$1[ebp]
	push	eax
	call	?Send_Custom_To_Team_Buildings@@YAXHPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Buildings
	add	esp, 20					; 00000014H

; 1088 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset1"), obj, _message, _param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07MLBKNGKL@Preset1?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$1[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1089 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset2"), obj, _message, _param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07OADHIFGI@Preset2?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$1[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1090 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset3"), obj, _message, _param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07PJCMLECJ@Preset3?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$1[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1091 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset4"), obj, _message, _param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07LGGNCCOO@Preset4?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$1[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1092 : 			Send_Custom_To_Team_Preset(team, Get_Parameter("Preset5"), obj, _message, _param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR __param$2[ebp]
	push	eax
	mov	ecx, DWORD PTR __message$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07KPHGBDKP@Preset5?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$1[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H
$LN1@Custom:

; 1093 : 		}
; 1094 : 	}
; 1095 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Conyard_Controller_Improved@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Conyard_Controller_Improved::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Killed@RA_Conyard_Controller_Improved@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_team$ = -16						; size = 4
_param$ = -12						; size = 4
_type$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_killer$ = 12						; size = 4
?Killed@RA_Conyard_Controller_Improved@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Conyard_Controller_Improved::Killed, COMDAT
; _this$ = ecx

; 1054 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1055 : 	int type = 3000;

	mov	DWORD PTR _type$[ebp], 3000		; 00000bb8H

; 1056 : 	int param = 320023;

	mov	DWORD PTR _param$[ebp], 320023		; 0004e217H

; 1057 : 	int team = Get_Int_Parameter("Team");

	push	OFFSET ??_C@_04GBPANCCF@Team?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _team$[ebp], eax

; 1058 : 	Send_Custom_To_Team_Buildings(team,obj,type,param,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Buildings@@YAXHPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Buildings
	add	esp, 20					; 00000014H

; 1059 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset1"), obj, type, param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07MLBKNGKL@Preset1?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1060 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset2"), obj, type, param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07OADHIFGI@Preset2?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1061 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset3"), obj, type, param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07PJCMLECJ@Preset3?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1062 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset4"), obj, type, param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07LGGNCCOO@Preset4?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1063 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset5"), obj, type, param, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07KPHGBDKP@Preset5?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1064 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@RA_Conyard_Controller_Improved@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Conyard_Controller_Improved::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Conyard_Controller_Improved@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_team$ = -16						; size = 4
_param$ = -12						; size = 4
_type$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Conyard_Controller_Improved@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Conyard_Controller_Improved::Created, COMDAT
; _this$ = ecx

; 1041 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1042 : 	int type = 3000;

	mov	DWORD PTR _type$[ebp], 3000		; 00000bb8H

; 1043 : 	int param = 230032;

	mov	DWORD PTR _param$[ebp], 230032		; 00038290H

; 1044 : 	int team = Get_Int_Parameter("Team");

	push	OFFSET ??_C@_04GBPANCCF@Team?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _team$[ebp], eax

; 1045 : 	Send_Custom_To_Team_Buildings(team,obj,type,param,1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Buildings@@YAXHPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Buildings
	add	esp, 20					; 00000014H

; 1046 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset1"), obj, type, param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07MLBKNGKL@Preset1?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1047 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset2"), obj, type, param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07OADHIFGI@Preset2?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1048 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset3"), obj, type, param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07PJCMLECJ@Preset3?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1049 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset4"), obj, type, param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07LGGNCCOO@Preset4?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1050 : 	Send_Custom_To_Team_Preset(team, Get_Parameter("Preset5"), obj, type, param, 1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	push	OFFSET ??_C@_07KPHGBDKP@Preset5?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _team$[ebp]
	push	eax
	call	?Send_Custom_To_Team_Preset@@YAXHPBDPAVScriptableGameObj@@HHM@Z ; Send_Custom_To_Team_Preset
	add	esp, 24					; 00000018H

; 1051 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Conyard_Controller_Improved@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Conyard_Controller_Improved::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_MAD_Tank_Improved@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_MAD_Tank_Improved@@UAEPAXI@Z PROC		; RA_MAD_Tank_Improved::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_MAD_Tank_Improved@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_MAD_Tank_Improved@@UAEPAXI@Z ENDP		; RA_MAD_Tank_Improved::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_MAD_Tank_Improved@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_MAD_Tank_Improved@@UAE@XZ PROC			; RA_MAD_Tank_Improved::~RA_MAD_Tank_Improved, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_MAD_Tank_Improved@@UAE@XZ ENDP			; RA_MAD_Tank_Improved::~RA_MAD_Tank_Improved
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_MAD_Tank_Improved@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_MAD_Tank_Improved@@QAE@XZ PROC			; RA_MAD_Tank_Improved::RA_MAD_Tank_Improved, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_MAD_Tank_Improved@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_MAD_Tank_Improved@@QAE@XZ ENDP			; RA_MAD_Tank_Improved::RA_MAD_Tank_Improved
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_MAD_Tank_Improved@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_MAD_Tank_Improved@@UAEXXZ PROC ; RA_MAD_Tank_Improved::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 1031 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1032 : 	Auto_Save_Variable(&driverID,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 1033 : 	Auto_Save_Variable(&deployed,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 1034 : 	Auto_Save_Variable(&newobjID,4,3);

	push	3
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 1035 : 	Auto_Save_Variable(&ownerID,4,4);

	push	4
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 1036 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_MAD_Tank_Improved@@UAEXXZ ENDP ; RA_MAD_Tank_Improved::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Destroyed@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_MAD_Tank_Improved::Destroyed, COMDAT
; _this$ = ecx

; 1022 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1023 : 	//MAD Tank dead, get rid of piston object if it exists
; 1024 : 	if (newobjID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN2@Destroyed

; 1025 : 	{
; 1026 : 		Commands->Destroy_Object(Commands->Find_Object(newobjID));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN2@Destroyed:

; 1027 : 	}
; 1028 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Destroyed@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_MAD_Tank_Improved::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Animation_Complete@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@PBD@Z
_TEXT	SEGMENT
$T1 = -128						; size = 12
$T2 = -112						; size = 12
$T3 = -96						; size = 12
_range$4 = -20						; size = 4
_warhead$5 = -16					; size = 4
_percentage$6 = -12					; size = 4
_SonicBox$7 = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_animation_name$ = 12					; size = 4
?Animation_Complete@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@PBD@Z PROC ; RA_MAD_Tank_Improved::Animation_Complete, COMDAT
; _this$ = ecx

; 998  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 999  : 	if (!_stricmp(animation_name, Get_Parameter("Deployed_Animation"))) //Is this the right animation?

	push	OFFSET ??_C@_0BD@IANHLCC@Deployed_Animation?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _animation_name$[ebp]
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN2@Animation_

; 1000 : 	{
; 1001 : 		if (Get_GameObj(ownerID)) //sonic pulse only if owner still valid

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	test	eax, eax
	je	$LN1@Animation_

; 1002 : 		{
; 1003 : 			//Create/Kill Object for Sonic Pulse, this is meant for visual explosion effect only
; 1004 : 			GameObject *SonicBox = Commands->Create_Object(Get_Parameter("Sonic_Preset"), Commands->Get_Position(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0N@JAJNNIDP@Sonic_Preset?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _SonicBox$7[ebp], eax

; 1005 : 			Commands->Set_Player_Type(SonicBox, 2); //just in case

	push	2
	mov	eax, DWORD PTR _SonicBox$7[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+252]
	call	edx
	add	esp, 8

; 1006 : 			Commands->Apply_Damage(SonicBox,100,"BlamoKiller",Get_GameObj(ownerID));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _SonicBox$7[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+616]
	call	ecx
	add	esp, 16					; 00000010H

; 1007 : 			//Setup for building damage
; 1008 : 			float percentage = Get_Float_Parameter("Percentage");

	push	OFFSET ??_C@_0L@GKJDIJEO@Percentage?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _percentage$6[ebp]

; 1009 : 			const char *warhead = Get_Parameter("Warhead");

	push	OFFSET ??_C@_07EDCLAFNL@Warhead?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	mov	DWORD PTR _warhead$5[ebp], eax

; 1010 : 			float range = Get_Float_Parameter("DamageRadius");

	push	OFFSET ??_C@_0N@DAHCFJAP@DamageRadius?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _range$4[ebp]

; 1011 : 			//Time to break a few windows
; 1012 : 			Ranged_Percentage_Damage_To_Buildings(percentage, warhead, Commands->Get_Position(obj), range, Get_GameObj(ownerID));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _range$4[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+64]
	call	edx
	add	esp, -4					; fffffffcH
	mov	ecx, esp
	push	eax
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _warhead$5[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _percentage$6[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Ranged_Percentage_Damage_To_Buildings@@YAXMPBDVVector3@@MPAVScriptableGameObj@@@Z ; Ranged_Percentage_Damage_To_Buildings
	add	esp, 28					; 0000001cH

; 1013 : 			Ranged_Percentage_Damage_To_Vehicles(percentage, warhead, Commands->Get_Position(obj), range, Get_GameObj(ownerID)); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _range$4[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+64]
	call	edx
	add	esp, -4					; fffffffcH
	mov	ecx, esp
	push	eax
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _warhead$5[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _percentage$6[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Ranged_Percentage_Damage_To_Vehicles@@YAXMPBDVVector3@@MPAVScriptableGameObj@@@Z ; Ranged_Percentage_Damage_To_Vehicles
	add	esp, 28					; 0000001cH
$LN1@Animation_:

; 1014 : 		}
; 1015 : 		//Kill MAD Tank 
; 1016 : 		//'0' Damager used so owner won't get points for tank itself
; 1017 : 		Commands->Apply_Damage(obj,100,"BlamoKiller",0);

	push	0
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H
$LN2@Animation_:

; 1018 : 	}
; 1019 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Animation_Complete@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@PBD@Z ENDP ; RA_MAD_Tank_Improved::Animation_Complete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Damaged@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
_newobj$1 = -12						; size = 4
_testID$2 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_amount$ = 16						; size = 4
?Damaged@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@0M@Z PROC ; RA_MAD_Tank_Improved::Damaged, COMDAT
; _this$ = ecx

; 968  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 969  : 	if (!deployed) //If already deployed, don't do anything

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	jne	$LN1@Damaged

; 970  : 	{
; 971  : 		if (driverID) //Make sure there's a driver

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	$LN1@Damaged

; 972  : 		{
; 973  : 			int testID = Commands->Get_ID(damager); //Get ID to compare

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _testID$2[ebp], eax

; 974  : 			if (driverID == testID)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _testID$2[ebp]
	jne	$LN1@Damaged

; 975  : 			{
; 976  : 				//Create Object to jam MAD Tank in place
; 977  : 				GameObject *newobj = Commands->Create_Object_At_Bone(obj, "Invisible_Object", Get_Parameter("Bone"));

	push	OFFSET ??_C@_04CCGIJNFG@Bone?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	push	OFFSET ??_C@_0BB@NHJNEILC@Invisible_Object?$AA@
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+104]
	call	edx
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _newobj$1[ebp], eax

; 978  : 				Commands->Set_Model(newobj, Get_Parameter("Attach_Model"));

	push	OFFSET ??_C@_0N@OPMLCOMM@Attach_Model?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _newobj$1[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+160]
	call	edx
	add	esp, 8

; 979  : 				Commands->Attach_To_Object_Bone(newobj, obj, Get_Parameter("Bone"));

	push	OFFSET ??_C@_04CCGIJNFG@Bone?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newobj$1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 980  : 				newobjID = Commands->Get_ID(newobj);

	mov	eax, DWORD PTR _newobj$1[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], eax

; 981  : 				//Animate MAD Tank, record player ID of owner
; 982  : 				Commands->Create_2D_Sound(Get_Parameter("Announcement"));

	push	OFFSET ??_C@_0N@IKMPLOBB@Announcement?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+176]
	call	ecx
	add	esp, 4

; 983  : 				Commands->Set_Animation(obj, Get_Parameter("Deployed_Animation"), false, 0, 0, -1, false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	OFFSET ??_C@_0BD@IANHLCC@Deployed_Animation?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+164]
	call	edx
	add	esp, 28					; 0000001cH

; 984  : 				ownerID = Get_Player_ID(damager);

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], eax

; 985  : 				//New stuff added for v0.9935
; 986  : 				Force_Occupants_Exit(obj); //kick driver out

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	?Force_Occupants_Exit@@YAXPAVScriptableGameObj@@@Z ; Force_Occupants_Exit
	add	esp, 4

; 987  : 				Commands->Enable_HUD_Pokable_Indicator(obj, false);	//this was to correct some issue

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+780]
	call	edx
	add	esp, 8

; 988  : 				Commands->Enable_Vehicle_Transitions(obj, false); //no getting back in

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+728]
	call	edx
	add	esp, 8

; 989  : 				Commands->Set_Player_Type(obj, Commands->Get_Player_Type(damager)); //set team

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+252]
	call	edx
	add	esp, 8

; 990  : 				//End New Stuff
; 991  : 				deployed = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 1
$LN1@Damaged:

; 992  : 			}
; 993  : 		}
; 994  : 	}
; 995  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@0M@Z ENDP ; RA_MAD_Tank_Improved::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_testID$1 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_MAD_Tank_Improved::Custom, COMDAT
; _this$ = ecx

; 940  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 941  : 	if (type == CUSTOM_EVENT_VEHICLE_DRIVER)

	cmp	DWORD PTR _type$[ebp], 1000000037	; 3b9aca25H
	jne	SHORT $LN5@Custom

; 942  : 	{
; 943  : 		if (driverID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN6@Custom

; 944  : 		{
; 945  : 			Commands->Send_Custom_Event(obj,sender,CUSTOM_EVENT_VHEICLE_DRIVER_ID,driverID,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	push	1000000038				; 3b9aca26H
	mov	edx, DWORD PTR _sender$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+140]
	call	edx
	add	esp, 20					; 00000014H

; 946  : 		}
; 947  : 		else

	jmp	SHORT $LN5@Custom
$LN6@Custom:

; 948  : 		{
; 949  : 			Commands->Send_Custom_Event(obj,sender,CUSTOM_EVENT_VHEICLE_DRIVER_ID,0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	1000000038				; 3b9aca26H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN5@Custom:

; 950  : 		}
; 951  : 	}
; 952  : 	if (type == CUSTOM_EVENT_VEHICLE_ENTERED)

	cmp	DWORD PTR _type$[ebp], 1000000028	; 3b9aca1cH
	jne	SHORT $LN4@Custom

; 953  : 	{
; 954  : 		driverID = Commands->Get_ID(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
	jmp	SHORT $LN1@Custom
$LN4@Custom:

; 955  : 	}
; 956  : 	else if (type == CUSTOM_EVENT_VEHICLE_EXITED)

	cmp	DWORD PTR _type$[ebp], 1000000029	; 3b9aca1dH
	jne	SHORT $LN1@Custom

; 957  : 	{
; 958  : 		int testID;
; 959  : 		testID = Commands->Get_ID(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _testID$1[ebp], eax

; 960  : 		if (driverID == testID) //is it the driver that got out?

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _testID$1[ebp]
	jne	SHORT $LN1@Custom

; 961  : 		{
; 962  : 			driverID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN1@Custom:

; 963  : 		}
; 964  : 	}
; 965  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_MAD_Tank_Improved::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_MAD_Tank_Improved::Created, COMDAT
; _this$ = ecx

; 931  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 932  : 	//Initializing variables
; 933  : 	driverID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 934  : 	deployed = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 935  : 	newobjID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0

; 936  : 	ownerID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0

; 937  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_MAD_Tank_Improved@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_MAD_Tank_Improved::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_CTF_Zone@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_CTF_Zone@@UAEPAXI@Z PROC				; RA_CTF_Zone::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_CTF_Zone@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_CTF_Zone@@UAEPAXI@Z ENDP				; RA_CTF_Zone::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_CTF_Zone@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_CTF_Zone@@UAE@XZ PROC				; RA_CTF_Zone::~RA_CTF_Zone, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_CTF_Zone@@UAE@XZ ENDP				; RA_CTF_Zone::~RA_CTF_Zone
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_CTF_Zone@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_CTF_Zone@@QAE@XZ PROC				; RA_CTF_Zone::RA_CTF_Zone, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_CTF_Zone@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_CTF_Zone@@QAE@XZ ENDP				; RA_CTF_Zone::RA_CTF_Zone
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_CTF_Zone@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_CTF_Zone@@UAEXXZ PROC	; RA_CTF_Zone::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 856  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 857  : 	Auto_Save_Variable(&GotFlag,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 858  : 	Auto_Save_Variable(&NumCaptured,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 859  : 	Auto_Save_Variable(&DecorFlag,4,3);

	push	3
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 860  : 	Auto_Save_Variable(&DecorFlagPresent,4,4);

	push	4
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 861  : 	Auto_Save_Variable(&FlagId,4,5);

	push	5
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 862  : 	Auto_Save_Variable(&PlayerId,4,6);

	push	6
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 863  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_CTF_Zone@@UAEXXZ ENDP	; RA_CTF_Zone::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
$T1 = -96						; size = 12
_newFlag$ = -20						; size = 4
_newFlagPos$ = -16					; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@@Z PROC	; RA_CTF_Zone::Created, COMDAT
; _this$ = ecx

; 819  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 820  : 	GotFlag = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 821  : 	NumCaptured = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 822  : 	PlayerId = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0

; 823  : 	FlagId = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0

; 824  : 	Vector3 newFlagPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _newFlagPos$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 825  : 	GameObject * newFlag = Commands->Create_Object(Get_Parameter("Flag_Preset_Name"), newFlagPos);

	lea	eax, DWORD PTR _newFlagPos$[ebp]
	push	eax
	push	OFFSET ??_C@_0BB@ELNDALFH@Flag_Preset_Name?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _newFlag$[ebp], eax

; 826  : 	DecorFlag = Commands->Get_ID(newFlag);

	mov	eax, DWORD PTR _newFlag$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], eax

; 827  : 	DecorFlagPresent = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 0

; 828  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@@Z ENDP	; RA_CTF_Zone::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
$T1 = -124						; size = 12
$T2 = -112						; size = 12
_flagObj$3 = -36					; size = 4
_dPos$4 = -32						; size = 4
_pPos$5 = -28						; size = 12
_fPos$6 = -16						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_CTF_Zone::Timer_Expired, COMDAT
; _this$ = ecx

; 906  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 907  : 	if (GotFlag)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	$LN2@Timer_Expi

; 908  : 	{
; 909  : 		Vector3 fPos = Commands->Get_Position(Commands->Find_Object(FlagId));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _fPos$6[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 910  : 		Vector3 pPos = Commands->Get_Position(Commands->Find_Object(PlayerId));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pPos$5[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 911  : 		float dPos = Commands->Get_Distance(fPos, pPos);

	lea	eax, DWORD PTR _pPos$5[ebp]
	push	eax
	lea	ecx, DWORD PTR _fPos$6[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR _dPos$4[ebp]

; 912  : 		if (dPos > 2)

	movss	xmm0, DWORD PTR _dPos$4[ebp]
	comiss	xmm0, DWORD PTR __real@40000000
	jbe	SHORT $LN1@Timer_Expi

; 913  : 		{
; 914  : 			GameObject * flagObj = Commands->Find_Object(FlagId);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	mov	DWORD PTR _flagObj$3[ebp], eax

; 915  : 			Commands->Destroy_Object(flagObj);

	mov	eax, DWORD PTR _flagObj$3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4

; 916  : 			Commands->Send_Custom_Event(obj, obj, 10005, 0, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	10005					; 00002715H
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 917  : 			FlagId = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0

; 918  : 			PlayerId = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0

; 919  : 			GotFlag = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0
$LN1@Timer_Expi:

; 920  : 		}
; 921  : 		Commands->Destroy_Object(Commands->Find_Object(DecorFlag));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4

; 922  : 		DecorFlagPresent = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 0

; 923  : 		Commands->Start_Timer(obj, this, 10, 411);

	push	411					; 0000019bH
	push	ecx
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN2@Timer_Expi:

; 924  : 	}
; 925  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_CTF_Zone::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
$T1 = -108						; size = 12
$T2 = -96						; size = 12
_newFlagPos$ = -20					; size = 12
_newFlag$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_CTF_Zone::Custom, COMDAT
; _this$ = ecx

; 866  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 867  : 	GameObject * newFlag;
; 868  : 	Vector3 newFlagPos;

	lea	ecx, DWORD PTR _newFlagPos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 869  : 	if ((type == 10002) && (GotFlag))

	cmp	DWORD PTR _type$[ebp], 10002		; 00002712H
	jne	$LN8@Custom
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	$LN8@Custom

; 870  : 	{
; 871  : 		GotFlag = false;													//tell zone that flag can be recaptured

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 872  : 		Commands->Send_Custom_Event(obj, sender, 10002, 1, 0);				//tell player script "kill your flag, it is now captured"

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	1
	push	10002					; 00002712H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 873  : 		NumCaptured++;														//increment the # of captures

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], ecx

; 874  : 		newFlagPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _newFlagPos$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 875  : 		newFlag = Commands->Create_Object(Get_Parameter("Flag_Preset_Name"), newFlagPos);

	lea	eax, DWORD PTR _newFlagPos$[ebp]
	push	eax
	push	OFFSET ??_C@_0BB@ELNDALFH@Flag_Preset_Name?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _newFlag$[ebp], eax

; 876  : 		DecorFlag = Commands->Get_ID(newFlag);

	mov	eax, DWORD PTR _newFlag$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], eax

; 877  : 		Commands->Give_Points(sender, 250, false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@437a0000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+636]
	call	edx
	add	esp, 12					; 0000000cH

; 878  : 		if (NumCaptured == Get_Int_Parameter("Max_Capture"))								//check to see if the max captures have been met

	push	OFFSET ??_C@_0M@GNHEDHFO@Max_Capture?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+28], eax
	jne	SHORT $LN4@Custom

; 879  : 		{
; 880  : 			if (!Get_Int_Parameter("Team_ID")) //Is this a Soviet Win?

	push	OFFSET ??_C@_07EIAFPCFB@Team_ID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	jne	SHORT $LN6@Custom

; 881  : 			{
; 882  : 				//Then kill all Allied Buildings
; 883  : 				Kill_All_Buildings_By_Team(1);

	push	1
	call	?Kill_All_Buildings_By_Team@@YAXH@Z	; Kill_All_Buildings_By_Team
	add	esp, 4
	jmp	SHORT $LN4@Custom
$LN6@Custom:

; 884  : 			}
; 885  : 			else if (Get_Int_Parameter("Team_ID") == 1) //Is this an Allied Win?

	push	OFFSET ??_C@_07EIAFPCFB@Team_ID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	eax, 1
	jne	SHORT $LN4@Custom

; 886  : 			{
; 887  : 				//Then kill all Allied Buildings
; 888  : 				Kill_All_Buildings_By_Team(0);

	push	0
	call	?Kill_All_Buildings_By_Team@@YAXH@Z	; Kill_All_Buildings_By_Team
	add	esp, 4
$LN4@Custom:

; 889  : 			}
; 890  : 		}
; 891  : 	}

	jmp	$LN1@Custom
$LN8@Custom:

; 892  : 	else if ((type == 10005) && (GotFlag))

	cmp	DWORD PTR _type$[ebp], 10005		; 00002715H
	jne	SHORT $LN1@Custom
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	SHORT $LN1@Custom

; 893  : 	{
; 894  : 		GotFlag = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 895  : 		if (!DecorFlagPresent)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+48]
	test	ecx, ecx
	jne	SHORT $LN1@Custom

; 896  : 		{
; 897  : 			newFlagPos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _newFlagPos$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 898  : 			newFlag = Commands->Create_Object(Get_Parameter("Flag_Preset_Name"),newFlagPos);

	lea	eax, DWORD PTR _newFlagPos$[ebp]
	push	eax
	push	OFFSET ??_C@_0BB@ELNDALFH@Flag_Preset_Name?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _newFlag$[ebp], eax

; 899  : 			DecorFlag = Commands->Get_ID(newFlag);

	mov	eax, DWORD PTR _newFlag$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], eax

; 900  : 			DecorFlagPresent=true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 1
$LN1@Custom:

; 901  : 		}
; 902  : 	}
; 903  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_CTF_Zone::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Entered@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_objID$1 = -12						; size = 4
_tmpObj$2 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_enterer$ = 12						; size = 4
?Entered@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_CTF_Zone::Entered, COMDAT
; _this$ = ecx

; 831  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 832  : 	if (Get_Int_Parameter("Team_ID") != Commands->Get_Player_Type(enterer))

	push	OFFSET ??_C@_07EIAFPCFB@Team_ID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	esi, eax
	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	cmp	esi, eax
	je	SHORT $LN3@Entered

; 833  : 	{
; 834  : 		Commands->Send_Custom_Event(obj, enterer, 10004, 0, 0);				//ask player if it has the flag

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	10004					; 00002714H
	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
	jmp	$LN1@Entered
$LN3@Entered:

; 835  : 	}
; 836  : 	else if (!GotFlag)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	jne	$LN1@Entered

; 837  : 	{
; 838  : 		Commands->Attach_Script(enterer, "TDA_CTF_Attached", "0");			//load up the player script

	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	push	OFFSET ??_C@_0BB@OLPGPHAI@TDA_CTF_Attached?$AA@
	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 839  : 		GameObject * tmpObj = Commands->Create_Object_At_Bone(enterer, Get_Parameter("Flag_Preset_Name"), "LHAND"); //create the flag object

	push	OFFSET ??_C@_05JDJNJCFA@LHAND?$AA@
	push	OFFSET ??_C@_0BB@ELNDALFH@Flag_Preset_Name?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+104]
	call	edx
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _tmpObj$2[ebp], eax

; 840  : 		int objID = Commands->Get_ID(tmpObj);								//get the new flags ID

	mov	eax, DWORD PTR _tmpObj$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _objID$1[ebp], eax

; 841  : 		FlagId = objID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _objID$1[ebp]
	mov	DWORD PTR [eax+40], ecx

; 842  : 		Commands->Send_Custom_Event(obj, enterer, 10003, objID, 0);			//tell the player script what the flag id is

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _objID$1[ebp]
	push	eax
	push	10003					; 00002713H
	mov	ecx, DWORD PTR _enterer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H

; 843  : 		Commands->Attach_To_Object_Bone(tmpObj, enterer, "LHAND");			//attach flag to player

	push	OFFSET ??_C@_05JDJNJCFA@LHAND?$AA@
	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tmpObj$2[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+572]
	call	eax
	add	esp, 12					; 0000000cH

; 844  : 		objID = Commands->Get_ID(obj);										//get the current zones ID

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _objID$1[ebp], eax

; 845  : 		Commands->Send_Custom_Event(obj, enterer, 10005, objID, 0);			//let the player know the ID of zone

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _objID$1[ebp]
	push	eax
	push	10005					; 00002715H
	mov	ecx, DWORD PTR _enterer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H

; 846  : 		PlayerId = Commands->Get_ID(enterer);

	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+44], eax

; 847  : 		GotFlag = true;														//let zone know NOT to create a new flag

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 1

; 848  : 		Commands->Start_Timer(obj, this, 10, 411);							//needed to add this for the suicide and lag flags

	push	411					; 0000019bH
	push	ecx
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 849  : 		Commands->Give_Points(enterer, 75, false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@42960000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+636]
	call	edx
	add	esp, 12					; 0000000cH

; 850  : 		Commands->Destroy_Object(Commands->Find_Object(DecorFlag));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4

; 851  : 		DecorFlagPresent = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 0
$LN1@Entered:

; 852  : 	}
; 853  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Entered@RA_CTF_Zone@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_CTF_Zone::Entered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Demolition_Truck_Improved@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Demolition_Truck_Improved@@UAEPAXI@Z PROC	; RA_Demolition_Truck_Improved::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Demolition_Truck_Improved@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Demolition_Truck_Improved@@UAEPAXI@Z ENDP	; RA_Demolition_Truck_Improved::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Demolition_Truck_Improved@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Demolition_Truck_Improved@@UAE@XZ PROC		; RA_Demolition_Truck_Improved::~RA_Demolition_Truck_Improved, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Demolition_Truck_Improved@@UAE@XZ ENDP		; RA_Demolition_Truck_Improved::~RA_Demolition_Truck_Improved
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Demolition_Truck_Improved@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Demolition_Truck_Improved@@QAE@XZ PROC		; RA_Demolition_Truck_Improved::RA_Demolition_Truck_Improved, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Demolition_Truck_Improved@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Demolition_Truck_Improved@@QAE@XZ ENDP		; RA_Demolition_Truck_Improved::RA_Demolition_Truck_Improved
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Demolition_Truck_Improved@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Demolition_Truck_Improved@@UAEXXZ PROC ; RA_Demolition_Truck_Improved::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 810  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 811  : 	Auto_Save_Variable(&driverID,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 812  : 	Auto_Save_Variable(&triggered,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 813  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Demolition_Truck_Improved@@UAEXXZ ENDP ; RA_Demolition_Truck_Improved::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Killed@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
$T1 = -144						; size = 12
$T2 = -128						; size = 12
$T3 = -112						; size = 12
_radius$ = -36						; size = 4
_damage$ = -32						; size = 4
_warhead$ = -28						; size = 4
_explosion$ = -24					; size = 4
_testID$ = -20						; size = 4
_pos$ = -16						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_killer$ = 12						; size = 4
?Killed@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Demolition_Truck_Improved::Killed, COMDAT
; _this$ = ecx

; 784  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 144				; 00000090H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 785  : 	Vector3 pos;

	lea	ecx, DWORD PTR _pos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 786  : 	pos = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 787  : 	int testID;
; 788  : 	testID = Commands->Get_ID(killer);

	mov	eax, DWORD PTR _killer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _testID$[ebp], eax

; 789  : 	const char *explosion = Get_Parameter("Explosion");

	push	OFFSET ??_C@_09HGNANIIM@Explosion?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	mov	DWORD PTR _explosion$[ebp], eax

; 790  : 	const char *warhead = Get_Parameter("Warhead");

	push	OFFSET ??_C@_07EDCLAFNL@Warhead?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	mov	DWORD PTR _warhead$[ebp], eax

; 791  : 	float damage = Get_Float_Parameter("DamageStrength");

	push	OFFSET ??_C@_0P@PDFEMABG@DamageStrength?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _damage$[ebp]

; 792  : 	float radius = Get_Float_Parameter("DamageRadius");

	push	OFFSET ??_C@_0N@DAHCFJAP@DamageRadius?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _radius$[ebp]

; 793  : 	if (testID) //is there a real killer?

	cmp	DWORD PTR _testID$[ebp], 0
	je	SHORT $LN4@Killed

; 794  : 	{
; 795  : 		Commands->Create_Explosion(explosion, pos, killer);

	mov	eax, DWORD PTR _killer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _explosion$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+416]
	call	ecx
	add	esp, 12					; 0000000cH

; 796  : 		Ranged_Scale_Damage_To_Buildings(damage, warhead,Commands->Get_Position(obj),radius,killer);

	mov	eax, DWORD PTR _killer$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _radius$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, -4					; fffffffcH
	mov	ecx, esp
	push	eax
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	edx, DWORD PTR _warhead$[ebp]
	push	edx
	push	ecx
	movss	xmm0, DWORD PTR _damage$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Ranged_Scale_Damage_To_Buildings@@YAXMPBDVVector3@@MPAVScriptableGameObj@@@Z ; Ranged_Scale_Damage_To_Buildings
	add	esp, 28					; 0000001cH
	jmp	$LN2@Killed
$LN4@Killed:

; 797  : 	}
; 798  : 	else if (triggered)//then was it the driver?

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	$LN2@Killed

; 799  : 	{
; 800  : 		Commands->Create_Explosion(explosion, pos, Commands->Find_Object(driverID));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _explosion$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+416]
	call	ecx
	add	esp, 12					; 0000000cH

; 801  : 		Ranged_Scale_Damage_To_Buildings(damage,warhead,Commands->Get_Position(obj),radius,Commands->Find_Object(driverID));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _radius$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, -4					; fffffffcH
	mov	ecx, esp
	push	eax
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	edx, DWORD PTR _warhead$[ebp]
	push	edx
	push	ecx
	movss	xmm0, DWORD PTR _damage$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Ranged_Scale_Damage_To_Buildings@@YAXMPBDVVector3@@MPAVScriptableGameObj@@@Z ; Ranged_Scale_Damage_To_Buildings
	add	esp, 28					; 0000001cH
$LN2@Killed:

; 802  : 	}
; 803  : 	if (driverID)//If there's a driver, kill him

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN1@Killed

; 804  : 	{
; 805  : 		Commands->Attach_Script(Commands->Find_Object(driverID),"RA_DriverDeath", "0");

	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	push	OFFSET ??_C@_0P@JMLOMBPP@RA_DriverDeath?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH
$LN1@Killed:

; 806  : 	}
; 807  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Demolition_Truck_Improved::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Damaged@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
_warhead$1 = -12					; size = 4
_testID$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_amount$ = 16						; size = 4
?Damaged@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@0M@Z PROC ; RA_Demolition_Truck_Improved::Damaged, COMDAT
; _this$ = ecx

; 767  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 768  : 	if (!driverID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN2@Damaged

; 769  : 	{
; 770  : 		return; //if there's no driver, don't bother

	jmp	SHORT $LN3@Damaged
$LN2@Damaged:

; 771  : 	}
; 772  : 	int testID;
; 773  : 	testID = Commands->Get_ID(damager);

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _testID$[ebp], eax

; 774  : 	if (driverID == testID) //did the driver shoot me?

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _testID$[ebp]
	jne	SHORT $LN1@Damaged

; 775  : 	{
; 776  : 		const char *warhead = "Death";

	mov	DWORD PTR _warhead$1[ebp], OFFSET ??_C@_05PGGAFPFO@Death?$AA@

; 777  : 		//I can't take it any more! *bang*
; 778  : 		Commands->Apply_Damage(obj, 100.00, warhead, 0);

	push	0
	mov	eax, DWORD PTR _warhead$1[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+616]
	call	eax
	add	esp, 16					; 00000010H

; 779  : 		triggered = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 1
$LN1@Damaged:
$LN3@Damaged:

; 780  : 	}
; 781  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@0M@Z ENDP ; RA_Demolition_Truck_Improved::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_testID$1 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Demolition_Truck_Improved::Custom, COMDAT
; _this$ = ecx

; 734  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 735  : 	if (type == CUSTOM_EVENT_VEHICLE_DRIVER)

	cmp	DWORD PTR _type$[ebp], 1000000037	; 3b9aca25H
	jne	SHORT $LN6@Custom

; 736  : 	{
; 737  : 		if (driverID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN7@Custom

; 738  : 		{
; 739  : 			Commands->Send_Custom_Event(obj,sender,CUSTOM_EVENT_VHEICLE_DRIVER_ID,driverID,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	push	1000000038				; 3b9aca26H
	mov	edx, DWORD PTR _sender$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+140]
	call	edx
	add	esp, 20					; 00000014H

; 740  : 		}
; 741  : 		else

	jmp	SHORT $LN6@Custom
$LN7@Custom:

; 742  : 		{
; 743  : 			Commands->Send_Custom_Event(obj,sender,CUSTOM_EVENT_VHEICLE_DRIVER_ID,0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	1000000038				; 3b9aca26H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN6@Custom:

; 744  : 		}
; 745  : 	}
; 746  : 	//checks when someone gets in or out and records ID
; 747  : 	//this should account for when there are passengers too
; 748  : 	if (type == CUSTOM_EVENT_VEHICLE_ENTERED)

	cmp	DWORD PTR _type$[ebp], 1000000028	; 3b9aca1cH
	jne	SHORT $LN5@Custom

; 749  : 	{
; 750  : 		if (!driverID) //is there a driver already?

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN4@Custom

; 751  : 		{
; 752  : 			driverID = Commands->Get_ID(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
$LN4@Custom:

; 753  : 		}
; 754  : 	}

	jmp	SHORT $LN1@Custom
$LN5@Custom:

; 755  : 	else if (type == CUSTOM_EVENT_VEHICLE_EXITED)

	cmp	DWORD PTR _type$[ebp], 1000000029	; 3b9aca1dH
	jne	SHORT $LN1@Custom

; 756  : 	{
; 757  : 		int testID;
; 758  : 		testID = Commands->Get_ID(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _testID$1[ebp], eax

; 759  : 		if (driverID == testID) //is it the driver that got out?

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _testID$1[ebp]
	jne	SHORT $LN1@Custom

; 760  : 		{
; 761  : 			driverID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN1@Custom:

; 762  : 		}
; 763  : 	}
; 764  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Demolition_Truck_Improved::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Demolition_Truck_Improved::Created, COMDAT
; _this$ = ecx

; 728  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 729  : 	driverID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 730  : 	triggered = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 731  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Demolition_Truck_Improved@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Demolition_Truck_Improved::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_ObjectDeath_OnDeath@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_ObjectDeath_OnDeath@@UAEPAXI@Z PROC		; RA_ObjectDeath_OnDeath::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_ObjectDeath_OnDeath@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_ObjectDeath_OnDeath@@UAEPAXI@Z ENDP		; RA_ObjectDeath_OnDeath::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_ObjectDeath_OnDeath@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_ObjectDeath_OnDeath@@UAE@XZ PROC			; RA_ObjectDeath_OnDeath::~RA_ObjectDeath_OnDeath, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_ObjectDeath_OnDeath@@UAE@XZ ENDP			; RA_ObjectDeath_OnDeath::~RA_ObjectDeath_OnDeath
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_ObjectDeath_OnDeath@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_ObjectDeath_OnDeath@@QAE@XZ PROC			; RA_ObjectDeath_OnDeath::RA_ObjectDeath_OnDeath, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_ObjectDeath_OnDeath@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_ObjectDeath_OnDeath@@QAE@XZ ENDP			; RA_ObjectDeath_OnDeath::RA_ObjectDeath_OnDeath
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Killed@RA_ObjectDeath_OnDeath@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
$T1 = -84						; size = 12
_BoomBox$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_killer$ = 12						; size = 4
?Killed@RA_ObjectDeath_OnDeath@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_ObjectDeath_OnDeath::Killed, COMDAT
; _this$ = ecx

; 718  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 719  : 	GameObject *BoomBox;
; 720  : 	BoomBox = Commands->Create_Object(Get_Parameter("Preset"),Commands->Get_Position(obj));

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_06CKLLCHIK@Preset?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	add	esp, 8
	mov	DWORD PTR _BoomBox$[ebp], eax

; 721  : 	Commands->Apply_Damage(BoomBox, 100, "BlamoKiller", 0);

	push	0
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _BoomBox$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H

; 722  : 	Destroy_Script();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Destroy_Script@ScriptImpClass@@QAEXXZ	; ScriptImpClass::Destroy_Script

; 723  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@RA_ObjectDeath_OnDeath@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_ObjectDeath_OnDeath::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Conyard_Repair@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Conyard_Repair@@UAEPAXI@Z PROC			; RA_Conyard_Repair::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Conyard_Repair@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Conyard_Repair@@UAEPAXI@Z ENDP			; RA_Conyard_Repair::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Conyard_Repair@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Conyard_Repair@@UAE@XZ PROC			; RA_Conyard_Repair::~RA_Conyard_Repair, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Conyard_Repair@@UAE@XZ ENDP			; RA_Conyard_Repair::~RA_Conyard_Repair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Conyard_Repair@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Conyard_Repair@@QAE@XZ PROC			; RA_Conyard_Repair::RA_Conyard_Repair, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Conyard_Repair@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Conyard_Repair@@QAE@XZ ENDP			; RA_Conyard_Repair::RA_Conyard_Repair
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Conyard_Repair@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Conyard_Repair@@UAEXXZ PROC ; RA_Conyard_Repair::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 710  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 711  : 	Auto_Save_Variable(&Enabled,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 712  : 	Auto_Save_Variable(&objID,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 713  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Conyard_Repair@@UAEXXZ ENDP ; RA_Conyard_Repair::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Conyard_Repair@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_max$1 = -16						; size = 4
_power$2 = -12						; size = 4
_amount$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Conyard_Repair@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_Conyard_Repair::Timer_Expired, COMDAT
; _this$ = ecx

; 673  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 674  : 	float amount = Commands->Get_Health(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+220]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _amount$[ebp]

; 675  : 	if (amount > 0) 

	movss	xmm0, DWORD PTR _amount$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	$LN1@Timer_Expi

; 676  : 	{
; 677  : 		int power = 2;

	mov	DWORD PTR _power$2[ebp], 2

; 678  : 		if (!Is_Base_Powered(Commands->Get_Player_Type(obj)))

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	push	eax
	call	?Is_Base_Powered@@YA_NH@Z		; Is_Base_Powered
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@Timer_Expi

; 679  : 		{
; 680  : 			power = 1;

	mov	DWORD PTR _power$2[ebp], 1
$LN8@Timer_Expi:

; 681  : 		}
; 682  : 		Commands->Set_Health(obj,(amount+power));

	cvtsi2ss xmm0, DWORD PTR _power$2[ebp]
	addss	xmm0, DWORD PTR _amount$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+228]
	call	edx
	add	esp, 8

; 683  : 		//These next checks are to trigger building damage state changes as health refills
; 684  : 		float max = Commands->Get_Max_Health(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+224]
	call	edx
	add	esp, 4
	fstp	DWORD PTR _max$1[ebp]

; 685  : 		if (amount < (max * 0.25) && (amount + power) > (max * 0.25))

	cvtss2sd xmm0, DWORD PTR _amount$[ebp]
	cvtss2sd xmm1, DWORD PTR _max$1[ebp]
	mulsd	xmm1, QWORD PTR __real@3fd0000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN7@Timer_Expi
	cvtsi2ss xmm0, DWORD PTR _power$2[ebp]
	addss	xmm0, DWORD PTR _amount$[ebp]
	cvtss2sd xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR _max$1[ebp]
	mulsd	xmm1, QWORD PTR __real@3fd0000000000000
	comisd	xmm0, xmm1
	jbe	SHORT $LN7@Timer_Expi

; 686  : 		{
; 687  : 			Commands->Apply_Damage(obj, 0, "None", 0);

	push	0
	push	OFFSET ??_C@_04OHJIHAFH@None?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H
	jmp	$LN3@Timer_Expi
$LN7@Timer_Expi:

; 688  : 		}
; 689  : 		else if (amount < (max * 0.5) && (amount + power) > (max * 0.5))

	cvtss2sd xmm0, DWORD PTR _amount$[ebp]
	cvtss2sd xmm1, DWORD PTR _max$1[ebp]
	mulsd	xmm1, QWORD PTR __real@3fe0000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN5@Timer_Expi
	cvtsi2ss xmm0, DWORD PTR _power$2[ebp]
	addss	xmm0, DWORD PTR _amount$[ebp]
	cvtss2sd xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR _max$1[ebp]
	mulsd	xmm1, QWORD PTR __real@3fe0000000000000
	comisd	xmm0, xmm1
	jbe	SHORT $LN5@Timer_Expi

; 690  : 		{
; 691  : 			Commands->Apply_Damage(obj, 0, "None", 0);

	push	0
	push	OFFSET ??_C@_04OHJIHAFH@None?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H
	jmp	SHORT $LN3@Timer_Expi
$LN5@Timer_Expi:

; 692  : 		}
; 693  : 		else if (amount < (max * 0.75) && (amount + power) > (max * 0.75))

	cvtss2sd xmm0, DWORD PTR _amount$[ebp]
	cvtss2sd xmm1, DWORD PTR _max$1[ebp]
	mulsd	xmm1, QWORD PTR __real@3fe8000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN3@Timer_Expi
	cvtsi2ss xmm0, DWORD PTR _power$2[ebp]
	addss	xmm0, DWORD PTR _amount$[ebp]
	cvtss2sd xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR _max$1[ebp]
	mulsd	xmm1, QWORD PTR __real@3fe8000000000000
	comisd	xmm0, xmm1
	jbe	SHORT $LN3@Timer_Expi

; 694  : 		{
; 695  : 			Commands->Apply_Damage(obj, 0, "None", 0);

	push	0
	push	OFFSET ??_C@_04OHJIHAFH@None?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H
$LN3@Timer_Expi:

; 696  : 		}
; 697  : 		//Only start a new timer if still enabled
; 698  : 		if (Enabled)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	je	SHORT $LN2@Timer_Expi

; 699  : 		{
; 700  : 			Commands->Start_Timer(obj, this, Get_Float_Parameter("Repair_Frequency"), objID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	push	OFFSET ??_C@_0BB@KMLBNKBM@Repair_Frequency?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+128]
	call	edx
	add	esp, 16					; 00000010H
$LN2@Timer_Expi:
$LN1@Timer_Expi:

; 701  : 		}
; 702  : 		else
; 703  : 		{
; 704  : 			return;
; 705  : 		}
; 706  : 	}
; 707  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_Conyard_Repair@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Conyard_Repair::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Conyard_Repair@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Conyard_Repair@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Conyard_Repair::Custom, COMDAT
; _this$ = ecx

; 654  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 655  : 	if (type == 3000)

	cmp	DWORD PTR _type$[ebp], 3000		; 00000bb8H
	jne	SHORT $LN1@Custom

; 656  : 	{
; 657  : 		if (param == 230032)

	cmp	DWORD PTR _param$[ebp], 230032		; 00038290H
	jne	SHORT $LN4@Custom

; 658  : 		{
; 659  : 			if (!Enabled) //prevents more than one timer from starting

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	jne	SHORT $LN3@Custom

; 660  : 			{
; 661  : 				Enabled = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 1

; 662  : 				Commands->Start_Timer(obj, this, Get_Float_Parameter("Repair_Frequency"), objID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	push	OFFSET ??_C@_0BB@KMLBNKBM@Repair_Frequency?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+128]
	call	edx
	add	esp, 16					; 00000010H
$LN3@Custom:

; 663  : 			}
; 664  : 		}

	jmp	SHORT $LN1@Custom
$LN4@Custom:

; 665  : 		else if (param == 320023)

	cmp	DWORD PTR _param$[ebp], 320023		; 0004e217H
	jne	SHORT $LN1@Custom

; 666  : 		{
; 667  : 			Enabled = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0
$LN1@Custom:

; 668  : 		}
; 669  : 	}
; 670  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Conyard_Repair@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Conyard_Repair::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Conyard_Repair@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Conyard_Repair@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Conyard_Repair::Created, COMDAT
; _this$ = ecx

; 648  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 649  : 	Enabled = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0

; 650  : 	objID = Commands->Get_ID(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax

; 651  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Conyard_Repair@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Conyard_Repair::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_DriverDeath@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_DriverDeath@@UAEPAXI@Z PROC			; RA_DriverDeath::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_DriverDeath@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_DriverDeath@@UAEPAXI@Z ENDP			; RA_DriverDeath::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_DriverDeath@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_DriverDeath@@UAE@XZ PROC				; RA_DriverDeath::~RA_DriverDeath, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_DriverDeath@@UAE@XZ ENDP				; RA_DriverDeath::~RA_DriverDeath
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_DriverDeath@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_DriverDeath@@QAE@XZ PROC				; RA_DriverDeath::RA_DriverDeath, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_DriverDeath@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_DriverDeath@@QAE@XZ ENDP				; RA_DriverDeath::RA_DriverDeath
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_DriverDeath@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_DriverDeath@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_DriverDeath::Timer_Expired, COMDAT
; _this$ = ecx

; 638  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 639  : 	if (number == 12121)

	cmp	DWORD PTR _number$[ebp], 12121		; 00002f59H
	jne	SHORT $LN1@Timer_Expi

; 640  : 	{
; 641  : 		Commands->Apply_Damage(obj, 100, "Death", 0);

	push	0
	push	OFFSET ??_C@_05PGGAFPFO@Death?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H
$LN1@Timer_Expi:

; 642  : 	}
; 643  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_DriverDeath@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_DriverDeath::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_DriverDeath@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_DriverDeath@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_DriverDeath::Created, COMDAT
; _this$ = ecx

; 633  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 634  : 	Commands->Start_Timer(obj, this, 0.5, 12121);

	push	12121					; 00002f59H
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 635  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_DriverDeath@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_DriverDeath::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_GameStart_Detector@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_GameStart_Detector@@UAEPAXI@Z PROC		; RA_GameStart_Detector::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_GameStart_Detector@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_GameStart_Detector@@UAEPAXI@Z ENDP		; RA_GameStart_Detector::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_GameStart_Detector@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_GameStart_Detector@@UAE@XZ PROC			; RA_GameStart_Detector::~RA_GameStart_Detector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_GameStart_Detector@@UAE@XZ ENDP			; RA_GameStart_Detector::~RA_GameStart_Detector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_GameStart_Detector@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_GameStart_Detector@@QAE@XZ PROC			; RA_GameStart_Detector::RA_GameStart_Detector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_GameStart_Detector@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_GameStart_Detector@@QAE@XZ ENDP			; RA_GameStart_Detector::RA_GameStart_Detector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_GameStart_Detector@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_GameStart_Detector@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_GameStart_Detector::Timer_Expired, COMDAT
; _this$ = ecx

; 622  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 623  : 	if (number == 564)

	cmp	DWORD PTR _number$[ebp], 564		; 00000234H
	jne	SHORT $LN1@Timer_Expi

; 624  : 	{
; 625  : 		Commands->Apply_Damage(obj, 100.0, "BlamoKiller", 0);

	push	0
	push	OFFSET ??_C@_0M@IPKOBAPD@BlamoKiller?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H

; 626  : 		Commands->Start_Timer(obj, this, Get_Float_Parameter("Interval"), 564);

	push	564					; 00000234H
	push	OFFSET ??_C@_08KDKDEPAG@Interval?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN1@Timer_Expi:

; 627  : 	}
; 628  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_GameStart_Detector@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_GameStart_Detector::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Killed@RA_GameStart_Detector@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_param$ = -16						; size = 4
_type$ = -12						; size = 4
_receiverID$ = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_killer$ = 12						; size = 4
?Killed@RA_GameStart_Detector@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_GameStart_Detector::Killed, COMDAT
; _this$ = ecx

; 614  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 615  : 	int receiverID = Get_Int_Parameter("ReceiverID");

	push	OFFSET ??_C@_0L@MGGOLNPC@ReceiverID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _receiverID$[ebp], eax

; 616  : 	int type = Get_Int_Parameter("Message");

	push	OFFSET ??_C@_07BEIHKDLJ@Message?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _type$[ebp], eax

; 617  : 	int param = Get_Int_Parameter("Parameter");

	push	OFFSET ??_C@_09HPDNJEFH@Parameter?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _param$[ebp], eax

; 618  : 	Commands->Send_Custom_Event(obj, Commands->Find_Object(receiverID), type, param, 0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _receiverID$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H

; 619  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@RA_GameStart_Detector@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_GameStart_Detector::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_GameStart_Detector@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_GameStart_Detector@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_GameStart_Detector::Created, COMDAT
; _this$ = ecx

; 609  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 610  : 	Commands->Start_Timer(obj, this, Get_Float_Parameter("Interval"), 564);

	push	564					; 00000234H
	push	OFFSET ??_C@_08KDKDEPAG@Interval?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 611  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_GameStart_Detector@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_GameStart_Detector::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Damaged_Credits@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Damaged_Credits@@UAEPAXI@Z PROC			; RA_Damaged_Credits::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Damaged_Credits@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Damaged_Credits@@UAEPAXI@Z ENDP			; RA_Damaged_Credits::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Damaged_Credits@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Damaged_Credits@@UAE@XZ PROC			; RA_Damaged_Credits::~RA_Damaged_Credits, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Damaged_Credits@@UAE@XZ ENDP			; RA_Damaged_Credits::~RA_Damaged_Credits
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Damaged_Credits@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Damaged_Credits@@QAE@XZ PROC			; RA_Damaged_Credits::RA_Damaged_Credits, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Damaged_Credits@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Damaged_Credits@@QAE@XZ ENDP			; RA_Damaged_Credits::RA_Damaged_Credits
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Damaged@RA_Damaged_Credits@@EAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
tv83 = -88						; size = 4
tv74 = -88						; size = 4
_divisor$1 = -20					; size = 4
_divisor$2 = -16					; size = 4
_objtype2$3 = -12					; size = 4
_objtype1$4 = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_amount$ = 16						; size = 4
?Damaged@RA_Damaged_Credits@@EAEXPAVScriptableGameObj@@0M@Z PROC ; RA_Damaged_Credits::Damaged, COMDAT
; _this$ = ecx

; 579  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 580  : 	if (Commands->Is_A_Star(damager)) //Ignore if not a player

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	$LN1@Damaged

; 581  : 	{
; 582  : 		int objtype1 = obj->As_DamageableGameObj()->Get_Player_Type();

	mov	eax, DWORD PTR _obj$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	mov	DWORD PTR tv74[ebp], eax
	mov	ecx, DWORD PTR tv74[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv74[ebp]
	mov	eax, DWORD PTR [edx+104]
	call	eax
	mov	DWORD PTR _objtype1$4[ebp], eax

; 583  : 		int objtype2 = damager->As_DamageableGameObj()->Get_Player_Type();

	mov	eax, DWORD PTR _damager$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _damager$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	mov	DWORD PTR tv83[ebp], eax
	mov	ecx, DWORD PTR tv83[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv83[ebp]
	mov	eax, DWORD PTR [edx+104]
	call	eax
	mov	DWORD PTR _objtype2$3[ebp], eax

; 584  : 		if (!objtype1 || objtype1 == 1) //Ignore if not soviet or allied

	cmp	DWORD PTR _objtype1$4[ebp], 0
	je	SHORT $LN6@Damaged
	cmp	DWORD PTR _objtype1$4[ebp], 1
	jne	$LN1@Damaged
$LN6@Damaged:

; 585  : 		{
; 586  : 			if (objtype1 != objtype2) //Test if on different teams

	mov	eax, DWORD PTR _objtype1$4[ebp]
	cmp	eax, DWORD PTR _objtype2$3[ebp]
	je	SHORT $LN5@Damaged

; 587  : 			{
; 588  : 				if (amount > 0) //If 'damage' was harmful

	movss	xmm0, DWORD PTR _amount$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN4@Damaged

; 589  : 				{
; 590  : 					float divisor = Get_Float_Parameter("Divisor");

	push	OFFSET ??_C@_07EHHFIGEM@Divisor?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _divisor$2[ebp]

; 591  : 					Commands->Give_Money(damager, amount/divisor, false);

	push	0
	movss	xmm0, DWORD PTR _amount$[ebp]
	divss	xmm0, DWORD PTR _divisor$2[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+644]
	call	edx
	add	esp, 12					; 0000000cH
$LN4@Damaged:

; 592  : 				}
; 593  : 			}

	jmp	SHORT $LN1@Damaged
$LN5@Damaged:

; 594  : 			else if (objtype1 == objtype2) //Just to be sure...

	mov	eax, DWORD PTR _objtype1$4[ebp]
	cmp	eax, DWORD PTR _objtype2$3[ebp]
	jne	SHORT $LN1@Damaged

; 595  : 			{
; 596  : 				if (amount < 0) //If 'damage' was helpful

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _amount$[ebp]
	jbe	SHORT $LN1@Damaged

; 597  : 				{
; 598  : 					float divisor = Get_Float_Parameter("Divisor");

	push	OFFSET ??_C@_07EHHFIGEM@Divisor?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _divisor$1[ebp]

; 599  : 					Commands->Give_Money(damager, (-amount)/divisor, false);

	push	0
	movss	xmm0, DWORD PTR _amount$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	divss	xmm0, DWORD PTR _divisor$1[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+644]
	call	edx
	add	esp, 12					; 0000000cH
$LN1@Damaged:

; 600  : 				}
; 601  : 			}
; 602  : 		}
; 603  : 	}
; 604  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@RA_Damaged_Credits@@EAEXPAVScriptableGameObj@@0M@Z ENDP ; RA_Damaged_Credits::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Naval_Zone@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Naval_Zone@@UAEPAXI@Z PROC			; RA_Naval_Zone::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Naval_Zone@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Naval_Zone@@UAEPAXI@Z ENDP			; RA_Naval_Zone::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Naval_Zone@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Naval_Zone@@UAE@XZ PROC				; RA_Naval_Zone::~RA_Naval_Zone, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Naval_Zone@@UAE@XZ ENDP				; RA_Naval_Zone::~RA_Naval_Zone
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Naval_Zone@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Naval_Zone@@QAE@XZ PROC				; RA_Naval_Zone::RA_Naval_Zone, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Naval_Zone@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Naval_Zone@@QAE@XZ ENDP				; RA_Naval_Zone::RA_Naval_Zone
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Naval_Zone@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
$T1 = -80						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Naval_Zone@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Naval_Zone::Custom, COMDAT
; _this$ = ecx

; 568  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 569  : 	if (type == 846846)

	cmp	DWORD PTR _type$[ebp], 846846		; 000cebfeH
	jne	SHORT $LN2@Custom

; 570  : 	{
; 571  : 		//Fire in the hole!!!!
; 572  : 		Commands->Create_Explosion(Get_Parameter("Explosion"), Commands->Get_Position(obj), 0);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_09HGNANIIM@Explosion?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+416]
	call	edx
	add	esp, 12					; 0000000cH
$LN2@Custom:

; 573  : 	}
; 574  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Naval_Zone@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Naval_Zone::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Naval_Unit@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Naval_Unit@@UAEPAXI@Z PROC			; RA_Naval_Unit::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Naval_Unit@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Naval_Unit@@UAEPAXI@Z ENDP			; RA_Naval_Unit::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Naval_Unit@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Naval_Unit@@UAE@XZ PROC				; RA_Naval_Unit::~RA_Naval_Unit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Naval_Unit@@UAE@XZ ENDP				; RA_Naval_Unit::~RA_Naval_Unit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Naval_Unit@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Naval_Unit@@QAE@XZ PROC				; RA_Naval_Unit::RA_Naval_Unit, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Naval_Unit@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Naval_Unit@@QAE@XZ ENDP				; RA_Naval_Unit::RA_Naval_Unit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Destroyed@RA_Naval_Unit@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_controller$ = -8					; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@RA_Naval_Unit@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Naval_Unit::Destroyed, COMDAT
; _this$ = ecx

; 560  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 561  : 	int controller = Get_Int_Parameter("Controller_ID");

	push	OFFSET ??_C@_0O@KMKIEDFH@Controller_ID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _controller$[ebp], eax

; 562  : 	Commands->Send_Custom_Event(obj, Commands->Find_Object(controller), 753753, 0, 0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	753753					; 000b8059H
	mov	eax, DWORD PTR _controller$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+140]
	call	edx
	add	esp, 20					; 00000014H

; 563  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Destroyed@RA_Naval_Unit@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Naval_Unit::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Naval_PT_Pokable@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Naval_PT_Pokable@@UAEPAXI@Z PROC			; RA_Naval_PT_Pokable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Naval_PT_Pokable@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Naval_PT_Pokable@@UAEPAXI@Z ENDP			; RA_Naval_PT_Pokable::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Naval_PT_Pokable@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Naval_PT_Pokable@@UAE@XZ PROC			; RA_Naval_PT_Pokable::~RA_Naval_PT_Pokable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Naval_PT_Pokable@@UAE@XZ ENDP			; RA_Naval_PT_Pokable::~RA_Naval_PT_Pokable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Naval_PT_Pokable@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Naval_PT_Pokable@@QAE@XZ PROC			; RA_Naval_PT_Pokable::RA_Naval_PT_Pokable, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Naval_PT_Pokable@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Naval_PT_Pokable@@QAE@XZ ENDP			; RA_Naval_PT_Pokable::RA_Naval_PT_Pokable
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Naval_PT_Pokable@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Naval_PT_Pokable@@UAEXXZ PROC ; RA_Naval_PT_Pokable::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 553  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 554  : 	Auto_Save_Variable(&storedID,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 555  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Naval_PT_Pokable@@UAEXXZ ENDP ; RA_Naval_PT_Pokable::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
$T1 = -84						; size = 12
_newobj$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_Naval_PT_Pokable::Timer_Expired, COMDAT
; _this$ = ecx

; 544  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 545  : 	//Create the object
; 546  : 	GameObject *newobj;
; 547  : 	newobj = Commands->Create_Object(Get_Parameter("Preset_Name"), Commands->Get_Position(Commands->Find_Object(Get_Int_Parameter("Zone_ID"))));

	push	OFFSET ??_C@_07DINJEGDJ@Zone_ID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0M@KBNHOJJA@Preset_Name?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+100]
	call	eax
	add	esp, 8
	mov	DWORD PTR _newobj$[ebp], eax

; 548  : 	Commands->Set_Facing(newobj, Commands->Get_Facing(Commands->Find_Object(Get_Int_Parameter("Zone_ID"))));

	push	OFFSET ??_C@_07DINJEGDJ@Zone_ID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+72]
	call	eax
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _newobj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+76]
	call	eax
	add	esp, 8

; 549  : 	Commands->Attach_Script(newobj, "RA_Naval_Unit", Get_Parameter("Controller_ID"));

	push	OFFSET ??_C@_0O@KMKIEDFH@Controller_ID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	push	OFFSET ??_C@_0O@HFKHFDOD@RA_Naval_Unit?$AA@
	mov	eax, DWORD PTR _newobj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	add	esp, 12					; 0000000cH

; 550  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Naval_PT_Pokable::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_cost$1 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Naval_PT_Pokable::Custom, COMDAT
; _this$ = ecx

; 517  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 518  : 	//159159 = authorization response
; 519  : 	if (type == 159159)

	cmp	DWORD PTR _type$[ebp], 159159		; 00026db7H
	jne	$LN1@Custom

; 520  : 	{
; 521  : 		if (param == 1)

	cmp	DWORD PTR _param$[ebp], 1
	jne	$LN3@Custom

; 522  : 		{
; 523  : 			if (storedID) //Do I remember a player?

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	$LN2@Custom

; 524  : 			{
; 525  : 				float cost = Get_Float_Parameter("Cost");

	push	OFFSET ??_C@_04FICPKHNF@Cost?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _cost$1[ebp]

; 526  : 				cost = -cost;

	movss	xmm0, DWORD PTR _cost$1[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR _cost$1[ebp], xmm0

; 527  : 				Commands->Give_Money(Commands->Find_Object(storedID),cost,false);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR _cost$1[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+644]
	call	edx
	add	esp, 12					; 0000000cH

; 528  : 				//tell zone to clear the the construction zone
; 529  : 				Commands->Send_Custom_Event(obj, Commands->Find_Object(Get_Int_Parameter("Zone_ID")), 846846, 0, 0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	846846					; 000cebfeH
	push	OFFSET ??_C@_07DINJEGDJ@Zone_ID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H

; 530  : 				//1 second delay to allow zone to clear
; 531  : 				Commands->Start_Timer(obj,this,1.0, 0);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 532  : 				//clear the ID, we don't need it now
; 533  : 				storedID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN2@Custom:

; 534  : 			}
; 535  : 		}
; 536  : 		else

	jmp	SHORT $LN1@Custom
$LN3@Custom:

; 537  : 		{
; 538  : 			storedID = 0; //request denied, erase ID

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN1@Custom:

; 539  : 		}
; 540  : 	}
; 541  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Naval_PT_Pokable::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Poked@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
tv151 = -80						; size = 4
_cost$1 = -12						; size = 4
_teamtest$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_poker$ = 12						; size = 4
?Poked@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Naval_PT_Pokable::Poked, COMDAT
; _this$ = ecx

; 500  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 501  : 	//first check if player matches team
; 502  : 	int teamtest = Get_Int_Parameter("Team");

	push	OFFSET ??_C@_04GBPANCCF@Team?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _teamtest$[ebp], eax

; 503  : 	if ((Commands->Get_Player_Type(poker)) == teamtest)

	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	cmp	eax, DWORD PTR _teamtest$[ebp]
	jne	$LN1@Poked

; 504  : 	{
; 505  : 		//ok, player is on my team, does he have the cash?
; 506  : 		float cost = Get_Float_Parameter("Cost");

	push	OFFSET ??_C@_04FICPKHNF@Cost?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	fstp	DWORD PTR _cost$1[ebp]

; 507  : 		if (Commands->Get_Money(poker) >= cost)

	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+640]
	call	edx
	add	esp, 4
	fstp	DWORD PTR tv151[ebp]
	movss	xmm0, DWORD PTR tv151[ebp]
	comiss	xmm0, DWORD PTR _cost$1[ebp]
	jb	SHORT $LN1@Poked

; 508  : 		{
; 509  : 			//player has the money, are they allowed?
; 510  : 			storedID = Commands->Get_ID(poker); //remember for later

	mov	eax, DWORD PTR _poker$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax

; 511  : 			Commands->Send_Custom_Event(obj, Commands->Find_Object(Get_Int_Parameter("Controller_ID")), 951951, 0, 0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	951951					; 000e868fH
	push	OFFSET ??_C@_0O@KMKIEDFH@Controller_ID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H
$LN1@Poked:

; 512  : 		}
; 513  : 	}
; 514  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Poked@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Naval_PT_Pokable::Poked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Naval_PT_Pokable::Created, COMDAT
; _this$ = ecx

; 492  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 493  : 	storedID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 494  : 	Commands->Display_Health_Bar(obj, false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+788]
	call	edx
	add	esp, 8

; 495  : 	Commands->Set_Player_Type(obj, Get_Int_Parameter("Team"));

	push	OFFSET ??_C@_04GBPANCCF@Team?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+252]
	call	edx
	add	esp, 8

; 496  : 	Commands->Enable_HUD_Pokable_Indicator(obj, true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+780]
	call	edx
	add	esp, 8

; 497  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Naval_PT_Pokable@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Naval_PT_Pokable::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Naval_Yard@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Naval_Yard@@UAEPAXI@Z PROC			; RA_Naval_Yard::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Naval_Yard@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Naval_Yard@@UAEPAXI@Z ENDP			; RA_Naval_Yard::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Naval_Yard@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Naval_Yard@@UAE@XZ PROC				; RA_Naval_Yard::~RA_Naval_Yard, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Naval_Yard@@UAE@XZ ENDP				; RA_Naval_Yard::~RA_Naval_Yard
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Naval_Yard@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Naval_Yard@@QAE@XZ PROC				; RA_Naval_Yard::RA_Naval_Yard, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Naval_Yard@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Naval_Yard@@QAE@XZ ENDP				; RA_Naval_Yard::RA_Naval_Yard
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Naval_Yard@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Naval_Yard@@UAEXXZ PROC ; RA_Naval_Yard::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 483  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 484  : 	Auto_Save_Variable(&team_count,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 485  : 	Auto_Save_Variable(&active,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 486  : 	Auto_Save_Variable(&ready,4,3);

	push	3
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 33					; 00000021H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 487  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Naval_Yard@@UAEXXZ ENDP ; RA_Naval_Yard::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_Naval_Yard::Timer_Expired, COMDAT
; _this$ = ecx

; 477  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 478  : 	//'cool down' time complete, construction allowed again
; 479  : 	ready = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+33], 1

; 480  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Naval_Yard::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Killed@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_killer$ = 12						; size = 4
?Killed@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Naval_Yard::Killed, COMDAT
; _this$ = ecx

; 472  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 473  : 	active = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 0

; 474  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Naval_Yard::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_limit$1 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Naval_Yard::Custom, COMDAT
; _this$ = ecx

; 428  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 429  : 	//951951 = purchase authorization request
; 430  : 	//753753 = naval unit died
; 431  : 	if (type == 951951) //Authorize request?

	cmp	DWORD PTR _type$[ebp], 951951		; 000e868fH
	jne	$LN9@Custom

; 432  : 	{
; 433  : 		if (active) //am I still alive?

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	$LN8@Custom

; 434  : 		{
; 435  : 			if (ready)//was a unit just built?

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+33]
	test	ecx, ecx
	je	$LN7@Custom

; 436  : 			{
; 437  : 				int limit = Get_Int_Parameter("Limit");

	push	OFFSET ??_C@_05GHJMOCPE@Limit?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _limit$1[ebp], eax

; 438  : 				if (team_count < limit) //Are we under limit?

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _limit$1[ebp]
	jge	SHORT $LN6@Custom

; 439  : 				{			
; 440  : 					//Authorize purchase and increase count by 1
; 441  : 					Commands->Send_Custom_Event(obj, sender, 159159, 1, 0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	1
	push	159159					; 00026db7H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 442  : 					team_count++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], ecx

; 443  : 					ready = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+33], 0

; 444  : 					Commands->Start_Timer(obj, this, Get_Float_Parameter("Disable_Time"), 0);

	push	0
	push	OFFSET ??_C@_0N@GDBOJMMA@Disable_Time?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H

; 445  : 									}
; 446  : 				else

	jmp	SHORT $LN5@Custom
$LN6@Custom:

; 447  : 				{
; 448  : 					//Authorization denied
; 449  : 					Commands->Send_Custom_Event(obj, sender, 159159, 0, 0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	159159					; 00026db7H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN5@Custom:

; 450  : 				}
; 451  : 			}
; 452  : 			else//Not ready to build yet

	jmp	SHORT $LN4@Custom
$LN7@Custom:

; 453  : 			{	
; 454  : 				//Authorization denied
; 455  : 				Commands->Send_Custom_Event(obj, sender, 159159, 0, 0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	159159					; 00026db7H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN4@Custom:

; 456  : 			}
; 457  : 		}
; 458  : 		else

	jmp	SHORT $LN3@Custom
$LN8@Custom:

; 459  : 		{
; 460  : 			//If I'm dead, everyone dies too! Hahahahaha!
; 461  : 			Commands->Destroy_Object(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	add	esp, 4
$LN3@Custom:

; 462  : 		}

	jmp	SHORT $LN1@Custom
$LN9@Custom:

; 463  : 	}
; 464  : 	else if (type == 753753) //Death Announcement?

	cmp	DWORD PTR _type$[ebp], 753753		; 000b8059H
	jne	SHORT $LN1@Custom

; 465  : 	{
; 466  : 		//Why do the young die?! Why!?
; 467  : 		team_count--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], ecx
$LN1@Custom:

; 468  : 	}
; 469  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Naval_Yard::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Naval_Yard::Created, COMDAT
; _this$ = ecx

; 421  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 422  : 	team_count = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 423  : 	active = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+32], 1

; 424  : 	ready = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+33], 1

; 425  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Naval_Yard@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Naval_Yard::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_ObjectDeath_OnCreate@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_ObjectDeath_OnCreate@@UAEPAXI@Z PROC		; RA_ObjectDeath_OnCreate::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_ObjectDeath_OnCreate@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_ObjectDeath_OnCreate@@UAEPAXI@Z ENDP		; RA_ObjectDeath_OnCreate::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_ObjectDeath_OnCreate@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_ObjectDeath_OnCreate@@UAE@XZ PROC			; RA_ObjectDeath_OnCreate::~RA_ObjectDeath_OnCreate, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_ObjectDeath_OnCreate@@UAE@XZ ENDP			; RA_ObjectDeath_OnCreate::~RA_ObjectDeath_OnCreate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_ObjectDeath_OnCreate@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_ObjectDeath_OnCreate@@QAE@XZ PROC			; RA_ObjectDeath_OnCreate::RA_ObjectDeath_OnCreate, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_ObjectDeath_OnCreate@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_ObjectDeath_OnCreate@@QAE@XZ ENDP			; RA_ObjectDeath_OnCreate::RA_ObjectDeath_OnCreate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_ObjectDeath_OnCreate@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
$T1 = -100						; size = 12
_v$ = -24						; size = 12
_war$ = -12						; size = 4
_c$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_ObjectDeath_OnCreate@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_ObjectDeath_OnCreate::Created, COMDAT
; _this$ = ecx

; 403  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 100				; 00000064H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 404  : 	/*NeoSaber's Note: The purpose of this script is to create a new 
; 405  : 	object at the location of another object's creation, then kill 
; 406  : 	the script generated one to use its KilledExplosion setting to 
; 407  : 	place a sound on the map. Only way I've found to 'create' sounds 
; 408  : 	with scripts in multiplayer*/
; 409  : 	const char *c;
; 410  : 	const char *war = "Death";

	mov	DWORD PTR _war$[ebp], OFFSET ??_C@_05PGGAFPFO@Death?$AA@

; 411  : 	Vector3 v;

	lea	ecx, DWORD PTR _v$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 412  : 	c = Get_Parameter("Object");

	push	OFFSET ??_C@_06ELFECKBG@Object?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	mov	DWORD PTR _c$[ebp], eax

; 413  : 	v = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 414  : 	Commands->Apply_Damage(Commands->Create_Object(c,v),100,war,0);

	push	0
	mov	eax, DWORD PTR _war$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+100]
	call	ecx
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+616]
	call	eax
	add	esp, 16					; 00000010H

; 415  : 	Destroy_Script();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Destroy_Script@ScriptImpClass@@QAEXXZ	; ScriptImpClass::Destroy_Script

; 416  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_ObjectDeath_OnCreate@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_ObjectDeath_OnCreate::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Mine_Manager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Mine_Manager@@UAEPAXI@Z PROC			; RA_Mine_Manager::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Mine_Manager@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Mine_Manager@@UAEPAXI@Z ENDP			; RA_Mine_Manager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Mine_Manager@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Mine_Manager@@UAE@XZ PROC				; RA_Mine_Manager::~RA_Mine_Manager, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Mine_Manager@@UAE@XZ ENDP				; RA_Mine_Manager::~RA_Mine_Manager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Mine_Manager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Mine_Manager@@QAE@XZ PROC				; RA_Mine_Manager::RA_Mine_Manager, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Mine_Manager@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Mine_Manager@@QAE@XZ ENDP				; RA_Mine_Manager::RA_Mine_Manager
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Mine_Manager@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Mine_Manager@@UAEXXZ PROC ; RA_Mine_Manager::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 395  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 396  : 	Auto_Save_Variable(&all_mines,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 397  : 	Auto_Save_Variable(&sov_mines,4,2);

	push	2
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 398  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Mine_Manager@@UAEXXZ ENDP ; RA_Mine_Manager::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Mine_Manager@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_mine$1 = -24						; size = 4
_limit$2 = -20						; size = 4
_mine$3 = -16						; size = 4
_limit$4 = -12						; size = 4
_team$5 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Mine_Manager@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_Mine_Manager::Custom, COMDAT
; _this$ = ecx

; 333  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 334  : 	// message 300300: MineLayer requesting Mine placement
; 335  : 	// message 200200: Mine announcing its destruction
; 336  : 	// message 656565: MineManager informing Mine of its Owner
; 337  : 	// param is driver's ID number
; 338  : 	/*Variables moved within the 'if's so they aren't created unless
; 339  : 	the mesage is valid. No need to take up space if it isn't needed*/
; 340  : 	if (type == 300300)

	cmp	DWORD PTR _type$[ebp], 300300		; 0004950cH
	jne	$LN13@Custom

; 341  : 	{
; 342  : 		int team = Commands->Get_Player_Type(Commands->Find_Object(param));

	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+248]
	call	ecx
	add	esp, 4
	mov	DWORD PTR _team$5[ebp], eax

; 343  : 
; 344  : 		if (!team)//check if this is a soviet request

	cmp	DWORD PTR _team$5[ebp], 0
	jne	$LN12@Custom

; 345  : 		{
; 346  : 			int limit = Get_Int_Parameter("Mine_Limit");

	push	OFFSET ??_C@_0L@FEMAOEFO@Mine_Limit?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _limit$4[ebp], eax

; 347  : 
; 348  : 			if (sov_mines < limit) //is team under the limit

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	cmp	ecx, DWORD PTR _limit$4[ebp]
	jge	SHORT $LN11@Custom

; 349  : 			{
; 350  : 				//Under limit, request approved, mine created
; 351  : 				sov_mines++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], ecx

; 352  : 				GameObject *mine;
; 353  : 				mine = Commands->Create_Object_At_Bone(sender,Get_Parameter("Soviet_Mine"),Get_Parameter("BoneName"));

	push	OFFSET ??_C@_08FPDFGKEJ@BoneName?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	push	OFFSET ??_C@_0M@MGAOKMMO@Soviet_Mine?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+104]
	call	edx
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _mine$3[ebp], eax

; 354  : 				Commands->Send_Custom_Event(obj, mine, 656565, param, 1.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	push	656565					; 000a04b5H
	mov	ecx, DWORD PTR _mine$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H

; 355  : 			}
; 356  : 			else

	jmp	SHORT $LN10@Custom
$LN11@Custom:

; 357  : 			{
; 358  : 				//Team at mine limit, request denied, refunding ammo
; 359  : 				Commands->Give_PowerUp(sender, Get_Parameter("Mine_Reload"), false);

	push	0
	push	OFFSET ??_C@_0M@MPNDCCKL@Mine_Reload?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+432]
	call	edx
	add	esp, 12					; 0000000cH
$LN10@Custom:

; 360  : 			}

	jmp	$LN6@Custom
$LN12@Custom:

; 361  : 		}
; 362  : 		else if (team == 1)//check if its an allied request

	cmp	DWORD PTR _team$5[ebp], 1
	jne	$LN6@Custom

; 363  : 		{
; 364  : 			int limit = Get_Int_Parameter("Mine_Limit");

	push	OFFSET ??_C@_0L@FEMAOEFO@Mine_Limit?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _limit$2[ebp], eax

; 365  : 
; 366  : 			if (all_mines < limit) //is team under the limit

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _limit$2[ebp]
	jge	SHORT $LN7@Custom

; 367  : 			{
; 368  : 				//Under limit, request approved, mine created
; 369  : 				all_mines++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], ecx

; 370  : 				GameObject *mine;
; 371  : 				mine = Commands->Create_Object_At_Bone(sender,Get_Parameter("Allied_Mine"),Get_Parameter("BoneName"));

	push	OFFSET ??_C@_08FPDFGKEJ@BoneName?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	push	OFFSET ??_C@_0M@OIJNDEED@Allied_Mine?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+104]
	call	edx
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _mine$1[ebp], eax

; 372  : 				Commands->Send_Custom_Event(obj, mine, 656565, param, 1.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	push	656565					; 000a04b5H
	mov	ecx, DWORD PTR _mine$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H

; 373  : 			}
; 374  : 			else

	jmp	SHORT $LN6@Custom
$LN7@Custom:

; 375  : 			{
; 376  : 				//Team at mine limit, request denied, refunding ammo
; 377  : 				Commands->Give_PowerUp(sender, Get_Parameter("Mine_Reload"), false);

	push	0
	push	OFFSET ??_C@_0M@MPNDCCKL@Mine_Reload?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+432]
	call	edx
	add	esp, 12					; 0000000cH
$LN6@Custom:

; 378  : 			}
; 379  : 		}
; 380  : 	}

	jmp	SHORT $LN1@Custom
$LN13@Custom:

; 381  : 	else if (type == 200200)

	cmp	DWORD PTR _type$[ebp], 200200		; 00030e08H
	jne	SHORT $LN1@Custom

; 382  : 	{
; 383  : 		if (!param)//Is this a soviet mine? (message param should be team type)

	cmp	DWORD PTR _param$[ebp], 0
	jne	SHORT $LN3@Custom

; 384  : 		{
; 385  : 			sov_mines--; //A moment of silence for out fallen comrade

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], ecx
	jmp	SHORT $LN1@Custom
$LN3@Custom:

; 386  : 		}
; 387  : 		else if (param == 1)//or is it an allied mine? (message param should be team type)

	cmp	DWORD PTR _param$[ebp], 1
	jne	SHORT $LN1@Custom

; 388  : 		{
; 389  : 			all_mines--; //Why, God?! Why did it have to die?!

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], ecx
$LN1@Custom:

; 390  : 		}
; 391  : 	}
; 392  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Mine_Manager@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_Mine_Manager::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Mine_Manager@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Mine_Manager@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Mine_Manager::Created, COMDAT
; _this$ = ecx

; 327  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 328  : 	all_mines = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 329  : 	sov_mines = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0

; 330  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Mine_Manager@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Mine_Manager::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Mine@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Mine@@UAEPAXI@Z PROC				; RA_Mine::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Mine@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Mine@@UAEPAXI@Z ENDP				; RA_Mine::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Mine@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Mine@@UAE@XZ PROC					; RA_Mine::~RA_Mine, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Mine@@UAE@XZ ENDP					; RA_Mine::~RA_Mine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Mine@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Mine@@QAE@XZ PROC					; RA_Mine::RA_Mine, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Mine@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Mine@@QAE@XZ ENDP					; RA_Mine::RA_Mine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_Mine@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_Mine@@UAEXXZ PROC	; RA_Mine::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 318  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 319  : 	Auto_Save_Variable(&AP_mine,1,1);

	push	1
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 320  : 	Auto_Save_Variable(&AT_mine,1,2);

	push	2
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 29					; 0000001dH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 321  : 	Auto_Save_Variable(&ownerID,4,3);

	push	3
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 322  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_Mine@@UAEXXZ ENDP	; RA_Mine::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Destroyed@RA_Mine@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@RA_Mine@@EAEXPAVScriptableGameObj@@@Z PROC	; RA_Mine::Destroyed, COMDAT
; _this$ = ecx

; 312  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 313  : 	//Blaaargh! I'm dead!
; 314  : 	Commands->Send_Custom_Event(obj, Commands->Find_Object(Get_Int_Parameter("Mine_Manager_ID")), 200200, team, 0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	push	200200					; 00030e08H
	push	OFFSET ??_C@_0BA@FMFKJJDO@Mine_Manager_ID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H

; 315  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Destroyed@RA_Mine@@EAEXPAVScriptableGameObj@@@Z ENDP	; RA_Mine::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Enemy_Seen@RA_Mine@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_ownerID$1 = -28					; size = 4
_objID$2 = -24						; size = 4
_damager$3 = -20					; size = 4
_ownerID$4 = -16					; size = 4
_objID$5 = -12						; size = 4
_damager$6 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_enemy$ = 12						; size = 4
?Enemy_Seen@RA_Mine@@EAEXPAVScriptableGameObj@@0@Z PROC	; RA_Mine::Enemy_Seen, COMDAT
; _this$ = ecx

; 263  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 264  : 	/*Note: The mine will detonate as soon as it sees its target.
; 265  : 	Therefore the proximity range is the 'Sight Range' on the vehicle
; 266  : 	*/
; 267  : 	if (AP_mine) //Is this mine anti-personnel?

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	je	$LN7@Enemy_Seen

; 268  : 	{
; 269  : 		if (enemy->As_SoldierGameObj())//using newer, more specific code

	mov	eax, DWORD PTR _enemy$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _enemy$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	test	eax, eax
	je	$LN7@Enemy_Seen

; 270  : 		{
; 271  : 			GameObject *damager = Get_GameObj(ownerID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	mov	DWORD PTR _damager$6[ebp], eax

; 272  : 			int objID = Commands->Get_Player_Type(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _objID$5[ebp], eax

; 273  : 			int ownerID = Commands->Get_Player_Type(damager);

	mov	eax, DWORD PTR _damager$6[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _ownerID$4[ebp], eax

; 274  : 			Commands->Set_Player_Type(obj, 2); //Change teams to avoid friendly fire

	push	2
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+252]
	call	edx
	add	esp, 8

; 275  : 			SetExplosionObj(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?SetExplosionObj@@3P6AXPAVScriptableGameObj@@@ZA ; SetExplosionObj
	add	esp, 4

; 276  : 			if (objID != ownerID) //Did the owner switch teams?

	mov	eax, DWORD PTR _objID$5[ebp]
	cmp	eax, DWORD PTR _ownerID$4[ebp]
	je	SHORT $LN6@Enemy_Seen

; 277  : 			{
; 278  : 				Commands->Apply_Damage(obj,Get_Float_Parameter("Trigger_Damage"),Get_Parameter("Trigger_Warhead"),0); //Die Infidel!

	push	0
	push	OFFSET ??_C@_0BA@LBFLGKJ@Trigger_Warhead?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	push	OFFSET ??_C@_0P@CKNAPFGO@Trigger_Damage?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H

; 279  : 			}
; 280  : 			else //Still on same side

	jmp	SHORT $LN5@Enemy_Seen
$LN6@Enemy_Seen:

; 281  : 			{
; 282  : 				Commands->Apply_Damage(obj,Get_Float_Parameter("Trigger_Damage"),Get_Parameter("Trigger_Warhead"),damager); //Die Infidel!

	mov	eax, DWORD PTR _damager$6[ebp]
	push	eax
	push	OFFSET ??_C@_0BA@LBFLGKJ@Trigger_Warhead?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	push	OFFSET ??_C@_0P@CKNAPFGO@Trigger_Damage?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+616]
	call	eax
	add	esp, 16					; 00000010H
$LN5@Enemy_Seen:

; 283  : 			}
; 284  : 			SetExplosionObj(0);

	push	0
	call	DWORD PTR ?SetExplosionObj@@3P6AXPAVScriptableGameObj@@@ZA ; SetExplosionObj
	add	esp, 4

; 285  : 			return; //the mine is dead, end now

	jmp	$LN9@Enemy_Seen
$LN7@Enemy_Seen:

; 286  : 		}
; 287  : 	}
; 288  : 	if (AT_mine) //Is this mine anti-tank?

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+29]
	test	ecx, ecx
	je	$LN3@Enemy_Seen

; 289  : 	{
; 290  : 		if (enemy->As_VehicleGameObj())//using newer, more specific code

	mov	eax, DWORD PTR _enemy$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _enemy$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	test	eax, eax
	je	$LN3@Enemy_Seen

; 291  : 		{
; 292  : 			GameObject *damager = Get_GameObj(ownerID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	mov	DWORD PTR _damager$3[ebp], eax

; 293  : 			int objID = Commands->Get_Player_Type(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _objID$2[ebp], eax

; 294  : 			int ownerID = Commands->Get_Player_Type(damager);

	mov	eax, DWORD PTR _damager$3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	DWORD PTR _ownerID$1[ebp], eax

; 295  : 			Commands->Set_Player_Type(obj, 2); //Change teams to avoid friendly fire

	push	2
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+252]
	call	edx
	add	esp, 8

; 296  : 			SetExplosionObj(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	DWORD PTR ?SetExplosionObj@@3P6AXPAVScriptableGameObj@@@ZA ; SetExplosionObj
	add	esp, 4

; 297  : 			if (objID != ownerID) //Did the owner switch teams?

	mov	eax, DWORD PTR _objID$2[ebp]
	cmp	eax, DWORD PTR _ownerID$1[ebp]
	je	SHORT $LN2@Enemy_Seen

; 298  : 			{
; 299  : 				Commands->Apply_Damage(obj,Get_Float_Parameter("Trigger_Damage"),Get_Parameter("Trigger_Warhead"), 0); //Good-bye cruel world!

	push	0
	push	OFFSET ??_C@_0BA@LBFLGKJ@Trigger_Warhead?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	push	OFFSET ??_C@_0P@CKNAPFGO@Trigger_Damage?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+616]
	call	edx
	add	esp, 16					; 00000010H

; 300  : 			}
; 301  : 			else

	jmp	SHORT $LN1@Enemy_Seen
$LN2@Enemy_Seen:

; 302  : 			{
; 303  : 				Commands->Apply_Damage(obj,Get_Float_Parameter("Trigger_Damage"),Get_Parameter("Trigger_Warhead"), damager); //Good-bye cruel world!

	mov	eax, DWORD PTR _damager$3[ebp]
	push	eax
	push	OFFSET ??_C@_0BA@LBFLGKJ@Trigger_Warhead?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	push	OFFSET ??_C@_0P@CKNAPFGO@Trigger_Damage?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+616]
	call	eax
	add	esp, 16					; 00000010H
$LN1@Enemy_Seen:

; 304  : 			}
; 305  : 			SetExplosionObj(0);

	push	0
	call	DWORD PTR ?SetExplosionObj@@3P6AXPAVScriptableGameObj@@@ZA ; SetExplosionObj
	add	esp, 4
$LN3@Enemy_Seen:
$LN9@Enemy_Seen:

; 306  : 			return; //the mine is dead, end now
; 307  : 		}
; 308  : 	}
; 309  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Enemy_Seen@RA_Mine@@EAEXPAVScriptableGameObj@@0@Z ENDP	; RA_Mine::Enemy_Seen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_Mine@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_Mine@@EAEXPAVScriptableGameObj@@HH0@Z PROC	; RA_Mine::Custom, COMDAT
; _this$ = ecx

; 242  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 243  : 	if (type == CUSTOM_EVENT_VEHICLE_DRIVER)

	cmp	DWORD PTR _type$[ebp], 1000000037	; 3b9aca25H
	jne	$LN2@Custom

; 244  : 	{
; 245  : 		if (ownerID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN3@Custom

; 246  : 		{
; 247  : 			Commands->Send_Custom_Event(obj,sender,CUSTOM_EVENT_VHEICLE_DRIVER_ID,Commands->Get_ID(Get_GameObj(ownerID)),0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	?Get_GameObj@@YAPAVScriptableGameObj@@H@Z ; Get_GameObj
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+108]
	call	eax
	add	esp, 4
	push	eax
	push	1000000038				; 3b9aca26H
	mov	ecx, DWORD PTR _sender$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+140]
	call	ecx
	add	esp, 20					; 00000014H

; 248  : 		}
; 249  : 		else

	jmp	SHORT $LN2@Custom
$LN3@Custom:

; 250  : 		{
; 251  : 			Commands->Send_Custom_Event(obj,sender,CUSTOM_EVENT_VHEICLE_DRIVER_ID,0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	1000000038				; 3b9aca26H
	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN2@Custom:

; 252  : 		}
; 253  : 	}
; 254  : 	if (type == 656565) //Is the mine manager saying something?

	cmp	DWORD PTR _type$[ebp], 656565		; 000a04b5H
	jne	SHORT $LN1@Custom

; 255  : 	{
; 256  : 		ownerID = Get_Player_ID(Commands->Find_Object(param));

	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	call	?Get_Player_ID@@YAJPAVScriptableGameObj@@@Z ; Get_Player_ID
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax

; 257  : 		Commands->Set_Player_Type(obj, Commands->Get_Player_Type(Commands->Find_Object(param)));

	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+248]
	call	ecx
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+252]
	call	ecx
	add	esp, 8

; 258  : 		team = Commands->Get_Player_Type(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], eax
$LN1@Custom:

; 259  : 	}
; 260  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_Mine@@EAEXPAVScriptableGameObj@@HH0@Z ENDP	; RA_Mine::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Mine@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_at_check$ = -12					; size = 4
_ap_check$ = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Mine@@EAEXPAVScriptableGameObj@@@Z PROC	; RA_Mine::Created, COMDAT
; _this$ = ecx

; 213  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 214  : 	//Copied Code: I assume this 'activates' the mine or something...
; 215  : 	Commands->Enable_Hibernation(obj,false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+568]
	call	edx
	add	esp, 8

; 216  : 	Commands->Innate_Enable(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+440]
	call	edx
	add	esp, 4

; 217  : 	Commands->Enable_Enemy_Seen(obj,true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+300]
	call	edx
	add	esp, 8

; 218  : 	team = Commands->Get_Player_Type(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], eax

; 219  : 	int ap_check;
; 220  : 	int at_check;
; 221  : 	ap_check = Get_Int_Parameter("Is_Anti-Personnel");

	push	OFFSET ??_C@_0BC@CBHFNPK@Is_Anti?9Personnel?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _ap_check$[ebp], eax

; 222  : 	at_check = Get_Int_Parameter("Is_Anti-Tank");

	push	OFFSET ??_C@_0N@JAJHEDOP@Is_Anti?9Tank?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	mov	DWORD PTR _at_check$[ebp], eax

; 223  : 	if (!ap_check)

	cmp	DWORD PTR _ap_check$[ebp], 0
	jne	SHORT $LN4@Created

; 224  : 	{
; 225  : 		AP_mine = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0

; 226  : 	}
; 227  : 	else

	jmp	SHORT $LN3@Created
$LN4@Created:

; 228  : 	{
; 229  : 		AP_mine = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 1
$LN3@Created:

; 230  : 	}
; 231  : 	if (!at_check)

	cmp	DWORD PTR _at_check$[ebp], 0
	jne	SHORT $LN2@Created

; 232  : 	{
; 233  : 		AT_mine = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+29], 0

; 234  : 	}
; 235  : 	else

	jmp	SHORT $LN5@Created
$LN2@Created:

; 236  : 	{
; 237  : 		AT_mine = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+29], 1
$LN5@Created:

; 238  : 	}
; 239  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Mine@@EAEXPAVScriptableGameObj@@@Z ENDP	; RA_Mine::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_MineLayer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_MineLayer@@UAEPAXI@Z PROC			; RA_MineLayer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_MineLayer@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_MineLayer@@UAEPAXI@Z ENDP			; RA_MineLayer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_MineLayer@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_MineLayer@@UAE@XZ PROC				; RA_MineLayer::~RA_MineLayer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_MineLayer@@UAE@XZ ENDP				; RA_MineLayer::~RA_MineLayer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_MineLayer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_MineLayer@@QAE@XZ PROC				; RA_MineLayer::RA_MineLayer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_MineLayer@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_MineLayer@@QAE@XZ ENDP				; RA_MineLayer::RA_MineLayer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Register_Auto_Save_Variables@RA_MineLayer@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@RA_MineLayer@@UAEXXZ PROC	; RA_MineLayer::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 206  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 	Auto_Save_Variable(&driverID,4,1);

	push	1
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Auto_Save_Variable@ScriptImpClass@@QAEXPAXHH@Z ; ScriptImpClass::Auto_Save_Variable

; 208  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@RA_MineLayer@@UAEXXZ ENDP	; RA_MineLayer::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Damaged@RA_MineLayer@@EAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
_hitter$1 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_amount$ = 16						; size = 4
?Damaged@RA_MineLayer@@EAEXPAVScriptableGameObj@@0M@Z PROC ; RA_MineLayer::Damaged, COMDAT
; _this$ = ecx

; 190  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 191  : 	if (driverID) //If there's no driver, do nothing

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN1@Damaged

; 192  : 	{
; 193  : 		int hitter; //This will store the ID of the damager
; 194  : 		hitter = Commands->Get_ID(damager);

	mov	eax, DWORD PTR _damager$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	DWORD PTR _hitter$1[ebp], eax

; 195  : 		if (hitter == driverID)//checking if the driver 'shot' the vehicle

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hitter$1[ebp]
	cmp	ecx, DWORD PTR [eax+28]
	jne	SHORT $LN1@Damaged

; 196  : 		{
; 197  : 			if (!amount)//checking if precise ammount of damage was done

	movss	xmm0, DWORD PTR _amount$[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN1@Damaged

; 198  : 			{
; 199  : 				Commands->Send_Custom_Event(obj, Commands->Find_Object(Get_Int_Parameter("Mine_Manager_ID")), 300300, driverID, 0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	push	300300					; 0004950cH
	push	OFFSET ??_C@_0BA@FMFKJJDO@Mine_Manager_ID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+140]
	call	eax
	add	esp, 20					; 00000014H
$LN1@Damaged:

; 200  : 			}
; 201  : 		}
; 202  : 	}
; 203  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@RA_MineLayer@@EAEXPAVScriptableGameObj@@0M@Z ENDP ; RA_MineLayer::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Custom@RA_MineLayer@@EAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@RA_MineLayer@@EAEXPAVScriptableGameObj@@HH0@Z PROC ; RA_MineLayer::Custom, COMDAT
; _this$ = ecx

; 172  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 173  : 	if (type == CUSTOM_EVENT_VEHICLE_ENTERED)

	cmp	DWORD PTR _type$[ebp], 1000000028	; 3b9aca1cH
	jne	SHORT $LN4@Custom

; 174  : 	{
; 175  : 		if (!driverID)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN4@Custom

; 176  : 		{
; 177  : 			driverID = Commands->Get_ID(sender);

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
$LN4@Custom:

; 178  : 		}
; 179  : 	}
; 180  : 	if (type == CUSTOM_EVENT_VEHICLE_EXITED)

	cmp	DWORD PTR _type$[ebp], 1000000029	; 3b9aca1dH
	jne	SHORT $LN5@Custom

; 181  : 	{
; 182  : 		if (driverID == Commands->Get_ID(sender))

	mov	eax, DWORD PTR _sender$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+28], eax
	jne	SHORT $LN5@Custom

; 183  : 		{
; 184  : 			driverID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN5@Custom:

; 185  : 		}
; 186  : 	}
; 187  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@RA_MineLayer@@EAEXPAVScriptableGameObj@@HH0@Z ENDP ; RA_MineLayer::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_MineLayer@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_MineLayer@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_MineLayer::Created, COMDAT
; _this$ = ecx

; 167  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 168  : 	driverID = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 169  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_MineLayer@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_MineLayer::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Helipad_Zone@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Helipad_Zone@@UAEPAXI@Z PROC			; RA_Helipad_Zone::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Helipad_Zone@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Helipad_Zone@@UAEPAXI@Z ENDP			; RA_Helipad_Zone::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Helipad_Zone@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Helipad_Zone@@UAE@XZ PROC				; RA_Helipad_Zone::~RA_Helipad_Zone, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Helipad_Zone@@UAE@XZ ENDP				; RA_Helipad_Zone::~RA_Helipad_Zone
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Helipad_Zone@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Helipad_Zone@@QAE@XZ PROC				; RA_Helipad_Zone::RA_Helipad_Zone, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Helipad_Zone@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Helipad_Zone@@QAE@XZ ENDP				; RA_Helipad_Zone::RA_Helipad_Zone
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Helipad_Zone@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
$T1 = -120						; size = 12
$T2 = -108						; size = 12
_distance$ = -32					; size = 4
_pos2$ = -28						; size = 12
_pos1$ = -16						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Helipad_Zone@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_Helipad_Zone::Timer_Expired, COMDAT
; _this$ = ecx

; 142  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 120				; 00000078H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 	//Distance checking code copied from RA_Repair_Script
; 144  : 	Vector3 pos1;

	lea	ecx, DWORD PTR _pos1$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 145  : 	Vector3 pos2;

	lea	ecx, DWORD PTR _pos2$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 146  : 	float distance;
; 147  : 	pos1 = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos1$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 148  : 	pos2 = Commands->Get_Position(Commands->Find_Object(number));

	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+64]
	call	edx
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos2$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 149  : 	distance = Commands->Get_Distance(pos1,pos2);

	lea	eax, DWORD PTR _pos2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pos1$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR _distance$[ebp]

; 150  : 	if ((distance <= 10.0) && (Get_Vehicle_Driver(Commands->Find_Object(number)))) //reloads vehicle up to 10m from zone center

	cvtss2sd xmm0, DWORD PTR _distance$[ebp]
	movsd	xmm1, QWORD PTR __real@4024000000000000
	comisd	xmm1, xmm0
	jb	$LN4@Timer_Expi
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	call	?Get_Vehicle_Driver@@YAPAVScriptableGameObj@@PAV1@@Z ; Get_Vehicle_Driver
	add	esp, 4
	test	eax, eax
	je	$LN4@Timer_Expi

; 151  : 	{
; 152  : 		if (Commands->Get_Preset_ID(Commands->Find_Object(number)) == Get_Int_Parameter("Apache_Preset_ID"))

	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+112]
	call	ecx
	add	esp, 4
	mov	esi, eax
	push	OFFSET ??_C@_0BB@DJDJOOPC@Apache_Preset_ID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	esi, eax
	jne	SHORT $LN3@Timer_Expi

; 153  : 		{
; 154  : 			Commands->Give_PowerUp(Commands->Find_Object(number),Get_Parameter("Apache_Reload_Powerup"),false);

	push	0
	push	OFFSET ??_C@_0BG@MGOLCACJ@Apache_Reload_Powerup?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+432]
	call	ecx
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@Timer_Expi
$LN3@Timer_Expi:

; 155  : 		}
; 156  : 		else if (Commands->Get_Preset_ID(Commands->Find_Object(number)) == Get_Int_Parameter("Hind_Preset_ID"))

	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+112]
	call	ecx
	add	esp, 4
	mov	esi, eax
	push	OFFSET ??_C@_0P@DFEDGBNO@Hind_Preset_ID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	esi, eax
	jne	SHORT $LN1@Timer_Expi

; 157  : 		{
; 158  : 			Commands->Give_PowerUp(Commands->Find_Object(number),Get_Parameter("Hind_Reload_Powerup"),false);

	push	0
	push	OFFSET ??_C@_0BE@ICDDOGML@Hind_Reload_Powerup?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDPBD@Z ; ScriptImpClass::Get_Parameter
	push	eax
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+432]
	call	ecx
	add	esp, 12					; 0000000cH
$LN1@Timer_Expi:

; 159  : 		}
; 160  : 		Commands->Start_Timer(obj, this, Get_Float_Parameter("Reload_Interval"), number);

	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	push	OFFSET ??_C@_0BA@DBPAPOF@Reload_Interval?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+128]
	call	ecx
	add	esp, 16					; 00000010H
$LN4@Timer_Expi:

; 161  : 	}
; 162  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_Helipad_Zone@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Helipad_Zone::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Entered@RA_Helipad_Zone@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_enterer$ = 12						; size = 4
?Entered@RA_Helipad_Zone@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Helipad_Zone::Entered, COMDAT
; _this$ = ecx

; 134  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 135  : 	if (Commands->Get_Player_Type(enterer) == Get_Int_Parameter("TeamSelection"))

	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	esi, eax
	push	OFFSET ??_C@_0O@ENHMDGPL@TeamSelection?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	esi, eax
	jne	SHORT $LN1@Entered

; 136  : 	{
; 137  : 		Commands->Start_Timer(obj, this, Get_Float_Parameter("Reload_Interval"), Commands->Get_ID(enterer));

	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BA@DBPAPOF@Reload_Interval?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Float_Parameter@ScriptImpClass@@QAEMPBD@Z ; ScriptImpClass::Get_Float_Parameter
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN1@Entered:

; 138  : 	}
; 139  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Entered@RA_Helipad_Zone@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Helipad_Zone::Entered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Infantry_NotSpy@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Infantry_NotSpy@@UAEPAXI@Z PROC			; RA_Infantry_NotSpy::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Infantry_NotSpy@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Infantry_NotSpy@@UAEPAXI@Z ENDP			; RA_Infantry_NotSpy::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Infantry_NotSpy@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Infantry_NotSpy@@UAE@XZ PROC			; RA_Infantry_NotSpy::~RA_Infantry_NotSpy, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Infantry_NotSpy@@UAE@XZ ENDP			; RA_Infantry_NotSpy::~RA_Infantry_NotSpy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Infantry_NotSpy@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Infantry_NotSpy@@QAE@XZ PROC			; RA_Infantry_NotSpy::RA_Infantry_NotSpy, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Infantry_NotSpy@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Infantry_NotSpy@@QAE@XZ ENDP			; RA_Infantry_NotSpy::RA_Infantry_NotSpy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Infantry_NotSpy@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Infantry_NotSpy@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Infantry_NotSpy::Created, COMDAT
; _this$ = ecx

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 128  : 	Commands->Set_Is_Visible(obj,true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+624]
	call	edx
	add	esp, 8

; 129  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Infantry_NotSpy@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Infantry_NotSpy::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Infantry_Spy@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Infantry_Spy@@UAEPAXI@Z PROC			; RA_Infantry_Spy::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Infantry_Spy@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Infantry_Spy@@UAEPAXI@Z ENDP			; RA_Infantry_Spy::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Infantry_Spy@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Infantry_Spy@@UAE@XZ PROC				; RA_Infantry_Spy::~RA_Infantry_Spy, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Infantry_Spy@@UAE@XZ ENDP				; RA_Infantry_Spy::~RA_Infantry_Spy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Infantry_Spy@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Infantry_Spy@@QAE@XZ PROC				; RA_Infantry_Spy::RA_Infantry_Spy, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Infantry_Spy@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Infantry_Spy@@QAE@XZ ENDP				; RA_Infantry_Spy::RA_Infantry_Spy
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Detach@RA_Infantry_Spy@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Detach@RA_Infantry_Spy@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Infantry_Spy::Detach, COMDAT
; _this$ = ecx

; 116  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 117  : 	ScriptImpClass::Detach(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Detach@ScriptImpClass@@MAEXPAVScriptableGameObj@@@Z ; ScriptImpClass::Detach

; 118  : 	if (Exe != 4)

	cmp	DWORD PTR ?Exe@@3HA, 4			; Exe
	je	SHORT $LN2@Detach

; 119  : 	{
; 120  : 		Commands->Set_Is_Visible(obj,true);

	push	1
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+624]
	call	edx
	add	esp, 8
$LN2@Detach:

; 121  : 	}
; 122  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Detach@RA_Infantry_Spy@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Infantry_Spy::Detach
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Created@RA_Infantry_Spy@@EAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@RA_Infantry_Spy@@EAEXPAVScriptableGameObj@@@Z PROC ; RA_Infantry_Spy::Created, COMDAT
; _this$ = ecx

; 111  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 112  : 	Commands->Set_Is_Visible(obj,false);

	push	0
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+624]
	call	edx
	add	esp, 8

; 113  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@RA_Infantry_Spy@@EAEXPAVScriptableGameObj@@@Z ENDP ; RA_Infantry_Spy::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Repair_Script@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Repair_Script@@UAEPAXI@Z PROC			; RA_Repair_Script::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Repair_Script@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Repair_Script@@UAEPAXI@Z ENDP			; RA_Repair_Script::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Repair_Script@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Repair_Script@@UAE@XZ PROC			; RA_Repair_Script::~RA_Repair_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Repair_Script@@UAE@XZ ENDP			; RA_Repair_Script::~RA_Repair_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Repair_Script@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Repair_Script@@QAE@XZ PROC			; RA_Repair_Script::RA_Repair_Script, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Repair_Script@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Repair_Script@@QAE@XZ ENDP			; RA_Repair_Script::RA_Repair_Script
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Timer_Expired@RA_Repair_Script@@EAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
$T1 = -136						; size = 12
$T2 = -124						; size = 12
_Shield_Strength$3 = -48				; size = 4
_Max_Shield_Strength$4 = -44				; size = 4
_Health$5 = -40						; size = 4
_Max_Health$6 = -36					; size = 4
_distance$ = -32					; size = 4
_pos2$ = -28						; size = 12
_pos1$ = -16						; size = 12
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@RA_Repair_Script@@EAEXPAVScriptableGameObj@@H@Z PROC ; RA_Repair_Script::Timer_Expired, COMDAT
; _this$ = ecx

; 41   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 136				; 00000088H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 42   : 	Vector3 pos1;

	lea	ecx, DWORD PTR _pos1$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 43   : 	Vector3 pos2;

	lea	ecx, DWORD PTR _pos2$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 44   : 	float distance;
; 45   : 	pos1 = Commands->Get_Position(obj);

	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+64]
	call	eax
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos1$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 46   : 	pos2 = Commands->Get_Position(Commands->Find_Object(number));

	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+64]
	call	edx
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _pos2$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 47   : 	distance = Commands->Get_Distance(pos1,pos2);

	lea	eax, DWORD PTR _pos2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pos1$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+256]
	call	eax
	add	esp, 8
	fstp	DWORD PTR _distance$[ebp]

; 48   : 	if (distance <= 10.0)

	cvtss2sd xmm0, DWORD PTR _distance$[ebp]
	movsd	xmm1, QWORD PTR __real@4024000000000000
	comisd	xmm1, xmm0
	jb	$LN3@Timer_Expi

; 49   : 	{
; 50   : 		float Max_Health = Commands->Get_Max_Health(Commands->Find_Object(number));

	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+224]
	call	ecx
	add	esp, 4
	fstp	DWORD PTR _Max_Health$6[ebp]

; 51   : 		float Health = Commands->Get_Health(Commands->Find_Object(number));

	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+220]
	call	ecx
	add	esp, 4
	fstp	DWORD PTR _Health$5[ebp]

; 52   : 		float Max_Shield_Strength = Commands->Get_Max_Shield_Strength(Commands->Find_Object(number));

	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+236]
	call	ecx
	add	esp, 4
	fstp	DWORD PTR _Max_Shield_Strength$4[ebp]

; 53   : 		float Shield_Strength = Commands->Get_Shield_Strength(Commands->Find_Object(number));

	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+232]
	call	ecx
	add	esp, 4
	fstp	DWORD PTR _Shield_Strength$3[ebp]

; 54   : 		if (Health < Max_Health)

	movss	xmm0, DWORD PTR _Max_Health$6[ebp]
	comiss	xmm0, DWORD PTR _Health$5[ebp]
	jbe	SHORT $LN2@Timer_Expi

; 55   : 		{
; 56   : 			Commands->Set_Health(Commands->Find_Object(number), Health + (float)40.0);

	movss	xmm0, DWORD PTR _Health$5[ebp]
	addss	xmm0, DWORD PTR __real@42200000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+228]
	call	ecx
	add	esp, 8
$LN2@Timer_Expi:

; 57   : 		}
; 58   : 		if (Shield_Strength < Max_Shield_Strength)

	movss	xmm0, DWORD PTR _Max_Shield_Strength$4[ebp]
	comiss	xmm0, DWORD PTR _Shield_Strength$3[ebp]
	jbe	SHORT $LN1@Timer_Expi

; 59   : 		{
; 60   : 			Commands->Set_Shield_Strength(Commands->Find_Object(number), Shield_Strength + (float)40.0);

	movss	xmm0, DWORD PTR _Shield_Strength$3[ebp]
	addss	xmm0, DWORD PTR __real@42200000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+240]
	call	ecx
	add	esp, 8
$LN1@Timer_Expi:

; 61   : 		}
; 62   : 		Commands->Start_Timer(obj, this, 1.0, number);

	mov	eax, DWORD PTR _number$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _obj$[ebp]
	push	edx
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+128]
	call	ecx
	add	esp, 16					; 00000010H
$LN3@Timer_Expi:

; 63   : 	}
; 64   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@RA_Repair_Script@@EAEXPAVScriptableGameObj@@H@Z ENDP ; RA_Repair_Script::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Entered@RA_Repair_Script@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
tv78 = -76						; size = 4
_preset$1 = -8						; size = 4
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_enterer$ = 12						; size = 4
?Entered@RA_Repair_Script@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Repair_Script::Entered, COMDAT
; _this$ = ecx

; 66   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 67   : 	if (Commands->Get_Player_Type(enterer) == Get_Int_Parameter("TeamSelection"))

	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	add	esp, 4
	mov	esi, eax
	push	OFFSET ??_C@_0O@ENHMDGPL@TeamSelection?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	cmp	esi, eax
	jne	SHORT $LN2@Entered

; 68   : 	{
; 69   : 		int preset = Commands->Get_Preset_ID(enterer);

	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+112]
	call	edx
	add	esp, 4
	mov	DWORD PTR _preset$1[ebp], eax

; 70   : 		switch(preset)

	mov	eax, DWORD PTR _preset$1[ebp]
	mov	DWORD PTR tv78[ebp], eax
	mov	ecx, DWORD PTR tv78[ebp]
	sub	ecx, 82080019				; 04e47113H
	mov	DWORD PTR tv78[ebp], ecx
	cmp	DWORD PTR tv78[ebp], 186		; 000000baH
	ja	SHORT $LN2@Entered
	mov	edx, DWORD PTR tv78[ebp]
	movzx	eax, BYTE PTR $LN7@Entered[edx]
	jmp	DWORD PTR $LN8@Entered[eax*4]
$LN1@Entered:

; 71   : 		{
; 72   : 		case 82080019: //Soviet Transport Helicopter
; 73   : 		case 82080024: //Soviet Ore Truck (AI Controlled)
; 74   : 		case 82080026: //Allied Medium Tank
; 75   : 		case 82080029: //Allied Ore Truck (AI Controlled)
; 76   : 		case 82080043: //Allied Apache
; 77   : 		case 82080048: //Allied APC
; 78   : 		case 82080051: //Allied Mobile Artillery
; 79   : 		case 82080052: //Allied Light Tank
; 80   : 		case 82080055: //Soviet Mammoth Tank
; 81   : 		case 82080056: //Soviet Heavy Tank
; 82   : 		case 82080082: //Allied Phase Tank
; 83   : 		case 82080115: //Soviet V2 Launcher
; 84   : 		case 82080121: //Allied Ranger
; 85   : 		case 82080124: //Soviet Hind
; 86   : 		case 82080141: //Allied Ore Truck (Player Controlled)
; 87   : 		case 82080144: //Soviet Ore Truck (Player Controlled)
; 88   : 		case 82080164: //Soviet Tesla Tank
; 89   : 		case 82080178: //Allied Mine Layer
; 90   : 		case 82080181: //Soviet Mine Layer
; 91   : 		case 82080182: //Soviet Demolition Truck
; 92   : 		case 82080183: //Allied Demolition Truck
; 93   : 		case 82080185: //Soviet Attack Sub
; 94   : 		case 82080188: //Soviet MAD Tank
; 95   : 		case 82080189: //Allied Supply Truck
; 96   : 		case 82080190: //Soviet Supply Truck
; 97   : 		case 82080192: //Allied Destroyer
; 98   : 		case 82080193: //Allied Gunboat
; 99   : 		case 82080194: //Allied Naval Transport
; 100  : 		case 82080195: //Soviet Missile Sub
; 101  : 		case 82080196: //Soviet Naval Transport
; 102  : 		case 82080205: //Allied Mobile Gap
; 103  : 			Commands->Start_Timer(obj, this, 1.0, Commands->Get_ID(enterer));

	mov	eax, DWORD PTR _enterer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	edx, DWORD PTR [ecx+108]
	call	edx
	add	esp, 4
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+128]
	call	eax
	add	esp, 16					; 00000010H
$LN2@Entered:

; 104  : 		}
; 105  : 	}
; 106  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN8@Entered:
	DD	$LN1@Entered
	DD	$LN2@Entered
$LN7@Entered:
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	0
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	0
	DB	0
	DB	1
	DB	1
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	0
	DB	0
	DB	0
	DB	1
	DB	0
	DB	1
	DB	1
	DB	0
	DB	0
	DB	0
	DB	1
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
?Entered@RA_Repair_Script@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Repair_Script::Entered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GRA_Repair_Controller@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRA_Repair_Controller@@UAEPAXI@Z PROC		; RA_Repair_Controller::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RA_Repair_Controller@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRA_Repair_Controller@@UAEPAXI@Z ENDP		; RA_Repair_Controller::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1RA_Repair_Controller@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RA_Repair_Controller@@UAE@XZ PROC			; RA_Repair_Controller::~RA_Repair_Controller, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1RA_Repair_Controller@@UAE@XZ ENDP			; RA_Repair_Controller::~RA_Repair_Controller
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0RA_Repair_Controller@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RA_Repair_Controller@@QAE@XZ PROC			; RA_Repair_Controller::RA_Repair_Controller, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RA_Repair_Controller@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RA_Repair_Controller@@QAE@XZ ENDP			; RA_Repair_Controller::RA_Repair_Controller
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\renalert.cpp
;	COMDAT ?Killed@RA_Repair_Controller@@EAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_killer$ = 12						; size = 4
?Killed@RA_Repair_Controller@@EAEXPAVScriptableGameObj@@0@Z PROC ; RA_Repair_Controller::Killed, COMDAT
; _this$ = ecx

; 34   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 	Commands->Destroy_Object(Commands->Find_Object(Get_Int_Parameter("ScriptZoneID")));

	push	OFFSET ??_C@_0N@PHKBDNCI@ScriptZoneID?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	push	eax
	mov	eax, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR ?Commands@@3PAUScriptCommands@@A ; Commands
	mov	eax, DWORD PTR [edx+92]
	call	eax
	add	esp, 4

; 36   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@RA_Repair_Controller@@EAEXPAVScriptableGameObj@@0@Z ENDP ; RA_Repair_Controller::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EJFW_Object_Created_Hook_Base@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EJFW_Object_Created_Hook_Base@@UAEPAXI@Z PROC	; JFW_Object_Created_Hook_Base::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1JFW_Object_Created_Hook_Base@@UAE@XZ ; JFW_Object_Created_Hook_Base::~JFW_Object_Created_Hook_Base
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	36					; 00000024H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JFW_Object_Created_Hook_Base@@UAE@XZ	; JFW_Object_Created_Hook_Base::~JFW_Object_Created_Hook_Base
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EJFW_Object_Created_Hook_Base@@UAEPAXI@Z ENDP	; JFW_Object_Created_Hook_Base::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJFW_Object_Created_Hook_Base@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJFW_Object_Created_Hook_Base@@UAEPAXI@Z PROC	; JFW_Object_Created_Hook_Base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JFW_Object_Created_Hook_Base@@UAE@XZ	; JFW_Object_Created_Hook_Base::~JFW_Object_Created_Hook_Base
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJFW_Object_Created_Hook_Base@@UAEPAXI@Z ENDP	; JFW_Object_Created_Hook_Base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4JFW_Object_Created_Hook_Base@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4JFW_Object_Created_Hook_Base@@QAEAAV0@ABV0@@Z PROC	; JFW_Object_Created_Hook_Base::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4ScriptImpClass@@QAEAAV0@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4JFW_Object_Created_Hook_Base@@QAEAAV0@ABV0@@Z ENDP	; JFW_Object_Created_Hook_Base::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JFW_Object_Created_Hook_Base@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0JFW_Object_Created_Hook_Base@@QAE@ABV0@@Z PROC	; JFW_Object_Created_Hook_Base::JFW_Object_Created_Hook_Base, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JFW_Object_Created_Hook_Base@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0JFW_Object_Created_Hook_Base@@QAE@ABV0@@Z ENDP	; JFW_Object_Created_Hook_Base::JFW_Object_Created_Hook_Base
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_tt.h
;	COMDAT ??0JFW_Object_Created_Hook_Base@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JFW_Object_Created_Hook_Base@@QAE@XZ PROC		; JFW_Object_Created_Hook_Base::JFW_Object_Created_Hook_Base, COMDAT
; _this$ = ecx

; 556  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JFW_Object_Created_Hook_Base@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 557  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JFW_Object_Created_Hook_Base@@QAE@XZ ENDP		; JFW_Object_Created_Hook_Base::JFW_Object_Created_Hook_Base
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EMultiKeyHookScriptImpClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EMultiKeyHookScriptImpClass@@UAEPAXI@Z PROC		; MultiKeyHookScriptImpClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1MultiKeyHookScriptImpClass@@UAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MultiKeyHookScriptImpClass@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EMultiKeyHookScriptImpClass@@UAEPAXI@Z ENDP		; MultiKeyHookScriptImpClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GMultiKeyHookScriptImpClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GMultiKeyHookScriptImpClass@@UAEPAXI@Z PROC		; MultiKeyHookScriptImpClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MultiKeyHookScriptImpClass@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMultiKeyHookScriptImpClass@@UAEPAXI@Z ENDP		; MultiKeyHookScriptImpClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4MultiKeyHookScriptImpClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4MultiKeyHookScriptImpClass@@QAEAAV0@ABV0@@Z PROC	; MultiKeyHookScriptImpClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4ScriptImpClass@@QAEAAV0@ABV0@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEAAV0@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4MultiKeyHookScriptImpClass@@QAEAAV0@ABV0@@Z ENDP	; MultiKeyHookScriptImpClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0MultiKeyHookScriptImpClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0MultiKeyHookScriptImpClass@@QAE@ABV0@@Z PROC		; MultiKeyHookScriptImpClass::MultiKeyHookScriptImpClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MultiKeyHookScriptImpClass@@6B@
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0MultiKeyHookScriptImpClass@@QAE@ABV0@@Z ENDP		; MultiKeyHookScriptImpClass::MultiKeyHookScriptImpClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1MultiKeyHookScriptImpClass@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1MultiKeyHookScriptImpClass@@UAE@XZ PROC		; MultiKeyHookScriptImpClass::~MultiKeyHookScriptImpClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??1?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE@XZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::~SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1MultiKeyHookScriptImpClass@@UAE@XZ ENDP		; MultiKeyHookScriptImpClass::~MultiKeyHookScriptImpClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0MultiKeyHookScriptImpClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0MultiKeyHookScriptImpClass@@QAE@XZ PROC		; MultiKeyHookScriptImpClass::MultiKeyHookScriptImpClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MultiKeyHookScriptImpClass@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@XZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0MultiKeyHookScriptImpClass@@QAE@XZ ENDP		; MultiKeyHookScriptImpClass::MultiKeyHookScriptImpClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAXI@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE@XZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::~SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAXI@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEAAV0@ABV0@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEAAV0@ABV0@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@ABV0@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@ABV0@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Get_Count@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBEIXZ
_TEXT	SEGMENT
_node$1 = -12						; size = 4
_count$ = -8						; size = 4
_this$ = -4						; size = 4
?Get_Count@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBEIXZ PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Get_Count, COMDAT
; _this$ = ecx

; 302  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 303  : 		uint32 count = 0;

	mov	DWORD PTR _count$[ebp], 0

; 304  : 
; 305  : 		for (SLNode<T>* node = HeadNode; node; node = node->Next())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _node$1[ebp], ecx
	jmp	SHORT $LN3@Get_Count
$LN2@Get_Count:
	mov	ecx, DWORD PTR _node$1[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	DWORD PTR _node$1[ebp], eax
$LN3@Get_Count:
	cmp	DWORD PTR _node$1[ebp], 0
	je	SHORT $LN1@Get_Count

; 306  : 			++count;

	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
	jmp	SHORT $LN2@Get_Count
$LN1@Get_Count:

; 307  : 
; 308  : 		return count;

	mov	eax, DWORD PTR _count$[ebp]

; 309  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Count@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBEIXZ ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Get_Count
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Is_Empty@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBE_NXZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?Is_Empty@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBE_NXZ PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Is_Empty, COMDAT
; _this$ = ecx

; 296  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 297  : 		return !HeadNode;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN3@Is_Empty
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@Is_Empty
$LN3@Is_Empty:
	mov	DWORD PTR tv66[ebp], 0
$LN4@Is_Empty:
	mov	al, BYTE PTR tv66[ebp]

; 298  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Is_Empty@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UBE_NXZ ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Is_Empty
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Insert_After@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z
_TEXT	SEGMENT
tv140 = -88						; size = 4
tv142 = -84						; size = 4
$T1 = -80						; size = 4
_temp$2 = -12						; size = 4
_cur$ = -8						; size = 4
_this$ = -4						; size = 4
_newnode$ = 8						; size = 4
_oldnode$ = 12						; size = 4
?Insert_After@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Insert_After, COMDAT
; _this$ = ecx

; 267  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 268  : 		if (newnode == NULL)

	cmp	DWORD PTR _newnode$[ebp], 0
	jne	SHORT $LN8@Insert_Aft

; 269  : 		{
; 270  : 			return false;

	xor	al, al
	jmp	$LN9@Insert_Aft
$LN8@Insert_Aft:

; 271  : 		}
; 272  : 		if (oldnode == NULL || HeadNode == NULL)

	cmp	DWORD PTR _oldnode$[ebp], 0
	je	SHORT $LN6@Insert_Aft
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN7@Insert_Aft
$LN6@Insert_Aft:

; 273  : 		{
; 274  : 			return(Add_Head(newnode));

	mov	eax, DWORD PTR _newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	jmp	$LN9@Insert_Aft
$LN7@Insert_Aft:

; 275  : 		}
; 276  : 		SLNode<T> *cur;
; 277  : 		for (cur = HeadNode; cur && cur->Data() != oldnode; cur = cur->Next())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cur$[ebp], ecx
	jmp	SHORT $LN5@Insert_Aft
$LN4@Insert_Aft:
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	DWORD PTR _cur$[ebp], eax
$LN5@Insert_Aft:
	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN3@Insert_Aft
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	cmp	eax, DWORD PTR _oldnode$[ebp]
	je	SHORT $LN3@Insert_Aft

; 278  : 		{
; 279  : 		}

	jmp	SHORT $LN4@Insert_Aft
$LN3@Insert_Aft:

; 280  : 		if (cur != NULL  && cur->Data() == oldnode)

	cmp	DWORD PTR _cur$[ebp], 0
	je	$LN2@Insert_Aft
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	cmp	eax, DWORD PTR _oldnode$[ebp]
	jne	$LN2@Insert_Aft

; 281  : 		{
; 282  : 			if (cur == TailNode)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cur$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@Insert_Aft

; 283  : 			{
; 284  : 				return(Add_Tail(newnode));

	mov	eax, DWORD PTR _newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	jmp	$LN9@Insert_Aft
$LN1@Insert_Aft:

; 285  : 			}
; 286  : 			SLNode<T> *temp = new SLNode<T>(newnode);

	push	OFFSET ??_C@_0EN@HIHNAGN@SList?$DMstruct?5MultiKeyHookScriptI@
	push	286					; 0000011eH
	push	OFFSET ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN14@Insert_Aft
	xor	ecx, ecx
	jne	SHORT $LN11@Insert_Aft
	push	286					; 0000011eH
	push	OFFSET ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN11@Insert_Aft:
	mov	DWORD PTR tv142[ebp], 0
	jmp	SHORT $LN15@Insert_Aft
$LN14@Insert_Aft:
	push	0
	push	0
	push	0
	push	8
	call	??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z ; AutoPoolClass<GenericSLNode,256>::operator new
	add	esp, 16					; 00000010H
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN12@Insert_Aft
	mov	eax, DWORD PTR _newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN13@Insert_Aft
$LN12@Insert_Aft:
	mov	DWORD PTR tv140[ebp], 0
$LN13@Insert_Aft:
	mov	ecx, DWORD PTR tv140[ebp]
	mov	DWORD PTR tv142[ebp], ecx
$LN15@Insert_Aft:
	mov	edx, DWORD PTR tv142[ebp]
	mov	DWORD PTR _temp$2[ebp], edx

; 287  : 			temp->Set_Next(cur->Next());

	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	push	eax
	mov	ecx, DWORD PTR _temp$2[ebp]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 288  : 			cur->Set_Next(temp);

	mov	eax, DWORD PTR _temp$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 289  : 			return true;

	mov	al, 1
	jmp	SHORT $LN9@Insert_Aft
$LN2@Insert_Aft:

; 290  : 		}
; 291  : 		return false;

	xor	al, al
$LN9@Insert_Aft:

; 292  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Insert_After@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Insert_After
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Insert_Before@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z
_TEXT	SEGMENT
tv145 = -88						; size = 4
tv147 = -84						; size = 4
$T1 = -80						; size = 4
_temp$2 = -12						; size = 4
_cur$ = -8						; size = 4
_this$ = -4						; size = 4
_newnode$ = 8						; size = 4
_oldnode$ = 12						; size = 4
?Insert_Before@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Insert_Before, COMDAT
; _this$ = ecx

; 243  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 244  : 		if (newnode == NULL)

	cmp	DWORD PTR _newnode$[ebp], 0
	jne	SHORT $LN7@Insert_Bef

; 245  : 		{
; 246  : 			return false;

	xor	al, al
	jmp	$LN8@Insert_Bef
$LN7@Insert_Bef:

; 247  : 		}
; 248  : 		if (oldnode == NULL || HeadNode == NULL || HeadNode->Data() == oldnode)

	cmp	DWORD PTR _oldnode$[ebp], 0
	je	SHORT $LN5@Insert_Bef
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN5@Insert_Bef
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	cmp	eax, DWORD PTR _oldnode$[ebp]
	jne	SHORT $LN6@Insert_Bef
$LN5@Insert_Bef:

; 249  : 		{
; 250  : 			return Add_Head(newnode);

	mov	eax, DWORD PTR _newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	jmp	$LN8@Insert_Bef
$LN6@Insert_Bef:

; 251  : 		}
; 252  : 		SLNode<T> *cur;
; 253  : 		for (cur=HeadNode; cur->Next() && cur->Next()->Data() != oldnode; cur=cur->Next())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cur$[ebp], ecx
	jmp	SHORT $LN4@Insert_Bef
$LN3@Insert_Bef:
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	DWORD PTR _cur$[ebp], eax
$LN4@Insert_Bef:
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	test	eax, eax
	je	SHORT $LN2@Insert_Bef
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	ecx, eax
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	cmp	eax, DWORD PTR _oldnode$[ebp]
	je	SHORT $LN2@Insert_Bef

; 254  : 		{
; 255  : 		}

	jmp	SHORT $LN3@Insert_Bef
$LN2@Insert_Bef:

; 256  : 		if (cur->Next() != NULL && cur->Next()->Data() == oldnode)

	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	test	eax, eax
	je	$LN1@Insert_Bef
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	ecx, eax
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	cmp	eax, DWORD PTR _oldnode$[ebp]
	jne	$LN1@Insert_Bef

; 257  : 		{
; 258  : 			SLNode<T> *temp	= new SLNode<T> (newnode);

	push	OFFSET ??_C@_0EO@OJGPEJGC@SList?$DMstruct?5MultiKeyHookScriptI@
	push	258					; 00000102H
	push	OFFSET ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN13@Insert_Bef
	xor	ecx, ecx
	jne	SHORT $LN10@Insert_Bef
	push	258					; 00000102H
	push	OFFSET ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN10@Insert_Bef:
	mov	DWORD PTR tv147[ebp], 0
	jmp	SHORT $LN14@Insert_Bef
$LN13@Insert_Bef:
	push	0
	push	0
	push	0
	push	8
	call	??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z ; AutoPoolClass<GenericSLNode,256>::operator new
	add	esp, 16					; 00000010H
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN11@Insert_Bef
	mov	eax, DWORD PTR _newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
	mov	DWORD PTR tv145[ebp], eax
	jmp	SHORT $LN12@Insert_Bef
$LN11@Insert_Bef:
	mov	DWORD PTR tv145[ebp], 0
$LN12@Insert_Bef:
	mov	ecx, DWORD PTR tv145[ebp]
	mov	DWORD PTR tv147[ebp], ecx
$LN14@Insert_Bef:
	mov	edx, DWORD PTR tv147[ebp]
	mov	DWORD PTR _temp$2[ebp], edx

; 259  : 			temp->Set_Next(cur->Next());

	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	push	eax
	mov	ecx, DWORD PTR _temp$2[ebp]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 260  : 			cur->Set_Next(temp);

	mov	eax, DWORD PTR _temp$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 261  : 			return true;

	mov	al, 1
	jmp	SHORT $LN8@Insert_Bef
$LN1@Insert_Bef:

; 262  : 		}
; 263  : 		return false;

	xor	al, al
$LN8@Insert_Bef:

; 264  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Insert_Before@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@PBU23@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Insert_Before
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Remove_All@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_cur$2 = -12						; size = 4
_next$ = -8						; size = 4
_this$ = -4						; size = 4
?Remove_All@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEXXZ PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_All, COMDAT
; _this$ = ecx

; 231  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 232  : 		SLNode<T> *next;
; 233  : 		for (SLNode<T> *cur = HeadNode; cur; cur = next)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cur$2[ebp], ecx
	jmp	SHORT $LN3@Remove_All
$LN2@Remove_All:
	mov	eax, DWORD PTR _next$[ebp]
	mov	DWORD PTR _cur$2[ebp], eax
$LN3@Remove_All:
	cmp	DWORD PTR _cur$2[ebp], 0
	je	SHORT $LN1@Remove_All

; 234  : 		{
; 235  : 			next = cur->Next();

	mov	ecx, DWORD PTR _cur$2[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	DWORD PTR _next$[ebp], eax

; 236  : 			delete cur;

	push	OFFSET ??_C@_0EL@MPFHHNNA@SList?$DMstruct?5MultiKeyHookScriptI@
	push	236					; 000000ecH
	push	OFFSET ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN7@Remove_All
	xor	ecx, ecx
	jne	SHORT $LN6@Remove_All
	push	236					; 000000ecH
	push	OFFSET ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN6@Remove_All:
	jmp	SHORT $LN8@Remove_All
$LN7@Remove_All:
	mov	eax, DWORD PTR _cur$2[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??3?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAXPAX@Z ; AutoPoolClass<GenericSLNode,256>::operator delete
	add	esp, 4
$LN8@Remove_All:

; 237  : 		}

	jmp	SHORT $LN2@Remove_All
$LN1@Remove_All:

; 238  : 		HeadNode = TailNode = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 239  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Remove_All@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEXXZ ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_All
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Remove@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPBUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z
_TEXT	SEGMENT
tv76 = -81						; size = 1
$T1 = -80						; size = 4
_temp$2 = -12						; size = 4
_cur$ = -8						; size = 4
_this$ = -4						; size = 4
_element$ = 8						; size = 4
?Remove@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPBUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove, COMDAT
; _this$ = ecx

; 202  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 203  : 		if (element == NULL || HeadNode == NULL)

	cmp	DWORD PTR _element$[ebp], 0
	je	SHORT $LN7@Remove
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN8@Remove
$LN7@Remove:

; 204  : 		{
; 205  : 			return false;

	xor	al, al
	jmp	$LN9@Remove
$LN8@Remove:

; 206  : 		}
; 207  : 		if (HeadNode->Data() == element)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	cmp	eax, DWORD PTR _element$[ebp]
	jne	SHORT $LN6@Remove

; 208  : 		{
; 209  : 			return Remove_Head() != NULL ? true : false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	test	eax, eax
	je	SHORT $LN11@Remove
	mov	BYTE PTR tv76[ebp], 1
	jmp	SHORT $LN12@Remove
$LN11@Remove:
	mov	BYTE PTR tv76[ebp], 0
$LN12@Remove:
	mov	al, BYTE PTR tv76[ebp]
	jmp	$LN9@Remove
$LN6@Remove:

; 210  : 		}
; 211  : 		SLNode<T> *cur;
; 212  : 		for (cur = HeadNode; cur->Next() && cur->Next()->Data() != element; cur=cur->Next())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cur$[ebp], ecx
	jmp	SHORT $LN5@Remove
$LN4@Remove:
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	DWORD PTR _cur$[ebp], eax
$LN5@Remove:
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	test	eax, eax
	je	SHORT $LN3@Remove
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	ecx, eax
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	cmp	eax, DWORD PTR _element$[ebp]
	je	SHORT $LN3@Remove

; 213  : 		{
; 214  : 		}

	jmp	SHORT $LN4@Remove
$LN3@Remove:

; 215  : 		if (cur->Next() != NULL && cur->Next()->Data() == element)

	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	test	eax, eax
	je	$LN2@Remove
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	ecx, eax
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	cmp	eax, DWORD PTR _element$[ebp]
	jne	SHORT $LN2@Remove

; 216  : 		{
; 217  : 			SLNode<T> *temp	= cur->Next();

	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	DWORD PTR _temp$2[ebp], eax

; 218  : 			cur->Set_Next(temp->Next());

	mov	ecx, DWORD PTR _temp$2[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 219  : 			if (temp == TailNode)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _temp$2[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@Remove

; 220  : 			{
; 221  : 				TailNode = cur;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN1@Remove:

; 222  : 			}
; 223  : 			delete temp;

	push	OFFSET ??_C@_0EH@CGJBMJBC@SList?$DMstruct?5MultiKeyHookScriptI@
	push	223					; 000000dfH
	push	OFFSET ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN14@Remove
	xor	ecx, ecx
	jne	SHORT $LN13@Remove
	push	223					; 000000dfH
	push	OFFSET ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN13@Remove:
	jmp	SHORT $LN15@Remove
$LN14@Remove:
	mov	eax, DWORD PTR _temp$2[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??3?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAXPAX@Z ; AutoPoolClass<GenericSLNode,256>::operator delete
	add	esp, 4
$LN15@Remove:

; 224  : 			return true;

	mov	al, 1
	jmp	SHORT $LN9@Remove
$LN2@Remove:

; 225  : 		}
; 226  : 		return false;

	xor	al, al
$LN9@Remove:

; 227  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Remove@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPBUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Remove_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ
_TEXT	SEGMENT
tv76 = -76						; size = 4
_data$ = -8						; size = 4
_this$ = -4						; size = 4
?Remove_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_Tail, COMDAT
; _this$ = ecx

; 191  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 192  : 		if (HeadNode == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@Remove_Tai

; 193  : 		{
; 194  : 			return ((T *)NULL);

	xor	eax, eax
	jmp	SHORT $LN2@Remove_Tai
$LN1@Remove_Tai:

; 195  : 		}
; 196  : 		T* data = TailNode->Data();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	mov	DWORD PTR _data$[ebp], eax

; 197  : 		return (Remove(data) ? data : (T*)NULL);

	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@Remove_Tai
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN5@Remove_Tai
$LN4@Remove_Tai:
	mov	DWORD PTR tv76[ebp], 0
$LN5@Remove_Tai:
	mov	eax, DWORD PTR tv76[ebp]
$LN2@Remove_Tai:

; 198  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Remove_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_Tail
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Remove_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_data$ = -12						; size = 4
_temp$ = -8						; size = 4
_this$ = -4						; size = 4
?Remove_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_Head, COMDAT
; _this$ = ecx

; 173  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 174  : 		if (HeadNode == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN2@Remove_Hea

; 175  : 		{
; 176  : 			return ((T* )NULL);

	xor	eax, eax
	jmp	$LN3@Remove_Hea
$LN2@Remove_Hea:

; 177  : 		}
; 178  : 		SLNode<T> *temp = HeadNode;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _temp$[ebp], ecx

; 179  : 		HeadNode = HeadNode->Next();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 180  : 		if (HeadNode == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@Remove_Hea

; 181  : 		{
; 182  : 			TailNode = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
$LN1@Remove_Hea:

; 183  : 		}
; 184  : 		T *data = temp->Data();

	mov	ecx, DWORD PTR _temp$[ebp]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	mov	DWORD PTR _data$[ebp], eax

; 185  : 		delete temp;

	push	OFFSET ??_C@_0EM@PPENJFKC@SList?$DMstruct?5MultiKeyHookScriptI@
	push	185					; 000000b9H
	push	OFFSET ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Remove_Hea
	xor	ecx, ecx
	jne	SHORT $LN5@Remove_Hea
	push	185					; 000000b9H
	push	OFFSET ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN5@Remove_Hea:
	jmp	SHORT $LN7@Remove_Hea
$LN6@Remove_Hea:
	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??3?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAXPAX@Z ; AutoPoolClass<GenericSLNode,256>::operator delete
	add	esp, 4
$LN7@Remove_Hea:

; 186  : 		return data;

	mov	eax, DWORD PTR _data$[ebp]
$LN3@Remove_Hea:

; 187  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Remove_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_Head
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z
_TEXT	SEGMENT
_cur$1 = -8						; size = 4
_this$ = -4						; size = 4
_list$ = 8						; size = 4
?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Tail, COMDAT
; _this$ = ecx

; 159  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 160  : 		if (list.HeadNode == NULL)

	mov	eax, DWORD PTR _list$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN4@Add_Tail

; 161  : 		{
; 162  : 			return false;

	xor	al, al
	jmp	SHORT $LN5@Add_Tail
$LN4@Add_Tail:

; 163  : 		}
; 164  : 		for (SLNode<T> *cur = list.HeadNode; cur; cur = cur->Next()) 

	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cur$1[ebp], ecx
	jmp	SHORT $LN3@Add_Tail
$LN2@Add_Tail:
	mov	ecx, DWORD PTR _cur$1[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	DWORD PTR _cur$1[ebp], eax
$LN3@Add_Tail:
	cmp	DWORD PTR _cur$1[ebp], 0
	je	SHORT $LN1@Add_Tail

; 165  : 		{
; 166  : 			Add_Tail(cur->Data());

	mov	ecx, DWORD PTR _cur$1[ebp]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax

; 167  : 		}

	jmp	SHORT $LN2@Add_Tail
$LN1@Add_Tail:

; 168  : 		return true;

	mov	al, 1
$LN5@Add_Tail:

; 169  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Tail
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z
_TEXT	SEGMENT
tv82 = -84						; size = 4
tv84 = -80						; size = 4
$T1 = -76						; size = 4
_temp$ = -8						; size = 4
_this$ = -4						; size = 4
_data$ = 8						; size = 4
?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Tail, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 140  : 		if (data == NULL)

	cmp	DWORD PTR _data$[ebp], 0
	jne	SHORT $LN3@Add_Tail

; 141  : 		{
; 142  : 			return false;

	xor	al, al
	jmp	$LN4@Add_Tail
$LN3@Add_Tail:

; 143  : 		}
; 144  : 		SLNode<T> *temp = new SLNode<T> (data);

	push	OFFSET ??_C@_0EJ@OIGECPDF@SList?$DMstruct?5MultiKeyHookScriptI@
	push	144					; 00000090H
	push	OFFSET ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN9@Add_Tail
	xor	ecx, ecx
	jne	SHORT $LN6@Add_Tail
	push	144					; 00000090H
	push	OFFSET ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN6@Add_Tail:
	mov	DWORD PTR tv84[ebp], 0
	jmp	SHORT $LN10@Add_Tail
$LN9@Add_Tail:
	push	0
	push	0
	push	0
	push	8
	call	??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z ; AutoPoolClass<GenericSLNode,256>::operator new
	add	esp, 16					; 00000010H
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN7@Add_Tail
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN8@Add_Tail
$LN7@Add_Tail:
	mov	DWORD PTR tv82[ebp], 0
$LN8@Add_Tail:
	mov	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR tv84[ebp], ecx
$LN10@Add_Tail:
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR _temp$[ebp], edx

; 145  : 		if (HeadNode == NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN2@Add_Tail

; 146  : 		{
; 147  : 			HeadNode = TailNode = temp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [edx+4], eax

; 148  : 		}
; 149  : 		else

	jmp	SHORT $LN1@Add_Tail
$LN2@Add_Tail:

; 150  : 		{
; 151  : 			TailNode->Set_Next(temp);

	mov	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 152  : 			TailNode = temp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN1@Add_Tail:

; 153  : 		}
; 154  : 		return true;

	mov	al, 1
$LN4@Add_Tail:

; 155  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Add_Tail@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Tail
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z
_TEXT	SEGMENT
tv90 = -92						; size = 4
tv92 = -88						; size = 4
$T1 = -84						; size = 4
_temp$2 = -16						; size = 4
_cur$3 = -12						; size = 4
_addpoint$ = -8						; size = 4
_this$ = -4						; size = 4
_list$ = 8						; size = 4
?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Head, COMDAT
; _this$ = ecx

; 113  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		if (list.HeadNode == NULL)

	mov	eax, DWORD PTR _list$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN6@Add_Head

; 115  : 		{
; 116  : 			return false;

	xor	al, al
	jmp	$LN7@Add_Head
$LN6@Add_Head:

; 117  : 		}
; 118  : 		SLNode<T> *addpoint = NULL;

	mov	DWORD PTR _addpoint$[ebp], 0

; 119  : 		for (SLNode<T> *cur = list.HeadNode; cur; cur = cur->Next())

	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _cur$3[ebp], ecx
	jmp	SHORT $LN5@Add_Head
$LN4@Add_Head:
	mov	ecx, DWORD PTR _cur$3[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	mov	DWORD PTR _cur$3[ebp], eax
$LN5@Add_Head:
	cmp	DWORD PTR _cur$3[ebp], 0
	je	$LN3@Add_Head

; 120  : 		{
; 121  : 			if (addpoint)

	cmp	DWORD PTR _addpoint$[ebp], 0
	je	$LN2@Add_Head

; 122  : 			{
; 123  : 				SLNode<T> *temp = new SLNode<T>(cur->Data());

	push	OFFSET ??_C@_0EJ@ENMBJFB@SList?$DMstruct?5MultiKeyHookScriptI@
	push	123					; 0000007bH
	push	OFFSET ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN12@Add_Head
	xor	ecx, ecx
	jne	SHORT $LN9@Add_Head
	push	123					; 0000007bH
	push	OFFSET ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN9@Add_Head:
	mov	DWORD PTR tv92[ebp], 0
	jmp	SHORT $LN13@Add_Head
$LN12@Add_Head:
	push	0
	push	0
	push	0
	push	8
	call	??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z ; AutoPoolClass<GenericSLNode,256>::operator new
	add	esp, 16					; 00000010H
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN10@Add_Head
	mov	ecx, DWORD PTR _cur$3[ebp]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN11@Add_Head
$LN10@Add_Head:
	mov	DWORD PTR tv90[ebp], 0
$LN11@Add_Head:
	mov	eax, DWORD PTR tv90[ebp]
	mov	DWORD PTR tv92[ebp], eax
$LN13@Add_Head:
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR _temp$2[ebp], ecx

; 124  : 				temp->Set_Next(addpoint->Next());

	mov	ecx, DWORD PTR _addpoint$[ebp]
	call	?Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAV1@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Next
	push	eax
	mov	ecx, DWORD PTR _temp$2[ebp]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 125  : 				addpoint->Set_Next(temp);

	mov	eax, DWORD PTR _temp$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _addpoint$[ebp]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 126  : 				addpoint = temp;

	mov	eax, DWORD PTR _temp$2[ebp]
	mov	DWORD PTR _addpoint$[ebp], eax

; 127  : 			}
; 128  : 			else

	jmp	SHORT $LN1@Add_Head
$LN2@Add_Head:

; 129  : 			{
; 130  : 				Add_Head(cur->Data());

	mov	ecx, DWORD PTR _cur$3[ebp]
	call	?Data@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QBEPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@XZ ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Data
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 131  : 				addpoint = HeadNode;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _addpoint$[ebp], ecx
$LN1@Add_Head:

; 132  : 			}
; 133  : 		}

	jmp	$LN4@Add_Head
$LN3@Add_Head:

; 134  : 		return true;

	mov	al, 1
$LN7@Add_Head:

; 135  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NAAV1@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Head
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z
_TEXT	SEGMENT
tv82 = -84						; size = 4
tv84 = -80						; size = 4
$T1 = -76						; size = 4
_temp$ = -8						; size = 4
_this$ = -4						; size = 4
_data$ = 8						; size = 4
?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Head, COMDAT
; _this$ = ecx

; 96   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 97   : 		if (!data)

	cmp	DWORD PTR _data$[ebp], 0
	jne	SHORT $LN2@Add_Head

; 98   : 		{
; 99   : 			return false;

	xor	al, al
	jmp	$LN3@Add_Head
$LN2@Add_Head:

; 100  : 		}
; 101  : 		SLNode<T> *temp	= new SLNode<T>(data);

	push	OFFSET ??_C@_0EJ@ENMBJFB@SList?$DMstruct?5MultiKeyHookScriptI@
	push	101					; 00000065H
	push	OFFSET ??_C@_0DB@DFBFLIIO@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN8@Add_Head
	xor	ecx, ecx
	jne	SHORT $LN5@Add_Head
	push	101					; 00000065H
	push	OFFSET ??_C@_1GC@LJHGOLFN@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN5@Add_Head:
	mov	DWORD PTR tv84[ebp], 0
	jmp	SHORT $LN9@Add_Head
$LN8@Add_Head:
	push	0
	push	0
	push	0
	push	8
	call	??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z ; AutoPoolClass<GenericSLNode,256>::operator new
	add	esp, 16					; 00000010H
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN6@Add_Head
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@IAE@PAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN7@Add_Head
$LN6@Add_Head:
	mov	DWORD PTR tv82[ebp], 0
$LN7@Add_Head:
	mov	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR tv84[ebp], ecx
$LN9@Add_Head:
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR _temp$[ebp], edx

; 102  : 		temp->Set_Next(HeadNode);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _temp$[ebp]
	call	?Set_Next@?$SLNode@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAEXPAV1@@Z ; SLNode<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Set_Next

; 103  : 		HeadNode = temp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 104  : 		if (!TailNode)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN1@Add_Head

; 105  : 		{
; 106  : 			TailNode = temp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN1@Add_Head:

; 107  : 		}
; 108  : 		return true;

	mov	al, 1
$LN3@Add_Head:

; 109  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Add_Head@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE_NPAUKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@Z ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Add_Head
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ??1?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE@XZ PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::~SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>, COMDAT
; _this$ = ecx

; 90   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@

; 91   : 		Remove_All();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Remove_All@?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAEXXZ ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::Remove_All

; 92   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@UAE@XZ ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::~SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@XZ PROC ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>, COMDAT
; _this$ = ecx

; 86   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 87   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$SList@UKeyHookWrapperStruct@MultiKeyHookScriptImpClass@@@@QAE@XZ ENDP ; SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>::SList<MultiKeyHookScriptImpClass::KeyHookWrapperStruct>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EJFW_Key_Hook_Base@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EJFW_Key_Hook_Base@@UAEPAXI@Z PROC			; JFW_Key_Hook_Base::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1JFW_Key_Hook_Base@@UAE@XZ	; JFW_Key_Hook_Base::~JFW_Key_Hook_Base
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	36					; 00000024H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JFW_Key_Hook_Base@@UAE@XZ		; JFW_Key_Hook_Base::~JFW_Key_Hook_Base
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EJFW_Key_Hook_Base@@UAEPAXI@Z ENDP			; JFW_Key_Hook_Base::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GJFW_Key_Hook_Base@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GJFW_Key_Hook_Base@@UAEPAXI@Z PROC			; JFW_Key_Hook_Base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1JFW_Key_Hook_Base@@UAE@XZ		; JFW_Key_Hook_Base::~JFW_Key_Hook_Base
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GJFW_Key_Hook_Base@@UAEPAXI@Z ENDP			; JFW_Key_Hook_Base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4JFW_Key_Hook_Base@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4JFW_Key_Hook_Base@@QAEAAV0@ABV0@@Z PROC		; JFW_Key_Hook_Base::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4ScriptImpClass@@QAEAAV0@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4JFW_Key_Hook_Base@@QAEAAV0@ABV0@@Z ENDP		; JFW_Key_Hook_Base::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0JFW_Key_Hook_Base@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0JFW_Key_Hook_Base@@QAE@ABV0@@Z PROC			; JFW_Key_Hook_Base::JFW_Key_Hook_Base, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JFW_Key_Hook_Base@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0JFW_Key_Hook_Base@@QAE@ABV0@@Z ENDP			; JFW_Key_Hook_Base::JFW_Key_Hook_Base
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_tt.h
;	COMDAT ??0JFW_Key_Hook_Base@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0JFW_Key_Hook_Base@@QAE@XZ PROC			; JFW_Key_Hook_Base::JFW_Key_Hook_Base, COMDAT
; _this$ = ecx

; 491  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptImpClass@@QAE@XZ		; ScriptImpClass::ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7JFW_Key_Hook_Base@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0

; 492  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0JFW_Key_Hook_Base@@QAE@XZ ENDP			; JFW_Key_Hook_Base::JFW_Key_Hook_Base
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\slist.h
;	COMDAT ??0GenericSLNode@@IAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
??0GenericSLNode@@IAE@PAX@Z PROC			; GenericSLNode::GenericSLNode, COMDAT
; _this$ = ecx

; 37   : 	GenericSLNode(void *obj)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 38   : 	{
; 39   : 		NodeData = obj;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _obj$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 40   : 		NodeNext = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 41   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0GenericSLNode@@IAE@PAX@Z ENDP			; GenericSLNode::GenericSLNode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ??3?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAXPAX@Z
_TEXT	SEGMENT
_object$ = 8						; size = 4
??3?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAXPAX@Z PROC ; AutoPoolClass<GenericSLNode,256>::operator delete, COMDAT

; 1485 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 1486 : 		if (object)

	cmp	DWORD PTR _object$[ebp], 0
	je	SHORT $LN2@operator

; 1487 : 			objectPoolClass(T, nAlign).Free_Object_Memory(*(T*)object);

	mov	eax, DWORD PTR _object$[ebp]
	push	eax
	call	?getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ ; Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance
	mov	ecx, eax
	call	?Free_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEXAAVGenericSLNode@@@Z ; ObjectPoolClass<GenericSLNode,256>::Free_Object_Memory
$LN2@operator:

; 1488 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??3?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAXPAX@Z ENDP ; AutoPoolClass<GenericSLNode,256>::operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z
_TEXT	SEGMENT
_size$ = 8						; size = 4
_file$ = 12						; size = 4
_line$ = 16						; size = 4
_function$ = 20						; size = 4
??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z PROC ; AutoPoolClass<GenericSLNode,256>::operator new, COMDAT

; 1479 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
$LN3@operator:

; 1480 : 		TT_ASSERT(size == sizeof(T));

	xor	eax, eax
	jne	SHORT $LN3@operator
	cmp	DWORD PTR _size$[ebp], 8
	je	SHORT $LN1@operator
	int	3
$LN1@operator:

; 1481 : 		return (void*)objectPoolClass(T, nAlign).Allocate_Object_Memory();

	call	?getInstance@?$Singleton@V?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@@@SAAAV?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@XZ ; Singleton<ObjectPoolClass<GenericSLNode,256> >::getInstance
	mov	ecx, eax
	call	?Allocate_Object_Memory@?$ObjectPoolClass@VGenericSLNode@@$0BAA@@@QAEPAVGenericSLNode@@XZ ; ObjectPoolClass<GenericSLNode,256>::Allocate_Object_Memory

; 1482 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??2?$AutoPoolClass@VGenericSLNode@@$0BAA@@@SAPAXIPBDI0@Z ENDP ; AutoPoolClass<GenericSLNode,256>::operator new
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\datasafe.h
;	COMDAT ??B?$SafeDataClass@H@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$SafeDataClass@H@@QBEHXZ PROC			; SafeDataClass<int>::operator int, COMDAT
; _this$ = ecx

; 1236 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1237 : 	return (*this)();

	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$SafeDataClass@H@@QBEAAHXZ		; SafeDataClass<int>::operator()
	mov	eax, DWORD PTR [eax]

; 1238 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$SafeDataClass@H@@QBEHXZ ENDP			; SafeDataClass<int>::operator int
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\datasafe.h
;	COMDAT ??R?$SafeDataClass@H@@QBEAAHXZ
_TEXT	SEGMENT
_data_ptr$ = -8						; size = 4
_this$ = -4						; size = 4
??R?$SafeDataClass@H@@QBEAAHXZ PROC			; SafeDataClass<int>::operator(), COMDAT
; _this$ = ecx

; 1221 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 1222 : 	T *data_ptr = NULL;

	mov	DWORD PTR _data_ptr$[ebp], 0

; 1223 : 	if (Handle.Is_Valid())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Is_Valid@DataSafeHandleClass@@QBE_NXZ	; DataSafeHandleClass::Is_Valid
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@operator

; 1224 : 	{
; 1225 : 		DataSafeClass<T>::Get(Handle, data_ptr);

	lea	eax, DWORD PTR _data_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Get@?$DataSafeClass@H@@SA_NVDataSafeHandleClass@@AAPAH@Z ; DataSafeClass<int>::Get
	add	esp, 8

; 1226 : 		if (data_ptr)

	cmp	DWORD PTR _data_ptr$[ebp], 0
	je	SHORT $LN2@operator

; 1227 : 		{
; 1228 : 			return *data_ptr;

	mov	eax, DWORD PTR _data_ptr$[ebp]
	jmp	SHORT $LN3@operator
$LN2@operator:

; 1229 : 		}
; 1230 : 	}
; 1231 : 	static T oh_dear;
; 1232 : 	return oh_dear;

	mov	eax, OFFSET ?oh_dear@?7???R?$SafeDataClass@H@@QBEAAHXZ@4HA ; `SafeDataClass<int>::operator()'::`8'::oh_dear
$LN3@operator:

; 1233 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??R?$SafeDataClass@H@@QBEAAHXZ ENDP			; SafeDataClass<int>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\physicalgameobj.h
;	COMDAT ?Clear_Animation@PhysicalGameObj@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear_Animation@PhysicalGameObj@@QAEXXZ PROC		; PhysicalGameObj::Clear_Animation, COMDAT
; _this$ = ecx

; 113  : 	void                Clear_Animation() {if (AnimControl) {AnimControl->Set_Animation((const char*)NULL, 0, 0);AnimControl->Set_Mode(ANIM_MODE_STOP,0);ClearAnimation = true;Set_Object_Dirty_Bit(NetworkObjectClass::BIT_RARE,true);}}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1912], 0
	je	SHORT $LN1@Clear_Anim
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1912]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+1912]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1912]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+1912]
	mov	edx, DWORD PTR [eax+28]
	call	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+1966], 1
	push	1
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN1@Clear_Anim:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear_Animation@PhysicalGameObj@@QAEXXZ ENDP		; PhysicalGameObj::Clear_Animation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\physicalgameobj.h
;	COMDAT ?Get_Position@PhysicalGameObj@@QAE?AVVector3@@XZ
_TEXT	SEGMENT
_Return$ = -16						; size = 12
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Get_Position@PhysicalGameObj@@QAE?AVVector3@@XZ PROC	; PhysicalGameObj::Get_Position, COMDAT
; _this$ = ecx

; 47   : 	SCRIPTS_API Vector3 Get_Position() { Vector3 Return; Peek_Physical_Object()->Get_Position(&Return); return Return; }

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR _Return$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	lea	eax, DWORD PTR _Return$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Peek_Physical_Object@PhysicalGameObj@@QBEPAVPhysClass@@XZ ; PhysicalGameObj::Peek_Physical_Object
	mov	ecx, eax
	call	?Get_Position@PhysClass@@QBEXPAVVector3@@@Z ; PhysClass::Get_Position
	lea	eax, DWORD PTR _Return$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Position@PhysicalGameObj@@QAE?AVVector3@@XZ ENDP	; PhysicalGameObj::Get_Position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\physicalgameobj.h
;	COMDAT ?Peek_Physical_Object@PhysicalGameObj@@QBEPAVPhysClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Peek_Physical_Object@PhysicalGameObj@@QBEPAVPhysClass@@XZ PROC ; PhysicalGameObj::Peek_Physical_Object, COMDAT
; _this$ = ecx

; 40   : 	inline PhysClass *	Peek_Physical_Object( void ) const { return PhysObj; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1908]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Peek_Physical_Object@PhysicalGameObj@@QBEPAVPhysClass@@XZ ENDP ; PhysicalGameObj::Peek_Physical_Object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\physclass.h
;	COMDAT ?Get_Position@PhysClass@@QBEXPAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_set_pos$ = 8						; size = 4
?Get_Position@PhysClass@@QBEXPAVVector3@@@Z PROC	; PhysClass::Get_Position, COMDAT
; _this$ = ecx

; 73   : 	void								Get_Position(Vector3 * set_pos) const	{ Get_Transform().Get_Translation(set_pos); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _set_pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	mov	ecx, eax
	call	?Get_Translation@Matrix3D@@QBEXPAVVector3@@@Z ; Matrix3D::Get_Translation
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Position@PhysClass@@QBEXPAVVector3@@@Z ENDP	; PhysClass::Get_Position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4LineSegClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4LineSegClass@@QAEAAV0@ABV0@@Z PROC			; LineSegClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax+48], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4LineSegClass@@QAEAAV0@ABV0@@Z ENDP			; LineSegClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0LineSegClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0LineSegClass@@QAE@ABV0@@Z PROC			; LineSegClass::LineSegClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax+48], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0LineSegClass@@QAE@ABV0@@Z ENDP			; LineSegClass::LineSegClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?recalculate@LineSegClass@@IAEXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 12
_this$ = -4						; size = 4
?recalculate@LineSegClass@@IAEXXZ PROC			; LineSegClass::recalculate, COMDAT
; _this$ = ecx

; 81   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 82   : 		DP = P1 - P0;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??G@YA?AVVector3@@ABV0@0@Z		; operator-
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 83   : 		Dir = DP;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 84   : 		Dir.Normalize();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?Normalize@Vector3@@QAEXXZ		; Vector3::Normalize

; 85   : 		Length = DP.Length();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Length@Vector3@@QBEMXZ			; Vector3::Length
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+48]

; 86   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?recalculate@LineSegClass@@IAEXXZ ENDP			; LineSegClass::recalculate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?Compute_Point@LineSegClass@@QBEXMPAVVector3@@@Z
_TEXT	SEGMENT
$T1 = -80						; size = 12
_this$ = -4						; size = 4
_t$ = 8							; size = 4
_set$ = 12						; size = 4
?Compute_Point@LineSegClass@@QBEXMPAVVector3@@@Z PROC	; LineSegClass::Compute_Point, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 75   : 		Vector3::Add(P0,t*DP,set);

	mov	eax, DWORD PTR _set$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _t$[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??D@YA?AVVector3@@MABV0@@Z		; operator*
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?Add@Vector3@@SAXABV1@0PAV1@@Z		; Vector3::Add
	add	esp, 12					; 0000000cH

; 76   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Compute_Point@LineSegClass@@QBEXMPAVVector3@@@Z ENDP	; LineSegClass::Compute_Point
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?Get_Length@LineSegClass@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Length@LineSegClass@@QBEMXZ PROC			; LineSegClass::Get_Length, COMDAT
; _this$ = ecx

; 70   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 71   : 		return Length;

	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+48]

; 72   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Length@LineSegClass@@QBEMXZ ENDP			; LineSegClass::Get_Length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?Get_Dir@LineSegClass@@QBEABVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Dir@LineSegClass@@QBEABVVector3@@XZ PROC		; LineSegClass::Get_Dir, COMDAT
; _this$ = ecx

; 66   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 67   : 		return Dir;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36					; 00000024H

; 68   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Dir@LineSegClass@@QBEABVVector3@@XZ ENDP		; LineSegClass::Get_Dir
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?Get_DP@LineSegClass@@QBEABVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_DP@LineSegClass@@QBEABVVector3@@XZ PROC		; LineSegClass::Get_DP, COMDAT
; _this$ = ecx

; 62   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 63   : 		return DP;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H

; 64   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_DP@LineSegClass@@QBEABVVector3@@XZ ENDP		; LineSegClass::Get_DP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?Get_P1@LineSegClass@@QBEABVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_P1@LineSegClass@@QBEABVVector3@@XZ PROC		; LineSegClass::Get_P1, COMDAT
; _this$ = ecx

; 58   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 		return P1;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH

; 60   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_P1@LineSegClass@@QBEABVVector3@@XZ ENDP		; LineSegClass::Get_P1
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?Get_P0@LineSegClass@@QBEABVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_P0@LineSegClass@@QBEABVVector3@@XZ PROC		; LineSegClass::Get_P0, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 55   : 		return P0;

	mov	eax, DWORD PTR _this$[ebp]

; 56   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_P0@LineSegClass@@QBEABVVector3@@XZ ENDP		; LineSegClass::Get_P0
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?Set@LineSegClass@@QAEXABVVector3@@0M@Z
_TEXT	SEGMENT
$T1 = -92						; size = 12
$T2 = -80						; size = 12
_this$ = -4						; size = 4
_p0$ = 8						; size = 4
_dir$ = 12						; size = 4
_l$ = 16						; size = 4
?Set@LineSegClass@@QAEXABVVector3@@0M@Z PROC		; LineSegClass::Set, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 45   : 		DP = dir * l;

	push	ecx
	movss	xmm0, DWORD PTR _l$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??D@YA?AVVector3@@ABV0@M@Z		; operator*
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 46   : 		P0 = p0;

	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 47   : 		P1 = p0 + DP;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _p0$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??H@YA?AVVector3@@ABV0@0@Z		; operator+
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 48   : 		Dir = dir;

	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 49   : 		Length = l;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _l$[ebp]
	movss	DWORD PTR [eax+48], xmm0

; 50   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Set@LineSegClass@@QAEXABVVector3@@0M@Z ENDP		; LineSegClass::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ?Set@LineSegClass@@QAEXABVVector3@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p0$ = 8						; size = 4
_p1$ = 12						; size = 4
?Set@LineSegClass@@QAEXABVVector3@@0@Z PROC		; LineSegClass::Set, COMDAT
; _this$ = ecx

; 38   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 39   : 		P0 = p0;

	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 40   : 		P1 = p1;

	mov	eax, DWORD PTR _p1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 41   : 		recalculate();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?recalculate@LineSegClass@@IAEXXZ	; LineSegClass::recalculate

; 42   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Set@LineSegClass@@QAEXABVVector3@@0@Z ENDP		; LineSegClass::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ??0LineSegClass@@QAE@ABV0@ABVMatrix3D@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_that$ = 8						; size = 4
_tm$ = 12						; size = 4
??0LineSegClass@@QAE@ABV0@ABVMatrix3D@@@Z PROC		; LineSegClass::LineSegClass, COMDAT
; _this$ = ecx

; 33   : 	LineSegClass(const LineSegClass & that,const Matrix3D & tm)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 34   : 	{
; 35   : 		Set(that,tm);

	mov	eax, DWORD PTR _tm$[ebp]
	push	eax
	mov	ecx, DWORD PTR _that$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@LineSegClass@@QAEXABV1@ABVMatrix3D@@@Z ; LineSegClass::Set

; 36   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0LineSegClass@@QAE@ABV0@ABVMatrix3D@@@Z ENDP		; LineSegClass::LineSegClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ??0LineSegClass@@QAE@ABVVector3@@0M@Z
_TEXT	SEGMENT
$T1 = -92						; size = 12
$T2 = -80						; size = 12
_this$ = -4						; size = 4
_p0$ = 8						; size = 4
_dir$ = 12						; size = 4
_l$ = 16						; size = 4
??0LineSegClass@@QAE@ABVVector3@@0M@Z PROC		; LineSegClass::LineSegClass, COMDAT
; _this$ = ecx

; 29   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _l$[ebp]
	movss	DWORD PTR [eax+48], xmm0

; 30   : 		DP = Dir * Length;

	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+48]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??D@YA?AVVector3@@ABV0@M@Z		; operator*
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 31   : 		P1 = P0 + DP;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??H@YA?AVVector3@@ABV0@0@Z		; operator+
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 32   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0LineSegClass@@QAE@ABVVector3@@0M@Z ENDP		; LineSegClass::LineSegClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ??0LineSegClass@@QAE@ABVVector3@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p0$ = 8						; size = 4
_p1$ = 12						; size = 4
??0LineSegClass@@QAE@ABVVector3@@0@Z PROC		; LineSegClass::LineSegClass, COMDAT
; _this$ = ecx

; 25   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _p1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 26   : 		recalculate();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?recalculate@LineSegClass@@IAEXXZ	; LineSegClass::recalculate

; 27   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0LineSegClass@@QAE@ABVVector3@@0@Z ENDP		; LineSegClass::LineSegClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\linesegclass.h
;	COMDAT ??0LineSegClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0LineSegClass@@QAE@XZ PROC				; LineSegClass::LineSegClass, COMDAT
; _this$ = ecx

; 21   : 	LineSegClass(void)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 22   : 	{
; 23   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0LineSegClass@@QAE@XZ ENDP				; LineSegClass::LineSegClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\referenceableclass.h
;	COMDAT ?Get_Data@?$ReferenceableClass@VScriptableGameObj@@@@IBEPAVScriptableGameObj@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Data@?$ReferenceableClass@VScriptableGameObj@@@@IBEPAVScriptableGameObj@@XZ PROC ; ReferenceableClass<ScriptableGameObj>::Get_Data, COMDAT
; _this$ = ecx

; 30   : 	T * Get_Data( void ) const	{ return ReferenceData; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Data@?$ReferenceableClass@VScriptableGameObj@@@@IBEPAVScriptableGameObj@@XZ ENDP ; ReferenceableClass<ScriptableGameObj>::Get_Data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EReferencerClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EReferencerClass@@UAEPAXI@Z PROC			; ReferencerClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1ReferencerClass@@UAE@XZ	; ReferencerClass::~ReferencerClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ReferencerClass@@UAE@XZ		; ReferencerClass::~ReferencerClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EReferencerClass@@UAEPAXI@Z ENDP			; ReferencerClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GReferencerClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GReferencerClass@@UAEPAXI@Z PROC			; ReferencerClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ReferencerClass@@UAE@XZ		; ReferencerClass::~ReferencerClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GReferencerClass@@UAEPAXI@Z ENDP			; ReferencerClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ReferencerClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0ReferencerClass@@QAE@ABV0@@Z PROC			; ReferencerClass::ReferencerClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PostLoadableClass@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReferencerClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0ReferencerClass@@QAE@ABV0@@Z ENDP			; ReferencerClass::ReferencerClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\referencerclass.h
;	COMDAT ?Set_Ptr@ReferencerClass@@QAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_object$ = 8						; size = 4
?Set_Ptr@ReferencerClass@@QAEXPAVScriptableGameObj@@@Z PROC ; ReferencerClass::Set_Ptr, COMDAT
; _this$ = ecx

; 61   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 62   : 		*this = object;

	mov	eax, DWORD PTR _object$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4ReferencerClass@@QAEAAV0@PAVScriptableGameObj@@@Z ; ReferencerClass::operator=

; 63   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_Ptr@ReferencerClass@@QAEXPAVScriptableGameObj@@@Z ENDP ; ReferencerClass::Set_Ptr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\referencerclass.h
;	COMDAT ?Get_Ptr@ReferencerClass@@QBEPAVScriptableGameObj@@XZ
_TEXT	SEGMENT
tv69 = -72						; size = 4
_this$ = -4						; size = 4
?Get_Ptr@ReferencerClass@@QBEPAVScriptableGameObj@@XZ PROC ; ReferencerClass::Get_Ptr, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 55   : 		return ReferenceTarget ? ReferenceTarget->Get_Data() : NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN3@Get_Ptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?Get_Data@?$ReferenceableClass@VScriptableGameObj@@@@IBEPAVScriptableGameObj@@XZ ; ReferenceableClass<ScriptableGameObj>::Get_Data
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@Get_Ptr
$LN3@Get_Ptr:
	mov	DWORD PTR tv69[ebp], 0
$LN4@Get_Ptr:
	mov	eax, DWORD PTR tv69[ebp]

; 56   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Ptr@ReferencerClass@@QBEPAVScriptableGameObj@@XZ ENDP ; ReferencerClass::Get_Ptr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\referencerclass.h
;	COMDAT ??0ReferencerClass@@QAE@PAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_object$ = 8						; size = 4
??0ReferencerClass@@QAE@PAVScriptableGameObj@@@Z PROC	; ReferencerClass::ReferencerClass, COMDAT
; _this$ = ecx

; 48   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PostLoadableClass@@QAE@XZ		; PostLoadableClass::PostLoadableClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReferencerClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 49   : 		*this = object;

	mov	eax, DWORD PTR _object$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4ReferencerClass@@QAEAAV0@PAVScriptableGameObj@@@Z ; ReferencerClass::operator=

; 50   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0ReferencerClass@@QAE@PAVScriptableGameObj@@@Z ENDP	; ReferencerClass::ReferencerClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\referencerclass.h
;	COMDAT ??0ReferencerClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ReferencerClass@@QAE@XZ PROC				; ReferencerClass::ReferencerClass, COMDAT
; _this$ = ecx

; 41   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PostLoadableClass@@QAE@XZ		; PostLoadableClass::PostLoadableClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ReferencerClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 42   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ReferencerClass@@QAE@XZ ENDP				; ReferencerClass::ReferencerClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\referencerclass.h
;	COMDAT ??CReferencerClass@@QAEPAVScriptableGameObj@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??CReferencerClass@@QAEPAVScriptableGameObj@@XZ PROC	; ReferencerClass::operator->, COMDAT
; _this$ = ecx

; 37   : 	inline ScriptableGameObj* operator ->() { return Get_Ptr(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Ptr@ReferencerClass@@QBEPAVScriptableGameObj@@XZ ; ReferencerClass::Get_Ptr
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??CReferencerClass@@QAEPAVScriptableGameObj@@XZ ENDP	; ReferencerClass::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EPostLoadableClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EPostLoadableClass@@UAEPAXI@Z PROC			; PostLoadableClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1PostLoadableClass@@UAE@XZ	; PostLoadableClass::~PostLoadableClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PostLoadableClass@@UAE@XZ		; PostLoadableClass::~PostLoadableClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPostLoadableClass@@UAEPAXI@Z ENDP			; PostLoadableClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GPostLoadableClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GPostLoadableClass@@UAEPAXI@Z PROC			; PostLoadableClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PostLoadableClass@@UAE@XZ		; PostLoadableClass::~PostLoadableClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPostLoadableClass@@UAEPAXI@Z ENDP			; PostLoadableClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4PostLoadableClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4PostLoadableClass@@QAEAAV0@ABV0@@Z PROC		; PostLoadableClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4PostLoadableClass@@QAEAAV0@ABV0@@Z ENDP		; PostLoadableClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0PostLoadableClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0PostLoadableClass@@QAE@ABV0@@Z PROC			; PostLoadableClass::PostLoadableClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PostLoadableClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0PostLoadableClass@@QAE@ABV0@@Z ENDP			; PostLoadableClass::PostLoadableClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\postloadableclass.h
;	COMDAT ?Set_Post_Load_Registered@PostLoadableClass@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_onoff$ = 8						; size = 1
?Set_Post_Load_Registered@PostLoadableClass@@QAEX_N@Z PROC ; PostLoadableClass::Set_Post_Load_Registered, COMDAT
; _this$ = ecx

; 22   : 	void									Set_Post_Load_Registered(bool onoff)	{ IsPostLoadRegistered = onoff; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _onoff$[ebp]
	mov	BYTE PTR [eax+4], cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_Post_Load_Registered@PostLoadableClass@@QAEX_N@Z ENDP ; PostLoadableClass::Set_Post_Load_Registered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\postloadableclass.h
;	COMDAT ?Is_Post_Load_Registered@PostLoadableClass@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Is_Post_Load_Registered@PostLoadableClass@@QBE_NXZ PROC ; PostLoadableClass::Is_Post_Load_Registered, COMDAT
; _this$ = ecx

; 21   : 	bool									Is_Post_Load_Registered(void) const				{ return IsPostLoadRegistered; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Is_Post_Load_Registered@PostLoadableClass@@QBE_NXZ ENDP ; PostLoadableClass::Is_Post_Load_Registered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\postloadableclass.h
;	COMDAT ?On_Post_Load@PostLoadableClass@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?On_Post_Load@PostLoadableClass@@UAEXXZ PROC		; PostLoadableClass::On_Post_Load, COMDAT
; _this$ = ecx

; 20   : 	virtual void						On_Post_Load (void)							{ }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?On_Post_Load@PostLoadableClass@@UAEXXZ ENDP		; PostLoadableClass::On_Post_Load
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\postloadableclass.h
;	COMDAT ??1PostLoadableClass@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1PostLoadableClass@@UAE@XZ PROC			; PostLoadableClass::~PostLoadableClass, COMDAT
; _this$ = ecx

; 19   : 	virtual ~PostLoadableClass(void)													{ }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PostLoadableClass@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1PostLoadableClass@@UAE@XZ ENDP			; PostLoadableClass::~PostLoadableClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\postloadableclass.h
;	COMDAT ??0PostLoadableClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0PostLoadableClass@@QAE@XZ PROC			; PostLoadableClass::PostLoadableClass, COMDAT
; _this$ = ecx

; 18   : 	PostLoadableClass(void) : IsPostLoadRegistered(false)						{ }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PostLoadableClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PostLoadableClass@@QAE@XZ ENDP			; PostLoadableClass::PostLoadableClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\datasafe.h
;	COMDAT ?Get@?$DataSafeClass@H@@SA_NVDataSafeHandleClass@@AAPAH@Z
_TEXT	SEGMENT
_data_entry_ptr$ = -8					; size = 4
_entry_ptr$ = -4					; size = 4
_handle$ = 8						; size = 4
_item$ = 12						; size = 4
?Get@?$DataSafeClass@H@@SA_NVDataSafeHandleClass@@AAPAH@Z PROC ; DataSafeClass<int>::Get, COMDAT

; 561  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 562  : 	DataSafeEntryClass *entry_ptr = Get_Entry(handle);

	mov	eax, DWORD PTR _handle$[ebp]
	push	eax
	call	?Get_Entry@GenericDataSafeClass@@SAPAVDataSafeEntryClass@@VDataSafeHandleClass@@@Z ; GenericDataSafeClass::Get_Entry
	add	esp, 4
	mov	DWORD PTR _entry_ptr$[ebp], eax

; 563  : 	if (entry_ptr == NULL)

	cmp	DWORD PTR _entry_ptr$[ebp], 0
	jne	SHORT $LN2@Get

; 564  : 	{
; 565  : 		return(false);

	xor	al, al
	jmp	$LN3@Get
$LN2@Get:

; 566  : 	}
; 567  : 	DataSafeEntryDataClass<T> *data_entry_ptr = (DataSafeEntryDataClass<T>*) entry_ptr;

	mov	eax, DWORD PTR _entry_ptr$[ebp]
	mov	DWORD PTR _data_entry_ptr$[ebp], eax

; 568  : 	Mem_Copy_Decrypt(&(ReturnList[ReturnIndex][0]), &data_entry_ptr->Data, sizeof(T), false);

	push	0
	push	4
	mov	eax, DWORD PTR _data_entry_ptr$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR ?ReturnList@?$DataSafeClass@H@@0AAV?$RefArray@V?$RefArray@D$03@@$07@@A ; DataSafeClass<int>::ReturnList
	call	??B?$RefArray@V?$RefArray@D$03@@$07@@QAEPAV?$RefArray@D$03@@XZ ; RefArray<RefArray<char,4>,8>::operator RefArray<char,4> *
	mov	ecx, DWORD PTR ?ReturnIndex@?$DataSafeClass@H@@0AAHA ; DataSafeClass<int>::ReturnIndex
	mov	edx, DWORD PTR [ecx]
	lea	ecx, DWORD PTR [eax+edx*4]
	call	??B?$RefArray@D$03@@QAEPADXZ		; RefArray<char,4>::operator char *
	mov	ecx, 1
	imul	ecx, 0
	add	eax, ecx
	push	eax
	call	?Mem_Copy_Decrypt@GenericDataSafeClass@@KAXPAX0H_N@Z ; GenericDataSafeClass::Mem_Copy_Decrypt
	add	esp, 16					; 00000010H

; 569  : 	item = (T*)(&(ReturnList[ReturnIndex][0]));

	mov	ecx, DWORD PTR ?ReturnList@?$DataSafeClass@H@@0AAV?$RefArray@V?$RefArray@D$03@@$07@@A ; DataSafeClass<int>::ReturnList
	call	??B?$RefArray@V?$RefArray@D$03@@$07@@QAEPAV?$RefArray@D$03@@XZ ; RefArray<RefArray<char,4>,8>::operator RefArray<char,4> *
	mov	ecx, DWORD PTR ?ReturnIndex@?$DataSafeClass@H@@0AAHA ; DataSafeClass<int>::ReturnIndex
	mov	edx, DWORD PTR [ecx]
	lea	ecx, DWORD PTR [eax+edx*4]
	call	??B?$RefArray@D$03@@QAEPADXZ		; RefArray<char,4>::operator char *
	mov	ecx, 1
	imul	ecx, 0
	add	eax, ecx
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [edx], eax

; 570  : 	ReturnIndex++;

	mov	eax, DWORD PTR ?ReturnIndex@?$DataSafeClass@H@@0AAHA ; DataSafeClass<int>::ReturnIndex
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR ?ReturnIndex@?$DataSafeClass@H@@0AAHA ; DataSafeClass<int>::ReturnIndex
	mov	DWORD PTR [edx], ecx

; 571  : 	if (ReturnIndex >= MAX_OBJECT_COPIES)

	mov	eax, DWORD PTR ?ReturnIndex@?$DataSafeClass@H@@0AAHA ; DataSafeClass<int>::ReturnIndex
	cmp	DWORD PTR [eax], 8
	jl	SHORT $LN1@Get

; 572  : 	{
; 573  : 		ReturnIndex = 0;

	mov	eax, DWORD PTR ?ReturnIndex@?$DataSafeClass@H@@0AAHA ; DataSafeClass<int>::ReturnIndex
	mov	DWORD PTR [eax], 0
$LN1@Get:

; 574  : 	}
; 575  : 	Shuffle();

	push	0
	call	?Shuffle@GenericDataSafeClass@@KAX_N@Z	; GenericDataSafeClass::Shuffle
	add	esp, 4

; 576  : 	Security_Check();

	call	?Security_Check@GenericDataSafeClass@@KAXXZ ; GenericDataSafeClass::Security_Check

; 577  : 	return(true);

	mov	al, 1
$LN3@Get:

; 578  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get@?$DataSafeClass@H@@SA_NVDataSafeHandleClass@@AAPAH@Z ENDP ; DataSafeClass<int>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\datasafe.h
;	COMDAT ??B?$RefArray@PAVDataSafeEntryListClass@@$0CAAA@@@QAEPAPAVDataSafeEntryListClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$RefArray@PAVDataSafeEntryListClass@@$0CAAA@@@QAEPAPAVDataSafeEntryListClass@@XZ PROC ; RefArray<DataSafeEntryListClass *,8192>::operator DataSafeEntryListClass * *, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 45   : 		return (T*) this;

	mov	eax, DWORD PTR _this$[ebp]

; 46   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$RefArray@PAVDataSafeEntryListClass@@$0CAAA@@@QAEPAPAVDataSafeEntryListClass@@XZ ENDP ; RefArray<DataSafeEntryListClass *,8192>::operator DataSafeEntryListClass * *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\datasafe.h
;	COMDAT ?Security_Fault@GenericDataSafeClass@@KAXXZ
_TEXT	SEGMENT
?Security_Fault@GenericDataSafeClass@@KAXXZ PROC	; GenericDataSafeClass::Security_Fault, COMDAT

; 299  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 300  : 	CRCErrors++;

	mov	eax, DWORD PTR ?CRCErrors@GenericDataSafeClass@@1AAHA ; GenericDataSafeClass::CRCErrors
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR ?CRCErrors@GenericDataSafeClass@@1AAHA ; GenericDataSafeClass::CRCErrors
	mov	DWORD PTR [edx], ecx

; 301  : 	Say_Security_Fault();

	call	?Say_Security_Fault@GenericDataSafeClass@@KAXXZ ; GenericDataSafeClass::Say_Security_Fault

; 302  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Security_Fault@GenericDataSafeClass@@KAXXZ ENDP	; GenericDataSafeClass::Security_Fault
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\datasafe.h
;	COMDAT ?Security_Check@GenericDataSafeClass@@KAXXZ
_TEXT	SEGMENT
_got$1 = -38						; size = 1
_got$2 = -37						; size = 1
_val$3 = -36						; size = 4
_z$4 = -32						; size = 4
_j$5 = -28						; size = 4
_data_size$6 = -24					; size = 4
_data$7 = -20						; size = 4
_entry_ptr$8 = -16					; size = 4
_i$9 = -12						; size = 4
_checkey$10 = -8					; size = 4
_time$ = -4						; size = 4
?Security_Check@GenericDataSafeClass@@KAXXZ PROC	; GenericDataSafeClass::Security_Check, COMDAT

; 305  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 104				; 00000068H
	push	ebx
	push	esi
	push	edi

; 306  : 	static bool _checking = false;
; 307  : 	static unsigned long _calls = 0;
; 308  : 	_calls++;

	mov	eax, DWORD PTR ?_calls@?1??Security_Check@GenericDataSafeClass@@KAXXZ@4KA ; `GenericDataSafeClass::Security_Check'::`2'::_calls
	add	eax, 1
	mov	DWORD PTR ?_calls@?1??Security_Check@GenericDataSafeClass@@KAXXZ@4KA, eax ; `GenericDataSafeClass::Security_Check'::`2'::_calls

; 309  : 	if (_calls < DATASAFE_TIME_CHECK_CALLS)

	cmp	DWORD PTR ?_calls@?1??Security_Check@GenericDataSafeClass@@KAXXZ@4KA, 100000 ; `GenericDataSafeClass::Security_Check'::`2'::_calls, 000186a0H
	jae	SHORT $LN25@Security_C

; 310  : 	{
; 311  : 		return;

	jmp	$LN26@Security_C
$LN25@Security_C:

; 312  : 	}
; 313  : 	_calls = 0;

	mov	DWORD PTR ?_calls@?1??Security_Check@GenericDataSafeClass@@KAXXZ@4KA, 0 ; `GenericDataSafeClass::Security_Check'::`2'::_calls

; 314  : 	if (HandleKey - SimpleKey == HandleKey)

	mov	eax, DWORD PTR ?HandleKey@GenericDataSafeClass@@1AAKA ; GenericDataSafeClass::HandleKey
	mov	ecx, DWORD PTR ?SimpleKey@GenericDataSafeClass@@1AAKA ; GenericDataSafeClass::SimpleKey
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?HandleKey@GenericDataSafeClass@@1AAKA ; GenericDataSafeClass::HandleKey
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN24@Security_C

; 315  : 	{
; 316  : 		Security_Fault();

	call	?Security_Fault@GenericDataSafeClass@@KAXXZ ; GenericDataSafeClass::Security_Fault
$LN24@Security_C:

; 317  : 	}
; 318  : 	if (SimpleKey - HandleKey == SimpleKey)

	mov	eax, DWORD PTR ?SimpleKey@GenericDataSafeClass@@1AAKA ; GenericDataSafeClass::SimpleKey
	mov	ecx, DWORD PTR ?HandleKey@GenericDataSafeClass@@1AAKA ; GenericDataSafeClass::HandleKey
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?SimpleKey@GenericDataSafeClass@@1AAKA ; GenericDataSafeClass::SimpleKey
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN23@Security_C

; 319  : 	{
; 320  : 		Security_Fault();

	call	?Security_Fault@GenericDataSafeClass@@KAXXZ ; GenericDataSafeClass::Security_Fault
$LN23@Security_C:

; 321  : 	}
; 322  : 	unsigned long time = TIMEGETTIME();

	mov	ecx, DWORD PTR ?SystemTime@SysTimeClass@@2AAV1@A ; SysTimeClass::SystemTime
	call	?Get@SysTimeClass@@QAEIXZ		; SysTimeClass::Get
	mov	DWORD PTR _time$[ebp], eax

; 323  : 	if (time < SecurityCheckDelay || (time | SecurityCheckDelay) == 0 || (time - SecurityCheckDelay) > SECURITY_CHECK_TIME)

	mov	eax, DWORD PTR ?SecurityCheckDelay@GenericDataSafeClass@@1AAKA ; GenericDataSafeClass::SecurityCheckDelay
	mov	ecx, DWORD PTR _time$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jb	SHORT $LN21@Security_C
	mov	eax, DWORD PTR ?SecurityCheckDelay@GenericDataSafeClass@@1AAKA ; GenericDataSafeClass::SecurityCheckDelay
	mov	ecx, DWORD PTR _time$[ebp]
	or	ecx, DWORD PTR [eax]
	je	SHORT $LN21@Security_C
	mov	eax, DWORD PTR ?SecurityCheckDelay@GenericDataSafeClass@@1AAKA ; GenericDataSafeClass::SecurityCheckDelay
	mov	ecx, DWORD PTR _time$[ebp]
	sub	ecx, DWORD PTR [eax]
	cmp	ecx, 15000				; 00003a98H
	jbe	$LN26@Security_C
$LN21@Security_C:

; 324  : 	{
; 325  : 		if (!_checking)

	movzx	eax, BYTE PTR ?_checking@?1??Security_Check@GenericDataSafeClass@@KAXXZ@4_NA ; `GenericDataSafeClass::Security_Check'::`2'::_checking
	test	eax, eax
	jne	$LN26@Security_C

; 326  : 		{
; 327  : 			_checking = true;

	mov	BYTE PTR ?_checking@?1??Security_Check@GenericDataSafeClass@@KAXXZ@4_NA, 1 ; `GenericDataSafeClass::Security_Check'::`2'::_checking

; 328  : 			SecurityCheckDelay = time;

	mov	eax, DWORD PTR ?SecurityCheckDelay@GenericDataSafeClass@@1AAKA ; GenericDataSafeClass::SecurityCheckDelay
	mov	ecx, DWORD PTR _time$[ebp]
	mov	DWORD PTR [eax], ecx

; 329  : 			unsigned long checkey = ~SimpleKey;

	mov	eax, DWORD PTR ?SimpleKey@GenericDataSafeClass@@1AAKA ; GenericDataSafeClass::SimpleKey
	mov	ecx, DWORD PTR [eax]
	not	ecx
	mov	DWORD PTR _checkey$10[ebp], ecx

; 330  : 			for (int i=0 ; i<NumLists ; i++)

	mov	DWORD PTR _i$9[ebp], 0
	jmp	SHORT $LN19@Security_C
$LN18@Security_C:
	mov	eax, DWORD PTR _i$9[ebp]
	add	eax, 1
	mov	DWORD PTR _i$9[ebp], eax
$LN19@Security_C:
	mov	eax, DWORD PTR ?NumLists@GenericDataSafeClass@@1AAHA ; GenericDataSafeClass::NumLists
	mov	ecx, DWORD PTR _i$9[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	$LN17@Security_C

; 331  : 			{
; 332  : 				if (Safe[i] != NULL && Safe[i]->EntryCount > 0)

	mov	ecx, DWORD PTR ?Safe@GenericDataSafeClass@@1AAV?$RefArray@PAVDataSafeEntryListClass@@$0CAAA@@@A ; GenericDataSafeClass::Safe
	call	??B?$RefArray@PAVDataSafeEntryListClass@@$0CAAA@@@QAEPAPAVDataSafeEntryListClass@@XZ ; RefArray<DataSafeEntryListClass *,8192>::operator DataSafeEntryListClass * *
	mov	ecx, DWORD PTR _i$9[ebp]
	cmp	DWORD PTR [eax+ecx*4], 0
	je	$LN16@Security_C
	mov	ecx, DWORD PTR ?Safe@GenericDataSafeClass@@1AAV?$RefArray@PAVDataSafeEntryListClass@@$0CAAA@@@A ; GenericDataSafeClass::Safe
	call	??B?$RefArray@PAVDataSafeEntryListClass@@$0CAAA@@@QAEPAPAVDataSafeEntryListClass@@XZ ; RefArray<DataSafeEntryListClass *,8192>::operator DataSafeEntryListClass * *
	mov	ecx, DWORD PTR _i$9[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	cmp	DWORD PTR [edx+4], 0
	jle	$LN16@Security_C

; 333  : 				{
; 334  : 					DataSafeEntryClass *entry_ptr = Safe[i]->SafeList;

	mov	ecx, DWORD PTR ?Safe@GenericDataSafeClass@@1AAV?$RefArray@PAVDataSafeEntryListClass@@$0CAAA@@@A ; GenericDataSafeClass::Safe
	call	??B?$RefArray@PAVDataSafeEntryListClass@@$0CAAA@@@QAEPAPAVDataSafeEntryListClass@@XZ ; RefArray<DataSafeEntryListClass *,8192>::operator DataSafeEntryListClass * *
	mov	ecx, DWORD PTR _i$9[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _entry_ptr$8[ebp], eax

; 335  : 					unsigned long *data = NULL;

	mov	DWORD PTR _data$7[ebp], 0

; 336  : 					int data_size = entry_ptr->Size;

	mov	eax, DWORD PTR _entry_ptr$8[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _data_size$6[ebp], ecx

; 337  : 					data_size = data_size >> 2;

	mov	eax, DWORD PTR _data_size$6[ebp]
	sar	eax, 2
	mov	DWORD PTR _data_size$6[ebp], eax

; 338  : 					if (entry_ptr)

	cmp	DWORD PTR _entry_ptr$8[ebp], 0
	je	SHORT $LN16@Security_C

; 339  : 					{
; 340  : 						for (int j=0 ; j<Safe[i]->EntryCount ; j++)

	mov	DWORD PTR _j$5[ebp], 0
	jmp	SHORT $LN14@Security_C
$LN13@Security_C:
	mov	eax, DWORD PTR _j$5[ebp]
	add	eax, 1
	mov	DWORD PTR _j$5[ebp], eax
$LN14@Security_C:
	mov	ecx, DWORD PTR ?Safe@GenericDataSafeClass@@1AAV?$RefArray@PAVDataSafeEntryListClass@@$0CAAA@@@A ; GenericDataSafeClass::Safe
	call	??B?$RefArray@PAVDataSafeEntryListClass@@$0CAAA@@@QAEPAPAVDataSafeEntryListClass@@XZ ; RefArray<DataSafeEntryListClass *,8192>::operator DataSafeEntryListClass * *
	mov	ecx, DWORD PTR _i$9[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _j$5[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jge	SHORT $LN16@Security_C

; 341  : 						{
; 342  : 							checkey ^= entry_ptr->Handle;

	mov	ecx, DWORD PTR _entry_ptr$8[ebp]
	call	??BDataSafeHandleClass@@QAEHXZ		; DataSafeHandleClass::operator int
	xor	eax, DWORD PTR _checkey$10[ebp]
	mov	DWORD PTR _checkey$10[ebp], eax

; 343  : 							data = (unsigned long *) (((char*)entry_ptr) + sizeof(*entry_ptr));

	mov	eax, DWORD PTR _entry_ptr$8[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR _data$7[ebp], eax

; 344  : 							for (int z=0 ; z<data_size ; z++)

	mov	DWORD PTR _z$4[ebp], 0
	jmp	SHORT $LN11@Security_C
$LN10@Security_C:
	mov	eax, DWORD PTR _z$4[ebp]
	add	eax, 1
	mov	DWORD PTR _z$4[ebp], eax
$LN11@Security_C:
	mov	eax, DWORD PTR _z$4[ebp]
	cmp	eax, DWORD PTR _data_size$6[ebp]
	jge	SHORT $LN9@Security_C

; 345  : 							{
; 346  : 								checkey ^= *data++;

	mov	eax, DWORD PTR _data$7[ebp]
	mov	ecx, DWORD PTR _checkey$10[ebp]
	xor	ecx, DWORD PTR [eax]
	mov	DWORD PTR _checkey$10[ebp], ecx
	mov	edx, DWORD PTR _data$7[ebp]
	add	edx, 4
	mov	DWORD PTR _data$7[ebp], edx

; 347  : 							}

	jmp	SHORT $LN10@Security_C
$LN9@Security_C:

; 348  : 							entry_ptr = entry_ptr->Next;

	mov	eax, DWORD PTR _entry_ptr$8[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _entry_ptr$8[ebp], ecx

; 349  : 						}

	jmp	SHORT $LN13@Security_C
$LN16@Security_C:

; 350  : 					}
; 351  : 				}
; 352  : 			}

	jmp	$LN18@Security_C
$LN17@Security_C:

; 353  : 			if (checkey != Checksum)

	mov	eax, DWORD PTR ?Checksum@GenericDataSafeClass@@1AAKA ; GenericDataSafeClass::Checksum
	mov	ecx, DWORD PTR _checkey$10[ebp]
	cmp	ecx, DWORD PTR [eax]
	je	SHORT $LN8@Security_C

; 354  : 			{
; 355  : 				Security_Fault();

	call	?Security_Fault@GenericDataSafeClass@@KAXXZ ; GenericDataSafeClass::Security_Fault
$LN8@Security_C:

; 356  : 			}
; 357  : 			if (NumLists)

	mov	eax, DWORD PTR ?NumLists@GenericDataSafeClass@@1AAHA ; GenericDataSafeClass::NumLists
	cmp	DWORD PTR [eax], 0
	je	$LN7@Security_C

; 358  : 			{
; 359  : 				int *val = NULL;

	mov	DWORD PTR _val$3[ebp], 0

; 360  : 				if ((int)SentinelOne != 0)

	mov	ecx, DWORD PTR ?SentinelOne@GenericDataSafeClass@@1AAVDataSafeHandleClass@@A ; GenericDataSafeClass::SentinelOne
	call	??BDataSafeHandleClass@@QAEHXZ		; DataSafeHandleClass::operator int
	test	eax, eax
	je	SHORT $LN6@Security_C

; 361  : 				{
; 362  : 					bool got = DataSafeClass<int>::Get(SentinelOne, val);

	lea	eax, DWORD PTR _val$3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?SentinelOne@GenericDataSafeClass@@1AAVDataSafeHandleClass@@A ; GenericDataSafeClass::SentinelOne
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Get@?$DataSafeClass@H@@SA_NVDataSafeHandleClass@@AAPAH@Z ; DataSafeClass<int>::Get
	add	esp, 8
	mov	BYTE PTR _got$2[ebp], al

; 363  : 					if (!got || val == NULL || *val != SENTINEL_ONE)

	movzx	eax, BYTE PTR _got$2[ebp]
	test	eax, eax
	je	SHORT $LN4@Security_C
	cmp	DWORD PTR _val$3[ebp], 0
	je	SHORT $LN4@Security_C
	mov	eax, DWORD PTR _val$3[ebp]
	cmp	DWORD PTR [eax], 696730466		; 29874362H
	je	SHORT $LN6@Security_C
$LN4@Security_C:

; 364  : 					{
; 365  : 						Security_Fault();

	call	?Security_Fault@GenericDataSafeClass@@KAXXZ ; GenericDataSafeClass::Security_Fault
$LN6@Security_C:

; 366  : 					}
; 367  : 				}
; 368  : 				val = NULL;

	mov	DWORD PTR _val$3[ebp], 0

; 369  : 				if ((int)SentinelTwo != 0)

	mov	ecx, DWORD PTR ?SentinelTwo@GenericDataSafeClass@@1AAVDataSafeHandleClass@@A ; GenericDataSafeClass::SentinelTwo
	call	??BDataSafeHandleClass@@QAEHXZ		; DataSafeHandleClass::operator int
	test	eax, eax
	je	SHORT $LN7@Security_C

; 370  : 				{
; 371  : 					bool got = DataSafeClass<int>::Get(SentinelTwo, val);

	lea	eax, DWORD PTR _val$3[ebp]
	push	eax
	mov	ecx, DWORD PTR ?SentinelTwo@GenericDataSafeClass@@1AAVDataSafeHandleClass@@A ; GenericDataSafeClass::SentinelTwo
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Get@?$DataSafeClass@H@@SA_NVDataSafeHandleClass@@AAPAH@Z ; DataSafeClass<int>::Get
	add	esp, 8
	mov	BYTE PTR _got$1[ebp], al

; 372  : 					if (!got || val == NULL || *val != SENTINEL_TWO)

	movzx	eax, BYTE PTR _got$1[ebp]
	test	eax, eax
	je	SHORT $LN1@Security_C
	cmp	DWORD PTR _val$3[ebp], 0
	je	SHORT $LN1@Security_C
	mov	eax, DWORD PTR _val$3[ebp]
	cmp	DWORD PTR [eax], 195890093		; 0bad0badH
	je	SHORT $LN7@Security_C
$LN1@Security_C:

; 373  : 					{
; 374  : 						Security_Fault();

	call	?Security_Fault@GenericDataSafeClass@@KAXXZ ; GenericDataSafeClass::Security_Fault
$LN7@Security_C:

; 375  : 					}
; 376  : 				}
; 377  : 			}
; 378  : 			_checking = false;

	mov	BYTE PTR ?_checking@?1??Security_Check@GenericDataSafeClass@@KAXXZ@4_NA, 0 ; `GenericDataSafeClass::Security_Check'::`2'::_checking
$LN26@Security_C:

; 379  : 		}
; 380  : 	}
; 381  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Security_Check@GenericDataSafeClass@@KAXXZ ENDP	; GenericDataSafeClass::Security_Check
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\datasafe.h
;	COMDAT ??BDataSafeHandleClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BDataSafeHandleClass@@QAEHXZ PROC			; DataSafeHandleClass::operator int, COMDAT
; _this$ = ecx

; 77   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 78   : 		return Handle.Whole.WholeHandle;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 79   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??BDataSafeHandleClass@@QAEHXZ ENDP			; DataSafeHandleClass::operator int
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\datasafe.h
;	COMDAT ?Is_Valid@DataSafeHandleClass@@QBE_NXZ
_TEXT	SEGMENT
tv68 = -72						; size = 4
_this$ = -4						; size = 4
?Is_Valid@DataSafeHandleClass@@QBE_NXZ PROC		; DataSafeHandleClass::Is_Valid, COMDAT
; _this$ = ecx

; 68   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 69   : 		return Handle.Whole.WholeHandle != -1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN3@Is_Valid
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@Is_Valid
$LN3@Is_Valid:
	mov	DWORD PTR tv68[ebp], 0
$LN4@Is_Valid:
	mov	al, BYTE PTR tv68[ebp]

; 70   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Is_Valid@DataSafeHandleClass@@QBE_NXZ ENDP		; DataSafeHandleClass::Is_Valid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4SysTimeClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4SysTimeClass@@QAEAAV0@ABV0@@Z PROC			; SysTimeClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4SysTimeClass@@QAEAAV0@ABV0@@Z ENDP			; SysTimeClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Inverse@Matrix3@@QBE?AV1@XZ
_TEXT	SEGMENT
tv222 = -188						; size = 4
tv272 = -184						; size = 4
tv212 = -180						; size = 4
$T1 = -176						; size = 12
$T2 = -164						; size = 12
_i1$ = -88						; size = 4
_j$ = -84						; size = 4
_i$ = -80						; size = 4
_b$ = -76						; size = 36
_a$ = -40						; size = 36
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Inverse@Matrix3@@QBE?AV1@XZ PROC			; Matrix3::Inverse, COMDAT
; _this$ = ecx

; 309  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 188				; 000000bcH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 310  : 		Matrix3 a(*this);				// As a evolves from original mat into identity

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _a$[ebp]
	call	??0Matrix3@@QAE@ABV0@@Z			; Matrix3::Matrix3

; 311  : 		Matrix3 b(true);				// b evolves from identity into inverse(a)

	push	1
	lea	ecx, DWORD PTR _b$[ebp]
	call	??0Matrix3@@QAE@_N@Z			; Matrix3::Matrix3

; 312  : 		int i, j, i1;
; 313  : 
; 314  : 		// Loop over cols of a from left to right, eliminating above and below diagonal
; 315  : 		for (j=0; j<3; j++) {

	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN12@Inverse
$LN11@Inverse:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN12@Inverse:
	cmp	DWORD PTR _j$[ebp], 3
	jge	$LN10@Inverse

; 316  : 
; 317  : 			// Find largest pivot in column j among rows j..3
; 318  : 			i1 = j;

	mov	eax, DWORD PTR _j$[ebp]
	mov	DWORD PTR _i1$[ebp], eax

; 319  : 			for (i=j+1; i<3; i++) {

	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN9@Inverse
$LN8@Inverse:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@Inverse:
	cmp	DWORD PTR _i$[ebp], 3
	jge	$LN7@Inverse

; 320  : 				if (WWMath::Fabs(a[i][j]) > WWMath::Fabs(a[i1][j])) {

	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _a$[ebp]
	call	??AMatrix3@@QAEAAVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	call	?Fabs@WWMath@@SAMM@Z			; WWMath::Fabs
	add	esp, 4
	fstp	DWORD PTR tv212[ebp]
	movss	xmm0, DWORD PTR tv212[ebp]
	mov	edx, DWORD PTR _j$[ebp]
	push	edx
	mov	eax, DWORD PTR _i1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _a$[ebp]
	movss	DWORD PTR tv272[ebp], xmm0
	call	??AMatrix3@@QAEAAVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	call	?Fabs@WWMath@@SAMM@Z			; WWMath::Fabs
	add	esp, 4
	fstp	DWORD PTR tv222[ebp]
	movss	xmm0, DWORD PTR tv272[ebp]
	comiss	xmm0, DWORD PTR tv222[ebp]
	jbe	SHORT $LN6@Inverse

; 321  : 					i1 = i;

	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _i1$[ebp], eax
$LN6@Inverse:

; 322  : 				}
; 323  : 			}

	jmp	$LN8@Inverse
$LN7@Inverse:

; 324  : 
; 325  : 			// Swap rows i1 and j in a and b to put pivot on diagonal
; 326  : 			Swap(a.Row[i1], a.Row[j]);

	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	lea	ecx, DWORD PTR _a$[ebp+eax]
	push	ecx
	mov	edx, DWORD PTR _i1$[ebp]
	imul	edx, 12					; 0000000cH
	lea	eax, DWORD PTR _a$[ebp+edx]
	push	eax
	call	?Swap@@YAXAAVVector3@@0@Z		; Swap
	add	esp, 8

; 327  : 			Swap(b.Row[i1], b.Row[j]);

	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	lea	ecx, DWORD PTR _b$[ebp+eax]
	push	ecx
	mov	edx, DWORD PTR _i1$[ebp]
	imul	edx, 12					; 0000000cH
	lea	eax, DWORD PTR _b$[ebp+edx]
	push	eax
	call	?Swap@@YAXAAVVector3@@0@Z		; Swap
	add	esp, 8

; 328  : 
; 329  : 			// Scale row j to have a unit diagonal
; 330  : 			if (a[j][j]==0.) {

	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _j$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _a$[ebp]
	call	??AMatrix3@@QAEAAVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]

; 331  : 				//Matrix3::inverse: singular matrix; can't invert
; 332  : 			}
; 333  : 			b.Row[j] /= a.Row[j][j];

	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 12					; 0000000cH
	lea	ecx, DWORD PTR _a$[ebp+ecx]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 12					; 0000000cH
	lea	ecx, DWORD PTR _b$[ebp+edx]
	call	??_0Vector3@@QAEAAV0@M@Z		; Vector3::operator/=

; 334  : 			a.Row[j] /= a.Row[j][j];

	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 12					; 0000000cH
	lea	ecx, DWORD PTR _a$[ebp+ecx]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 12					; 0000000cH
	lea	ecx, DWORD PTR _a$[ebp+edx]
	call	??_0Vector3@@QAEAAV0@M@Z		; Vector3::operator/=

; 335  : 
; 336  : 			// Eliminate off-diagonal elems in col j of a, doing identical ops to b
; 337  : 			for (i=0; i<3; i++) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@Inverse
$LN3@Inverse:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@Inverse:
	cmp	DWORD PTR _i$[ebp], 3
	jge	$LN2@Inverse

; 338  : 				if (i != j) {

	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _j$[ebp]
	je	$LN1@Inverse

; 339  : 					b.Row[i] -= a[i][j] * b.Row[j];

	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	lea	ecx, DWORD PTR _b$[ebp+eax]
	push	ecx
	mov	edx, DWORD PTR _j$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _a$[ebp]
	call	??AMatrix3@@QAEAAVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??D@YA?AVVector3@@MABV0@@Z		; operator*
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 12					; 0000000cH
	lea	ecx, DWORD PTR _b$[ebp+edx]
	call	??ZVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator-=

; 340  : 					a.Row[i] -= a[i][j] * a.Row[j];

	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 12					; 0000000cH
	lea	ecx, DWORD PTR _a$[ebp+eax]
	push	ecx
	mov	edx, DWORD PTR _j$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _a$[ebp]
	call	??AMatrix3@@QAEAAVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??D@YA?AVVector3@@MABV0@@Z		; operator*
	add	esp, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 12					; 0000000cH
	lea	ecx, DWORD PTR _a$[ebp+edx]
	call	??ZVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator-=
$LN1@Inverse:

; 341  : 				}
; 342  : 			}

	jmp	$LN3@Inverse
$LN2@Inverse:

; 343  : 		}

	jmp	$LN11@Inverse
$LN10@Inverse:

; 344  : 		return b;

	lea	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Matrix3@@QAE@ABV0@@Z			; Matrix3::Matrix3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 345  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Inverse@Matrix3@@QBE?AV1@XZ ENDP			; Matrix3::Inverse
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Rotate_AABox_Extent@Matrix3@@QAEXABVVector3@@PAV2@@Z
_TEXT	SEGMENT
tv137 = -84						; size = 4
tv86 = -80						; size = 4
_j$1 = -12						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
_extent$ = 8						; size = 4
_new_extent$ = 12					; size = 4
?Rotate_AABox_Extent@Matrix3@@QAEXABVVector3@@PAV2@@Z PROC ; Matrix3::Rotate_AABox_Extent, COMDAT
; _this$ = ecx

; 298  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 299  : 		for (int i=0; i<3; i++)

	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN6@Rotate_AAB
$LN5@Rotate_AAB:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN6@Rotate_AAB:
	cmp	DWORD PTR _i$2[ebp], 3
	jge	$LN4@Rotate_AAB

; 300  : 		{
; 301  : 			(*new_extent)[i] = 0.0f;

	mov	eax, DWORD PTR _i$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _new_extent$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax], xmm0

; 302  : 			for (int j=0; j<3; j++)

	mov	DWORD PTR _j$1[ebp], 0
	jmp	SHORT $LN3@Rotate_AAB
$LN2@Rotate_AAB:
	mov	eax, DWORD PTR _j$1[ebp]
	add	eax, 1
	mov	DWORD PTR _j$1[ebp], eax
$LN3@Rotate_AAB:
	cmp	DWORD PTR _j$1[ebp], 3
	jge	SHORT $LN1@Rotate_AAB

; 303  : 			{
; 304  : 				(*new_extent)[i] += WWMath::Fabs(Row[i][j] * extent[j]);

	mov	eax, DWORD PTR _i$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _new_extent$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	mov	DWORD PTR tv86[ebp], eax
	mov	ecx, DWORD PTR _j$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _i$2[ebp]
	imul	ecx, 12					; 0000000cH
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	mov	esi, eax
	mov	edx, DWORD PTR _j$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _extent$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?Fabs@WWMath@@SAMM@Z			; WWMath::Fabs
	add	esp, 4
	fstp	DWORD PTR tv137[ebp]
	mov	eax, DWORD PTR tv86[ebp]
	movss	xmm0, DWORD PTR tv137[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv86[ebp]
	movss	DWORD PTR [ecx], xmm0

; 305  : 			}

	jmp	SHORT $LN2@Rotate_AAB
$LN1@Rotate_AAB:

; 306  : 		}

	jmp	$LN5@Rotate_AAB
$LN4@Rotate_AAB:

; 307  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Rotate_AABox_Extent@Matrix3@@QAEXABVVector3@@PAV2@@Z ENDP ; Matrix3::Rotate_AABox_Extent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Transpose_Rotate_Vector@Matrix3@@SAXABV1@ABVVector3@@PAV2@@Z
_TEXT	SEGMENT
tv237 = -88						; size = 4
tv233 = -88						; size = 4
tv229 = -88						; size = 4
tv235 = -84						; size = 4
tv231 = -84						; size = 4
tv227 = -84						; size = 4
_v$ = -16						; size = 4
_tmp$ = -12						; size = 12
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Transpose_Rotate_Vector@Matrix3@@SAXABV1@ABVVector3@@PAV2@@Z PROC ; Matrix3::Transpose_Rotate_Vector, COMDAT

; 283  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 284  : 		Vector3 tmp;

	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 285  : 		Vector3 * v;
; 286  : 		if (out == &in)

	mov	eax, DWORD PTR _out$[ebp]
	cmp	eax, DWORD PTR _in$[ebp]
	jne	SHORT $LN2@Transpose_

; 287  : 		{
; 288  : 			tmp = in;

	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 289  : 			v = &tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR _v$[ebp], eax

; 290  : 		} else {

	jmp	SHORT $LN1@Transpose_
$LN2@Transpose_:

; 291  : 			v = (Vector3 *)&in;

	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@Transpose_:

; 292  : 		}
; 293  : 		out->X = (A[0][0] * v->X + A[1][0] * v->Y + A[2][0] * v->Z);

	push	0
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	0
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv227[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv227[ebp]
	addss	xmm1, xmm0
	push	0
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv229[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv229[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx], xmm1

; 294  : 		out->Y = (A[0][1] * v->X + A[1][1] * v->Y + A[2][1] * v->Z);

	push	1
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv231[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv231[ebp]
	addss	xmm1, xmm0
	push	1
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv233[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv233[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+4], xmm1

; 295  : 		out->Z = (A[0][2] * v->X + A[1][2] * v->Y + A[2][2] * v->Z);

	push	2
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	2
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv235[ebp]
	addss	xmm1, xmm0
	push	2
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv237[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv237[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+8], xmm1

; 296  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Transpose_Rotate_Vector@Matrix3@@SAXABV1@ABVVector3@@PAV2@@Z ENDP ; Matrix3::Transpose_Rotate_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Rotate_Vector@Matrix3@@SAXABV1@ABVVector3@@PAV2@@Z
_TEXT	SEGMENT
tv237 = -88						; size = 4
tv233 = -88						; size = 4
tv229 = -88						; size = 4
tv235 = -84						; size = 4
tv231 = -84						; size = 4
tv227 = -84						; size = 4
_v$ = -16						; size = 4
_tmp$ = -12						; size = 12
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Rotate_Vector@Matrix3@@SAXABV1@ABVVector3@@PAV2@@Z PROC ; Matrix3::Rotate_Vector, COMDAT

; 266  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 267  : 		Vector3 tmp;

	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 268  : 		Vector3 * v;
; 269  : 		if (out == &in)

	mov	eax, DWORD PTR _out$[ebp]
	cmp	eax, DWORD PTR _in$[ebp]
	jne	SHORT $LN2@Rotate_Vec

; 270  : 		{
; 271  : 			tmp = in;

	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 272  : 			v = &tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR _v$[ebp], eax

; 273  : 		}
; 274  : 		else

	jmp	SHORT $LN1@Rotate_Vec
$LN2@Rotate_Vec:

; 275  : 		{
; 276  : 			v = (Vector3 *)&in;

	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@Rotate_Vec:

; 277  : 		}
; 278  : 		out->X = (A[0][0] * v->X + A[0][1] * v->Y + A[0][2] * v->Z);

	push	0
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv227[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv227[ebp]
	addss	xmm1, xmm0
	push	2
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv229[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv229[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx], xmm1

; 279  : 		out->Y = (A[1][0] * v->X + A[1][1] * v->Y + A[1][2] * v->Z);

	push	0
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv231[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv231[ebp]
	addss	xmm1, xmm0
	push	2
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv233[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv233[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+4], xmm1

; 280  : 		out->Z = (A[2][0] * v->X + A[2][1] * v->Y + A[2][2] * v->Z);

	push	0
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv235[ebp]
	addss	xmm1, xmm0
	push	2
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv237[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv237[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+8], xmm1

; 281  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Rotate_Vector@Matrix3@@SAXABV1@ABVVector3@@PAV2@@Z ENDP ; Matrix3::Rotate_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Subtract@Matrix3@@SAXABV1@0PAV1@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_res$ = 16						; size = 4
?Subtract@Matrix3@@SAXABV1@0PAV1@@Z PROC		; Matrix3::Subtract, COMDAT

; 257  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 258  : 		Vector3::Subtract(a.Row[0],b.Row[0],&(res->Row[0]));

	mov	eax, 12					; 0000000cH
	imul	eax, 0
	add	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _b$[ebp]
	push	ecx
	mov	edx, 12					; 0000000cH
	imul	edx, 0
	add	edx, DWORD PTR _a$[ebp]
	push	edx
	call	?Subtract@Vector3@@SAXABV1@0PAV1@@Z	; Vector3::Subtract
	add	esp, 12					; 0000000cH

; 259  : 		Vector3::Subtract(a.Row[1],b.Row[1],&(res->Row[1]));

	mov	eax, 12					; 0000000cH
	shl	eax, 0
	add	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _b$[ebp]
	push	ecx
	mov	edx, 12					; 0000000cH
	shl	edx, 0
	add	edx, DWORD PTR _a$[ebp]
	push	edx
	call	?Subtract@Vector3@@SAXABV1@0PAV1@@Z	; Vector3::Subtract
	add	esp, 12					; 0000000cH

; 260  : 		Vector3::Subtract(a.Row[2],b.Row[2],&(res->Row[2]));

	mov	eax, 12					; 0000000cH
	shl	eax, 1
	add	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _b$[ebp]
	push	ecx
	mov	edx, 12					; 0000000cH
	shl	edx, 1
	add	edx, DWORD PTR _a$[ebp]
	push	edx
	call	?Subtract@Vector3@@SAXABV1@0PAV1@@Z	; Vector3::Subtract
	add	esp, 12					; 0000000cH

; 261  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Subtract@Matrix3@@SAXABV1@0PAV1@@Z ENDP		; Matrix3::Subtract
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Add@Matrix3@@SAXABV1@0PAV1@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_res$ = 16						; size = 4
?Add@Matrix3@@SAXABV1@0PAV1@@Z PROC			; Matrix3::Add, COMDAT

; 251  : 	{ 

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 252  : 		Vector3::Add(a.Row[0],b.Row[0],&(res->Row[0]));

	mov	eax, 12					; 0000000cH
	imul	eax, 0
	add	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _b$[ebp]
	push	ecx
	mov	edx, 12					; 0000000cH
	imul	edx, 0
	add	edx, DWORD PTR _a$[ebp]
	push	edx
	call	?Add@Vector3@@SAXABV1@0PAV1@@Z		; Vector3::Add
	add	esp, 12					; 0000000cH

; 253  : 		Vector3::Add(a.Row[1],b.Row[1],&(res->Row[1]));

	mov	eax, 12					; 0000000cH
	shl	eax, 0
	add	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _b$[ebp]
	push	ecx
	mov	edx, 12					; 0000000cH
	shl	edx, 0
	add	edx, DWORD PTR _a$[ebp]
	push	edx
	call	?Add@Vector3@@SAXABV1@0PAV1@@Z		; Vector3::Add
	add	esp, 12					; 0000000cH

; 254  : 		Vector3::Add(a.Row[2],b.Row[2],&(res->Row[2]));

	mov	eax, 12					; 0000000cH
	shl	eax, 1
	add	eax, DWORD PTR _res$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _b$[ebp]
	push	ecx
	mov	edx, 12					; 0000000cH
	shl	edx, 1
	add	edx, DWORD PTR _a$[ebp]
	push	edx
	call	?Add@Vector3@@SAXABV1@0PAV1@@Z		; Vector3::Add
	add	esp, 12					; 0000000cH

; 255  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Add@Matrix3@@SAXABV1@0PAV1@@Z ENDP			; Matrix3::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??D@YA?AVVector3@@ABVMatrix3@@ABV0@@Z
_TEXT	SEGMENT
tv246 = -88						; size = 4
tv244 = -84						; size = 4
tv242 = -80						; size = 4
tv240 = -76						; size = 4
tv238 = -72						; size = 4
tv236 = -68						; size = 4
___$ReturnUdt$ = 8					; size = 4
_a$ = 12						; size = 4
_v$ = 16						; size = 4
??D@YA?AVVector3@@ABVMatrix3@@ABV0@@Z PROC		; operator*, COMDAT

; 398  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 399  : 	return Vector3(
; 400  : 		a[0][0] * v[0] + a[0][1] * v[1] + a[0][2] * v[2],
; 401  : 		a[1][0] * v[0] + a[1][1] * v[1] + a[1][2] * v[2],
; 402  : 		a[2][0] * v[0] + a[2][1] * v[1] + a[2][2] * v[2] 
; 403  : 	);

	push	0
	push	2
	mov	ecx, DWORD PTR _a$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	push	2
	mov	ecx, DWORD PTR _a$[ebp]
	movss	DWORD PTR tv236[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv236[ebp]
	addss	xmm1, xmm0
	push	2
	push	2
	mov	ecx, DWORD PTR _a$[ebp]
	movss	DWORD PTR tv238[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv238[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	0
	push	1
	mov	ecx, DWORD PTR _a$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	push	1
	mov	ecx, DWORD PTR _a$[ebp]
	movss	DWORD PTR tv240[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv240[ebp]
	addss	xmm1, xmm0
	push	2
	push	1
	mov	ecx, DWORD PTR _a$[ebp]
	movss	DWORD PTR tv242[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv242[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	0
	push	0
	mov	ecx, DWORD PTR _a$[ebp]
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	push	0
	mov	ecx, DWORD PTR _a$[ebp]
	movss	DWORD PTR tv244[ebp], xmm0
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv244[ebp]
	addss	xmm1, xmm0
	push	2
	push	0
	mov	ecx, DWORD PTR _a$[ebp]
	movss	DWORD PTR tv246[ebp], xmm1
	call	??AMatrix3@@QBEABVVector3@@H@Z		; Matrix3::operator[]
	mov	ecx, eax
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv246[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 404  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??D@YA?AVVector3@@ABVMatrix3@@ABV0@@Z ENDP		; operator*
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_Z_Vector@Matrix3@@QBEXPAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_set_z$ = 8						; size = 4
?Get_Z_Vector@Matrix3@@QBEXPAVVector3@@@Z PROC		; Matrix3::Get_Z_Vector, COMDAT
; _this$ = ecx

; 234  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 235  : 		set_z->Set(Row[0][2], Row[1][2], Row[2][2]);

	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _set_z$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 236  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Z_Vector@Matrix3@@QBEXPAVVector3@@@Z ENDP		; Matrix3::Get_Z_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_Y_Vector@Matrix3@@QBEXPAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_set_y$ = 8						; size = 4
?Get_Y_Vector@Matrix3@@QBEXPAVVector3@@@Z PROC		; Matrix3::Get_Y_Vector, COMDAT
; _this$ = ecx

; 230  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 231  : 		set_y->Set(Row[0][1], Row[1][1], Row[2][1]);

	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _set_y$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 232  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Y_Vector@Matrix3@@QBEXPAVVector3@@@Z ENDP		; Matrix3::Get_Y_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_X_Vector@Matrix3@@QBEXPAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_set_x$ = 8						; size = 4
?Get_X_Vector@Matrix3@@QBEXPAVVector3@@@Z PROC		; Matrix3::Get_X_Vector, COMDAT
; _this$ = ecx

; 226  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 227  : 		set_x->Set(Row[0][0], Row[1][0], Row[2][0]);

	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _set_x$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 228  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_X_Vector@Matrix3@@QBEXPAVVector3@@@Z ENDP		; Matrix3::Get_X_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_Z_Vector@Matrix3@@QBE?AVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Get_Z_Vector@Matrix3@@QBE?AVVector3@@XZ PROC		; Matrix3::Get_Z_Vector, COMDAT
; _this$ = ecx

; 222  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 223  : 		return Vector3(Row[0][2], Row[1][2], Row[2][2]);

	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 224  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Z_Vector@Matrix3@@QBE?AVVector3@@XZ ENDP		; Matrix3::Get_Z_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_Y_Vector@Matrix3@@QBE?AVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Get_Y_Vector@Matrix3@@QBE?AVVector3@@XZ PROC		; Matrix3::Get_Y_Vector, COMDAT
; _this$ = ecx

; 218  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 219  : 		return Vector3(Row[0][1], Row[1][1], Row[2][1]);

	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 220  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Y_Vector@Matrix3@@QBE?AVVector3@@XZ ENDP		; Matrix3::Get_Y_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_X_Vector@Matrix3@@QBE?AVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Get_X_Vector@Matrix3@@QBE?AVVector3@@XZ PROC		; Matrix3::Get_X_Vector, COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 		return Vector3(Row[0][0], Row[1][0], Row[2][0]);

	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 216  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_X_Vector@Matrix3@@QBE?AVVector3@@XZ ENDP		; Matrix3::Get_X_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_Z_Rotation@Matrix3@@QBEMXZ
_TEXT	SEGMENT
$T1 = -92						; size = 12
_v$ = -16						; size = 12
_this$ = -4						; size = 4
?Get_Z_Rotation@Matrix3@@QBEMXZ PROC			; Matrix3::Get_Z_Rotation, COMDAT
; _this$ = ecx

; 209  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 210  : 		Vector3 v = (*this) * Vector3(1.0,0.0,0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	push	ecx
	call	??D@YA?AVVector3@@ABVMatrix3@@ABV0@@Z	; operator*
	add	esp, 12					; 0000000cH

; 211  : 		return atan2(v[1],v[0]);

	push	0
	lea	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	lea	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	call	?atan2@@YAMMM@Z				; atan2
	add	esp, 8

; 212  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Z_Rotation@Matrix3@@QBEMXZ ENDP			; Matrix3::Get_Z_Rotation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_Y_Rotation@Matrix3@@QBEMXZ
_TEXT	SEGMENT
$T1 = -92						; size = 12
_v$ = -16						; size = 12
_this$ = -4						; size = 4
?Get_Y_Rotation@Matrix3@@QBEMXZ PROC			; Matrix3::Get_Y_Rotation, COMDAT
; _this$ = ecx

; 204  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 205  : 		Vector3 v = (*this) * Vector3(0.0,0.0,1.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	push	ecx
	call	??D@YA?AVVector3@@ABVMatrix3@@ABV0@@Z	; operator*
	add	esp, 12					; 0000000cH

; 206  : 		return atan2(v[0],v[2]);

	push	2
	lea	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	lea	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	call	?atan2@@YAMMM@Z				; atan2
	add	esp, 8

; 207  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Y_Rotation@Matrix3@@QBEMXZ ENDP			; Matrix3::Get_Y_Rotation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Get_X_Rotation@Matrix3@@QBEMXZ
_TEXT	SEGMENT
$T1 = -92						; size = 12
_v$ = -16						; size = 12
_this$ = -4						; size = 4
?Get_X_Rotation@Matrix3@@QBEMXZ PROC			; Matrix3::Get_X_Rotation, COMDAT
; _this$ = ecx

; 199  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 200  : 		Vector3 v = (*this) * Vector3(0.0,1.0,0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v$[ebp]
	push	ecx
	call	??D@YA?AVVector3@@ABVMatrix3@@ABV0@@Z	; operator*
	add	esp, 12					; 0000000cH

; 201  : 		return atan2(v[2], v[1]);

	push	1
	lea	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	lea	ecx, DWORD PTR _v$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	call	?atan2@@YAMMM@Z				; atan2
	add	esp, 8

; 202  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_X_Rotation@Matrix3@@QBEMXZ ENDP			; Matrix3::Get_X_Rotation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Rotate_Z@Matrix3@@QAEXMM@Z
_TEXT	SEGMENT
tv248 = -80						; size = 4
tv246 = -80						; size = 4
tv244 = -80						; size = 4
tv242 = -80						; size = 4
tv240 = -80						; size = 4
tv238 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Rotate_Z@Matrix3@@QAEXMM@Z PROC			; Matrix3::Rotate_Z, COMDAT
; _this$ = ecx

; 186  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 187  : 		float tmp1,tmp2;
; 188  : 		tmp1 = Row[0][0]; tmp2 = Row[0][1];

	push	0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 189  : 		Row[0][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv238[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv238[ebp]
	movss	DWORD PTR [eax], xmm0

; 190  : 		Row[0][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv240[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv240[ebp]
	movss	DWORD PTR [eax], xmm0

; 191  : 		tmp1 = Row[1][0]; tmp2 = Row[1][1];

	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 192  : 		Row[1][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv242[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv242[ebp]
	movss	DWORD PTR [eax], xmm0

; 193  : 		Row[1][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv244[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv244[ebp]
	movss	DWORD PTR [eax], xmm0

; 194  : 		tmp1 = Row[2][0]; tmp2 = Row[2][1];

	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 195  : 		Row[2][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv246[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv246[ebp]
	movss	DWORD PTR [eax], xmm0

; 196  : 		Row[2][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv248[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv248[ebp]
	movss	DWORD PTR [eax], xmm0

; 197  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Rotate_Z@Matrix3@@QAEXMM@Z ENDP			; Matrix3::Rotate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Rotate_Z@Matrix3@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Rotate_Z@Matrix3@@QAEXM@Z PROC				; Matrix3::Rotate_Z, COMDAT
; _this$ = ecx

; 182  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 183  : 		Rotate_Z(sinf(theta),cosf(theta));

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Rotate_Z@Matrix3@@QAEXMM@Z		; Matrix3::Rotate_Z

; 184  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Rotate_Z@Matrix3@@QAEXM@Z ENDP				; Matrix3::Rotate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Rotate_Y@Matrix3@@QAEXMM@Z
_TEXT	SEGMENT
tv245 = -80						; size = 4
tv243 = -80						; size = 4
tv241 = -80						; size = 4
tv239 = -80						; size = 4
tv237 = -80						; size = 4
tv235 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Rotate_Y@Matrix3@@QAEXMM@Z PROC			; Matrix3::Rotate_Y, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		float tmp1,tmp2;
; 171  : 		tmp1 = Row[0][0]; tmp2 = Row[0][2];

	push	0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 172  : 		Row[0][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv235[ebp]
	movss	DWORD PTR [eax], xmm0

; 173  : 		Row[0][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv237[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv237[ebp]
	movss	DWORD PTR [eax], xmm0

; 174  : 		tmp1 = Row[1][0]; tmp2 = Row[1][2];

	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 175  : 		Row[1][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv239[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv239[ebp]
	movss	DWORD PTR [eax], xmm0

; 176  : 		Row[1][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv241[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv241[ebp]
	movss	DWORD PTR [eax], xmm0

; 177  : 		tmp1 = Row[2][0]; tmp2 = Row[2][2];

	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 178  : 		Row[2][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv243[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv243[ebp]
	movss	DWORD PTR [eax], xmm0

; 179  : 		Row[2][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv245[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv245[ebp]
	movss	DWORD PTR [eax], xmm0

; 180  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Rotate_Y@Matrix3@@QAEXMM@Z ENDP			; Matrix3::Rotate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Rotate_Y@Matrix3@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Rotate_Y@Matrix3@@QAEXM@Z PROC				; Matrix3::Rotate_Y, COMDAT
; _this$ = ecx

; 165  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 166  : 		Rotate_Y(sinf(theta),cosf(theta));

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Rotate_Y@Matrix3@@QAEXMM@Z		; Matrix3::Rotate_Y

; 167  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Rotate_Y@Matrix3@@QAEXM@Z ENDP				; Matrix3::Rotate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Rotate_X@Matrix3@@QAEXMM@Z
_TEXT	SEGMENT
tv248 = -80						; size = 4
tv246 = -80						; size = 4
tv244 = -80						; size = 4
tv242 = -80						; size = 4
tv240 = -80						; size = 4
tv238 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Rotate_X@Matrix3@@QAEXMM@Z PROC			; Matrix3::Rotate_X, COMDAT
; _this$ = ecx

; 152  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 153  : 		float tmp1,tmp2;
; 154  : 		tmp1 = Row[0][1]; tmp2 = Row[0][2];

	push	1
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 155  : 		Row[0][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv238[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv238[ebp]
	movss	DWORD PTR [eax], xmm0

; 156  : 		Row[0][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv240[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv240[ebp]
	movss	DWORD PTR [eax], xmm0

; 157  : 		tmp1 = Row[1][1]; tmp2 = Row[1][2];

	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 158  : 		Row[1][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv242[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv242[ebp]
	movss	DWORD PTR [eax], xmm0

; 159  : 		Row[1][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv244[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv244[ebp]
	movss	DWORD PTR [eax], xmm0

; 160  : 		tmp1 = Row[2][1]; tmp2 = Row[2][2];

	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 161  : 		Row[2][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv246[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv246[ebp]
	movss	DWORD PTR [eax], xmm0

; 162  : 		Row[2][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv248[ebp], xmm0
	call	??AVector3@@QAEAAMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR tv248[ebp]
	movss	DWORD PTR [eax], xmm0

; 163  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Rotate_X@Matrix3@@QAEXMM@Z ENDP			; Matrix3::Rotate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Rotate_X@Matrix3@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Rotate_X@Matrix3@@QAEXM@Z PROC				; Matrix3::Rotate_X, COMDAT
; _this$ = ecx

; 148  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 149  : 		Rotate_X(sinf(theta),cosf(theta));

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Rotate_X@Matrix3@@QAEXMM@Z		; Matrix3::Rotate_X

; 150  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Rotate_X@Matrix3@@QAEXM@Z ENDP				; Matrix3::Rotate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Make_Identity@Matrix3@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Make_Identity@Matrix3@@QAEXXZ PROC			; Matrix3::Make_Identity, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 		Row[0].Set(1.0f,0.0f,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 144  : 		Row[1].Set(0.0f,1.0f,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 145  : 		Row[2].Set(0.0f,0.0f,1.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 146  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Make_Identity@Matrix3@@QAEXXZ ENDP			; Matrix3::Make_Identity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??_0Matrix3@@QAEAAV0@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_d$ = 8							; size = 4
??_0Matrix3@@QAEAAV0@M@Z PROC				; Matrix3::operator/=, COMDAT
; _this$ = ecx

; 137  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 138  : 		Row[0] /= d; Row[1] /= d; Row[2] /= d; 

	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??_0Vector3@@QAEAAV0@M@Z		; Vector3::operator/=
	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??_0Vector3@@QAEAAV0@M@Z		; Vector3::operator/=
	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??_0Vector3@@QAEAAV0@M@Z		; Vector3::operator/=

; 139  : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 140  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_0Matrix3@@QAEAAV0@M@Z ENDP				; Matrix3::operator/=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??XMatrix3@@QAEAAV0@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_d$ = 8							; size = 4
??XMatrix3@@QAEAAV0@M@Z PROC				; Matrix3::operator*=, COMDAT
; _this$ = ecx

; 132  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 133  : 		Row[0] *= d; Row[1] *= d; Row[2] *= d; 

	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector3@@QAEAAV0@M@Z			; Vector3::operator*=
	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector3@@QAEAAV0@M@Z			; Vector3::operator*=
	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector3@@QAEAAV0@M@Z			; Vector3::operator*=

; 134  : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 135  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??XMatrix3@@QAEAAV0@M@Z ENDP				; Matrix3::operator*=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??ZMatrix3@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??ZMatrix3@@QAEAAV0@ABV0@@Z PROC			; Matrix3::operator-=, COMDAT
; _this$ = ecx

; 127  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 128  : 		Row[0] -= m.Row[0]; Row[1] -= m.Row[1]; Row[2] -= m.Row[2]; 

	mov	eax, 12					; 0000000cH
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??ZVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator-=
	mov	eax, 12					; 0000000cH
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??ZVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator-=
	mov	eax, 12					; 0000000cH
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??ZVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator-=

; 129  : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 130  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??ZMatrix3@@QAEAAV0@ABV0@@Z ENDP			; Matrix3::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??YMatrix3@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??YMatrix3@@QAEAAV0@ABV0@@Z PROC			; Matrix3::operator+=, COMDAT
; _this$ = ecx

; 122  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 123  : 		Row[0] += m.Row[0]; Row[1] += m.Row[1]; Row[2] += m.Row[2]; 

	mov	eax, 12					; 0000000cH
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??YVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator+=
	mov	eax, 12					; 0000000cH
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??YVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator+=
	mov	eax, 12					; 0000000cH
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??YVector3@@QAEAAV0@ABV0@@Z		; Vector3::operator+=

; 124  : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 125  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??YMatrix3@@QAEAAV0@ABV0@@Z ENDP			; Matrix3::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??4Matrix3@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??4Matrix3@@QAEAAV0@ABV0@@Z PROC			; Matrix3::operator=, COMDAT
; _this$ = ecx

; 115  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 116  : 		Row[0] = m.Row[0]; Row[1] = m.Row[1]; Row[2] = m.Row[2];

	mov	eax, 12					; 0000000cH
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, 12					; 0000000cH
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, 12					; 0000000cH
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 117  : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 118  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Matrix3@@QAEAAV0@ABV0@@Z ENDP			; Matrix3::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Determinant@Matrix3@@QBEMXZ
_TEXT	SEGMENT
tv243 = -92						; size = 4
tv255 = -88						; size = 4
tv253 = -84						; size = 4
tv251 = -80						; size = 4
tv249 = -76						; size = 4
tv247 = -72						; size = 4
_this$ = -4						; size = 4
?Determinant@Matrix3@@QBEMXZ PROC			; Matrix3::Determinant, COMDAT
; _this$ = ecx

; 109  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 110  : 		return   Row[0][0] * (Row[1][1] * Row[2][2] - Row[1][2] * Row[2][1])
; 111  : 				- Row[0][1] * (Row[1][0] * Row[2][2] - Row[1][2] * Row[2][0])
; 112  : 				- Row[0][2] * (Row[1][0] * Row[2][1] - Row[1][1] * Row[2][0]);

	push	0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edi, eax
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, DWORD PTR [eax]
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv247[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edi, eax
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv247[ebp]
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR [esi]
	push	1
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv249[ebp], xmm1
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edi, eax
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, DWORD PTR [eax]
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv251[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edi, eax
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv251[ebp]
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR [esi]
	movss	xmm0, DWORD PTR tv249[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv253[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edi, eax
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv255[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	edi, eax
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv255[ebp]
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR [esi]
	movss	xmm0, DWORD PTR tv253[ebp]
	subss	xmm0, xmm1
	movss	DWORD PTR tv243[ebp], xmm0
	fld	DWORD PTR tv243[ebp]

; 113  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Determinant@Matrix3@@QBEMXZ ENDP			; Matrix3::Determinant
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Transpose@Matrix3@@QBE?AV1@XZ
_TEXT	SEGMENT
$T1 = -104						; size = 12
$T2 = -92						; size = 12
$T3 = -80						; size = 12
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Transpose@Matrix3@@QBE?AV1@XZ PROC			; Matrix3::Transpose, COMDAT
; _this$ = ecx

; 101  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 104				; 00000068H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 102  : 		return Matrix3(
; 103  : 				Vector3(Row[0][0], Row[1][0], Row[2][0]),
; 104  : 				Vector3(Row[0][1], Row[1][1], Row[2][1]),
; 105  : 				Vector3(Row[0][2], Row[1][2], Row[2][2])
; 106  : 		);

	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Matrix3@@QAE@ABVVector3@@00@Z	; Matrix3::Matrix3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 107  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Transpose@Matrix3@@QBE?AV1@XZ ENDP			; Matrix3::Transpose
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??AMatrix3@@QBEABVVector3@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AMatrix3@@QBEABVVector3@@H@Z PROC			; Matrix3::operator[], COMDAT
; _this$ = ecx

; 99   : 	TT_INLINE const Vector3 & operator [] (int i) const { return Row[i]; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	add	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AMatrix3@@QBEABVVector3@@H@Z ENDP			; Matrix3::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??AMatrix3@@QAEAAVVector3@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AMatrix3@@QAEAAVVector3@@H@Z PROC			; Matrix3::operator[], COMDAT
; _this$ = ecx

; 98   : 	TT_INLINE Vector3 & operator [] (int i) { return Row[i]; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	add	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AMatrix3@@QAEAAVVector3@@H@Z ENDP			; Matrix3::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Set@Matrix3@@QAEXABVVector3@@MM@Z
_TEXT	SEGMENT
tv359 = -80						; size = 4
tv353 = -80						; size = 4
tv347 = -80						; size = 4
tv357 = -76						; size = 4
tv351 = -76						; size = 4
tv345 = -76						; size = 4
tv355 = -72						; size = 4
tv349 = -72						; size = 4
tv343 = -72						; size = 4
_this$ = -4						; size = 4
_axis$ = 8						; size = 4
_s$ = 12						; size = 4
_c$ = 16						; size = 4
?Set@Matrix3@@QAEXABVVector3@@MM@Z PROC			; Matrix3::Set, COMDAT
; _this$ = ecx

; 80   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 81   : 		Row[0].Set(
; 82   : 			(float)(axis[0]*axis[0] + c*(1.0f - axis[0]*axis[0])),
; 83   : 			(float)(axis[0]*axis[1]*(1.0f - c) - axis[2]*s),
; 84   : 			(float)(axis[2]*axis[0]*(1.0f - c) + axis[1]*s)
; 85   : 		);

	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv343[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv343[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv345[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv345[ebp]
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv347[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR _c$[ebp]
	movss	xmm0, DWORD PTR tv347[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 86   : 		Row[1].Set(
; 87   : 			(float)(axis[0]*axis[1]*(1.0f - c) + axis[2]*s),
; 88   : 			(float)(axis[1]*axis[1] + c*(1.0f - axis[1]*axis[1])),
; 89   : 			(float)(axis[1]*axis[2]*(1.0f - c) - axis[0]*s)
; 90   : 		);

	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv349[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv349[ebp]
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv351[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR _c$[ebp]
	movss	xmm0, DWORD PTR tv351[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv353[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv353[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 91   : 	Row[2].Set(
; 92   : 			(float)(axis[2]*axis[0]*(1.0f - c) - axis[1]*s),
; 93   : 			(float)(axis[1]*axis[2]*(1.0f - c) + axis[0]*s),
; 94   : 			(float)(axis[2]*axis[2] + c*(1 - axis[2]*axis[2]))
; 95   : 		);

	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv355[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR _c$[ebp]
	movss	xmm0, DWORD PTR tv355[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv357[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv357[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv359[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv359[ebp]
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 96   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Set@Matrix3@@QAEXABVVector3@@MM@Z ENDP			; Matrix3::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Set@Matrix3@@QAEXABVVector3@@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_axis$ = 8						; size = 4
_angle$ = 12						; size = 4
?Set@Matrix3@@QAEXABVVector3@@M@Z PROC			; Matrix3::Set, COMDAT
; _this$ = ecx

; 76   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 77   : 		Set(axis,sinf(angle),cosf(angle));

	push	ecx
	movss	xmm0, DWORD PTR _angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _axis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3@@QAEXABVVector3@@MM@Z	; Matrix3::Set

; 78   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Set@Matrix3@@QAEXABVVector3@@M@Z ENDP			; Matrix3::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Set@Matrix3@@QAEXMMMMMMMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m11$ = 8						; size = 4
_m12$ = 12						; size = 4
_m13$ = 16						; size = 4
_m21$ = 20						; size = 4
_m22$ = 24						; size = 4
_m23$ = 28						; size = 4
_m31$ = 32						; size = 4
_m32$ = 36						; size = 4
_m33$ = 40						; size = 4
?Set@Matrix3@@QAEXMMMMMMMMM@Z PROC			; Matrix3::Set, COMDAT
; _this$ = ecx

; 70   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 71   : 		Row[0].Set(m11,m12,m13);

	push	ecx
	movss	xmm0, DWORD PTR _m13$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m12$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m11$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 72   : 		Row[1].Set(m21,m22,m23);

	push	ecx
	movss	xmm0, DWORD PTR _m23$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m22$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m21$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 73   : 		Row[2].Set(m31,m32,m33);

	push	ecx
	movss	xmm0, DWORD PTR _m33$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m32$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m31$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 74   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
?Set@Matrix3@@QAEXMMMMMMMMM@Z ENDP			; Matrix3::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ?Set@Matrix3@@QAEXABVVector3@@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
?Set@Matrix3@@QAEXABVVector3@@00@Z PROC			; Matrix3::Set, COMDAT
; _this$ = ecx

; 64   : 	{ 

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 65   : 		Row[0] = v0; 

	mov	eax, DWORD PTR _v0$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 66   : 		Row[1] = v1; 

	mov	eax, DWORD PTR _v1$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 67   : 		Row[2] = v2; 

	mov	eax, DWORD PTR _v2$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 68   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Set@Matrix3@@QAEXABVVector3@@00@Z ENDP			; Matrix3::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??0Matrix3@@QAE@ABVQuaternion@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_q$ = 8							; size = 4
??0Matrix3@@QAE@ABVQuaternion@@@Z PROC			; Matrix3::Matrix3, COMDAT
; _this$ = ecx

; 57   : 	TT_INLINE Matrix3(const Quaternion & q)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	3
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 58   : 	{
; 59   : 		this->Set(q);

	mov	eax, DWORD PTR _q$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3@@QAEXABVQuaternion@@@Z	; Matrix3::Set

; 60   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix3@@QAE@ABVQuaternion@@@Z ENDP			; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??0Matrix3@@QAE@ABVVector3@@MM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_axis$ = 8						; size = 4
_s_angle$ = 12						; size = 4
_c_angle$ = 16						; size = 4
??0Matrix3@@QAE@ABVVector3@@MM@Z PROC			; Matrix3::Matrix3, COMDAT
; _this$ = ecx

; 53   : 	TT_INLINE explicit Matrix3(const Vector3 & axis,float s_angle,float c_angle)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	3
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 54   : 	{ 
; 55   : 		Set(axis,s_angle,c_angle); 

	push	ecx
	movss	xmm0, DWORD PTR _c_angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _s_angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _axis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3@@QAEXABVVector3@@MM@Z	; Matrix3::Set

; 56   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0Matrix3@@QAE@ABVVector3@@MM@Z ENDP			; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??0Matrix3@@QAE@ABVVector3@@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_axis$ = 8						; size = 4
_angle$ = 12						; size = 4
??0Matrix3@@QAE@ABVVector3@@M@Z PROC			; Matrix3::Matrix3, COMDAT
; _this$ = ecx

; 49   : 	TT_INLINE explicit Matrix3(const Vector3 & axis,float angle)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	3
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 50   : 	{ 
; 51   : 		Set(axis,angle); 

	push	ecx
	movss	xmm0, DWORD PTR _angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _axis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3@@QAEXABVVector3@@M@Z	; Matrix3::Set

; 52   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0Matrix3@@QAE@ABVVector3@@M@Z ENDP			; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??0Matrix3@@QAE@MMMMMMMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m11$ = 8						; size = 4
_m12$ = 12						; size = 4
_m13$ = 16						; size = 4
_m21$ = 20						; size = 4
_m22$ = 24						; size = 4
_m23$ = 28						; size = 4
_m31$ = 32						; size = 4
_m32$ = 36						; size = 4
_m33$ = 40						; size = 4
??0Matrix3@@QAE@MMMMMMMMM@Z PROC			; Matrix3::Matrix3, COMDAT
; _this$ = ecx

; 43   : 	TT_INLINE explicit Matrix3(float m11,float m12,float m13,float m21,float m22,float m23,float m31,float m32,float m33)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	3
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 44   : 	{
; 45   : 		Row[0].Set(m11,m12,m13);

	push	ecx
	movss	xmm0, DWORD PTR _m13$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m12$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m11$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 46   : 		Row[1].Set(m21,m22,m23);

	push	ecx
	movss	xmm0, DWORD PTR _m23$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m22$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m21$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 47   : 		Row[2].Set(m31,m32,m33);

	push	ecx
	movss	xmm0, DWORD PTR _m33$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m32$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m31$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 48   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
??0Matrix3@@QAE@MMMMMMMMM@Z ENDP			; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??0Matrix3@@QAE@ABVVector3@@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0Matrix3@@QAE@ABVVector3@@00@Z PROC			; Matrix3::Matrix3, COMDAT
; _this$ = ecx

; 35   : 	TT_INLINE explicit Matrix3(const Vector3 & v0, const Vector3 & v1, const Vector3 & v2)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	3
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 36   : 	{ 
; 37   : 		Row[0] = v0; 

	mov	eax, DWORD PTR _v0$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 38   : 		Row[1] = v1; 

	mov	eax, DWORD PTR _v1$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 39   : 		Row[2] = v2; 

	mov	eax, DWORD PTR _v2$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 40   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0Matrix3@@QAE@ABVVector3@@00@Z ENDP			; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??0Matrix3@@QAE@_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_identity$ = 8						; size = 1
??0Matrix3@@QAE@_N@Z PROC				; Matrix3::Matrix3, COMDAT
; _this$ = ecx

; 26   : 	TT_INLINE explicit Matrix3(bool identity)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	3
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 27   : 	{
; 28   : 		if (identity)

	movzx	eax, BYTE PTR _identity$[ebp]
	test	eax, eax
	je	$LN1@Matrix3

; 29   : 		{
; 30   : 			Row[0].Set(1.0,0.0,0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 31   : 			Row[1].Set(0.0,1.0,0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set

; 32   : 			Row[2].Set(0.0,0.0,1.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set
$LN1@Matrix3:

; 33   : 		}
; 34   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix3@@QAE@_N@Z ENDP				; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??0Matrix3@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??0Matrix3@@QAE@ABV0@@Z PROC				; Matrix3::Matrix3, COMDAT
; _this$ = ecx

; 22   : 	TT_INLINE Matrix3(const Matrix3 & m)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	3
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 23   : 	{
; 24   : 		Row[0] = m.Row[0]; Row[1] = m.Row[1]; Row[2] = m.Row[2];

	mov	eax, 12					; 0000000cH
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, 12					; 0000000cH
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, 12					; 0000000cH
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 25   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix3@@QAE@ABV0@@Z ENDP				; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3.h
;	COMDAT ??0Matrix3@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Matrix3@@QAE@XZ PROC					; Matrix3::Matrix3, COMDAT
; _this$ = ecx

; 21   : 	TT_INLINE Matrix3(void) {};

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector3@@QAE@XZ		; Vector3::Vector3
	push	3
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Matrix3@@QAE@XZ ENDP					; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Transform_Vector@Matrix4@@SAXABV1@ABVVector4@@PAV2@@Z
_TEXT	SEGMENT
tv342 = -96						; size = 4
tv336 = -96						; size = 4
tv330 = -96						; size = 4
tv324 = -96						; size = 4
tv340 = -92						; size = 4
tv334 = -92						; size = 4
tv328 = -92						; size = 4
tv322 = -92						; size = 4
tv338 = -88						; size = 4
tv332 = -88						; size = 4
tv326 = -88						; size = 4
tv320 = -88						; size = 4
_v$ = -20						; size = 4
_tmp$ = -16						; size = 16
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Transform_Vector@Matrix4@@SAXABV1@ABVVector4@@PAV2@@Z PROC ; Matrix4::Transform_Vector, COMDAT

; 227  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi

; 228  : 		Vector4 tmp;

	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector4@@QAE@XZ			; Vector4::Vector4

; 229  : 		Vector4 * v;
; 230  : 		if (out == &in)

	mov	eax, DWORD PTR _out$[ebp]
	cmp	eax, DWORD PTR _in$[ebp]
	jne	SHORT $LN2@Transform_

; 231  : 		{
; 232  : 			tmp = in;

	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 233  : 			v = &tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR _v$[ebp], eax

; 234  : 		}
; 235  : 		else

	jmp	SHORT $LN1@Transform_
$LN2@Transform_:

; 236  : 		{
; 237  : 			v = (Vector4 *)&in;

	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@Transform_:

; 238  : 		}
; 239  : 		out->X = (A[0][0] * v->X + A[0][1] * v->Y + A[0][2] * v->Z + A[0][3] * v->W);

	push	0
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv320[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv320[ebp]
	addss	xmm1, xmm0
	push	2
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv322[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv322[ebp]
	addss	xmm1, xmm0
	push	3
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv324[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+12]
	movss	xmm1, DWORD PTR tv324[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR _out$[ebp]
	movss	DWORD PTR [eax], xmm1

; 240  : 		out->Y = (A[1][0] * v->X + A[1][1] * v->Y + A[1][2] * v->Z + A[1][3] * v->W);

	push	0
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv326[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv326[ebp]
	addss	xmm1, xmm0
	push	2
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv328[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv328[ebp]
	addss	xmm1, xmm0
	push	3
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv330[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+12]
	movss	xmm1, DWORD PTR tv330[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR _out$[ebp]
	movss	DWORD PTR [eax+4], xmm1

; 241  : 		out->Z = (A[2][0] * v->X + A[2][1] * v->Y + A[2][2] * v->Z + A[2][3] * v->W);

	push	0
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv332[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv332[ebp]
	addss	xmm1, xmm0
	push	2
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv334[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv334[ebp]
	addss	xmm1, xmm0
	push	3
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv336[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+12]
	movss	xmm1, DWORD PTR tv336[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR _out$[ebp]
	movss	DWORD PTR [eax+8], xmm1

; 242  : 		out->W = (A[3][0] * v->X + A[3][1] * v->Y + A[3][2] * v->Z + A[3][3] * v->W);

	push	0
	push	3
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	3
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv338[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv338[ebp]
	addss	xmm1, xmm0
	push	2
	push	3
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv340[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv340[ebp]
	addss	xmm1, xmm0
	push	3
	push	3
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv342[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+12]
	movss	xmm1, DWORD PTR tv342[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR _out$[ebp]
	movss	DWORD PTR [eax+12], xmm1

; 243  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Transform_Vector@Matrix4@@SAXABV1@ABVVector4@@PAV2@@Z ENDP ; Matrix4::Transform_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Transform_Vector@Matrix4@@SAXABV1@ABVVector3@@PAVVector4@@@Z
_TEXT	SEGMENT
tv265 = -76						; size = 4
tv259 = -76						; size = 4
tv253 = -76						; size = 4
tv263 = -72						; size = 4
tv257 = -72						; size = 4
tv251 = -72						; size = 4
tv261 = -68						; size = 4
tv255 = -68						; size = 4
tv249 = -68						; size = 4
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Transform_Vector@Matrix4@@SAXABV1@ABVVector3@@PAVVector4@@@Z PROC ; Matrix4::Transform_Vector, COMDAT

; 220  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi

; 221  : 		out->X = (A[0][0] * in.X + A[0][1] * in.Y + A[0][2] * in.Z + A[0][3]);

	push	0
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv249[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv249[ebp]
	addss	xmm1, xmm0
	push	2
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv251[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv251[ebp]
	addss	xmm1, xmm0
	push	3
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv253[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv253[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx], xmm0

; 222  : 		out->Y = (A[1][0] * in.X + A[1][1] * in.Y + A[1][2] * in.Z + A[1][3]);

	push	0
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv255[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv255[ebp]
	addss	xmm1, xmm0
	push	2
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv257[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv257[ebp]
	addss	xmm1, xmm0
	push	3
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv259[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv259[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+4], xmm0

; 223  : 		out->Z = (A[2][0] * in.X + A[2][1] * in.Y + A[2][2] * in.Z + A[2][3]);

	push	0
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv261[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv261[ebp]
	addss	xmm1, xmm0
	push	2
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv263[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _in$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv263[ebp]
	addss	xmm1, xmm0
	push	3
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv265[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv265[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+8], xmm0

; 224  : 		out->W = 1.0f;

	mov	eax, DWORD PTR _out$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+12], xmm0

; 225  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Transform_Vector@Matrix4@@SAXABV1@ABVVector3@@PAVVector4@@@Z ENDP ; Matrix4::Transform_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Transform_Vector@Matrix4@@SAXABV1@ABVVector3@@PAV2@@Z
_TEXT	SEGMENT
tv270 = -92						; size = 4
tv264 = -92						; size = 4
tv258 = -92						; size = 4
tv268 = -88						; size = 4
tv262 = -88						; size = 4
tv256 = -88						; size = 4
tv266 = -84						; size = 4
tv260 = -84						; size = 4
tv254 = -84						; size = 4
_v$ = -16						; size = 4
_tmp$ = -12						; size = 12
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Transform_Vector@Matrix4@@SAXABV1@ABVVector3@@PAV2@@Z PROC ; Matrix4::Transform_Vector, COMDAT

; 203  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi

; 204  : 		Vector3 tmp;

	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 205  : 		Vector3 *v;
; 206  : 		if (out == &in)

	mov	eax, DWORD PTR _out$[ebp]
	cmp	eax, DWORD PTR _in$[ebp]
	jne	SHORT $LN2@Transform_

; 207  : 		{
; 208  : 			tmp = in;

	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 209  : 			v = &tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR _v$[ebp], eax

; 210  : 		}
; 211  : 		else

	jmp	SHORT $LN1@Transform_
$LN2@Transform_:

; 212  : 		{
; 213  : 			v = (Vector3 *)&in;

	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@Transform_:

; 214  : 		}
; 215  : 		out->X = (A[0][0] * v->X + A[0][1] * v->Y + A[0][2] * v->Z + A[0][3]);

	push	0
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv254[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv254[ebp]
	addss	xmm1, xmm0
	push	2
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv256[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv256[ebp]
	addss	xmm1, xmm0
	push	3
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv258[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv258[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx], xmm0

; 216  : 		out->Y = (A[1][0] * v->X + A[1][1] * v->Y + A[1][2] * v->Z + A[1][3]);

	push	0
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv260[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv260[ebp]
	addss	xmm1, xmm0
	push	2
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv262[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv262[ebp]
	addss	xmm1, xmm0
	push	3
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv264[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv264[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+4], xmm0

; 217  : 		out->Z = (A[2][0] * v->X + A[2][1] * v->Y + A[2][2] * v->Z + A[2][3]);

	push	0
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv266[ebp], xmm0
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv266[ebp]
	addss	xmm1, xmm0
	push	2
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv268[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv268[ebp]
	addss	xmm1, xmm0
	push	3
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv270[ebp], xmm1
	call	??AMatrix4@@QBEABVVector4@@H@Z		; Matrix4::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv270[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+8], xmm0

; 218  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Transform_Vector@Matrix4@@SAXABV1@ABVVector3@@PAV2@@Z ENDP ; Matrix4::Transform_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??_0Matrix4@@QAEAAV0@M@Z
_TEXT	SEGMENT
_ood$ = -8						; size = 4
_this$ = -4						; size = 4
_d$ = 8							; size = 4
??_0Matrix4@@QAEAAV0@M@Z PROC				; Matrix4::operator/=, COMDAT
; _this$ = ecx

; 177  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 178  : 		float ood = d;

	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR _ood$[ebp], xmm0

; 179  : 		Row[0] *= ood; Row[1] *= ood; Row[2] *= ood; Row[3] *= ood;

	push	ecx
	movss	xmm0, DWORD PTR _ood$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector4@@QAEAAV0@M@Z			; Vector4::operator*=
	push	ecx
	movss	xmm0, DWORD PTR _ood$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector4@@QAEAAV0@M@Z			; Vector4::operator*=
	push	ecx
	movss	xmm0, DWORD PTR _ood$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector4@@QAEAAV0@M@Z			; Vector4::operator*=
	push	ecx
	movss	xmm0, DWORD PTR _ood$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector4@@QAEAAV0@M@Z			; Vector4::operator*=

; 180  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 181  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_0Matrix4@@QAEAAV0@M@Z ENDP				; Matrix4::operator/=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??XMatrix4@@QAEAAV0@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_d$ = 8							; size = 4
??XMatrix4@@QAEAAV0@M@Z PROC				; Matrix4::operator*=, COMDAT
; _this$ = ecx

; 172  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 173  : 		Row[0] *= d; Row[1] *= d; Row[2] *= d; Row[3] *= d;

	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector4@@QAEAAV0@M@Z			; Vector4::operator*=
	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector4@@QAEAAV0@M@Z			; Vector4::operator*=
	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector4@@QAEAAV0@M@Z			; Vector4::operator*=
	push	ecx
	movss	xmm0, DWORD PTR _d$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??XVector4@@QAEAAV0@M@Z			; Vector4::operator*=

; 174  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 175  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??XMatrix4@@QAEAAV0@M@Z ENDP				; Matrix4::operator*=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??ZMatrix4@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??ZMatrix4@@QAEAAV0@ABV0@@Z PROC			; Matrix4::operator-=, COMDAT
; _this$ = ecx

; 167  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 168  : 		Row[0] -= m.Row[0]; Row[1] -= m.Row[1]; Row[2] -= m.Row[2]; Row[3] -= m.Row[3];

	mov	eax, 16					; 00000010H
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??ZVector4@@QAEAAV0@ABV0@@Z		; Vector4::operator-=
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??ZVector4@@QAEAAV0@ABV0@@Z		; Vector4::operator-=
	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??ZVector4@@QAEAAV0@ABV0@@Z		; Vector4::operator-=
	mov	eax, 16					; 00000010H
	imul	eax, 3
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??ZVector4@@QAEAAV0@ABV0@@Z		; Vector4::operator-=

; 169  : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 170  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??ZMatrix4@@QAEAAV0@ABV0@@Z ENDP			; Matrix4::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??YMatrix4@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??YMatrix4@@QAEAAV0@ABV0@@Z PROC			; Matrix4::operator+=, COMDAT
; _this$ = ecx

; 162  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 		Row[0] += m.Row[0]; Row[1] += m.Row[1]; Row[2] += m.Row[2]; Row[3] += m.Row[3];

	mov	eax, 16					; 00000010H
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??YVector4@@QAEAAV0@ABV0@@Z		; Vector4::operator+=
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??YVector4@@QAEAAV0@ABV0@@Z		; Vector4::operator+=
	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??YVector4@@QAEAAV0@ABV0@@Z		; Vector4::operator+=
	mov	eax, 16					; 00000010H
	imul	eax, 3
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??YVector4@@QAEAAV0@ABV0@@Z		; Vector4::operator+=

; 164  : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 165  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??YMatrix4@@QAEAAV0@ABV0@@Z ENDP			; Matrix4::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??4Matrix4@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??4Matrix4@@QAEAAV0@ABV0@@Z PROC			; Matrix4::operator=, COMDAT
; _this$ = ecx

; 157  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 158  : 		Row[0] = m.Row[0]; Row[1] = m.Row[1]; Row[2] = m.Row[2]; Row[3] = m.Row[3];

	mov	eax, 16					; 00000010H
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, 16					; 00000010H
	imul	eax, 3
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 159  : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 160  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Matrix4@@QAEAAV0@ABV0@@Z ENDP			; Matrix4::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Inverse@Matrix4@@QBE?AV1@XZ
_TEXT	SEGMENT
_t$ = -72						; size = 64
_s$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Inverse@Matrix4@@QBE?AV1@XZ PROC			; Matrix4::Inverse, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 136				; 00000088H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 134  : 		float s = Determinant();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Determinant@Matrix4@@QBEMXZ		; Matrix4::Determinant
	fstp	DWORD PTR _s$[ebp]

; 135  : 		if (s == 0.0) return Matrix4();

	cvtss2sd xmm0, DWORD PTR _s$[ebp]
	ucomisd	xmm0, QWORD PTR __real@0000000000000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN1@Inverse
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Matrix4@@QAE@XZ			; Matrix4::Matrix4
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN2@Inverse
$LN1@Inverse:

; 136  : 		s = 1/s;

	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR _s$[ebp]
	movss	DWORD PTR _s$[ebp], xmm0

; 137  : 		Matrix4 t;

	lea	ecx, DWORD PTR _t$[ebp]
	call	??0Matrix4@@QAE@XZ			; Matrix4::Matrix4

; 138  : 		t.Row[0].X = s*(Row[1].Y*(Row[2].Z*Row[3].W - Row[2].W*Row[3].Z) + Row[1].Z*(Row[2].W*Row[3].Y - Row[2].Y*Row[3].W) + Row[1].W*(Row[2].Y*Row[3].Z - Row[2].Z*Row[3].Y));

	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+8]
	mulss	xmm0, DWORD PTR [edi+edx+12]
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+12]
	mulss	xmm1, DWORD PTR [edi+edx+8]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+4]
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+12]
	mulss	xmm1, DWORD PTR [edi+ecx+4]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+4]
	mulss	xmm2, DWORD PTR [edi+ecx+12]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+8]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+4]
	mulss	xmm1, DWORD PTR [edi+eax+8]
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+8]
	mulss	xmm2, DWORD PTR [edi+eax+4]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+12]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	movss	DWORD PTR _t$[ebp+eax], xmm0

; 139  : 		t.Row[0].Y = s*(Row[2].Y*(Row[0].Z*Row[3].W - Row[0].W*Row[3].Z) + Row[2].Z*(Row[0].W*Row[3].Y - Row[0].Y*Row[3].W) + Row[2].W*(Row[0].Y*Row[3].Z - Row[0].Z*Row[3].Y));

	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+8]
	mulss	xmm0, DWORD PTR [edi+edx+12]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+12]
	mulss	xmm1, DWORD PTR [edi+edx+8]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+4]
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+12]
	mulss	xmm1, DWORD PTR [edi+ecx+4]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+4]
	mulss	xmm2, DWORD PTR [edi+ecx+12]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+8]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+4]
	mulss	xmm1, DWORD PTR [edi+eax+8]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+8]
	mulss	xmm2, DWORD PTR [edi+eax+4]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+12]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	movss	DWORD PTR _t$[ebp+eax+4], xmm0

; 140  : 		t.Row[0].Z = s*(Row[3].Y*(Row[0].Z*Row[1].W - Row[0].W*Row[1].Z) + Row[3].Z*(Row[0].W*Row[1].Y - Row[0].Y*Row[1].W) + Row[3].W*(Row[0].Y*Row[1].Z - Row[0].Z*Row[1].Y));

	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+8]
	mulss	xmm0, DWORD PTR [edi+edx+12]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+12]
	mulss	xmm1, DWORD PTR [edi+edx+8]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+4]
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+12]
	mulss	xmm1, DWORD PTR [edi+ecx+4]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+4]
	mulss	xmm2, DWORD PTR [edi+ecx+12]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+8]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+4]
	mulss	xmm1, DWORD PTR [edi+eax+8]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+8]
	mulss	xmm2, DWORD PTR [edi+eax+4]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+12]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	movss	DWORD PTR _t$[ebp+eax+8], xmm0

; 141  : 		t.Row[0].W = s*(Row[0].Y*(Row[1].W*Row[2].Z - Row[1].Z*Row[2].W) + Row[0].Z*(Row[1].Y*Row[2].W - Row[1].W*Row[2].Y) + Row[0].W*(Row[1].Z*Row[2].Y - Row[1].Y*Row[2].Z));

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+12]
	mulss	xmm0, DWORD PTR [edi+edx+8]
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+8]
	mulss	xmm1, DWORD PTR [edi+edx+12]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+4]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+4]
	mulss	xmm1, DWORD PTR [edi+ecx+12]
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+12]
	mulss	xmm2, DWORD PTR [edi+ecx+4]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+8]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+8]
	mulss	xmm1, DWORD PTR [edi+eax+4]
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+4]
	mulss	xmm2, DWORD PTR [edi+eax+8]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+12]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	movss	DWORD PTR _t$[ebp+eax+12], xmm0

; 142  : 		t.Row[1].X = s*(Row[1].Z*(Row[2].X*Row[3].W - Row[2].W*Row[3].X) + Row[1].W*(Row[2].Z*Row[3].X - Row[2].X*Row[3].Z) + Row[1].X*(Row[2].W*Row[3].Z - Row[2].Z*Row[3].W));

	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx]
	mulss	xmm0, DWORD PTR [edi+edx+12]
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+12]
	mulss	xmm1, DWORD PTR [edi+edx]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+8]
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+8]
	mulss	xmm1, DWORD PTR [edi+ecx]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax]
	mulss	xmm2, DWORD PTR [edi+ecx+8]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+12]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+12]
	mulss	xmm1, DWORD PTR [edi+eax+8]
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+8]
	mulss	xmm2, DWORD PTR [edi+eax+12]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	shl	eax, 0
	movss	DWORD PTR _t$[ebp+eax], xmm0

; 143  : 		t.Row[1].Y = s*(Row[2].Z*(Row[0].X*Row[3].W - Row[0].W*Row[3].X) + Row[2].W*(Row[0].Z*Row[3].X - Row[0].X*Row[3].Z) + Row[2].X*(Row[0].W*Row[3].Z - Row[0].Z*Row[3].W));

	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx]
	mulss	xmm0, DWORD PTR [edi+edx+12]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+12]
	mulss	xmm1, DWORD PTR [edi+edx]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+8]
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+8]
	mulss	xmm1, DWORD PTR [edi+ecx]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax]
	mulss	xmm2, DWORD PTR [edi+ecx+8]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+12]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+12]
	mulss	xmm1, DWORD PTR [edi+eax+8]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+8]
	mulss	xmm2, DWORD PTR [edi+eax+12]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	shl	eax, 0
	movss	DWORD PTR _t$[ebp+eax+4], xmm0

; 144  : 		t.Row[1].Z = s*(Row[3].Z*(Row[0].X*Row[1].W - Row[0].W*Row[1].X) + Row[3].W*(Row[0].Z*Row[1].X - Row[0].X*Row[1].Z) + Row[3].X*(Row[0].W*Row[1].Z - Row[0].Z*Row[1].W));

	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx]
	mulss	xmm0, DWORD PTR [edi+edx+12]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+12]
	mulss	xmm1, DWORD PTR [edi+edx]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+8]
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+8]
	mulss	xmm1, DWORD PTR [edi+ecx]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax]
	mulss	xmm2, DWORD PTR [edi+ecx+8]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+12]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+12]
	mulss	xmm1, DWORD PTR [edi+eax+8]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+8]
	mulss	xmm2, DWORD PTR [edi+eax+12]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	shl	eax, 0
	movss	DWORD PTR _t$[ebp+eax+8], xmm0

; 145  : 		t.Row[1].W = s*(Row[0].Z*(Row[1].W*Row[2].X - Row[1].X*Row[2].W) + Row[0].W*(Row[1].X*Row[2].Z - Row[1].Z*Row[2].X) + Row[0].X*(Row[1].Z*Row[2].W - Row[1].W*Row[2].Z));

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+12]
	mulss	xmm0, DWORD PTR [edi+edx]
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx]
	mulss	xmm1, DWORD PTR [edi+edx+12]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+8]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax]
	mulss	xmm1, DWORD PTR [edi+ecx+8]
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+8]
	mulss	xmm2, DWORD PTR [edi+ecx]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+12]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+8]
	mulss	xmm1, DWORD PTR [edi+eax+12]
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+12]
	mulss	xmm2, DWORD PTR [edi+eax+8]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	shl	eax, 0
	movss	DWORD PTR _t$[ebp+eax+12], xmm0

; 146  : 		t.Row[2].X = s*(Row[1].W*(Row[2].X*Row[3].Y - Row[2].Y*Row[3].X) + Row[1].X*(Row[2].Y*Row[3].W - Row[2].W*Row[3].Y) + Row[1].Y*(Row[2].W*Row[3].X - Row[2].X*Row[3].W));

	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx]
	mulss	xmm0, DWORD PTR [edi+edx+4]
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+4]
	mulss	xmm1, DWORD PTR [edi+edx]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+12]
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+4]
	mulss	xmm1, DWORD PTR [edi+ecx+12]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+12]
	mulss	xmm2, DWORD PTR [edi+ecx+4]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+12]
	mulss	xmm1, DWORD PTR [edi+eax]
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx]
	mulss	xmm2, DWORD PTR [edi+eax+12]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+4]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movss	DWORD PTR _t$[ebp+eax], xmm0

; 147  : 		t.Row[2].Y = s*(Row[2].W*(Row[0].X*Row[3].Y - Row[0].Y*Row[3].X) + Row[2].X*(Row[0].Y*Row[3].W - Row[0].W*Row[3].Y) + Row[2].Y*(Row[0].W*Row[3].X - Row[0].X*Row[3].W));

	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx]
	mulss	xmm0, DWORD PTR [edi+edx+4]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+4]
	mulss	xmm1, DWORD PTR [edi+edx]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+12]
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+4]
	mulss	xmm1, DWORD PTR [edi+ecx+12]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+12]
	mulss	xmm2, DWORD PTR [edi+ecx+4]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+12]
	mulss	xmm1, DWORD PTR [edi+eax]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx]
	mulss	xmm2, DWORD PTR [edi+eax+12]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+4]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movss	DWORD PTR _t$[ebp+eax+4], xmm0

; 148  : 		t.Row[2].Z = s*(Row[3].W*(Row[0].X*Row[1].Y - Row[0].Y*Row[1].X) + Row[3].X*(Row[0].Y*Row[1].W - Row[0].W*Row[1].Y) + Row[3].Y*(Row[0].W*Row[1].X - Row[0].X*Row[1].W));

	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx]
	mulss	xmm0, DWORD PTR [edi+edx+4]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+4]
	mulss	xmm1, DWORD PTR [edi+edx]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+12]
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+4]
	mulss	xmm1, DWORD PTR [edi+ecx+12]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+12]
	mulss	xmm2, DWORD PTR [edi+ecx+4]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+12]
	mulss	xmm1, DWORD PTR [edi+eax]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx]
	mulss	xmm2, DWORD PTR [edi+eax+12]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+4]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movss	DWORD PTR _t$[ebp+eax+8], xmm0

; 149  : 		t.Row[2].W = s*(Row[0].W*(Row[1].Y*Row[2].X - Row[1].X*Row[2].Y) + Row[0].X*(Row[1].W*Row[2].Y - Row[1].Y*Row[2].W) + Row[0].Y*(Row[1].X*Row[2].W - Row[1].W*Row[2].X));

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+4]
	mulss	xmm0, DWORD PTR [edi+edx]
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx]
	mulss	xmm1, DWORD PTR [edi+edx+4]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+12]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+12]
	mulss	xmm1, DWORD PTR [edi+ecx+4]
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+4]
	mulss	xmm2, DWORD PTR [edi+ecx+12]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx]
	mulss	xmm1, DWORD PTR [edi+eax+12]
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+12]
	mulss	xmm2, DWORD PTR [edi+eax]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+4]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movss	DWORD PTR _t$[ebp+eax+12], xmm0

; 150  : 		t.Row[3].X = s*(Row[1].X*(Row[2].Z*Row[3].Y - Row[2].Y*Row[3].Z) + Row[1].Y*(Row[2].X*Row[3].Z - Row[2].Z*Row[3].X) + Row[1].Z*(Row[2].Y*Row[3].X - Row[2].X*Row[3].Y));

	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+8]
	mulss	xmm0, DWORD PTR [edi+edx+4]
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+4]
	mulss	xmm1, DWORD PTR [edi+edx+8]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax]
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax]
	mulss	xmm1, DWORD PTR [edi+ecx+8]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+8]
	mulss	xmm2, DWORD PTR [edi+ecx]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+4]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+4]
	mulss	xmm1, DWORD PTR [edi+eax]
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx]
	mulss	xmm2, DWORD PTR [edi+eax+4]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+8]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	imul	eax, 3
	movss	DWORD PTR _t$[ebp+eax], xmm0

; 151  : 		t.Row[3].Y = s*(Row[2].X*(Row[0].Z*Row[3].Y - Row[0].Y*Row[3].Z) + Row[2].Y*(Row[0].X*Row[3].Z - Row[0].Z*Row[3].X) + Row[2].Z*(Row[0].Y*Row[3].X - Row[0].X*Row[3].Y));

	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+8]
	mulss	xmm0, DWORD PTR [edi+edx+4]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+4]
	mulss	xmm1, DWORD PTR [edi+edx+8]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax]
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax]
	mulss	xmm1, DWORD PTR [edi+ecx+8]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+8]
	mulss	xmm2, DWORD PTR [edi+ecx]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+4]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+4]
	mulss	xmm1, DWORD PTR [edi+eax]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx]
	mulss	xmm2, DWORD PTR [edi+eax+4]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+8]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	imul	eax, 3
	movss	DWORD PTR _t$[ebp+eax+4], xmm0

; 152  : 		t.Row[3].Z = s*(Row[3].X*(Row[0].Z*Row[1].Y - Row[0].Y*Row[1].Z) + Row[3].Y*(Row[0].X*Row[1].Z - Row[0].Z*Row[1].X) + Row[3].Z*(Row[0].Y*Row[1].X - Row[0].X*Row[1].Y));

	mov	eax, 16					; 00000010H
	imul	eax, 3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+8]
	mulss	xmm0, DWORD PTR [edi+edx+4]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+4]
	mulss	xmm1, DWORD PTR [edi+edx+8]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax]
	mov	edx, 16					; 00000010H
	imul	edx, 3
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax]
	mulss	xmm1, DWORD PTR [edi+ecx+8]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax+8]
	mulss	xmm2, DWORD PTR [edi+ecx]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+4]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx+4]
	mulss	xmm1, DWORD PTR [edi+eax]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx]
	mulss	xmm2, DWORD PTR [edi+eax+4]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+8]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	imul	eax, 3
	movss	DWORD PTR _t$[ebp+eax+8], xmm0

; 153  : 		t.Row[3].W = s*(Row[0].X*(Row[1].Y*Row[2].Z - Row[1].Z*Row[2].Y) + Row[0].Y*(Row[1].Z*Row[2].X - Row[1].X*Row[2].Z) + Row[0].Z*(Row[1].X*Row[2].Y - Row[1].Y*Row[2].X));

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [esi+ecx+4]
	mulss	xmm0, DWORD PTR [edi+edx+8]
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+ecx+8]
	mulss	xmm1, DWORD PTR [edi+edx+4]
	subss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+eax+8]
	mulss	xmm1, DWORD PTR [edi+ecx]
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+eax]
	mulss	xmm2, DWORD PTR [edi+ecx+8]
	subss	xmm1, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+edx+4]
	addss	xmm0, xmm1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [esi+edx]
	mulss	xmm1, DWORD PTR [edi+eax+4]
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [esi+edx+4]
	mulss	xmm2, DWORD PTR [edi+eax]
	subss	xmm1, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [edx+ecx+8]
	addss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, 16					; 00000010H
	imul	eax, 3
	movss	DWORD PTR _t$[ebp+eax+12], xmm0

; 154  : 		return t;

	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Matrix4@@QAE@ABV0@@Z			; Matrix4::Matrix4
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@Inverse:

; 155  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Inverse@Matrix4@@QBE?AV1@XZ ENDP			; Matrix4::Inverse
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Determinant@Matrix4@@QBEMXZ
_TEXT	SEGMENT
_det$ = -8						; size = 4
_this$ = -4						; size = 4
?Determinant@Matrix4@@QBEMXZ PROC			; Matrix4::Determinant, COMDAT
; _this$ = ecx

; 122  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 123  : 		float det;
; 124  : 		det =	(Row[0].X * Row[1].Y - Row[0].Y * Row[1].X) * (Row[2].Z * Row[3].W - Row[2].W * Row[3].Z);

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+eax]
	mulss	xmm0, DWORD PTR [esi+ecx+4]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+4]
	mulss	xmm1, DWORD PTR [esi+ecx]
	subss	xmm0, xmm1
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+8]
	mulss	xmm1, DWORD PTR [esi+ecx+12]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [edx+eax+12]
	mulss	xmm2, DWORD PTR [esi+ecx+8]
	subss	xmm1, xmm2
	mulss	xmm0, xmm1
	movss	DWORD PTR _det$[ebp], xmm0

; 125  : 		det -=	(Row[0].X * Row[1].Z - Row[0].Z * Row[1].X) * (Row[2].Y * Row[3].W - Row[2].W * Row[3].Y);

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+eax]
	mulss	xmm0, DWORD PTR [esi+ecx+8]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+8]
	mulss	xmm1, DWORD PTR [esi+ecx]
	subss	xmm0, xmm1
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+4]
	mulss	xmm1, DWORD PTR [esi+ecx+12]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [edx+eax+12]
	mulss	xmm2, DWORD PTR [esi+ecx+4]
	subss	xmm1, xmm2
	mulss	xmm0, xmm1
	movss	xmm1, DWORD PTR _det$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _det$[ebp], xmm1

; 126  : 		det +=	(Row[0].X * Row[1].W - Row[0].W * Row[1].X) * (Row[2].Y * Row[3].Z - Row[2].Z * Row[3].Y);

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+eax]
	mulss	xmm0, DWORD PTR [esi+ecx+12]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+12]
	mulss	xmm1, DWORD PTR [esi+ecx]
	subss	xmm0, xmm1
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+4]
	mulss	xmm1, DWORD PTR [esi+ecx+8]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [edx+eax+8]
	mulss	xmm2, DWORD PTR [esi+ecx+4]
	subss	xmm1, xmm2
	mulss	xmm0, xmm1
	addss	xmm0, DWORD PTR _det$[ebp]
	movss	DWORD PTR _det$[ebp], xmm0

; 127  : 		det +=	(Row[0].Y * Row[1].Z - Row[0].Z * Row[1].Y) * (Row[2].X * Row[3].W - Row[2].W * Row[3].X);

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+eax+4]
	mulss	xmm0, DWORD PTR [esi+ecx+8]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+8]
	mulss	xmm1, DWORD PTR [esi+ecx+4]
	subss	xmm0, xmm1
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax]
	mulss	xmm1, DWORD PTR [esi+ecx+12]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [edx+eax+12]
	mulss	xmm2, DWORD PTR [esi+ecx]
	subss	xmm1, xmm2
	mulss	xmm0, xmm1
	addss	xmm0, DWORD PTR _det$[ebp]
	movss	DWORD PTR _det$[ebp], xmm0

; 128  : 		det -=	(Row[0].Y * Row[1].W - Row[0].W * Row[1].Y) * (Row[2].X * Row[3].Z - Row[2].Z * Row[3].X);

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+eax+4]
	mulss	xmm0, DWORD PTR [esi+ecx+12]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+12]
	mulss	xmm1, DWORD PTR [esi+ecx+4]
	subss	xmm0, xmm1
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax]
	mulss	xmm1, DWORD PTR [esi+ecx+8]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [edx+eax+8]
	mulss	xmm2, DWORD PTR [esi+ecx]
	subss	xmm1, xmm2
	mulss	xmm0, xmm1
	movss	xmm1, DWORD PTR _det$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _det$[ebp], xmm1

; 129  : 		det +=	(Row[0].Z * Row[1].W - Row[0].W * Row[1].Z) * (Row[2].X * Row[3].Y - Row[2].Y * Row[3].X);		

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+eax+8]
	mulss	xmm0, DWORD PTR [esi+ecx+12]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax+12]
	mulss	xmm1, DWORD PTR [esi+ecx+8]
	subss	xmm0, xmm1
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+eax]
	mulss	xmm1, DWORD PTR [esi+ecx+4]
	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [edx+eax+4]
	mulss	xmm2, DWORD PTR [esi+ecx]
	subss	xmm1, xmm2
	mulss	xmm0, xmm1
	addss	xmm0, DWORD PTR _det$[ebp]
	movss	DWORD PTR _det$[ebp], xmm0

; 130  : 		return det;	

	fld	DWORD PTR _det$[ebp]

; 131  : 	};	

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Determinant@Matrix4@@QBEMXZ ENDP			; Matrix4::Determinant
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Transpose@Matrix4@@QBE?AV1@XZ
_TEXT	SEGMENT
$T1 = -132						; size = 16
$T2 = -116						; size = 16
$T3 = -100						; size = 16
$T4 = -84						; size = 16
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Transpose@Matrix4@@QBE?AV1@XZ PROC			; Matrix4::Transpose, COMDAT
; _this$ = ecx

; 118  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 132				; 00000084H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 119  : 		return Matrix4(Vector4(Row[0][0], Row[1][0], Row[2][0], Row[3][0]),Vector4(Row[0][1], Row[1][1], Row[2][1], Row[3][1]),Vector4(Row[0][2], Row[1][2], Row[2][2], Row[3][2]),Vector4(Row[0][3], Row[1][3], Row[2][3], Row[3][3]));

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0Vector4@@QAE@MMMM@Z			; Vector4::Vector4
	push	eax
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0Vector4@@QAE@MMMM@Z			; Vector4::Vector4
	push	eax
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0Vector4@@QAE@MMMM@Z			; Vector4::Vector4
	push	eax
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0Vector4@@QAE@MMMM@Z			; Vector4::Vector4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Matrix4@@QAE@ABVVector4@@000@Z	; Matrix4::Matrix4
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 120  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Transpose@Matrix4@@QBE?AV1@XZ ENDP			; Matrix4::Transpose
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??AMatrix4@@QBEABVVector4@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AMatrix4@@QBEABVVector4@@H@Z PROC			; Matrix4::operator[], COMDAT
; _this$ = ecx

; 116  : 	TT_INLINE const Vector4 & operator [] (int i) const { return Row[i]; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AMatrix4@@QBEABVVector4@@H@Z ENDP			; Matrix4::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??AMatrix4@@QAEAAVVector4@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AMatrix4@@QAEAAVVector4@@H@Z PROC			; Matrix4::operator[], COMDAT
; _this$ = ecx

; 115  : 	TT_INLINE Vector4 & operator [] (int i) { return Row[i]; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AMatrix4@@QAEAAVVector4@@H@Z ENDP			; Matrix4::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Init_Perspective@Matrix4@@QAEXMMMMMM@Z
_TEXT	SEGMENT
tv218 = -72						; size = 4
tv216 = -72						; size = 4
tv214 = -72						; size = 4
tv212 = -72						; size = 4
tv210 = -72						; size = 4
tv208 = -72						; size = 4
_this$ = -4						; size = 4
_left$ = 8						; size = 4
_right$ = 12						; size = 4
_bottom$ = 16						; size = 4
_top$ = 20						; size = 4
_znear$ = 24						; size = 4
_zfar$ = 28						; size = 4
?Init_Perspective@Matrix4@@QAEXMMMMMM@Z PROC		; Matrix4::Init_Perspective, COMDAT
; _this$ = ecx

; 103  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 104  : 		Make_Identity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Make_Identity@Matrix4@@QAEXXZ		; Matrix4::Make_Identity

; 105  : 		Row[0][0] = static_cast<float>(2.0*znear / (right - left));

	cvtss2sd xmm0, DWORD PTR _znear$[ebp]
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	movss	xmm1, DWORD PTR _right$[ebp]
	subss	xmm1, DWORD PTR _left$[ebp]
	cvtss2sd xmm1, xmm1
	divsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv208[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv208[ebp]
	movss	DWORD PTR [eax], xmm0

; 106  : 		Row[0][2] = (right + left) / (right - left);

	movss	xmm0, DWORD PTR _right$[ebp]
	addss	xmm0, DWORD PTR _left$[ebp]
	movss	xmm1, DWORD PTR _right$[ebp]
	subss	xmm1, DWORD PTR _left$[ebp]
	divss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv210[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv210[ebp]
	movss	DWORD PTR [eax], xmm0

; 107  : 		Row[1][1] = static_cast<float>(2.0*znear / (top - bottom));

	cvtss2sd xmm0, DWORD PTR _znear$[ebp]
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	movss	xmm1, DWORD PTR _top$[ebp]
	subss	xmm1, DWORD PTR _bottom$[ebp]
	cvtss2sd xmm1, xmm1
	divsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv212[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv212[ebp]
	movss	DWORD PTR [eax], xmm0

; 108  : 		Row[1][2] = (top + bottom) / (top - bottom);

	movss	xmm0, DWORD PTR _top$[ebp]
	addss	xmm0, DWORD PTR _bottom$[ebp]
	movss	xmm1, DWORD PTR _top$[ebp]
	subss	xmm1, DWORD PTR _bottom$[ebp]
	divss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv214[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv214[ebp]
	movss	DWORD PTR [eax], xmm0

; 109  : 		Row[2][2] = zfar / (znear - zfar);

	movss	xmm0, DWORD PTR _znear$[ebp]
	subss	xmm0, DWORD PTR _zfar$[ebp]
	movss	xmm1, DWORD PTR _zfar$[ebp]
	divss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv216[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv216[ebp]
	movss	DWORD PTR [eax], xmm0

; 110  : 		Row[2][3] = (znear * zfar) / (znear - zfar);

	movss	xmm0, DWORD PTR _znear$[ebp]
	mulss	xmm0, DWORD PTR _zfar$[ebp]
	movss	xmm1, DWORD PTR _znear$[ebp]
	subss	xmm1, DWORD PTR _zfar$[ebp]
	divss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv218[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv218[ebp]
	movss	DWORD PTR [eax], xmm0

; 111  : 		Row[3][2] = -1.0f;

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [eax], xmm0

; 112  : 		Row[3][3] = 0.0f;

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax], xmm0

; 113  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?Init_Perspective@Matrix4@@QAEXMMMMMM@Z ENDP		; Matrix4::Init_Perspective
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Init_Ortho@Matrix4@@QAEXMMMMMM@Z
_TEXT	SEGMENT
tv190 = -72						; size = 4
tv188 = -72						; size = 4
tv186 = -72						; size = 4
tv184 = -72						; size = 4
tv182 = -72						; size = 4
tv180 = -72						; size = 4
_this$ = -4						; size = 4
_left$ = 8						; size = 4
_right$ = 12						; size = 4
_bottom$ = 16						; size = 4
_top$ = 20						; size = 4
_znear$ = 24						; size = 4
_zfar$ = 28						; size = 4
?Init_Ortho@Matrix4@@QAEXMMMMMM@Z PROC			; Matrix4::Init_Ortho, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		Make_Identity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Make_Identity@Matrix4@@QAEXXZ		; Matrix4::Make_Identity

; 94   : 		Row[0][0] = 2.0f / (right - left);

	movss	xmm0, DWORD PTR _right$[ebp]
	subss	xmm0, DWORD PTR _left$[ebp]
	movss	xmm1, DWORD PTR __real@40000000
	divss	xmm1, xmm0
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv180[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv180[ebp]
	movss	DWORD PTR [eax], xmm0

; 95   : 		Row[0][3] = (left + right) / (left - right);

	movss	xmm0, DWORD PTR _left$[ebp]
	addss	xmm0, DWORD PTR _right$[ebp]
	movss	xmm1, DWORD PTR _left$[ebp]
	subss	xmm1, DWORD PTR _right$[ebp]
	divss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv182[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv182[ebp]
	movss	DWORD PTR [eax], xmm0

; 96   : 		Row[1][1] = 2.0f / (top - bottom);

	movss	xmm0, DWORD PTR _top$[ebp]
	subss	xmm0, DWORD PTR _bottom$[ebp]
	movss	xmm1, DWORD PTR __real@40000000
	divss	xmm1, xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv184[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv184[ebp]
	movss	DWORD PTR [eax], xmm0

; 97   : 		Row[1][3] = (top + bottom) / (bottom - top);

	movss	xmm0, DWORD PTR _top$[ebp]
	addss	xmm0, DWORD PTR _bottom$[ebp]
	movss	xmm1, DWORD PTR _bottom$[ebp]
	subss	xmm1, DWORD PTR _top$[ebp]
	divss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv186[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv186[ebp]
	movss	DWORD PTR [eax], xmm0

; 98   : 		Row[2][2] = 1.0f / (znear - zfar);

	movss	xmm0, DWORD PTR _znear$[ebp]
	subss	xmm0, DWORD PTR _zfar$[ebp]
	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv188[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv188[ebp]
	movss	DWORD PTR [eax], xmm0

; 99   : 		Row[2][3] = znear / (znear - zfar);

	movss	xmm0, DWORD PTR _znear$[ebp]
	subss	xmm0, DWORD PTR _zfar$[ebp]
	movss	xmm1, DWORD PTR _znear$[ebp]
	divss	xmm1, xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv190[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv190[ebp]
	movss	DWORD PTR [eax], xmm0

; 100  : 
; 101  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?Init_Ortho@Matrix4@@QAEXMMMMMM@Z ENDP			; Matrix4::Init_Ortho
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Init_Perspective_OGL@Matrix4@@QAEXMMMMMM@Z
_TEXT	SEGMENT
tv227 = -72						; size = 4
tv225 = -72						; size = 4
tv223 = -72						; size = 4
tv221 = -72						; size = 4
tv219 = -72						; size = 4
tv217 = -72						; size = 4
_this$ = -4						; size = 4
_left$ = 8						; size = 4
_right$ = 12						; size = 4
_bottom$ = 16						; size = 4
_top$ = 20						; size = 4
_znear$ = 24						; size = 4
_zfar$ = 28						; size = 4
?Init_Perspective_OGL@Matrix4@@QAEXMMMMMM@Z PROC	; Matrix4::Init_Perspective_OGL, COMDAT
; _this$ = ecx

; 80   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 81   : 		Make_Identity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Make_Identity@Matrix4@@QAEXXZ		; Matrix4::Make_Identity

; 82   : 		Row[0][0] = static_cast<float>(2.0*znear / (right - left));

	cvtss2sd xmm0, DWORD PTR _znear$[ebp]
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	movss	xmm1, DWORD PTR _right$[ebp]
	subss	xmm1, DWORD PTR _left$[ebp]
	cvtss2sd xmm1, xmm1
	divsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv217[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv217[ebp]
	movss	DWORD PTR [eax], xmm0

; 83   : 		Row[0][2] = (right + left) / (right - left);

	movss	xmm0, DWORD PTR _right$[ebp]
	addss	xmm0, DWORD PTR _left$[ebp]
	movss	xmm1, DWORD PTR _right$[ebp]
	subss	xmm1, DWORD PTR _left$[ebp]
	divss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv219[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv219[ebp]
	movss	DWORD PTR [eax], xmm0

; 84   : 		Row[1][1] = static_cast<float>(2.0*znear / (top - bottom));

	cvtss2sd xmm0, DWORD PTR _znear$[ebp]
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	movss	xmm1, DWORD PTR _top$[ebp]
	subss	xmm1, DWORD PTR _bottom$[ebp]
	cvtss2sd xmm1, xmm1
	divsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv221[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv221[ebp]
	movss	DWORD PTR [eax], xmm0

; 85   : 		Row[1][2] = (top + bottom) / (top - bottom);

	movss	xmm0, DWORD PTR _top$[ebp]
	addss	xmm0, DWORD PTR _bottom$[ebp]
	movss	xmm1, DWORD PTR _top$[ebp]
	subss	xmm1, DWORD PTR _bottom$[ebp]
	divss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv223[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv223[ebp]
	movss	DWORD PTR [eax], xmm0

; 86   : 		Row[2][2] = -(zfar + znear) / (zfar - znear);

	movss	xmm0, DWORD PTR _zfar$[ebp]
	addss	xmm0, DWORD PTR _znear$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR _zfar$[ebp]
	subss	xmm1, DWORD PTR _znear$[ebp]
	divss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv225[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv225[ebp]
	movss	DWORD PTR [eax], xmm0

; 87   : 		Row[2][3] = static_cast<float>(-(2.0*zfar*znear) / (zfar - znear));

	cvtss2sd xmm0, DWORD PTR _zfar$[ebp]
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	cvtss2sd xmm1, DWORD PTR _znear$[ebp]
	mulsd	xmm0, xmm1
	xorpd	xmm0, QWORD PTR __xmm@80000000000000008000000000000000
	movss	xmm1, DWORD PTR _zfar$[ebp]
	subss	xmm1, DWORD PTR _znear$[ebp]
	cvtss2sd xmm1, xmm1
	divsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv227[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv227[ebp]
	movss	DWORD PTR [eax], xmm0

; 88   : 		Row[3][2] = -1.0f;

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [eax], xmm0

; 89   : 		Row[3][3] = 0.0f;

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax], xmm0

; 90   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?Init_Perspective_OGL@Matrix4@@QAEXMMMMMM@Z ENDP	; Matrix4::Init_Perspective_OGL
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Init_Perspective_OGL@Matrix4@@QAEXMMMM@Z
_TEXT	SEGMENT
tv191 = -72						; size = 4
tv189 = -72						; size = 4
tv187 = -72						; size = 4
tv185 = -72						; size = 4
_this$ = -4						; size = 4
_hfov$ = 8						; size = 4
_vfov$ = 12						; size = 4
_znear$ = 16						; size = 4
_zfar$ = 20						; size = 4
?Init_Perspective_OGL@Matrix4@@QAEXMMMM@Z PROC		; Matrix4::Init_Perspective_OGL, COMDAT
; _this$ = ecx

; 70   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 71   : 		Make_Identity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Make_Identity@Matrix4@@QAEXXZ		; Matrix4::Make_Identity

; 72   : 		Row[0][0] = static_cast<float>(1.0 / tan(hfov*0.5));

	cvtss2sd xmm0, DWORD PTR _hfov$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	call	__libm_sse2_tan_precise
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	divsd	xmm1, xmm0
	cvtsd2ss xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv185[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv185[ebp]
	movss	DWORD PTR [eax], xmm0

; 73   : 		Row[1][1] = static_cast<float>(1.0 / tan(vfov*0.5));

	cvtss2sd xmm0, DWORD PTR _vfov$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	call	__libm_sse2_tan_precise
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	divsd	xmm1, xmm0
	cvtsd2ss xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv187[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv187[ebp]
	movss	DWORD PTR [eax], xmm0

; 74   : 		Row[2][2] = -(zfar + znear) / (zfar - znear);

	movss	xmm0, DWORD PTR _zfar$[ebp]
	addss	xmm0, DWORD PTR _znear$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR _zfar$[ebp]
	subss	xmm1, DWORD PTR _znear$[ebp]
	divss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv189[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv189[ebp]
	movss	DWORD PTR [eax], xmm0

; 75   : 		Row[2][3] = static_cast<float>(-(2.0*zfar*znear) / (zfar - znear));

	cvtss2sd xmm0, DWORD PTR _zfar$[ebp]
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	cvtss2sd xmm1, DWORD PTR _znear$[ebp]
	mulsd	xmm0, xmm1
	xorpd	xmm0, QWORD PTR __xmm@80000000000000008000000000000000
	movss	xmm1, DWORD PTR _zfar$[ebp]
	subss	xmm1, DWORD PTR _znear$[ebp]
	cvtss2sd xmm1, xmm1
	divsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv191[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv191[ebp]
	movss	DWORD PTR [eax], xmm0

; 76   : 		Row[3][2] = -1.0f;

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [eax], xmm0

; 77   : 		Row[3][3] = 0.0f;

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax], xmm0

; 78   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Init_Perspective_OGL@Matrix4@@QAEXMMMM@Z ENDP		; Matrix4::Init_Perspective_OGL
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Init_Ortho_OGL@Matrix4@@QAEXMMMMMM@Z
_TEXT	SEGMENT
tv195 = -72						; size = 4
tv193 = -72						; size = 4
tv191 = -72						; size = 4
tv189 = -72						; size = 4
tv187 = -72						; size = 4
tv185 = -72						; size = 4
_this$ = -4						; size = 4
_left$ = 8						; size = 4
_right$ = 12						; size = 4
_bottom$ = 16						; size = 4
_top$ = 20						; size = 4
_znear$ = 24						; size = 4
_zfar$ = 28						; size = 4
?Init_Ortho_OGL@Matrix4@@QAEXMMMMMM@Z PROC		; Matrix4::Init_Ortho_OGL, COMDAT
; _this$ = ecx

; 59   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 60   : 		Make_Identity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Make_Identity@Matrix4@@QAEXXZ		; Matrix4::Make_Identity

; 61   : 		Row[0][0] = 2.0f / (right - left);

	movss	xmm0, DWORD PTR _right$[ebp]
	subss	xmm0, DWORD PTR _left$[ebp]
	movss	xmm1, DWORD PTR __real@40000000
	divss	xmm1, xmm0
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv185[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv185[ebp]
	movss	DWORD PTR [eax], xmm0

; 62   : 		Row[0][3] = -(right + left) / (right - left);

	movss	xmm0, DWORD PTR _right$[ebp]
	addss	xmm0, DWORD PTR _left$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR _right$[ebp]
	subss	xmm1, DWORD PTR _left$[ebp]
	divss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv187[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv187[ebp]
	movss	DWORD PTR [eax], xmm0

; 63   : 		Row[1][1] = 2.0f / (top - bottom);

	movss	xmm0, DWORD PTR _top$[ebp]
	subss	xmm0, DWORD PTR _bottom$[ebp]
	movss	xmm1, DWORD PTR __real@40000000
	divss	xmm1, xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv189[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv189[ebp]
	movss	DWORD PTR [eax], xmm0

; 64   : 		Row[1][3] = -(top + bottom) / (top - bottom);

	movss	xmm0, DWORD PTR _top$[ebp]
	addss	xmm0, DWORD PTR _bottom$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR _top$[ebp]
	subss	xmm1, DWORD PTR _bottom$[ebp]
	divss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv191[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv191[ebp]
	movss	DWORD PTR [eax], xmm0

; 65   : 		Row[2][2] = -2.0f / (zfar - znear);

	movss	xmm0, DWORD PTR _zfar$[ebp]
	subss	xmm0, DWORD PTR _znear$[ebp]
	movss	xmm1, DWORD PTR __real@c0000000
	divss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv193[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv193[ebp]
	movss	DWORD PTR [eax], xmm0

; 66   : 		Row[2][3] = -(zfar + znear) / (zfar - znear);

	movss	xmm0, DWORD PTR _zfar$[ebp]
	addss	xmm0, DWORD PTR _znear$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR _zfar$[ebp]
	subss	xmm1, DWORD PTR _znear$[ebp]
	divss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv195[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv195[ebp]
	movss	DWORD PTR [eax], xmm0

; 67   : 
; 68   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?Init_Ortho_OGL@Matrix4@@QAEXMMMMMM@Z ENDP		; Matrix4::Init_Ortho_OGL
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Init@Matrix4@@QAEXABVVector4@@000@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
?Init@Matrix4@@QAEXABVVector4@@000@Z PROC		; Matrix4::Init, COMDAT
; _this$ = ecx

; 55   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		Row[0] = v0; Row[1] = v1; Row[2] = v2; Row[3] = v3;

	mov	eax, DWORD PTR _v0$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, DWORD PTR _v1$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, DWORD PTR _v2$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, DWORD PTR _v3$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 57   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Init@Matrix4@@QAEXABVVector4@@000@Z ENDP		; Matrix4::Init
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Init@Matrix4@@QAEXABVMatrix3D@@@Z
_TEXT	SEGMENT
$T1 = -84						; size = 16
_this$ = -4						; size = 4
_m$ = 8							; size = 4
?Init@Matrix4@@QAEXABVMatrix3D@@@Z PROC			; Matrix4::Init, COMDAT
; _this$ = ecx

; 51   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 52   : 		Row[0] = m[0]; Row[1] = m[1]; Row[2] = m[2]; Row[3] = Vector4(0.0,0.0,0.0,1.0); 

	push	0
	mov	ecx, DWORD PTR _m$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	push	1
	mov	ecx, DWORD PTR _m$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	push	2
	mov	ecx, DWORD PTR _m$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0Vector4@@QAE@MMMM@Z			; Vector4::Vector4
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 53   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Init@Matrix4@@QAEXABVMatrix3D@@@Z ENDP			; Matrix4::Init
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ?Make_Identity@Matrix4@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Make_Identity@Matrix4@@QAEXXZ PROC			; Matrix4::Make_Identity, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 45   : 		Row[0].Set(1.0,0.0,0.0,0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 46   : 		Row[1].Set(0.0,1.0,0.0,0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 47   : 		Row[2].Set(0.0,0.0,1.0,0.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 48   : 		Row[3].Set(0.0,0.0,0.0,1.0);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 49   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Make_Identity@Matrix4@@QAEXXZ ENDP			; Matrix4::Make_Identity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??0Matrix4@@QAE@ABVVector4@@000@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0Matrix4@@QAE@ABVVector4@@000@Z PROC			; Matrix4::Matrix4, COMDAT
; _this$ = ecx

; 40   : 	TT_INLINE explicit Matrix4(const Vector4 & v0, const Vector4 & v1, const Vector4 & v2, const Vector4 & v3)	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	4
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 41   : 		Init(v0,v1,v2,v3);

	mov	eax, DWORD PTR _v3$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v1$[ebp]
	push	edx
	mov	eax, DWORD PTR _v0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@Matrix4@@QAEXABVVector4@@000@Z	; Matrix4::Init

; 42   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0Matrix4@@QAE@ABVVector4@@000@Z ENDP			; Matrix4::Matrix4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??0Matrix4@@QAE@ABVMatrix3D@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??0Matrix4@@QAE@ABVMatrix3D@@@Z PROC			; Matrix4::Matrix4, COMDAT
; _this$ = ecx

; 36   : 	TT_INLINE explicit Matrix4(const Matrix3D & m)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	4
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 37   : 	{
; 38   : 		Init(m);

	mov	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@Matrix4@@QAEXABVMatrix3D@@@Z	; Matrix4::Init

; 39   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix4@@QAE@ABVMatrix3D@@@Z ENDP			; Matrix4::Matrix4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??0Matrix4@@QAE@_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_identity$ = 8						; size = 1
??0Matrix4@@QAE@_N@Z PROC				; Matrix4::Matrix4, COMDAT
; _this$ = ecx

; 29   : 	TT_INLINE explicit Matrix4(bool identity)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	4
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 30   : 	{
; 31   : 		if (identity)

	movzx	eax, BYTE PTR _identity$[ebp]
	test	eax, eax
	je	SHORT $LN2@Matrix4

; 32   : 		{
; 33   : 			Make_Identity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Make_Identity@Matrix4@@QAEXXZ		; Matrix4::Make_Identity
$LN2@Matrix4:

; 34   : 		}
; 35   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix4@@QAE@_N@Z ENDP				; Matrix4::Matrix4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??0Matrix4@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??0Matrix4@@QAE@ABV0@@Z PROC				; Matrix4::Matrix4, COMDAT
; _this$ = ecx

; 25   : 	TT_INLINE Matrix4(const Matrix4 & m)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	4
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 26   : 	{
; 27   : 		Row[0] = m.Row[0]; Row[1] = m.Row[1]; Row[2] = m.Row[2]; Row[3] = m.Row[3];

	mov	eax, 16					; 00000010H
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=
	mov	eax, 16					; 00000010H
	imul	eax, 3
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 28   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix4@@QAE@ABV0@@Z ENDP				; Matrix4::Matrix4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix4.h
;	COMDAT ??0Matrix4@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Matrix4@@QAE@XZ PROC					; Matrix4::Matrix4, COMDAT
; _this$ = ecx

; 22   : 	TT_INLINE Matrix4(void)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	4
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 23   : 	{
; 24   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Matrix4@@QAE@XZ ENDP					; Matrix4::Matrix4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Inverse_Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z
_TEXT	SEGMENT
tv237 = -88						; size = 4
tv233 = -88						; size = 4
tv229 = -88						; size = 4
tv235 = -84						; size = 4
tv231 = -84						; size = 4
tv227 = -84						; size = 4
_v$ = -16						; size = 4
_tmp$ = -12						; size = 12
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Inverse_Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z PROC ; Matrix3D::Inverse_Rotate_Vector, COMDAT

; 564  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 565  : 		Vector3 tmp;

	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 566  : 		Vector3 * v;
; 567  : 		if (out == &in)

	mov	eax, DWORD PTR _out$[ebp]
	cmp	eax, DWORD PTR _in$[ebp]
	jne	SHORT $LN2@Inverse_Ro

; 568  : 		{
; 569  : 			tmp = in;

	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 570  : 			v = &tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR _v$[ebp], eax

; 571  : 		}
; 572  : 		else

	jmp	SHORT $LN1@Inverse_Ro
$LN2@Inverse_Ro:

; 573  : 		{
; 574  : 			v = (Vector3 *)&in;

	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@Inverse_Ro:

; 575  : 		}
; 576  : 		out->X = (A[0][0] * v->X + A[1][0] * v->Y + A[2][0] * v->Z);

	push	0
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	0
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv227[ebp], xmm0
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv227[ebp]
	addss	xmm1, xmm0
	push	0
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv229[ebp], xmm1
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv229[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx], xmm1

; 577  : 		out->Y = (A[0][1] * v->X + A[1][1] * v->Y + A[2][1] * v->Z);

	push	1
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv231[ebp], xmm0
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv231[ebp]
	addss	xmm1, xmm0
	push	1
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv233[ebp], xmm1
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv233[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+4], xmm1

; 578  : 		out->Z = (A[0][2] * v->X + A[1][2] * v->Y + A[2][2] * v->Z);

	push	2
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	2
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv235[ebp]
	addss	xmm1, xmm0
	push	2
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv237[ebp], xmm1
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv237[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+8], xmm1

; 579  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Inverse_Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ENDP ; Matrix3D::Inverse_Rotate_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Inverse_Transform_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z
_TEXT	SEGMENT
_diff$ = -28						; size = 12
_v$ = -16						; size = 4
_tmp$ = -12						; size = 12
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Inverse_Transform_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z PROC ; Matrix3D::Inverse_Transform_Vector, COMDAT

; 548  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi

; 549  : 		Vector3 tmp;

	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 550  : 		Vector3 * v;
; 551  : 		if (out == &in)

	mov	eax, DWORD PTR _out$[ebp]
	cmp	eax, DWORD PTR _in$[ebp]
	jne	SHORT $LN2@Inverse_Tr

; 552  : 		{
; 553  : 			tmp = in;

	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 554  : 			v = &tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR _v$[ebp], eax

; 555  : 		}
; 556  : 		else

	jmp	SHORT $LN1@Inverse_Tr
$LN2@Inverse_Tr:

; 557  : 		{
; 558  : 			v = (Vector3 *)&in;

	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@Inverse_Tr:

; 559  : 		}
; 560  : 		Vector3 diff(v->X - A[0][3], v->Y - A[1][3], v->Z - A[2][3]);

	push	3
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [ecx+8]
	subss	xmm0, DWORD PTR [eax]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	3
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	subss	xmm0, DWORD PTR [eax]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	3
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	subss	xmm0, DWORD PTR [eax]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _diff$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3

; 561  : 		Matrix3D::Inverse_Rotate_Vector(A, diff, out);

	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	lea	ecx, DWORD PTR _diff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _A$[ebp]
	push	edx
	call	?Inverse_Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ; Matrix3D::Inverse_Rotate_Vector
	add	esp, 12					; 0000000cH

; 562  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Inverse_Transform_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ENDP ; Matrix3D::Inverse_Transform_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z
_TEXT	SEGMENT
tv237 = -88						; size = 4
tv233 = -88						; size = 4
tv229 = -88						; size = 4
tv235 = -84						; size = 4
tv231 = -84						; size = 4
tv227 = -84						; size = 4
_v$ = -16						; size = 4
_tmp$ = -12						; size = 12
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z PROC ; Matrix3D::Rotate_Vector, COMDAT

; 531  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 532  : 		Vector3 tmp;

	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 533  : 		Vector3 * v;
; 534  : 		if (out == &in)

	mov	eax, DWORD PTR _out$[ebp]
	cmp	eax, DWORD PTR _in$[ebp]
	jne	SHORT $LN2@Rotate_Vec

; 535  : 		{
; 536  : 			tmp = in;

	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 537  : 			v = &tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR _v$[ebp], eax

; 538  : 		}
; 539  : 		else 

	jmp	SHORT $LN1@Rotate_Vec
$LN2@Rotate_Vec:

; 540  : 		{
; 541  : 			v = (Vector3 *)&in;

	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@Rotate_Vec:

; 542  : 		}
; 543  : 		out->X = (A[0][0] * v->X + A[0][1] * v->Y + A[0][2] * v->Z);

	push	0
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv227[ebp], xmm0
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv227[ebp]
	addss	xmm1, xmm0
	push	2
	push	0
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv229[ebp], xmm1
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv229[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx], xmm1

; 544  : 		out->Y = (A[1][0] * v->X + A[1][1] * v->Y + A[1][2] * v->Z);

	push	0
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv231[ebp], xmm0
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv231[ebp]
	addss	xmm1, xmm0
	push	2
	push	1
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv233[ebp], xmm1
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv233[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+4], xmm1

; 545  : 		out->Z = (A[2][0] * v->X + A[2][1] * v->Y + A[2][2] * v->Z);

	push	0
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv235[ebp]
	addss	xmm1, xmm0
	push	2
	push	2
	mov	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv237[ebp], xmm1
	call	??AMatrix3D@@QBEABVVector4@@H@Z		; Matrix3D::operator[]
	mov	ecx, eax
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv237[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+8], xmm1

; 546  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Rotate_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ENDP ; Matrix3D::Rotate_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_Z_Vector@Matrix3D@@QBEXPAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_set_z$ = 8						; size = 4
?Get_Z_Vector@Matrix3D@@QBEXPAVVector3@@@Z PROC		; Matrix3D::Get_Z_Vector, COMDAT
; _this$ = ecx

; 524  : 	TT_INLINE void Get_Z_Vector(Vector3 * set_z) const { set_z->Set(Row[0][2], Row[1][2], Row[2][2]); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _set_z$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Z_Vector@Matrix3D@@QBEXPAVVector3@@@Z ENDP		; Matrix3D::Get_Z_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_Y_Vector@Matrix3D@@QBEXPAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_set_y$ = 8						; size = 4
?Get_Y_Vector@Matrix3D@@QBEXPAVVector3@@@Z PROC		; Matrix3D::Get_Y_Vector, COMDAT
; _this$ = ecx

; 523  : 	TT_INLINE void Get_Y_Vector(Vector3 * set_y) const { set_y->Set(Row[0][1], Row[1][1], Row[2][1]); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _set_y$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Y_Vector@Matrix3D@@QBEXPAVVector3@@@Z ENDP		; Matrix3D::Get_Y_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_X_Vector@Matrix3D@@QBEXPAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_set_x$ = 8						; size = 4
?Get_X_Vector@Matrix3D@@QBEXPAVVector3@@@Z PROC		; Matrix3D::Get_X_Vector, COMDAT
; _this$ = ecx

; 522  : 	TT_INLINE void Get_X_Vector(Vector3 * set_x) const { set_x->Set(Row[0][0], Row[1][0], Row[2][0]); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _set_x$[ebp]
	call	?Set@Vector3@@QAEXMMM@Z			; Vector3::Set
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_X_Vector@Matrix3D@@QBEXPAVVector3@@@Z ENDP		; Matrix3D::Get_X_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_Z_Vector@Matrix3D@@QBE?AVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Get_Z_Vector@Matrix3D@@QBE?AVVector3@@XZ PROC		; Matrix3D::Get_Z_Vector, COMDAT
; _this$ = ecx

; 521  : 	TT_INLINE Vector3 Get_Z_Vector() const { return Vector3(Row[0][2], Row[1][2], Row[2][2]); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Z_Vector@Matrix3D@@QBE?AVVector3@@XZ ENDP		; Matrix3D::Get_Z_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_Y_Vector@Matrix3D@@QBE?AVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Get_Y_Vector@Matrix3D@@QBE?AVVector3@@XZ PROC		; Matrix3D::Get_Y_Vector, COMDAT
; _this$ = ecx

; 520  : 	TT_INLINE Vector3 Get_Y_Vector() const { return Vector3(Row[0][1], Row[1][1], Row[2][1]); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Y_Vector@Matrix3D@@QBE?AVVector3@@XZ ENDP		; Matrix3D::Get_Y_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_X_Vector@Matrix3D@@QBE?AVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Get_X_Vector@Matrix3D@@QBE?AVVector3@@XZ PROC		; Matrix3D::Get_X_Vector, COMDAT
; _this$ = ecx

; 519  : 	TT_INLINE Vector3 Get_X_Vector() const { return Vector3(Row[0][0], Row[1][0], Row[2][0]); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_X_Vector@Matrix3D@@QBE?AVVector3@@XZ ENDP		; Matrix3D::Get_X_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Transform_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z
_TEXT	SEGMENT
tv270 = -92						; size = 4
tv264 = -92						; size = 4
tv258 = -92						; size = 4
tv268 = -88						; size = 4
tv262 = -88						; size = 4
tv256 = -88						; size = 4
tv266 = -84						; size = 4
tv260 = -84						; size = 4
tv254 = -84						; size = 4
_v$ = -16						; size = 4
_tmp$ = -12						; size = 12
_A$ = 8							; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
?Transform_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z PROC ; Matrix3D::Transform_Vector, COMDAT

; 503  :    {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi

; 504  : 		Vector3 tmp;

	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 505  : 		Vector3 * v;
; 506  : 		if (out == &in)

	mov	eax, DWORD PTR _out$[ebp]
	cmp	eax, DWORD PTR _in$[ebp]
	jne	SHORT $LN2@Transform_

; 507  : 		{
; 508  : 			tmp = in;

	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 509  : 			v = &tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	mov	DWORD PTR _v$[ebp], eax

; 510  : 		}
; 511  : 		else

	jmp	SHORT $LN1@Transform_
$LN2@Transform_:

; 512  : 		{
; 513  : 			v = (Vector3 *)&in;

	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@Transform_:

; 514  : 		}
; 515  : 		out->X = (A.Row[0][0] * v->X + A.Row[0][1] * v->Y + A.Row[0][2] * v->Z + A.Row[0][3]);

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _A$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv254[ebp], xmm0
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv254[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv256[ebp], xmm1
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv256[ebp]
	addss	xmm1, xmm0
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv258[ebp], xmm1
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv258[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx], xmm0

; 516  : 		out->Y = (A.Row[1][0] * v->X + A.Row[1][1] * v->Y + A.Row[1][2] * v->Z + A.Row[1][3]);

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _A$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv260[ebp], xmm0
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv260[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv262[ebp], xmm1
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv262[ebp]
	addss	xmm1, xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv264[ebp], xmm1
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv264[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+4], xmm0

; 517  : 		out->Z = (A.Row[2][0] * v->X + A.Row[2][1] * v->Y + A.Row[2][2] * v->Z + A.Row[2][3]);

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _A$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv266[ebp], xmm0
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [edx+4]
	movss	xmm1, DWORD PTR tv266[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv268[ebp], xmm1
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx+8]
	movss	xmm1, DWORD PTR tv268[ebp]
	addss	xmm1, xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _A$[ebp]
	movss	DWORD PTR tv270[ebp], xmm1
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv270[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR _out$[ebp]
	movss	DWORD PTR [edx+8], xmm0

; 518  :    }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Transform_Vector@Matrix3D@@SAXABV1@ABVVector3@@PAV2@@Z ENDP ; Matrix3D::Transform_Vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?In_Place_Pre_Rotate_Z@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv245 = -80						; size = 4
tv243 = -80						; size = 4
tv241 = -80						; size = 4
tv239 = -80						; size = 4
tv237 = -80						; size = 4
tv235 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?In_Place_Pre_Rotate_Z@Matrix3D@@QAEXMM@Z PROC		; Matrix3D::In_Place_Pre_Rotate_Z, COMDAT
; _this$ = ecx

; 486  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 487  : 		float tmp1,tmp2;
; 488  : 		tmp1 = Row[0][0]; tmp2 = Row[1][0];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 489  : 		Row[0][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv235[ebp]
	movss	DWORD PTR [eax], xmm0

; 490  : 		Row[1][0] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv237[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv237[ebp]
	movss	DWORD PTR [eax], xmm0

; 491  : 		tmp1 = Row[0][1]; tmp2 = Row[1][1];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 492  : 		Row[0][1] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv239[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv239[ebp]
	movss	DWORD PTR [eax], xmm0

; 493  : 		Row[1][1] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv241[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv241[ebp]
	movss	DWORD PTR [eax], xmm0

; 494  : 		tmp1 = Row[0][2]; tmp2 = Row[1][2];

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 495  : 		Row[0][2] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv243[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv243[ebp]
	movss	DWORD PTR [eax], xmm0

; 496  : 		Row[1][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv245[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv245[ebp]
	movss	DWORD PTR [eax], xmm0

; 497  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?In_Place_Pre_Rotate_Z@Matrix3D@@QAEXMM@Z ENDP		; Matrix3D::In_Place_Pre_Rotate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?In_Place_Pre_Rotate_Y@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv248 = -80						; size = 4
tv246 = -80						; size = 4
tv244 = -80						; size = 4
tv242 = -80						; size = 4
tv240 = -80						; size = 4
tv238 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?In_Place_Pre_Rotate_Y@Matrix3D@@QAEXMM@Z PROC		; Matrix3D::In_Place_Pre_Rotate_Y, COMDAT
; _this$ = ecx

; 473  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 474  : 		float tmp1,tmp2;
; 475  : 		tmp1 = Row[0][0]; tmp2 = Row[2][0];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 476  : 		Row[0][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv238[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv238[ebp]
	movss	DWORD PTR [eax], xmm0

; 477  : 		Row[2][0] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv240[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv240[ebp]
	movss	DWORD PTR [eax], xmm0

; 478  : 		tmp1 = Row[0][1]; tmp2 = Row[2][1];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 479  : 		Row[0][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv242[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv242[ebp]
	movss	DWORD PTR [eax], xmm0

; 480  : 		Row[2][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv244[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv244[ebp]
	movss	DWORD PTR [eax], xmm0

; 481  : 		tmp1 = Row[0][2]; tmp2 = Row[2][2];

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 482  : 		Row[0][2] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv246[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv246[ebp]
	movss	DWORD PTR [eax], xmm0

; 483  : 		Row[2][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv248[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv248[ebp]
	movss	DWORD PTR [eax], xmm0

; 484  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?In_Place_Pre_Rotate_Y@Matrix3D@@QAEXMM@Z ENDP		; Matrix3D::In_Place_Pre_Rotate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?In_Place_Pre_Rotate_X@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv245 = -80						; size = 4
tv243 = -80						; size = 4
tv241 = -80						; size = 4
tv239 = -80						; size = 4
tv237 = -80						; size = 4
tv235 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?In_Place_Pre_Rotate_X@Matrix3D@@QAEXMM@Z PROC		; Matrix3D::In_Place_Pre_Rotate_X, COMDAT
; _this$ = ecx

; 460  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 461  : 		float tmp1,tmp2;
; 462  : 		tmp1 = Row[1][0]; tmp2 = Row[2][0];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 463  : 		Row[1][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv235[ebp]
	movss	DWORD PTR [eax], xmm0

; 464  : 		Row[2][0] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv237[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv237[ebp]
	movss	DWORD PTR [eax], xmm0

; 465  : 		tmp1 = Row[1][1]; tmp2 = Row[2][1];

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 466  : 		Row[1][1] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv239[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv239[ebp]
	movss	DWORD PTR [eax], xmm0

; 467  : 		Row[2][1] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv241[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv241[ebp]
	movss	DWORD PTR [eax], xmm0

; 468  : 		tmp1 = Row[1][2]; tmp2 = Row[2][2];

	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 469  : 		Row[1][2] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv243[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv243[ebp]
	movss	DWORD PTR [eax], xmm0

; 470  : 		Row[2][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv245[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv245[ebp]
	movss	DWORD PTR [eax], xmm0

; 471  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?In_Place_Pre_Rotate_X@Matrix3D@@QAEXMM@Z ENDP		; Matrix3D::In_Place_Pre_Rotate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?In_Place_Pre_Rotate_Z@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv257 = -88						; size = 4
tv255 = -88						; size = 4
tv253 = -88						; size = 4
tv251 = -88						; size = 4
tv249 = -88						; size = 4
tv247 = -88						; size = 4
_s$ = -20						; size = 4
_c$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?In_Place_Pre_Rotate_Z@Matrix3D@@QAEXM@Z PROC		; Matrix3D::In_Place_Pre_Rotate_Z, COMDAT
; _this$ = ecx

; 444  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 445  : 		float tmp1,tmp2;
; 446  : 		float c,s;
; 447  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 448  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 449  : 		tmp1 = Row[0][0]; tmp2 = Row[1][0];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 450  : 		Row[0][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv247[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv247[ebp]
	movss	DWORD PTR [eax], xmm0

; 451  : 		Row[1][0] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv249[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv249[ebp]
	movss	DWORD PTR [eax], xmm0

; 452  : 		tmp1 = Row[0][1]; tmp2 = Row[1][1];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 453  : 		Row[0][1] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv251[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv251[ebp]
	movss	DWORD PTR [eax], xmm0

; 454  : 		Row[1][1] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv253[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv253[ebp]
	movss	DWORD PTR [eax], xmm0

; 455  : 		tmp1 = Row[0][2]; tmp2 = Row[1][2];

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 456  : 		Row[0][2] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv255[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv255[ebp]
	movss	DWORD PTR [eax], xmm0

; 457  : 		Row[1][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv257[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv257[ebp]
	movss	DWORD PTR [eax], xmm0

; 458  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?In_Place_Pre_Rotate_Z@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::In_Place_Pre_Rotate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?In_Place_Pre_Rotate_Y@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv260 = -88						; size = 4
tv258 = -88						; size = 4
tv256 = -88						; size = 4
tv254 = -88						; size = 4
tv252 = -88						; size = 4
tv250 = -88						; size = 4
_s$ = -20						; size = 4
_c$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?In_Place_Pre_Rotate_Y@Matrix3D@@QAEXM@Z PROC		; Matrix3D::In_Place_Pre_Rotate_Y, COMDAT
; _this$ = ecx

; 428  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 429  : 		float tmp1,tmp2;
; 430  : 		float c,s;
; 431  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 432  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 433  : 		tmp1 = Row[0][0]; tmp2 = Row[2][0];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 434  : 		Row[0][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv250[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv250[ebp]
	movss	DWORD PTR [eax], xmm0

; 435  : 		Row[2][0] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv252[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv252[ebp]
	movss	DWORD PTR [eax], xmm0

; 436  : 		tmp1 = Row[0][1]; tmp2 = Row[2][1];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 437  : 		Row[0][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv254[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv254[ebp]
	movss	DWORD PTR [eax], xmm0

; 438  : 		Row[2][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv256[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv256[ebp]
	movss	DWORD PTR [eax], xmm0

; 439  : 		tmp1 = Row[0][2]; tmp2 = Row[2][2];

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 440  : 		Row[0][2] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv258[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv258[ebp]
	movss	DWORD PTR [eax], xmm0

; 441  : 		Row[2][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv260[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv260[ebp]
	movss	DWORD PTR [eax], xmm0

; 442  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?In_Place_Pre_Rotate_Y@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::In_Place_Pre_Rotate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?In_Place_Pre_Rotate_X@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv257 = -88						; size = 4
tv255 = -88						; size = 4
tv253 = -88						; size = 4
tv251 = -88						; size = 4
tv249 = -88						; size = 4
tv247 = -88						; size = 4
_s$ = -20						; size = 4
_c$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?In_Place_Pre_Rotate_X@Matrix3D@@QAEXM@Z PROC		; Matrix3D::In_Place_Pre_Rotate_X, COMDAT
; _this$ = ecx

; 412  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 413  : 		float tmp1,tmp2;
; 414  : 		float c,s;
; 415  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 416  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 417  : 		tmp1 = Row[1][0]; tmp2 = Row[2][0];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 418  : 		Row[1][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv247[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv247[ebp]
	movss	DWORD PTR [eax], xmm0

; 419  : 		Row[2][0] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv249[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv249[ebp]
	movss	DWORD PTR [eax], xmm0

; 420  : 		tmp1 = Row[1][1]; tmp2 = Row[2][1];

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 421  : 		Row[1][1] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv251[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv251[ebp]
	movss	DWORD PTR [eax], xmm0

; 422  : 		Row[2][1] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv253[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv253[ebp]
	movss	DWORD PTR [eax], xmm0

; 423  : 		tmp1 = Row[1][2]; tmp2 = Row[2][2];

	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 424  : 		Row[1][2] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv255[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv255[ebp]
	movss	DWORD PTR [eax], xmm0

; 425  : 		Row[2][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv257[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv257[ebp]
	movss	DWORD PTR [eax], xmm0

; 426  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?In_Place_Pre_Rotate_X@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::In_Place_Pre_Rotate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Pre_Rotate_Z@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv295 = -80						; size = 4
tv293 = -80						; size = 4
tv291 = -80						; size = 4
tv289 = -80						; size = 4
tv287 = -80						; size = 4
tv285 = -80						; size = 4
tv283 = -80						; size = 4
tv281 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Pre_Rotate_Z@Matrix3D@@QAEXMM@Z PROC			; Matrix3D::Pre_Rotate_Z, COMDAT
; _this$ = ecx

; 396  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 397  : 		float tmp1,tmp2;
; 398  : 		tmp1 = Row[0][0]; tmp2 = Row[1][0];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 399  : 		Row[0][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv281[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv281[ebp]
	movss	DWORD PTR [eax], xmm0

; 400  : 		Row[1][0] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv283[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv283[ebp]
	movss	DWORD PTR [eax], xmm0

; 401  : 		tmp1 = Row[0][1]; tmp2 = Row[1][1];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 402  : 		Row[0][1] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv285[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv285[ebp]
	movss	DWORD PTR [eax], xmm0

; 403  : 		Row[1][1] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv287[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv287[ebp]
	movss	DWORD PTR [eax], xmm0

; 404  : 		tmp1 = Row[0][2]; tmp2 = Row[1][2];

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 405  : 		Row[0][2] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv289[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv289[ebp]
	movss	DWORD PTR [eax], xmm0

; 406  : 		Row[1][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv291[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv291[ebp]
	movss	DWORD PTR [eax], xmm0

; 407  : 		tmp1 = Row[0][3]; tmp2 = Row[1][3];

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 408  : 		Row[0][3] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv293[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv293[ebp]
	movss	DWORD PTR [eax], xmm0

; 409  : 		Row[1][3] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv295[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv295[ebp]
	movss	DWORD PTR [eax], xmm0

; 410  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Pre_Rotate_Z@Matrix3D@@QAEXMM@Z ENDP			; Matrix3D::Pre_Rotate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Pre_Rotate_Y@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv299 = -80						; size = 4
tv297 = -80						; size = 4
tv295 = -80						; size = 4
tv293 = -80						; size = 4
tv291 = -80						; size = 4
tv289 = -80						; size = 4
tv287 = -80						; size = 4
tv285 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Pre_Rotate_Y@Matrix3D@@QAEXMM@Z PROC			; Matrix3D::Pre_Rotate_Y, COMDAT
; _this$ = ecx

; 380  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 381  : 		float tmp1,tmp2;
; 382  : 		tmp1 = Row[0][0]; tmp2 = Row[2][0];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 383  : 		Row[0][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv285[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv285[ebp]
	movss	DWORD PTR [eax], xmm0

; 384  : 		Row[2][0] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv287[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv287[ebp]
	movss	DWORD PTR [eax], xmm0

; 385  : 		tmp1 = Row[0][1]; tmp2 = Row[2][1];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 386  : 		Row[0][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv289[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv289[ebp]
	movss	DWORD PTR [eax], xmm0

; 387  : 		Row[2][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv291[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv291[ebp]
	movss	DWORD PTR [eax], xmm0

; 388  : 		tmp1 = Row[0][2]; tmp2 = Row[2][2];

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 389  : 		Row[0][2] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv293[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv293[ebp]
	movss	DWORD PTR [eax], xmm0

; 390  : 		Row[2][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv295[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv295[ebp]
	movss	DWORD PTR [eax], xmm0

; 391  : 		tmp1 = Row[0][3]; tmp2 = Row[2][3];

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 392  : 		Row[0][3] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv297[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv297[ebp]
	movss	DWORD PTR [eax], xmm0

; 393  : 		Row[2][3] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv299[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv299[ebp]
	movss	DWORD PTR [eax], xmm0

; 394  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Pre_Rotate_Y@Matrix3D@@QAEXMM@Z ENDP			; Matrix3D::Pre_Rotate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Pre_Rotate_X@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv295 = -80						; size = 4
tv293 = -80						; size = 4
tv291 = -80						; size = 4
tv289 = -80						; size = 4
tv287 = -80						; size = 4
tv285 = -80						; size = 4
tv283 = -80						; size = 4
tv281 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Pre_Rotate_X@Matrix3D@@QAEXMM@Z PROC			; Matrix3D::Pre_Rotate_X, COMDAT
; _this$ = ecx

; 364  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 365  : 		float tmp1,tmp2;
; 366  : 		tmp1 = Row[1][0]; tmp2 = Row[2][0];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 367  : 		Row[1][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv281[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv281[ebp]
	movss	DWORD PTR [eax], xmm0

; 368  : 		Row[2][0] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv283[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv283[ebp]
	movss	DWORD PTR [eax], xmm0

; 369  : 		tmp1 = Row[1][1]; tmp2 = Row[2][1];

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 370  : 		Row[1][1] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv285[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv285[ebp]
	movss	DWORD PTR [eax], xmm0

; 371  : 		Row[2][1] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv287[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv287[ebp]
	movss	DWORD PTR [eax], xmm0

; 372  : 		tmp1 = Row[1][2]; tmp2 = Row[2][2];

	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 373  : 		Row[1][2] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv289[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv289[ebp]
	movss	DWORD PTR [eax], xmm0

; 374  : 		Row[2][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv291[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv291[ebp]
	movss	DWORD PTR [eax], xmm0

; 375  : 		tmp1 = Row[1][3]; tmp2 = Row[2][3];

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 376  : 		Row[1][3] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv293[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv293[ebp]
	movss	DWORD PTR [eax], xmm0

; 377  : 		Row[2][3] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv295[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv295[ebp]
	movss	DWORD PTR [eax], xmm0

; 378  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Pre_Rotate_X@Matrix3D@@QAEXMM@Z ENDP			; Matrix3D::Pre_Rotate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Pre_Rotate_Z@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv307 = -88						; size = 4
tv305 = -88						; size = 4
tv303 = -88						; size = 4
tv301 = -88						; size = 4
tv299 = -88						; size = 4
tv297 = -88						; size = 4
tv295 = -88						; size = 4
tv293 = -88						; size = 4
_s$ = -20						; size = 4
_c$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Pre_Rotate_Z@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Pre_Rotate_Z, COMDAT
; _this$ = ecx

; 345  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 346  : 		float tmp1,tmp2;
; 347  : 		float c,s;
; 348  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 349  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 350  : 		tmp1 = Row[0][0]; tmp2 = Row[1][0];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 351  : 		Row[0][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv293[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv293[ebp]
	movss	DWORD PTR [eax], xmm0

; 352  : 		Row[1][0] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv295[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv295[ebp]
	movss	DWORD PTR [eax], xmm0

; 353  : 		tmp1 = Row[0][1]; tmp2 = Row[1][1];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 354  : 		Row[0][1] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv297[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv297[ebp]
	movss	DWORD PTR [eax], xmm0

; 355  : 		Row[1][1] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv299[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv299[ebp]
	movss	DWORD PTR [eax], xmm0

; 356  : 		tmp1 = Row[0][2]; tmp2 = Row[1][2];

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 357  : 		Row[0][2] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv301[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv301[ebp]
	movss	DWORD PTR [eax], xmm0

; 358  : 		Row[1][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv303[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv303[ebp]
	movss	DWORD PTR [eax], xmm0

; 359  : 		tmp1 = Row[0][3]; tmp2 = Row[1][3];

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 360  : 		Row[0][3] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv305[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv305[ebp]
	movss	DWORD PTR [eax], xmm0

; 361  : 		Row[1][3] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv307[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv307[ebp]
	movss	DWORD PTR [eax], xmm0

; 362  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Pre_Rotate_Z@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Pre_Rotate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Pre_Rotate_Y@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv311 = -88						; size = 4
tv309 = -88						; size = 4
tv307 = -88						; size = 4
tv305 = -88						; size = 4
tv303 = -88						; size = 4
tv301 = -88						; size = 4
tv299 = -88						; size = 4
tv297 = -88						; size = 4
_s$ = -20						; size = 4
_c$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Pre_Rotate_Y@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Pre_Rotate_Y, COMDAT
; _this$ = ecx

; 326  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 327  : 		float tmp1,tmp2;
; 328  : 		float c,s;
; 329  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 330  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 331  : 		tmp1 = Row[0][0]; tmp2 = Row[2][0];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 332  : 		Row[0][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv297[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv297[ebp]
	movss	DWORD PTR [eax], xmm0

; 333  : 		Row[2][0] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv299[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv299[ebp]
	movss	DWORD PTR [eax], xmm0

; 334  : 		tmp1 = Row[0][1]; tmp2 = Row[2][1];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 335  : 		Row[0][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv301[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv301[ebp]
	movss	DWORD PTR [eax], xmm0

; 336  : 		Row[2][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv303[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv303[ebp]
	movss	DWORD PTR [eax], xmm0

; 337  : 		tmp1 = Row[0][2]; tmp2 = Row[2][2];

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 338  : 		Row[0][2] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv305[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv305[ebp]
	movss	DWORD PTR [eax], xmm0

; 339  : 		Row[2][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv307[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv307[ebp]
	movss	DWORD PTR [eax], xmm0

; 340  : 		tmp1 = Row[0][3]; tmp2 = Row[2][3];

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 341  : 		Row[0][3] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv309[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv309[ebp]
	movss	DWORD PTR [eax], xmm0

; 342  : 		Row[2][3] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv311[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv311[ebp]
	movss	DWORD PTR [eax], xmm0

; 343  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Pre_Rotate_Y@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Pre_Rotate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Pre_Rotate_X@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv307 = -88						; size = 4
tv305 = -88						; size = 4
tv303 = -88						; size = 4
tv301 = -88						; size = 4
tv299 = -88						; size = 4
tv297 = -88						; size = 4
tv295 = -88						; size = 4
tv293 = -88						; size = 4
_s$ = -20						; size = 4
_c$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Pre_Rotate_X@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Pre_Rotate_X, COMDAT
; _this$ = ecx

; 307  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 308  : 		float tmp1,tmp2;
; 309  : 		float c,s;
; 310  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 311  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 312  : 		tmp1 = Row[1][0]; tmp2 = Row[2][0];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 313  : 		Row[1][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv293[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv293[ebp]
	movss	DWORD PTR [eax], xmm0

; 314  : 		Row[2][0] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv295[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv295[ebp]
	movss	DWORD PTR [eax], xmm0

; 315  : 		tmp1 = Row[1][1]; tmp2 = Row[2][1];

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 316  : 		Row[1][1] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv297[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv297[ebp]
	movss	DWORD PTR [eax], xmm0

; 317  : 		Row[2][1] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv299[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv299[ebp]
	movss	DWORD PTR [eax], xmm0

; 318  : 		tmp1 = Row[1][2]; tmp2 = Row[2][2];

	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 319  : 		Row[1][2] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv301[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv301[ebp]
	movss	DWORD PTR [eax], xmm0

; 320  : 		Row[2][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv303[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv303[ebp]
	movss	DWORD PTR [eax], xmm0

; 321  : 		tmp1 = Row[1][3]; tmp2 = Row[2][3];

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 322  : 		Row[1][3] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv305[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv305[ebp]
	movss	DWORD PTR [eax], xmm0

; 323  : 		Row[2][3] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv307[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv307[ebp]
	movss	DWORD PTR [eax], xmm0

; 324  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Pre_Rotate_X@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Pre_Rotate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Scale@Matrix3D@@QAEXAAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_scale$ = 8						; size = 4
?Scale@Matrix3D@@QAEXAAVVector3@@@Z PROC		; Matrix3D::Scale, COMDAT
; _this$ = ecx

; 303  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 304  : 		Scale(scale.X, scale.Y, scale.Z);

	mov	eax, DWORD PTR _scale$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _scale$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+4]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _scale$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Scale@Matrix3D@@QAEXMMM@Z		; Matrix3D::Scale

; 305  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Scale@Matrix3D@@QAEXAAVVector3@@@Z ENDP		; Matrix3D::Scale
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Scale@Matrix3D@@QAEXMMM@Z
_TEXT	SEGMENT
tv166 = -72						; size = 4
tv158 = -72						; size = 4
tv150 = -72						; size = 4
tv142 = -72						; size = 4
tv134 = -72						; size = 4
tv94 = -72						; size = 4
tv86 = -72						; size = 4
tv78 = -72						; size = 4
tv70 = -72						; size = 4
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
?Scale@Matrix3D@@QAEXMMM@Z PROC				; Matrix3D::Scale, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 292  : 		Row[0][0] *= x;

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR tv70[ebp]
	movss	DWORD PTR [ecx], xmm0

; 293  : 		Row[1][0] *= x;

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR tv78[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR tv78[ebp]
	movss	DWORD PTR [ecx], xmm0

; 294  : 		Row[2][0] *= x;

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv86[ebp], eax
	mov	eax, DWORD PTR tv86[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR tv86[ebp]
	movss	DWORD PTR [ecx], xmm0

; 295  : 		Row[0][1] *= y;

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv94[ebp], eax
	mov	eax, DWORD PTR tv94[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR tv94[ebp]
	movss	DWORD PTR [ecx], xmm0

; 296  : 		Row[1][1] *= y;

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv134[ebp], eax
	mov	eax, DWORD PTR tv134[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR tv134[ebp]
	movss	DWORD PTR [ecx], xmm0

; 297  : 		Row[2][1] *= y;

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv142[ebp], eax
	mov	eax, DWORD PTR tv142[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR tv142[ebp]
	movss	DWORD PTR [ecx], xmm0

; 298  : 		Row[0][2] *= z;

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv150[ebp], eax
	mov	eax, DWORD PTR tv150[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	mov	ecx, DWORD PTR tv150[ebp]
	movss	DWORD PTR [ecx], xmm0

; 299  : 		Row[1][2] *= z;

	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv158[ebp], eax
	mov	eax, DWORD PTR tv158[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	mov	ecx, DWORD PTR tv158[ebp]
	movss	DWORD PTR [ecx], xmm0

; 300  : 		Row[2][2] *= z;

	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv166[ebp], eax
	mov	eax, DWORD PTR tv166[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	mov	ecx, DWORD PTR tv166[ebp]
	movss	DWORD PTR [ecx], xmm0

; 301  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Scale@Matrix3D@@QAEXMMM@Z ENDP				; Matrix3D::Scale
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Scale@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv166 = -72						; size = 4
tv158 = -72						; size = 4
tv150 = -72						; size = 4
tv142 = -72						; size = 4
tv134 = -72						; size = 4
tv94 = -72						; size = 4
tv86 = -72						; size = 4
tv78 = -72						; size = 4
tv70 = -72						; size = 4
_this$ = -4						; size = 4
_scale$ = 8						; size = 4
?Scale@Matrix3D@@QAEXM@Z PROC				; Matrix3D::Scale, COMDAT
; _this$ = ecx

; 279  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 280  : 		Row[0][0] *= scale;

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv70[ebp]
	movss	DWORD PTR [ecx], xmm0

; 281  : 		Row[1][0] *= scale;

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR tv78[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv78[ebp]
	movss	DWORD PTR [ecx], xmm0

; 282  : 		Row[2][0] *= scale;

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv86[ebp], eax
	mov	eax, DWORD PTR tv86[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv86[ebp]
	movss	DWORD PTR [ecx], xmm0

; 283  : 		Row[0][1] *= scale;

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv94[ebp], eax
	mov	eax, DWORD PTR tv94[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv94[ebp]
	movss	DWORD PTR [ecx], xmm0

; 284  : 		Row[1][1] *= scale;

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv134[ebp], eax
	mov	eax, DWORD PTR tv134[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv134[ebp]
	movss	DWORD PTR [ecx], xmm0

; 285  : 		Row[2][1] *= scale;

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv142[ebp], eax
	mov	eax, DWORD PTR tv142[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv142[ebp]
	movss	DWORD PTR [ecx], xmm0

; 286  : 		Row[0][2] *= scale;

	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv150[ebp], eax
	mov	eax, DWORD PTR tv150[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv150[ebp]
	movss	DWORD PTR [ecx], xmm0

; 287  : 		Row[1][2] *= scale;

	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv158[ebp], eax
	mov	eax, DWORD PTR tv158[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv158[ebp]
	movss	DWORD PTR [ecx], xmm0

; 288  : 		Row[2][2] *= scale;

	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv166[ebp], eax
	mov	eax, DWORD PTR tv166[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _scale$[ebp]
	mov	ecx, DWORD PTR tv166[ebp]
	movss	DWORD PTR [ecx], xmm0

; 289  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Scale@Matrix3D@@QAEXM@Z ENDP				; Matrix3D::Scale
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Rotate_Z@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv248 = -80						; size = 4
tv246 = -80						; size = 4
tv244 = -80						; size = 4
tv242 = -80						; size = 4
tv240 = -80						; size = 4
tv238 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Rotate_Z@Matrix3D@@QAEXMM@Z PROC			; Matrix3D::Rotate_Z, COMDAT
; _this$ = ecx

; 266  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 267  : 		float tmp1,tmp2;
; 268  : 		tmp1 = Row[0][0]; tmp2 = Row[0][1];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 269  : 		Row[0][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv238[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv238[ebp]
	movss	DWORD PTR [eax], xmm0

; 270  : 		Row[0][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv240[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv240[ebp]
	movss	DWORD PTR [eax], xmm0

; 271  : 		tmp1 = Row[1][0]; tmp2 = Row[1][1];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 272  : 		Row[1][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv242[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv242[ebp]
	movss	DWORD PTR [eax], xmm0

; 273  : 		Row[1][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv244[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv244[ebp]
	movss	DWORD PTR [eax], xmm0

; 274  : 		tmp1 = Row[2][0]; tmp2 = Row[2][1];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 275  : 		Row[2][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv246[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv246[ebp]
	movss	DWORD PTR [eax], xmm0

; 276  : 		Row[2][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv248[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv248[ebp]
	movss	DWORD PTR [eax], xmm0

; 277  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Rotate_Z@Matrix3D@@QAEXMM@Z ENDP			; Matrix3D::Rotate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Rotate_Y@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv245 = -80						; size = 4
tv243 = -80						; size = 4
tv241 = -80						; size = 4
tv239 = -80						; size = 4
tv237 = -80						; size = 4
tv235 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Rotate_Y@Matrix3D@@QAEXMM@Z PROC			; Matrix3D::Rotate_Y, COMDAT
; _this$ = ecx

; 253  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 254  : 		float tmp1,tmp2;
; 255  : 		tmp1 = Row[0][0]; tmp2 = Row[0][2];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 256  : 		Row[0][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv235[ebp]
	movss	DWORD PTR [eax], xmm0

; 257  : 		Row[0][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv237[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv237[ebp]
	movss	DWORD PTR [eax], xmm0

; 258  : 		tmp1 = Row[1][0]; tmp2 = Row[1][2];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 259  : 		Row[1][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv239[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv239[ebp]
	movss	DWORD PTR [eax], xmm0

; 260  : 		Row[1][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv241[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv241[ebp]
	movss	DWORD PTR [eax], xmm0

; 261  : 		tmp1 = Row[2][0]; tmp2 = Row[2][2];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 262  : 		Row[2][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv243[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv243[ebp]
	movss	DWORD PTR [eax], xmm0

; 263  : 		Row[2][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv245[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv245[ebp]
	movss	DWORD PTR [eax], xmm0

; 264  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Rotate_Y@Matrix3D@@QAEXMM@Z ENDP			; Matrix3D::Rotate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Rotate_X@Matrix3D@@QAEXMM@Z
_TEXT	SEGMENT
tv248 = -80						; size = 4
tv246 = -80						; size = 4
tv244 = -80						; size = 4
tv242 = -80						; size = 4
tv240 = -80						; size = 4
tv238 = -80						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_c$ = 12						; size = 4
?Rotate_X@Matrix3D@@QAEXMM@Z PROC			; Matrix3D::Rotate_X, COMDAT
; _this$ = ecx

; 240  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 241  : 		float tmp1,tmp2;
; 242  : 		tmp1 = Row[0][1]; tmp2 = Row[0][2];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 243  : 		Row[0][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv238[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv238[ebp]
	movss	DWORD PTR [eax], xmm0

; 244  : 		Row[0][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv240[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv240[ebp]
	movss	DWORD PTR [eax], xmm0

; 245  : 		tmp1 = Row[1][1]; tmp2 = Row[1][2];

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 246  : 		Row[1][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv242[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv242[ebp]
	movss	DWORD PTR [eax], xmm0

; 247  : 		Row[1][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv244[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv244[ebp]
	movss	DWORD PTR [eax], xmm0

; 248  : 		tmp1 = Row[2][1]; tmp2 = Row[2][2];

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 249  : 		Row[2][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv246[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv246[ebp]
	movss	DWORD PTR [eax], xmm0

; 250  : 		Row[2][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv248[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv248[ebp]
	movss	DWORD PTR [eax], xmm0

; 251  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Rotate_X@Matrix3D@@QAEXMM@Z ENDP			; Matrix3D::Rotate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Rotate_Z@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv260 = -88						; size = 4
tv258 = -88						; size = 4
tv256 = -88						; size = 4
tv254 = -88						; size = 4
tv252 = -88						; size = 4
tv250 = -88						; size = 4
_s$ = -20						; size = 4
_c$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Rotate_Z@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Rotate_Z, COMDAT
; _this$ = ecx

; 224  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 225  : 		float tmp1,tmp2;
; 226  : 		float c,s;
; 227  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 228  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 229  : 		tmp1 = Row[0][0]; tmp2 = Row[0][1];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 230  : 		Row[0][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv250[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv250[ebp]
	movss	DWORD PTR [eax], xmm0

; 231  : 		Row[0][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv252[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv252[ebp]
	movss	DWORD PTR [eax], xmm0

; 232  : 		tmp1 = Row[1][0]; tmp2 = Row[1][1];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 233  : 		Row[1][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv254[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv254[ebp]
	movss	DWORD PTR [eax], xmm0

; 234  : 		Row[1][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv256[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv256[ebp]
	movss	DWORD PTR [eax], xmm0

; 235  : 		tmp1 = Row[2][0]; tmp2 = Row[2][1];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 236  : 		Row[2][0] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv258[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv258[ebp]
	movss	DWORD PTR [eax], xmm0

; 237  : 		Row[2][1] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv260[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv260[ebp]
	movss	DWORD PTR [eax], xmm0

; 238  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Rotate_Z@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Rotate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Rotate_Y@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv257 = -88						; size = 4
tv255 = -88						; size = 4
tv253 = -88						; size = 4
tv251 = -88						; size = 4
tv249 = -88						; size = 4
tv247 = -88						; size = 4
_c$ = -20						; size = 4
_s$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Rotate_Y@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Rotate_Y, COMDAT
; _this$ = ecx

; 208  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 209  : 		float tmp1,tmp2;
; 210  : 		float s,c;
; 211  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 212  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 213  : 		tmp1 = Row[0][0]; tmp2 = Row[0][2];

	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 214  : 		Row[0][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv247[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv247[ebp]
	movss	DWORD PTR [eax], xmm0

; 215  : 		Row[0][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv249[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv249[ebp]
	movss	DWORD PTR [eax], xmm0

; 216  : 		tmp1 = Row[1][0]; tmp2 = Row[1][2];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 217  : 		Row[1][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv251[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv251[ebp]
	movss	DWORD PTR [eax], xmm0

; 218  : 		Row[1][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv253[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv253[ebp]
	movss	DWORD PTR [eax], xmm0

; 219  : 		tmp1 = Row[2][0]; tmp2 = Row[2][2];

	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 220  : 		Row[2][0] = (float)(c*tmp1 - s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	subss	xmm0, xmm1
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv255[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv255[ebp]
	movss	DWORD PTR [eax], xmm0

; 221  : 		Row[2][2] = (float)(s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv257[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv257[ebp]
	movss	DWORD PTR [eax], xmm0

; 222  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Rotate_Y@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Rotate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Rotate_X@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv260 = -88						; size = 4
tv258 = -88						; size = 4
tv256 = -88						; size = 4
tv254 = -88						; size = 4
tv252 = -88						; size = 4
tv250 = -88						; size = 4
_c$ = -20						; size = 4
_s$ = -16						; size = 4
_tmp2$ = -12						; size = 4
_tmp1$ = -8						; size = 4
_this$ = -4						; size = 4
_theta$ = 8						; size = 4
?Rotate_X@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Rotate_X, COMDAT
; _this$ = ecx

; 192  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 193  : 		float tmp1,tmp2;
; 194  : 		float s,c;
; 195  : 		s = sinf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 196  : 		c = cosf(theta);

	push	ecx
	movss	xmm0, DWORD PTR _theta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 197  : 		tmp1 = Row[0][1]; tmp2 = Row[0][2];

	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 198  : 		Row[0][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv250[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv250[ebp]
	movss	DWORD PTR [eax], xmm0

; 199  : 		Row[0][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv252[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv252[ebp]
	movss	DWORD PTR [eax], xmm0

; 200  : 		tmp1 = Row[1][1]; tmp2 = Row[1][2];

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 201  : 		Row[1][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv254[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv254[ebp]
	movss	DWORD PTR [eax], xmm0

; 202  : 		Row[1][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv256[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv256[ebp]
	movss	DWORD PTR [eax], xmm0

; 203  : 		tmp1 = Row[2][1]; tmp2 = Row[2][2];

	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp1$[ebp], xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _tmp2$[ebp], xmm0

; 204  : 		Row[2][1] = (float)( c*tmp1 + s*tmp2);

	movss	xmm0, DWORD PTR _c$[ebp]
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _s$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv258[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv258[ebp]
	movss	DWORD PTR [eax], xmm0

; 205  : 		Row[2][2] = (float)(-s*tmp1 + c*tmp2);

	movss	xmm0, DWORD PTR _s$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _tmp1$[ebp]
	movss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm1, DWORD PTR _tmp2$[ebp]
	addss	xmm0, xmm1
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv260[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR tv260[ebp]
	movss	DWORD PTR [eax], xmm0

; 206  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Rotate_X@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Rotate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Translate_Z@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv142 = -72						; size = 4
tv94 = -72						; size = 4
tv78 = -72						; size = 4
_this$ = -4						; size = 4
_z$ = 8							; size = 4
?Translate_Z@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Translate_Z, COMDAT
; _this$ = ecx

; 186  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 187  : 		Row[0][3]  += (float)(Row[0][2]*z);

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv78[ebp], eax
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	mov	eax, DWORD PTR tv78[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv78[ebp]
	movss	DWORD PTR [ecx], xmm0

; 188  : 		Row[1][3]  += (float)(Row[1][2]*z);

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv94[ebp], eax
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	mov	eax, DWORD PTR tv94[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv94[ebp]
	movss	DWORD PTR [ecx], xmm0

; 189  : 		Row[2][3]  += (float)(Row[2][2]*z);

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv142[ebp], eax
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	mov	eax, DWORD PTR tv142[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv142[ebp]
	movss	DWORD PTR [ecx], xmm0

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Translate_Z@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Translate_Z
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Translate_Y@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv142 = -72						; size = 4
tv94 = -72						; size = 4
tv78 = -72						; size = 4
_this$ = -4						; size = 4
_y$ = 8							; size = 4
?Translate_Y@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Translate_Y, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 181  : 		Row[0][3]  += (float)(Row[0][1]*y);

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv78[ebp], eax
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	mov	eax, DWORD PTR tv78[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv78[ebp]
	movss	DWORD PTR [ecx], xmm0

; 182  : 		Row[1][3]  += (float)(Row[1][1]*y);

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv94[ebp], eax
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	mov	eax, DWORD PTR tv94[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv94[ebp]
	movss	DWORD PTR [ecx], xmm0

; 183  : 		Row[2][3]  += (float)(Row[2][1]*y);

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv142[ebp], eax
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	mov	eax, DWORD PTR tv142[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv142[ebp]
	movss	DWORD PTR [ecx], xmm0

; 184  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Translate_Y@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Translate_Y
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Translate_X@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv142 = -72						; size = 4
tv94 = -72						; size = 4
tv78 = -72						; size = 4
_this$ = -4						; size = 4
_x$ = 8							; size = 4
?Translate_X@Matrix3D@@QAEXM@Z PROC			; Matrix3D::Translate_X, COMDAT
; _this$ = ecx

; 174  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 175  : 		Row[0][3]  += (float)(Row[0][0]*x);

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv78[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR tv78[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv78[ebp]
	movss	DWORD PTR [ecx], xmm0

; 176  : 		Row[1][3]  += (float)(Row[1][0]*x);

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv94[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR tv94[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv94[ebp]
	movss	DWORD PTR [ecx], xmm0

; 177  : 		Row[2][3]  += (float)(Row[2][0]*x);

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv142[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR tv142[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv142[ebp]
	movss	DWORD PTR [ecx], xmm0

; 178  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Translate_X@Matrix3D@@QAEXM@Z ENDP			; Matrix3D::Translate_X
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Translate@Matrix3D@@QAEXABVVector3@@@Z
_TEXT	SEGMENT
tv278 = -80						; size = 4
tv274 = -80						; size = 4
tv270 = -80						; size = 4
tv276 = -76						; size = 4
tv272 = -76						; size = 4
tv268 = -76						; size = 4
tv214 = -72						; size = 4
tv174 = -72						; size = 4
tv134 = -72						; size = 4
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?Translate@Matrix3D@@QAEXABVVector3@@@Z PROC		; Matrix3D::Translate, COMDAT
; _this$ = ecx

; 168  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 169  : 		Row[0][3]  += Row[0][0]*t[0] + Row[0][1]*t[1] + Row[0][2]*t[2];

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv134[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv268[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv268[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv270[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv270[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR tv134[ebp]
	addss	xmm1, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv134[ebp]
	movss	DWORD PTR [ecx], xmm1

; 170  : 		Row[1][3]  += Row[1][0]*t[0] + Row[1][1]*t[1] + Row[1][2]*t[2];

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv174[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv272[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv272[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv274[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv274[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR tv174[ebp]
	addss	xmm1, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv174[ebp]
	movss	DWORD PTR [ecx], xmm1

; 171  : 		Row[2][3]  += Row[2][0]*t[0] + Row[2][1]*t[1] + Row[2][2]*t[2];

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv214[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv276[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv276[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv278[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR tv278[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR tv214[ebp]
	addss	xmm1, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv214[ebp]
	movss	DWORD PTR [ecx], xmm1

; 172  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Translate@Matrix3D@@QAEXABVVector3@@@Z ENDP		; Matrix3D::Translate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Translate@Matrix3D@@QAEXMMM@Z
_TEXT	SEGMENT
tv245 = -80						; size = 4
tv241 = -80						; size = 4
tv237 = -80						; size = 4
tv243 = -76						; size = 4
tv239 = -76						; size = 4
tv235 = -76						; size = 4
tv190 = -72						; size = 4
tv158 = -72						; size = 4
tv94 = -72						; size = 4
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
?Translate@Matrix3D@@QAEXMMM@Z PROC			; Matrix3D::Translate, COMDAT
; _this$ = ecx

; 162  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 		Row[0][3]  += (float)(Row[0][0]*x + Row[0][1]*y + Row[0][2]*z);

	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv94[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	push	1
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv235[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	movss	xmm1, DWORD PTR tv235[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv237[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	movss	xmm1, DWORD PTR tv237[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR tv94[ebp]
	addss	xmm1, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv94[ebp]
	movss	DWORD PTR [ecx], xmm1

; 164  : 		Row[1][3]  += (float)(Row[1][0]*x + Row[1][1]*y + Row[1][2]*z);

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv158[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv239[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	movss	xmm1, DWORD PTR tv239[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv241[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	movss	xmm1, DWORD PTR tv241[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR tv158[ebp]
	addss	xmm1, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv158[ebp]
	movss	DWORD PTR [ecx], xmm1

; 165  : 		Row[2][3]  += (float)(Row[2][0]*x + Row[2][1]*y + Row[2][2]*z);

	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv190[ebp], eax
	push	0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _x$[ebp]
	push	1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv243[ebp], xmm0
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _y$[ebp]
	movss	xmm1, DWORD PTR tv243[ebp]
	addss	xmm1, xmm0
	push	2
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR tv245[ebp], xmm1
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _z$[ebp]
	movss	xmm1, DWORD PTR tv245[ebp]
	addss	xmm1, xmm0
	mov	eax, DWORD PTR tv190[ebp]
	addss	xmm1, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv190[ebp]
	movss	DWORD PTR [ecx], xmm1

; 166  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Translate@Matrix3D@@QAEXMMM@Z ENDP			; Matrix3D::Translate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Make_Identity@Matrix3D@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Make_Identity@Matrix3D@@QAEXXZ PROC			; Matrix3D::Make_Identity, COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 157  : 		Row[0].Set(1.0f,0.0f,0.0f,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 158  : 		Row[1].Set(0.0f,1.0f,0.0f,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 159  : 		Row[2].Set(0.0f,0.0f,1.0f,0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 160  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Make_Identity@Matrix3D@@QAEXXZ ENDP			; Matrix3D::Make_Identity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Adjust_Z_Translation@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv70 = -72						; size = 4
_this$ = -4						; size = 4
_z$ = 8							; size = 4
?Adjust_Z_Translation@Matrix3D@@QAEXM@Z PROC		; Matrix3D::Adjust_Z_Translation, COMDAT
; _this$ = ecx

; 154  : 	TT_INLINE void Adjust_Z_Translation(float z) { Row[2][3] += z; };

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR _z$[ebp]
	mov	ecx, DWORD PTR tv70[ebp]
	movss	DWORD PTR [ecx], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Adjust_Z_Translation@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::Adjust_Z_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Adjust_Y_Translation@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv70 = -72						; size = 4
_this$ = -4						; size = 4
_y$ = 8							; size = 4
?Adjust_Y_Translation@Matrix3D@@QAEXM@Z PROC		; Matrix3D::Adjust_Y_Translation, COMDAT
; _this$ = ecx

; 153  : 	TT_INLINE void Adjust_Y_Translation(float y) { Row[1][3] += y; };

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR tv70[ebp]
	movss	DWORD PTR [ecx], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Adjust_Y_Translation@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::Adjust_Y_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Adjust_X_Translation@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
tv70 = -72						; size = 4
_this$ = -4						; size = 4
_x$ = 8							; size = 4
?Adjust_X_Translation@Matrix3D@@QAEXM@Z PROC		; Matrix3D::Adjust_X_Translation, COMDAT
; _this$ = ecx

; 152  : 	TT_INLINE void Adjust_X_Translation(float x) { Row[0][3] += x; };

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR tv70[ebp]
	movss	DWORD PTR [ecx], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Adjust_X_Translation@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::Adjust_X_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Adjust_Translation@Matrix3D@@QAEXABVVector3@@@Z
_TEXT	SEGMENT
tv95 = -72						; size = 4
tv84 = -72						; size = 4
tv73 = -72						; size = 4
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?Adjust_Translation@Matrix3D@@QAEXABVVector3@@@Z PROC	; Matrix3D::Adjust_Translation, COMDAT
; _this$ = ecx

; 151  : 	TT_INLINE void Adjust_Translation(const Vector3 & t) { Row[0][3] += t[0]; Row[1][3] += t[1]; Row[2][3] += t[2]; };

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv73[ebp], eax
	push	0
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR tv73[ebp]
	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR tv73[ebp]
	movss	DWORD PTR [edx], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv84[ebp], eax
	push	1
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR tv84[ebp]
	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR tv84[ebp]
	movss	DWORD PTR [edx], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	DWORD PTR tv95[ebp], eax
	push	2
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	ecx, DWORD PTR tv95[ebp]
	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR [eax]
	mov	edx, DWORD PTR tv95[ebp]
	movss	DWORD PTR [edx], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Adjust_Translation@Matrix3D@@QAEXABVVector3@@@Z ENDP	; Matrix3D::Adjust_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set_Z_Translation@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_z$ = 8							; size = 4
?Set_Z_Translation@Matrix3D@@QAEXM@Z PROC		; Matrix3D::Set_Z_Translation, COMDAT
; _this$ = ecx

; 150  : 	TT_INLINE void Set_Z_Translation(float z) { Row[2][3] = z; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [eax], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_Z_Translation@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::Set_Z_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set_Y_Translation@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_y$ = 8							; size = 4
?Set_Y_Translation@Matrix3D@@QAEXM@Z PROC		; Matrix3D::Set_Y_Translation, COMDAT
; _this$ = ecx

; 149  : 	TT_INLINE void Set_Y_Translation(float y) { Row[1][3] = y; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [eax], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_Y_Translation@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::Set_Y_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set_X_Translation@Matrix3D@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
?Set_X_Translation@Matrix3D@@QAEXM@Z PROC		; Matrix3D::Set_X_Translation, COMDAT
; _this$ = ecx

; 148  : 	TT_INLINE void Set_X_Translation(float x) { Row[0][3] = x; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [eax], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_X_Translation@Matrix3D@@QAEXM@Z ENDP		; Matrix3D::Set_X_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_Z_Translation@Matrix3D@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Z_Translation@Matrix3D@@QBEMXZ PROC		; Matrix3D::Get_Z_Translation, COMDAT
; _this$ = ecx

; 147  : 	TT_INLINE float Get_Z_Translation(void) const { return Row[2][3]; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	fld	DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Z_Translation@Matrix3D@@QBEMXZ ENDP		; Matrix3D::Get_Z_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_Y_Translation@Matrix3D@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Y_Translation@Matrix3D@@QBEMXZ PROC		; Matrix3D::Get_Y_Translation, COMDAT
; _this$ = ecx

; 146  : 	TT_INLINE float Get_Y_Translation(void) const { return Row[1][3]; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	fld	DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Y_Translation@Matrix3D@@QBEMXZ ENDP		; Matrix3D::Get_Y_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_X_Translation@Matrix3D@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_X_Translation@Matrix3D@@QBEMXZ PROC		; Matrix3D::Get_X_Translation, COMDAT
; _this$ = ecx

; 145  : 	TT_INLINE float Get_X_Translation(void) const { return Row[0][3]; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	fld	DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_X_Translation@Matrix3D@@QBEMXZ ENDP		; Matrix3D::Get_X_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set_Translation@Matrix3D@@QAEXABVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?Set_Translation@Matrix3D@@QAEXABVVector3@@@Z PROC	; Matrix3D::Set_Translation, COMDAT
; _this$ = ecx

; 143  : 	TT_INLINE void Set_Translation(const Vector3 & t)  { Row[0][3] = t[0]; Row[1][3] = t[1];Row[2][3] = t[2]; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
	push	1
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
	push	2
	mov	ecx, DWORD PTR _t$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QAEAAMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_Translation@Matrix3D@@QAEXABVVector3@@@Z ENDP	; Matrix3D::Set_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_Translation@Matrix3D@@QBEXPAVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_set$ = 8						; size = 4
?Get_Translation@Matrix3D@@QBEXPAVVector3@@@Z PROC	; Matrix3D::Get_Translation, COMDAT
; _this$ = ecx

; 142  : 	TT_INLINE void Get_Translation(Vector3 * set) const { set->X = Row[0][3]; set->Y = Row[1][3]; set->Z = Row[2][3]; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	mov	ecx, DWORD PTR _set$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+8], edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Translation@Matrix3D@@QBEXPAVVector3@@@Z ENDP	; Matrix3D::Get_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Get_Translation@Matrix3D@@QBE?AVVector3@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Get_Translation@Matrix3D@@QBE?AVVector3@@XZ PROC	; Matrix3D::Get_Translation, COMDAT
; _this$ = ecx

; 141  : 	TT_INLINE Vector3 Get_Translation(void) const { return Vector3(Row[0][3],Row[1][3],Row[2][3]); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	3
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??AVector4@@QBEABMH@Z			; Vector4::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Translation@Matrix3D@@QBE?AVVector3@@XZ ENDP	; Matrix3D::Get_Translation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set@Matrix3D@@QAEXABVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_position$ = 8						; size = 4
?Set@Matrix3D@@QAEXABVVector3@@@Z PROC			; Matrix3D::Set, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 134  : 		Row[0].Set(1.0f,0.0f,0.0f,position[0]);

	push	0
	mov	ecx, DWORD PTR _position$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 135  : 		Row[1].Set(0.0f,1.0f,0.0f,position[1]);

	push	1
	mov	ecx, DWORD PTR _position$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 136  : 		Row[2].Set(0.0f,0.0f,1.0f,position[2]);

	push	2
	mov	ecx, DWORD PTR _position$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 137  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set@Matrix3D@@QAEXABVVector3@@@Z ENDP			; Matrix3D::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set@Matrix3D@@QAEXABVVector3@@MM@Z
_TEXT	SEGMENT
tv368 = -80						; size = 4
tv362 = -80						; size = 4
tv356 = -80						; size = 4
tv366 = -76						; size = 4
tv360 = -76						; size = 4
tv354 = -76						; size = 4
tv364 = -72						; size = 4
tv358 = -72						; size = 4
tv352 = -72						; size = 4
_this$ = -4						; size = 4
_axis$ = 8						; size = 4
_s$ = 12						; size = 4
_c$ = 16						; size = 4
?Set@Matrix3D@@QAEXABVVector3@@MM@Z PROC		; Matrix3D::Set, COMDAT
; _this$ = ecx

; 112  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 113  : 		Row[0].Set(
; 114  : 			(float)(axis[0]*axis[0] + c*(1.0f - axis[0]*axis[0])),
; 115  : 			(float)(axis[0]*axis[1]*(1.0f - c) - axis[2]*s),
; 116  : 			(float)(axis[2]*axis[0]*(1.0f - c) + axis[1]*s),
; 117  : 			0.0f
; 118  : 		);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv352[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv352[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv354[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv354[ebp]
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv356[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR _c$[ebp]
	movss	xmm0, DWORD PTR tv356[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 119  : 		Row[1].Set(
; 120  : 			(float)(axis[0]*axis[1]*(1.0f - c) + axis[2]*s),
; 121  : 			(float)(axis[1]*axis[1] + c*(1.0f - axis[1]*axis[1])),
; 122  : 			(float)(axis[1]*axis[2]*(1.0f - c) - axis[0]*s),
; 123  : 			0.0f
; 124  : 		);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv358[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv358[ebp]
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv360[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR _c$[ebp]
	movss	xmm0, DWORD PTR tv360[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv362[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv362[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 125  : 		Row[2].Set(
; 126  : 			(float)(axis[2]*axis[0]*(1.0f - c) - axis[1]*s),
; 127  : 			(float)(axis[1]*axis[2]*(1.0f - c) + axis[0]*s),
; 128  : 			(float)(axis[2]*axis[2] + c*(1 - axis[2]*axis[2])),
; 129  : 			0.0f
; 130  : 		);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv364[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR _c$[ebp]
	movss	xmm0, DWORD PTR tv364[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv366[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv366[ebp]
	addss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	push	2
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	mov	esi, eax
	push	0
	mov	ecx, DWORD PTR _axis$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR [eax]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, DWORD PTR _c$[ebp]
	mulss	xmm0, xmm1
	push	1
	mov	ecx, DWORD PTR _axis$[ebp]
	movss	DWORD PTR tv368[ebp], xmm0
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _s$[ebp]
	movss	xmm1, DWORD PTR tv368[ebp]
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 131  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Set@Matrix3D@@QAEXABVVector3@@MM@Z ENDP		; Matrix3D::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set@Matrix3D@@QAEXABVVector3@@M@Z
_TEXT	SEGMENT
_s$ = -12						; size = 4
_c$ = -8						; size = 4
_this$ = -4						; size = 4
_axis$ = 8						; size = 4
_angle$ = 12						; size = 4
?Set@Matrix3D@@QAEXABVVector3@@M@Z PROC			; Matrix3D::Set, COMDAT
; _this$ = ecx

; 106  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 107  : 		float c = cosf(angle);

	push	ecx
	movss	xmm0, DWORD PTR _angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _c$[ebp]

; 108  : 		float s = sinf(angle);

	push	ecx
	movss	xmm0, DWORD PTR _angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _s$[ebp]

; 109  : 		Set(axis,s,c);

	push	ecx
	movss	xmm0, DWORD PTR _c$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _s$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _axis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3D@@QAEXABVVector3@@MM@Z	; Matrix3D::Set

; 110  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Set@Matrix3D@@QAEXABVVector3@@M@Z ENDP			; Matrix3D::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set@Matrix3D@@QAEXABVVector3@@000@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_pos$ = 20						; size = 4
?Set@Matrix3D@@QAEXABVVector3@@000@Z PROC		; Matrix3D::Set, COMDAT
; _this$ = ecx

; 100  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 101  : 		Row[0].Set(x[0],y[0],z[0],pos[0]);

	push	0
	mov	ecx, DWORD PTR _pos$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, DWORD PTR _z$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, DWORD PTR _y$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, DWORD PTR _x$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 102  : 		Row[1].Set(x[1],y[1],z[1],pos[1]);

	push	1
	mov	ecx, DWORD PTR _pos$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, DWORD PTR _z$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, DWORD PTR _y$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, DWORD PTR _x$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 103  : 		Row[2].Set(x[2],y[2],z[2],pos[2]);

	push	2
	mov	ecx, DWORD PTR _pos$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, DWORD PTR _z$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, DWORD PTR _y$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	push	2
	mov	ecx, DWORD PTR _x$[ebp]
	call	??AVector3@@QBEABMH@Z			; Vector3::operator[]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 104  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Set@Matrix3D@@QAEXABVVector3@@000@Z ENDP		; Matrix3D::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set@Matrix3D@@QAEXMMMMMMMMMMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m11$ = 8						; size = 4
_m12$ = 12						; size = 4
_m13$ = 16						; size = 4
_m14$ = 20						; size = 4
_m21$ = 24						; size = 4
_m22$ = 28						; size = 4
_m23$ = 32						; size = 4
_m24$ = 36						; size = 4
_m31$ = 40						; size = 4
_m32$ = 44						; size = 4
_m33$ = 48						; size = 4
_m34$ = 52						; size = 4
?Set@Matrix3D@@QAEXMMMMMMMMMMMM@Z PROC			; Matrix3D::Set, COMDAT
; _this$ = ecx

; 94   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 95   : 		Row[0].Set(m11,m12,m13,m14);

	push	ecx
	movss	xmm0, DWORD PTR _m14$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m13$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m12$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m11$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 96   : 		Row[1].Set(m21,m22,m23,m24);

	push	ecx
	movss	xmm0, DWORD PTR _m24$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m23$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m22$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m21$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 97   : 		Row[2].Set(m31,m32,m33,m34);

	push	ecx
	movss	xmm0, DWORD PTR _m34$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m33$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m32$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _m31$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 98   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
?Set@Matrix3D@@QAEXMMMMMMMMMMMM@Z ENDP			; Matrix3D::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ?Set@Matrix3D@@QAEXQAM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
?Set@Matrix3D@@QAEXQAM@Z PROC				; Matrix3D::Set, COMDAT
; _this$ = ecx

; 88   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 89   : 		Row[0].Set(m[0],m[1],m[2],m[3]);

	mov	eax, 4
	imul	eax, 3
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx]
	movss	DWORD PTR [esp], xmm0
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 90   : 		Row[1].Set(m[4],m[5],m[6],m[7]);

	mov	eax, 4
	imul	eax, 7
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	imul	edx, 6
	mov	eax, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 4
	imul	ecx, 5
	mov	edx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx]
	movss	DWORD PTR [esp], xmm0
	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 91   : 		Row[2].Set(m[8],m[9],m[10],m[11]);

	mov	eax, 4
	imul	eax, 11					; 0000000bH
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	imul	edx, 10					; 0000000aH
	mov	eax, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 4
	imul	ecx, 9
	mov	edx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx]
	movss	DWORD PTR [esp], xmm0
	mov	eax, 4
	shl	eax, 3
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 92   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set@Matrix3D@@QAEXQAM@Z ENDP				; Matrix3D::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??4Matrix3D@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??4Matrix3D@@QAEAAV0@ABV0@@Z PROC			; Matrix3D::operator=, COMDAT
; _this$ = ecx

; 68   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 69   : 		Row[0] = m.Row[0];

	mov	eax, 16					; 00000010H
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 70   : 		Row[1] = m.Row[1];

	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 71   : 		Row[2] = m.Row[2];

	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 72   : 		return *this; 

	mov	eax, DWORD PTR _this$[ebp]

; 73   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Matrix3D@@QAEAAV0@ABV0@@Z ENDP			; Matrix3D::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??0Matrix3D@@QAE@ABV0@@Z PROC				; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 61   : 	TT_INLINE Matrix3D(const Matrix3D & m)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 62   : 	{
; 63   : 		Row[0] = m.Row[0];

	mov	eax, 16					; 00000010H
	imul	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 64   : 		Row[1] = m.Row[1];

	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 65   : 		Row[2] = m.Row[2];

	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	??4Vector4@@QAEAAV0@ABV0@@Z		; Vector4::operator=

; 66   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix3D@@QAE@ABV0@@Z ENDP				; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@ABVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_position$ = 8						; size = 4
??0Matrix3D@@QAE@ABVVector3@@@Z PROC			; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 57   : 	TT_INLINE explicit Matrix3D(const Vector3 & position)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 58   : 	{
; 59   : 		Set(position);

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3D@@QAEXABVVector3@@@Z	; Matrix3D::Set

; 60   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix3D@@QAE@ABVVector3@@@Z ENDP			; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@ABVQuaternion@@ABVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rotation$ = 8						; size = 4
_position$ = 12						; size = 4
??0Matrix3D@@QAE@ABVQuaternion@@ABVVector3@@@Z PROC	; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 53   : 	TT_INLINE explicit Matrix3D(const Quaternion & rotation,const Vector3 & position)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 54   : 	{
; 55   : 		Set(rotation,position);

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rotation$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3D@@QAEXABVQuaternion@@ABVVector3@@@Z ; Matrix3D::Set

; 56   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0Matrix3D@@QAE@ABVQuaternion@@ABVVector3@@@Z ENDP	; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@ABVMatrix3@@ABVVector3@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rotation$ = 8						; size = 4
_position$ = 12						; size = 4
??0Matrix3D@@QAE@ABVMatrix3@@ABVVector3@@@Z PROC	; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 49   : 	TT_INLINE explicit Matrix3D(const Matrix3 & rotation,const Vector3 & position)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 50   : 	{
; 51   : 		Set(rotation,position);

	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rotation$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3D@@QAEXABVMatrix3@@ABVVector3@@@Z ; Matrix3D::Set

; 52   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0Matrix3D@@QAE@ABVMatrix3@@ABVVector3@@@Z ENDP	; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@ABVVector3@@MM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_axis$ = 8						; size = 4
_sine$ = 12						; size = 4
_cosine$ = 16						; size = 4
??0Matrix3D@@QAE@ABVVector3@@MM@Z PROC			; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 45   : 	TT_INLINE explicit Matrix3D(const Vector3	&axis,float sine,float cosine)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 46   : 	{
; 47   : 		Set(axis,sine,cosine);

	push	ecx
	movss	xmm0, DWORD PTR _cosine$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _sine$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _axis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3D@@QAEXABVVector3@@MM@Z	; Matrix3D::Set

; 48   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0Matrix3D@@QAE@ABVVector3@@MM@Z ENDP			; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@ABVVector3@@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_axis$ = 8						; size = 4
_angle$ = 12						; size = 4
??0Matrix3D@@QAE@ABVVector3@@M@Z PROC			; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 41   : 	TT_INLINE explicit Matrix3D(const Vector3	&axis,float angle)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 42   : 	{
; 43   : 		Set(axis,angle);

	push	ecx
	movss	xmm0, DWORD PTR _angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _axis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3D@@QAEXABVVector3@@M@Z	; Matrix3D::Set

; 44   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0Matrix3D@@QAE@ABVVector3@@M@Z ENDP			; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@ABVVector3@@000@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_pos$ = 20						; size = 4
??0Matrix3D@@QAE@ABVVector3@@000@Z PROC			; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 37   : 	TT_INLINE explicit Matrix3D(const Vector3	&x,const Vector3	&y,const Vector3	&z,const Vector3	&pos)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 38   : 	{
; 39   : 		Set(x,y,z,pos);

	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _z$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Set@Matrix3D@@QAEXABVVector3@@000@Z	; Matrix3D::Set

; 40   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0Matrix3D@@QAE@ABVVector3@@000@Z ENDP			; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@QAM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_m$ = 8							; size = 4
??0Matrix3D@@QAE@QAM@Z PROC				; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 31   : 	TT_INLINE explicit Matrix3D(float m[12])

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z

; 32   : 	{
; 33   : 		Row[0].Set(m[0],m[1],m[2],m[3]);

	mov	eax, 4
	imul	eax, 3
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx]
	movss	DWORD PTR [esp], xmm0
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 34   : 		Row[1].Set(m[4],m[5],m[6],m[7]);

	mov	eax, 4
	imul	eax, 7
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	imul	edx, 6
	mov	eax, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 4
	imul	ecx, 5
	mov	edx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx]
	movss	DWORD PTR [esp], xmm0
	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 35   : 		Row[2].Set(m[8],m[9],m[10],m[11]);

	mov	eax, 4
	imul	eax, 11					; 0000000bH
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	imul	edx, 10					; 0000000aH
	mov	eax, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 4
	imul	ecx, 9
	mov	edx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx]
	movss	DWORD PTR [esp], xmm0
	mov	eax, 4
	shl	eax, 3
	mov	ecx, DWORD PTR _m$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _this$[ebp]
	call	?Set@Vector4@@QAEXMMMM@Z		; Vector4::Set

; 36   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix3D@@QAE@QAM@Z ENDP				; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??0Matrix3D@@QAE@_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_init$ = 8						; size = 1
??0Matrix3D@@QAE@_N@Z PROC				; Matrix3D::Matrix3D, COMDAT
; _this$ = ecx

; 30   : 	TT_INLINE explicit Matrix3D(bool init) { if (init) Make_Identity(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Vector4@@QAE@XZ		; Vector4::Vector4
	push	3
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	movzx	eax, BYTE PTR _init$[ebp]
	test	eax, eax
	je	SHORT $LN2@Matrix3D
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Make_Identity@Matrix3D@@QAEXXZ		; Matrix3D::Make_Identity
$LN2@Matrix3D:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Matrix3D@@QAE@_N@Z ENDP				; Matrix3D::Matrix3D
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??AMatrix3D@@QBEABVVector4@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AMatrix3D@@QBEABVVector4@@H@Z PROC			; Matrix3D::operator[], COMDAT
; _this$ = ecx

; 28   :    TT_INLINE const Vector4 & operator [] (int i) const { return Row[i]; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AMatrix3D@@QBEABVVector4@@H@Z ENDP			; Matrix3D::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\matrix3d.h
;	COMDAT ??AMatrix3D@@QAEAAVVector4@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AMatrix3D@@QAEAAVVector4@@H@Z PROC			; Matrix3D::operator[], COMDAT
; _this$ = ecx

; 27   :    TT_INLINE Vector4 & operator [] (int i) { return Row[i]; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AMatrix3D@@QAEAAVVector4@@H@Z ENDP			; Matrix3D::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ??XVector4@@QAEAAV0@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_f$ = 8							; size = 4
??XVector4@@QAEAAV0@M@Z PROC				; Vector4::operator*=, COMDAT
; _this$ = ecx

; 64   : 	TT_INLINE Vector4& operator*=(float f) { X *= f; Y *= f; Z *= f; W *= f; return *this;	};

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _f$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	mulss	xmm0, DWORD PTR _f$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR _f$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+12]
	mulss	xmm0, DWORD PTR _f$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??XVector4@@QAEAAV0@M@Z ENDP				; Vector4::operator*=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ??ZVector4@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??ZVector4@@QAEAAV0@ABV0@@Z PROC			; Vector4::operator-=, COMDAT
; _this$ = ecx

; 63   : 	TT_INLINE Vector4& operator-=(const Vector4& v) { X -= v.X; Y -= v.Y; Z -= v.Z; W -= v.W; return *this;	};

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	subss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	subss	xmm0, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	subss	xmm0, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+12]
	subss	xmm0, DWORD PTR [ecx+12]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+12], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??ZVector4@@QAEAAV0@ABV0@@Z ENDP			; Vector4::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ??YVector4@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??YVector4@@QAEAAV0@ABV0@@Z PROC			; Vector4::operator+=, COMDAT
; _this$ = ecx

; 62   : 	TT_INLINE Vector4& operator+=(const Vector4& v) { X += v.X; Y += v.Y; Z += v.Z; W += v.W; return *this;	};

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	addss	xmm0, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	addss	xmm0, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+12]
	addss	xmm0, DWORD PTR [ecx+12]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+12], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??YVector4@@QAEAAV0@ABV0@@Z ENDP			; Vector4::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ??AVector4@@QBEABMH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AVector4@@QBEABMH@Z PROC				; Vector4::operator[], COMDAT
; _this$ = ecx

; 39   : 	TT_INLINE const float& operator[](int i) const { return (&X)[i]; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AVector4@@QBEABMH@Z ENDP				; Vector4::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ??AVector4@@QAEAAMH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AVector4@@QAEAAMH@Z PROC				; Vector4::operator[], COMDAT
; _this$ = ecx

; 38   : 	TT_INLINE float& operator[](int i) { return (&X)[i]; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AVector4@@QAEAAMH@Z ENDP				; Vector4::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ?Set@Vector4@@QAEXMMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_w$ = 20						; size = 4
?Set@Vector4@@QAEXMMMM@Z PROC				; Vector4::Set, COMDAT
; _this$ = ecx

; 35   : 	TT_INLINE void Set(float x, float y, float z, float w) { X = x; Y = y; Z = z; W = w; };

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [eax], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [eax+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [eax+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _w$[ebp]
	movss	DWORD PTR [eax+12], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Set@Vector4@@QAEXMMMM@Z ENDP				; Vector4::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ??4Vector4@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??4Vector4@@QAEAAV0@ABV0@@Z PROC			; Vector4::operator=, COMDAT
; _this$ = ecx

; 34   : 	TT_INLINE Vector4& operator=(const Vector4& v) { X = v.X; Y = v.Y; Z = v.Z; W = v.W; return *this; };	

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Vector4@@QAEAAV0@ABV0@@Z ENDP			; Vector4::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ??0Vector4@@QAE@MMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_w$ = 20						; size = 4
??0Vector4@@QAE@MMMM@Z PROC				; Vector4::Vector4, COMDAT
; _this$ = ecx

; 26   : 	TT_INLINE Vector4(float x, float y, float z, float w) {	X = x; Y = y; Z = z; W = w;	};

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [eax], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [eax+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [eax+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _w$[ebp]
	movss	DWORD PTR [eax+12], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0Vector4@@QAE@MMMM@Z ENDP				; Vector4::Vector4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector4.h
;	COMDAT ??0Vector4@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Vector4@@QAE@XZ PROC					; Vector4::Vector4, COMDAT
; _this$ = ecx

; 24   : 	TT_INLINE Vector4() {};

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Vector4@@QAE@XZ ENDP					; Vector4::Vector4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4file_auto_ptr@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4file_auto_ptr@@QAEAAV0@ABV0@@Z PROC			; file_auto_ptr::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4file_auto_ptr@@QAEAAV0@ABV0@@Z ENDP			; file_auto_ptr::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ?get@file_auto_ptr@@QAEPAVFileClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@file_auto_ptr@@QAEPAVFileClass@@XZ PROC		; file_auto_ptr::get, COMDAT
; _this$ = ecx

; 202  : 	FileClass* get() { return _Ptr; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?get@file_auto_ptr@@QAEPAVFileClass@@XZ ENDP		; file_auto_ptr::get
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ??Dfile_auto_ptr@@QAEAAVFileClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Dfile_auto_ptr@@QAEAAVFileClass@@XZ PROC		; file_auto_ptr::operator*, COMDAT
; _this$ = ecx

; 201  : 	FileClass& operator*() { return *_Ptr; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Dfile_auto_ptr@@QAEAAVFileClass@@XZ ENDP		; file_auto_ptr::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ??Bfile_auto_ptr@@QAEPAVFileClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Bfile_auto_ptr@@QAEPAVFileClass@@XZ PROC		; file_auto_ptr::operator FileClass *, COMDAT
; _this$ = ecx

; 200  : 	operator FileClass *() { return _Ptr; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Bfile_auto_ptr@@QAEPAVFileClass@@XZ ENDP		; file_auto_ptr::operator FileClass *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ??Cfile_auto_ptr@@QAEPAVFileClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Cfile_auto_ptr@@QAEPAVFileClass@@XZ PROC		; file_auto_ptr::operator->, COMDAT
; _this$ = ecx

; 199  : 	FileClass* operator ->() { return _Ptr; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??Cfile_auto_ptr@@QAEPAVFileClass@@XZ ENDP		; file_auto_ptr::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EINIClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EINIClass@@UAEPAXI@Z PROC				; INIClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1INIClass@@UAE@XZ		; INIClass::~INIClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1INIClass@@UAE@XZ			; INIClass::~INIClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EINIClass@@UAEPAXI@Z ENDP				; INIClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GINIClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GINIClass@@UAEPAXI@Z PROC				; INIClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1INIClass@@UAE@XZ			; INIClass::~INIClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GINIClass@@UAEPAXI@Z ENDP				; INIClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4INIClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4INIClass@@QAEAAV0@ABV0@@Z PROC			; INIClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4INIClass@@QAEAAV0@ABV0@@Z ENDP			; INIClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0INIClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0INIClass@@QAE@ABV0@@Z PROC				; INIClass::INIClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7INIClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0INIClass@@QAE@ABV0@@Z ENDP				; INIClass::INIClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ?Get_File_Name@INIClass@@QAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_File_Name@INIClass@@QAEPBDXZ PROC			; INIClass::Get_File_Name, COMDAT
; _this$ = ecx

; 183  : 	const char *Get_File_Name() { //DA

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 184  : 		return Filename;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]

; 185  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_File_Name@INIClass@@QAEPBDXZ ENDP			; INIClass::Get_File_Name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ?Get_Section_Index@INIClass@@QAEAAV?$IndexClass@HPAUINISection@@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Section_Index@INIClass@@QAEAAV?$IndexClass@HPAUINISection@@@@XZ PROC ; INIClass::Get_Section_Index, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 181  : 		return *SectionIndex;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 182  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Section_Index@INIClass@@QAEAAV?$IndexClass@HPAUINISection@@@@XZ ENDP ; INIClass::Get_Section_Index
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ?Get_Section_List@INIClass@@QAEAAV?$List@PAUINISection@@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Section_List@INIClass@@QAEAAV?$List@PAUINISection@@@@XZ PROC ; INIClass::Get_Section_List, COMDAT
; _this$ = ecx

; 176  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 177  : 		return *SectionList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 178  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Section_List@INIClass@@QAEAAV?$List@PAUINISection@@@@XZ ENDP ; INIClass::Get_Section_List
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ?Section_Present@INIClass@@QBE_NPBD@Z
_TEXT	SEGMENT
tv68 = -72						; size = 4
_this$ = -4						; size = 4
_section$ = 8						; size = 4
?Section_Present@INIClass@@QBE_NPBD@Z PROC		; INIClass::Section_Present, COMDAT
; _this$ = ecx

; 172  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 173  : 		return Find_Section(section) != 0;

	mov	eax, DWORD PTR _section$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find_Section@INIClass@@QBEPAUINISection@@PBD@Z ; INIClass::Find_Section
	test	eax, eax
	je	SHORT $LN3@Section_Pr
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@Section_Pr
$LN3@Section_Pr:
	mov	DWORD PTR tv68[ebp], 0
$LN4@Section_Pr:
	mov	al, BYTE PTR tv68[ebp]

; 174  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Section_Present@INIClass@@QBE_NPBD@Z ENDP		; INIClass::Section_Present
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_io.h
;	COMDAT ?Is_Present@INIClass@@QBE_NPBD0@Z
_TEXT	SEGMENT
tv76 = -72						; size = 4
tv70 = -72						; size = 4
_this$ = -4						; size = 4
_section$ = 8						; size = 4
_entry$ = 12						; size = 4
?Is_Present@INIClass@@QBE_NPBD0@Z PROC			; INIClass::Is_Present, COMDAT
; _this$ = ecx

; 161  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 162  : 		if (entry)

	cmp	DWORD PTR _entry$[ebp], 0
	je	SHORT $LN2@Is_Present

; 163  : 		{
; 164  : 			return Find_Entry(section,entry) != 0;

	mov	eax, DWORD PTR _entry$[ebp]
	push	eax
	mov	ecx, DWORD PTR _section$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find_Entry@INIClass@@QBEPAUINIEntry@@PBD0@Z ; INIClass::Find_Entry
	test	eax, eax
	je	SHORT $LN5@Is_Present
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN6@Is_Present
$LN5@Is_Present:
	mov	DWORD PTR tv70[ebp], 0
$LN6@Is_Present:
	mov	al, BYTE PTR tv70[ebp]
	jmp	SHORT $LN3@Is_Present

; 165  : 		}
; 166  : 		else

	jmp	SHORT $LN3@Is_Present
$LN2@Is_Present:

; 167  : 		{
; 168  : 			return Find_Section(section) != 0;

	mov	eax, DWORD PTR _section$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find_Section@INIClass@@QBEPAUINISection@@PBD@Z ; INIClass::Find_Section
	test	eax, eax
	je	SHORT $LN7@Is_Present
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN8@Is_Present
$LN7@Is_Present:
	mov	DWORD PTR tv76[ebp], 0
$LN8@Is_Present:
	mov	al, BYTE PTR tv76[ebp]
$LN3@Is_Present:

; 169  : 		}
; 170  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Is_Present@INIClass@@QBE_NPBD0@Z ENDP			; INIClass::Is_Present
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4ChunkSaveClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4ChunkSaveClass@@QAEAAV0@ABV0@@Z PROC			; ChunkSaveClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, 773				; 00000305H
	mov	esi, DWORD PTR ___that$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ChunkSaveClass@@QAEAAV0@ABV0@@Z ENDP			; ChunkSaveClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\chunkclass.h
;	COMDAT ?Set_Contains_Chunks@ChunkSaveClass@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Set_Contains_Chunks@ChunkSaveClass@@QAEXXZ PROC	; ChunkSaveClass::Set_Contains_Chunks, COMDAT
; _this$ = ecx

; 102  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 103  : 		HeaderStack[StackIndex-1].ChunkSize |= 0x80000000;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*8+1028]
	or	eax, -2147483648			; 80000000H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+edx*8+1028], eax

; 104  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Set_Contains_Chunks@ChunkSaveClass@@QAEXXZ ENDP	; ChunkSaveClass::Set_Contains_Chunks
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4ChunkLoadClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4ChunkLoadClass@@QAEAAV0@ABV0@@Z PROC			; ChunkLoadClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, 773				; 00000305H
	mov	esi, DWORD PTR ___that$[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ChunkLoadClass@@QAEAAV0@ABV0@@Z ENDP			; ChunkLoadClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EWideStringClass@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EWideStringClass@@QAEPAXI@Z PROC			; WideStringClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1WideStringClass@@QAE@XZ	; WideStringClass::~WideStringClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1WideStringClass@@QAE@XZ		; WideStringClass::~WideStringClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EWideStringClass@@QAEPAXI@Z ENDP			; WideStringClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ??1WideStringClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1WideStringClass@@QAE@XZ PROC				; WideStringClass::~WideStringClass, COMDAT
; _this$ = ecx

; 778  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 779  : 	Free_String ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?Free_String@WideStringClass@@AAEXXZ

; 780  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1WideStringClass@@QAE@XZ ENDP				; WideStringClass::~WideStringClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EStringClass@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EStringClass@@QAEPAXI@Z PROC				; StringClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1StringClass@@QAE@XZ		; StringClass::~StringClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringClass@@QAE@XZ			; StringClass::~StringClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EStringClass@@QAEPAXI@Z ENDP				; StringClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ??1StringClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1StringClass@@QAE@XZ PROC				; StringClass::~StringClass, COMDAT
; _this$ = ecx

; 366  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 367  : 	Free_String ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?Free_String@StringClass@@AAEXXZ

; 368  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1StringClass@@QAE@XZ ENDP				; StringClass::~StringClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?Release_Ref@RefCountClass@@QAEXXZ
_TEXT	SEGMENT
tv69 = -72						; size = 4
_this$ = -4						; size = 4
?Release_Ref@RefCountClass@@QAEXXZ PROC			; RefCountClass::Release_Ref, COMDAT
; _this$ = ecx

; 1516 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
$LN4@Release_Re:

; 1517 : 		TT_ASSERT(NumRefs > 0);

	xor	eax, eax
	jne	SHORT $LN4@Release_Re
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jg	SHORT $LN2@Release_Re
	int	3
$LN2@Release_Re:

; 1518 : 		if (--NumRefs == 0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv69[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv69[ebp], 0
	jne	SHORT $LN6@Release_Re

; 1519 : 			Delete_This();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
$LN6@Release_Re:

; 1520 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Release_Ref@RefCountClass@@QAEXXZ ENDP			; RefCountClass::Release_Ref
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\criticalsectionclass.h
;	COMDAT ??0FastCriticalSectionClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0FastCriticalSectionClass@@QAE@XZ PROC		; FastCriticalSectionClass::FastCriticalSectionClass, COMDAT
; _this$ = ecx

; 110  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 111  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0FastCriticalSectionClass@@QAE@XZ ENDP		; FastCriticalSectionClass::FastCriticalSectionClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\criticalsectionclass.h
;	COMDAT ??1LockClass@FastCriticalSectionClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1LockClass@FastCriticalSectionClass@@QAE@XZ PROC	; FastCriticalSectionClass::LockClass::~LockClass, COMDAT
; _this$ = ecx

; 102  : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 103  : 			criticalSection.Leave();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Leave@FastCriticalSectionClass@@AAEXXZ	; FastCriticalSectionClass::Leave

; 104  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1LockClass@FastCriticalSectionClass@@QAE@XZ ENDP	; FastCriticalSectionClass::LockClass::~LockClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\criticalsectionclass.h
;	COMDAT ??0LockClass@FastCriticalSectionClass@@QAE@AAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__criticalSection$ = 8					; size = 4
??0LockClass@FastCriticalSectionClass@@QAE@AAV1@@Z PROC	; FastCriticalSectionClass::LockClass::LockClass, COMDAT
; _this$ = ecx

; 97   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __criticalSection$[ebp]
	mov	DWORD PTR [eax], ecx

; 98   : 			criticalSection.Enter();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Enter@FastCriticalSectionClass@@AAEXXZ	; FastCriticalSectionClass::Enter

; 99   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0LockClass@FastCriticalSectionClass@@QAE@AAV1@@Z ENDP	; FastCriticalSectionClass::LockClass::LockClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\criticalsectionclass.h
;	COMDAT ?Leave@FastCriticalSectionClass@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Leave@FastCriticalSectionClass@@AAEXXZ PROC		; FastCriticalSectionClass::Leave, COMDAT
; _this$ = ecx

; 76   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 77   : 		Flag = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 78   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Leave@FastCriticalSectionClass@@AAEXXZ ENDP		; FastCriticalSectionClass::Leave
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\criticalsectionclass.h
;	COMDAT ?Enter@FastCriticalSectionClass@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Enter@FastCriticalSectionClass@@AAEXXZ PROC		; FastCriticalSectionClass::Enter, COMDAT
; _this$ = ecx

; 65   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
$LN6@Enter:

; 66   : 		TT_ASSERT((size_t)&Flag % 4 == 0); // aligned to 4 bytes please

	xor	eax, eax
	jne	SHORT $LN6@Enter
	mov	eax, DWORD PTR _this$[ebp]
	xor	edx, edx
	mov	ecx, 4
	div	ecx
	test	edx, edx
	je	SHORT $LN3@Enter
	int	3
$LN3@Enter:

; 67   : 		for (;;)
; 68   : 		{
; 69   : 			if (_interlockedbittestandset(&Flag, 0) == 0) return;

	mov	eax, DWORD PTR _this$[ebp]
	lock	 bts	 DWORD PTR [eax], 0
	setb	cl
	movzx	edx, cl
	test	edx, edx
	jne	SHORT $LN1@Enter
	jmp	SHORT $LN8@Enter
$LN1@Enter:

; 70   : 			_mm_pause();

	pause

; 71   : 		};

	jmp	SHORT $LN3@Enter
$LN8@Enter:

; 72   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Enter@FastCriticalSectionClass@@AAEXXZ ENDP		; FastCriticalSectionClass::Enter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4CriticalSectionClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CriticalSectionClass@@QAEAAV0@ABV0@@Z PROC		; CriticalSectionClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4CriticalSectionClass@@QAEAAV0@ABV0@@Z ENDP		; CriticalSectionClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EThreadClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EThreadClass@@UAEPAXI@Z PROC				; ThreadClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1ThreadClass@@UAE@XZ		; ThreadClass::~ThreadClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ThreadClass@@UAE@XZ			; ThreadClass::~ThreadClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EThreadClass@@UAEPAXI@Z ENDP				; ThreadClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GThreadClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GThreadClass@@UAEPAXI@Z PROC				; ThreadClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ThreadClass@@UAE@XZ			; ThreadClass::~ThreadClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GThreadClass@@UAEPAXI@Z ENDP				; ThreadClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4ThreadClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_$S1$1 = -8						; size = 4
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4ThreadClass@@QAEAAV0@ABV0@@Z PROC			; ThreadClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	DWORD PTR _$S1$1[ebp], 0
	jmp	SHORT $LN3@operator
$LN2@operator:
	mov	eax, DWORD PTR _$S1$1[ebp]
	add	eax, 1
	mov	DWORD PTR _$S1$1[ebp], eax
$LN3@operator:
	cmp	DWORD PTR _$S1$1[ebp], 67		; 00000043H
	jae	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S1$1[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S1$1[ebp]
	mov	dl, BYTE PTR [ecx+5]
	mov	BYTE PTR [eax+5], dl
	jmp	SHORT $LN2@operator
$LN1@operator:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	mov	DWORD PTR [eax+72], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR [eax+76], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR [eax+84], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ThreadClass@@QAEAAV0@ABV0@@Z ENDP			; ThreadClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ThreadClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0ThreadClass@@QAE@ABV0@@Z PROC			; ThreadClass::ThreadClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ThreadClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 5
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 5
	mov	ecx, 16					; 00000010H
	rep movsd
	movsw
	movsb
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	mov	DWORD PTR [eax+72], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR [eax+76], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [eax+80], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR [eax+84], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0ThreadClass@@QAE@ABV0@@Z ENDP			; ThreadClass::ThreadClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\threadclass.h
;	COMDAT ?Get_Name@ThreadClass@@QAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Name@ThreadClass@@QAEPBDXZ PROC			; ThreadClass::Get_Name, COMDAT
; _this$ = ecx

; 45   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 46   : 		return name;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 5

; 47   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Name@ThreadClass@@QAEPBDXZ ENDP			; ThreadClass::Get_Name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\threadclass.h
;	COMDAT ?Get_Current_Thread_ID@ThreadClass@@SAHXZ
_TEXT	SEGMENT
?Get_Current_Thread_ID@ThreadClass@@SAHXZ PROC		; ThreadClass::Get_Current_Thread_ID, COMDAT

; 41   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 42   : 		return GetCurrentThreadId();

	call	DWORD PTR __imp__GetCurrentThreadId@0

; 43   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Current_Thread_ID@ThreadClass@@SAHXZ ENDP		; ThreadClass::Get_Current_Thread_ID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\threadclass.h
;	COMDAT ?Is_Running@ThreadClass@@QAE_NXZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
?Is_Running@ThreadClass@@QAE_NXZ PROC			; ThreadClass::Is_Running, COMDAT
; _this$ = ecx

; 37   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 38   : 		return handle != 0;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN3@Is_Running
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@Is_Running
$LN3@Is_Running:
	mov	DWORD PTR tv66[ebp], 0
$LN4@Is_Running:
	mov	al, BYTE PTR tv66[ebp]

; 39   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Is_Running@ThreadClass@@QAE_NXZ ENDP			; ThreadClass::Is_Running
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4ScriptRegistrar@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4ScriptRegistrar@@QAEAAV0@ABV0@@Z PROC		; ScriptRegistrar::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ScriptRegistrar@@QAEAAV0@ABV0@@Z ENDP		; ScriptRegistrar::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EScriptFactory@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EScriptFactory@@UAEPAXI@Z PROC			; ScriptFactory::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EScriptFactory@@UAEPAXI@Z ENDP			; ScriptFactory::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GScriptFactory@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GScriptFactory@@UAEPAXI@Z PROC			; ScriptFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptFactory@@UAE@XZ		; ScriptFactory::~ScriptFactory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GScriptFactory@@UAEPAXI@Z ENDP			; ScriptFactory::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4ScriptFactory@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4ScriptFactory@@QAEAAV0@ABV0@@Z PROC			; ScriptFactory::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ScriptFactory@@QAEAAV0@ABV0@@Z ENDP			; ScriptFactory::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ScriptFactory@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0ScriptFactory@@QAE@ABV0@@Z PROC			; ScriptFactory::ScriptFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ScriptFactory@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0ScriptFactory@@QAE@ABV0@@Z ENDP			; ScriptFactory::ScriptFactory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Set_Face_Location@ActionParamsStruct@@QAEXABVVector3@@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_location$ = 8						; size = 4
_duration$ = 12						; size = 4
?Set_Face_Location@ActionParamsStruct@@QAEXABVVector3@@M@Z PROC ; ActionParamsStruct::Set_Face_Location, COMDAT
; _this$ = ecx

; 331  : 	void Set_Face_Location( const Vector3 &location, float duration )	{ FaceLocation = location; FaceDuration = duration; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _location$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _duration$[ebp]
	movss	DWORD PTR [eax+128], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Set_Face_Location@ActionParamsStruct@@QAEXABVVector3@@M@Z ENDP ; ActionParamsStruct::Set_Face_Location
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Set_Attack@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_object$ = 8						; size = 4
_range$ = 12						; size = 4
_error$ = 16						; size = 4
_primary_fire$ = 20					; size = 1
?Set_Attack@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z PROC ; ActionParamsStruct::Set_Attack, COMDAT
; _this$ = ecx

; 329  : 	void Set_Attack( GameObject * object, float range, float error, bool primary_fire ) { AttackObject = object; AttackRange = range; AttackError = error; AttackPrimaryFire = primary_fire; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _object$[ebp]
	mov	DWORD PTR [eax+88], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _range$[ebp]
	movss	DWORD PTR [eax+76], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _error$[ebp]
	movss	DWORD PTR [eax+80], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _primary_fire$[ebp]
	mov	BYTE PTR [eax+92], cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Set_Attack@ActionParamsStruct@@QAEXPAVScriptableGameObj@@MM_N@Z ENDP ; ActionParamsStruct::Set_Attack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Set_Attack@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_location$ = 8						; size = 4
_range$ = 12						; size = 4
_error$ = 16						; size = 4
_primary_fire$ = 20					; size = 1
?Set_Attack@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z PROC ; ActionParamsStruct::Set_Attack, COMDAT
; _this$ = ecx

; 328  : 	void Set_Attack( const Vector3 & location, float range, float error, bool primary_fire ) { AttackLocation = location; AttackRange = range; AttackError = error; AttackPrimaryFire = primary_fire; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _location$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _range$[ebp]
	movss	DWORD PTR [eax+76], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _error$[ebp]
	movss	DWORD PTR [eax+80], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _primary_fire$[ebp]
	mov	BYTE PTR [eax+92], cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Set_Attack@ActionParamsStruct@@QAEXABVVector3@@MM_N@Z ENDP ; ActionParamsStruct::Set_Attack
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_script$ = 8						; size = 4
_priority$ = 12						; size = 4
_action_id$ = 16					; size = 4
_ai_state$ = 20						; size = 4
?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z PROC ; ActionParamsStruct::Set_Basic, COMDAT
; _this$ = ecx

; 321  : 	void Set_Basic( GameObjObserverClass * script, float priority, int action_id, SoldierAIState ai_state = NO_AI_STATE_CHANGE ) { ObserverID = script->Get_ID(); Priority = (int)priority; ActionID = action_id; AIState = ai_state; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _script$[ebp]
	call	?Get_ID@GameObjObserverClass@@QAEHXZ	; GameObjObserverClass::Get_ID
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
	cvttss2si eax, DWORD PTR _priority$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _action_id$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ai_state$[ebp]
	mov	DWORD PTR [eax+168], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Set_Basic@ActionParamsStruct@@QAEXPAVGameObjObserverClass@@MHW4SoldierAIState@@@Z ENDP ; ActionParamsStruct::Set_Basic
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0ActionParamsStruct@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ActionParamsStruct@@QAE@XZ PROC			; ActionParamsStruct::ActionParamsStruct, COMDAT
; _this$ = ecx

; 432  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+28], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+60], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _DONT_MOVE_ARRIVED_DIST
	movss	DWORD PTR [eax+64], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+68], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+69], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+70], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+71], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+72], 0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@41a00000
	movss	DWORD PTR [eax+76], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+80], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+84], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+92], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+93], 0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+108], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+109], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+110], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+111], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+112], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+113], 0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [eax+128], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+132], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+136], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+140], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+144], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+148], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+156], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+160], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+164], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+168], -1
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 184				; 000000b8H
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3

; 433  : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ActionParamsStruct@@QAE@XZ ENDP			; ActionParamsStruct::ActionParamsStruct
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EScriptImpClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EScriptImpClass@@UAEPAXI@Z PROC			; ScriptImpClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1ScriptImpClass@@UAE@XZ	; ScriptImpClass::~ScriptImpClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	28					; 0000001cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EScriptImpClass@@UAEPAXI@Z ENDP			; ScriptImpClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GScriptImpClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GScriptImpClass@@UAEPAXI@Z PROC			; ScriptImpClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptImpClass@@UAE@XZ		; ScriptImpClass::~ScriptImpClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GScriptImpClass@@UAEPAXI@Z ENDP			; ScriptImpClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4ScriptImpClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4ScriptImpClass@@QAEAAV0@ABV0@@Z PROC			; ScriptImpClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4ScriptClass@@QAEAAV0@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ScriptImpClass@@QAEAAV0@ABV0@@Z ENDP			; ScriptImpClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ScriptImpClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0ScriptImpClass@@QAE@ABV0@@Z PROC			; ScriptImpClass::ScriptImpClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ScriptClass@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ScriptImpClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0ScriptImpClass@@QAE@ABV0@@Z ENDP			; ScriptImpClass::ScriptImpClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Get_Bool_Parameter@ScriptImpClass@@QAE_NH@Z
_TEXT	SEGMENT
tv68 = -72						; size = 4
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?Get_Bool_Parameter@ScriptImpClass@@QAE_NH@Z PROC	; ScriptImpClass::Get_Bool_Parameter, COMDAT
; _this$ = ecx

; 290  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 291  :         return Get_Int_Parameter(index) != 0;

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHH@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	SHORT $LN3@Get_Bool_P
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@Get_Bool_P
$LN3@Get_Bool_P:
	mov	DWORD PTR tv68[ebp], 0
$LN4@Get_Bool_P:
	mov	al, BYTE PTR tv68[ebp]

; 292  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Bool_Parameter@ScriptImpClass@@QAE_NH@Z ENDP	; ScriptImpClass::Get_Bool_Parameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Get_Bool_Parameter@ScriptImpClass@@QAE_NPBD@Z
_TEXT	SEGMENT
tv68 = -72						; size = 4
_this$ = -4						; size = 4
_name$ = 8						; size = 4
?Get_Bool_Parameter@ScriptImpClass@@QAE_NPBD@Z PROC	; ScriptImpClass::Get_Bool_Parameter, COMDAT
; _this$ = ecx

; 286  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 287  :         return Get_Int_Parameter(name) != 0;

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Int_Parameter@ScriptImpClass@@QAEHPBD@Z ; ScriptImpClass::Get_Int_Parameter
	test	eax, eax
	je	SHORT $LN3@Get_Bool_P
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@Get_Bool_P
$LN3@Get_Bool_P:
	mov	DWORD PTR tv68[ebp], 0
$LN4@Get_Bool_P:
	mov	al, BYTE PTR tv68[ebp]

; 288  :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Bool_Parameter@ScriptImpClass@@QAE_NPBD@Z ENDP	; ScriptImpClass::Get_Bool_Parameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Get_Float_Parameter@ScriptImpClass@@QAEMH@Z
_TEXT	SEGMENT
tv74 = -72						; size = 4
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?Get_Float_Parameter@ScriptImpClass@@QAEMH@Z PROC	; ScriptImpClass::Get_Float_Parameter, COMDAT
; _this$ = ecx

; 282  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 283  : 		return (float)atof(Get_Parameter(index));

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDH@Z ; ScriptImpClass::Get_Parameter
	push	eax
	call	DWORD PTR __imp__atof
	add	esp, 4
	fstp	DWORD PTR tv74[ebp]
	fld	DWORD PTR tv74[ebp]

; 284  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Float_Parameter@ScriptImpClass@@QAEMH@Z ENDP	; ScriptImpClass::Get_Float_Parameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Get_Int_Parameter@ScriptImpClass@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?Get_Int_Parameter@ScriptImpClass@@QAEHH@Z PROC		; ScriptImpClass::Get_Int_Parameter, COMDAT
; _this$ = ecx

; 278  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 279  : 		return atoi(Get_Parameter(index));

	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Parameter@ScriptImpClass@@QAEPBDH@Z ; ScriptImpClass::Get_Parameter
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 4

; 280  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get_Int_Parameter@ScriptImpClass@@QAEHH@Z ENDP		; ScriptImpClass::Get_Int_Parameter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Get_Parameter_Count@ScriptImpClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Parameter_Count@ScriptImpClass@@QAEHXZ PROC	; ScriptImpClass::Get_Parameter_Count, COMDAT
; _this$ = ecx

; 274  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 275  : 		return mArgC;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]

; 276  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Parameter_Count@ScriptImpClass@@QAEHXZ ENDP	; ScriptImpClass::Get_Parameter_Count
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ PROC ; ScriptImpClass::Register_Auto_Save_Variables, COMDAT
; _this$ = ecx

; 265  : 	virtual	void Register_Auto_Save_Variables()	{}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Auto_Save_Variables@ScriptImpClass@@UAEXXZ ENDP ; ScriptImpClass::Register_Auto_Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_loader$ = 8						; size = 4
?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z PROC	; ScriptImpClass::Load_Data, COMDAT
; _this$ = ecx

; 264  : 	virtual void Load_Data(ScriptLoader& loader) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Load_Data@ScriptImpClass@@UAEXAAVScriptLoader@@@Z ENDP	; ScriptImpClass::Load_Data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_saver$ = 8						; size = 4
?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z PROC	; ScriptImpClass::Save_Data, COMDAT
; _this$ = ecx

; 263  : 	virtual void Save_Data(ScriptSaver& saver) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Save_Data@ScriptImpClass@@UAEXAAVScriptSaver@@@Z ENDP	; ScriptImpClass::Save_Data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ PROC ; ScriptImpClass::Get_Owner_Ptr, COMDAT
; _this$ = ecx

; 258  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 259  : 		return &mOwner;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8

; 260  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Owner_Ptr@ScriptImpClass@@UAEPAPAVScriptableGameObj@@XZ ENDP ; ScriptImpClass::Get_Owner_Ptr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ PROC	; ScriptImpClass::Owner, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 255  : 		return mOwner;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 256  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Owner@ScriptImpClass@@UAEPAVScriptableGameObj@@XZ ENDP	; ScriptImpClass::Owner
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_exiter$ = 12						; size = 4
?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z PROC ; ScriptImpClass::Exited, COMDAT
; _this$ = ecx

; 251  :   void Exited(GameObject *obj,GameObject *exiter) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Exited@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ENDP ; ScriptImpClass::Exited
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_enterer$ = 12						; size = 4
?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z PROC ; ScriptImpClass::Entered, COMDAT
; _this$ = ecx

; 244  :   void Entered(GameObject *obj,GameObject *enterer) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Entered@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ENDP ; ScriptImpClass::Entered
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_poker$ = 12						; size = 4
?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z PROC ; ScriptImpClass::Poked, COMDAT
; _this$ = ecx

; 237  :   void Poked(GameObject *obj,GameObject *poker) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Poked@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ENDP ; ScriptImpClass::Poked
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_animation_name$ = 12					; size = 4
?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z PROC ; ScriptImpClass::Animation_Complete, COMDAT
; _this$ = ecx

; 229  :   void Animation_Complete(GameObject *obj,const char *animation_name) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Animation_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@PBD@Z ENDP ; ScriptImpClass::Animation_Complete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_number$ = 12						; size = 4
?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z PROC ; ScriptImpClass::Timer_Expired, COMDAT
; _this$ = ecx

; 221  :   void Timer_Expired(GameObject *obj,int number) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Timer_Expired@ScriptImpClass@@UAEXPAVScriptableGameObj@@H@Z ENDP ; ScriptImpClass::Timer_Expired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_action_id$ = 12					; size = 4
_complete_reason$ = 16					; size = 4
?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z PROC ; ScriptImpClass::Action_Complete, COMDAT
; _this$ = ecx

; 212  :   void Action_Complete(GameObject *obj,int action_id,ActionCompleteReason complete_reason) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Action_Complete@ScriptImpClass@@UAEXPAVScriptableGameObj@@HW4ActionCompleteReason@@@Z ENDP ; ScriptImpClass::Action_Complete
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_enemy$ = 12						; size = 4
?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z PROC ; ScriptImpClass::Enemy_Seen, COMDAT
; _this$ = ecx

; 201  :   void Enemy_Seen(GameObject *obj,GameObject *enemy) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Enemy_Seen@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ENDP ; ScriptImpClass::Enemy_Seen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_sound$ = 12						; size = 4
?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z PROC ; ScriptImpClass::Sound_Heard, COMDAT
; _this$ = ecx

; 193  :   void Sound_Heard(GameObject *obj,const CombatSound & sound) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Sound_Heard@ScriptImpClass@@UAEXPAVScriptableGameObj@@ABUCombatSound@@@Z ENDP ; ScriptImpClass::Sound_Heard
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_type$ = 12						; size = 4
_param$ = 16						; size = 4
_sender$ = 20						; size = 4
?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z PROC ; ScriptImpClass::Custom, COMDAT
; _this$ = ecx

; 184  :   void Custom(GameObject *obj,int type,int param,GameObject *sender) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Custom@ScriptImpClass@@UAEXPAVScriptableGameObj@@HH0@Z ENDP ; ScriptImpClass::Custom
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_damager$ = 12						; size = 4
_amount$ = 16						; size = 4
?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z PROC ; ScriptImpClass::Damaged, COMDAT
; _this$ = ecx

; 174  :   void Damaged(GameObject *obj,GameObject *damager,float amount) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Damaged@ScriptImpClass@@UAEXPAVScriptableGameObj@@0M@Z ENDP ; ScriptImpClass::Damaged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
_killer$ = 12						; size = 4
?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z PROC ; ScriptImpClass::Killed, COMDAT
; _this$ = ecx

; 164  :   void Killed(GameObject *obj,GameObject *killer) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Killed@ScriptImpClass@@UAEXPAVScriptableGameObj@@0@Z ENDP ; ScriptImpClass::Killed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z PROC ; ScriptImpClass::Destroyed, COMDAT
; _this$ = ecx

; 155  :   void Destroyed(GameObject *obj) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Destroyed@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z ENDP ; ScriptImpClass::Destroyed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_obj$ = 8						; size = 4
?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z PROC ; ScriptImpClass::Created, COMDAT
; _this$ = ecx

; 149  :   void Created(GameObject *obj) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Created@ScriptImpClass@@UAEXPAVScriptableGameObj@@@Z ENDP ; ScriptImpClass::Created
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_factory$ = 8						; size = 4
?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z PROC ; ScriptImpClass::SetFactory, COMDAT
; _this$ = ecx

; 136  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 137  : 		mFactory = factory;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _factory$[ebp]
	mov	DWORD PTR [eax+20], ecx

; 138  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFactory@ScriptImpClass@@QAEXPAVScriptFactory@@@Z ENDP ; ScriptImpClass::SetFactory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EScriptClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EScriptClass@@UAEPAXI@Z PROC				; ScriptClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1ScriptClass@@UAE@XZ		; ScriptClass::~ScriptClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptClass@@UAE@XZ			; ScriptClass::~ScriptClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EScriptClass@@UAEPAXI@Z ENDP				; ScriptClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GScriptClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GScriptClass@@UAEPAXI@Z PROC				; ScriptClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ScriptClass@@UAE@XZ			; ScriptClass::~ScriptClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GScriptClass@@UAEPAXI@Z ENDP				; ScriptClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4ScriptClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4ScriptClass@@QAEAAV0@ABV0@@Z PROC			; ScriptClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4GameObjObserverClass@@QAEAAV0@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4ScriptClass@@QAEAAV0@ABV0@@Z ENDP			; ScriptClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ScriptClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0ScriptClass@@QAE@ABV0@@Z PROC			; ScriptClass::ScriptClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0GameObjObserverClass@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ScriptClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0ScriptClass@@QAE@ABV0@@Z ENDP			; ScriptClass::ScriptClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0ScriptClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ScriptClass@@QAE@XZ PROC				; ScriptClass::ScriptClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0GameObjObserverClass@@QAE@XZ		; GameObjObserverClass::GameObjObserverClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ScriptClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ScriptClass@@QAE@XZ ENDP				; ScriptClass::ScriptClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??1ScriptClass@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1ScriptClass@@UAE@XZ PROC				; ScriptClass::~ScriptClass, COMDAT
; _this$ = ecx

; 124  : 	virtual ~ScriptClass() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ScriptClass@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GameObjObserverClass@@UAE@XZ		; GameObjObserverClass::~GameObjObserverClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1ScriptClass@@UAE@XZ ENDP				; ScriptClass::~ScriptClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EGameObjObserverClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EGameObjObserverClass@@UAEPAXI@Z PROC		; GameObjObserverClass::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1GameObjObserverClass@@UAE@XZ	; GameObjObserverClass::~GameObjObserverClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	8
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GameObjObserverClass@@UAE@XZ		; GameObjObserverClass::~GameObjObserverClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EGameObjObserverClass@@UAEPAXI@Z ENDP		; GameObjObserverClass::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GGameObjObserverClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GGameObjObserverClass@@UAEPAXI@Z PROC		; GameObjObserverClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GameObjObserverClass@@UAE@XZ		; GameObjObserverClass::~GameObjObserverClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GGameObjObserverClass@@UAEPAXI@Z ENDP		; GameObjObserverClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4GameObjObserverClass@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4GameObjObserverClass@@QAEAAV0@ABV0@@Z PROC		; GameObjObserverClass::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4GameObjObserverClass@@QAEAAV0@ABV0@@Z ENDP		; GameObjObserverClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0GameObjObserverClass@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0GameObjObserverClass@@QAE@ABV0@@Z PROC		; GameObjObserverClass::GameObjObserverClass, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GameObjObserverClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0GameObjObserverClass@@QAE@ABV0@@Z ENDP		; GameObjObserverClass::GameObjObserverClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Owner@GameObjObserverClass@@UAEPAVScriptableGameObj@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Owner@GameObjObserverClass@@UAEPAVScriptableGameObj@@XZ PROC ; GameObjObserverClass::Owner, COMDAT
; _this$ = ecx

; 117  : 	virtual GameObject* Owner() {return 0;}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Owner@GameObjObserverClass@@UAEPAVScriptableGameObj@@XZ ENDP ; GameObjObserverClass::Owner
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Get_ID@GameObjObserverClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_ID@GameObjObserverClass@@QAEHXZ PROC		; GameObjObserverClass::Get_ID, COMDAT
; _this$ = ecx

; 99   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 100  : 		return ID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 101  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_ID@GameObjObserverClass@@QAEHXZ ENDP		; GameObjObserverClass::Get_ID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ?Set_ID@GameObjObserverClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?Set_ID@GameObjObserverClass@@QAEXH@Z PROC		; GameObjObserverClass::Set_ID, COMDAT
; _this$ = ecx

; 95   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 96   : 		ID = id;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 97   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_ID@GameObjObserverClass@@QAEXH@Z ENDP		; GameObjObserverClass::Set_ID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??1GameObjObserverClass@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1GameObjObserverClass@@UAE@XZ PROC			; GameObjObserverClass::~GameObjObserverClass, COMDAT
; _this$ = ecx

; 92   : 	virtual	~GameObjObserverClass() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GameObjObserverClass@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1GameObjObserverClass@@UAE@XZ ENDP			; GameObjObserverClass::~GameObjObserverClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\scripts.h
;	COMDAT ??0GameObjObserverClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0GameObjObserverClass@@QAE@XZ PROC			; GameObjObserverClass::GameObjObserverClass, COMDAT
; _this$ = ecx

; 91   : 	GameObjObserverClass() : ID( 0 ) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GameObjObserverClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0GameObjObserverClass@@QAE@XZ ENDP			; GameObjObserverClass::GameObjObserverClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ?Swap@@YAXAAVVector3@@0@Z
_TEXT	SEGMENT
_tmp$ = -12						; size = 12
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?Swap@@YAXAAVVector3@@0@Z PROC				; Swap, COMDAT

; 398  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi

; 399  : 	Vector3 tmp(a);

	mov	eax, DWORD PTR _a$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmp$[ebp]
	call	??0Vector3@@QAE@ABV0@@Z			; Vector3::Vector3

; 400  : 	a = b;

	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 401  : 	b = tmp;

	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _b$[ebp]
	call	??4Vector3@@QAEAAV0@ABV0@@Z		; Vector3::operator=

; 402  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Swap@@YAXAAVVector3@@0@Z ENDP				; Swap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ?Subtract@Vector3@@SAXABV1@0PAV1@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_set_result$ = 16					; size = 4
?Subtract@Vector3@@SAXABV1@0PAV1@@Z PROC		; Vector3::Subtract, COMDAT

; 218  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 219  : 		set_result->X = a.X - b.X;

	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [eax]
	subss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _set_result$[ebp]
	movss	DWORD PTR [edx], xmm0

; 220  : 		set_result->Y = a.Y - b.Y;

	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	subss	xmm0, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _set_result$[ebp]
	movss	DWORD PTR [edx+4], xmm0

; 221  : 		set_result->Z = a.Z - b.Z;

	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	subss	xmm0, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _set_result$[ebp]
	movss	DWORD PTR [edx+8], xmm0

; 222  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Subtract@Vector3@@SAXABV1@0PAV1@@Z ENDP		; Vector3::Subtract
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ?Add@Vector3@@SAXABV1@0PAV1@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_set_result$ = 16					; size = 4
?Add@Vector3@@SAXABV1@0PAV1@@Z PROC			; Vector3::Add, COMDAT

; 212  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 213  : 		set_result->X = a.X + b.X;

	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _set_result$[ebp]
	movss	DWORD PTR [edx], xmm0

; 214  : 		set_result->Y = a.Y + b.Y;

	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	addss	xmm0, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _set_result$[ebp]
	movss	DWORD PTR [edx+4], xmm0

; 215  : 		set_result->Z = a.Z + b.Z;

	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	addss	xmm0, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _set_result$[ebp]
	movss	DWORD PTR [edx+8], xmm0

; 216  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Add@Vector3@@SAXABV1@0PAV1@@Z ENDP			; Vector3::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??G@YA?AVVector3@@ABV0@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
??G@YA?AVVector3@@ABV0@0@Z PROC				; operator-, COMDAT

; 377  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 378  : 	return Vector3(a.X - b.X,a.Y - b.Y,a.Z - b.Z);

	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	subss	xmm0, DWORD PTR [ecx+8]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	subss	xmm0, DWORD PTR [eax+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	subss	xmm0, DWORD PTR [edx]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 379  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??G@YA?AVVector3@@ABV0@0@Z ENDP				; operator-
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??H@YA?AVVector3@@ABV0@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
??H@YA?AVVector3@@ABV0@0@Z PROC				; operator+, COMDAT

; 373  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 374  : 	return Vector3(a.X + b.X,a.Y + b.Y,a.Z + b.Z);

	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	addss	xmm0, DWORD PTR [ecx+8]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	addss	xmm0, DWORD PTR [eax+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR [edx]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 375  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??H@YA?AVVector3@@ABV0@0@Z ENDP				; operator+
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??D@YA?AVVector3@@MABV0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_k$ = 12						; size = 4
_a$ = 16						; size = 4
??D@YA?AVVector3@@MABV0@@Z PROC				; operator*, COMDAT

; 365  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 366  : 	return Vector3((a.X * k),(a.Y * k),(a.Z * k));

	mov	eax, DWORD PTR _a$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR _k$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _a$[ebp]
	movss	xmm0, DWORD PTR [ecx+4]
	mulss	xmm0, DWORD PTR _k$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _a$[ebp]
	movss	xmm0, DWORD PTR [edx]
	mulss	xmm0, DWORD PTR _k$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 367  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??D@YA?AVVector3@@MABV0@@Z ENDP				; operator*
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??D@YA?AVVector3@@ABV0@M@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_a$ = 12						; size = 4
_k$ = 16						; size = 4
??D@YA?AVVector3@@ABV0@M@Z PROC				; operator*, COMDAT

; 361  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 362  : 	return Vector3((a.X * k),(a.Y * k),(a.Z * k));

	mov	eax, DWORD PTR _a$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR _k$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _a$[ebp]
	movss	xmm0, DWORD PTR [ecx+4]
	mulss	xmm0, DWORD PTR _k$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _a$[ebp]
	movss	xmm0, DWORD PTR [edx]
	mulss	xmm0, DWORD PTR _k$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector3@@QAE@MMM@Z			; Vector3::Vector3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 363  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??D@YA?AVVector3@@ABV0@M@Z ENDP				; operator*
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??_0Vector3@@QAEAAV0@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_k$ = 8							; size = 4
??_0Vector3@@QAEAAV0@M@Z PROC				; Vector3::operator/=, COMDAT
; _this$ = ecx

; 164  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 165  : 		X = X * 1.0f / k;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx], xmm0

; 166  : 		Y = Y * 1.0f / k;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	mulss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+4], xmm0

; 167  : 		Z = Z * 1.0f / k;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+8], xmm0

; 168  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 169  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_0Vector3@@QAEAAV0@M@Z ENDP				; Vector3::operator/=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??XVector3@@QAEAAV0@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_k$ = 8							; size = 4
??XVector3@@QAEAAV0@M@Z PROC				; Vector3::operator*=, COMDAT
; _this$ = ecx

; 157  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 158  : 		X = X * k;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx], xmm0

; 159  : 		Y = Y * k;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	mulss	xmm0, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+4], xmm0

; 160  : 		Z = Z * k;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+8], xmm0

; 161  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 162  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??XVector3@@QAEAAV0@M@Z ENDP				; Vector3::operator*=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??ZVector3@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??ZVector3@@QAEAAV0@ABV0@@Z PROC			; Vector3::operator-=, COMDAT
; _this$ = ecx

; 150  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 151  : 		X -= v.X;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	subss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx], xmm0

; 152  : 		Y -= v.Y;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	subss	xmm0, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+4], xmm0

; 153  : 		Z -= v.Z;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	subss	xmm0, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+8], xmm0

; 154  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 155  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??ZVector3@@QAEAAV0@ABV0@@Z ENDP			; Vector3::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??YVector3@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??YVector3@@QAEAAV0@ABV0@@Z PROC			; Vector3::operator+=, COMDAT
; _this$ = ecx

; 143  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 144  : 		X += v.X;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx], xmm0

; 145  : 		Y += v.Y;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	addss	xmm0, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+4], xmm0

; 146  : 		Z += v.Z;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	addss	xmm0, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+8], xmm0

; 147  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 148  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??YVector3@@QAEAAV0@ABV0@@Z ENDP			; Vector3::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ?Length2@Vector3@@QBEMXZ
_TEXT	SEGMENT
tv85 = -72						; size = 4
_this$ = -4						; size = 4
?Length2@Vector3@@QBEMXZ PROC				; Vector3::Length2, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		return X * X + Y * Y + Z * Z;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+4]
	mulss	xmm1, DWORD PTR [eax+4]
	addss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [ecx+8]
	mulss	xmm1, DWORD PTR [edx+8]
	addss	xmm0, xmm1
	movss	DWORD PTR tv85[ebp], xmm0
	fld	DWORD PTR tv85[ebp]

; 94   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Length2@Vector3@@QBEMXZ ENDP				; Vector3::Length2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ?Length@Vector3@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Length@Vector3@@QBEMXZ PROC				; Vector3::Length, COMDAT
; _this$ = ecx

; 88   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 89   : 		return WWMath::Sqrt(Length2());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Length2@Vector3@@QBEMXZ		; Vector3::Length2
	push	ecx
	fstp	DWORD PTR [esp]
	call	?Sqrt@WWMath@@SAMM@Z			; WWMath::Sqrt
	add	esp, 4

; 90   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Length@Vector3@@QBEMXZ ENDP				; Vector3::Length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ?Normalize@Vector3@@QAEXXZ
_TEXT	SEGMENT
tv81 = -80						; size = 4
_oolen$ = -12						; size = 4
_len2$ = -8						; size = 4
_this$ = -4						; size = 4
?Normalize@Vector3@@QAEXXZ PROC				; Vector3::Normalize, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 75   : 		float len2 = WWMATH_FLOAT_TINY + Length2();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Length2@Vector3@@QBEMXZ		; Vector3::Length2
	fstp	DWORD PTR tv81[ebp]
	movss	xmm0, DWORD PTR tv81[ebp]
	addss	xmm0, DWORD PTR __real@02081cea
	movss	DWORD PTR _len2$[ebp], xmm0

; 76   : 		float oolen = WWMath::Inv_Sqrt(len2);

	push	ecx
	movss	xmm0, DWORD PTR _len2$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Inv_Sqrt@WWMath@@SIMM@Z		; WWMath::Inv_Sqrt
	fstp	DWORD PTR _oolen$[ebp]

; 77   : 		X *= oolen;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _oolen$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx], xmm0

; 78   : 		Y *= oolen;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	mulss	xmm0, DWORD PTR _oolen$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+4], xmm0

; 79   : 		Z *= oolen;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR _oolen$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+8], xmm0

; 80   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Normalize@Vector3@@QAEXXZ ENDP				; Vector3::Normalize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??AVector3@@QBEABMH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AVector3@@QBEABMH@Z PROC				; Vector3::operator[], COMDAT
; _this$ = ecx

; 70   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 71   : 		return (&X)[i];

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 72   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AVector3@@QBEABMH@Z ENDP				; Vector3::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??AVector3@@QAEAAMH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??AVector3@@QAEAAMH@Z PROC				; Vector3::operator[], COMDAT
; _this$ = ecx

; 66   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 67   : 		return (&X)[i];

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 68   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??AVector3@@QAEAAMH@Z ENDP				; Vector3::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ?Set@Vector3@@QAEXMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
?Set@Vector3@@QAEXMMM@Z PROC				; Vector3::Set, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 55   : 		X = x;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [eax], xmm0

; 56   : 		Y = y;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [eax+4], xmm0

; 57   : 		Z = z;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [eax+8], xmm0

; 58   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Set@Vector3@@QAEXMMM@Z ENDP				; Vector3::Set
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??4Vector3@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??4Vector3@@QAEAAV0@ABV0@@Z PROC			; Vector3::operator=, COMDAT
; _this$ = ecx

; 47   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 48   : 		X = v.X;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 49   : 		Y = v.Y;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 50   : 		Z = v.Z;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 51   : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 52   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Vector3@@QAEAAV0@ABV0@@Z ENDP			; Vector3::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??0Vector3@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
??0Vector3@@QAE@MMM@Z PROC				; Vector3::Vector3, COMDAT
; _this$ = ecx

; 33   : 	TT_INLINE Vector3(float x, float y, float z)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 34   : 	{
; 35   : 		X = x;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [eax], xmm0

; 36   : 		Y = y;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [eax+4], xmm0

; 37   : 		Z = z;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [eax+8], xmm0

; 38   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0Vector3@@QAE@MMM@Z ENDP				; Vector3::Vector3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??0Vector3@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??0Vector3@@QAE@ABV0@@Z PROC				; Vector3::Vector3, COMDAT
; _this$ = ecx

; 27   : 	TT_INLINE Vector3(const Vector3 &v)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 28   : 	{
; 29   : 		X = v.X;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 30   : 		Y = v.Y;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 31   : 		Z = v.Z;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 32   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0Vector3@@QAE@ABV0@@Z ENDP				; Vector3::Vector3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\vector3.h
;	COMDAT ??0Vector3@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Vector3@@QAE@XZ PROC					; Vector3::Vector3, COMDAT
; _this$ = ecx

; 23   : 	TT_INLINE Vector3()

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 24   : 	{
; 25   : 		X = Y = Z = 0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+8], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+4], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx], xmm0

; 26   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Vector3@@QAE@XZ ENDP					; Vector3::Vector3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\defines.h
;	COMDAT ??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ PROC		; RefArrayHelper<float,1024>::operator float *, COMDAT
; _this$ = ecx

; 161  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 162  : 		return (T*) this;

	mov	eax, DWORD PTR _this$[ebp]

; 163  : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ ENDP		; RefArrayHelper<float,1024>::operator float *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??4WWMath@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4WWMath@@QAEAAV0@ABV0@@Z PROC				; WWMath::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4WWMath@@QAEAAV0@ABV0@@Z ENDP				; WWMath::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Is_Valid_Double@WWMath@@SA_NN@Z
_TEXT	SEGMENT
_exponent$ = -8						; size = 4
_plong$ = -4						; size = 4
_x$ = 8							; size = 8
?Is_Valid_Double@WWMath@@SA_NN@Z PROC			; WWMath::Is_Valid_Double, COMDAT

; 207  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 208  : 	unsigned long * plong = (unsigned long *)(&x) + 1;

	lea	eax, DWORD PTR _x$[ebp+4]
	mov	DWORD PTR _plong$[ebp], eax

; 209  : 	unsigned long exponent = ((*plong) & 0x7FF00000) >> (32-12);

	mov	eax, DWORD PTR _plong$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 2146435072				; 7ff00000H
	shr	ecx, 20					; 00000014H
	mov	DWORD PTR _exponent$[ebp], ecx

; 210  : 	if (exponent == 0x7FF) {

	cmp	DWORD PTR _exponent$[ebp], 2047		; 000007ffH
	jne	SHORT $LN1@Is_Valid_D

; 211  : 		return false;

	xor	al, al
	jmp	SHORT $LN2@Is_Valid_D
$LN1@Is_Valid_D:

; 212  : 	}
; 213  : 	return true;

	mov	al, 1
$LN2@Is_Valid_D:

; 214  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Is_Valid_Double@WWMath@@SA_NN@Z ENDP			; WWMath::Is_Valid_Double
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Is_Valid_Float@WWMath@@SA_NM@Z
_TEXT	SEGMENT
_exponent$ = -8						; size = 4
_plong$ = -4						; size = 4
_x$ = 8							; size = 4
?Is_Valid_Float@WWMath@@SA_NM@Z PROC			; WWMath::Is_Valid_Float, COMDAT

; 197  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 198  : 	unsigned long * plong = (unsigned long *)(&x);

	lea	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _plong$[ebp], eax

; 199  : 	unsigned long exponent = ((*plong) & 0x7F800000) >> (32-9);

	mov	eax, DWORD PTR _plong$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 2139095040				; 7f800000H
	shr	ecx, 23					; 00000017H
	mov	DWORD PTR _exponent$[ebp], ecx

; 200  : 	if (exponent == 0xFF) {

	cmp	DWORD PTR _exponent$[ebp], 255		; 000000ffH
	jne	SHORT $LN1@Is_Valid_F

; 201  : 		return false;

	xor	al, al
	jmp	SHORT $LN2@Is_Valid_F
$LN1@Is_Valid_F:

; 202  : 	}
; 203  : 	return true;

	mov	al, 1
$LN2@Is_Valid_F:

; 204  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Is_Valid_Float@WWMath@@SA_NM@Z ENDP			; WWMath::Is_Valid_Float
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Byte_To_Unit_Float@WWMath@@SAME@Z
_TEXT	SEGMENT
tv69 = -68						; size = 4
_byte$ = 8						; size = 1
?Byte_To_Unit_Float@WWMath@@SAME@Z PROC			; WWMath::Byte_To_Unit_Float, COMDAT

; 97   : 	static float Byte_To_Unit_Float(unsigned char byte) { return ((float)byte) / 255.0f; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	movzx	eax, BYTE PTR _byte$[ebp]
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR tv69[ebp], xmm0
	fld	DWORD PTR tv69[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Byte_To_Unit_Float@WWMath@@SAME@Z ENDP			; WWMath::Byte_To_Unit_Float
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Unit_Float_To_Byte@WWMath@@SAEM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?Unit_Float_To_Byte@WWMath@@SAEM@Z PROC			; WWMath::Unit_Float_To_Byte, COMDAT

; 96   : 	static unsigned char Unit_Float_To_Byte(float f) { return (unsigned char)(f*255.0f); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	movss	xmm0, DWORD PTR _f$[ebp]
	mulss	xmm0, DWORD PTR __real@437f0000
	cvttss2si eax, xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Unit_Float_To_Byte@WWMath@@SAEM@Z ENDP			; WWMath::Unit_Float_To_Byte
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Float_To_Long@WWMath@@SAJN@Z
_TEXT	SEGMENT
$T1 = -80						; size = 16
_f$ = 8							; size = 8
?Float_To_Long@WWMath@@SAJN@Z PROC			; WWMath::Float_To_Long, COMDAT

; 222  : {

	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	push	edi

; 223  :     return _mm_cvttsd_si32(_mm_load_pd(&f));

	movupd	xmm0, XMMWORD PTR _f$[ebx]
	movapd	XMMWORD PTR $T1[ebp], xmm0
	movapd	xmm0, XMMWORD PTR $T1[ebp]
	cvttsd2si eax, xmm0

; 224  : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?Float_To_Long@WWMath@@SAJN@Z ENDP			; WWMath::Float_To_Long
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Lerp@WWMath@@SAHHHM@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_lerp$ = 16						; size = 4
?Lerp@WWMath@@SAHHHM@Z PROC				; WWMath::Lerp, COMDAT

; 192  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 193  : 	return (a + (int)((b - a)*lerp));

	mov	eax, DWORD PTR _b$[ebp]
	sub	eax, DWORD PTR _a$[ebp]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR _lerp$[ebp]
	cvttss2si eax, xmm0
	add	eax, DWORD PTR _a$[ebp]

; 194  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Lerp@WWMath@@SAHHHM@Z ENDP				; WWMath::Lerp
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Lerp@WWMath@@SANNNM@Z
_TEXT	SEGMENT
tv73 = -72						; size = 8
_a$ = 8							; size = 8
_b$ = 16						; size = 8
_lerp$ = 24						; size = 4
?Lerp@WWMath@@SANNNM@Z PROC				; WWMath::Lerp, COMDAT

; 187  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 188  : 	return (a + (b - a)*lerp);

	movsd	xmm0, QWORD PTR _b$[ebp]
	subsd	xmm0, QWORD PTR _a$[ebp]
	cvtss2sd xmm1, DWORD PTR _lerp$[ebp]
	mulsd	xmm0, xmm1
	addsd	xmm0, QWORD PTR _a$[ebp]
	movsd	QWORD PTR tv73[ebp], xmm0
	fld	QWORD PTR tv73[ebp]

; 189  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Lerp@WWMath@@SANNNM@Z ENDP				; WWMath::Lerp
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Lerp@WWMath@@SAMMMM@Z
_TEXT	SEGMENT
tv72 = -68						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_lerp$ = 16						; size = 4
?Lerp@WWMath@@SAMMMM@Z PROC				; WWMath::Lerp, COMDAT

; 182  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 183  : 	return (a + (b - a)*lerp);

	movss	xmm0, DWORD PTR _b$[ebp]
	subss	xmm0, DWORD PTR _a$[ebp]
	mulss	xmm0, DWORD PTR _lerp$[ebp]
	addss	xmm0, DWORD PTR _a$[ebp]
	movss	DWORD PTR tv72[ebp], xmm0
	fld	DWORD PTR tv72[ebp]

; 184  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Lerp@WWMath@@SAMMMM@Z ENDP				; WWMath::Lerp
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Max@WWMath@@SAMMM@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?Max@WWMath@@SAMMM@Z PROC				; WWMath::Max, COMDAT

; 176  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 177  : 	if (a>b) return a;

	movss	xmm0, DWORD PTR _a$[ebp]
	comiss	xmm0, DWORD PTR _b$[ebp]
	jbe	SHORT $LN1@Max
	fld	DWORD PTR _a$[ebp]
	jmp	SHORT $LN2@Max
$LN1@Max:

; 178  : 	return b;

	fld	DWORD PTR _b$[ebp]
$LN2@Max:

; 179  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Max@WWMath@@SAMMM@Z ENDP				; WWMath::Max
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Min@WWMath@@SAMMM@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?Min@WWMath@@SAMMM@Z PROC				; WWMath::Min, COMDAT

; 170  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 171  : 	if (a<b) return a;

	movss	xmm0, DWORD PTR _b$[ebp]
	comiss	xmm0, DWORD PTR _a$[ebp]
	jbe	SHORT $LN1@Min
	fld	DWORD PTR _a$[ebp]
	jmp	SHORT $LN2@Min
$LN1@Min:

; 172  : 	return b;

	fld	DWORD PTR _b$[ebp]
$LN2@Min:

; 173  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Min@WWMath@@SAMMM@Z ENDP				; WWMath::Min
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Wrap@WWMath@@SANNNN@Z
_TEXT	SEGMENT
_val$ = 8						; size = 8
_min$ = 16						; size = 8
_max$ = 24						; size = 8
?Wrap@WWMath@@SANNNN@Z PROC				; WWMath::Wrap, COMDAT

; 157  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 158  : 	if ( val >= max )	val -= (max-min);

	movsd	xmm0, QWORD PTR _val$[ebp]
	comisd	xmm0, QWORD PTR _max$[ebp]
	jb	SHORT $LN4@Wrap
	movsd	xmm0, QWORD PTR _max$[ebp]
	subsd	xmm0, QWORD PTR _min$[ebp]
	movsd	xmm1, QWORD PTR _val$[ebp]
	subsd	xmm1, xmm0
	movsd	QWORD PTR _val$[ebp], xmm1
$LN4@Wrap:

; 159  : 	if ( val < min )	val += (max-min);

	movsd	xmm0, QWORD PTR _min$[ebp]
	comisd	xmm0, QWORD PTR _val$[ebp]
	jbe	SHORT $LN3@Wrap
	movsd	xmm0, QWORD PTR _max$[ebp]
	subsd	xmm0, QWORD PTR _min$[ebp]
	addsd	xmm0, QWORD PTR _val$[ebp]
	movsd	QWORD PTR _val$[ebp], xmm0
$LN3@Wrap:

; 160  : 	if ( val < min ) {

	movsd	xmm0, QWORD PTR _min$[ebp]
	comisd	xmm0, QWORD PTR _val$[ebp]
	jbe	SHORT $LN2@Wrap

; 161  : 		val = min;

	movsd	xmm0, QWORD PTR _min$[ebp]
	movsd	QWORD PTR _val$[ebp], xmm0
$LN2@Wrap:

; 162  : 	}
; 163  : 	if ( val > max ) {

	movsd	xmm0, QWORD PTR _val$[ebp]
	comisd	xmm0, QWORD PTR _max$[ebp]
	jbe	SHORT $LN1@Wrap

; 164  : 		val = max;

	movsd	xmm0, QWORD PTR _max$[ebp]
	movsd	QWORD PTR _val$[ebp], xmm0
$LN1@Wrap:

; 165  : 	}
; 166  : 	return val;

	fld	QWORD PTR _val$[ebp]

; 167  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Wrap@WWMath@@SANNNN@Z ENDP				; WWMath::Wrap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Wrap@WWMath@@SAMMMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
_min$ = 12						; size = 4
_max$ = 16						; size = 4
?Wrap@WWMath@@SAMMMM@Z PROC				; WWMath::Wrap, COMDAT

; 144  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 145  : 	if ( val >= max )	val -= (max-min);

	movss	xmm0, DWORD PTR _val$[ebp]
	comiss	xmm0, DWORD PTR _max$[ebp]
	jb	SHORT $LN4@Wrap
	movss	xmm0, DWORD PTR _max$[ebp]
	subss	xmm0, DWORD PTR _min$[ebp]
	movss	xmm1, DWORD PTR _val$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _val$[ebp], xmm1
$LN4@Wrap:

; 146  : 	if ( val < min )	val += (max-min);

	movss	xmm0, DWORD PTR _min$[ebp]
	comiss	xmm0, DWORD PTR _val$[ebp]
	jbe	SHORT $LN3@Wrap
	movss	xmm0, DWORD PTR _max$[ebp]
	subss	xmm0, DWORD PTR _min$[ebp]
	addss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR _val$[ebp], xmm0
$LN3@Wrap:

; 147  : 	if ( val < min ) {

	movss	xmm0, DWORD PTR _min$[ebp]
	comiss	xmm0, DWORD PTR _val$[ebp]
	jbe	SHORT $LN2@Wrap

; 148  : 		val = min;

	movss	xmm0, DWORD PTR _min$[ebp]
	movss	DWORD PTR _val$[ebp], xmm0
$LN2@Wrap:

; 149  : 	}
; 150  : 	if ( val > max ) {

	movss	xmm0, DWORD PTR _val$[ebp]
	comiss	xmm0, DWORD PTR _max$[ebp]
	jbe	SHORT $LN1@Wrap

; 151  : 		val = max;

	movss	xmm0, DWORD PTR _max$[ebp]
	movss	DWORD PTR _val$[ebp], xmm0
$LN1@Wrap:

; 152  : 	}
; 153  : 	return val;

	fld	DWORD PTR _val$[ebp]

; 154  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Wrap@WWMath@@SAMMMM@Z ENDP				; WWMath::Wrap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Clamp_Int@WWMath@@SAHHHH@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
_min_val$ = 12						; size = 4
_max_val$ = 16						; size = 4
?Clamp_Int@WWMath@@SAHHHH@Z PROC			; WWMath::Clamp_Int, COMDAT

; 137  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 138  : 	if(val < min_val) return min_val;

	mov	eax, DWORD PTR _val$[ebp]
	cmp	eax, DWORD PTR _min_val$[ebp]
	jge	SHORT $LN2@Clamp_Int
	mov	eax, DWORD PTR _min_val$[ebp]
	jmp	SHORT $LN3@Clamp_Int
$LN2@Clamp_Int:

; 139  : 	if(val > max_val) return max_val;

	mov	eax, DWORD PTR _val$[ebp]
	cmp	eax, DWORD PTR _max_val$[ebp]
	jle	SHORT $LN1@Clamp_Int
	mov	eax, DWORD PTR _max_val$[ebp]
	jmp	SHORT $LN3@Clamp_Int
$LN1@Clamp_Int:

; 140  : 	return val;

	mov	eax, DWORD PTR _val$[ebp]
$LN3@Clamp_Int:

; 141  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Clamp_Int@WWMath@@SAHHHH@Z ENDP			; WWMath::Clamp_Int
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Clamp@WWMath@@SANNNN@Z
_TEXT	SEGMENT
_val$ = 8						; size = 8
_min$ = 16						; size = 8
_max$ = 24						; size = 8
?Clamp@WWMath@@SANNNN@Z PROC				; WWMath::Clamp, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 131  : 	if(val < min) return min;

	movsd	xmm0, QWORD PTR _min$[ebp]
	comisd	xmm0, QWORD PTR _val$[ebp]
	jbe	SHORT $LN2@Clamp
	fld	QWORD PTR _min$[ebp]
	jmp	SHORT $LN3@Clamp
$LN2@Clamp:

; 132  : 	if(val > max) return max;

	movsd	xmm0, QWORD PTR _val$[ebp]
	comisd	xmm0, QWORD PTR _max$[ebp]
	jbe	SHORT $LN1@Clamp
	fld	QWORD PTR _max$[ebp]
	jmp	SHORT $LN3@Clamp
$LN1@Clamp:

; 133  : 	return val;

	fld	QWORD PTR _val$[ebp]
$LN3@Clamp:

; 134  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Clamp@WWMath@@SANNNN@Z ENDP				; WWMath::Clamp
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Clamp@WWMath@@SAMMMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
_min$ = 12						; size = 4
_max$ = 16						; size = 4
?Clamp@WWMath@@SAMMMM@Z PROC				; WWMath::Clamp, COMDAT

; 123  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 124  : 	if(val < min) return min;

	movss	xmm0, DWORD PTR _min$[ebp]
	comiss	xmm0, DWORD PTR _val$[ebp]
	jbe	SHORT $LN2@Clamp
	fld	DWORD PTR _min$[ebp]
	jmp	SHORT $LN3@Clamp
$LN2@Clamp:

; 125  : 	if(val > max) return max;

	movss	xmm0, DWORD PTR _val$[ebp]
	comiss	xmm0, DWORD PTR _max$[ebp]
	jbe	SHORT $LN1@Clamp
	fld	DWORD PTR _max$[ebp]
	jmp	SHORT $LN3@Clamp
$LN1@Clamp:

; 126  : 	return val;

	fld	DWORD PTR _val$[ebp]
$LN3@Clamp:

; 127  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Clamp@WWMath@@SAMMMM@Z ENDP				; WWMath::Clamp
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Random_Float@WWMath@@SAMMM@Z
_TEXT	SEGMENT
tv76 = -72						; size = 4
tv73 = -68						; size = 4
_min$ = 8						; size = 4
_max$ = 12						; size = 4
?Random_Float@WWMath@@SAMMM@Z PROC			; WWMath::Random_Float, COMDAT

; 118  : { 

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 119  : 	return Random_Float() * (max-min) + min; 

	call	?Random_Float@WWMath@@SAMXZ		; WWMath::Random_Float
	fstp	DWORD PTR tv73[ebp]
	movss	xmm0, DWORD PTR tv73[ebp]
	movss	xmm1, DWORD PTR _max$[ebp]
	subss	xmm1, DWORD PTR _min$[ebp]
	mulss	xmm0, xmm1
	addss	xmm0, DWORD PTR _min$[ebp]
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]

; 120  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Random_Float@WWMath@@SAMMM@Z ENDP			; WWMath::Random_Float
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Fast_Is_Float_Positive@WWMath@@SA_NABM@Z
_TEXT	SEGMENT
tv66 = -68						; size = 4
_val$ = 8						; size = 4
?Fast_Is_Float_Positive@WWMath@@SA_NABM@Z PROC		; WWMath::Fast_Is_Float_Positive, COMDAT

; 113  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 114  : 	return !((*(int *)(&val)) & 0x80000000);

	mov	eax, DWORD PTR _val$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, -2147483648			; 80000000H
	jne	SHORT $LN3@Fast_Is_Fl
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@Fast_Is_Fl
$LN3@Fast_Is_Fl:
	mov	DWORD PTR tv66[ebp], 0
$LN4@Fast_Is_Fl:
	mov	al, BYTE PTR tv66[ebp]

; 115  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Fast_Is_Float_Positive@WWMath@@SA_NABM@Z ENDP		; WWMath::Fast_Is_Float_Positive
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Floor@WWMath@@SAMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
?Floor@WWMath@@SAMM@Z PROC				; WWMath::Floor, COMDAT

; 81   : 	static float Floor(float val) { return floorf(val); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_floorf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Floor@WWMath@@SAMM@Z ENDP				; WWMath::Floor
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Ceil@WWMath@@SAMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
?Ceil@WWMath@@SAMM@Z PROC				; WWMath::Ceil, COMDAT

; 80   : 	static float Ceil(float val) { return ceilf(val); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_ceilf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Ceil@WWMath@@SAMM@Z ENDP				; WWMath::Ceil
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Sign@WWMath@@SAMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
?Sign@WWMath@@SAMM@Z PROC				; WWMath::Sign, COMDAT

; 102  : { 

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 103  : 	if (val > 0.0f) { 

	movss	xmm0, DWORD PTR _val$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN2@Sign

; 104  : 		return +1.0f; 

	fld1
	jmp	SHORT $LN3@Sign
$LN2@Sign:

; 105  : 	} 
; 106  : 	if (val < 0.0f) { 

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _val$[ebp]
	jbe	SHORT $LN1@Sign

; 107  : 		return -1.0f; 

	fld	DWORD PTR __real@bf800000
	jmp	SHORT $LN3@Sign
$LN1@Sign:

; 108  : 	} 
; 109  : 	return 0.0f; 

	fldz
$LN3@Sign:

; 110  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Sign@WWMath@@SAMM@Z ENDP				; WWMath::Sign
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Atan2@WWMath@@SAMMM@Z
_TEXT	SEGMENT
_y$ = 8							; size = 4
_x$ = 12						; size = 4
?Atan2@WWMath@@SAMMM@Z PROC				; WWMath::Atan2, COMDAT

; 78   : 	static float Atan2(float y,float x) { return static_cast<float>(atan2(y,x)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?atan2@@YAMMM@Z				; atan2
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Atan2@WWMath@@SAMMM@Z ENDP				; WWMath::Atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Atan@WWMath@@SAMM@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
?Atan@WWMath@@SAMM@Z PROC				; WWMath::Atan, COMDAT

; 77   : 	static float Atan(float x) { return static_cast<float>(atan(x)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?atan@@YAMM@Z				; atan
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Atan@WWMath@@SAMM@Z ENDP				; WWMath::Atan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Asin@WWMath@@SAMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
?Asin@WWMath@@SAMM@Z PROC				; WWMath::Asin, COMDAT

; 306  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 307  : 	return (float)asin(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?asin@@YAMM@Z				; asin
	add	esp, 4

; 308  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Asin@WWMath@@SAMM@Z ENDP				; WWMath::Asin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Acos@WWMath@@SAMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
?Acos@WWMath@@SAMM@Z PROC				; WWMath::Acos, COMDAT

; 286  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 287  : 	return (float)acos(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?acos@@YAMM@Z				; acos
	add	esp, 4

; 288  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Acos@WWMath@@SAMM@Z ENDP				; WWMath::Acos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Fast_Asin@WWMath@@SAMM@Z
_TEXT	SEGMENT
tv156 = -88						; size = 4
tv161 = -84						; size = 4
tv159 = -80						; size = 4
tv134 = -80						; size = 4
_frac$ = -12						; size = 4
_idx1$ = -8						; size = 4
_idx0$ = -4						; size = 4
_val$ = 8						; size = 4
?Fast_Asin@WWMath@@SAMM@Z PROC				; WWMath::Fast_Asin, COMDAT

; 291  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 292  : 	if (WWMath::Fabs(val) > 0.975f) {

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Fabs@WWMath@@SAMM@Z			; WWMath::Fabs
	add	esp, 4
	fstp	DWORD PTR tv134[ebp]
	movss	xmm0, DWORD PTR tv134[ebp]
	comiss	xmm0, DWORD PTR __real@3f79999a
	jbe	SHORT $LN11@Fast_Asin

; 293  : 		return WWMath::Asin(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Asin@WWMath@@SAMM@Z			; WWMath::Asin
	add	esp, 4
	jmp	$LN12@Fast_Asin
$LN11@Fast_Asin:

; 294  : 	}
; 295  : 	val*=float(ARC_TABLE_SIZE/2);

	movss	xmm0, DWORD PTR _val$[ebp]
	mulss	xmm0, DWORD PTR __real@44000000
	movss	DWORD PTR _val$[ebp], xmm0

; 296  : 	int idx0=Float_To_Int_Floor(val); 

	lea	eax, DWORD PTR _val$[ebp]
	push	eax
	call	?Float_To_Int_Floor@WWMath@@SAHABM@Z	; WWMath::Float_To_Int_Floor
	add	esp, 4
	mov	DWORD PTR _idx0$[ebp], eax

; 297  : 	int idx1=idx0+1;

	mov	eax, DWORD PTR _idx0$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx1$[ebp], eax

; 298  : 	float frac=val-(float)idx0;

	cvtsi2ss xmm0, DWORD PTR _idx0$[ebp]
	movss	xmm1, DWORD PTR _val$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _frac$[ebp], xmm1

; 299  : 	idx0+=ARC_TABLE_SIZE/2;

	mov	eax, DWORD PTR _idx0$[ebp]
	add	eax, 512				; 00000200H
	mov	DWORD PTR _idx0$[ebp], eax

; 300  : 	idx1+=ARC_TABLE_SIZE/2;

	mov	eax, DWORD PTR _idx1$[ebp]
	add	eax, 512				; 00000200H
	mov	DWORD PTR _idx1$[ebp], eax
$LN10@Fast_Asin:

; 301  : 	TT_ASSERT((idx0 >= 0) && (idx0 < ARC_TABLE_SIZE));

	xor	eax, eax
	jne	SHORT $LN10@Fast_Asin
	cmp	DWORD PTR _idx0$[ebp], 0
	jl	SHORT $LN6@Fast_Asin
	cmp	DWORD PTR _idx0$[ebp], 1024		; 00000400H
	jl	SHORT $LN7@Fast_Asin
$LN6@Fast_Asin:
	int	3
$LN7@Fast_Asin:

; 302  : 	TT_ASSERT((idx1 >= 0) && (idx1 < ARC_TABLE_SIZE));

	xor	eax, eax
	jne	SHORT $LN7@Fast_Asin
	cmp	DWORD PTR _idx1$[ebp], 0
	jl	SHORT $LN1@Fast_Asin
	cmp	DWORD PTR _idx1$[ebp], 1024		; 00000400H
	jl	SHORT $LN2@Fast_Asin
$LN1@Fast_Asin:
	int	3
$LN2@Fast_Asin:

; 303  : 	return (1.0f - frac) * _FastAsinTable[idx0] + frac * _FastAsinTable[idx1];

	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR _frac$[ebp]
	mov	ecx, DWORD PTR ?_FastAsinTable@@3AAV?$RefArrayHelper@M$0EAA@@@A ; _FastAsinTable
	movss	DWORD PTR tv159[ebp], xmm0
	call	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ	; RefArrayHelper<float,1024>::operator float *
	mov	ecx, DWORD PTR _idx0$[ebp]
	movss	xmm0, DWORD PTR tv159[ebp]
	mulss	xmm0, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR ?_FastAsinTable@@3AAV?$RefArrayHelper@M$0EAA@@@A ; _FastAsinTable
	movss	DWORD PTR tv161[ebp], xmm0
	call	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ	; RefArrayHelper<float,1024>::operator float *
	mov	edx, DWORD PTR _idx1$[ebp]
	movss	xmm0, DWORD PTR _frac$[ebp]
	mulss	xmm0, DWORD PTR [eax+edx*4]
	movss	xmm1, DWORD PTR tv161[ebp]
	addss	xmm1, xmm0
	movss	DWORD PTR tv156[ebp], xmm1
	fld	DWORD PTR tv156[ebp]
$LN12@Fast_Asin:

; 304  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Fast_Asin@WWMath@@SAMM@Z ENDP				; WWMath::Fast_Asin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Fast_Acos@WWMath@@SAMM@Z
_TEXT	SEGMENT
tv156 = -88						; size = 4
tv161 = -84						; size = 4
tv159 = -80						; size = 4
tv134 = -80						; size = 4
_frac$ = -12						; size = 4
_idx1$ = -8						; size = 4
_idx0$ = -4						; size = 4
_val$ = 8						; size = 4
?Fast_Acos@WWMath@@SAMM@Z PROC				; WWMath::Fast_Acos, COMDAT

; 270  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 271  : 	if (WWMath::Fabs(val) > 0.975f) {

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Fabs@WWMath@@SAMM@Z			; WWMath::Fabs
	add	esp, 4
	fstp	DWORD PTR tv134[ebp]
	movss	xmm0, DWORD PTR tv134[ebp]
	comiss	xmm0, DWORD PTR __real@3f79999a
	jbe	SHORT $LN11@Fast_Acos

; 272  : 		return WWMath::Acos(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Acos@WWMath@@SAMM@Z			; WWMath::Acos
	add	esp, 4
	jmp	$LN12@Fast_Acos
$LN11@Fast_Acos:

; 273  : 	}
; 274  : 	val*=float(ARC_TABLE_SIZE/2);

	movss	xmm0, DWORD PTR _val$[ebp]
	mulss	xmm0, DWORD PTR __real@44000000
	movss	DWORD PTR _val$[ebp], xmm0

; 275  : 	int idx0=Float_To_Int_Floor(val);

	lea	eax, DWORD PTR _val$[ebp]
	push	eax
	call	?Float_To_Int_Floor@WWMath@@SAHABM@Z	; WWMath::Float_To_Int_Floor
	add	esp, 4
	mov	DWORD PTR _idx0$[ebp], eax

; 276  : 	int idx1=idx0+1;

	mov	eax, DWORD PTR _idx0$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx1$[ebp], eax

; 277  : 	float frac=val-(float)idx0;

	cvtsi2ss xmm0, DWORD PTR _idx0$[ebp]
	movss	xmm1, DWORD PTR _val$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _frac$[ebp], xmm1

; 278  : 	idx0+=ARC_TABLE_SIZE/2;

	mov	eax, DWORD PTR _idx0$[ebp]
	add	eax, 512				; 00000200H
	mov	DWORD PTR _idx0$[ebp], eax

; 279  : 	idx1+=ARC_TABLE_SIZE/2;

	mov	eax, DWORD PTR _idx1$[ebp]
	add	eax, 512				; 00000200H
	mov	DWORD PTR _idx1$[ebp], eax
$LN10@Fast_Acos:

; 280  : 	TT_ASSERT((idx0 >= 0) && (idx0 < ARC_TABLE_SIZE));

	xor	eax, eax
	jne	SHORT $LN10@Fast_Acos
	cmp	DWORD PTR _idx0$[ebp], 0
	jl	SHORT $LN6@Fast_Acos
	cmp	DWORD PTR _idx0$[ebp], 1024		; 00000400H
	jl	SHORT $LN7@Fast_Acos
$LN6@Fast_Acos:
	int	3
$LN7@Fast_Acos:

; 281  : 	TT_ASSERT((idx1 >= 0) && (idx1 < ARC_TABLE_SIZE));

	xor	eax, eax
	jne	SHORT $LN7@Fast_Acos
	cmp	DWORD PTR _idx1$[ebp], 0
	jl	SHORT $LN1@Fast_Acos
	cmp	DWORD PTR _idx1$[ebp], 1024		; 00000400H
	jl	SHORT $LN2@Fast_Acos
$LN1@Fast_Acos:
	int	3
$LN2@Fast_Acos:

; 282  : 	return (1.0f - frac) * _FastAcosTable[idx0] + frac * _FastAcosTable[idx1];

	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR _frac$[ebp]
	mov	ecx, DWORD PTR ?_FastAcosTable@@3AAV?$RefArrayHelper@M$0EAA@@@A ; _FastAcosTable
	movss	DWORD PTR tv159[ebp], xmm0
	call	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ	; RefArrayHelper<float,1024>::operator float *
	mov	ecx, DWORD PTR _idx0$[ebp]
	movss	xmm0, DWORD PTR tv159[ebp]
	mulss	xmm0, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR ?_FastAcosTable@@3AAV?$RefArrayHelper@M$0EAA@@@A ; _FastAcosTable
	movss	DWORD PTR tv161[ebp], xmm0
	call	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ	; RefArrayHelper<float,1024>::operator float *
	mov	edx, DWORD PTR _idx1$[ebp]
	movss	xmm0, DWORD PTR _frac$[ebp]
	mulss	xmm0, DWORD PTR [eax+edx*4]
	movss	xmm1, DWORD PTR tv161[ebp]
	addss	xmm1, xmm0
	movss	DWORD PTR tv156[ebp], xmm1
	fld	DWORD PTR tv156[ebp]
$LN12@Fast_Acos:

; 283  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Fast_Acos@WWMath@@SAMM@Z ENDP				; WWMath::Fast_Acos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Fast_Inv_Cos@WWMath@@SAMM@Z
_TEXT	SEGMENT
tv76 = -72						; size = 4
tv73 = -68						; size = 4
_val$ = 8						; size = 4
?Fast_Inv_Cos@WWMath@@SAMM@Z PROC			; WWMath::Fast_Inv_Cos, COMDAT

; 265  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 266  : 	return 1.0f / WWMath::Fast_Cos(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Fast_Cos@WWMath@@SAMM@Z		; WWMath::Fast_Cos
	add	esp, 4
	fstp	DWORD PTR tv73[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR tv73[ebp]
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]

; 267  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Fast_Inv_Cos@WWMath@@SAMM@Z ENDP			; WWMath::Fast_Inv_Cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Fast_Cos@WWMath@@SAMM@Z
_TEXT	SEGMENT
tv135 = -88						; size = 4
tv140 = -84						; size = 4
tv138 = -80						; size = 4
_frac$ = -12						; size = 4
_idx1$ = -8						; size = 4
_idx0$ = -4						; size = 4
_val$ = 8						; size = 4
?Fast_Cos@WWMath@@SAMM@Z PROC				; WWMath::Fast_Cos, COMDAT

; 253  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 254  : 	val+=(WWMATH_PI * 0.5f);

	movss	xmm0, DWORD PTR _val$[ebp]
	addss	xmm0, DWORD PTR __real@3fc90fdb
	movss	DWORD PTR _val$[ebp], xmm0

; 255  : 	val*=float(SIN_TABLE_SIZE) / (2.0f * WWMATH_PI);

	movss	xmm0, DWORD PTR __real@44800000
	divss	xmm0, DWORD PTR __real@40c90fdb
	mulss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR _val$[ebp], xmm0

; 256  : 	int idx0=Float_To_Int_Floor(val);

	lea	eax, DWORD PTR _val$[ebp]
	push	eax
	call	?Float_To_Int_Floor@WWMath@@SAHABM@Z	; WWMath::Float_To_Int_Floor
	add	esp, 4
	mov	DWORD PTR _idx0$[ebp], eax

; 257  : 	int idx1=idx0+1;

	mov	eax, DWORD PTR _idx0$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx1$[ebp], eax

; 258  : 	float frac=val-(float)idx0;

	cvtsi2ss xmm0, DWORD PTR _idx0$[ebp]
	movss	xmm1, DWORD PTR _val$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _frac$[ebp], xmm1

; 259  : 	idx0 = ((unsigned)idx0) & (SIN_TABLE_SIZE-1);

	mov	eax, DWORD PTR _idx0$[ebp]
	and	eax, 1023				; 000003ffH
	mov	DWORD PTR _idx0$[ebp], eax

; 260  : 	idx1 = ((unsigned)idx1) & (SIN_TABLE_SIZE-1);

	mov	eax, DWORD PTR _idx1$[ebp]
	and	eax, 1023				; 000003ffH
	mov	DWORD PTR _idx1$[ebp], eax

; 261  : 	return (1.0f - frac) * _FastSinTable[idx0] + frac * _FastSinTable[idx1];

	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR _frac$[ebp]
	mov	ecx, DWORD PTR ?_FastSinTable@@3AAV?$RefArrayHelper@M$0EAA@@@A ; _FastSinTable
	movss	DWORD PTR tv138[ebp], xmm0
	call	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ	; RefArrayHelper<float,1024>::operator float *
	mov	ecx, DWORD PTR _idx0$[ebp]
	movss	xmm0, DWORD PTR tv138[ebp]
	mulss	xmm0, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR ?_FastSinTable@@3AAV?$RefArrayHelper@M$0EAA@@@A ; _FastSinTable
	movss	DWORD PTR tv140[ebp], xmm0
	call	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ	; RefArrayHelper<float,1024>::operator float *
	mov	edx, DWORD PTR _idx1$[ebp]
	movss	xmm0, DWORD PTR _frac$[ebp]
	mulss	xmm0, DWORD PTR [eax+edx*4]
	movss	xmm1, DWORD PTR tv140[ebp]
	addss	xmm1, xmm0
	movss	DWORD PTR tv135[ebp], xmm1
	fld	DWORD PTR tv135[ebp]

; 262  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Fast_Cos@WWMath@@SAMM@Z ENDP				; WWMath::Fast_Cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Fast_Inv_Sin@WWMath@@SAMM@Z
_TEXT	SEGMENT
tv76 = -72						; size = 4
tv73 = -68						; size = 4
_val$ = 8						; size = 4
?Fast_Inv_Sin@WWMath@@SAMM@Z PROC			; WWMath::Fast_Inv_Sin, COMDAT

; 248  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 249  : 	return 1.0f / WWMath::Fast_Sin(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Fast_Sin@WWMath@@SAMM@Z		; WWMath::Fast_Sin
	add	esp, 4
	fstp	DWORD PTR tv73[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR tv73[ebp]
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]

; 250  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Fast_Inv_Sin@WWMath@@SAMM@Z ENDP			; WWMath::Fast_Inv_Sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Fast_Sin@WWMath@@SAMM@Z
_TEXT	SEGMENT
tv133 = -88						; size = 4
tv138 = -84						; size = 4
tv136 = -80						; size = 4
_frac$ = -12						; size = 4
_idx1$ = -8						; size = 4
_idx0$ = -4						; size = 4
_val$ = 8						; size = 4
?Fast_Sin@WWMath@@SAMM@Z PROC				; WWMath::Fast_Sin, COMDAT

; 237  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 238  : 	val*=float(SIN_TABLE_SIZE) / (2.0f * WWMATH_PI);

	movss	xmm0, DWORD PTR __real@44800000
	divss	xmm0, DWORD PTR __real@40c90fdb
	mulss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR _val$[ebp], xmm0

; 239  : 	int idx0=Float_To_Int_Floor(val);

	lea	eax, DWORD PTR _val$[ebp]
	push	eax
	call	?Float_To_Int_Floor@WWMath@@SAHABM@Z	; WWMath::Float_To_Int_Floor
	add	esp, 4
	mov	DWORD PTR _idx0$[ebp], eax

; 240  : 	int idx1=idx0+1;

	mov	eax, DWORD PTR _idx0$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx1$[ebp], eax

; 241  : 	float frac=val-(float)idx0;

	cvtsi2ss xmm0, DWORD PTR _idx0$[ebp]
	movss	xmm1, DWORD PTR _val$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _frac$[ebp], xmm1

; 242  : 	idx0 = ((unsigned)idx0) & (SIN_TABLE_SIZE-1);

	mov	eax, DWORD PTR _idx0$[ebp]
	and	eax, 1023				; 000003ffH
	mov	DWORD PTR _idx0$[ebp], eax

; 243  : 	idx1 = ((unsigned)idx1) & (SIN_TABLE_SIZE-1);

	mov	eax, DWORD PTR _idx1$[ebp]
	and	eax, 1023				; 000003ffH
	mov	DWORD PTR _idx1$[ebp], eax

; 244  : 	return (1.0f - frac) * _FastSinTable[idx0] + frac * _FastSinTable[idx1];

	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR _frac$[ebp]
	mov	ecx, DWORD PTR ?_FastSinTable@@3AAV?$RefArrayHelper@M$0EAA@@@A ; _FastSinTable
	movss	DWORD PTR tv136[ebp], xmm0
	call	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ	; RefArrayHelper<float,1024>::operator float *
	mov	ecx, DWORD PTR _idx0$[ebp]
	movss	xmm0, DWORD PTR tv136[ebp]
	mulss	xmm0, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR ?_FastSinTable@@3AAV?$RefArrayHelper@M$0EAA@@@A ; _FastSinTable
	movss	DWORD PTR tv138[ebp], xmm0
	call	??B?$RefArrayHelper@M$0EAA@@@QAEPAMXZ	; RefArrayHelper<float,1024>::operator float *
	mov	edx, DWORD PTR _idx1$[ebp]
	movss	xmm0, DWORD PTR _frac$[ebp]
	mulss	xmm0, DWORD PTR [eax+edx*4]
	movss	xmm1, DWORD PTR tv138[ebp]
	addss	xmm1, xmm0
	movss	DWORD PTR tv133[ebp], xmm1
	fld	DWORD PTR tv133[ebp]

; 245  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Fast_Sin@WWMath@@SAMM@Z ENDP				; WWMath::Fast_Sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Float_To_Long@WWMath@@SAJM@Z
_TEXT	SEGMENT
$T1 = -80						; size = 16
_f$ = 8							; size = 4
?Float_To_Long@WWMath@@SAJM@Z PROC			; WWMath::Float_To_Long, COMDAT

; 217  : {

	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	push	edi

; 218  :     return _mm_cvtt_ss2si(_mm_load_ss(&f));

	movss	xmm0, DWORD PTR _f$[ebx]
	movaps	XMMWORD PTR $T1[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T1[ebp]
	cvttss2si eax, xmm0

; 219  : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?Float_To_Long@WWMath@@SAJM@Z ENDP			; WWMath::Float_To_Long
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Inv_Sqrt@WWMath@@SIMM@Z
_TEXT	SEGMENT
tv76 = -72						; size = 4
tv73 = -68						; size = 4
_number$ = 8						; size = 4
?Inv_Sqrt@WWMath@@SIMM@Z PROC				; WWMath::Inv_Sqrt, COMDAT

; 341  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 342  : 	return 1.f / sqrt(number);

	push	ecx
	movss	xmm0, DWORD PTR _number$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?sqrt@@YAMM@Z				; sqrt
	add	esp, 4
	fstp	DWORD PTR tv73[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR tv73[ebp]
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]

; 343  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Inv_Sqrt@WWMath@@SIMM@Z ENDP				; WWMath::Inv_Sqrt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Sqrt@WWMath@@SAMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
?Sqrt@WWMath@@SAMM@Z PROC				; WWMath::Sqrt, COMDAT

; 311  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 312  :     return ::sqrtf(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sqrtf
	add	esp, 4

; 313  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Sqrt@WWMath@@SAMM@Z ENDP				; WWMath::Sqrt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Sin@WWMath@@SAMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
?Sin@WWMath@@SAMM@Z PROC				; WWMath::Sin, COMDAT

; 232  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 233  :     return ::sin(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4

; 234  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Sin@WWMath@@SAMM@Z ENDP				; WWMath::Sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Cos@WWMath@@SAMM@Z
_TEXT	SEGMENT
_val$ = 8						; size = 4
?Cos@WWMath@@SAMM@Z PROC				; WWMath::Cos, COMDAT

; 227  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 228  :     return ::cos(val);

	push	ecx
	movss	xmm0, DWORD PTR _val$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4

; 229  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Cos@WWMath@@SAMM@Z ENDP				; WWMath::Cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Float_To_Int_Floor@WWMath@@SAHABM@Z
_TEXT	SEGMENT
tv83 = -96						; size = 4
_r$ = -28						; size = 4
_mantissa$ = -24					; size = 4
_imask$ = -20						; size = 4
_expsign$ = -16						; size = 4
_exponent$ = -12					; size = 4
_sign$ = -8						; size = 4
_a$ = -4						; size = 4
_f$ = 8							; size = 4
?Float_To_Int_Floor@WWMath@@SAHABM@Z PROC		; WWMath::Float_To_Int_Floor, COMDAT

; 326  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi

; 327  : 	int a = *reinterpret_cast<const int*>(&f);

	mov	eax, DWORD PTR _f$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _a$[ebp], ecx

; 328  : 	int sign = (a>>31);

	mov	eax, DWORD PTR _a$[ebp]
	sar	eax, 31					; 0000001fH
	mov	DWORD PTR _sign$[ebp], eax

; 329  : 	a&=0x7fffffff;

	mov	eax, DWORD PTR _a$[ebp]
	and	eax, 2147483647				; 7fffffffH
	mov	DWORD PTR _a$[ebp], eax

; 330  : 	int exponent = (a>>23)-127;

	mov	eax, DWORD PTR _a$[ebp]
	sar	eax, 23					; 00000017H
	sub	eax, 127				; 0000007fH
	mov	DWORD PTR _exponent$[ebp], eax

; 331  : 	int expsign	= ~(exponent>>31);

	mov	eax, DWORD PTR _exponent$[ebp]
	sar	eax, 31					; 0000001fH
	not	eax
	mov	DWORD PTR _expsign$[ebp], eax

; 332  : 	int imask = ( (1<<(31-(exponent))))-1;

	mov	ecx, 31					; 0000001fH
	sub	ecx, DWORD PTR _exponent$[ebp]
	mov	eax, 1
	shl	eax, cl
	sub	eax, 1
	mov	DWORD PTR _imask$[ebp], eax

; 333  : 	int mantissa = (a&((1<<23)-1));

	mov	eax, DWORD PTR _a$[ebp]
	and	eax, 8388607				; 007fffffH
	mov	DWORD PTR _mantissa$[ebp], eax

; 334  : 	int r = ((unsigned int)(mantissa|(1<<23))<<8)>>(31-exponent);

	mov	eax, DWORD PTR _mantissa$[ebp]
	or	eax, 8388608				; 00800000H
	shl	eax, 8
	mov	ecx, 31					; 0000001fH
	sub	ecx, DWORD PTR _exponent$[ebp]
	shr	eax, cl
	mov	DWORD PTR _r$[ebp], eax

; 335  : #pragma warning(suppress: 6290) //warning C6290: Bitwise operation on logical result: ! has higher precedence than &. Use && or (!(x & y)) instead
; 336  : 	r = ((r & expsign) ^ (sign)) + ((!((mantissa<<8)&imask)&(expsign^((a-1)>>31)))&sign);

	mov	eax, DWORD PTR _mantissa$[ebp]
	shl	eax, 8
	and	eax, DWORD PTR _imask$[ebp]
	jne	SHORT $LN3@Float_To_I
	mov	DWORD PTR tv83[ebp], 1
	jmp	SHORT $LN4@Float_To_I
$LN3@Float_To_I:
	mov	DWORD PTR tv83[ebp], 0
$LN4@Float_To_I:
	mov	ecx, DWORD PTR _r$[ebp]
	and	ecx, DWORD PTR _expsign$[ebp]
	xor	ecx, DWORD PTR _sign$[ebp]
	mov	edx, DWORD PTR _a$[ebp]
	sub	edx, 1
	sar	edx, 31					; 0000001fH
	xor	edx, DWORD PTR _expsign$[ebp]
	and	edx, DWORD PTR tv83[ebp]
	and	edx, DWORD PTR _sign$[ebp]
	add	ecx, edx
	mov	DWORD PTR _r$[ebp], ecx

; 337  : 	return r;

	mov	eax, DWORD PTR _r$[ebp]

; 338  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Float_To_Int_Floor@WWMath@@SAHABM@Z ENDP		; WWMath::Float_To_Int_Floor
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Float_To_Int_Chop@WWMath@@SAHABM@Z
_TEXT	SEGMENT
_r$ = -20						; size = 4
_exponent$ = -16					; size = 4
_mantissa$ = -12					; size = 4
_sign$ = -8						; size = 4
_a$ = -4						; size = 4
_f$ = 8							; size = 4
?Float_To_Int_Chop@WWMath@@SAHABM@Z PROC		; WWMath::Float_To_Int_Chop, COMDAT

; 316  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi

; 317  :     int a = *reinterpret_cast<const int*>(&f);

	mov	eax, DWORD PTR _f$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _a$[ebp], ecx

; 318  :     int sign = (a>>31);

	mov	eax, DWORD PTR _a$[ebp]
	sar	eax, 31					; 0000001fH
	mov	DWORD PTR _sign$[ebp], eax

; 319  :     int mantissa = (a&((1<<23)-1))|(1<<23);

	mov	eax, DWORD PTR _a$[ebp]
	and	eax, 8388607				; 007fffffH
	or	eax, 8388608				; 00800000H
	mov	DWORD PTR _mantissa$[ebp], eax

; 320  :     int exponent = ((a&0x7fffffff)>>23)-127;

	mov	eax, DWORD PTR _a$[ebp]
	and	eax, 2147483647				; 7fffffffH
	sar	eax, 23					; 00000017H
	sub	eax, 127				; 0000007fH
	mov	DWORD PTR _exponent$[ebp], eax

; 321  :     int r = ((unsigned int)(mantissa)<<8)>>(31-exponent);

	mov	eax, DWORD PTR _mantissa$[ebp]
	shl	eax, 8
	mov	ecx, 31					; 0000001fH
	sub	ecx, DWORD PTR _exponent$[ebp]
	shr	eax, cl
	mov	DWORD PTR _r$[ebp], eax

; 322  :     return ((r ^ (sign)) - sign ) &~ (exponent>>31);

	mov	eax, DWORD PTR _r$[ebp]
	xor	eax, DWORD PTR _sign$[ebp]
	sub	eax, DWORD PTR _sign$[ebp]
	mov	ecx, DWORD PTR _exponent$[ebp]
	sar	ecx, 31					; 0000001fH
	not	ecx
	and	eax, ecx

; 323  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Float_To_Int_Chop@WWMath@@SAHABM@Z ENDP		; WWMath::Float_To_Int_Chop
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\wwmath.h
;	COMDAT ?Fabs@WWMath@@SAMM@Z
_TEXT	SEGMENT
_value$ = -4						; size = 4
_val$ = 8						; size = 4
?Fabs@WWMath@@SAMM@Z PROC				; WWMath::Fabs, COMDAT

; 57   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 58   : 		int value=*(int*)&val;

	mov	eax, DWORD PTR _val$[ebp]
	mov	DWORD PTR _value$[ebp], eax

; 59   : 		value&=0x7fffffff;

	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 2147483647				; 7fffffffH
	mov	DWORD PTR _value$[ebp], eax

; 60   : 		return *(float*)&value;

	fld	DWORD PTR _value$[ebp]

; 61   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Fabs@WWMath@@SAMM@Z ENDP				; WWMath::Fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?sqrt@@YAMM@Z PROC					; sqrt, COMDAT

; 541  :         {return (sqrtf(_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sqrtf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?sqrt@@YAMM@Z ENDP					; sqrt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?sin@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?sin@@YAMM@Z PROC					; sin, COMDAT

; 537  :         {return (sinf(_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?sin@@YAMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?cos@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?cos@@YAMM@Z PROC					; cos, COMDAT

; 511  :         {return (cosf(_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?cos@@YAMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?atan2@@YAMMM@Z
_TEXT	SEGMENT
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
?atan2@@YAMMM@Z PROC					; atan2, COMDAT

; 507  :         {return (atan2f(_Y, _X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __Y$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_atan2f
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?atan2@@YAMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?atan@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?atan@@YAMM@Z PROC					; atan, COMDAT

; 505  :         {return (atanf(_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_atanf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?atan@@YAMM@Z ENDP					; atan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?asin@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?asin@@YAMM@Z PROC					; asin, COMDAT

; 503  :         {return (asinf(_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_asinf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?asin@@YAMM@Z ENDP					; asin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?acos@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?acos@@YAMM@Z PROC					; acos, COMDAT

; 501  :         {return (acosf(_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_acosf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?acos@@YAMM@Z ENDP					; acos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT

; 434  :         {return ((float)sqrt((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	call	__libm_sse2_sqrt_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv71[ebp], xmm0
	fld	DWORD PTR tv71[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_sqrtf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 430  :         {return ((float)sin((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	call	__libm_sse2_sin_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv71[ebp], xmm0
	fld	DWORD PTR tv71[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _floorf
_TEXT	SEGMENT
tv80 = -84						; size = 4
tv78 = -80						; size = 8
tv72 = -72						; size = 8
__X$ = 8						; size = 4
_floorf	PROC						; COMDAT

; 416  :         {return ((float)floor((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	movsd	QWORD PTR tv72[ebp], xmm0
	fld	QWORD PTR tv72[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_floor
	add	esp, 8
	fstp	QWORD PTR tv78[ebp]
	movsd	xmm0, QWORD PTR tv78[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv80[ebp], xmm0
	fld	DWORD PTR tv80[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_floorf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 410  :         {return ((float)cos((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	call	__libm_sse2_cos_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv71[ebp], xmm0
	fld	DWORD PTR tv71[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _ceilf
_TEXT	SEGMENT
tv76 = -76						; size = 4
tv74 = -72						; size = 8
__X$ = 8						; size = 4
_ceilf	PROC						; COMDAT

; 408  :         {return ((float)ceil((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR __imp__ceil
	add	esp, 8
	fstp	QWORD PTR tv74[ebp]
	movsd	xmm0, QWORD PTR tv74[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ceilf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv85 = -92						; size = 4
tv83 = -88						; size = 8
tv77 = -80						; size = 8
tv75 = -72						; size = 8
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 406  :         {return ((float)atan2((double)_Y, (double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __Y$[ebp]
	movsd	QWORD PTR tv75[ebp], xmm0
	fld	QWORD PTR tv75[ebp]
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	movsd	QWORD PTR tv77[ebp], xmm0
	fld	QWORD PTR tv77[ebp]
	call	__CIatan2
	fstp	QWORD PTR tv83[ebp]
	movsd	xmm0, QWORD PTR tv83[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv85[ebp], xmm0
	fld	DWORD PTR tv85[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_atan2f	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _atanf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_atanf	PROC						; COMDAT

; 404  :         {return ((float)atan((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	call	__libm_sse2_atan_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv71[ebp], xmm0
	fld	DWORD PTR tv71[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_atanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _asinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_asinf	PROC						; COMDAT

; 402  :         {return ((float)asin((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	call	__libm_sse2_asin_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv71[ebp], xmm0
	fld	DWORD PTR tv71[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_asinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _acosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_acosf	PROC						; COMDAT

; 400  :         {return ((float)acos((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	call	__libm_sse2_acos_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv71[ebp], xmm0
	fld	DWORD PTR tv71[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_acosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_I@YGXPAXIHP6EX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_I@YGXPAXIHP6EX0@Z@Z PROC				; `vector destructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___s$[ebp]
	imul	eax, DWORD PTR ___n$[ebp]
	add	eax, DWORD PTR ___t$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	eax, DWORD PTR ___t$[ebp]
	sub	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_I@YGXPAXIHP6EX0@Z@Z ENDP				; `vector destructor iterator'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
