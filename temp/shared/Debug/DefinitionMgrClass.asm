; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.61219.0 

	TITLE	X:\GitHub\Renegade\Dragonade_RxD\scripts\DefinitionMgrClass.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?DefinitionHash@DefinitionMgrClass@@0PAV?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@A ; DefinitionMgrClass::DefinitionHash
PUBLIC	?_MaxDefinitionCount@DefinitionMgrClass@@0HA	; DefinitionMgrClass::_MaxDefinitionCount
PUBLIC	?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
PUBLIC	?_DefinitionCount@DefinitionMgrClass@@0HA	; DefinitionMgrClass::_DefinitionCount
_BSS	SEGMENT
?DefinitionHash@DefinitionMgrClass@@0PAV?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@A DD 01H DUP (?) ; DefinitionMgrClass::DefinitionHash
?_MaxDefinitionCount@DefinitionMgrClass@@0HA DD 01H DUP (?) ; DefinitionMgrClass::_MaxDefinitionCount
?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A DD 01H DUP (?) ; DefinitionMgrClass::_SortedDefinitionArray
?_DefinitionCount@DefinitionMgrClass@@0HA DD 01H DUP (?) ; DefinitionMgrClass::_DefinitionCount
_BSS	ENDS
CONST	SEGMENT
_DONT_MOVE_ARRIVED_DIST DD 0447a0000r		; 1000
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??_I@YGXPAXIHP6EX0@Z@Z				; `vector destructor iterator'
PUBLIC	??_U@YAPAXIPAX@Z				; operator new[]
PUBLIC	?On_Post_Load@PostLoadableClass@@UAEXXZ		; PostLoadableClass::On_Post_Load
PUBLIC	??0StringClass@@QAE@H_N@Z			; StringClass::StringClass
PUBLIC	??0StringClass@@QAE@PBD_N@Z			; StringClass::StringClass
PUBLIC	??1StringClass@@QAE@XZ				; StringClass::~StringClass
PUBLIC	??8StringClass@@QBE_NPBD@Z			; StringClass::operator==
PUBLIC	??4StringClass@@QAEABV0@PBD@Z			; StringClass::operator=
PUBLIC	??4StringClass@@QAEABV0@ABV0@@Z			; StringClass::operator=
PUBLIC	??BStringClass@@QBEPBDXZ			; StringClass::operator char const *
PUBLIC	?Compare@StringClass@@QBEHPBD@Z			; StringClass::Compare
PUBLIC	?Get_Length@StringClass@@QBEHXZ			; StringClass::Get_Length
PUBLIC	?Peek_Buffer@StringClass@@QAEPADXZ		; StringClass::Peek_Buffer
PUBLIC	?GetHash@StringClass@@QBEIXZ			; StringClass::GetHash
PUBLIC	?Store_Length@StringClass@@AAEXH@Z		; StringClass::Store_Length
PUBLIC	?Get_Header@StringClass@@ABEPAU_HEADER@1@XZ	; StringClass::Get_Header
PUBLIC	?isPowerOfTwo@@YA_NH@Z				; isPowerOfTwo
PUBLIC	?Get_New_ID@DefinitionMgrClass@@SAKI@Z		; DefinitionMgrClass::Get_New_ID
PUBLIC	?Find_Definition@DefinitionMgrClass@@SAPAVDefinitionClass@@I_N@Z ; DefinitionMgrClass::Find_Definition
PUBLIC	?Find_Named_Definition@DefinitionMgrClass@@SAPAVDefinitionClass@@PBD_N@Z ; DefinitionMgrClass::Find_Named_Definition
PUBLIC	?Find_Typed_Definition@DefinitionMgrClass@@SAPAVDefinitionClass@@PBDI_N@Z ; DefinitionMgrClass::Find_Typed_Definition
PUBLIC	?Register_Definition@DefinitionMgrClass@@SAXPAVDefinitionClass@@@Z ; DefinitionMgrClass::Register_Definition
PUBLIC	?Unregister_Definition@DefinitionMgrClass@@SAXPAVDefinitionClass@@@Z ; DefinitionMgrClass::Unregister_Definition
PUBLIC	?Get_First@DefinitionMgrClass@@SAPAVDefinitionClass@@IW4ID_TYPE@1@@Z ; DefinitionMgrClass::Get_First
PUBLIC	?Get_Next@DefinitionMgrClass@@SAPAVDefinitionClass@@PAV2@IW4ID_TYPE@1@@Z ; DefinitionMgrClass::Get_Next
PUBLIC	?Get_Next@DefinitionMgrClass@@SAPAVDefinitionClass@@PAV2@@Z ; DefinitionMgrClass::Get_Next
PUBLIC	?Free_Definitions@DefinitionMgrClass@@SAXXZ	; DefinitionMgrClass::Free_Definitions
PUBLIC	?Prepare_Definition_Array@DefinitionMgrClass@@SAXXZ ; DefinitionMgrClass::Prepare_Definition_Array
PUBLIC	?fnCompareDefinitionsCallback@DefinitionMgrClass@@SAHPBX0@Z ; DefinitionMgrClass::fnCompareDefinitionsCallback
PUBLIC	??0DefinitionMgrClass@@QAE@XZ			; DefinitionMgrClass::DefinitionMgrClass
PUBLIC	?Save_Objects@DefinitionMgrClass@@QAE_NAAVChunkSaveClass@@@Z ; DefinitionMgrClass::Save_Objects
PUBLIC	?Load_Objects@DefinitionMgrClass@@QAE_NAAVChunkLoadClass@@@Z ; DefinitionMgrClass::Load_Objects
PUBLIC	?Save_Variables@DefinitionMgrClass@@QAE_NAAVChunkSaveClass@@@Z ; DefinitionMgrClass::Save_Variables
PUBLIC	?Load_Variables@DefinitionMgrClass@@QAE_NAAVChunkLoadClass@@@Z ; DefinitionMgrClass::Load_Variables
PUBLIC	??1DefinitionMgrClass@@UAE@XZ			; DefinitionMgrClass::~DefinitionMgrClass
PUBLIC	?Chunk_ID@DefinitionMgrClass@@UBEIXZ		; DefinitionMgrClass::Chunk_ID
PUBLIC	?Contains_Data@DefinitionMgrClass@@UBE_NXZ	; DefinitionMgrClass::Contains_Data
PUBLIC	?Save@DefinitionMgrClass@@UAE_NAAVChunkSaveClass@@@Z ; DefinitionMgrClass::Save
PUBLIC	?Load@DefinitionMgrClass@@UAE_NAAVChunkLoadClass@@@Z ; DefinitionMgrClass::Load
PUBLIC	?Name@DefinitionMgrClass@@UBEPBDXZ		; DefinitionMgrClass::Name
PUBLIC	??_GDefinitionMgrClass@@UAEPAXI@Z		; DefinitionMgrClass::`scalar deleting destructor'
PUBLIC	?Get_Super_Class_ID@@YAII@Z			; Get_Super_Class_ID
PUBLIC	?Get_Definition_Type@@YAKK@Z			; Get_Definition_Type
PUBLIC	?computeHash@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@CAIABVStringClass@@I@Z ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::computeHash
PUBLIC	?computeHash@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@ABEIABVStringClass@@@Z ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::computeHash
PUBLIC	?Re_Hash@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@AAEXXZ ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Re_Hash
PUBLIC	??0?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>
PUBLIC	??1?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::~HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>
PUBLIC	?Get@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QBEPAPAV?$DynamicVectorClass@PAVDefinitionClass@@@@ABVStringClass@@@Z ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Get
PUBLIC	?Get@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QBEPAV?$DynamicVectorClass@PAVDefinitionClass@@@@ABVStringClass@@PAV2@@Z ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Get
PUBLIC	?Insert@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXABVStringClass@@ABQAV?$DynamicVectorClass@PAVDefinitionClass@@@@@Z ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Insert
PUBLIC	?Remove_All@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXXZ ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Remove_All
PUBLIC	??_G?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEPAXI@Z ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::`scalar deleting destructor'
PUBLIC	??0?$VectorClass@PAVDefinitionClass@@@@QAE@HPBQAVDefinitionClass@@@Z ; VectorClass<DefinitionClass *>::VectorClass<DefinitionClass *>
PUBLIC	??1?$VectorClass@PAVDefinitionClass@@@@UAE@XZ	; VectorClass<DefinitionClass *>::~VectorClass<DefinitionClass *>
PUBLIC	??A?$VectorClass@PAVDefinitionClass@@@@QAEAAPAVDefinitionClass@@H@Z ; VectorClass<DefinitionClass *>::operator[]
PUBLIC	??A?$VectorClass@PAVDefinitionClass@@@@QBEABQAVDefinitionClass@@H@Z ; VectorClass<DefinitionClass *>::operator[]
PUBLIC	??8?$VectorClass@PAVDefinitionClass@@@@UBE_NABV0@@Z ; VectorClass<DefinitionClass *>::operator==
PUBLIC	?Resize@?$VectorClass@PAVDefinitionClass@@@@UAE_NHPBQAVDefinitionClass@@@Z ; VectorClass<DefinitionClass *>::Resize
PUBLIC	?Clear@?$VectorClass@PAVDefinitionClass@@@@UAEXXZ ; VectorClass<DefinitionClass *>::Clear
PUBLIC	?Length@?$VectorClass@PAVDefinitionClass@@@@QBEHXZ ; VectorClass<DefinitionClass *>::Length
PUBLIC	?ID@?$VectorClass@PAVDefinitionClass@@@@UAEHPBQAVDefinitionClass@@@Z ; VectorClass<DefinitionClass *>::ID
PUBLIC	?ID@?$VectorClass@PAVDefinitionClass@@@@UAEHABQAVDefinitionClass@@@Z ; VectorClass<DefinitionClass *>::ID
PUBLIC	??_G?$VectorClass@PAVDefinitionClass@@@@UAEPAXI@Z ; VectorClass<DefinitionClass *>::`scalar deleting destructor'
PUBLIC	??0?$DynamicVectorClass@PAVDefinitionClass@@@@QAE@IPBQAVDefinitionClass@@@Z ; DynamicVectorClass<DefinitionClass *>::DynamicVectorClass<DefinitionClass *>
PUBLIC	?Resize@?$DynamicVectorClass@PAVDefinitionClass@@@@UAE_NHPBQAVDefinitionClass@@@Z ; DynamicVectorClass<DefinitionClass *>::Resize
PUBLIC	?Clear@?$DynamicVectorClass@PAVDefinitionClass@@@@UAEXXZ ; DynamicVectorClass<DefinitionClass *>::Clear
PUBLIC	?Count@?$DynamicVectorClass@PAVDefinitionClass@@@@QBEHXZ ; DynamicVectorClass<DefinitionClass *>::Count
PUBLIC	?Add@?$DynamicVectorClass@PAVDefinitionClass@@@@QAE_NABQAVDefinitionClass@@@Z ; DynamicVectorClass<DefinitionClass *>::Add
PUBLIC	?ID@?$DynamicVectorClass@PAVDefinitionClass@@@@UAEHPBQAVDefinitionClass@@@Z ; DynamicVectorClass<DefinitionClass *>::ID
PUBLIC	?ID@?$DynamicVectorClass@PAVDefinitionClass@@@@UAEHABQAVDefinitionClass@@@Z ; DynamicVectorClass<DefinitionClass *>::ID
PUBLIC	??1?$DynamicVectorClass@PAVDefinitionClass@@@@UAE@XZ ; DynamicVectorClass<DefinitionClass *>::~DynamicVectorClass<DefinitionClass *>
PUBLIC	??_G?$DynamicVectorClass@PAVDefinitionClass@@@@UAEPAXI@Z ; DynamicVectorClass<DefinitionClass *>::`scalar deleting destructor'
PUBLIC	?increment@?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@AAEXXZ ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::increment
PUBLIC	??0?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@AAV?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@@Z ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>
PUBLIC	?reset@?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXXZ ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::reset
PUBLIC	?getValue@?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEAAPAV?$DynamicVectorClass@PAVDefinitionClass@@@@XZ ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::getValue
PUBLIC	??E?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXXZ ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::operator++
PUBLIC	??B?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QBE_NXZ ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::operator bool
PUBLIC	??0Entry@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Entry::Entry
PUBLIC	??1Entry@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Entry::~Entry
PUBLIC	??_EEntry@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEPAXI@Z ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Entry::`vector deleting destructor'
PUBLIC	??$move@AAPAVDefinitionClass@@@std@@YA$$QAPAVDefinitionClass@@AAPAV1@@Z ; std::move<DefinitionClass * &>
PUBLIC	?Get_Hash_Value@?$HashTemplateKeyClass@VStringClass@@@@SAIABVStringClass@@@Z ; HashTemplateKeyClass<StringClass>::Get_Hash_Value
PUBLIC	??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@ ; `string'
PUBLIC	??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ ; `string'
PUBLIC	??_7DefinitionMgrClass@@6B@			; DefinitionMgrClass::`vftable'
PUBLIC	??_C@_0BD@HGAKCENP@DefinitionMgrClass?$AA@	; `string'
PUBLIC	?_TheDefinitionMgr@@3VDefinitionMgrClass@@A	; _TheDefinitionMgr
PUBLIC	??_7?$VectorClass@PAVDefinitionClass@@@@6B@	; VectorClass<DefinitionClass *>::`vftable'
PUBLIC	??_7?$DynamicVectorClass@PAVDefinitionClass@@@@6B@ ; DynamicVectorClass<DefinitionClass *>::`vftable'
PUBLIC	?__LINE__Var@?1??Find_Typed_Definition@DefinitionMgrClass@@SAPAVDefinitionClass@@PBDI_N@Z@4JA@b2101402 ; `DefinitionMgrClass::Find_Typed_Definition'::`2'::__LINE__Var
PUBLIC	??_C@_0CK@PGPNHOMN@DefinitionMgrClass?3?3Find_Typed_D@ ; `string'
PUBLIC	??_C@_0EA@OOLMHBDI@x?3?2github?2renegade?2dragonade_rxd@ ; `string'
PUBLIC	??_C@_1IA@CONNEFNJ@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ ; `string'
PUBLIC	?__LINE__Var@?1??Free_Definitions@DefinitionMgrClass@@SAXXZ@4JA@b2101402 ; `DefinitionMgrClass::Free_Definitions'::`2'::__LINE__Var
PUBLIC	??_C@_0CF@FJKBDLNG@DefinitionMgrClass?3?3Free_Definit@ ; `string'
PUBLIC	?__LINE__Var@?1??Prepare_Definition_Array@DefinitionMgrClass@@SAXXZ@4JA@b2101402 ; `DefinitionMgrClass::Prepare_Definition_Array'::`2'::__LINE__Var
PUBLIC	??_C@_0CN@JIIKJGD@DefinitionMgrClass?3?3Prepare_Defi@ ; `string'
PUBLIC	??_C@_0GN@HPGKLBMI@HashTemplateClass?$DMclass?5StringCl@ ; `string'
PUBLIC	??_C@_0DN@EECEFMJH@x?3?2github?2renegade?2dragonade_rxd@ ; `string'
PUBLIC	??_C@_1HK@JEBHJDL@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ ; `string'
PUBLIC	??_C@_0CN@BLFEAMID@VectorClass?$DMclass?5DefinitionClas@ ; `string'
PUBLIC	??_C@_0CM@BOFDANDO@VectorClass?$DMclass?5DefinitionClas@ ; `string'
PUBLIC	??_C@_0GC@DNMHHGC@HashTemplateClass?$DMclass?5StringCl@ ; `string'
PUBLIC	??_C@_0DC@JFCHDEGG@VectorClass?$DMclass?5DefinitionClas@ ; `string'
PUBLIC	??_R0?AVPostLoadableClass@@@8			; PostLoadableClass `RTTI Type Descriptor'
PUBLIC	??_R3PostLoadableClass@@8			; PostLoadableClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PostLoadableClass@@8			; PostLoadableClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PostLoadableClass@@8		; PostLoadableClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4DefinitionMgrClass@@6B@			; DefinitionMgrClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDefinitionMgrClass@@@8			; DefinitionMgrClass `RTTI Type Descriptor'
PUBLIC	??_R3DefinitionMgrClass@@8			; DefinitionMgrClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DefinitionMgrClass@@8			; DefinitionMgrClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DefinitionMgrClass@@8		; DefinitionMgrClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@SaveLoadSubSystemClass@@8		; SaveLoadSubSystemClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVSaveLoadSubSystemClass@@@8		; SaveLoadSubSystemClass `RTTI Type Descriptor'
PUBLIC	??_R3SaveLoadSubSystemClass@@8			; SaveLoadSubSystemClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SaveLoadSubSystemClass@@8			; SaveLoadSubSystemClass::`RTTI Base Class Array'
PUBLIC	??_R4?$DynamicVectorClass@PAVDefinitionClass@@@@6B@ ; DynamicVectorClass<DefinitionClass *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$DynamicVectorClass@PAVDefinitionClass@@@@@8 ; DynamicVectorClass<DefinitionClass *> `RTTI Type Descriptor'
PUBLIC	??_R3?$DynamicVectorClass@PAVDefinitionClass@@@@8 ; DynamicVectorClass<DefinitionClass *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$DynamicVectorClass@PAVDefinitionClass@@@@8 ; DynamicVectorClass<DefinitionClass *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$DynamicVectorClass@PAVDefinitionClass@@@@8 ; DynamicVectorClass<DefinitionClass *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$VectorClass@PAVDefinitionClass@@@@8 ; VectorClass<DefinitionClass *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$VectorClass@PAVDefinitionClass@@@@@8	; VectorClass<DefinitionClass *> `RTTI Type Descriptor'
PUBLIC	??_R3?$VectorClass@PAVDefinitionClass@@@@8	; VectorClass<DefinitionClass *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$VectorClass@PAVDefinitionClass@@@@8	; VectorClass<DefinitionClass *>::`RTTI Base Class Array'
PUBLIC	??_R4?$VectorClass@PAVDefinitionClass@@@@6B@	; VectorClass<DefinitionClass *>::`RTTI Complete Object Locator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__imp___wassert:PROC
EXTRN	__imp__qsort:PROC
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	__imp___stricmp:PROC
EXTRN	__imp___strcmpi:PROC
EXTRN	__imp___strlwr:PROC
EXTRN	?SetThreadTrackingInformation@@YAXPBDI0@Z:PROC	; SetThreadTrackingInformation
EXTRN	?Get_Hash_Value@?$HashTemplateKeyClass@I@@SAIABI@Z:PROC ; HashTemplateKeyClass<unsigned int>::Get_Hash_Value
EXTRN	?Get_String@StringClass@@AAEXH_N@Z:PROC		; StringClass::Get_String
EXTRN	?Uninitialised_Grow@StringClass@@AAEXH@Z:PROC	; StringClass::Uninitialised_Grow
EXTRN	?Free_String@StringClass@@AAEXXZ:PROC		; StringClass::Free_String
EXTRN	?Open_Chunk@ChunkLoadClass@@QAE_NXZ:PROC	; ChunkLoadClass::Open_Chunk
EXTRN	?Close_Chunk@ChunkLoadClass@@QAE_NXZ:PROC	; ChunkLoadClass::Close_Chunk
EXTRN	?Cur_Chunk_ID@ChunkLoadClass@@QAEKXZ:PROC	; ChunkLoadClass::Cur_Chunk_ID
EXTRN	?Begin_Chunk@ChunkSaveClass@@QAE_NK@Z:PROC	; ChunkSaveClass::Begin_Chunk
EXTRN	?End_Chunk@ChunkSaveClass@@QAE_NXZ:PROC		; ChunkSaveClass::End_Chunk
EXTRN	??0SaveLoadSubSystemClass@@QAE@XZ:PROC		; SaveLoadSubSystemClass::SaveLoadSubSystemClass
EXTRN	??1SaveLoadSubSystemClass@@UAE@XZ:PROC		; SaveLoadSubSystemClass::~SaveLoadSubSystemClass
EXTRN	??_EDefinitionMgrClass@@UAEPAXI@Z:PROC		; DefinitionMgrClass::`vector deleting destructor'
EXTRN	?Find_Persist_Factory@SaveLoadSystemClass@@SAPAVPersistFactoryClass@@I@Z:PROC ; SaveLoadSystemClass::Find_Persist_Factory
EXTRN	??_E?$VectorClass@PAVDefinitionClass@@@@UAEPAXI@Z:PROC ; VectorClass<DefinitionClass *>::`vector deleting destructor'
EXTRN	??_E?$DynamicVectorClass@PAVDefinitionClass@@@@UAEPAXI@Z:PROC ; DynamicVectorClass<DefinitionClass *>::`vector deleting destructor'
EXTRN	_memcpy:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?m_EmptyString@StringClass@@0AAPADA:DWORD	; StringClass::m_EmptyString
EXTRN	?m_NullChar@StringClass@@0AADA:DWORD		; StringClass::m_NullChar
_BSS	SEGMENT
?_TheDefinitionMgr@@3VDefinitionMgrClass@@A DB 0cH DUP (?) ; _TheDefinitionMgr
_BSS	ENDS
CRT$XCU	SEGMENT
__TheDefinitionMgr$initializer$ DD FLAT:??__E_TheDefinitionMgr@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ??_R4?$VectorClass@PAVDefinitionClass@@@@6B@
rdata$r	SEGMENT
??_R4?$VectorClass@PAVDefinitionClass@@@@6B@ DD 00H	; VectorClass<DefinitionClass *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$VectorClass@PAVDefinitionClass@@@@@8
	DD	FLAT:??_R3?$VectorClass@PAVDefinitionClass@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$VectorClass@PAVDefinitionClass@@@@8
rdata$r	SEGMENT
??_R2?$VectorClass@PAVDefinitionClass@@@@8 DD FLAT:??_R1A@?0A@EA@?$VectorClass@PAVDefinitionClass@@@@8 ; VectorClass<DefinitionClass *>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$VectorClass@PAVDefinitionClass@@@@8
rdata$r	SEGMENT
??_R3?$VectorClass@PAVDefinitionClass@@@@8 DD 00H	; VectorClass<DefinitionClass *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$VectorClass@PAVDefinitionClass@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$VectorClass@PAVDefinitionClass@@@@@8
_DATA	SEGMENT
??_R0?AV?$VectorClass@PAVDefinitionClass@@@@@8 DD FLAT:??_7type_info@@6B@ ; VectorClass<DefinitionClass *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$VectorClass@PAVDefinitionClass@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$VectorClass@PAVDefinitionClass@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$VectorClass@PAVDefinitionClass@@@@8 DD FLAT:??_R0?AV?$VectorClass@PAVDefinitionClass@@@@@8 ; VectorClass<DefinitionClass *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VectorClass@PAVDefinitionClass@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$DynamicVectorClass@PAVDefinitionClass@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$DynamicVectorClass@PAVDefinitionClass@@@@8 DD FLAT:??_R0?AV?$DynamicVectorClass@PAVDefinitionClass@@@@@8 ; DynamicVectorClass<DefinitionClass *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$DynamicVectorClass@PAVDefinitionClass@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$DynamicVectorClass@PAVDefinitionClass@@@@8
rdata$r	SEGMENT
??_R2?$DynamicVectorClass@PAVDefinitionClass@@@@8 DD FLAT:??_R1A@?0A@EA@?$DynamicVectorClass@PAVDefinitionClass@@@@8 ; DynamicVectorClass<DefinitionClass *>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$VectorClass@PAVDefinitionClass@@@@8
rdata$r	ENDS
;	COMDAT ??_R3?$DynamicVectorClass@PAVDefinitionClass@@@@8
rdata$r	SEGMENT
??_R3?$DynamicVectorClass@PAVDefinitionClass@@@@8 DD 00H ; DynamicVectorClass<DefinitionClass *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$DynamicVectorClass@PAVDefinitionClass@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$DynamicVectorClass@PAVDefinitionClass@@@@@8
_DATA	SEGMENT
??_R0?AV?$DynamicVectorClass@PAVDefinitionClass@@@@@8 DD FLAT:??_7type_info@@6B@ ; DynamicVectorClass<DefinitionClass *> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$DynamicVectorClass@PAVDefinitionClass@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$DynamicVectorClass@PAVDefinitionClass@@@@6B@
rdata$r	SEGMENT
??_R4?$DynamicVectorClass@PAVDefinitionClass@@@@6B@ DD 00H ; DynamicVectorClass<DefinitionClass *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$DynamicVectorClass@PAVDefinitionClass@@@@@8
	DD	FLAT:??_R3?$DynamicVectorClass@PAVDefinitionClass@@@@8
rdata$r	ENDS
;	COMDAT ??_R2SaveLoadSubSystemClass@@8
rdata$r	SEGMENT
??_R2SaveLoadSubSystemClass@@8 DD FLAT:??_R1A@?0A@EA@SaveLoadSubSystemClass@@8 ; SaveLoadSubSystemClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PostLoadableClass@@8
rdata$r	ENDS
;	COMDAT ??_R3SaveLoadSubSystemClass@@8
rdata$r	SEGMENT
??_R3SaveLoadSubSystemClass@@8 DD 00H			; SaveLoadSubSystemClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SaveLoadSubSystemClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSaveLoadSubSystemClass@@@8
_DATA	SEGMENT
??_R0?AVSaveLoadSubSystemClass@@@8 DD FLAT:??_7type_info@@6B@ ; SaveLoadSubSystemClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSaveLoadSubSystemClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@SaveLoadSubSystemClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SaveLoadSubSystemClass@@8 DD FLAT:??_R0?AVSaveLoadSubSystemClass@@@8 ; SaveLoadSubSystemClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SaveLoadSubSystemClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DefinitionMgrClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DefinitionMgrClass@@8 DD FLAT:??_R0?AVDefinitionMgrClass@@@8 ; DefinitionMgrClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DefinitionMgrClass@@8
rdata$r	ENDS
;	COMDAT ??_R2DefinitionMgrClass@@8
rdata$r	SEGMENT
??_R2DefinitionMgrClass@@8 DD FLAT:??_R1A@?0A@EA@DefinitionMgrClass@@8 ; DefinitionMgrClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SaveLoadSubSystemClass@@8
	DD	FLAT:??_R1A@?0A@EA@PostLoadableClass@@8
rdata$r	ENDS
;	COMDAT ??_R3DefinitionMgrClass@@8
rdata$r	SEGMENT
??_R3DefinitionMgrClass@@8 DD 00H			; DefinitionMgrClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2DefinitionMgrClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDefinitionMgrClass@@@8
_DATA	SEGMENT
??_R0?AVDefinitionMgrClass@@@8 DD FLAT:??_7type_info@@6B@ ; DefinitionMgrClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDefinitionMgrClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DefinitionMgrClass@@6B@
rdata$r	SEGMENT
??_R4DefinitionMgrClass@@6B@ DD 00H			; DefinitionMgrClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDefinitionMgrClass@@@8
	DD	FLAT:??_R3DefinitionMgrClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PostLoadableClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PostLoadableClass@@8 DD FLAT:??_R0?AVPostLoadableClass@@@8 ; PostLoadableClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PostLoadableClass@@8
rdata$r	ENDS
;	COMDAT ??_R2PostLoadableClass@@8
rdata$r	SEGMENT
??_R2PostLoadableClass@@8 DD FLAT:??_R1A@?0A@EA@PostLoadableClass@@8 ; PostLoadableClass::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3PostLoadableClass@@8
rdata$r	SEGMENT
??_R3PostLoadableClass@@8 DD 00H			; PostLoadableClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2PostLoadableClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPostLoadableClass@@@8
_DATA	SEGMENT
??_R0?AVPostLoadableClass@@@8 DD FLAT:??_7type_info@@6B@ ; PostLoadableClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPostLoadableClass@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_0DC@JFCHDEGG@VectorClass?$DMclass?5DefinitionClas@
CONST	SEGMENT
??_C@_0DC@JFCHDEGG@VectorClass?$DMclass?5DefinitionClas@ DB 'VectorClass<'
	DB	'class DefinitionClass *>::VectorClass', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GC@DNMHHGC@HashTemplateClass?$DMclass?5StringCl@
CONST	SEGMENT
??_C@_0GC@DNMHHGC@HashTemplateClass?$DMclass?5StringCl@ DB 'HashTemplateC'
	DB	'lass<class StringClass,class DynamicVectorClass<class Definit'
	DB	'ionClass *> *>::Re_Hash', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@BOFDANDO@VectorClass?$DMclass?5DefinitionClas@
CONST	SEGMENT
??_C@_0CM@BOFDANDO@VectorClass?$DMclass?5DefinitionClas@ DB 'VectorClass<'
	DB	'class DefinitionClass *>::Clear', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@BLFEAMID@VectorClass?$DMclass?5DefinitionClas@
CONST	SEGMENT
??_C@_0CN@BLFEAMID@VectorClass?$DMclass?5DefinitionClas@ DB 'VectorClass<'
	DB	'class DefinitionClass *>::Resize', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1HK@JEBHJDL@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
CONST	SEGMENT
??_C@_1HK@JEBHJDL@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ DB 'x'
	DB	00H, ':', 00H, '\', 00H, 'g', 00H, 'i', 00H, 't', 00H, 'h', 00H
	DB	'u', 00H, 'b', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'e'
	DB	00H, 'g', 00H, 'a', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'd', 00H
	DB	'r', 00H, 'a', 00H, 'g', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'd'
	DB	00H, 'e', 00H, '_', 00H, 'r', 00H, 'x', 00H, 'd', 00H, '\', 00H
	DB	's', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 's'
	DB	00H, '\', 00H, 'h', 00H, 'a', 00H, 's', 00H, 'h', 00H, 't', 00H
	DB	'e', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@EECEFMJH@x?3?2github?2renegade?2dragonade_rxd@
CONST	SEGMENT
??_C@_0DN@EECEFMJH@x?3?2github?2renegade?2dragonade_rxd@ DB 'x:\github\re'
	DB	'negade\dragonade_rxd\scripts\hashtemplateclass.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GN@HPGKLBMI@HashTemplateClass?$DMclass?5StringCl@
CONST	SEGMENT
??_C@_0GN@HPGKLBMI@HashTemplateClass?$DMclass?5StringCl@ DB 'HashTemplate'
	DB	'Class<class StringClass,class DynamicVectorClass<class Defini'
	DB	'tionClass *> *>::~HashTemplateClass', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@JIIKJGD@DefinitionMgrClass?3?3Prepare_Defi@
CONST	SEGMENT
??_C@_0CN@JIIKJGD@DefinitionMgrClass?3?3Prepare_Defi@ DB 'DefinitionMgrCl'
	DB	'ass::Prepare_Definition_Array', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??Prepare_Definition_Array@DefinitionMgrClass@@SAXXZ@4JA@b2101402
_DATA	SEGMENT
?__LINE__Var@?1??Prepare_Definition_Array@DefinitionMgrClass@@SAXXZ@4JA@b2101402 DD 0136H ; `DefinitionMgrClass::Prepare_Definition_Array'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CF@FJKBDLNG@DefinitionMgrClass?3?3Free_Definit@
CONST	SEGMENT
??_C@_0CF@FJKBDLNG@DefinitionMgrClass?3?3Free_Definit@ DB 'DefinitionMgrC'
	DB	'lass::Free_Definitions', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??Free_Definitions@DefinitionMgrClass@@SAXXZ@4JA@b2101402
_DATA	SEGMENT
?__LINE__Var@?1??Free_Definitions@DefinitionMgrClass@@SAXXZ@4JA@b2101402 DD 0118H ; `DefinitionMgrClass::Free_Definitions'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1IA@CONNEFNJ@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
CONST	SEGMENT
??_C@_1IA@CONNEFNJ@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ DB 'x'
	DB	00H, ':', 00H, '\', 00H, 'g', 00H, 'i', 00H, 't', 00H, 'h', 00H
	DB	'u', 00H, 'b', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'e'
	DB	00H, 'g', 00H, 'a', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'd', 00H
	DB	'r', 00H, 'a', 00H, 'g', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'd'
	DB	00H, 'e', 00H, '_', 00H, 'r', 00H, 'x', 00H, 'd', 00H, '\', 00H
	DB	's', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 's'
	DB	00H, '\', 00H, 'd', 00H, 'e', 00H, 'f', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'm', 00H, 'g'
	DB	00H, 'r', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	'.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@OOLMHBDI@x?3?2github?2renegade?2dragonade_rxd@
CONST	SEGMENT
??_C@_0EA@OOLMHBDI@x?3?2github?2renegade?2dragonade_rxd@ DB 'x:\github\re'
	DB	'negade\dragonade_rxd\scripts\definitionmgrclass.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PGPNHOMN@DefinitionMgrClass?3?3Find_Typed_D@
CONST	SEGMENT
??_C@_0CK@PGPNHOMN@DefinitionMgrClass?3?3Find_Typed_D@ DB 'DefinitionMgrC'
	DB	'lass::Find_Typed_Definition', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??Find_Typed_Definition@DefinitionMgrClass@@SAPAVDefinitionClass@@PBDI_N@Z@4JA@b2101402
_DATA	SEGMENT
?__LINE__Var@?1??Find_Typed_Definition@DefinitionMgrClass@@SAPAVDefinitionClass@@PBDI_N@Z@4JA@b2101402 DD 0d4H ; `DefinitionMgrClass::Find_Typed_Definition'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7?$DynamicVectorClass@PAVDefinitionClass@@@@6B@
CONST	SEGMENT
??_7?$DynamicVectorClass@PAVDefinitionClass@@@@6B@ DD FLAT:??_R4?$DynamicVectorClass@PAVDefinitionClass@@@@6B@ ; DynamicVectorClass<DefinitionClass *>::`vftable'
	DD	FLAT:??_E?$DynamicVectorClass@PAVDefinitionClass@@@@UAEPAXI@Z
	DD	FLAT:??8?$VectorClass@PAVDefinitionClass@@@@UBE_NABV0@@Z
	DD	FLAT:?Resize@?$DynamicVectorClass@PAVDefinitionClass@@@@UAE_NHPBQAVDefinitionClass@@@Z
	DD	FLAT:?Clear@?$DynamicVectorClass@PAVDefinitionClass@@@@UAEXXZ
	DD	FLAT:?ID@?$DynamicVectorClass@PAVDefinitionClass@@@@UAEHABQAVDefinitionClass@@@Z
	DD	FLAT:?ID@?$DynamicVectorClass@PAVDefinitionClass@@@@UAEHPBQAVDefinitionClass@@@Z
CONST	ENDS
;	COMDAT ??_7?$VectorClass@PAVDefinitionClass@@@@6B@
CONST	SEGMENT
??_7?$VectorClass@PAVDefinitionClass@@@@6B@ DD FLAT:??_R4?$VectorClass@PAVDefinitionClass@@@@6B@ ; VectorClass<DefinitionClass *>::`vftable'
	DD	FLAT:??_E?$VectorClass@PAVDefinitionClass@@@@UAEPAXI@Z
	DD	FLAT:??8?$VectorClass@PAVDefinitionClass@@@@UBE_NABV0@@Z
	DD	FLAT:?Resize@?$VectorClass@PAVDefinitionClass@@@@UAE_NHPBQAVDefinitionClass@@@Z
	DD	FLAT:?Clear@?$VectorClass@PAVDefinitionClass@@@@UAEXXZ
	DD	FLAT:?ID@?$VectorClass@PAVDefinitionClass@@@@UAEHABQAVDefinitionClass@@@Z
	DD	FLAT:?ID@?$VectorClass@PAVDefinitionClass@@@@UAEHPBQAVDefinitionClass@@@Z
CONST	ENDS
;	COMDAT ??_C@_0BD@HGAKCENP@DefinitionMgrClass?$AA@
CONST	SEGMENT
??_C@_0BD@HGAKCENP@DefinitionMgrClass?$AA@ DB 'DefinitionMgrClass', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7DefinitionMgrClass@@6B@
CONST	SEGMENT
??_7DefinitionMgrClass@@6B@ DD FLAT:??_R4DefinitionMgrClass@@6B@ ; DefinitionMgrClass::`vftable'
	DD	FLAT:??_EDefinitionMgrClass@@UAEPAXI@Z
	DD	FLAT:?On_Post_Load@PostLoadableClass@@UAEXXZ
	DD	FLAT:?Chunk_ID@DefinitionMgrClass@@UBEIXZ
	DD	FLAT:?Contains_Data@DefinitionMgrClass@@UBE_NXZ
	DD	FLAT:?Save@DefinitionMgrClass@@UAE_NAAVChunkSaveClass@@@Z
	DD	FLAT:?Load@DefinitionMgrClass@@UAE_NAAVChunkLoadClass@@@Z
	DD	FLAT:?Name@DefinitionMgrClass@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
CONST	SEGMENT
??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@ DB 'x'
	DB	00H, ':', 00H, '\', 00H, 'g', 00H, 'i', 00H, 't', 00H, 'h', 00H
	DB	'u', 00H, 'b', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'e'
	DB	00H, 'g', 00H, 'a', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'd', 00H
	DB	'r', 00H, 'a', 00H, 'g', 00H, 'o', 00H, 'n', 00H, 'a', 00H, 'd'
	DB	00H, 'e', 00H, '_', 00H, 'r', 00H, 'x', 00H, 'd', 00H, '\', 00H
	DB	's', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 's'
	DB	00H, '\', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 'i', 00H, 'n', 00H
	DB	'e', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '.', 00H, 'h', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@
CONST	SEGMENT
??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@ DB 'x:\github\re'
	DB	'negade\dragonade_rxd\scripts\engine_vector.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@ DB 'f', 00H, 'a', 00H
	DB	'l', 00H, 's', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\hashtemplatekeyclass.h
;	COMDAT ?Get_Hash_Value@?$HashTemplateKeyClass@VStringClass@@@@SAIABVStringClass@@@Z
_TEXT	SEGMENT
_key$ = 8						; size = 4
?Get_Hash_Value@?$HashTemplateKeyClass@VStringClass@@@@SAIABVStringClass@@@Z PROC ; HashTemplateKeyClass<StringClass>::Get_Hash_Value, COMDAT

; 33   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 34   : 	return key.GetHash();

	mov	ecx, DWORD PTR _key$[ebp]
	call	?GetHash@StringClass@@QBEIXZ		; StringClass::GetHash

; 35   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Hash_Value@?$HashTemplateKeyClass@VStringClass@@@@SAIABVStringClass@@@Z ENDP ; HashTemplateKeyClass<StringClass>::Get_Hash_Value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$move@AAPAVDefinitionClass@@@std@@YA$$QAPAVDefinitionClass@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAPAVDefinitionClass@@@std@@YA$$QAPAVDefinitionClass@@AAPAV1@@Z PROC ; std::move<DefinitionClass * &>, COMDAT

; 1790 : 	{	// forward _Arg as movable

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 1791 : 	return ((typename remove_reference<_Ty>::type&&)_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1792 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$move@AAPAVDefinitionClass@@@std@@YA$$QAPAVDefinitionClass@@AAPAV1@@Z ENDP ; std::move<DefinitionClass * &>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_EEntry@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EEntry@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEPAXI@Z PROC ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Entry::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1Entry@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_I@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Entry@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_EEntry@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEPAXI@Z ENDP ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Entry::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1Entry@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Entry@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ PROC ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Entry::~Entry, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1StringClass@@QAE@XZ			; StringClass::~StringClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1Entry@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ ENDP ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Entry::~Entry
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??0Entry@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Entry@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ PROC ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Entry::Entry, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0StringClass@@QAE@H_N@Z		; StringClass::StringClass
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Entry@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ ENDP ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Entry::Entry
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\hashtemplateiterator.h
;	COMDAT ??B?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -72						; size = 4
_this$ = -4						; size = 4
??B?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QBE_NXZ PROC ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::operator bool, COMDAT
; _this$ = ecx

; 86   : 	operator bool() const { return index != -1; }

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], -1
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QBE_NXZ ENDP ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\hashtemplateiterator.h
;	COMDAT ??E?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXXZ PROC ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::operator++, COMDAT
; _this$ = ecx

; 85   : 	void operator++() { increment(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?increment@?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@AAEXXZ ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::increment
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXXZ ENDP ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\hashtemplateiterator.h
;	COMDAT ?getValue@?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEAAPAV?$DynamicVectorClass@PAVDefinitionClass@@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getValue@?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEAAPAV?$DynamicVectorClass@PAVDefinitionClass@@@@XZ PROC ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::getValue, COMDAT
; _this$ = ecx

; 83   : 	Value& getValue() { return table->entries[index].value; }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [ecx+eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getValue@?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEAAPAV?$DynamicVectorClass@PAVDefinitionClass@@@@XZ ENDP ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::getValue
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\hashtemplateiterator.h
;	COMDAT ?reset@?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?reset@?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXXZ PROC ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::reset, COMDAT
; _this$ = ecx

; 60   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 61   : 		index = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1

; 62   : 		
; 63   : 		for (hash = 0; hash < table->maxHashCount; hash++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN4@reset
$LN3@reset:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
$LN4@reset:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx+12]
	jae	SHORT $LN5@reset

; 64   : 		{
; 65   : 			index = table->indices[hash];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [edx+4], eax

; 66   : 			if (index != -1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], -1
	je	SHORT $LN1@reset

; 67   : 				break;

	jmp	SHORT $LN5@reset
$LN1@reset:

; 68   : 		}

	jmp	SHORT $LN3@reset
$LN5@reset:

; 69   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?reset@?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXXZ ENDP ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::reset
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\hashtemplateiterator.h
;	COMDAT ??0?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@AAV?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__table$ = 8						; size = 4
??0?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@AAV?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@@Z PROC ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>, COMDAT
; _this$ = ecx

; 51   : 	HashTemplateIterator(HashTemplateClass<Key, Value>& _table)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 52   : 	{
; 53   : 		table = &_table;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __table$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 54   : 		reset();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?reset@?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXXZ ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::reset

; 55   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@AAV?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@@Z ENDP ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\hashtemplateiterator.h
;	COMDAT ?increment@?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?increment@?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@AAEXXZ PROC ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::increment, COMDAT
; _this$ = ecx

; 32   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 33   : 		index = table->entries[index].next;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax]
	mov	DWORD PTR [edx+4], eax

; 34   : 		if (index == -1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], -1
	jne	SHORT $LN6@increment

; 35   : 		{
; 36   : 			for (hash++; hash < table->maxHashCount; hash++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	jmp	SHORT $LN4@increment
$LN3@increment:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
$LN4@increment:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx+12]
	jae	SHORT $LN6@increment

; 37   : 			{
; 38   : 				index = table->indices[hash];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [edx+4], eax

; 39   : 				if (index != -1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], -1
	je	SHORT $LN1@increment

; 40   : 					break;

	jmp	SHORT $LN6@increment
$LN1@increment:

; 41   : 			}

	jmp	SHORT $LN3@increment
$LN6@increment:

; 42   : 		}
; 43   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?increment@?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@AAEXXZ ENDP ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::increment
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$DynamicVectorClass@PAVDefinitionClass@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$DynamicVectorClass@PAVDefinitionClass@@@@UAEPAXI@Z PROC ; DynamicVectorClass<DefinitionClass *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$DynamicVectorClass@PAVDefinitionClass@@@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$DynamicVectorClass@PAVDefinitionClass@@@@UAEPAXI@Z ENDP ; DynamicVectorClass<DefinitionClass *>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??1?$DynamicVectorClass@PAVDefinitionClass@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$DynamicVectorClass@PAVDefinitionClass@@@@UAE@XZ PROC ; DynamicVectorClass<DefinitionClass *>::~DynamicVectorClass<DefinitionClass *>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$VectorClass@PAVDefinitionClass@@@@UAE@XZ ; VectorClass<DefinitionClass *>::~VectorClass<DefinitionClass *>
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$DynamicVectorClass@PAVDefinitionClass@@@@UAE@XZ ENDP ; DynamicVectorClass<DefinitionClass *>::~DynamicVectorClass<DefinitionClass *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?ID@?$DynamicVectorClass@PAVDefinitionClass@@@@UAEHABQAVDefinitionClass@@@Z
_TEXT	SEGMENT
_index$1 = -8						; size = 4
_this$ = -4						; size = 4
_object$ = 8						; size = 4
?ID@?$DynamicVectorClass@PAVDefinitionClass@@@@UAEHABQAVDefinitionClass@@@Z PROC ; DynamicVectorClass<DefinitionClass *>::ID, COMDAT
; _this$ = ecx

; 475  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 476  : 		for (int index = 0; index < Count(); index++)

	mov	DWORD PTR _index$1[ebp], 0
	jmp	SHORT $LN4@ID
$LN3@ID:
	mov	eax, DWORD PTR _index$1[ebp]
	add	eax, 1
	mov	DWORD PTR _index$1[ebp], eax
$LN4@ID:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Count@?$DynamicVectorClass@PAVDefinitionClass@@@@QBEHXZ ; DynamicVectorClass<DefinitionClass *>::Count
	cmp	DWORD PTR _index$1[ebp], eax
	jge	SHORT $LN2@ID

; 477  : 		{
; 478  : 			if ((*this)[index] == object)

	mov	eax, DWORD PTR _index$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$VectorClass@PAVDefinitionClass@@@@QAEAAPAVDefinitionClass@@H@Z ; VectorClass<DefinitionClass *>::operator[]
	mov	ecx, DWORD PTR _object$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN1@ID

; 479  : 			{
; 480  : 				return(index);

	mov	eax, DWORD PTR _index$1[ebp]
	jmp	SHORT $LN5@ID
$LN1@ID:

; 481  : 			}
; 482  : 		}

	jmp	SHORT $LN3@ID
$LN2@ID:

; 483  : 		return -1;

	or	eax, -1
$LN5@ID:

; 484  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?ID@?$DynamicVectorClass@PAVDefinitionClass@@@@UAEHABQAVDefinitionClass@@@Z ENDP ; DynamicVectorClass<DefinitionClass *>::ID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?ID@?$DynamicVectorClass@PAVDefinitionClass@@@@UAEHPBQAVDefinitionClass@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ptr$ = 8						; size = 4
?ID@?$DynamicVectorClass@PAVDefinitionClass@@@@UAEHPBQAVDefinitionClass@@@Z PROC ; DynamicVectorClass<DefinitionClass *>::ID, COMDAT
; _this$ = ecx

; 471  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 472  : 		return(VectorClass<T>::ID(ptr));

	mov	eax, DWORD PTR _ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ID@?$VectorClass@PAVDefinitionClass@@@@UAEHPBQAVDefinitionClass@@@Z ; VectorClass<DefinitionClass *>::ID

; 473  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?ID@?$DynamicVectorClass@PAVDefinitionClass@@@@UAEHPBQAVDefinitionClass@@@Z ENDP ; DynamicVectorClass<DefinitionClass *>::ID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?Add@?$DynamicVectorClass@PAVDefinitionClass@@@@QAE_NABQAVDefinitionClass@@@Z
_TEXT	SEGMENT
tv149 = -72						; size = 4
_this$ = -4						; size = 4
_object$ = 8						; size = 4
?Add@?$DynamicVectorClass@PAVDefinitionClass@@@@QAE_NABQAVDefinitionClass@@@Z PROC ; DynamicVectorClass<DefinitionClass *>::Add, COMDAT
; _this$ = ecx

; 318  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 319  : 		if (ActiveCount >= Length())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Length@?$VectorClass@PAVDefinitionClass@@@@QBEHXZ ; VectorClass<DefinitionClass *>::Length
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+16], eax
	jl	SHORT $LN5@Add

; 320  : 		{
; 321  : 			if ((IsAllocated || !VectorMax) && GrowthStep > 0)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	jne	SHORT $LN3@Add
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN4@Add
$LN3@Add:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jle	SHORT $LN4@Add

; 322  : 			{
; 323  : 				if (!Resize(Length() + GrowthStep))

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Length@?$VectorClass@PAVDefinitionClass@@@@QBEHXZ ; VectorClass<DefinitionClass *>::Length
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@Add

; 324  : 				{
; 325  : 					return false;

	xor	al, al
	jmp	SHORT $LN6@Add
$LN2@Add:

; 326  : 				}
; 327  : 			}
; 328  : 			else

	jmp	SHORT $LN5@Add
$LN4@Add:

; 329  : 			{
; 330  : 				return false;

	xor	al, al
	jmp	SHORT $LN6@Add
$LN5@Add:

; 331  : 			}
; 332  : 		}
; 333  : 		(*this)[ActiveCount++] = object;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv149[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	edx, DWORD PTR tv149[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$VectorClass@PAVDefinitionClass@@@@QAEAAPAVDefinitionClass@@H@Z ; VectorClass<DefinitionClass *>::operator[]
	mov	ecx, DWORD PTR _object$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 334  : 		return true;

	mov	al, 1
$LN6@Add:

; 335  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$DynamicVectorClass@PAVDefinitionClass@@@@QAE_NABQAVDefinitionClass@@@Z ENDP ; DynamicVectorClass<DefinitionClass *>::Add
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?Count@?$DynamicVectorClass@PAVDefinitionClass@@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Count@?$DynamicVectorClass@PAVDefinitionClass@@@@QBEHXZ PROC ; DynamicVectorClass<DefinitionClass *>::Count, COMDAT
; _this$ = ecx

; 314  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 315  : 		return(ActiveCount);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 316  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Count@?$DynamicVectorClass@PAVDefinitionClass@@@@QBEHXZ ENDP ; DynamicVectorClass<DefinitionClass *>::Count
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?Clear@?$DynamicVectorClass@PAVDefinitionClass@@@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$DynamicVectorClass@PAVDefinitionClass@@@@UAEXXZ PROC ; DynamicVectorClass<DefinitionClass *>::Clear, COMDAT
; _this$ = ecx

; 301  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 302  : 		ActiveCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 303  : 		VectorClass<T>::Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$VectorClass@PAVDefinitionClass@@@@UAEXXZ ; VectorClass<DefinitionClass *>::Clear

; 304  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$DynamicVectorClass@PAVDefinitionClass@@@@UAEXXZ ENDP ; DynamicVectorClass<DefinitionClass *>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?Resize@?$DynamicVectorClass@PAVDefinitionClass@@@@UAE_NHPBQAVDefinitionClass@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newsize$ = 8						; size = 4
_array$ = 12						; size = 4
?Resize@?$DynamicVectorClass@PAVDefinitionClass@@@@UAE_NHPBQAVDefinitionClass@@@Z PROC ; DynamicVectorClass<DefinitionClass *>::Resize, COMDAT
; _this$ = ecx

; 289  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 290  : 		if (VectorClass<T>::Resize(newsize, array))

	mov	eax, DWORD PTR _array$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Resize@?$VectorClass@PAVDefinitionClass@@@@UAE_NHPBQAVDefinitionClass@@@Z ; VectorClass<DefinitionClass *>::Resize
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@Resize

; 291  : 		{
; 292  : 			if (Length() < ActiveCount)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Length@?$VectorClass@PAVDefinitionClass@@@@QBEHXZ ; VectorClass<DefinitionClass *>::Length
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+16]
	jge	SHORT $LN1@Resize

; 293  : 			{
; 294  : 				ActiveCount = Length();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Length@?$VectorClass@PAVDefinitionClass@@@@QBEHXZ ; VectorClass<DefinitionClass *>::Length
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
$LN1@Resize:

; 295  : 			}
; 296  : 			return true;

	mov	al, 1
	jmp	SHORT $LN3@Resize
$LN2@Resize:

; 297  : 		}
; 298  : 		return false;

	xor	al, al
$LN3@Resize:

; 299  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Resize@?$DynamicVectorClass@PAVDefinitionClass@@@@UAE_NHPBQAVDefinitionClass@@@Z ENDP ; DynamicVectorClass<DefinitionClass *>::Resize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ??0?$DynamicVectorClass@PAVDefinitionClass@@@@QAE@IPBQAVDefinitionClass@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_size$ = 8						; size = 4
_array$ = 12						; size = 4
??0?$DynamicVectorClass@PAVDefinitionClass@@@@QAE@IPBQAVDefinitionClass@@@Z PROC ; DynamicVectorClass<DefinitionClass *>::DynamicVectorClass<DefinitionClass *>, COMDAT
; _this$ = ecx

; 243  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _array$[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$VectorClass@PAVDefinitionClass@@@@QAE@HPBQAVDefinitionClass@@@Z ; VectorClass<DefinitionClass *>::VectorClass<DefinitionClass *>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$DynamicVectorClass@PAVDefinitionClass@@@@6B@

; 244  : 		GrowthStep = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 10			; 0000000aH

; 245  : 		ActiveCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 246  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$DynamicVectorClass@PAVDefinitionClass@@@@QAE@IPBQAVDefinitionClass@@@Z ENDP ; DynamicVectorClass<DefinitionClass *>::DynamicVectorClass<DefinitionClass *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$VectorClass@PAVDefinitionClass@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$VectorClass@PAVDefinitionClass@@@@UAEPAXI@Z PROC	; VectorClass<DefinitionClass *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$VectorClass@PAVDefinitionClass@@@@UAE@XZ ; VectorClass<DefinitionClass *>::~VectorClass<DefinitionClass *>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$VectorClass@PAVDefinitionClass@@@@UAEPAXI@Z ENDP	; VectorClass<DefinitionClass *>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?ID@?$VectorClass@PAVDefinitionClass@@@@UAEHABQAVDefinitionClass@@@Z
_TEXT	SEGMENT
_index$1 = -8						; size = 4
_this$ = -4						; size = 4
_object$ = 8						; size = 4
?ID@?$VectorClass@PAVDefinitionClass@@@@UAEHABQAVDefinitionClass@@@Z PROC ; VectorClass<DefinitionClass *>::ID, COMDAT
; _this$ = ecx

; 211  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 212  : 		if (!IsValid)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+12]
	test	ecx, ecx
	jne	SHORT $LN5@ID

; 213  : 		{
; 214  : 			return 0;

	xor	eax, eax
	jmp	SHORT $LN6@ID
$LN5@ID:

; 215  : 		}
; 216  : 		for (int index = 0; index < VectorMax; index++)

	mov	DWORD PTR _index$1[ebp], 0
	jmp	SHORT $LN4@ID
$LN3@ID:
	mov	eax, DWORD PTR _index$1[ebp]
	add	eax, 1
	mov	DWORD PTR _index$1[ebp], eax
$LN4@ID:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$1[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jge	SHORT $LN2@ID

; 217  : 		{
; 218  : 			if ((*this)[index] == object)

	mov	eax, DWORD PTR _index$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$VectorClass@PAVDefinitionClass@@@@QAEAAPAVDefinitionClass@@H@Z ; VectorClass<DefinitionClass *>::operator[]
	mov	ecx, DWORD PTR _object$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN1@ID

; 219  : 			{
; 220  : 				return index;

	mov	eax, DWORD PTR _index$1[ebp]
	jmp	SHORT $LN6@ID
$LN1@ID:

; 221  : 			}
; 222  : 		}

	jmp	SHORT $LN3@ID
$LN2@ID:

; 223  : 		return -1;

	or	eax, -1
$LN6@ID:

; 224  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?ID@?$VectorClass@PAVDefinitionClass@@@@UAEHABQAVDefinitionClass@@@Z ENDP ; VectorClass<DefinitionClass *>::ID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?ID@?$VectorClass@PAVDefinitionClass@@@@UAEHPBQAVDefinitionClass@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ptr$ = 8						; size = 4
?ID@?$VectorClass@PAVDefinitionClass@@@@UAEHPBQAVDefinitionClass@@@Z PROC ; VectorClass<DefinitionClass *>::ID, COMDAT
; _this$ = ecx

; 203  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 204  : 		if (!IsValid)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+12]
	test	ecx, ecx
	jne	SHORT $LN1@ID

; 205  : 		{
; 206  : 			return 0;

	xor	eax, eax
	jmp	SHORT $LN2@ID
$LN1@ID:

; 207  : 		}
; 208  : 		return(((unsigned long)ptr - (unsigned long)&(*this)[0]) / sizeof(T));

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$VectorClass@PAVDefinitionClass@@@@QAEAAPAVDefinitionClass@@H@Z ; VectorClass<DefinitionClass *>::operator[]
	mov	ecx, DWORD PTR _ptr$[ebp]
	sub	ecx, eax
	shr	ecx, 2
	mov	eax, ecx
$LN2@ID:

; 209  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?ID@?$VectorClass@PAVDefinitionClass@@@@UAEHPBQAVDefinitionClass@@@Z ENDP ; VectorClass<DefinitionClass *>::ID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?Length@?$VectorClass@PAVDefinitionClass@@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Length@?$VectorClass@PAVDefinitionClass@@@@QBEHXZ PROC	; VectorClass<DefinitionClass *>::Length, COMDAT
; _this$ = ecx

; 199  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 200  : 		return VectorMax;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 201  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Length@?$VectorClass@PAVDefinitionClass@@@@QBEHXZ ENDP	; VectorClass<DefinitionClass *>::Length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?Clear@?$VectorClass@PAVDefinitionClass@@@@UAEXXZ
_TEXT	SEGMENT
$T1 = -72						; size = 4
_this$ = -4						; size = 4
?Clear@?$VectorClass@PAVDefinitionClass@@@@UAEXXZ PROC	; VectorClass<DefinitionClass *>::Clear, COMDAT
; _this$ = ecx

; 189  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 190  : 		if (Vector)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@Clear

; 191  : 		{
; 192  : 			if (IsAllocated) delete[] Vector;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	je	SHORT $LN1@Clear
	push	OFFSET ??_C@_0CM@BOFDANDO@VectorClass?$DMclass?5DefinitionClas@
	push	192					; 000000c0H
	push	OFFSET ??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN6@Clear
	xor	ecx, ecx
	jne	SHORT $LN5@Clear
	push	192					; 000000c0H
	push	OFFSET ??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN5@Clear:
	jmp	SHORT $LN1@Clear
$LN6@Clear:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN1@Clear:

; 193  : 			Vector = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 194  : 			VectorMax = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 195  : 			IsAllocated = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+13], 0
$LN3@Clear:

; 196  : 		}
; 197  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$VectorClass@PAVDefinitionClass@@@@UAEXXZ ENDP	; VectorClass<DefinitionClass *>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ?Resize@?$VectorClass@PAVDefinitionClass@@@@UAE_NHPBQAVDefinitionClass@@@Z
_TEXT	SEGMENT
tv172 = -96						; size = 4
tv141 = -96						; size = 4
tv133 = -96						; size = 4
tv83 = -96						; size = 4
$T1 = -92						; size = 4
$T2 = -88						; size = 4
$T3 = -84						; size = 4
_index$4 = -16						; size = 4
_copycount$5 = -12					; size = 4
_newptr$6 = -8						; size = 4
_this$ = -4						; size = 4
_newsize$ = 8						; size = 4
_array$ = 12						; size = 4
?Resize@?$VectorClass@PAVDefinitionClass@@@@UAE_NHPBQAVDefinitionClass@@@Z PROC ; VectorClass<DefinitionClass *>::Resize, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 148  : 		if (newsize)

	cmp	DWORD PTR _newsize$[ebp], 0
	je	$LN10@Resize

; 149  : 		{
; 150  : 			T *newptr;
; 151  : 			IsValid = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 0

; 152  : 			if (!array)

	cmp	DWORD PTR _array$[ebp], 0
	jne	SHORT $LN9@Resize

; 153  : 			{
; 154  : 				newptr = new T[newsize];

	push	OFFSET ??_C@_0CN@BLFEAMID@VectorClass?$DMclass?5DefinitionClas@
	push	154					; 0000009aH
	push	OFFSET ??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN14@Resize
	xor	ecx, ecx
	jne	SHORT $LN13@Resize
	push	154					; 0000009aH
	push	OFFSET ??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN13@Resize:
	mov	DWORD PTR tv83[ebp], 0
	jmp	SHORT $LN15@Resize
$LN14@Resize:
	xor	ecx, ecx
	mov	eax, DWORD PTR _newsize$[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv83[ebp], eax
$LN15@Resize:
	mov	ecx, DWORD PTR tv83[ebp]
	mov	DWORD PTR _newptr$6[ebp], ecx

; 155  : 			}
; 156  : 			else

	jmp	SHORT $LN8@Resize
$LN9@Resize:

; 157  : 			{
; 158  : 				newptr = new((void*)array) T[newsize];

	push	OFFSET ??_C@_0CN@BLFEAMID@VectorClass?$DMclass?5DefinitionClas@
	push	158					; 0000009eH
	push	OFFSET ??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN17@Resize
	xor	ecx, ecx
	jne	SHORT $LN16@Resize
	push	158					; 0000009eH
	push	OFFSET ??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN16@Resize:
	mov	DWORD PTR tv133[ebp], 0
	jmp	SHORT $LN18@Resize
$LN17@Resize:
	mov	eax, DWORD PTR _array$[ebp]
	push	eax
	xor	ecx, ecx
	mov	eax, DWORD PTR _newsize$[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXIPAX@Z			; operator new[]
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv133[ebp], eax
$LN18@Resize:
	mov	ecx, DWORD PTR tv133[ebp]
	mov	DWORD PTR _newptr$6[ebp], ecx
$LN8@Resize:

; 159  : 			}
; 160  : 			IsValid = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 1

; 161  : 			if (!newptr)

	cmp	DWORD PTR _newptr$6[ebp], 0
	jne	SHORT $LN7@Resize

; 162  : 			{
; 163  : 				return false;

	xor	al, al
	jmp	$LN11@Resize
$LN7@Resize:

; 164  : 			}
; 165  : 			if (Vector != NULL)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	$LN6@Resize

; 166  : 			{
; 167  : 				int copycount = (newsize < VectorMax) ? newsize : VectorMax;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jge	SHORT $LN19@Resize
	mov	edx, DWORD PTR _newsize$[ebp]
	mov	DWORD PTR tv141[ebp], edx
	jmp	SHORT $LN20@Resize
$LN19@Resize:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR tv141[ebp], ecx
$LN20@Resize:
	mov	edx, DWORD PTR tv141[ebp]
	mov	DWORD PTR _copycount$5[ebp], edx

; 168  : 				for (int index = 0; index < copycount; index++)

	mov	DWORD PTR _index$4[ebp], 0
	jmp	SHORT $LN5@Resize
$LN4@Resize:
	mov	eax, DWORD PTR _index$4[ebp]
	add	eax, 1
	mov	DWORD PTR _index$4[ebp], eax
$LN5@Resize:
	mov	eax, DWORD PTR _index$4[ebp]
	cmp	eax, DWORD PTR _copycount$5[ebp]
	jge	SHORT $LN3@Resize

; 169  : 				{
; 170  : 					newptr[index] = std::move(Vector[index]);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _index$4[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	??$move@AAPAVDefinitionClass@@@std@@YA$$QAPAVDefinitionClass@@AAPAV1@@Z ; std::move<DefinitionClass * &>
	add	esp, 4
	mov	ecx, DWORD PTR _index$4[ebp]
	mov	edx, DWORD PTR _newptr$6[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+ecx*4], eax

; 171  : 				}

	jmp	SHORT $LN4@Resize
$LN3@Resize:

; 172  : 				if (IsAllocated)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	je	SHORT $LN6@Resize

; 173  : 				{
; 174  : 					delete[] Vector;

	push	OFFSET ??_C@_0CN@BLFEAMID@VectorClass?$DMclass?5DefinitionClas@
	push	174					; 000000aeH
	push	OFFSET ??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN22@Resize
	xor	ecx, ecx
	jne	SHORT $LN21@Resize
	push	174					; 000000aeH
	push	OFFSET ??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN21@Resize:
	jmp	SHORT $LN23@Resize
$LN22@Resize:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN23@Resize:

; 175  : 					Vector = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN6@Resize:

; 176  : 				}
; 177  : 			}
; 178  : 			Vector = newptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newptr$6[ebp]
	mov	DWORD PTR [eax+4], ecx

; 179  : 			VectorMax = newsize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newsize$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 180  : 			IsAllocated = (Vector && !array);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN24@Resize
	cmp	DWORD PTR _array$[ebp], 0
	jne	SHORT $LN24@Resize
	mov	DWORD PTR tv172[ebp], 1
	jmp	SHORT $LN25@Resize
$LN24@Resize:
	mov	DWORD PTR tv172[ebp], 0
$LN25@Resize:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR tv172[ebp]
	mov	BYTE PTR [ecx+13], dl

; 181  : 		}
; 182  : 		else

	jmp	SHORT $LN1@Resize
$LN10@Resize:

; 183  : 		{
; 184  : 			Clear();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN1@Resize:

; 185  : 		}
; 186  : 		return true;

	mov	al, 1
$LN11@Resize:

; 187  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Resize@?$VectorClass@PAVDefinitionClass@@@@UAE_NHPBQAVDefinitionClass@@@Z ENDP ; VectorClass<DefinitionClass *>::Resize
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ??8?$VectorClass@PAVDefinitionClass@@@@UBE_NABV0@@Z
_TEXT	SEGMENT
_index$1 = -8						; size = 4
_this$ = -4						; size = 4
_vector$ = 8						; size = 4
??8?$VectorClass@PAVDefinitionClass@@@@UBE_NABV0@@Z PROC ; VectorClass<DefinitionClass *>::operator==, COMDAT
; _this$ = ecx

; 132  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 133  : 		if (VectorMax == vector.Length())

	mov	ecx, DWORD PTR _vector$[ebp]
	call	?Length@?$VectorClass@PAVDefinitionClass@@@@QBEHXZ ; VectorClass<DefinitionClass *>::Length
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jne	SHORT $LN5@operator

; 134  : 		{
; 135  : 			for (int index = 0; index < VectorMax; index++)

	mov	DWORD PTR _index$1[ebp], 0
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	eax, DWORD PTR _index$1[ebp]
	add	eax, 1
	mov	DWORD PTR _index$1[ebp], eax
$LN4@operator:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$1[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jge	SHORT $LN2@operator

; 136  : 			{
; 137  : 				if (Vector[index] != vector[index])

	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _index$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _vector$[ebp]
	call	??A?$VectorClass@PAVDefinitionClass@@@@QBEABQAVDefinitionClass@@H@Z ; VectorClass<DefinitionClass *>::operator[]
	mov	edx, DWORD PTR _index$1[ebp]
	mov	ecx, DWORD PTR [esi+edx*4]
	cmp	ecx, DWORD PTR [eax]
	je	SHORT $LN1@operator

; 138  : 				{
; 139  : 					return false;

	xor	al, al
	jmp	SHORT $LN6@operator
$LN1@operator:

; 140  : 				}
; 141  : 			}

	jmp	SHORT $LN3@operator
$LN2@operator:

; 142  : 			return true;

	mov	al, 1
	jmp	SHORT $LN6@operator
$LN5@operator:

; 143  : 		}
; 144  : 		return false;

	xor	al, al
$LN6@operator:

; 145  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$VectorClass@PAVDefinitionClass@@@@UBE_NABV0@@Z ENDP ; VectorClass<DefinitionClass *>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ??A?$VectorClass@PAVDefinitionClass@@@@QBEABQAVDefinitionClass@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$VectorClass@PAVDefinitionClass@@@@QBEABQAVDefinitionClass@@H@Z PROC ; VectorClass<DefinitionClass *>::operator[], COMDAT
; _this$ = ecx

; 127  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 128  : 		return(Vector[index]);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]

; 129  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$VectorClass@PAVDefinitionClass@@@@QBEABQAVDefinitionClass@@H@Z ENDP ; VectorClass<DefinitionClass *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ??A?$VectorClass@PAVDefinitionClass@@@@QAEAAPAVDefinitionClass@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$VectorClass@PAVDefinitionClass@@@@QAEAAPAVDefinitionClass@@H@Z PROC ; VectorClass<DefinitionClass *>::operator[], COMDAT
; _this$ = ecx

; 122  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 123  : 		return(Vector[index]);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]

; 124  : 	} 

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$VectorClass@PAVDefinitionClass@@@@QAEAAPAVDefinitionClass@@H@Z ENDP ; VectorClass<DefinitionClass *>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ??1?$VectorClass@PAVDefinitionClass@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$VectorClass@PAVDefinitionClass@@@@UAE@XZ PROC	; VectorClass<DefinitionClass *>::~VectorClass<DefinitionClass *>, COMDAT
; _this$ = ecx

; 117  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$VectorClass@PAVDefinitionClass@@@@6B@

; 118  : 		Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$VectorClass@PAVDefinitionClass@@@@UAEXXZ ; VectorClass<DefinitionClass *>::Clear

; 119  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$VectorClass@PAVDefinitionClass@@@@UAE@XZ ENDP	; VectorClass<DefinitionClass *>::~VectorClass<DefinitionClass *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_vector.h
;	COMDAT ??0?$VectorClass@PAVDefinitionClass@@@@QAE@HPBQAVDefinitionClass@@@Z
_TEXT	SEGMENT
tv139 = -80						; size = 4
tv89 = -80						; size = 4
$T1 = -76						; size = 4
$T2 = -72						; size = 4
_this$ = -4						; size = 4
_size$ = 8						; size = 4
_array$ = 12						; size = 4
??0?$VectorClass@PAVDefinitionClass@@@@QAE@HPBQAVDefinitionClass@@@Z PROC ; VectorClass<DefinitionClass *>::VectorClass<DefinitionClass *>, COMDAT
; _this$ = ecx

; 49   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$VectorClass@PAVDefinitionClass@@@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+12], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+13], 0

; 50   : 		if (size)

	cmp	DWORD PTR _size$[ebp], 0
	je	$LN4@VectorClas

; 51   : 		{
; 52   : 			if (array)

	cmp	DWORD PTR _array$[ebp], 0
	je	SHORT $LN2@VectorClas

; 53   : 			{
; 54   : 				Vector = new((void*)array) T[size];

	push	OFFSET ??_C@_0DC@JFCHDEGG@VectorClass?$DMclass?5DefinitionClas@
	push	54					; 00000036H
	push	OFFSET ??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN7@VectorClas
	xor	ecx, ecx
	jne	SHORT $LN6@VectorClas
	push	54					; 00000036H
	push	OFFSET ??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN6@VectorClas:
	mov	DWORD PTR tv89[ebp], 0
	jmp	SHORT $LN8@VectorClas
$LN7@VectorClas:
	mov	eax, DWORD PTR _array$[ebp]
	push	eax
	xor	ecx, ecx
	mov	eax, DWORD PTR _size$[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXIPAX@Z			; operator new[]
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv89[ebp], eax
$LN8@VectorClas:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv89[ebp]
	mov	DWORD PTR [ecx+4], edx

; 55   : 			}
; 56   : 			else

	jmp	SHORT $LN4@VectorClas
$LN2@VectorClas:

; 57   : 			{
; 58   : 				Vector = new T[size];

	push	OFFSET ??_C@_0DC@JFCHDEGG@VectorClass?$DMclass?5DefinitionClas@
	push	58					; 0000003aH
	push	OFFSET ??_C@_0DJ@NKJHEMPA@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN10@VectorClas
	xor	ecx, ecx
	jne	SHORT $LN9@VectorClas
	push	58					; 0000003aH
	push	OFFSET ??_C@_1HC@JEIHKHFK@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN9@VectorClas:
	mov	DWORD PTR tv139[ebp], 0
	jmp	SHORT $LN11@VectorClas
$LN10@VectorClas:
	xor	ecx, ecx
	mov	eax, DWORD PTR _size$[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv139[ebp], eax
$LN11@VectorClas:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv139[ebp]
	mov	DWORD PTR [ecx+4], edx

; 59   : 				IsAllocated = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+13], 1
$LN4@VectorClas:

; 60   : 			}
; 61   : 		}
; 62   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$VectorClass@PAVDefinitionClass@@@@QAE@HPBQAVDefinitionClass@@@Z ENDP ; VectorClass<DefinitionClass *>::VectorClass<DefinitionClass *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_G?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEPAXI@Z PROC ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::~HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEPAXI@Z ENDP ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\hashtemplateclass.h
;	COMDAT ?Remove_All@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXXZ
_TEXT	SEGMENT
_lastHash$1 = -16					; size = 4
_index$2 = -12						; size = 4
_hash$3 = -8						; size = 4
_this$ = -4						; size = 4
?Remove_All@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXXZ PROC ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Remove_All, COMDAT
; _this$ = ecx

; 223  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 224  : 		for (uint hash = 0; hash < maxHashCount; hash++)

	mov	DWORD PTR _hash$3[ebp], 0
	jmp	SHORT $LN6@Remove_All
$LN5@Remove_All:
	mov	eax, DWORD PTR _hash$3[ebp]
	add	eax, 1
	mov	DWORD PTR _hash$3[ebp], eax
$LN6@Remove_All:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hash$3[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN7@Remove_All

; 225  : 		{
; 226  : 			uint index = indices[hash];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _hash$3[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _index$2[ebp], eax

; 227  : 			if (index != -1)

	cmp	DWORD PTR _index$2[ebp], -1
	je	SHORT $LN3@Remove_All

; 228  : 			{
; 229  : 				uint lastHash = index;

	mov	eax, DWORD PTR _index$2[ebp]
	mov	DWORD PTR _lastHash$1[ebp], eax
$LN2@Remove_All:

; 230  : 				while (entries[lastHash].next != -1)

	mov	eax, DWORD PTR _lastHash$1[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	DWORD PTR [edx+eax], -1
	je	SHORT $LN1@Remove_All

; 231  : 					lastHash = entries[lastHash].next;

	mov	eax, DWORD PTR _lastHash$1[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax]
	mov	DWORD PTR _lastHash$1[ebp], eax
	jmp	SHORT $LN2@Remove_All
$LN1@Remove_All:

; 232  : 				
; 233  : 				entries[lastHash].next = unusedEntryIndex;

	mov	eax, DWORD PTR _lastHash$1[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+eax], ecx

; 234  : 				unusedEntryIndex = index;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$2[ebp]
	mov	DWORD PTR [eax+8], ecx

; 235  : 				indices[hash] = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _hash$3[ebp]
	mov	DWORD PTR [ecx+edx*4], -1
$LN3@Remove_All:

; 236  : 			}
; 237  : 		}

	jmp	$LN5@Remove_All
$LN7@Remove_All:

; 238  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Remove_All@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXXZ ENDP ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Remove_All
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\hashtemplateclass.h
;	COMDAT ?Insert@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXABVStringClass@@ABQAV?$DynamicVectorClass@PAVDefinitionClass@@@@@Z
_TEXT	SEGMENT
_hash$ = -12						; size = 4
_index$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_value$ = 12						; size = 4
?Insert@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXABVStringClass@@ABQAV?$DynamicVectorClass@PAVDefinitionClass@@@@@Z PROC ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Insert, COMDAT
; _this$ = ecx

; 152  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 153  : 		// If all entries are in use, enlarge the table
; 154  : 		if (unusedEntryIndex == -1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], -1
	jne	SHORT $LN1@Insert

; 155  : 			Re_Hash();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Re_Hash@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@AAEXXZ ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Re_Hash
$LN1@Insert:

; 156  : 		
; 157  : 		uint index = unusedEntryIndex;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _index$[ebp], ecx

; 158  : 		unusedEntryIndex = entries[index].next;

	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+eax]
	mov	DWORD PTR [ecx+8], edx

; 159  : 		
; 160  : 		uint hash = computeHash(key);

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?computeHash@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@ABEIABVStringClass@@@Z ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::computeHash
	mov	DWORD PTR _hash$[ebp], eax

; 161  : 		entries[index].key = key;

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR [eax+ecx+4]
	call	??4StringClass@@QAEABV0@ABV0@@Z		; StringClass::operator=

; 162  : 		entries[index].value = value;

	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax+8], ecx

; 163  : 		entries[index].next = indices[hash];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esi, DWORD PTR _hash$[ebp]
	mov	ecx, DWORD PTR [ecx+esi*4]
	mov	DWORD PTR [eax+edx], ecx

; 164  : 		indices[hash] = index;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _hash$[ebp]
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax

; 165  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Insert@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXABVStringClass@@ABQAV?$DynamicVectorClass@PAVDefinitionClass@@@@@Z ENDP ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Insert
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\hashtemplateclass.h
;	COMDAT ?Get@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QBEPAV?$DynamicVectorClass@PAVDefinitionClass@@@@ABVStringClass@@PAV2@@Z
_TEXT	SEGMENT
tv68 = -76						; size = 4
_result$ = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
_default$ = 12						; size = 4
?Get@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QBEPAV?$DynamicVectorClass@PAVDefinitionClass@@@@ABVStringClass@@PAV2@@Z PROC ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Get, COMDAT
; _this$ = ecx

; 137  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 138  : 		Value* result = Get(key);

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QBEPAPAV?$DynamicVectorClass@PAVDefinitionClass@@@@ABVStringClass@@@Z ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Get
	mov	DWORD PTR _result$[ebp], eax

; 139  : 		return result ? *result : default;

	cmp	DWORD PTR _result$[ebp], 0
	je	SHORT $LN3@Get
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv68[ebp], ecx
	jmp	SHORT $LN4@Get
$LN3@Get:
	mov	edx, DWORD PTR _default$[ebp]
	mov	DWORD PTR tv68[ebp], edx
$LN4@Get:
	mov	eax, DWORD PTR tv68[ebp]

; 140  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?Get@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QBEPAV?$DynamicVectorClass@PAVDefinitionClass@@@@ABVStringClass@@PAV2@@Z ENDP ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\hashtemplateclass.h
;	COMDAT ?Get@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QBEPAPAV?$DynamicVectorClass@PAVDefinitionClass@@@@ABVStringClass@@@Z
_TEXT	SEGMENT
_index$1 = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?Get@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QBEPAPAV?$DynamicVectorClass@PAVDefinitionClass@@@@ABVStringClass@@@Z PROC ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Get, COMDAT
; _this$ = ecx

; 125  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 126  : 		if (indices)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Get

; 127  : 			for (uint index = indices[computeHash(key)]; index != -1; index = entries[index].next)

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?computeHash@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@ABEIABVStringClass@@@Z ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::computeHash
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _index$1[ebp], eax
	jmp	SHORT $LN4@Get
$LN3@Get:
	mov	eax, DWORD PTR _index$1[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax]
	mov	DWORD PTR _index$1[ebp], eax
$LN4@Get:
	cmp	DWORD PTR _index$1[ebp], -1
	je	SHORT $LN5@Get

; 128  : 				if (entries[index].key == key)

	mov	ecx, DWORD PTR _key$[ebp]
	call	??BStringClass@@QBEPBDXZ		; StringClass::operator char const *
	push	eax
	mov	eax, DWORD PTR _index$1[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	lea	ecx, DWORD PTR [edx+eax+4]
	call	??8StringClass@@QBE_NPBD@Z		; StringClass::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@Get

; 129  : 					return &entries[index].value;

	mov	eax, DWORD PTR _index$1[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [edx+eax+8]
	jmp	SHORT $LN6@Get
$LN1@Get:

; 130  : 		
; 131  : 		return NULL;

	jmp	SHORT $LN3@Get
$LN5@Get:
	xor	eax, eax
$LN6@Get:

; 132  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Get@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QBEPAPAV?$DynamicVectorClass@PAVDefinitionClass@@@@ABVStringClass@@@Z ENDP ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Get
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\hashtemplateclass.h
;	COMDAT ??1?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ
_TEXT	SEGMENT
tv88 = -84						; size = 4
$T1 = -80						; size = 4
$T2 = -76						; size = 4
$T3 = -72						; size = 4
_this$ = -4						; size = 4
??1?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ PROC ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::~HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>, COMDAT
; _this$ = ecx

; 117  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 118  : 		delete[] indices;

	push	OFFSET ??_C@_0GN@HPGKLBMI@HashTemplateClass?$DMclass?5StringCl@
	push	118					; 00000076H
	push	OFFSET ??_C@_0DN@EECEFMJH@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN4@HashTempla
	xor	ecx, ecx
	jne	SHORT $LN3@HashTempla
	push	118					; 00000076H
	push	OFFSET ??_C@_1HK@JEBHJDL@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN3@HashTempla:
	jmp	SHORT $LN5@HashTempla
$LN4@HashTempla:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN5@HashTempla:

; 119  : 		delete[] entries;

	push	OFFSET ??_C@_0GN@HPGKLBMI@HashTemplateClass?$DMclass?5StringCl@
	push	119					; 00000077H
	push	OFFSET ??_C@_0DN@EECEFMJH@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN9@HashTempla
	xor	ecx, ecx
	jne	SHORT $LN6@HashTempla
	push	119					; 00000077H
	push	OFFSET ??_C@_1HK@JEBHJDL@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN6@HashTempla:
	jmp	SHORT $LN1@HashTempla
$LN9@HashTempla:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN7@HashTempla
	push	3
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_EEntry@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEPAXI@Z
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN1@HashTempla
$LN7@HashTempla:
	mov	DWORD PTR tv88[ebp], 0
$LN1@HashTempla:

; 120  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ ENDP ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::~HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\hashtemplateclass.h
;	COMDAT ??0?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ PROC ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>, COMDAT
; _this$ = ecx

; 106  : 	HashTemplateClass()

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 107  : 	{
; 108  : 		indices = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 109  : 		entries = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 110  : 		unusedEntryIndex = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], -1

; 111  : 		maxHashCount = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 112  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ ENDP ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\hashtemplateclass.h
;	COMDAT ?Re_Hash@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@AAEXXZ
_TEXT	SEGMENT
tv129 = -132						; size = 4
tv230 = -128						; size = 4
tv148 = -128						; size = 4
tv131 = -128						; size = 4
tv69 = -128						; size = 4
$T1 = -124						; size = 4
$T2 = -120						; size = 4
$T3 = -116						; size = 4
$T4 = -112						; size = 4
$T5 = -108						; size = 4
$T6 = -104						; size = 4
_i$7 = -36						; size = 4
_hash2$8 = -32						; size = 4
_index$9 = -28						; size = 4
_hash$10 = -24						; size = 4
_index$11 = -20						; size = 4
_newIndices$ = -16					; size = 4
_newEntries$ = -12					; size = 4
_newMaxHashCount$ = -8					; size = 4
_this$ = -4						; size = 4
?Re_Hash@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@AAEXXZ PROC ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Re_Hash, COMDAT
; _this$ = ecx

; 62   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 132				; 00000084H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 63   : 		uint newMaxHashCount = max(maxHashCount * 2, 4); // Increase the size and make sure there are at least 4 entries.

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 1
	cmp	ecx, 4
	jbe	SHORT $LN15@Re_Hash
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	shl	eax, 1
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN16@Re_Hash
$LN15@Re_Hash:
	mov	DWORD PTR tv69[ebp], 4
$LN16@Re_Hash:
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR _newMaxHashCount$[ebp], ecx

; 64   : 		
; 65   : 		Entry* newEntries = new Entry[newMaxHashCount];

	push	OFFSET ??_C@_0GC@DNMHHGC@HashTemplateClass?$DMclass?5StringCl@
	push	65					; 00000041H
	push	OFFSET ??_C@_0DN@EECEFMJH@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN20@Re_Hash
	xor	ecx, ecx
	jne	SHORT $LN17@Re_Hash
	push	65					; 00000041H
	push	OFFSET ??_C@_1HK@JEBHJDL@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN17@Re_Hash:
	mov	DWORD PTR tv131[ebp], 0
	jmp	SHORT $LN21@Re_Hash
$LN20@Re_Hash:
	mov	eax, DWORD PTR _newMaxHashCount$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	xor	ecx, ecx
	mov	eax, DWORD PTR $T1[ebp]
	mov	edx, 12					; 0000000cH
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN18@Re_Hash
	mov	ecx, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx], edx
	push	OFFSET ??0Entry@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	push	12					; 0000000cH
	mov	ecx, DWORD PTR $T2[ebp]
	add	ecx, 4
	push	ecx
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	edx, DWORD PTR $T2[ebp]
	add	edx, 4
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN19@Re_Hash
$LN18@Re_Hash:
	mov	DWORD PTR tv129[ebp], 0
$LN19@Re_Hash:
	mov	eax, DWORD PTR tv129[ebp]
	mov	DWORD PTR tv131[ebp], eax
$LN21@Re_Hash:
	mov	ecx, DWORD PTR tv131[ebp]
	mov	DWORD PTR _newEntries$[ebp], ecx

; 66   : 		int* newIndices = new int[newMaxHashCount];

	push	OFFSET ??_C@_0GC@DNMHHGC@HashTemplateClass?$DMclass?5StringCl@
	push	66					; 00000042H
	push	OFFSET ??_C@_0DN@EECEFMJH@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN23@Re_Hash
	xor	ecx, ecx
	jne	SHORT $LN22@Re_Hash
	push	66					; 00000042H
	push	OFFSET ??_C@_1HK@JEBHJDL@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN22@Re_Hash:
	mov	DWORD PTR tv148[ebp], 0
	jmp	SHORT $LN24@Re_Hash
$LN23@Re_Hash:
	xor	ecx, ecx
	mov	eax, DWORD PTR _newMaxHashCount$[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv148[ebp], eax
$LN24@Re_Hash:
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR _newIndices$[ebp], ecx

; 67   : 		unusedEntryIndex = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 68   : 		
; 69   : 		for (uint index = 0; index < newMaxHashCount; index++)

	mov	DWORD PTR _index$11[ebp], 0
	jmp	SHORT $LN12@Re_Hash
$LN11@Re_Hash:
	mov	eax, DWORD PTR _index$11[ebp]
	add	eax, 1
	mov	DWORD PTR _index$11[ebp], eax
$LN12@Re_Hash:
	mov	eax, DWORD PTR _index$11[ebp]
	cmp	eax, DWORD PTR _newMaxHashCount$[ebp]
	jae	SHORT $LN10@Re_Hash

; 70   : 			newIndices[index] = -1;

	mov	eax, DWORD PTR _index$11[ebp]
	mov	ecx, DWORD PTR _newIndices$[ebp]
	mov	DWORD PTR [ecx+eax*4], -1
	jmp	SHORT $LN11@Re_Hash
$LN10@Re_Hash:

; 71   : 		
; 72   : 		for (uint hash = 0; hash < maxHashCount; hash++)

	mov	DWORD PTR _hash$10[ebp], 0
	jmp	SHORT $LN9@Re_Hash
$LN8@Re_Hash:
	mov	eax, DWORD PTR _hash$10[ebp]
	add	eax, 1
	mov	DWORD PTR _hash$10[ebp], eax
$LN9@Re_Hash:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hash$10[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jae	$LN7@Re_Hash

; 73   : 		{
; 74   : 			for (int index = indices[hash]; index != -1; index = entries[index].next)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _hash$10[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _index$9[ebp], eax
	jmp	SHORT $LN6@Re_Hash
$LN5@Re_Hash:
	mov	eax, DWORD PTR _index$9[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax]
	mov	DWORD PTR _index$9[ebp], eax
$LN6@Re_Hash:
	cmp	DWORD PTR _index$9[ebp], -1
	je	$LN4@Re_Hash

; 75   : 			{
; 76   : 				uint hash2 = computeHash(entries[index].key, newMaxHashCount);

	mov	eax, DWORD PTR _newMaxHashCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$9[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR [eax+ecx+4]
	push	ecx
	call	?computeHash@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@CAIABVStringClass@@I@Z ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::computeHash
	add	esp, 8
	mov	DWORD PTR _hash2$8[ebp], eax

; 77   : 				
; 78   : 				newEntries[unusedEntryIndex].next = newIndices[hash2];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _newEntries$[ebp]
	mov	eax, DWORD PTR _hash2$8[ebp]
	mov	esi, DWORD PTR _newIndices$[ebp]
	mov	eax, DWORD PTR [esi+eax*4]
	mov	DWORD PTR [edx+ecx], eax

; 79   : 				newEntries[unusedEntryIndex].key = entries[index].key;

	mov	eax, DWORD PTR _index$9[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [edx+eax+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _newEntries$[ebp]
	lea	ecx, DWORD PTR [eax+edx+4]
	call	??4StringClass@@QAEABV0@ABV0@@Z		; StringClass::operator=

; 80   : 				newEntries[unusedEntryIndex].value = entries[index].value;

	mov	eax, DWORD PTR _index$9[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	imul	ecx, 12					; 0000000cH
	mov	esi, DWORD PTR _newEntries$[ebp]
	mov	edx, DWORD PTR [edx+eax+8]
	mov	DWORD PTR [esi+ecx+8], edx

; 81   : 				
; 82   : 				newIndices[hash2] = unusedEntryIndex;

	mov	eax, DWORD PTR _hash2$8[ebp]
	mov	ecx, DWORD PTR _newIndices$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+eax*4], edx

; 83   : 				unusedEntryIndex++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 84   : 			}

	jmp	$LN5@Re_Hash
$LN4@Re_Hash:

; 85   : 		}

	jmp	$LN8@Re_Hash
$LN7@Re_Hash:

; 86   : 		
; 87   : 		delete[] indices;

	push	OFFSET ??_C@_0GC@DNMHHGC@HashTemplateClass?$DMclass?5StringCl@
	push	87					; 00000057H
	push	OFFSET ??_C@_0DN@EECEFMJH@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN26@Re_Hash
	xor	ecx, ecx
	jne	SHORT $LN25@Re_Hash
	push	87					; 00000057H
	push	OFFSET ??_C@_1HK@JEBHJDL@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN25@Re_Hash:
	jmp	SHORT $LN27@Re_Hash
$LN26@Re_Hash:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T4[ebp], ecx
	mov	edx, DWORD PTR $T4[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN27@Re_Hash:

; 88   : 		delete[] entries;

	push	OFFSET ??_C@_0GC@DNMHHGC@HashTemplateClass?$DMclass?5StringCl@
	push	88					; 00000058H
	push	OFFSET ??_C@_0DN@EECEFMJH@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	eax, eax
	je	SHORT $LN31@Re_Hash
	xor	ecx, ecx
	jne	SHORT $LN28@Re_Hash
	push	88					; 00000058H
	push	OFFSET ??_C@_1HK@JEBHJDL@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN28@Re_Hash:
	jmp	SHORT $LN32@Re_Hash
$LN31@Re_Hash:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T5[ebp], edx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN29@Re_Hash
	push	3
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_EEntry@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEPAXI@Z
	mov	DWORD PTR tv230[ebp], eax
	jmp	SHORT $LN32@Re_Hash
$LN29@Re_Hash:
	mov	DWORD PTR tv230[ebp], 0
$LN32@Re_Hash:

; 89   : 		
; 90   : 		for (uint i = unusedEntryIndex; i < newMaxHashCount-1; i++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _i$7[ebp], ecx
	jmp	SHORT $LN3@Re_Hash
$LN2@Re_Hash:
	mov	eax, DWORD PTR _i$7[ebp]
	add	eax, 1
	mov	DWORD PTR _i$7[ebp], eax
$LN3@Re_Hash:
	mov	eax, DWORD PTR _newMaxHashCount$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _i$7[ebp], eax
	jae	SHORT $LN1@Re_Hash

; 91   : 			newEntries[i].next = i + 1;

	mov	eax, DWORD PTR _i$7[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _i$7[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _newEntries$[ebp]
	mov	DWORD PTR [edx+ecx], eax
	jmp	SHORT $LN2@Re_Hash
$LN1@Re_Hash:

; 92   : 	
; 93   : 		newEntries[newMaxHashCount-1].next = -1;

	mov	eax, DWORD PTR _newMaxHashCount$[ebp]
	sub	eax, 1
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _newEntries$[ebp]
	mov	DWORD PTR [ecx+eax], -1

; 94   : 		
; 95   : 		indices = newIndices;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newIndices$[ebp]
	mov	DWORD PTR [eax], ecx

; 96   : 		entries = newEntries;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newEntries$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 97   : 		maxHashCount = newMaxHashCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newMaxHashCount$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 98   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Re_Hash@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@AAEXXZ ENDP ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Re_Hash
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\hashtemplateclass.h
;	COMDAT ?computeHash@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@ABEIABVStringClass@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?computeHash@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@ABEIABVStringClass@@@Z PROC ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::computeHash, COMDAT
; _this$ = ecx

; 55   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return computeHash(key, maxHashCount);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	call	?computeHash@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@CAIABVStringClass@@I@Z ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::computeHash
	add	esp, 8

; 57   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?computeHash@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@ABEIABVStringClass@@@Z ENDP ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::computeHash
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\hashtemplateclass.h
;	COMDAT ?computeHash@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@CAIABVStringClass@@I@Z
_TEXT	SEGMENT
_key$ = 8						; size = 4
_maxHashCount$ = 12					; size = 4
?computeHash@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@CAIABVStringClass@@I@Z PROC ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::computeHash, COMDAT

; 47   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
$LN3@computeHas:

; 48   : 		TT_ASSERT(isPowerOfTwo(maxHashCount)); // Make sure maxHashCount is a power of two, or the fast modulo code below will not work

	xor	eax, eax
	jne	SHORT $LN3@computeHas
	mov	eax, DWORD PTR _maxHashCount$[ebp]
	push	eax
	call	?isPowerOfTwo@@YA_NH@Z			; isPowerOfTwo
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@computeHas
	int	3
$LN1@computeHas:

; 49   : 		return HashTemplateKeyClass<Key>::Get_Hash_Value(key) & (maxHashCount - 1);

	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	call	?Get_Hash_Value@?$HashTemplateKeyClass@VStringClass@@@@SAIABVStringClass@@@Z ; HashTemplateKeyClass<StringClass>::Get_Hash_Value
	add	esp, 4
	mov	ecx, DWORD PTR _maxHashCount$[ebp]
	sub	ecx, 1
	and	eax, ecx

; 50   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?computeHash@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@CAIABVStringClass@@I@Z ENDP ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::computeHash
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Get_Definition_Type@@YAKK@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
?Get_Definition_Type@@YAKK@Z PROC			; Get_Definition_Type, COMDAT

; 208  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 209  : 	return ((id - 4096) / 4096 << 12) + 4096;

	mov	eax, DWORD PTR _id$[ebp]
	sub	eax, 4096				; 00001000H
	shr	eax, 12					; 0000000cH
	shl	eax, 12					; 0000000cH
	add	eax, 4096				; 00001000H

; 210  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Definition_Type@@YAKK@Z ENDP			; Get_Definition_Type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Get_Super_Class_ID@@YAII@Z
_TEXT	SEGMENT
tv67 = -72						; size = 4
_result$ = -4						; size = 4
__class$ = 8						; size = 4
?Get_Super_Class_ID@@YAII@Z PROC			; Get_Super_Class_ID, COMDAT

; 28   : uint32 Get_Super_Class_ID(uint32 _class){

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 29   : 	int result;
; 30   : 	result = _class - 0x1000;

	mov	eax, DWORD PTR __class$[ebp]
	sub	eax, 4096				; 00001000H
	mov	DWORD PTR _result$[ebp], eax

; 31   : 	return ((((result < 0) ? (_class-1) : result) >> 12) << 12) + 0x1000;

	jns	SHORT $LN3@Get_Super_
	mov	eax, DWORD PTR __class$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv67[ebp], eax
	jmp	SHORT $LN4@Get_Super_
$LN3@Get_Super_:
	mov	ecx, DWORD PTR _result$[ebp]
	mov	DWORD PTR tv67[ebp], ecx
$LN4@Get_Super_:
	mov	eax, DWORD PTR tv67[ebp]
	shr	eax, 12					; 0000000cH
	shl	eax, 12					; 0000000cH
	add	eax, 4096				; 00001000H

; 32   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Super_Class_ID@@YAII@Z ENDP			; Get_Super_Class_ID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??__F_TheDefinitionMgr@@YAXXZ
text$yd	SEGMENT
??__F_TheDefinitionMgr@@YAXXZ PROC			; `dynamic atexit destructor for '_TheDefinitionMgr'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?_TheDefinitionMgr@@3VDefinitionMgrClass@@A ; _TheDefinitionMgr
	call	??1DefinitionMgrClass@@UAE@XZ		; DefinitionMgrClass::~DefinitionMgrClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__F_TheDefinitionMgr@@YAXXZ ENDP			; `dynamic atexit destructor for '_TheDefinitionMgr''
text$yd	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ??__E_TheDefinitionMgr@@YAXXZ
text$yc	SEGMENT
??__E_TheDefinitionMgr@@YAXXZ PROC			; `dynamic initializer for '_TheDefinitionMgr'', COMDAT

; 22   : DefinitionMgrClass _TheDefinitionMgr;

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET ?_TheDefinitionMgr@@3VDefinitionMgrClass@@A ; _TheDefinitionMgr
	call	??0DefinitionMgrClass@@QAE@XZ		; DefinitionMgrClass::DefinitionMgrClass
	push	OFFSET ??__F_TheDefinitionMgr@@YAXXZ	; `dynamic atexit destructor for '_TheDefinitionMgr''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_TheDefinitionMgr@@YAXXZ ENDP			; `dynamic initializer for '_TheDefinitionMgr''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GDefinitionMgrClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GDefinitionMgrClass@@UAEPAXI@Z PROC			; DefinitionMgrClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DefinitionMgrClass@@UAE@XZ		; DefinitionMgrClass::~DefinitionMgrClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDefinitionMgrClass@@UAEPAXI@Z ENDP			; DefinitionMgrClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.h
;	COMDAT ?Name@DefinitionMgrClass@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Name@DefinitionMgrClass@@UBEPBDXZ PROC			; DefinitionMgrClass::Name, COMDAT
; _this$ = ecx

; 84   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 85   : 		return "DefinitionMgrClass";

	mov	eax, OFFSET ??_C@_0BD@HGAKCENP@DefinitionMgrClass?$AA@

; 86   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Name@DefinitionMgrClass@@UBEPBDXZ ENDP			; DefinitionMgrClass::Name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Load@DefinitionMgrClass@@UAE_NAAVChunkLoadClass@@@Z
_TEXT	SEGMENT
tv87 = -76						; size = 4
tv78 = -76						; size = 4
tv70 = -76						; size = 4
_b$ = -5						; size = 1
_this$ = -4						; size = 4
_cload$ = 8						; size = 4
?Load@DefinitionMgrClass@@UAE_NAAVChunkLoadClass@@@Z PROC ; DefinitionMgrClass::Load, COMDAT
; _this$ = ecx

; 485  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 486  : 	bool b = true;

	mov	BYTE PTR _b$[ebp], 1
$LN6@Load:

; 487  : 	while (cload.Open_Chunk())

	mov	ecx, DWORD PTR _cload$[ebp]
	call	?Open_Chunk@ChunkLoadClass@@QAE_NXZ	; ChunkLoadClass::Open_Chunk
	movzx	eax, al
	test	eax, eax
	je	$LN5@Load

; 488  : 	{
; 489  : 		switch (cload.Cur_Chunk_ID())

	mov	ecx, DWORD PTR _cload$[ebp]
	call	?Cur_Chunk_ID@ChunkLoadClass@@QAEKXZ	; ChunkLoadClass::Cur_Chunk_ID
	mov	DWORD PTR tv70[ebp], eax
	cmp	DWORD PTR tv70[ebp], 256		; 00000100H
	je	SHORT $LN2@Load
	cmp	DWORD PTR tv70[ebp], 257		; 00000101H
	je	SHORT $LN1@Load
	jmp	SHORT $LN3@Load
$LN2@Load:

; 490  : 		{
; 491  : 		case 256:
; 492  : 			b = (b & Load_Variables(cload)) != 0;

	movzx	esi, BYTE PTR _b$[ebp]
	mov	eax, DWORD PTR _cload$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Load_Variables@DefinitionMgrClass@@QAE_NAAVChunkLoadClass@@@Z ; DefinitionMgrClass::Load_Variables
	movzx	ecx, al
	and	esi, ecx
	je	SHORT $LN9@Load
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN10@Load
$LN9@Load:
	mov	DWORD PTR tv78[ebp], 0
$LN10@Load:
	mov	dl, BYTE PTR tv78[ebp]
	mov	BYTE PTR _b$[ebp], dl

; 493  : 			break;

	jmp	SHORT $LN3@Load
$LN1@Load:

; 494  : 		case 257:
; 495  : 			b = (b & Load_Objects(cload)) != 0;

	movzx	esi, BYTE PTR _b$[ebp]
	mov	eax, DWORD PTR _cload$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Load_Objects@DefinitionMgrClass@@QAE_NAAVChunkLoadClass@@@Z ; DefinitionMgrClass::Load_Objects
	movzx	ecx, al
	and	esi, ecx
	je	SHORT $LN11@Load
	mov	DWORD PTR tv87[ebp], 1
	jmp	SHORT $LN12@Load
$LN11@Load:
	mov	DWORD PTR tv87[ebp], 0
$LN12@Load:
	mov	dl, BYTE PTR tv87[ebp]
	mov	BYTE PTR _b$[ebp], dl
$LN3@Load:

; 496  : 			break;
; 497  : 		}
; 498  : 		cload.Close_Chunk();

	mov	ecx, DWORD PTR _cload$[ebp]
	call	?Close_Chunk@ChunkLoadClass@@QAE_NXZ	; ChunkLoadClass::Close_Chunk

; 499  : 	}

	jmp	$LN6@Load
$LN5@Load:

; 500  : 	return b;

	mov	al, BYTE PTR _b$[ebp]

; 501  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Load@DefinitionMgrClass@@UAE_NAAVChunkLoadClass@@@Z ENDP ; DefinitionMgrClass::Load
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Save@DefinitionMgrClass@@UAE_NAAVChunkSaveClass@@@Z
_TEXT	SEGMENT
tv77 = -76						; size = 4
_b$ = -5						; size = 1
_this$ = -4						; size = 4
_csave$ = 8						; size = 4
?Save@DefinitionMgrClass@@UAE_NAAVChunkSaveClass@@@Z PROC ; DefinitionMgrClass::Save, COMDAT
; _this$ = ecx

; 474  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 475  : 	csave.Begin_Chunk(256);

	push	256					; 00000100H
	mov	ecx, DWORD PTR _csave$[ebp]
	call	?Begin_Chunk@ChunkSaveClass@@QAE_NK@Z	; ChunkSaveClass::Begin_Chunk

; 476  : 	Save_Variables(csave);

	mov	eax, DWORD PTR _csave$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Save_Variables@DefinitionMgrClass@@QAE_NAAVChunkSaveClass@@@Z ; DefinitionMgrClass::Save_Variables

; 477  : 	csave.End_Chunk();

	mov	ecx, DWORD PTR _csave$[ebp]
	call	?End_Chunk@ChunkSaveClass@@QAE_NXZ	; ChunkSaveClass::End_Chunk

; 478  : 	csave.Begin_Chunk(257);

	push	257					; 00000101H
	mov	ecx, DWORD PTR _csave$[ebp]
	call	?Begin_Chunk@ChunkSaveClass@@QAE_NK@Z	; ChunkSaveClass::Begin_Chunk

; 479  : 	bool b = (Save_Objects(csave) & 1) != 0;

	mov	eax, DWORD PTR _csave$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Save_Objects@DefinitionMgrClass@@QAE_NAAVChunkSaveClass@@@Z ; DefinitionMgrClass::Save_Objects
	movzx	ecx, al
	and	ecx, 1
	je	SHORT $LN3@Save
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN4@Save
$LN3@Save:
	mov	DWORD PTR tv77[ebp], 0
$LN4@Save:
	mov	dl, BYTE PTR tv77[ebp]
	mov	BYTE PTR _b$[ebp], dl

; 480  : 	csave.End_Chunk();

	mov	ecx, DWORD PTR _csave$[ebp]
	call	?End_Chunk@ChunkSaveClass@@QAE_NXZ	; ChunkSaveClass::End_Chunk

; 481  : 	return b;

	mov	al, BYTE PTR _b$[ebp]

; 482  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Save@DefinitionMgrClass@@UAE_NAAVChunkSaveClass@@@Z ENDP ; DefinitionMgrClass::Save
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.h
;	COMDAT ?Contains_Data@DefinitionMgrClass@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Contains_Data@DefinitionMgrClass@@UBE_NXZ PROC		; DefinitionMgrClass::Contains_Data, COMDAT
; _this$ = ecx

; 78   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 79   : 		return true;

	mov	al, 1

; 80   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Contains_Data@DefinitionMgrClass@@UBE_NXZ ENDP		; DefinitionMgrClass::Contains_Data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.h
;	COMDAT ?Chunk_ID@DefinitionMgrClass@@UBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Chunk_ID@DefinitionMgrClass@@UBEIXZ PROC		; DefinitionMgrClass::Chunk_ID, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 75   : 		return 0x101;

	mov	eax, 257				; 00000101H

; 76   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Chunk_ID@DefinitionMgrClass@@UBEIXZ ENDP		; DefinitionMgrClass::Chunk_ID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ??1DefinitionMgrClass@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1DefinitionMgrClass@@UAE@XZ PROC			; DefinitionMgrClass::~DefinitionMgrClass, COMDAT
; _this$ = ecx

; 469  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DefinitionMgrClass@@6B@

; 470  : 	Free_Definitions();

	call	?Free_Definitions@DefinitionMgrClass@@SAXXZ ; DefinitionMgrClass::Free_Definitions

; 471  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SaveLoadSubSystemClass@@UAE@XZ	; SaveLoadSubSystemClass::~SaveLoadSubSystemClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1DefinitionMgrClass@@UAE@XZ ENDP			; DefinitionMgrClass::~DefinitionMgrClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Load_Variables@DefinitionMgrClass@@QAE_NAAVChunkLoadClass@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cload$ = 8						; size = 4
?Load_Variables@DefinitionMgrClass@@QAE_NAAVChunkLoadClass@@@Z PROC ; DefinitionMgrClass::Load_Variables, COMDAT
; _this$ = ecx

; 464  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 465  : 	return true;

	mov	al, 1

; 466  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Load_Variables@DefinitionMgrClass@@QAE_NAAVChunkLoadClass@@@Z ENDP ; DefinitionMgrClass::Load_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Save_Variables@DefinitionMgrClass@@QAE_NAAVChunkSaveClass@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_csave$ = 8						; size = 4
?Save_Variables@DefinitionMgrClass@@QAE_NAAVChunkSaveClass@@@Z PROC ; DefinitionMgrClass::Save_Variables, COMDAT
; _this$ = ecx

; 459  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 460  : 	return true;

	mov	al, 1

; 461  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Save_Variables@DefinitionMgrClass@@QAE_NAAVChunkSaveClass@@@Z ENDP ; DefinitionMgrClass::Save_Variables
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Load_Objects@DefinitionMgrClass@@QAE_NAAVChunkLoadClass@@@Z
_TEXT	SEGMENT
_i$1 = -16						; size = 4
_def$2 = -12						; size = 4
_factory$3 = -8						; size = 4
_this$ = -4						; size = 4
_cload$ = 8						; size = 4
?Load_Objects@DefinitionMgrClass@@QAE_NAAVChunkLoadClass@@@Z PROC ; DefinitionMgrClass::Load_Objects, COMDAT
; _this$ = ecx

; 432  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
$LN8@Load_Objec:

; 433  : 	while (cload.Open_Chunk())

	mov	ecx, DWORD PTR _cload$[ebp]
	call	?Open_Chunk@ChunkLoadClass@@QAE_NXZ	; ChunkLoadClass::Open_Chunk
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@Load_Objec

; 434  : 	{
; 435  : 		PersistFactoryClass *factory = SaveLoadSystemClass::Find_Persist_Factory(cload.Cur_Chunk_ID());

	mov	ecx, DWORD PTR _cload$[ebp]
	call	?Cur_Chunk_ID@ChunkLoadClass@@QAEKXZ	; ChunkLoadClass::Cur_Chunk_ID
	push	eax
	call	?Find_Persist_Factory@SaveLoadSystemClass@@SAPAVPersistFactoryClass@@I@Z ; SaveLoadSystemClass::Find_Persist_Factory
	add	esp, 4
	mov	DWORD PTR _factory$3[ebp], eax

; 436  : 		if (factory)

	cmp	DWORD PTR _factory$3[ebp], 0
	je	SHORT $LN6@Load_Objec

; 437  : 		{
; 438  : 			DefinitionClass *def = (DefinitionClass *)factory->Load(cload);

	mov	eax, DWORD PTR _cload$[ebp]
	push	eax
	mov	ecx, DWORD PTR _factory$3[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _factory$3[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	DWORD PTR _def$2[ebp], eax

; 439  : 			if (def)

	cmp	DWORD PTR _def$2[ebp], 0
	je	SHORT $LN6@Load_Objec

; 440  : 			{
; 441  : 				Prepare_Definition_Array();

	call	?Prepare_Definition_Array@DefinitionMgrClass@@SAXXZ ; DefinitionMgrClass::Prepare_Definition_Array

; 442  : 				_SortedDefinitionArray[_DefinitionCount++] = def;

	mov	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR _def$2[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
	mov	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	add	eax, 1
	mov	DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA, eax ; DefinitionMgrClass::_DefinitionCount
$LN6@Load_Objec:

; 443  : 			}
; 444  : 		}
; 445  : 		cload.Close_Chunk();

	mov	ecx, DWORD PTR _cload$[ebp]
	call	?Close_Chunk@ChunkLoadClass@@QAE_NXZ	; ChunkLoadClass::Close_Chunk

; 446  : 	}

	jmp	SHORT $LN8@Load_Objec
$LN7@Load_Objec:

; 447  : 	if (_DefinitionCount > 0)

	cmp	DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA, 0 ; DefinitionMgrClass::_DefinitionCount
	jle	SHORT $LN4@Load_Objec

; 448  : 	{
; 449  : 		qsort(_SortedDefinitionArray,_DefinitionCount,sizeof(DefinitionClass *),fnCompareDefinitionsCallback);

	push	OFFSET ?fnCompareDefinitionsCallback@DefinitionMgrClass@@SAHPBX0@Z ; DefinitionMgrClass::fnCompareDefinitionsCallback
	push	4
	mov	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	push	eax
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	push	ecx
	call	DWORD PTR __imp__qsort
	add	esp, 16					; 00000010H
$LN4@Load_Objec:

; 450  : 	}
; 451  : 	for (int i = 0;i < _DefinitionCount;i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN3@Load_Objec
$LN2@Load_Objec:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN3@Load_Objec:
	mov	eax, DWORD PTR _i$1[ebp]
	cmp	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	jge	SHORT $LN1@Load_Objec

; 452  : 	{
; 453  : 		_SortedDefinitionArray[i]->m_DefinitionMgrLink = i;

	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _i$1[ebp]
	mov	DWORD PTR [edx+8], eax

; 454  : 	}

	jmp	SHORT $LN2@Load_Objec
$LN1@Load_Objec:

; 455  : 	return true;

	mov	al, 1

; 456  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Load_Objects@DefinitionMgrClass@@QAE_NAAVChunkLoadClass@@@Z ENDP ; DefinitionMgrClass::Load_Objects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Save_Objects@DefinitionMgrClass@@QAE_NAAVChunkSaveClass@@@Z
_TEXT	SEGMENT
tv128 = -80						; size = 4
tv83 = -80						; size = 4
_def$1 = -12						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
_csave$ = 8						; size = 4
?Save_Objects@DefinitionMgrClass@@QAE_NAAVChunkSaveClass@@@Z PROC ; DefinitionMgrClass::Save_Objects, COMDAT
; _this$ = ecx

; 414  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 415  : 	for (int i = 0;i < _DefinitionCount;i++)

	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN5@Save_Objec
$LN4@Save_Objec:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
$LN5@Save_Objec:
	mov	eax, DWORD PTR _i$2[ebp]
	cmp	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	jge	SHORT $LN3@Save_Objec

; 416  : 	{
; 417  : 		DefinitionClass *def = _SortedDefinitionArray[i];

	mov	eax, DWORD PTR _i$2[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _def$1[ebp], edx

; 418  : 		if (def)

	cmp	DWORD PTR _def$1[ebp], 0
	je	SHORT $LN2@Save_Objec

; 419  : 		{
; 420  : 			if (def->m_SaveEnabled)

	mov	eax, DWORD PTR _def$1[ebp]
	movzx	ecx, BYTE PTR [eax+24]
	test	ecx, ecx
	je	SHORT $LN2@Save_Objec

; 421  : 			{
; 422  : 				csave.Begin_Chunk(def->Get_Factory().Chunk_ID());

	mov	eax, DWORD PTR _def$1[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _def$1[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	DWORD PTR tv83[ebp], eax
	mov	ecx, DWORD PTR tv83[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv83[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _csave$[ebp]
	call	?Begin_Chunk@ChunkSaveClass@@QAE_NK@Z	; ChunkSaveClass::Begin_Chunk

; 423  : 				def->Get_Factory().Save(csave,def);

	mov	eax, DWORD PTR _def$1[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _def$1[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	mov	DWORD PTR tv128[ebp], eax
	mov	ecx, DWORD PTR _def$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _csave$[ebp]
	push	edx
	mov	eax, DWORD PTR tv128[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv128[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 424  : 				csave.End_Chunk();

	mov	ecx, DWORD PTR _csave$[ebp]
	call	?End_Chunk@ChunkSaveClass@@QAE_NXZ	; ChunkSaveClass::End_Chunk
$LN2@Save_Objec:

; 425  : 			}
; 426  : 		}
; 427  : 	}

	jmp	$LN4@Save_Objec
$LN3@Save_Objec:

; 428  : 	return true;

	mov	al, 1

; 429  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Save_Objects@DefinitionMgrClass@@QAE_NAAVChunkSaveClass@@@Z ENDP ; DefinitionMgrClass::Save_Objects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ??0DefinitionMgrClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0DefinitionMgrClass@@QAE@XZ PROC			; DefinitionMgrClass::DefinitionMgrClass, COMDAT
; _this$ = ecx

; 410  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0SaveLoadSubSystemClass@@QAE@XZ	; SaveLoadSubSystemClass::SaveLoadSubSystemClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DefinitionMgrClass@@6B@

; 411  : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0DefinitionMgrClass@@QAE@XZ ENDP			; DefinitionMgrClass::DefinitionMgrClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?fnCompareDefinitionsCallback@DefinitionMgrClass@@SAHPBX0@Z
_TEXT	SEGMENT
tv82 = -80						; size = 4
_ret$ = -12						; size = 4
_d2$ = -8						; size = 4
_d1$ = -4						; size = 4
_elem1$ = 8						; size = 4
_elem2$ = 12						; size = 4
?fnCompareDefinitionsCallback@DefinitionMgrClass@@SAHPBX0@Z PROC ; DefinitionMgrClass::fnCompareDefinitionsCallback, COMDAT

; 330  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi

; 331  : 	DefinitionClass *d1 = *(DefinitionClass **)elem1;

	mov	eax, DWORD PTR _elem1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _d1$[ebp], ecx

; 332  : 	DefinitionClass *d2 = *(DefinitionClass **)elem2;

	mov	eax, DWORD PTR _elem2$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _d2$[ebp], ecx

; 333  : 	int ret = 1;

	mov	DWORD PTR _ret$[ebp], 1

; 334  : 	if (d1->Get_ID() <= d2->Get_ID())

	mov	eax, DWORD PTR _d1$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _d1$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	mov	esi, eax
	mov	ecx, DWORD PTR _d2$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _d2$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, eax
	ja	SHORT $LN1@fnCompareD

; 335  : 	{
; 336  : 		ret = -(d1->Get_ID() < d2->Get_ID());

	mov	eax, DWORD PTR _d1$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _d1$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	mov	esi, eax
	mov	ecx, DWORD PTR _d2$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _d2$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, eax
	jae	SHORT $LN4@fnCompareD
	mov	DWORD PTR tv82[ebp], 1
	jmp	SHORT $LN5@fnCompareD
$LN4@fnCompareD:
	mov	DWORD PTR tv82[ebp], 0
$LN5@fnCompareD:
	mov	ecx, DWORD PTR tv82[ebp]
	neg	ecx
	mov	DWORD PTR _ret$[ebp], ecx
$LN1@fnCompareD:

; 337  : 	}
; 338  : 	return ret;

	mov	eax, DWORD PTR _ret$[ebp]

; 339  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?fnCompareDefinitionsCallback@DefinitionMgrClass@@SAHPBX0@Z ENDP ; DefinitionMgrClass::fnCompareDefinitionsCallback
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Prepare_Definition_Array@DefinitionMgrClass@@SAXXZ
_TEXT	SEGMENT
tv151 = -92						; size = 4
tv153 = -88						; size = 4
tv85 = -88						; size = 4
$T1 = -84						; size = 4
$T2 = -80						; size = 4
$T3 = -76						; size = 4
_newarray$4 = -8					; size = 4
_newmaxdefcount$5 = -4					; size = 4
?Prepare_Definition_Array@DefinitionMgrClass@@SAXXZ PROC ; DefinitionMgrClass::Prepare_Definition_Array, COMDAT

; 310  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi

; 311  : 	if (_DefinitionCount + 1 > _MaxDefinitionCount)

	mov	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	add	eax, 1
	cmp	eax, DWORD PTR ?_MaxDefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_MaxDefinitionCount
	jle	$LN3@Prepare_De

; 312  : 	{
; 313  : 		int newmaxdefcount = _MaxDefinitionCount + 1000;

	mov	eax, DWORD PTR ?_MaxDefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_MaxDefinitionCount
	add	eax, 1000				; 000003e8H
	mov	DWORD PTR _newmaxdefcount$5[ebp], eax

; 314  : 		DefinitionClass **newarray = new DefinitionClass *[newmaxdefcount];

	push	OFFSET ??_C@_0CN@JIIKJGD@DefinitionMgrClass?3?3Prepare_Defi@
	mov	eax, DWORD PTR ?__LINE__Var@?1??Prepare_Definition_Array@DefinitionMgrClass@@SAXXZ@4JA@b2101402
	add	eax, 4
	push	eax
	push	OFFSET ??_C@_0EA@OOLMHBDI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	ecx, ecx
	je	SHORT $LN7@Prepare_De
	xor	edx, edx
	jne	SHORT $LN6@Prepare_De
	mov	eax, DWORD PTR ?__LINE__Var@?1??Prepare_Definition_Array@DefinitionMgrClass@@SAXXZ@4JA@b2101402
	add	eax, 4
	push	eax
	push	OFFSET ??_C@_1IA@CONNEFNJ@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN6@Prepare_De:
	mov	DWORD PTR tv85[ebp], 0
	jmp	SHORT $LN8@Prepare_De
$LN7@Prepare_De:
	xor	ecx, ecx
	mov	eax, DWORD PTR _newmaxdefcount$5[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv85[ebp], eax
$LN8@Prepare_De:
	mov	ecx, DWORD PTR tv85[ebp]
	mov	DWORD PTR _newarray$4[ebp], ecx

; 315  : 		memcpy(newarray,_SortedDefinitionArray,_DefinitionCount * sizeof(DefinitionClass *));

	mov	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	push	ecx
	mov	edx, DWORD PTR _newarray$4[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 316  : 		if (_SortedDefinitionArray)

	cmp	DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A, 0 ; DefinitionMgrClass::_SortedDefinitionArray
	je	SHORT $LN2@Prepare_De

; 317  : 		{
; 318  : 			delete[] _SortedDefinitionArray;

	push	OFFSET ??_C@_0CN@JIIKJGD@DefinitionMgrClass?3?3Prepare_Defi@
	mov	eax, DWORD PTR ?__LINE__Var@?1??Prepare_Definition_Array@DefinitionMgrClass@@SAXXZ@4JA@b2101402
	add	eax, 8
	push	eax
	push	OFFSET ??_C@_0EA@OOLMHBDI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	ecx, ecx
	je	SHORT $LN10@Prepare_De
	xor	edx, edx
	jne	SHORT $LN9@Prepare_De
	mov	eax, DWORD PTR ?__LINE__Var@?1??Prepare_Definition_Array@DefinitionMgrClass@@SAXXZ@4JA@b2101402
	add	eax, 8
	push	eax
	push	OFFSET ??_C@_1IA@CONNEFNJ@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN9@Prepare_De:
	jmp	SHORT $LN2@Prepare_De
$LN10@Prepare_De:
	mov	edx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@Prepare_De:

; 319  : 		}
; 320  : 		_SortedDefinitionArray = newarray;

	mov	eax, DWORD PTR _newarray$4[ebp]
	mov	DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A, eax ; DefinitionMgrClass::_SortedDefinitionArray

; 321  : 		_MaxDefinitionCount = newmaxdefcount;

	mov	eax, DWORD PTR _newmaxdefcount$5[ebp]
	mov	DWORD PTR ?_MaxDefinitionCount@DefinitionMgrClass@@0HA, eax ; DefinitionMgrClass::_MaxDefinitionCount
$LN3@Prepare_De:

; 322  : 	}
; 323  : 	if (!DefinitionHash)

	cmp	DWORD PTR ?DefinitionHash@DefinitionMgrClass@@0PAV?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@A, 0 ; DefinitionMgrClass::DefinitionHash
	jne	SHORT $LN4@Prepare_De

; 324  : 	{
; 325  : 		DefinitionHash = new HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>();

	push	OFFSET ??_C@_0CN@JIIKJGD@DefinitionMgrClass?3?3Prepare_Defi@
	mov	eax, DWORD PTR ?__LINE__Var@?1??Prepare_Definition_Array@DefinitionMgrClass@@SAXXZ@4JA@b2101402
	add	eax, 15					; 0000000fH
	push	eax
	push	OFFSET ??_C@_0EA@OOLMHBDI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	ecx, ecx
	je	SHORT $LN15@Prepare_De
	xor	edx, edx
	jne	SHORT $LN12@Prepare_De
	mov	eax, DWORD PTR ?__LINE__Var@?1??Prepare_Definition_Array@DefinitionMgrClass@@SAXXZ@4JA@b2101402
	add	eax, 15					; 0000000fH
	push	eax
	push	OFFSET ??_C@_1IA@CONNEFNJ@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN12@Prepare_De:
	mov	DWORD PTR tv153[ebp], 0
	jmp	SHORT $LN16@Prepare_De
$LN15@Prepare_De:
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN13@Prepare_De
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@XZ ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>
	mov	DWORD PTR tv151[ebp], eax
	jmp	SHORT $LN14@Prepare_De
$LN13@Prepare_De:
	mov	DWORD PTR tv151[ebp], 0
$LN14@Prepare_De:
	mov	edx, DWORD PTR tv151[ebp]
	mov	DWORD PTR tv153[ebp], edx
$LN16@Prepare_De:
	mov	eax, DWORD PTR tv153[ebp]
	mov	DWORD PTR ?DefinitionHash@DefinitionMgrClass@@0PAV?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@A, eax ; DefinitionMgrClass::DefinitionHash
$LN4@Prepare_De:

; 326  : 	}
; 327  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Prepare_Definition_Array@DefinitionMgrClass@@SAXXZ ENDP ; DefinitionMgrClass::Prepare_Definition_Array
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Free_Definitions@DefinitionMgrClass@@SAXXZ
_TEXT	SEGMENT
tv172 = -112						; size = 4
tv143 = -112						; size = 4
tv94 = -112						; size = 4
$T1 = -108						; size = 4
$T2 = -104						; size = 4
$T3 = -100						; size = 4
$T4 = -96						; size = 4
$T5 = -92						; size = 4
$T6 = -88						; size = 4
$T7 = -84						; size = 4
_i$8 = -16						; size = 4
_iter$9 = -12						; size = 12
?Free_Definitions@DefinitionMgrClass@@SAXXZ PROC	; DefinitionMgrClass::Free_Definitions, COMDAT

; 280  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 112				; 00000070H
	push	ebx
	push	esi
	push	edi

; 281  : 	if (DefinitionHash)

	cmp	DWORD PTR ?DefinitionHash@DefinitionMgrClass@@0PAV?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@A, 0 ; DefinitionMgrClass::DefinitionHash
	je	$LN9@Free_Defin

; 282  : 	{
; 283  : 		for (HashTemplateIterator<StringClass, DynamicVectorClass<DefinitionClass*>*> iter(*DefinitionHash); iter; ++iter)

	mov	eax, DWORD PTR ?DefinitionHash@DefinitionMgrClass@@0PAV?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@A ; DefinitionMgrClass::DefinitionHash
	push	eax
	lea	ecx, DWORD PTR _iter$9[ebp]
	call	??0?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAE@AAV?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@@Z ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>
	jmp	SHORT $LN8@Free_Defin
$LN7@Free_Defin:
	lea	ecx, DWORD PTR _iter$9[ebp]
	call	??E?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXXZ ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::operator++
$LN8@Free_Defin:
	lea	ecx, DWORD PTR _iter$9[ebp]
	call	??B?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QBE_NXZ ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@Free_Defin

; 284  : 			delete iter.getValue();

	push	OFFSET ??_C@_0CF@FJKBDLNG@DefinitionMgrClass?3?3Free_Definit@
	mov	eax, DWORD PTR ?__LINE__Var@?1??Free_Definitions@DefinitionMgrClass@@SAXXZ@4JA@b2101402
	add	eax, 4
	push	eax
	push	OFFSET ??_C@_0EA@OOLMHBDI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	ecx, ecx
	je	SHORT $LN15@Free_Defin
	xor	edx, edx
	jne	SHORT $LN12@Free_Defin
	mov	eax, DWORD PTR ?__LINE__Var@?1??Free_Definitions@DefinitionMgrClass@@SAXXZ@4JA@b2101402
	add	eax, 4
	push	eax
	push	OFFSET ??_C@_1IA@CONNEFNJ@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN12@Free_Defin:
	jmp	SHORT $LN16@Free_Defin
$LN15@Free_Defin:
	lea	ecx, DWORD PTR _iter$9[ebp]
	call	?getValue@?$HashTemplateIterator@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEAAPAV?$DynamicVectorClass@PAVDefinitionClass@@@@XZ ; HashTemplateIterator<StringClass,DynamicVectorClass<DefinitionClass *> *>::getValue
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN13@Free_Defin
	push	1
	mov	ecx, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN16@Free_Defin
$LN13@Free_Defin:
	mov	DWORD PTR tv94[ebp], 0
$LN16@Free_Defin:
	jmp	$LN7@Free_Defin
$LN6@Free_Defin:

; 285  : 		
; 286  : 		DefinitionHash->Remove_All();

	mov	ecx, DWORD PTR ?DefinitionHash@DefinitionMgrClass@@0PAV?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@A ; DefinitionMgrClass::DefinitionHash
	call	?Remove_All@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXXZ ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Remove_All

; 287  : 		delete DefinitionHash;

	push	OFFSET ??_C@_0CF@FJKBDLNG@DefinitionMgrClass?3?3Free_Definit@
	mov	eax, DWORD PTR ?__LINE__Var@?1??Free_Definitions@DefinitionMgrClass@@SAXXZ@4JA@b2101402
	add	eax, 7
	push	eax
	push	OFFSET ??_C@_0EA@OOLMHBDI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	ecx, ecx
	je	SHORT $LN20@Free_Defin
	xor	edx, edx
	jne	SHORT $LN17@Free_Defin
	mov	eax, DWORD PTR ?__LINE__Var@?1??Free_Definitions@DefinitionMgrClass@@SAXXZ@4JA@b2101402
	add	eax, 7
	push	eax
	push	OFFSET ??_C@_1IA@CONNEFNJ@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN17@Free_Defin:
	jmp	SHORT $LN21@Free_Defin
$LN20@Free_Defin:
	mov	edx, DWORD PTR ?DefinitionHash@DefinitionMgrClass@@0PAV?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@A ; DefinitionMgrClass::DefinitionHash
	mov	DWORD PTR $T4[ebp], edx
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR $T3[ebp], eax
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN18@Free_Defin
	push	1
	mov	ecx, DWORD PTR $T3[ebp]
	call	??_G?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEPAXI@Z
	mov	DWORD PTR tv143[ebp], eax
	jmp	SHORT $LN21@Free_Defin
$LN18@Free_Defin:
	mov	DWORD PTR tv143[ebp], 0
$LN21@Free_Defin:

; 288  : 		DefinitionHash = 0;

	mov	DWORD PTR ?DefinitionHash@DefinitionMgrClass@@0PAV?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@A, 0 ; DefinitionMgrClass::DefinitionHash
$LN9@Free_Defin:

; 289  : 	}
; 290  : 	for (int i = 0;i < _DefinitionCount;i++)

	mov	DWORD PTR _i$8[ebp], 0
	jmp	SHORT $LN5@Free_Defin
$LN4@Free_Defin:
	mov	eax, DWORD PTR _i$8[ebp]
	add	eax, 1
	mov	DWORD PTR _i$8[ebp], eax
$LN5@Free_Defin:
	mov	eax, DWORD PTR _i$8[ebp]
	cmp	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	jge	$LN3@Free_Defin

; 291  : 	{
; 292  : 		if (_SortedDefinitionArray[i])

	mov	eax, DWORD PTR _i$8[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	cmp	DWORD PTR [ecx+eax*4], 0
	je	SHORT $LN2@Free_Defin

; 293  : 		{
; 294  : 			delete _SortedDefinitionArray[i];

	push	OFFSET ??_C@_0CF@FJKBDLNG@DefinitionMgrClass?3?3Free_Definit@
	mov	eax, DWORD PTR ?__LINE__Var@?1??Free_Definitions@DefinitionMgrClass@@SAXXZ@4JA@b2101402
	add	eax, 14					; 0000000eH
	push	eax
	push	OFFSET ??_C@_0EA@OOLMHBDI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	ecx, ecx
	je	SHORT $LN25@Free_Defin
	xor	edx, edx
	jne	SHORT $LN22@Free_Defin
	mov	eax, DWORD PTR ?__LINE__Var@?1??Free_Definitions@DefinitionMgrClass@@SAXXZ@4JA@b2101402
	add	eax, 14					; 0000000eH
	push	eax
	push	OFFSET ??_C@_1IA@CONNEFNJ@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN22@Free_Defin:
	jmp	SHORT $LN2@Free_Defin
$LN25@Free_Defin:
	mov	edx, DWORD PTR _i$8[ebp]
	mov	eax, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T6[ebp], ecx
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T5[ebp], edx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN23@Free_Defin
	push	1
	mov	eax, DWORD PTR $T5[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T5[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv172[ebp], eax
	jmp	SHORT $LN2@Free_Defin
$LN23@Free_Defin:
	mov	DWORD PTR tv172[ebp], 0
$LN2@Free_Defin:

; 295  : 		}
; 296  : 	}

	jmp	$LN4@Free_Defin
$LN3@Free_Defin:

; 297  : 	if (_SortedDefinitionArray)

	cmp	DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A, 0 ; DefinitionMgrClass::_SortedDefinitionArray
	je	SHORT $LN1@Free_Defin

; 298  : 	{
; 299  : 		delete[] _SortedDefinitionArray;

	push	OFFSET ??_C@_0CF@FJKBDLNG@DefinitionMgrClass?3?3Free_Definit@
	mov	eax, DWORD PTR ?__LINE__Var@?1??Free_Definitions@DefinitionMgrClass@@SAXXZ@4JA@b2101402
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET ??_C@_0EA@OOLMHBDI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	ecx, ecx
	je	SHORT $LN28@Free_Defin
	xor	edx, edx
	jne	SHORT $LN27@Free_Defin
	mov	eax, DWORD PTR ?__LINE__Var@?1??Free_Definitions@DefinitionMgrClass@@SAXXZ@4JA@b2101402
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET ??_C@_1IA@CONNEFNJ@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN27@Free_Defin:
	jmp	SHORT $LN1@Free_Defin
$LN28@Free_Defin:
	mov	edx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	DWORD PTR $T7[ebp], edx
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN1@Free_Defin:

; 300  : 	}
; 301  : 	_SortedDefinitionArray = 0;

	mov	DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A, 0 ; DefinitionMgrClass::_SortedDefinitionArray

; 302  : 	_MaxDefinitionCount = 0;

	mov	DWORD PTR ?_MaxDefinitionCount@DefinitionMgrClass@@0HA, 0 ; DefinitionMgrClass::_MaxDefinitionCount

; 303  : 	_DefinitionCount = 0;

	mov	DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA, 0 ; DefinitionMgrClass::_DefinitionCount

; 304  : #ifdef TT_EXPORTS
; 305  : 	AntiCheatMgr::OnFreeDefinitions();
; 306  : #endif
; 307  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Free_Definitions@DefinitionMgrClass@@SAXXZ ENDP	; DefinitionMgrClass::Free_Definitions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Get_Next@DefinitionMgrClass@@SAPAVDefinitionClass@@PAV2@@Z
_TEXT	SEGMENT
_curr_def$ = 8						; size = 4
?Get_Next@DefinitionMgrClass@@SAPAVDefinitionClass@@PAV2@@Z PROC ; DefinitionMgrClass::Get_Next, COMDAT

; 401  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 402  : 	if (curr_def->m_DefinitionMgrLink + 1 < _DefinitionCount)

	mov	eax, DWORD PTR _curr_def$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	cmp	ecx, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	jge	SHORT $LN1@Get_Next

; 403  : 	{
; 404  : 		return _SortedDefinitionArray[curr_def->m_DefinitionMgrLink + 1];

	mov	eax, DWORD PTR _curr_def$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	eax, DWORD PTR [edx+ecx*4+4]
	jmp	SHORT $LN2@Get_Next
$LN1@Get_Next:

; 405  : 	}
; 406  : 	return 0;

	xor	eax, eax
$LN2@Get_Next:

; 407  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Next@DefinitionMgrClass@@SAPAVDefinitionClass@@PAV2@@Z ENDP ; DefinitionMgrClass::Get_Next
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Get_Next@DefinitionMgrClass@@SAPAVDefinitionClass@@PAV2@IW4ID_TYPE@1@@Z
_TEXT	SEGMENT
_i$1 = -4						; size = 4
_curr_def$ = 8						; size = 4
_id$ = 12						; size = 4
_type$ = 16						; size = 4
?Get_Next@DefinitionMgrClass@@SAPAVDefinitionClass@@PAV2@IW4ID_TYPE@1@@Z PROC ; DefinitionMgrClass::Get_Next, COMDAT

; 386  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 387  : 	for (int i = curr_def->m_DefinitionMgrLink + 1;i < _DefinitionCount;i++)

	mov	eax, DWORD PTR _curr_def$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	DWORD PTR _i$1[ebp], ecx
	jmp	SHORT $LN7@Get_Next
$LN6@Get_Next:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN7@Get_Next:
	mov	eax, DWORD PTR _i$1[ebp]
	cmp	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	jge	$LN5@Get_Next

; 388  : 	{
; 389  : 		if (_SortedDefinitionArray[i])

	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	cmp	DWORD PTR [ecx+eax*4], 0
	je	SHORT $LN4@Get_Next

; 390  : 		{
; 391  : 		if (type == ID_SUPERCLASS && Get_Super_Class_ID(_SortedDefinitionArray[i]->Get_Class_ID()) == id)

	cmp	DWORD PTR _type$[ebp], 2
	jne	SHORT $LN3@Get_Next
	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	push	eax
	call	?Get_Super_Class_ID@@YAII@Z		; Get_Super_Class_ID
	add	esp, 4
	cmp	eax, DWORD PTR _id$[ebp]
	jne	SHORT $LN3@Get_Next

; 392  : 			return _SortedDefinitionArray[i];

	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	eax, DWORD PTR [ecx+eax*4]
	jmp	SHORT $LN8@Get_Next
	jmp	SHORT $LN4@Get_Next
$LN3@Get_Next:

; 393  : 		else if (type == ID_CLASS && _SortedDefinitionArray[i]->Get_Class_ID() == id)

	cmp	DWORD PTR _type$[ebp], 1
	jne	SHORT $LN4@Get_Next
	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	eax, DWORD PTR _id$[ebp]
	jne	SHORT $LN4@Get_Next

; 394  : 			return _SortedDefinitionArray[i];

	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	eax, DWORD PTR [ecx+eax*4]
	jmp	SHORT $LN8@Get_Next
$LN4@Get_Next:

; 395  : 		}
; 396  : 	}

	jmp	$LN6@Get_Next
$LN5@Get_Next:

; 397  : 	return 0;

	xor	eax, eax
$LN8@Get_Next:

; 398  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Next@DefinitionMgrClass@@SAPAVDefinitionClass@@PAV2@IW4ID_TYPE@1@@Z ENDP ; DefinitionMgrClass::Get_Next
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Get_First@DefinitionMgrClass@@SAPAVDefinitionClass@@IW4ID_TYPE@1@@Z
_TEXT	SEGMENT
_i$1 = -4						; size = 4
_id$ = 8						; size = 4
_type$ = 12						; size = 4
?Get_First@DefinitionMgrClass@@SAPAVDefinitionClass@@IW4ID_TYPE@1@@Z PROC ; DefinitionMgrClass::Get_First, COMDAT

; 371  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 372  : 	for (int i = 0;i < _DefinitionCount;i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN7@Get_First
$LN6@Get_First:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN7@Get_First:
	mov	eax, DWORD PTR _i$1[ebp]
	cmp	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	jge	$LN5@Get_First

; 373  : 	{
; 374  : 		if (_SortedDefinitionArray[i])

	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	cmp	DWORD PTR [ecx+eax*4], 0
	je	SHORT $LN4@Get_First

; 375  : 		{
; 376  : 			if (type == ID_SUPERCLASS && Get_Super_Class_ID(_SortedDefinitionArray[i]->Get_Class_ID()) == id)

	cmp	DWORD PTR _type$[ebp], 2
	jne	SHORT $LN3@Get_First
	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	push	eax
	call	?Get_Super_Class_ID@@YAII@Z		; Get_Super_Class_ID
	add	esp, 4
	cmp	eax, DWORD PTR _id$[ebp]
	jne	SHORT $LN3@Get_First

; 377  : 				return _SortedDefinitionArray[i];

	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	eax, DWORD PTR [ecx+eax*4]
	jmp	SHORT $LN8@Get_First
	jmp	SHORT $LN4@Get_First
$LN3@Get_First:

; 378  : 			else if (type == ID_CLASS && _SortedDefinitionArray[i]->Get_Class_ID() == id)

	cmp	DWORD PTR _type$[ebp], 1
	jne	SHORT $LN4@Get_First
	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	eax, DWORD PTR _id$[ebp]
	jne	SHORT $LN4@Get_First

; 379  : 				return _SortedDefinitionArray[i];

	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	eax, DWORD PTR [ecx+eax*4]
	jmp	SHORT $LN8@Get_First
$LN4@Get_First:

; 380  : 		}
; 381  : 	}

	jmp	$LN6@Get_First
$LN5@Get_First:

; 382  : 	return 0;

	xor	eax, eax
$LN8@Get_First:

; 383  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_First@DefinitionMgrClass@@SAPAVDefinitionClass@@IW4ID_TYPE@1@@Z ENDP ; DefinitionMgrClass::Get_First
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Unregister_Definition@DefinitionMgrClass@@SAXPAVDefinitionClass@@@Z
_TEXT	SEGMENT
_i$1 = -4						; size = 4
_definition$ = 8					; size = 4
?Unregister_Definition@DefinitionMgrClass@@SAXPAVDefinitionClass@@@Z PROC ; DefinitionMgrClass::Unregister_Definition, COMDAT

; 91   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 92   : 	if (definition)

	cmp	DWORD PTR _definition$[ebp], 0
	je	$LN6@Unregister

; 93   : 	{
; 94   : 		if (definition->m_DefinitionMgrLink != -1)

	mov	eax, DWORD PTR _definition$[ebp]
	cmp	DWORD PTR [eax+8], -1
	je	SHORT $LN6@Unregister

; 95   : 		{
; 96   : 			for (int i = definition->m_DefinitionMgrLink;i < _DefinitionCount - 1;i++)

	mov	eax, DWORD PTR _definition$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _i$1[ebp], ecx
	jmp	SHORT $LN3@Unregister
$LN2@Unregister:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN3@Unregister:
	mov	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	sub	eax, 1
	cmp	DWORD PTR _i$1[ebp], eax
	jge	SHORT $LN1@Unregister

; 97   : 			{
; 98   : 				_SortedDefinitionArray[i] = _SortedDefinitionArray[i + 1];

	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR _i$1[ebp]
	mov	esi, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [esi+edx*4+4]
	mov	DWORD PTR [ecx+eax*4], edx

; 99   : 				_SortedDefinitionArray[i]->m_DefinitionMgrLink = i;

	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _i$1[ebp]
	mov	DWORD PTR [edx+8], eax

; 100  : 			}

	jmp	SHORT $LN2@Unregister
$LN1@Unregister:

; 101  : 			_SortedDefinitionArray[_DefinitionCount - 1] = 0;

	mov	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	DWORD PTR [ecx+eax*4-4], 0

; 102  : 			definition->m_DefinitionMgrLink = -1;

	mov	eax, DWORD PTR _definition$[ebp]
	mov	DWORD PTR [eax+8], -1

; 103  : 			_DefinitionCount--;

	mov	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	sub	eax, 1
	mov	DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA, eax ; DefinitionMgrClass::_DefinitionCount
$LN6@Unregister:

; 104  : 		}
; 105  : 	}
; 106  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Unregister_Definition@DefinitionMgrClass@@SAXPAVDefinitionClass@@@Z ENDP ; DefinitionMgrClass::Unregister_Definition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Register_Definition@DefinitionMgrClass@@SAXPAVDefinitionClass@@@Z
_TEXT	SEGMENT
tv79 = -92						; size = 4
_done$1 = -22						; size = 1
_b$2 = -21						; size = 1
_count$3 = -20						; size = 4
_current$4 = -16					; size = 4
_end$5 = -12						; size = 4
_start$6 = -8						; size = 4
_id$7 = -4						; size = 4
_definition$ = 8					; size = 4
?Register_Definition@DefinitionMgrClass@@SAXPAVDefinitionClass@@@Z PROC ; DefinitionMgrClass::Register_Definition, COMDAT

; 109  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi

; 110  : 	if (definition)

	cmp	DWORD PTR _definition$[ebp], 0
	je	$LN19@Register_D

; 111  : 	{
; 112  : 		if (definition->m_DefinitionMgrLink == -1)

	mov	eax, DWORD PTR _definition$[ebp]
	cmp	DWORD PTR [eax+8], -1
	jne	$LN19@Register_D

; 113  : 		{
; 114  : 			if (definition->Get_ID())

	mov	eax, DWORD PTR _definition$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _definition$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	test	eax, eax
	je	$LN19@Register_D

; 115  : 			{
; 116  : 				Prepare_Definition_Array();

	call	?Prepare_Definition_Array@DefinitionMgrClass@@SAXXZ ; DefinitionMgrClass::Prepare_Definition_Array

; 117  : 				unsigned long id = definition->Get_ID();

	mov	eax, DWORD PTR _definition$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _definition$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	mov	DWORD PTR _id$7[ebp], eax

; 118  : 				int start = 0;

	mov	DWORD PTR _start$6[ebp], 0

; 119  : 				int end = _DefinitionCount - 1;

	mov	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	sub	eax, 1
	mov	DWORD PTR _end$5[ebp], eax

; 120  : 				int current = end / 2;

	mov	eax, DWORD PTR _end$5[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _current$4[ebp], eax

; 121  : 				int count = _DefinitionCount;

	mov	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	mov	DWORD PTR _count$3[ebp], eax

; 122  : 				bool b = _DefinitionCount > 0;

	cmp	DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA, 0 ; DefinitionMgrClass::_DefinitionCount
	jle	SHORT $LN21@Register_D
	mov	DWORD PTR tv79[ebp], 1
	jmp	SHORT $LN22@Register_D
$LN21@Register_D:
	mov	DWORD PTR tv79[ebp], 0
$LN22@Register_D:
	mov	al, BYTE PTR tv79[ebp]
	mov	BYTE PTR _b$2[ebp], al

; 123  : 				bool done = true;

	mov	BYTE PTR _done$1[ebp], 1
$LN15@Register_D:

; 124  : 				while (b)

	movzx	eax, BYTE PTR _b$2[ebp]
	test	eax, eax
	je	$LN14@Register_D

; 125  : 				{
; 126  : 					if (_SortedDefinitionArray[current]->Get_ID() == id)

	mov	eax, DWORD PTR _current$4[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _current$4[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	eax, DWORD PTR _id$7[ebp]
	jne	SHORT $LN13@Register_D

; 127  : 					{
; 128  : 						count = current;

	mov	eax, DWORD PTR _current$4[ebp]
	mov	DWORD PTR _count$3[ebp], eax

; 129  : 						b = false;

	mov	BYTE PTR _b$2[ebp], 0

; 130  : 						done = false;

	mov	BYTE PTR _done$1[ebp], 0

; 131  : 					}
; 132  : 					else

	jmp	$LN12@Register_D
$LN13@Register_D:

; 133  : 					{
; 134  : 						if ( id <= _SortedDefinitionArray[current]->Get_ID())

	mov	eax, DWORD PTR _current$4[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _current$4[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	DWORD PTR _id$7[ebp], eax
	ja	SHORT $LN11@Register_D

; 135  : 						{
; 136  : 							end = current;

	mov	eax, DWORD PTR _current$4[ebp]
	mov	DWORD PTR _end$5[ebp], eax

; 137  : 							current -= (current - start) / 2;

	mov	eax, DWORD PTR _current$4[ebp]
	sub	eax, DWORD PTR _start$6[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _current$4[ebp]
	sub	ecx, eax
	mov	DWORD PTR _current$4[ebp], ecx

; 138  : 						}
; 139  : 						else

	jmp	SHORT $LN10@Register_D
$LN11@Register_D:

; 140  : 						{
; 141  : 							start = current;

	mov	eax, DWORD PTR _current$4[ebp]
	mov	DWORD PTR _start$6[ebp], eax

; 142  : 							current += (end - current) / 2;

	mov	eax, DWORD PTR _end$5[ebp]
	sub	eax, DWORD PTR _current$4[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _current$4[ebp]
	mov	DWORD PTR _current$4[ebp], eax
$LN10@Register_D:

; 143  : 						}
; 144  : 						if (end <= start + 1)

	mov	eax, DWORD PTR _start$6[ebp]
	add	eax, 1
	cmp	DWORD PTR _end$5[ebp], eax
	jg	SHORT $LN12@Register_D

; 145  : 						{
; 146  : 							if (_SortedDefinitionArray[end]->Get_ID() > id)

	mov	eax, DWORD PTR _end$5[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _end$5[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	eax, DWORD PTR _id$7[ebp]
	jbe	SHORT $LN8@Register_D

; 147  : 							{
; 148  : 								if (_SortedDefinitionArray[start]->Get_ID() > id)

	mov	eax, DWORD PTR _start$6[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _start$6[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	eax, DWORD PTR _id$7[ebp]
	jbe	SHORT $LN7@Register_D

; 149  : 								{
; 150  : 									count = start;

	mov	eax, DWORD PTR _start$6[ebp]
	mov	DWORD PTR _count$3[ebp], eax

; 151  : 								}
; 152  : 								else

	jmp	SHORT $LN6@Register_D
$LN7@Register_D:

; 153  : 								{
; 154  : 									count = end;

	mov	eax, DWORD PTR _end$5[ebp]
	mov	DWORD PTR _count$3[ebp], eax
$LN6@Register_D:

; 155  : 								}
; 156  : 							}
; 157  : 							else

	jmp	SHORT $LN5@Register_D
$LN8@Register_D:

; 158  : 							{
; 159  : 								count = end + 1;

	mov	eax, DWORD PTR _end$5[ebp]
	add	eax, 1
	mov	DWORD PTR _count$3[ebp], eax
$LN5@Register_D:

; 160  : 							}
; 161  : 							b = 0;

	mov	BYTE PTR _b$2[ebp], 0
$LN12@Register_D:

; 162  : 						}
; 163  : 					}
; 164  : 				}

	jmp	$LN15@Register_D
$LN14@Register_D:

; 165  : 				if (done)

	movzx	eax, BYTE PTR _done$1[ebp]
	test	eax, eax
	je	SHORT $LN19@Register_D

; 166  : 				{
; 167  : 					for (current = _DefinitionCount - 1;current >= count;current--)

	mov	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	sub	eax, 1
	mov	DWORD PTR _current$4[ebp], eax
	jmp	SHORT $LN3@Register_D
$LN2@Register_D:
	mov	eax, DWORD PTR _current$4[ebp]
	sub	eax, 1
	mov	DWORD PTR _current$4[ebp], eax
$LN3@Register_D:
	mov	eax, DWORD PTR _current$4[ebp]
	cmp	eax, DWORD PTR _count$3[ebp]
	jl	SHORT $LN1@Register_D

; 168  : 					{
; 169  : 						_SortedDefinitionArray[current + 1] = _SortedDefinitionArray[current];

	mov	eax, DWORD PTR _current$4[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR _current$4[ebp]
	mov	esi, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [esi+edx*4]
	mov	DWORD PTR [ecx+eax*4+4], edx

; 170  : 						_SortedDefinitionArray[current + 1]->m_DefinitionMgrLink = current + 1;

	mov	eax, DWORD PTR _current$4[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _current$4[ebp]
	mov	edx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	ecx, DWORD PTR [edx+ecx*4+4]
	mov	DWORD PTR [ecx+8], eax

; 171  : 					}

	jmp	SHORT $LN2@Register_D
$LN1@Register_D:

; 172  : 					definition->m_DefinitionMgrLink = count;

	mov	eax, DWORD PTR _definition$[ebp]
	mov	ecx, DWORD PTR _count$3[ebp]
	mov	DWORD PTR [eax+8], ecx

; 173  : 					_SortedDefinitionArray[count] = definition;

	mov	eax, DWORD PTR _count$3[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR _definition$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx

; 174  : 					_DefinitionCount++;

	mov	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	add	eax, 1
	mov	DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA, eax ; DefinitionMgrClass::_DefinitionCount
$LN19@Register_D:

; 175  : 				}
; 176  : 			}
; 177  : 		}
; 178  : 	}
; 179  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Definition@DefinitionMgrClass@@SAXPAVDefinitionClass@@@Z ENDP ; DefinitionMgrClass::Register_Definition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Find_Typed_Definition@DefinitionMgrClass@@SAPAVDefinitionClass@@PBDI_N@Z
_TEXT	SEGMENT
tv192 = -104						; size = 4
tv194 = -100						; size = 4
$T1 = -96						; size = 4
_def$2 = -28						; size = 4
_j$3 = -24						; size = 4
_def$4 = -20						; size = 4
_i$5 = -16						; size = 4
_vector$6 = -12						; size = 4
_str$7 = -8						; size = 4
_definition$ = -4					; size = 4
_name$ = 8						; size = 4
_class_id$ = 12						; size = 4
_twiddle$ = 16						; size = 1
?Find_Typed_Definition@DefinitionMgrClass@@SAPAVDefinitionClass@@PBDI_N@Z PROC ; DefinitionMgrClass::Find_Typed_Definition, COMDAT

; 212  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 104				; 00000068H
	push	ebx
	push	esi
	push	edi

; 213  : 	DefinitionClass *definition = 0;

	mov	DWORD PTR _definition$[ebp], 0

; 214  : 	if (DefinitionHash)

	cmp	DWORD PTR ?DefinitionHash@DefinitionMgrClass@@0PAV?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@A, 0 ; DefinitionMgrClass::DefinitionHash
	je	$LN21@Find_Typed

; 215  : 	{
; 216  : 		StringClass str(name);

	push	0
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$7[ebp]
	call	??0StringClass@@QAE@PBD_N@Z		; StringClass::StringClass

; 217  : 		_strlwr(str.Peek_Buffer());

	lea	ecx, DWORD PTR _str$7[ebp]
	call	?Peek_Buffer@StringClass@@QAEPADXZ	; StringClass::Peek_Buffer
	push	eax
	call	DWORD PTR __imp___strlwr
	add	esp, 4

; 218  : 		DynamicVectorClass<DefinitionClass *> *vector = DefinitionHash->Get(str, NULL);

	push	0
	lea	eax, DWORD PTR _str$7[ebp]
	push	eax
	mov	ecx, DWORD PTR ?DefinitionHash@DefinitionMgrClass@@0PAV?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@A ; DefinitionMgrClass::DefinitionHash
	call	?Get@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QBEPAV?$DynamicVectorClass@PAVDefinitionClass@@@@ABVStringClass@@PAV2@@Z ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Get
	mov	DWORD PTR _vector$6[ebp], eax

; 219  : 		if (vector)

	cmp	DWORD PTR _vector$6[ebp], 0
	je	$LN20@Find_Typed

; 220  : 		{
; 221  : 			for (int i = 0;i < vector->Count();i++)

	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN19@Find_Typed
$LN18@Find_Typed:
	mov	eax, DWORD PTR _i$5[ebp]
	add	eax, 1
	mov	DWORD PTR _i$5[ebp], eax
$LN19@Find_Typed:
	mov	ecx, DWORD PTR _vector$6[ebp]
	call	?Count@?$DynamicVectorClass@PAVDefinitionClass@@@@QBEHXZ ; DynamicVectorClass<DefinitionClass *>::Count
	cmp	DWORD PTR _i$5[ebp], eax
	jge	SHORT $LN20@Find_Typed

; 222  : 			{
; 223  : 				DefinitionClass *def = (*vector)[i];

	mov	eax, DWORD PTR _i$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _vector$6[ebp]
	call	??A?$VectorClass@PAVDefinitionClass@@@@QAEAAPAVDefinitionClass@@H@Z ; VectorClass<DefinitionClass *>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _def$4[ebp], ecx

; 224  : 				if (def && def->Get_Class_ID() != class_id)

	cmp	DWORD PTR _def$4[ebp], 0
	je	SHORT $LN16@Find_Typed
	mov	eax, DWORD PTR _def$4[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _def$4[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	eax, DWORD PTR _class_id$[ebp]
	je	SHORT $LN16@Find_Typed

; 225  : 				{
; 226  : 					if (Get_Definition_Type(def->Get_Class_ID()) != class_id)

	mov	eax, DWORD PTR _def$4[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _def$4[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	push	eax
	call	?Get_Definition_Type@@YAKK@Z		; Get_Definition_Type
	add	esp, 4
	cmp	eax, DWORD PTR _class_id$[ebp]
	je	SHORT $LN16@Find_Typed

; 227  : 					{
; 228  : 						if (!twiddle)

	movzx	eax, BYTE PTR _twiddle$[ebp]
	test	eax, eax
	jne	SHORT $LN14@Find_Typed

; 229  : 						{
; 230  : 							continue;

	jmp	SHORT $LN18@Find_Typed
$LN14@Find_Typed:

; 231  : 						}
; 232  : 						if (def->Get_Class_ID() != 0xE000)

	mov	eax, DWORD PTR _def$4[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _def$4[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	eax, 57344				; 0000e000H
	je	SHORT $LN16@Find_Typed

; 233  : 						{
; 234  : 							continue;

	jmp	SHORT $LN18@Find_Typed
$LN16@Find_Typed:

; 235  : 						}
; 236  : 					}
; 237  : 				}
; 238  : 				definition = def;

	mov	eax, DWORD PTR _def$4[ebp]
	mov	DWORD PTR _definition$[ebp], eax

; 239  : 			}

	jmp	$LN18@Find_Typed
$LN20@Find_Typed:

; 240  : 		}
; 241  : 		if (!definition)

	cmp	DWORD PTR _definition$[ebp], 0
	jne	$LN12@Find_Typed

; 242  : 		{
; 243  : 			for (int j = 0;j < _DefinitionCount;j++)

	mov	DWORD PTR _j$3[ebp], 0
	jmp	SHORT $LN11@Find_Typed
$LN10@Find_Typed:
	mov	eax, DWORD PTR _j$3[ebp]
	add	eax, 1
	mov	DWORD PTR _j$3[ebp], eax
$LN11@Find_Typed:
	mov	eax, DWORD PTR _j$3[ebp]
	cmp	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	jge	$LN12@Find_Typed

; 244  : 			{
; 245  : 				DefinitionClass *def = _SortedDefinitionArray[j];

	mov	eax, DWORD PTR _j$3[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _def$2[ebp], edx

; 246  : 				if (def)

	cmp	DWORD PTR _def$2[ebp], 0
	je	$LN8@Find_Typed

; 247  : 				{
; 248  : 					if ((def->Get_Class_ID() == class_id) || (Get_Definition_Type(def->Get_Class_ID()) == class_id) || (twiddle && (def->Get_Class_ID() == 0xE000)))

	mov	eax, DWORD PTR _def$2[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _def$2[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	eax, DWORD PTR _class_id$[ebp]
	je	SHORT $LN6@Find_Typed
	mov	eax, DWORD PTR _def$2[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _def$2[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	push	eax
	call	?Get_Definition_Type@@YAKK@Z		; Get_Definition_Type
	add	esp, 4
	cmp	eax, DWORD PTR _class_id$[ebp]
	je	SHORT $LN6@Find_Typed
	movzx	eax, BYTE PTR _twiddle$[ebp]
	test	eax, eax
	je	$LN8@Find_Typed
	mov	eax, DWORD PTR _def$2[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _def$2[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	eax, 57344				; 0000e000H
	jne	$LN8@Find_Typed
$LN6@Find_Typed:

; 249  : 					{
; 250  : 						if (!_strcmpi(def->Get_Name(),name))

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _def$2[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _def$2[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	push	eax
	call	DWORD PTR __imp___strcmpi
	add	esp, 8
	test	eax, eax
	jne	$LN8@Find_Typed

; 251  : 						{
; 252  : 							definition = def;

	mov	eax, DWORD PTR _def$2[ebp]
	mov	DWORD PTR _definition$[ebp], eax

; 253  : 							if (!vector)

	cmp	DWORD PTR _vector$6[ebp], 0
	jne	$LN4@Find_Typed

; 254  : 							{
; 255  : 								vector = new DynamicVectorClass<DefinitionClass *>();

	push	OFFSET ??_C@_0CK@PGPNHOMN@DefinitionMgrClass?3?3Find_Typed_D@
	mov	eax, DWORD PTR ?__LINE__Var@?1??Find_Typed_Definition@DefinitionMgrClass@@SAPAVDefinitionClass@@PBDI_N@Z@4JA@b2101402
	add	eax, 43					; 0000002bH
	push	eax
	push	OFFSET ??_C@_0EA@OOLMHBDI@x?3?2github?2renegade?2dragonade_rxd@
	call	?SetThreadTrackingInformation@@YAXPBDI0@Z ; SetThreadTrackingInformation
	add	esp, 12					; 0000000cH
	xor	ecx, ecx
	je	SHORT $LN27@Find_Typed
	xor	edx, edx
	jne	SHORT $LN24@Find_Typed
	mov	eax, DWORD PTR ?__LINE__Var@?1??Find_Typed_Definition@DefinitionMgrClass@@SAPAVDefinitionClass@@PBDI_N@Z@4JA@b2101402
	add	eax, 43					; 0000002bH
	push	eax
	push	OFFSET ??_C@_1IA@CONNEFNJ@?$AAx?$AA?3?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2?$AAr?$AAe?$AAn?$AAe?$AAg?$AAa?$AAd?$AAe?$AA?2?$AAd?$AAr?$AAa?$AAg?$AAo?$AAn?$AAa?$AAd?$AAe?$AA_?$AAr?$AAx?$AAd@
	push	OFFSET ??_C@_1M@HLGKFCJM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN24@Find_Typed:
	mov	DWORD PTR tv194[ebp], 0
	jmp	SHORT $LN28@Find_Typed
$LN27@Find_Typed:
	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN25@Find_Typed
	push	0
	push	0
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0?$DynamicVectorClass@PAVDefinitionClass@@@@QAE@IPBQAVDefinitionClass@@@Z ; DynamicVectorClass<DefinitionClass *>::DynamicVectorClass<DefinitionClass *>
	mov	DWORD PTR tv192[ebp], eax
	jmp	SHORT $LN26@Find_Typed
$LN25@Find_Typed:
	mov	DWORD PTR tv192[ebp], 0
$LN26@Find_Typed:
	mov	edx, DWORD PTR tv192[ebp]
	mov	DWORD PTR tv194[ebp], edx
$LN28@Find_Typed:
	mov	eax, DWORD PTR tv194[ebp]
	mov	DWORD PTR _vector$6[ebp], eax

; 256  : 								DefinitionHash->Insert(str,vector);

	lea	eax, DWORD PTR _vector$6[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$7[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?DefinitionHash@DefinitionMgrClass@@0PAV?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@A ; DefinitionMgrClass::DefinitionHash
	call	?Insert@?$HashTemplateClass@VStringClass@@PAV?$DynamicVectorClass@PAVDefinitionClass@@@@@@QAEXABVStringClass@@ABQAV?$DynamicVectorClass@PAVDefinitionClass@@@@@Z ; HashTemplateClass<StringClass,DynamicVectorClass<DefinitionClass *> *>::Insert
$LN4@Find_Typed:

; 257  : 							}
; 258  : 							vector->Add(definition);

	lea	eax, DWORD PTR _definition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _vector$6[ebp]
	call	?Add@?$DynamicVectorClass@PAVDefinitionClass@@@@QAE_NABQAVDefinitionClass@@@Z ; DynamicVectorClass<DefinitionClass *>::Add

; 259  : 							break;

	jmp	SHORT $LN12@Find_Typed
$LN8@Find_Typed:

; 260  : 						}
; 261  : 					}
; 262  : 				}
; 263  : 			}

	jmp	$LN10@Find_Typed
$LN12@Find_Typed:

; 264  : 		}
; 265  : 	}

	lea	ecx, DWORD PTR _str$7[ebp]
	call	??1StringClass@@QAE@XZ			; StringClass::~StringClass
$LN21@Find_Typed:

; 266  : 	if (twiddle)

	movzx	eax, BYTE PTR _twiddle$[ebp]
	test	eax, eax
	je	SHORT $LN3@Find_Typed

; 267  : 	{
; 268  : 		if (definition)

	cmp	DWORD PTR _definition$[ebp], 0
	je	SHORT $LN3@Find_Typed

; 269  : 		{
; 270  : 			if (definition->Get_Class_ID() == 0xE000)

	mov	eax, DWORD PTR _definition$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _definition$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	eax, 57344				; 0000e000H
	jne	SHORT $LN3@Find_Typed

; 271  : 			{
; 272  : 				definition = ((TwiddlerClass *)definition)->Twiddle();

	mov	eax, DWORD PTR _definition$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _definition$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	mov	DWORD PTR _definition$[ebp], eax
$LN3@Find_Typed:

; 273  : 			}
; 274  : 		}
; 275  : 	}
; 276  : 	return definition;

	mov	eax, DWORD PTR _definition$[ebp]

; 277  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Find_Typed_Definition@DefinitionMgrClass@@SAPAVDefinitionClass@@PBDI_N@Z ENDP ; DefinitionMgrClass::Find_Typed_Definition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Find_Named_Definition@DefinitionMgrClass@@SAPAVDefinitionClass@@PBD_N@Z
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_definition$ = -4					; size = 4
_name$ = 8						; size = 4
_twiddle$ = 12						; size = 1
?Find_Named_Definition@DefinitionMgrClass@@SAPAVDefinitionClass@@PBD_N@Z PROC ; DefinitionMgrClass::Find_Named_Definition, COMDAT

; 182  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 183  : 	DefinitionClass *definition = 0;

	mov	DWORD PTR _definition$[ebp], 0

; 184  : 	for (int i = 0;i < _DefinitionCount;i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN8@Find_Named
$LN7@Find_Named:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN8@Find_Named:
	mov	eax, DWORD PTR _i$1[ebp]
	cmp	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	jge	SHORT $LN6@Find_Named

; 185  : 	{
; 186  : 		if (_SortedDefinitionArray[i])

	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	cmp	DWORD PTR [ecx+eax*4], 0
	je	SHORT $LN5@Find_Named

; 187  : 		{
; 188  : 			if (!_stricmp(_SortedDefinitionArray[i]->Get_Name(),name))

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$1[ebp]
	mov	edx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _i$1[ebp]
	mov	edx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@Find_Named

; 189  : 			{
; 190  : 				definition = _SortedDefinitionArray[i];

	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _definition$[ebp], edx

; 191  : 				break;

	jmp	SHORT $LN6@Find_Named
$LN5@Find_Named:

; 192  : 			}
; 193  : 		}
; 194  : 	}

	jmp	SHORT $LN7@Find_Named
$LN6@Find_Named:

; 195  : 	if (twiddle)

	movzx	eax, BYTE PTR _twiddle$[ebp]
	test	eax, eax
	je	SHORT $LN3@Find_Named

; 196  : 	{
; 197  : 		if (definition)

	cmp	DWORD PTR _definition$[ebp], 0
	je	SHORT $LN3@Find_Named

; 198  : 		{
; 199  : 			if (definition->Get_Class_ID() == 0xE000)

	mov	eax, DWORD PTR _definition$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _definition$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	eax, 57344				; 0000e000H
	jne	SHORT $LN3@Find_Named

; 200  : 			{
; 201  : 				definition = ((TwiddlerClass *)definition)->Twiddle();

	mov	eax, DWORD PTR _definition$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _definition$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	mov	DWORD PTR _definition$[ebp], eax
$LN3@Find_Named:

; 202  : 			}
; 203  : 		}
; 204  : 	}
; 205  : 	return definition;

	mov	eax, DWORD PTR _definition$[ebp]

; 206  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Find_Named_Definition@DefinitionMgrClass@@SAPAVDefinitionClass@@PBD_N@Z ENDP ; DefinitionMgrClass::Find_Named_Definition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Find_Definition@DefinitionMgrClass@@SAPAVDefinitionClass@@I_N@Z
_TEXT	SEGMENT
tv67 = -88						; size = 4
_b$ = -17						; size = 1
_current$ = -16						; size = 4
_end$ = -12						; size = 4
_start$ = -8						; size = 4
_definition$ = -4					; size = 4
_id$ = 8						; size = 4
_twiddle$ = 12						; size = 1
?Find_Definition@DefinitionMgrClass@@SAPAVDefinitionClass@@I_N@Z PROC ; DefinitionMgrClass::Find_Definition, COMDAT

; 35   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi

; 36   : 	DefinitionClass *definition = 0;

	mov	DWORD PTR _definition$[ebp], 0

; 37   : 	int start = 0;

	mov	DWORD PTR _start$[ebp], 0

; 38   : 	int end = _DefinitionCount - 1;

	mov	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	sub	eax, 1
	mov	DWORD PTR _end$[ebp], eax

; 39   : 	int current = end / 2;

	mov	eax, DWORD PTR _end$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _current$[ebp], eax

; 40   : 	bool b = _DefinitionCount > 0;

	cmp	DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA, 0 ; DefinitionMgrClass::_DefinitionCount
	jle	SHORT $LN15@Find_Defin
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN16@Find_Defin
$LN15@Find_Defin:
	mov	DWORD PTR tv67[ebp], 0
$LN16@Find_Defin:
	mov	al, BYTE PTR tv67[ebp]
	mov	BYTE PTR _b$[ebp], al
$LN12@Find_Defin:

; 41   : 	while (b)

	movzx	eax, BYTE PTR _b$[ebp]
	test	eax, eax
	je	$LN11@Find_Defin

; 42   : 	{
; 43   : 		if (_SortedDefinitionArray[current]->Get_ID() == id)

	mov	eax, DWORD PTR _current$[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _current$[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	eax, DWORD PTR _id$[ebp]
	jne	SHORT $LN10@Find_Defin

; 44   : 		{
; 45   : 			definition = _SortedDefinitionArray[current];

	mov	eax, DWORD PTR _current$[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _definition$[ebp], edx

; 46   : 			b = 0;

	mov	BYTE PTR _b$[ebp], 0

; 47   : 		}
; 48   : 		else

	jmp	$LN9@Find_Defin
$LN10@Find_Defin:

; 49   : 		{
; 50   : 			if (end > start + 1)

	mov	eax, DWORD PTR _start$[ebp]
	add	eax, 1
	cmp	DWORD PTR _end$[ebp], eax
	jle	SHORT $LN8@Find_Defin

; 51   : 			{
; 52   : 				if (id <= _SortedDefinitionArray[current]->Get_ID())

	mov	eax, DWORD PTR _current$[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _current$[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	DWORD PTR _id$[ebp], eax
	ja	SHORT $LN7@Find_Defin

; 53   : 				{
; 54   : 					end = current;

	mov	eax, DWORD PTR _current$[ebp]
	mov	DWORD PTR _end$[ebp], eax

; 55   : 					current -= (current - start) / 2;

	mov	eax, DWORD PTR _current$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _current$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _current$[ebp], ecx

; 56   : 				}
; 57   : 				else

	jmp	SHORT $LN6@Find_Defin
$LN7@Find_Defin:

; 58   : 				{
; 59   : 					start = current;

	mov	eax, DWORD PTR _current$[ebp]
	mov	DWORD PTR _start$[ebp], eax

; 60   : 					current += (end - current) / 2;

	mov	eax, DWORD PTR _end$[ebp]
	sub	eax, DWORD PTR _current$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _current$[ebp]
	mov	DWORD PTR _current$[ebp], eax
$LN6@Find_Defin:

; 61   : 				}
; 62   : 				continue;

	jmp	$LN12@Find_Defin
$LN8@Find_Defin:

; 63   : 			}
; 64   : 			b = 0;

	mov	BYTE PTR _b$[ebp], 0

; 65   : 			if (_SortedDefinitionArray[start]->Get_ID() == id )

	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	eax, DWORD PTR _id$[ebp]
	jne	SHORT $LN5@Find_Defin

; 66   : 			{
; 67   : 				definition = _SortedDefinitionArray[start];

	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _definition$[ebp], edx

; 68   : 				continue;

	jmp	$LN12@Find_Defin
$LN5@Find_Defin:

; 69   : 			}
; 70   : 			if (_SortedDefinitionArray[end]->Get_ID() == id )

	mov	eax, DWORD PTR _end$[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _end$[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	eax, DWORD PTR _id$[ebp]
	jne	SHORT $LN9@Find_Defin

; 71   : 			{
; 72   : 				definition = _SortedDefinitionArray[end];

	mov	eax, DWORD PTR _end$[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _definition$[ebp], edx

; 73   : 				continue;

	jmp	$LN12@Find_Defin
$LN9@Find_Defin:

; 74   : 			}
; 75   : 		}
; 76   : 	}

	jmp	$LN12@Find_Defin
$LN11@Find_Defin:

; 77   : 	if (twiddle)

	movzx	eax, BYTE PTR _twiddle$[ebp]
	test	eax, eax
	je	SHORT $LN3@Find_Defin

; 78   : 	{
; 79   : 		if (definition)

	cmp	DWORD PTR _definition$[ebp], 0
	je	SHORT $LN3@Find_Defin

; 80   : 		{
; 81   : 			if (definition->Get_Class_ID() == 0xE000)

	mov	eax, DWORD PTR _definition$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _definition$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	eax, 57344				; 0000e000H
	jne	SHORT $LN3@Find_Defin

; 82   : 			{
; 83   : 				definition = ((TwiddlerClass *)definition)->Twiddle();

	mov	eax, DWORD PTR _definition$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _definition$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	mov	DWORD PTR _definition$[ebp], eax
$LN3@Find_Defin:

; 84   : 			}
; 85   : 		}
; 86   : 	}
; 87   : 	return definition;

	mov	eax, DWORD PTR _definition$[ebp]

; 88   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Find_Definition@DefinitionMgrClass@@SAPAVDefinitionClass@@I_N@Z ENDP ; DefinitionMgrClass::Find_Definition
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\definitionmgrclass.cpp
;	COMDAT ?Get_New_ID@DefinitionMgrClass@@SAKI@Z
_TEXT	SEGMENT
_nextDef$1 = -16					; size = 4
_defId$2 = -12						; size = 4
_def$3 = -8						; size = 4
_x$4 = -4						; size = 4
_class_id$ = 8						; size = 4
?Get_New_ID@DefinitionMgrClass@@SAKI@Z PROC		; DefinitionMgrClass::Get_New_ID, COMDAT

; 342  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi

; 343  : 	for(int x = 0; x < _DefinitionCount; x++)

	mov	DWORD PTR _x$4[ebp], 0
	jmp	SHORT $LN7@Get_New_ID
$LN6@Get_New_ID:
	mov	eax, DWORD PTR _x$4[ebp]
	add	eax, 1
	mov	DWORD PTR _x$4[ebp], eax
$LN7@Get_New_ID:
	mov	eax, DWORD PTR _x$4[ebp]
	cmp	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	jge	$LN5@Get_New_ID

; 344  : 	{
; 345  : 		DefinitionClass *def = _SortedDefinitionArray[x];

	mov	eax, DWORD PTR _x$4[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _def$3[ebp], edx

; 346  : 		if (!def)

	cmp	DWORD PTR _def$3[ebp], 0
	jne	SHORT $LN4@Get_New_ID

; 347  : 		{
; 348  : 			continue;

	jmp	SHORT $LN6@Get_New_ID
$LN4@Get_New_ID:

; 349  : 		}
; 350  : 
; 351  : 		uint32 defId = def->Get_ID();

	mov	eax, DWORD PTR _def$3[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _def$3[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	mov	DWORD PTR _defId$2[ebp], eax

; 352  : 		if (defId >= 10000 * class_id - 40960000 && defId < 10000 * class_id - 40950000)

	mov	eax, DWORD PTR _class_id$[ebp]
	imul	eax, 10000				; 00002710H
	sub	eax, 40960000				; 02710000H
	cmp	DWORD PTR _defId$2[ebp], eax
	jb	SHORT $LN3@Get_New_ID
	mov	eax, DWORD PTR _class_id$[ebp]
	imul	eax, 10000				; 00002710H
	sub	eax, 40950000				; 0270d8f0H
	cmp	DWORD PTR _defId$2[ebp], eax
	jae	SHORT $LN3@Get_New_ID

; 353  : 		{
; 354  : 			if (x == _DefinitionCount - 1)

	mov	eax, DWORD PTR ?_DefinitionCount@DefinitionMgrClass@@0HA ; DefinitionMgrClass::_DefinitionCount
	sub	eax, 1
	cmp	DWORD PTR _x$4[ebp], eax
	jne	SHORT $LN2@Get_New_ID

; 355  : 			{
; 356  : 				return defId + 1;

	mov	eax, DWORD PTR _defId$2[ebp]
	add	eax, 1
	jmp	SHORT $LN8@Get_New_ID
$LN2@Get_New_ID:

; 357  : 			}
; 358  : 
; 359  : 			DefinitionClass *nextDef = _SortedDefinitionArray[x + 1];

	mov	eax, DWORD PTR _x$4[ebp]
	mov	ecx, DWORD PTR ?_SortedDefinitionArray@DefinitionMgrClass@@0PAPAVDefinitionClass@@A ; DefinitionMgrClass::_SortedDefinitionArray
	mov	edx, DWORD PTR [ecx+eax*4+4]
	mov	DWORD PTR _nextDef$1[ebp], edx

; 360  : 			if (nextDef && nextDef->Get_ID() > defId + 1)

	cmp	DWORD PTR _nextDef$1[ebp], 0
	je	SHORT $LN3@Get_New_ID
	mov	eax, DWORD PTR _nextDef$1[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _nextDef$1[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	mov	ecx, DWORD PTR _defId$2[ebp]
	add	ecx, 1
	cmp	eax, ecx
	jbe	SHORT $LN3@Get_New_ID

; 361  : 			{
; 362  : 				return defId + 1;

	mov	eax, DWORD PTR _defId$2[ebp]
	add	eax, 1
	jmp	SHORT $LN8@Get_New_ID
$LN3@Get_New_ID:

; 363  : 			}
; 364  : 		}
; 365  : 	}

	jmp	$LN6@Get_New_ID
$LN5@Get_New_ID:

; 366  : 
; 367  : 	return (10000 * class_id - 40959999);

	mov	eax, DWORD PTR _class_id$[ebp]
	imul	eax, 10000				; 00002710H
	sub	eax, 40959999				; 0270ffffH
$LN8@Get_New_ID:

; 368  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_New_ID@DefinitionMgrClass@@SAKI@Z ENDP		; DefinitionMgrClass::Get_New_ID
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_math.h
;	COMDAT ?isPowerOfTwo@@YA_NH@Z
_TEXT	SEGMENT
tv68 = -68						; size = 4
_number$ = 8						; size = 4
?isPowerOfTwo@@YA_NH@Z PROC				; isPowerOfTwo, COMDAT

; 68   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 69   : 	return number != 0 && ((number - 1) & number) == 0;

	cmp	DWORD PTR _number$[ebp], 0
	je	SHORT $LN3@isPowerOfT
	mov	eax, DWORD PTR _number$[ebp]
	sub	eax, 1
	and	eax, DWORD PTR _number$[ebp]
	jne	SHORT $LN3@isPowerOfT
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@isPowerOfT
$LN3@isPowerOfT:
	mov	DWORD PTR tv68[ebp], 0
$LN4@isPowerOfT:
	mov	al, BYTE PTR tv68[ebp]

; 70   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isPowerOfTwo@@YA_NH@Z ENDP				; isPowerOfTwo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ?Get_Header@StringClass@@ABEPAU_HEADER@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get_Header@StringClass@@ABEPAU_HEADER@1@XZ PROC	; StringClass::Get_Header, COMDAT
; _this$ = ecx

; 568  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 569  : 	return reinterpret_cast<HEADER *>(((char *)m_Buffer) - sizeof (StringClass::_HEADER));

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, 8

; 570  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Header@StringClass@@ABEPAU_HEADER@1@XZ ENDP	; StringClass::Get_Header
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ?Store_Length@StringClass@@AAEXH@Z
_TEXT	SEGMENT
_header$1 = -8						; size = 4
_this$ = -4						; size = 4
_length$ = 8						; size = 4
?Store_Length@StringClass@@AAEXH@Z PROC			; StringClass::Store_Length, COMDAT
; _this$ = ecx

; 582  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 583  : 	if (m_Buffer != m_EmptyString)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?m_EmptyString@StringClass@@0AAPADA ; StringClass::m_EmptyString
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN2@Store_Leng

; 584  : 	{
; 585  : 		HEADER *header = Get_Header();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Header@StringClass@@ABEPAU_HEADER@1@XZ ; StringClass::Get_Header
	mov	DWORD PTR _header$1[ebp], eax

; 586  : 		header->length = length;

	mov	eax, DWORD PTR _header$1[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN2@Store_Leng:

; 587  : 	}
; 588  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Store_Length@StringClass@@AAEXH@Z ENDP			; StringClass::Store_Length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ?GetHash@StringClass@@QBEIXZ
_TEXT	SEGMENT
_i$1 = -16						; size = 4
_hash$2 = -12						; size = 4
_length$ = -8						; size = 4
_this$ = -4						; size = 4
?GetHash@StringClass@@QBEIXZ PROC			; StringClass::GetHash, COMDAT
; _this$ = ecx

; 174  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 175  : 		int length = Get_Length();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Length@StringClass@@QBEHXZ		; StringClass::Get_Length
	mov	DWORD PTR _length$[ebp], eax

; 176  : 		if (length >= 8)

	cmp	DWORD PTR _length$[ebp], 8
	jl	SHORT $LN5@GetHash

; 177  : 			return HashTemplateKeyClass<uint>::Get_Hash_Value((uint&)m_Buffer[length - 8]);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _length$[ebp]
	lea	eax, DWORD PTR [ecx+edx-8]
	push	eax
	call	?Get_Hash_Value@?$HashTemplateKeyClass@I@@SAIABI@Z ; HashTemplateKeyClass<unsigned int>::Get_Hash_Value
	add	esp, 4
	jmp	SHORT $LN6@GetHash

; 178  : 		else

	jmp	SHORT $LN6@GetHash
$LN5@GetHash:

; 179  : 		{
; 180  : 			uint hash = 0;

	mov	DWORD PTR _hash$2[ebp], 0

; 181  : 			for (int i = 0; i < length; i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN3@GetHash
$LN2@GetHash:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN3@GetHash:
	mov	eax, DWORD PTR _i$1[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	SHORT $LN1@GetHash

; 182  : 				hash += m_Buffer[i] + hash * 37;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _i$1[ebp]
	movsx	eax, BYTE PTR [ecx+edx]
	mov	ecx, DWORD PTR _hash$2[ebp]
	imul	ecx, 37					; 00000025H
	add	ecx, DWORD PTR _hash$2[ebp]
	add	ecx, eax
	mov	DWORD PTR _hash$2[ebp], ecx
	jmp	SHORT $LN2@GetHash
$LN1@GetHash:

; 183  : 			return hash;

	mov	eax, DWORD PTR _hash$2[ebp]
$LN6@GetHash:

; 184  : 		}
; 185  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHash@StringClass@@QBEIXZ ENDP			; StringClass::GetHash
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ?Peek_Buffer@StringClass@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Peek_Buffer@StringClass@@QAEPADXZ PROC			; StringClass::Peek_Buffer, COMDAT
; _this$ = ecx

; 475  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 476  : 	return m_Buffer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 477  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Peek_Buffer@StringClass@@QAEPADXZ ENDP			; StringClass::Peek_Buffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ?Get_Length@StringClass@@QBEHXZ
_TEXT	SEGMENT
tv73 = -92						; size = 4
tv90 = -85						; size = 1
tv87 = -84						; size = 4
tv84 = -80						; size = 4
_header$1 = -12						; size = 4
_length$ = -8						; size = 4
_this$ = -4						; size = 4
?Get_Length@StringClass@@QBEHXZ PROC			; StringClass::Get_Length, COMDAT
; _this$ = ecx

; 532  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 533  : 	int length = 0;

	mov	DWORD PTR _length$[ebp], 0

; 534  : 	if (m_Buffer != m_EmptyString)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?m_EmptyString@StringClass@@0AAPADA ; StringClass::m_EmptyString
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN2@Get_Length

; 535  : 	{
; 536  : 		HEADER *header = Get_Header ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_Header@StringClass@@ABEPAU_HEADER@1@XZ ; StringClass::Get_Header
	mov	DWORD PTR _header$1[ebp], eax

; 537  : 		length = header->length;

	mov	eax, DWORD PTR _header$1[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _length$[ebp], ecx

; 538  : 		if (length == 0)

	cmp	DWORD PTR _length$[ebp], 0
	jne	SHORT $LN2@Get_Length

; 539  : 		{
; 540  : 			length = (int)strlen (m_Buffer);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv84[ebp], ecx
	mov	edx, DWORD PTR tv84[ebp]
	add	edx, 1
	mov	DWORD PTR tv87[ebp], edx
$LL5@Get_Length:
	mov	eax, DWORD PTR tv84[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv90[ebp], cl
	add	DWORD PTR tv84[ebp], 1
	cmp	BYTE PTR tv90[ebp], 0
	jne	SHORT $LL5@Get_Length
	mov	edx, DWORD PTR tv84[ebp]
	sub	edx, DWORD PTR tv87[ebp]
	mov	DWORD PTR tv73[ebp], edx
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR _length$[ebp], eax

; 541  : 			((StringClass *)this)->Store_Length (length);

	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Store_Length@StringClass@@AAEXH@Z	; StringClass::Store_Length
$LN2@Get_Length:

; 542  : 		}
; 543  : 	}
; 544  : 	return length;

	mov	eax, DWORD PTR _length$[ebp]

; 545  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Get_Length@StringClass@@QBEHXZ ENDP			; StringClass::Get_Length
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ?Compare@StringClass@@QBEHPBD@Z
_TEXT	SEGMENT
tv68 = -88						; size = 4
tv88 = -84						; size = 4
tv83 = -78						; size = 1
tv76 = -77						; size = 1
tv70 = -76						; size = 4
tv72 = -72						; size = 4
_this$ = -4						; size = 4
_string$ = 8						; size = 4
?Compare@StringClass@@QBEHPBD@Z PROC			; StringClass::Compare, COMDAT
; _this$ = ecx

; 376  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 	return strcmp (m_Buffer, string);

	mov	eax, DWORD PTR _string$[ebp]
	mov	DWORD PTR tv72[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv70[ebp], edx
$LL3@Compare:
	mov	eax, DWORD PTR tv70[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv76[ebp], cl
	mov	edx, DWORD PTR tv72[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN4@Compare
	cmp	BYTE PTR tv76[ebp], 0
	je	SHORT $LN5@Compare
	mov	eax, DWORD PTR tv70[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv83[ebp], cl
	mov	edx, DWORD PTR tv72[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN4@Compare
	add	DWORD PTR tv70[ebp], 2
	add	DWORD PTR tv72[ebp], 2
	cmp	BYTE PTR tv83[ebp], 0
	jne	SHORT $LL3@Compare
$LN5@Compare:
	mov	DWORD PTR tv88[ebp], 0
	jmp	SHORT $LN6@Compare
$LN4@Compare:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv88[ebp], eax
$LN6@Compare:
	mov	ecx, DWORD PTR tv88[ebp]
	mov	DWORD PTR tv68[ebp], ecx
	mov	eax, DWORD PTR tv68[ebp]

; 378  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Compare@StringClass@@QBEHPBD@Z ENDP			; StringClass::Compare
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ??BStringClass@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BStringClass@@QBEPBDXZ PROC				; StringClass::operator char const *, COMDAT
; _this$ = ecx

; 396  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 397  : 	return m_Buffer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 398  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??BStringClass@@QBEPBDXZ ENDP				; StringClass::operator char const *
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ??4StringClass@@QAEABV0@ABV0@@Z
_TEXT	SEGMENT
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_string$ = 8						; size = 4
??4StringClass@@QAEABV0@ABV0@@Z PROC			; StringClass::operator=, COMDAT
; _this$ = ecx

; 279  : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 280  : 	int len = string.Get_Length();

	mov	ecx, DWORD PTR _string$[ebp]
	call	?Get_Length@StringClass@@QBEHXZ		; StringClass::Get_Length
	mov	DWORD PTR _len$[ebp], eax

; 281  : 	Uninitialised_Grow(len+1);

	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Uninitialised_Grow@StringClass@@AAEXH@Z ; StringClass::Uninitialised_Grow

; 282  : 	Store_Length(len);

	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Store_Length@StringClass@@AAEXH@Z	; StringClass::Store_Length

; 283  : 	memcpy (m_Buffer, string.m_Buffer, (len+1) * sizeof (char));		

	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _string$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 284  : 	return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 285  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringClass@@QAEABV0@ABV0@@Z ENDP			; StringClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ??4StringClass@@QAEABV0@PBD@Z
_TEXT	SEGMENT
tv67 = -88						; size = 4
tv85 = -81						; size = 1
tv82 = -80						; size = 4
tv79 = -76						; size = 4
_len$1 = -8						; size = 4
_this$ = -4						; size = 4
_string$ = 8						; size = 4
??4StringClass@@QAEABV0@PBD@Z PROC			; StringClass::operator=, COMDAT
; _this$ = ecx

; 288  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 289  : 	if (string != 0)

	cmp	DWORD PTR _string$[ebp], 0
	je	SHORT $LN1@operator

; 290  : 	{
; 291  : 		int len = (int)strlen (string);

	mov	eax, DWORD PTR _string$[ebp]
	mov	DWORD PTR tv79[ebp], eax
	mov	ecx, DWORD PTR tv79[ebp]
	add	ecx, 1
	mov	DWORD PTR tv82[ebp], ecx
$LL4@operator:
	mov	edx, DWORD PTR tv79[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv85[ebp], al
	add	DWORD PTR tv79[ebp], 1
	cmp	BYTE PTR tv85[ebp], 0
	jne	SHORT $LL4@operator
	mov	ecx, DWORD PTR tv79[ebp]
	sub	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR tv67[ebp], ecx
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _len$1[ebp], edx

; 292  : 		Uninitialised_Grow (len+1);

	mov	eax, DWORD PTR _len$1[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Uninitialised_Grow@StringClass@@AAEXH@Z ; StringClass::Uninitialised_Grow

; 293  : 		Store_Length (len);

	mov	eax, DWORD PTR _len$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Store_Length@StringClass@@AAEXH@Z	; StringClass::Store_Length

; 294  : 		memcpy (m_Buffer, string, (len + 1) * sizeof (char));		

	mov	eax, DWORD PTR _len$1[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _string$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@operator:

; 295  : 	}
; 296  : 	return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 297  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4StringClass@@QAEABV0@PBD@Z ENDP			; StringClass::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ??8StringClass@@QBE_NPBD@Z
_TEXT	SEGMENT
tv68 = -72						; size = 4
_this$ = -4						; size = 4
_rvalue$ = 8						; size = 4
??8StringClass@@QBE_NPBD@Z PROC				; StringClass::operator==, COMDAT
; _this$ = ecx

; 401  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (Compare (rvalue) == 0);

	mov	eax, DWORD PTR _rvalue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Compare@StringClass@@QBEHPBD@Z		; StringClass::Compare
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv68[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv68[ebp]

; 403  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??8StringClass@@QBE_NPBD@Z ENDP				; StringClass::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ??1StringClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1StringClass@@QAE@XZ PROC				; StringClass::~StringClass, COMDAT
; _this$ = ecx

; 366  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 367  : 	Free_String ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free_String@StringClass@@AAEXXZ	; StringClass::Free_String

; 368  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1StringClass@@QAE@XZ ENDP				; StringClass::~StringClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ??0StringClass@@QAE@PBD_N@Z
_TEXT	SEGMENT
tv69 = -92						; size = 4
tv67 = -88						; size = 4
tv89 = -81						; size = 1
tv86 = -80						; size = 4
tv83 = -76						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_string$ = 8						; size = 4
_hint_temporary$ = 12					; size = 1
??0StringClass@@QAE@PBD_N@Z PROC			; StringClass::StringClass, COMDAT
; _this$ = ecx

; 346  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?m_EmptyString@StringClass@@0AAPADA ; StringClass::m_EmptyString
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 347  : 	int len=string ? (int)strlen(string) : 0;

	cmp	DWORD PTR _string$[ebp], 0
	je	SHORT $LN5@StringClas
	mov	eax, DWORD PTR _string$[ebp]
	mov	DWORD PTR tv83[ebp], eax
	mov	ecx, DWORD PTR tv83[ebp]
	add	ecx, 1
	mov	DWORD PTR tv86[ebp], ecx
$LL7@StringClas:
	mov	edx, DWORD PTR tv83[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv89[ebp], al
	add	DWORD PTR tv83[ebp], 1
	cmp	BYTE PTR tv89[ebp], 0
	jne	SHORT $LL7@StringClas
	mov	ecx, DWORD PTR tv83[ebp]
	sub	ecx, DWORD PTR tv86[ebp]
	mov	DWORD PTR tv67[ebp], ecx
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR tv69[ebp], edx
	jmp	SHORT $LN6@StringClas
$LN5@StringClas:
	mov	DWORD PTR tv69[ebp], 0
$LN6@StringClas:
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR _len$[ebp], eax

; 348  : 	if (hint_temporary || len>0)

	movzx	eax, BYTE PTR _hint_temporary$[ebp]
	test	eax, eax
	jne	SHORT $LN1@StringClas
	cmp	DWORD PTR _len$[ebp], 0
	jle	SHORT $LN2@StringClas
$LN1@StringClas:

; 349  : 	{
; 350  : 		Get_String (len+1, hint_temporary);

	movzx	eax, BYTE PTR _hint_temporary$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_String@StringClass@@AAEXH_N@Z	; StringClass::Get_String
$LN2@StringClas:

; 351  : 	}
; 352  : 	(*this) = string;

	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4StringClass@@QAEABV0@PBD@Z		; StringClass::operator=

; 353  : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0StringClass@@QAE@PBD_N@Z ENDP			; StringClass::StringClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ??0StringClass@@QAE@H_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_initial_len$ = 8					; size = 4
_hint_temporary$ = 12					; size = 1
??0StringClass@@QAE@H_N@Z PROC				; StringClass::StringClass, COMDAT
; _this$ = ecx

; 325  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?m_EmptyString@StringClass@@0AAPADA ; StringClass::m_EmptyString
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 326  : 	Get_String (initial_len, hint_temporary);

	movzx	eax, BYTE PTR _hint_temporary$[ebp]
	push	eax
	mov	ecx, DWORD PTR _initial_len$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_String@StringClass@@AAEXH_N@Z	; StringClass::Get_String

; 327  : 	m_Buffer[0]	= m_NullChar;

	mov	eax, 1
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?m_NullChar@StringClass@@0AADA ; StringClass::m_NullChar
	mov	cl, BYTE PTR [ecx]
	mov	BYTE PTR [eax+edx], cl

; 328  : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0StringClass@@QAE@H_N@Z ENDP				; StringClass::StringClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\postloadableclass.h
;	COMDAT ?On_Post_Load@PostLoadableClass@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?On_Post_Load@PostLoadableClass@@UAEXXZ PROC		; PostLoadableClass::On_Post_Load, COMDAT
; _this$ = ecx

; 20   : 	virtual void						On_Post_Load (void)							{ }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?On_Post_Load@PostLoadableClass@@UAEXXZ ENDP		; PostLoadableClass::On_Post_Load
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??_U@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??_U@YAPAXIPAX@Z PROC					; operator new[], COMDAT

; 71   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 72   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 73   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??_U@YAPAXIPAX@Z ENDP					; operator new[]
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_I@YGXPAXIHP6EX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_I@YGXPAXIHP6EX0@Z@Z PROC				; `vector destructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___s$[ebp]
	imul	eax, DWORD PTR ___n$[ebp]
	add	eax, DWORD PTR ___t$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	eax, DWORD PTR ___t$[ebp]
	sub	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_I@YGXPAXIHP6EX0@Z@Z ENDP				; `vector destructor iterator'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
