; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.61219.0 

	TITLE	X:\GitHub\Renegade\Dragonade_RxD\scripts\PersistFactoryClass.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_DONT_MOVE_ARRIVED_DIST DD 0447a0000r		; 1000
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0PersistFactoryClass@@QAE@XZ			; PersistFactoryClass::PersistFactoryClass
PUBLIC	??1PersistFactoryClass@@UAE@XZ			; PersistFactoryClass::~PersistFactoryClass
PUBLIC	??_GPersistFactoryClass@@UAEPAXI@Z		; PersistFactoryClass::`scalar deleting destructor'
PUBLIC	??0PostLoadableClass@@QAE@XZ			; PostLoadableClass::PostLoadableClass
PUBLIC	??1PostLoadableClass@@UAE@XZ			; PostLoadableClass::~PostLoadableClass
PUBLIC	?On_Post_Load@PostLoadableClass@@UAEXXZ		; PostLoadableClass::On_Post_Load
PUBLIC	??_GPostLoadableClass@@UAEPAXI@Z		; PostLoadableClass::`scalar deleting destructor'
PUBLIC	??0SaveLoadSubSystemClass@@QAE@XZ		; SaveLoadSubSystemClass::SaveLoadSubSystemClass
PUBLIC	??1SaveLoadSubSystemClass@@UAE@XZ		; SaveLoadSubSystemClass::~SaveLoadSubSystemClass
PUBLIC	?Contains_Data@SaveLoadSubSystemClass@@UBE_NXZ	; SaveLoadSubSystemClass::Contains_Data
PUBLIC	??_GSaveLoadSubSystemClass@@UAEPAXI@Z		; SaveLoadSubSystemClass::`scalar deleting destructor'
PUBLIC	?Find_Sub_System@SaveLoadSystemClass@@SAPAVSaveLoadSubSystemClass@@I@Z ; SaveLoadSystemClass::Find_Sub_System
PUBLIC	?Register_Pointer@SaveLoadSystemClass@@SAXPAX0@Z ; SaveLoadSystemClass::Register_Pointer
PUBLIC	?Request_Pointer_Remap@SaveLoadSystemClass@@SAXPAPAX@Z ; SaveLoadSystemClass::Request_Pointer_Remap
PUBLIC	?Register_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z ; SaveLoadSystemClass::Register_Sub_System
PUBLIC	?Unregister_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z ; SaveLoadSystemClass::Unregister_Sub_System
PUBLIC	?Link_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z ; SaveLoadSystemClass::Link_Sub_System
PUBLIC	?Unlink_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z ; SaveLoadSystemClass::Unlink_Sub_System
PUBLIC	?Register_Persist_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z ; SaveLoadSystemClass::Register_Persist_Factory
PUBLIC	?Unregister_Persist_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z ; SaveLoadSystemClass::Unregister_Persist_Factory
PUBLIC	?Find_Persist_Factory@SaveLoadSystemClass@@SAPAVPersistFactoryClass@@I@Z ; SaveLoadSystemClass::Find_Persist_Factory
PUBLIC	?Link_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z ; SaveLoadSystemClass::Link_Factory
PUBLIC	?Unlink_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z ; SaveLoadSystemClass::Unlink_Factory
PUBLIC	?Request_Ref_Counted_Pointer_Remap@SaveLoadSystemClass@@SAXPAPAVRefCountClass@@@Z ; SaveLoadSystemClass::Request_Ref_Counted_Pointer_Remap
PUBLIC	??$ResolveGameReference@VPointerRemapClass@@@@YAAAVPointerRemapClass@@HHH@Z ; ResolveGameReference<PointerRemapClass>
PUBLIC	??$ResolveGameReference@PAVPersistFactoryClass@@@@YAAAPAVPersistFactoryClass@@HHH@Z ; ResolveGameReference<PersistFactoryClass *>
PUBLIC	??$ResolveGameReference@PAVSaveLoadSubSystemClass@@@@YAAAPAVSaveLoadSubSystemClass@@HHH@Z ; ResolveGameReference<SaveLoadSubSystemClass *>
PUBLIC	??_7PersistFactoryClass@@6B@			; PersistFactoryClass::`vftable'
PUBLIC	??_7PostLoadableClass@@6B@			; PostLoadableClass::`vftable'
PUBLIC	??_7SaveLoadSubSystemClass@@6B@			; SaveLoadSubSystemClass::`vftable'
PUBLIC	?PointerRemapper@SaveLoadSystemClass@@2AAVPointerRemapClass@@A ; SaveLoadSystemClass::PointerRemapper
PUBLIC	?_FactoryListHead@SaveLoadSystemClass@@2AAPAVPersistFactoryClass@@A ; SaveLoadSystemClass::_FactoryListHead
PUBLIC	?_SubSystemListHead@SaveLoadSystemClass@@2AAPAVSaveLoadSubSystemClass@@A ; SaveLoadSystemClass::_SubSystemListHead
PUBLIC	??_R4PersistFactoryClass@@6B@			; PersistFactoryClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPersistFactoryClass@@@8			; PersistFactoryClass `RTTI Type Descriptor'
PUBLIC	??_R3PersistFactoryClass@@8			; PersistFactoryClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PersistFactoryClass@@8			; PersistFactoryClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PersistFactoryClass@@8		; PersistFactoryClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4PostLoadableClass@@6B@			; PostLoadableClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPostLoadableClass@@@8			; PostLoadableClass `RTTI Type Descriptor'
PUBLIC	??_R3PostLoadableClass@@8			; PostLoadableClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PostLoadableClass@@8			; PostLoadableClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PostLoadableClass@@8		; PostLoadableClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SaveLoadSubSystemClass@@6B@		; SaveLoadSubSystemClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSaveLoadSubSystemClass@@@8		; SaveLoadSubSystemClass `RTTI Type Descriptor'
PUBLIC	??_R3SaveLoadSubSystemClass@@8			; SaveLoadSubSystemClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SaveLoadSubSystemClass@@8			; SaveLoadSubSystemClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SaveLoadSubSystemClass@@8		; SaveLoadSubSystemClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?InitEngine@@YAXXZ:PROC				; InitEngine
EXTRN	??_EPersistFactoryClass@@UAEPAXI@Z:PROC		; PersistFactoryClass::`vector deleting destructor'
EXTRN	?Register_Pointer@PointerRemapClass@@QAEXPAX0@Z:PROC ; PointerRemapClass::Register_Pointer
EXTRN	?Request_Pointer_Remap@PointerRemapClass@@QAEXPAPAX@Z:PROC ; PointerRemapClass::Request_Pointer_Remap
EXTRN	?Request_Ref_Counted_Pointer_Remap@PointerRemapClass@@QAEXPAPAVRefCountClass@@@Z:PROC ; PointerRemapClass::Request_Ref_Counted_Pointer_Remap
EXTRN	??_EPostLoadableClass@@UAEPAXI@Z:PROC		; PostLoadableClass::`vector deleting destructor'
EXTRN	??_ESaveLoadSubSystemClass@@UAEPAXI@Z:PROC	; SaveLoadSubSystemClass::`vector deleting destructor'
EXTRN	?Exe@@3HA:DWORD					; Exe
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
_BSS	SEGMENT
?PointerRemapper@SaveLoadSystemClass@@2AAVPointerRemapClass@@A DD 01H DUP (?) ; SaveLoadSystemClass::PointerRemapper
?_FactoryListHead@SaveLoadSystemClass@@2AAPAVPersistFactoryClass@@A DD 01H DUP (?) ; SaveLoadSystemClass::_FactoryListHead
?_SubSystemListHead@SaveLoadSystemClass@@2AAPAVSaveLoadSubSystemClass@@A DD 01H DUP (?) ; SaveLoadSystemClass::_SubSystemListHead
_BSS	ENDS
CRT$XCL	SEGMENT
?PointerRemapper$initializer$@SaveLoadSystemClass@@2P6AXXZA DD FLAT:??__E?PointerRemapper@SaveLoadSystemClass@@2AAVPointerRemapClass@@A@@YAXXZ ; SaveLoadSystemClass::PointerRemapper$initializer$
CRT$XCL	ENDS
;	COMDAT ??_R1A@?0A@EA@SaveLoadSubSystemClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SaveLoadSubSystemClass@@8 DD FLAT:??_R0?AVSaveLoadSubSystemClass@@@8 ; SaveLoadSubSystemClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SaveLoadSubSystemClass@@8
rdata$r	ENDS
;	COMDAT ??_R2SaveLoadSubSystemClass@@8
rdata$r	SEGMENT
??_R2SaveLoadSubSystemClass@@8 DD FLAT:??_R1A@?0A@EA@SaveLoadSubSystemClass@@8 ; SaveLoadSubSystemClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PostLoadableClass@@8
rdata$r	ENDS
;	COMDAT ??_R3SaveLoadSubSystemClass@@8
rdata$r	SEGMENT
??_R3SaveLoadSubSystemClass@@8 DD 00H			; SaveLoadSubSystemClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SaveLoadSubSystemClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSaveLoadSubSystemClass@@@8
_DATA	SEGMENT
??_R0?AVSaveLoadSubSystemClass@@@8 DD FLAT:??_7type_info@@6B@ ; SaveLoadSubSystemClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSaveLoadSubSystemClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SaveLoadSubSystemClass@@6B@
rdata$r	SEGMENT
??_R4SaveLoadSubSystemClass@@6B@ DD 00H			; SaveLoadSubSystemClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSaveLoadSubSystemClass@@@8
	DD	FLAT:??_R3SaveLoadSubSystemClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PostLoadableClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PostLoadableClass@@8 DD FLAT:??_R0?AVPostLoadableClass@@@8 ; PostLoadableClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PostLoadableClass@@8
rdata$r	ENDS
;	COMDAT ??_R2PostLoadableClass@@8
rdata$r	SEGMENT
??_R2PostLoadableClass@@8 DD FLAT:??_R1A@?0A@EA@PostLoadableClass@@8 ; PostLoadableClass::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3PostLoadableClass@@8
rdata$r	SEGMENT
??_R3PostLoadableClass@@8 DD 00H			; PostLoadableClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2PostLoadableClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPostLoadableClass@@@8
_DATA	SEGMENT
??_R0?AVPostLoadableClass@@@8 DD FLAT:??_7type_info@@6B@ ; PostLoadableClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPostLoadableClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PostLoadableClass@@6B@
rdata$r	SEGMENT
??_R4PostLoadableClass@@6B@ DD 00H			; PostLoadableClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPostLoadableClass@@@8
	DD	FLAT:??_R3PostLoadableClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PersistFactoryClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PersistFactoryClass@@8 DD FLAT:??_R0?AVPersistFactoryClass@@@8 ; PersistFactoryClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PersistFactoryClass@@8
rdata$r	ENDS
;	COMDAT ??_R2PersistFactoryClass@@8
rdata$r	SEGMENT
??_R2PersistFactoryClass@@8 DD FLAT:??_R1A@?0A@EA@PersistFactoryClass@@8 ; PersistFactoryClass::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3PersistFactoryClass@@8
rdata$r	SEGMENT
??_R3PersistFactoryClass@@8 DD 00H			; PersistFactoryClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2PersistFactoryClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPersistFactoryClass@@@8
_DATA	SEGMENT
??_R0?AVPersistFactoryClass@@@8 DD FLAT:??_7type_info@@6B@ ; PersistFactoryClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPersistFactoryClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PersistFactoryClass@@6B@
rdata$r	SEGMENT
??_R4PersistFactoryClass@@6B@ DD 00H			; PersistFactoryClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPersistFactoryClass@@@8
	DD	FLAT:??_R3PersistFactoryClass@@8
rdata$r	ENDS
;	COMDAT ??_7SaveLoadSubSystemClass@@6B@
CONST	SEGMENT
??_7SaveLoadSubSystemClass@@6B@ DD FLAT:??_R4SaveLoadSubSystemClass@@6B@ ; SaveLoadSubSystemClass::`vftable'
	DD	FLAT:??_ESaveLoadSubSystemClass@@UAEPAXI@Z
	DD	FLAT:?On_Post_Load@PostLoadableClass@@UAEXXZ
	DD	FLAT:__purecall
	DD	FLAT:?Contains_Data@SaveLoadSubSystemClass@@UBE_NXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7PostLoadableClass@@6B@
CONST	SEGMENT
??_7PostLoadableClass@@6B@ DD FLAT:??_R4PostLoadableClass@@6B@ ; PostLoadableClass::`vftable'
	DD	FLAT:??_EPostLoadableClass@@UAEPAXI@Z
	DD	FLAT:?On_Post_Load@PostLoadableClass@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7PersistFactoryClass@@6B@
CONST	SEGMENT
??_7PersistFactoryClass@@6B@ DD FLAT:??_R4PersistFactoryClass@@6B@ ; PersistFactoryClass::`vftable'
	DD	FLAT:??_EPersistFactoryClass@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
CRT$XCL	SEGMENT
?_FactoryListHead$initializer$@SaveLoadSystemClass@@2P6AXXZA DD FLAT:??__E?_FactoryListHead@SaveLoadSystemClass@@2AAPAVPersistFactoryClass@@A@@YAXXZ ; SaveLoadSystemClass::_FactoryListHead$initializer$
CRT$XCL	ENDS
CRT$XCL	SEGMENT
?_SubSystemListHead$initializer$@SaveLoadSystemClass@@2P6AXXZA DD FLAT:??__E?_SubSystemListHead@SaveLoadSystemClass@@2AAPAVSaveLoadSubSystemClass@@A@@YAXXZ ; SaveLoadSystemClass::_SubSystemListHead$initializer$
CRT$XCL	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ??__E?_SubSystemListHead@SaveLoadSystemClass@@2AAPAVSaveLoadSubSystemClass@@A@@YAXXZ
text$yc	SEGMENT
??__E?_SubSystemListHead@SaveLoadSystemClass@@2AAPAVSaveLoadSubSystemClass@@A@@YAXXZ PROC ; `dynamic initializer for 'SaveLoadSystemClass::_SubSystemListHead'', COMDAT

; 153  : REF_DEF3(SaveLoadSubSystemClass *, SaveLoadSystemClass::_SubSystemListHead, 0x008303E4, 0x0082F5CC, 0x008B5DBC);

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	9133500					; 008b5dbcH
	push	8582604					; 0082f5ccH
	push	8586212					; 008303e4H
	call	??$ResolveGameReference@PAVSaveLoadSubSystemClass@@@@YAAAPAVSaveLoadSubSystemClass@@HHH@Z ; ResolveGameReference<SaveLoadSubSystemClass *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR ?_SubSystemListHead@SaveLoadSystemClass@@2AAPAVSaveLoadSubSystemClass@@A, eax ; SaveLoadSystemClass::_SubSystemListHead
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?_SubSystemListHead@SaveLoadSystemClass@@2AAPAVSaveLoadSubSystemClass@@A@@YAXXZ ENDP ; `dynamic initializer for 'SaveLoadSystemClass::_SubSystemListHead''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\defines.h
;	COMDAT ??$ResolveGameReference@PAVSaveLoadSubSystemClass@@@@YAAAPAVSaveLoadSubSystemClass@@HHH@Z
_TEXT	SEGMENT
tv68 = -76						; size = 4
tv69 = -72						; size = 4
tv70 = -68						; size = 4
_client$ = 8						; size = 4
_server$ = 12						; size = 4
_leveledit$ = 16					; size = 4
??$ResolveGameReference@PAVSaveLoadSubSystemClass@@@@YAAAPAVSaveLoadSubSystemClass@@HHH@Z PROC ; ResolveGameReference<SaveLoadSubSystemClass *>, COMDAT

; 149  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi

; 150  : 	if (Exe == 6) InitEngine();

	cmp	DWORD PTR ?Exe@@3HA, 6			; Exe
	jne	SHORT $LN1@ResolveGam
	call	?InitEngine@@YAXXZ			; InitEngine
$LN1@ResolveGam:

; 151  : #pragma warning(suppress: 6011) //warning C6011: dereferencing NULL pointer <name>
; 152  : 	return *((T*)((Exe == 0) ? client : ((Exe == 1) ? server : ((Exe == 4) ? leveledit : 0))));

	cmp	DWORD PTR ?Exe@@3HA, 0			; Exe
	jne	SHORT $LN8@ResolveGam
	mov	eax, DWORD PTR _client$[ebp]
	mov	DWORD PTR tv70[ebp], eax
	jmp	SHORT $LN9@ResolveGam
$LN8@ResolveGam:
	cmp	DWORD PTR ?Exe@@3HA, 1			; Exe
	jne	SHORT $LN6@ResolveGam
	mov	ecx, DWORD PTR _server$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN7@ResolveGam
$LN6@ResolveGam:
	cmp	DWORD PTR ?Exe@@3HA, 4			; Exe
	jne	SHORT $LN4@ResolveGam
	mov	edx, DWORD PTR _leveledit$[ebp]
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN5@ResolveGam
$LN4@ResolveGam:
	mov	DWORD PTR tv68[ebp], 0
$LN5@ResolveGam:
	mov	eax, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv69[ebp], eax
$LN7@ResolveGam:
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv70[ebp], ecx
$LN9@ResolveGam:
	mov	eax, DWORD PTR tv70[ebp]

; 153  : };

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$ResolveGameReference@PAVSaveLoadSubSystemClass@@@@YAAAPAVSaveLoadSubSystemClass@@HHH@Z ENDP ; ResolveGameReference<SaveLoadSubSystemClass *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ??__E?_FactoryListHead@SaveLoadSystemClass@@2AAPAVPersistFactoryClass@@A@@YAXXZ
text$yc	SEGMENT
??__E?_FactoryListHead@SaveLoadSystemClass@@2AAPAVPersistFactoryClass@@A@@YAXXZ PROC ; `dynamic initializer for 'SaveLoadSystemClass::_FactoryListHead'', COMDAT

; 152  : REF_DEF3(PersistFactoryClass *, SaveLoadSystemClass::_FactoryListHead, 0x008303E8, 0x0082F5D0, 0x008B5DC0);

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	9133504					; 008b5dc0H
	push	8582608					; 0082f5d0H
	push	8586216					; 008303e8H
	call	??$ResolveGameReference@PAVPersistFactoryClass@@@@YAAAPAVPersistFactoryClass@@HHH@Z ; ResolveGameReference<PersistFactoryClass *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR ?_FactoryListHead@SaveLoadSystemClass@@2AAPAVPersistFactoryClass@@A, eax ; SaveLoadSystemClass::_FactoryListHead
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?_FactoryListHead@SaveLoadSystemClass@@2AAPAVPersistFactoryClass@@A@@YAXXZ ENDP ; `dynamic initializer for 'SaveLoadSystemClass::_FactoryListHead''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\defines.h
;	COMDAT ??$ResolveGameReference@PAVPersistFactoryClass@@@@YAAAPAVPersistFactoryClass@@HHH@Z
_TEXT	SEGMENT
tv68 = -76						; size = 4
tv69 = -72						; size = 4
tv70 = -68						; size = 4
_client$ = 8						; size = 4
_server$ = 12						; size = 4
_leveledit$ = 16					; size = 4
??$ResolveGameReference@PAVPersistFactoryClass@@@@YAAAPAVPersistFactoryClass@@HHH@Z PROC ; ResolveGameReference<PersistFactoryClass *>, COMDAT

; 149  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi

; 150  : 	if (Exe == 6) InitEngine();

	cmp	DWORD PTR ?Exe@@3HA, 6			; Exe
	jne	SHORT $LN1@ResolveGam
	call	?InitEngine@@YAXXZ			; InitEngine
$LN1@ResolveGam:

; 151  : #pragma warning(suppress: 6011) //warning C6011: dereferencing NULL pointer <name>
; 152  : 	return *((T*)((Exe == 0) ? client : ((Exe == 1) ? server : ((Exe == 4) ? leveledit : 0))));

	cmp	DWORD PTR ?Exe@@3HA, 0			; Exe
	jne	SHORT $LN8@ResolveGam
	mov	eax, DWORD PTR _client$[ebp]
	mov	DWORD PTR tv70[ebp], eax
	jmp	SHORT $LN9@ResolveGam
$LN8@ResolveGam:
	cmp	DWORD PTR ?Exe@@3HA, 1			; Exe
	jne	SHORT $LN6@ResolveGam
	mov	ecx, DWORD PTR _server$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN7@ResolveGam
$LN6@ResolveGam:
	cmp	DWORD PTR ?Exe@@3HA, 4			; Exe
	jne	SHORT $LN4@ResolveGam
	mov	edx, DWORD PTR _leveledit$[ebp]
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN5@ResolveGam
$LN4@ResolveGam:
	mov	DWORD PTR tv68[ebp], 0
$LN5@ResolveGam:
	mov	eax, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv69[ebp], eax
$LN7@ResolveGam:
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv70[ebp], ecx
$LN9@ResolveGam:
	mov	eax, DWORD PTR tv70[ebp]

; 153  : };

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$ResolveGameReference@PAVPersistFactoryClass@@@@YAAAPAVPersistFactoryClass@@HHH@Z ENDP ; ResolveGameReference<PersistFactoryClass *>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ??__E?PointerRemapper@SaveLoadSystemClass@@2AAVPointerRemapClass@@A@@YAXXZ
text$yc	SEGMENT
??__E?PointerRemapper@SaveLoadSystemClass@@2AAVPointerRemapClass@@A@@YAXXZ PROC ; `dynamic initializer for 'SaveLoadSystemClass::PointerRemapper'', COMDAT

; 151  : REF_DEF3(PointerRemapClass, SaveLoadSystemClass::PointerRemapper, 0x00830398, 0x0082F580, 0x008B5D70);

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	push	9133424					; 008b5d70H
	push	8582528					; 0082f580H
	push	8586136					; 00830398H
	call	??$ResolveGameReference@VPointerRemapClass@@@@YAAAVPointerRemapClass@@HHH@Z ; ResolveGameReference<PointerRemapClass>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR ?PointerRemapper@SaveLoadSystemClass@@2AAVPointerRemapClass@@A, eax ; SaveLoadSystemClass::PointerRemapper
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__E?PointerRemapper@SaveLoadSystemClass@@2AAVPointerRemapClass@@A@@YAXXZ ENDP ; `dynamic initializer for 'SaveLoadSystemClass::PointerRemapper''
text$yc	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\defines.h
;	COMDAT ??$ResolveGameReference@VPointerRemapClass@@@@YAAAVPointerRemapClass@@HHH@Z
_TEXT	SEGMENT
tv68 = -76						; size = 4
tv69 = -72						; size = 4
tv70 = -68						; size = 4
_client$ = 8						; size = 4
_server$ = 12						; size = 4
_leveledit$ = 16					; size = 4
??$ResolveGameReference@VPointerRemapClass@@@@YAAAVPointerRemapClass@@HHH@Z PROC ; ResolveGameReference<PointerRemapClass>, COMDAT

; 149  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi

; 150  : 	if (Exe == 6) InitEngine();

	cmp	DWORD PTR ?Exe@@3HA, 6			; Exe
	jne	SHORT $LN1@ResolveGam
	call	?InitEngine@@YAXXZ			; InitEngine
$LN1@ResolveGam:

; 151  : #pragma warning(suppress: 6011) //warning C6011: dereferencing NULL pointer <name>
; 152  : 	return *((T*)((Exe == 0) ? client : ((Exe == 1) ? server : ((Exe == 4) ? leveledit : 0))));

	cmp	DWORD PTR ?Exe@@3HA, 0			; Exe
	jne	SHORT $LN8@ResolveGam
	mov	eax, DWORD PTR _client$[ebp]
	mov	DWORD PTR tv70[ebp], eax
	jmp	SHORT $LN9@ResolveGam
$LN8@ResolveGam:
	cmp	DWORD PTR ?Exe@@3HA, 1			; Exe
	jne	SHORT $LN6@ResolveGam
	mov	ecx, DWORD PTR _server$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN7@ResolveGam
$LN6@ResolveGam:
	cmp	DWORD PTR ?Exe@@3HA, 4			; Exe
	jne	SHORT $LN4@ResolveGam
	mov	edx, DWORD PTR _leveledit$[ebp]
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN5@ResolveGam
$LN4@ResolveGam:
	mov	DWORD PTR tv68[ebp], 0
$LN5@ResolveGam:
	mov	eax, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv69[ebp], eax
$LN7@ResolveGam:
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv70[ebp], ecx
$LN9@ResolveGam:
	mov	eax, DWORD PTR tv70[ebp]

; 153  : };

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$ResolveGameReference@VPointerRemapClass@@@@YAAAVPointerRemapClass@@HHH@Z ENDP ; ResolveGameReference<PointerRemapClass>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ?Request_Ref_Counted_Pointer_Remap@SaveLoadSystemClass@@SAXPAPAVRefCountClass@@@Z
_TEXT	SEGMENT
_ptr$ = 8						; size = 4
?Request_Ref_Counted_Pointer_Remap@SaveLoadSystemClass@@SAXPAPAVRefCountClass@@@Z PROC ; SaveLoadSystemClass::Request_Ref_Counted_Pointer_Remap, COMDAT

; 167  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 168  : 	PointerRemapper.Request_Ref_Counted_Pointer_Remap(ptr);

	mov	eax, DWORD PTR _ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?PointerRemapper@SaveLoadSystemClass@@2AAVPointerRemapClass@@A ; SaveLoadSystemClass::PointerRemapper
	call	?Request_Ref_Counted_Pointer_Remap@PointerRemapClass@@QAEXPAPAVRefCountClass@@@Z ; PointerRemapClass::Request_Ref_Counted_Pointer_Remap

; 169  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Request_Ref_Counted_Pointer_Remap@SaveLoadSystemClass@@SAXPAPAVRefCountClass@@@Z ENDP ; SaveLoadSystemClass::Request_Ref_Counted_Pointer_Remap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ?Unlink_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z
_TEXT	SEGMENT
_fac2$ = -8						; size = 4
_fac$ = -4						; size = 4
_factory$ = 8						; size = 4
?Unlink_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z PROC ; SaveLoadSystemClass::Unlink_Factory, COMDAT

; 66   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 67   : 	PersistFactoryClass *fac;
; 68   : 	PersistFactoryClass *fac2 = 0;

	mov	DWORD PTR _fac2$[ebp], 0

; 69   : 	for (fac = _FactoryListHead;fac != factory;fac = fac->NextFactory)

	mov	eax, DWORD PTR ?_FactoryListHead@SaveLoadSystemClass@@2AAPAVPersistFactoryClass@@A ; SaveLoadSystemClass::_FactoryListHead
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _fac$[ebp], ecx
	jmp	SHORT $LN5@Unlink_Fac
$LN4@Unlink_Fac:
	mov	eax, DWORD PTR _fac$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _fac$[ebp], ecx
$LN5@Unlink_Fac:
	mov	eax, DWORD PTR _fac$[ebp]
	cmp	eax, DWORD PTR _factory$[ebp]
	je	SHORT $LN3@Unlink_Fac

; 70   : 	{
; 71   : 		fac2 = fac;

	mov	eax, DWORD PTR _fac$[ebp]
	mov	DWORD PTR _fac2$[ebp], eax

; 72   : 	}

	jmp	SHORT $LN4@Unlink_Fac
$LN3@Unlink_Fac:

; 73   : 	if (fac2)

	cmp	DWORD PTR _fac2$[ebp], 0
	je	SHORT $LN2@Unlink_Fac

; 74   : 	{
; 75   : 		fac2->NextFactory = factory->NextFactory;

	mov	eax, DWORD PTR _fac2$[ebp]
	mov	ecx, DWORD PTR _factory$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 76   : 	}
; 77   : 	else

	jmp	SHORT $LN1@Unlink_Fac
$LN2@Unlink_Fac:

; 78   : 	{
; 79   : 		_FactoryListHead = factory->NextFactory;

	mov	eax, DWORD PTR ?_FactoryListHead@SaveLoadSystemClass@@2AAPAVPersistFactoryClass@@A ; SaveLoadSystemClass::_FactoryListHead
	mov	ecx, DWORD PTR _factory$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
$LN1@Unlink_Fac:

; 80   : 	}
; 81   : 	factory->NextFactory = 0;

	mov	eax, DWORD PTR _factory$[ebp]
	mov	DWORD PTR [eax+4], 0

; 82   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Unlink_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z ENDP ; SaveLoadSystemClass::Unlink_Factory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ?Link_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z
_TEXT	SEGMENT
_factory$ = 8						; size = 4
?Link_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z PROC ; SaveLoadSystemClass::Link_Factory, COMDAT

; 57   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 58   : 	if (factory)

	cmp	DWORD PTR _factory$[ebp], 0
	je	SHORT $LN2@Link_Facto

; 59   : 	{
; 60   : 		factory->NextFactory = _FactoryListHead;

	mov	eax, DWORD PTR _factory$[ebp]
	mov	ecx, DWORD PTR ?_FactoryListHead@SaveLoadSystemClass@@2AAPAVPersistFactoryClass@@A ; SaveLoadSystemClass::_FactoryListHead
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 61   : 		_FactoryListHead = factory;

	mov	eax, DWORD PTR ?_FactoryListHead@SaveLoadSystemClass@@2AAPAVPersistFactoryClass@@A ; SaveLoadSystemClass::_FactoryListHead
	mov	ecx, DWORD PTR _factory$[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@Link_Facto:

; 62   : 	}
; 63   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Link_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z ENDP ; SaveLoadSystemClass::Link_Factory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ?Find_Persist_Factory@SaveLoadSystemClass@@SAPAVPersistFactoryClass@@I@Z
_TEXT	SEGMENT
_fac$1 = -4						; size = 4
_id$ = 8						; size = 4
?Find_Persist_Factory@SaveLoadSystemClass@@SAPAVPersistFactoryClass@@I@Z PROC ; SaveLoadSystemClass::Find_Persist_Factory, COMDAT

; 85   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 86   : 	for (PersistFactoryClass *fac = _FactoryListHead;fac;fac = fac->NextFactory)

	mov	eax, DWORD PTR ?_FactoryListHead@SaveLoadSystemClass@@2AAPAVPersistFactoryClass@@A ; SaveLoadSystemClass::_FactoryListHead
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _fac$1[ebp], ecx
	jmp	SHORT $LN4@Find_Persi
$LN3@Find_Persi:
	mov	eax, DWORD PTR _fac$1[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _fac$1[ebp], ecx
$LN4@Find_Persi:
	cmp	DWORD PTR _fac$1[ebp], 0
	je	SHORT $LN2@Find_Persi

; 87   : 	{
; 88   : 		if (fac->Chunk_ID() == id)

	mov	eax, DWORD PTR _fac$1[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _fac$1[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	eax, DWORD PTR _id$[ebp]
	jne	SHORT $LN1@Find_Persi

; 89   : 		{
; 90   : 			return fac;

	mov	eax, DWORD PTR _fac$1[ebp]
	jmp	SHORT $LN5@Find_Persi
$LN1@Find_Persi:

; 91   : 		}
; 92   : 	}

	jmp	SHORT $LN3@Find_Persi
$LN2@Find_Persi:

; 93   : 	return 0;

	xor	eax, eax
$LN5@Find_Persi:

; 94   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Find_Persist_Factory@SaveLoadSystemClass@@SAPAVPersistFactoryClass@@I@Z ENDP ; SaveLoadSystemClass::Find_Persist_Factory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ?Unregister_Persist_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z
_TEXT	SEGMENT
_factory$ = 8						; size = 4
?Unregister_Persist_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z PROC ; SaveLoadSystemClass::Unregister_Persist_Factory, COMDAT

; 52   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 53   : 	Unlink_Factory(factory);

	mov	eax, DWORD PTR _factory$[ebp]
	push	eax
	call	?Unlink_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z ; SaveLoadSystemClass::Unlink_Factory
	add	esp, 4

; 54   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Unregister_Persist_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z ENDP ; SaveLoadSystemClass::Unregister_Persist_Factory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ?Register_Persist_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z
_TEXT	SEGMENT
_factory$ = 8						; size = 4
?Register_Persist_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z PROC ; SaveLoadSystemClass::Register_Persist_Factory, COMDAT

; 47   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 48   : 	Link_Factory(factory);

	mov	eax, DWORD PTR _factory$[ebp]
	push	eax
	call	?Link_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z ; SaveLoadSystemClass::Link_Factory
	add	esp, 4

; 49   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Persist_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z ENDP ; SaveLoadSystemClass::Register_Persist_Factory
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ?Unlink_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z
_TEXT	SEGMENT
_fac2$ = -8						; size = 4
_fac$ = -4						; size = 4
_SubSystem$ = 8						; size = 4
?Unlink_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z PROC ; SaveLoadSystemClass::Unlink_Sub_System, COMDAT

; 116  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi

; 117  : 	SaveLoadSubSystemClass *fac;
; 118  : 	SaveLoadSubSystemClass *fac2 = 0;

	mov	DWORD PTR _fac2$[ebp], 0

; 119  : 	for (fac = _SubSystemListHead;fac != SubSystem;fac = fac->NextSubSystem)

	mov	eax, DWORD PTR ?_SubSystemListHead@SaveLoadSystemClass@@2AAPAVSaveLoadSubSystemClass@@A ; SaveLoadSystemClass::_SubSystemListHead
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _fac$[ebp], ecx
	jmp	SHORT $LN5@Unlink_Sub
$LN4@Unlink_Sub:
	mov	eax, DWORD PTR _fac$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _fac$[ebp], ecx
$LN5@Unlink_Sub:
	mov	eax, DWORD PTR _fac$[ebp]
	cmp	eax, DWORD PTR _SubSystem$[ebp]
	je	SHORT $LN3@Unlink_Sub

; 120  : 	{
; 121  : 		fac2 = fac;

	mov	eax, DWORD PTR _fac$[ebp]
	mov	DWORD PTR _fac2$[ebp], eax

; 122  : 	}

	jmp	SHORT $LN4@Unlink_Sub
$LN3@Unlink_Sub:

; 123  : 	if (fac2)

	cmp	DWORD PTR _fac2$[ebp], 0
	je	SHORT $LN2@Unlink_Sub

; 124  : 	{
; 125  : 		fac2->NextSubSystem = SubSystem->NextSubSystem;

	mov	eax, DWORD PTR _fac2$[ebp]
	mov	ecx, DWORD PTR _SubSystem$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 126  : 	}
; 127  : 	else

	jmp	SHORT $LN1@Unlink_Sub
$LN2@Unlink_Sub:

; 128  : 	{
; 129  : 		_SubSystemListHead = SubSystem->NextSubSystem;

	mov	eax, DWORD PTR ?_SubSystemListHead@SaveLoadSystemClass@@2AAPAVSaveLoadSubSystemClass@@A ; SaveLoadSystemClass::_SubSystemListHead
	mov	ecx, DWORD PTR _SubSystem$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx
$LN1@Unlink_Sub:

; 130  : 	}
; 131  : 	SubSystem->NextSubSystem = 0;

	mov	eax, DWORD PTR _SubSystem$[ebp]
	mov	DWORD PTR [eax+8], 0

; 132  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Unlink_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z ENDP ; SaveLoadSystemClass::Unlink_Sub_System
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ?Link_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z
_TEXT	SEGMENT
_SubSystem$ = 8						; size = 4
?Link_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z PROC ; SaveLoadSystemClass::Link_Sub_System, COMDAT

; 107  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 108  : 	if (SubSystem)

	cmp	DWORD PTR _SubSystem$[ebp], 0
	je	SHORT $LN2@Link_Sub_S

; 109  : 	{
; 110  : 		SubSystem->NextSubSystem = _SubSystemListHead;

	mov	eax, DWORD PTR _SubSystem$[ebp]
	mov	ecx, DWORD PTR ?_SubSystemListHead@SaveLoadSystemClass@@2AAPAVSaveLoadSubSystemClass@@A ; SaveLoadSystemClass::_SubSystemListHead
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+8], edx

; 111  : 		_SubSystemListHead = SubSystem;

	mov	eax, DWORD PTR ?_SubSystemListHead@SaveLoadSystemClass@@2AAPAVSaveLoadSubSystemClass@@A ; SaveLoadSystemClass::_SubSystemListHead
	mov	ecx, DWORD PTR _SubSystem$[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@Link_Sub_S:

; 112  : 	}
; 113  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Link_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z ENDP ; SaveLoadSystemClass::Link_Sub_System
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ?Unregister_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z
_TEXT	SEGMENT
_SubSystem$ = 8						; size = 4
?Unregister_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z PROC ; SaveLoadSystemClass::Unregister_Sub_System, COMDAT

; 102  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 103  : 	Unlink_Sub_System(SubSystem);

	mov	eax, DWORD PTR _SubSystem$[ebp]
	push	eax
	call	?Unlink_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z ; SaveLoadSystemClass::Unlink_Sub_System
	add	esp, 4

; 104  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Unregister_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z ENDP ; SaveLoadSystemClass::Unregister_Sub_System
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ?Register_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z
_TEXT	SEGMENT
_SubSystem$ = 8						; size = 4
?Register_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z PROC ; SaveLoadSystemClass::Register_Sub_System, COMDAT

; 97   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 98   : 	Link_Sub_System(SubSystem);

	mov	eax, DWORD PTR _SubSystem$[ebp]
	push	eax
	call	?Link_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z ; SaveLoadSystemClass::Link_Sub_System
	add	esp, 4

; 99   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z ENDP ; SaveLoadSystemClass::Register_Sub_System
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ?Request_Pointer_Remap@SaveLoadSystemClass@@SAXPAPAX@Z
_TEXT	SEGMENT
_ptr$ = 8						; size = 4
?Request_Pointer_Remap@SaveLoadSystemClass@@SAXPAPAX@Z PROC ; SaveLoadSystemClass::Request_Pointer_Remap, COMDAT

; 162  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 163  : 	PointerRemapper.Request_Pointer_Remap(ptr);

	mov	eax, DWORD PTR _ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?PointerRemapper@SaveLoadSystemClass@@2AAVPointerRemapClass@@A ; SaveLoadSystemClass::PointerRemapper
	call	?Request_Pointer_Remap@PointerRemapClass@@QAEXPAPAX@Z ; PointerRemapClass::Request_Pointer_Remap

; 164  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Request_Pointer_Remap@SaveLoadSystemClass@@SAXPAPAX@Z ENDP ; SaveLoadSystemClass::Request_Pointer_Remap
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ?Register_Pointer@SaveLoadSystemClass@@SAXPAX0@Z
_TEXT	SEGMENT
_ptr1$ = 8						; size = 4
_ptr2$ = 12						; size = 4
?Register_Pointer@SaveLoadSystemClass@@SAXPAX0@Z PROC	; SaveLoadSystemClass::Register_Pointer, COMDAT

; 157  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 158  : 	PointerRemapper.Register_Pointer(ptr1,ptr2);

	mov	eax, DWORD PTR _ptr2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ptr1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?PointerRemapper@SaveLoadSystemClass@@2AAVPointerRemapClass@@A ; SaveLoadSystemClass::PointerRemapper
	call	?Register_Pointer@PointerRemapClass@@QAEXPAX0@Z ; PointerRemapClass::Register_Pointer

; 159  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Register_Pointer@SaveLoadSystemClass@@SAXPAX0@Z ENDP	; SaveLoadSystemClass::Register_Pointer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ?Find_Sub_System@SaveLoadSystemClass@@SAPAVSaveLoadSubSystemClass@@I@Z
_TEXT	SEGMENT
_fac$1 = -4						; size = 4
_id$ = 8						; size = 4
?Find_Sub_System@SaveLoadSystemClass@@SAPAVSaveLoadSubSystemClass@@I@Z PROC ; SaveLoadSystemClass::Find_Sub_System, COMDAT

; 135  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 136  : 	for (SaveLoadSubSystemClass *fac = _SubSystemListHead;fac;fac = fac->NextSubSystem)

	mov	eax, DWORD PTR ?_SubSystemListHead@SaveLoadSystemClass@@2AAPAVSaveLoadSubSystemClass@@A ; SaveLoadSystemClass::_SubSystemListHead
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _fac$1[ebp], ecx
	jmp	SHORT $LN4@Find_Sub_S
$LN3@Find_Sub_S:
	mov	eax, DWORD PTR _fac$1[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _fac$1[ebp], ecx
$LN4@Find_Sub_S:
	cmp	DWORD PTR _fac$1[ebp], 0
	je	SHORT $LN2@Find_Sub_S

; 137  : 	{
; 138  : 		if (fac->Chunk_ID() == id)

	mov	eax, DWORD PTR _fac$1[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _fac$1[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	eax, DWORD PTR _id$[ebp]
	jne	SHORT $LN1@Find_Sub_S

; 139  : 		{
; 140  : 			return fac;

	mov	eax, DWORD PTR _fac$1[ebp]
	jmp	SHORT $LN5@Find_Sub_S
$LN1@Find_Sub_S:

; 141  : 		}
; 142  : 	}

	jmp	SHORT $LN3@Find_Sub_S
$LN2@Find_Sub_S:

; 143  : 	return 0;

	xor	eax, eax
$LN5@Find_Sub_S:

; 144  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Find_Sub_System@SaveLoadSystemClass@@SAPAVSaveLoadSubSystemClass@@I@Z ENDP ; SaveLoadSystemClass::Find_Sub_System
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GSaveLoadSubSystemClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSaveLoadSubSystemClass@@UAEPAXI@Z PROC		; SaveLoadSubSystemClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SaveLoadSubSystemClass@@UAE@XZ	; SaveLoadSubSystemClass::~SaveLoadSubSystemClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSaveLoadSubSystemClass@@UAEPAXI@Z ENDP		; SaveLoadSubSystemClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ?Contains_Data@SaveLoadSubSystemClass@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Contains_Data@SaveLoadSubSystemClass@@UBE_NXZ PROC	; SaveLoadSubSystemClass::Contains_Data, COMDAT
; _this$ = ecx

; 42   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 43   : 	return true;

	mov	al, 1

; 44   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Contains_Data@SaveLoadSubSystemClass@@UBE_NXZ ENDP	; SaveLoadSubSystemClass::Contains_Data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ??1SaveLoadSubSystemClass@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1SaveLoadSubSystemClass@@UAE@XZ PROC			; SaveLoadSubSystemClass::~SaveLoadSubSystemClass, COMDAT
; _this$ = ecx

; 37   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SaveLoadSubSystemClass@@6B@

; 38   : 	SaveLoadSystemClass::Unregister_Sub_System(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?Unregister_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z ; SaveLoadSystemClass::Unregister_Sub_System
	add	esp, 4

; 39   : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PostLoadableClass@@UAE@XZ		; PostLoadableClass::~PostLoadableClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1SaveLoadSubSystemClass@@UAE@XZ ENDP			; SaveLoadSubSystemClass::~SaveLoadSubSystemClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ??0SaveLoadSubSystemClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0SaveLoadSubSystemClass@@QAE@XZ PROC			; SaveLoadSubSystemClass::SaveLoadSubSystemClass, COMDAT
; _this$ = ecx

; 31   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PostLoadableClass@@QAE@XZ		; PostLoadableClass::PostLoadableClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SaveLoadSubSystemClass@@6B@

; 32   : 	NextSubSystem = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 33   : 	SaveLoadSystemClass::Register_Sub_System(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?Register_Sub_System@SaveLoadSystemClass@@SAXPAVSaveLoadSubSystemClass@@@Z ; SaveLoadSystemClass::Register_Sub_System
	add	esp, 4

; 34   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0SaveLoadSubSystemClass@@QAE@XZ ENDP			; SaveLoadSubSystemClass::SaveLoadSubSystemClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GPostLoadableClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GPostLoadableClass@@UAEPAXI@Z PROC			; PostLoadableClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PostLoadableClass@@UAE@XZ		; PostLoadableClass::~PostLoadableClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPostLoadableClass@@UAEPAXI@Z ENDP			; PostLoadableClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\postloadableclass.h
;	COMDAT ?On_Post_Load@PostLoadableClass@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?On_Post_Load@PostLoadableClass@@UAEXXZ PROC		; PostLoadableClass::On_Post_Load, COMDAT
; _this$ = ecx

; 20   : 	virtual void						On_Post_Load (void)							{ }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?On_Post_Load@PostLoadableClass@@UAEXXZ ENDP		; PostLoadableClass::On_Post_Load
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\postloadableclass.h
;	COMDAT ??1PostLoadableClass@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1PostLoadableClass@@UAE@XZ PROC			; PostLoadableClass::~PostLoadableClass, COMDAT
; _this$ = ecx

; 19   : 	virtual ~PostLoadableClass(void)													{ }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PostLoadableClass@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1PostLoadableClass@@UAE@XZ ENDP			; PostLoadableClass::~PostLoadableClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\postloadableclass.h
;	COMDAT ??0PostLoadableClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0PostLoadableClass@@QAE@XZ PROC			; PostLoadableClass::PostLoadableClass, COMDAT
; _this$ = ecx

; 18   : 	PostLoadableClass(void) : IsPostLoadRegistered(false)						{ }

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PostLoadableClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PostLoadableClass@@QAE@XZ ENDP			; PostLoadableClass::PostLoadableClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_GPersistFactoryClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GPersistFactoryClass@@UAEPAXI@Z PROC			; PersistFactoryClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PersistFactoryClass@@UAE@XZ		; PersistFactoryClass::~PersistFactoryClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPersistFactoryClass@@UAEPAXI@Z ENDP			; PersistFactoryClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ??1PersistFactoryClass@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1PersistFactoryClass@@UAE@XZ PROC			; PersistFactoryClass::~PersistFactoryClass, COMDAT
; _this$ = ecx

; 26   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PersistFactoryClass@@6B@

; 27   : 	SaveLoadSystemClass::Unregister_Persist_Factory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?Unregister_Persist_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z ; SaveLoadSystemClass::Unregister_Persist_Factory
	add	esp, 4

; 28   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1PersistFactoryClass@@UAE@XZ ENDP			; PersistFactoryClass::~PersistFactoryClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\persistfactoryclass.cpp
;	COMDAT ??0PersistFactoryClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0PersistFactoryClass@@QAE@XZ PROC			; PersistFactoryClass::PersistFactoryClass, COMDAT
; _this$ = ecx

; 21   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PersistFactoryClass@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 22   : 	SaveLoadSystemClass::Register_Persist_Factory(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?Register_Persist_Factory@SaveLoadSystemClass@@SAXPAVPersistFactoryClass@@@Z ; SaveLoadSystemClass::Register_Persist_Factory
	add	esp, 4

; 23   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PersistFactoryClass@@QAE@XZ ENDP			; PersistFactoryClass::PersistFactoryClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
