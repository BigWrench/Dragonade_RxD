; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.61219.0 

	TITLE	X:\GitHub\Renegade\Dragonade_RxD\scripts\engine_common.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?Exe@@3HA					; Exe
CONST	SEGMENT
_DONT_MOVE_ARRIVED_DIST DD 0447a0000r		; 1000
?relJumpOp@?1??HookupAT3@@YAPAXPAX000@Z@4DB DB 0e9H	; `HookupAT3'::`2'::relJumpOp
	ORG $+3
_Code	DB	06aH
	DB	040H
	DB	0ffH
	DB	074H
	DB	024H
	DB	0cH
	DB	0ffH
	DB	074H
	DB	024H
	DB	0cH
	DB	0e8H
	DB	0c0H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	083H
	DB	0c4H
	DB	0cH
	DB	0c3H
CONST	ENDS
_DATA	SEGMENT
?Exe@@3HA DD	06H					; Exe
_DATA	ENDS
PUBLIC	?HookupAT3@@YAPAXPAX000@Z			; HookupAT3
PUBLIC	?InitEngine@@YAXXZ				; InitEngine
PUBLIC	?Console_Input@@YAXPBD@Z			; Console_Input
PUBLIC	?Console_Output@@YAXPBDZZ			; Console_Output
PUBLIC	??0StringClass@@QAE@H_N@Z			; StringClass::StringClass
PUBLIC	??1StringClass@@QAE@XZ				; StringClass::~StringClass
PUBLIC	?Peek_Buffer@StringClass@@QAEPADXZ		; StringClass::Peek_Buffer
PUBLIC	?Parse_Console_Input@@YAXPBD@Z			; Parse_Console_Input
PUBLIC	?ConsoleOutputDirect@@YAXPBD@Z			; ConsoleOutputDirect
PUBLIC	?Console_OutputV@@YAXPBDPAD@Z			; Console_OutputV
PUBLIC	?AppInvalidParameterHandler@@YAXPB_W00II@Z	; AppInvalidParameterHandler
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
EXTRN	__imp__VirtualProtectEx@20:PROC
EXTRN	__imp__GetCurrentProcess@0:PROC
EXTRN	__imp__DebugBreak@0:PROC
EXTRN	?Format_Args@StringClass@@QAAHPBDABQAD@Z:PROC	; StringClass::Format_Args
EXTRN	?Get_String@StringClass@@AAEXH_N@Z:PROC		; StringClass::Get_String
EXTRN	?Free_String@StringClass@@AAEXXZ:PROC		; StringClass::Free_String
EXTRN	_memcmp:PROC
EXTRN	?m_EmptyString@StringClass@@0AAPADA:DWORD	; StringClass::m_EmptyString
EXTRN	?m_NullChar@StringClass@@0AADA:DWORD		; StringClass::m_NullChar
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_common.cpp
;	COMDAT ?AppInvalidParameterHandler@@YAXPB_W00II@Z
_TEXT	SEGMENT
_expression$ = 8					; size = 4
_function$ = 12						; size = 4
_file$ = 16						; size = 4
_line$ = 20						; size = 4
_pReserved$ = 24					; size = 4
?AppInvalidParameterHandler@@YAXPB_W00II@Z PROC		; AppInvalidParameterHandler, COMDAT

; 84   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 85   : 	DebugBreak();

	call	DWORD PTR __imp__DebugBreak@0

; 86   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?AppInvalidParameterHandler@@YAXPB_W00II@Z ENDP		; AppInvalidParameterHandler
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_common.cpp
;	COMDAT ?Console_OutputV@@YAXPBDPAD@Z
_TEXT	SEGMENT
_buf$ = -4						; size = 4
_Output$ = 8						; size = 4
_va$ = 12						; size = 4
?Console_OutputV@@YAXPBDPAD@Z PROC			; Console_OutputV, COMDAT

; 41   : void Console_OutputV(const char *Output, va_list va){

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 42   : 	StringClass buf;

	push	0
	push	0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??0StringClass@@QAE@H_N@Z		; StringClass::StringClass

; 43   : 	buf.Format_Args(Output, va);

	lea	eax, DWORD PTR _va$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Output$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	?Format_Args@StringClass@@QAAHPBDABQAD@Z ; StringClass::Format_Args
	add	esp, 12					; 0000000cH

; 44   : 	Console_Output("%s", buf.Peek_Buffer());

	lea	ecx, DWORD PTR _buf$[ebp]
	call	?Peek_Buffer@StringClass@@QAEPADXZ	; StringClass::Peek_Buffer
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	call	?Console_Output@@YAXPBDZZ		; Console_Output
	add	esp, 8

; 45   : }

	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1StringClass@@QAE@XZ			; StringClass::~StringClass
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Console_OutputV@@YAXPBDPAD@Z ENDP			; Console_OutputV
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_common.cpp
;	COMDAT ?ConsoleOutputDirect@@YAXPBD@Z
_TEXT	SEGMENT
_Output$ = 8						; size = 4
?ConsoleOutputDirect@@YAXPBD@Z PROC			; ConsoleOutputDirect, COMDAT

; 36   : void ConsoleOutputDirect(const char *Output){

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 37   : 	Console_Output("%s", Output);

	mov	eax, DWORD PTR _Output$[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	call	?Console_Output@@YAXPBDZZ		; Console_Output
	add	esp, 8

; 38   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ConsoleOutputDirect@@YAXPBD@Z ENDP			; ConsoleOutputDirect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_common.cpp
;	COMDAT ?Parse_Console_Input@@YAXPBD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?Parse_Console_Input@@YAXPBD@Z PROC			; Parse_Console_Input, COMDAT

; 25   : AT2(0x004287E0,0x00428960);

$AT3PatchStart$3:
	push	ecx
	push	edx
	push	OFFSET $AT3PatchStart$3
	push	0
	push	4360544					; 00428960H
	push	4360160					; 004287e0H
	call	?HookupAT3@@YAPAXPAX000@Z		; HookupAT3
	add	esp, 16					; 00000010H
	pop	edx
	pop	ecx
	jmp	eax
?Parse_Console_Input@@YAXPBD@Z ENDP			; Parse_Console_Input
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ?Peek_Buffer@StringClass@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Peek_Buffer@StringClass@@QAEPADXZ PROC			; StringClass::Peek_Buffer, COMDAT
; _this$ = ecx

; 475  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 476  : 	return m_Buffer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 477  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Peek_Buffer@StringClass@@QAEPADXZ ENDP			; StringClass::Peek_Buffer
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ??1StringClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1StringClass@@QAE@XZ PROC				; StringClass::~StringClass, COMDAT
; _this$ = ecx

; 366  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 367  : 	Free_String ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free_String@StringClass@@AAEXXZ	; StringClass::Free_String

; 368  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1StringClass@@QAE@XZ ENDP				; StringClass::~StringClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_string.h
;	COMDAT ??0StringClass@@QAE@H_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_initial_len$ = 8					; size = 4
_hint_temporary$ = 12					; size = 1
??0StringClass@@QAE@H_N@Z PROC				; StringClass::StringClass, COMDAT
; _this$ = ecx

; 325  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?m_EmptyString@StringClass@@0AAPADA ; StringClass::m_EmptyString
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 326  : 	Get_String (initial_len, hint_temporary);

	movzx	eax, BYTE PTR _hint_temporary$[ebp]
	push	eax
	mov	ecx, DWORD PTR _initial_len$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get_String@StringClass@@AAEXH_N@Z	; StringClass::Get_String

; 327  : 	m_Buffer[0]	= m_NullChar;

	mov	eax, 1
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?m_NullChar@StringClass@@0AADA ; StringClass::m_NullChar
	mov	cl, BYTE PTR [ecx]
	mov	BYTE PTR [eax+edx], cl

; 328  : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0StringClass@@QAE@H_N@Z ENDP				; StringClass::StringClass
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_common.cpp
;	COMDAT ?Console_Output@@YAXPBDZZ
_TEXT	SEGMENT
_Output$ = 8						; size = 4
?Console_Output@@YAXPBDZZ PROC				; Console_Output, COMDAT

; 21   : AT2(0x00428B50,0x00428CD0);

$AT3PatchStart$3:
	push	ecx
	push	edx
	push	OFFSET $AT3PatchStart$3
	push	0
	push	4361424					; 00428cd0H
	push	4361040					; 00428b50H
	call	?HookupAT3@@YAPAXPAX000@Z		; HookupAT3
	add	esp, 16					; 00000010H
	pop	edx
	pop	ecx
	jmp	eax
?Console_Output@@YAXPBDZZ ENDP				; Console_Output
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_common.cpp
;	COMDAT ?Console_Input@@YAXPBD@Z
_TEXT	SEGMENT
tv66 = -80						; size = 4
tv76 = -73						; size = 1
tv73 = -72						; size = 4
tv70 = -68						; size = 4
_Input$ = 8						; size = 4
?Console_Input@@YAXPBD@Z PROC				; Console_Input, COMDAT

; 28   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi

; 29   : 	if (strlen(Input) > 255)

	mov	eax, DWORD PTR _Input$[ebp]
	mov	DWORD PTR tv70[ebp], eax
	mov	ecx, DWORD PTR tv70[ebp]
	add	ecx, 1
	mov	DWORD PTR tv73[ebp], ecx
$LL4@Console_In:
	mov	edx, DWORD PTR tv70[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv76[ebp], al
	add	DWORD PTR tv70[ebp], 1
	cmp	BYTE PTR tv76[ebp], 0
	jne	SHORT $LL4@Console_In
	mov	ecx, DWORD PTR tv70[ebp]
	sub	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR tv66[ebp], ecx
	cmp	DWORD PTR tv66[ebp], 255		; 000000ffH
	jbe	SHORT $LN1@Console_In

; 30   : 	{
; 31   : 		return;

	jmp	SHORT $LN2@Console_In
$LN1@Console_In:

; 32   : 	}
; 33   : 	Parse_Console_Input(Input);

	mov	eax, DWORD PTR _Input$[ebp]
	push	eax
	call	?Parse_Console_Input@@YAXPBD@Z		; Parse_Console_Input
	add	esp, 4
$LN2@Console_In:

; 34   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Console_Input@@YAXPBD@Z ENDP				; Console_Input
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_common.cpp
;	COMDAT ?InitEngine@@YAXXZ
_TEXT	SEGMENT
tv80 = -68						; size = 4
tv74 = -68						; size = 4
tv68 = -68						; size = 4
?InitEngine@@YAXXZ PROC					; InitEngine, COMDAT

; 89   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi

; 90   : #ifdef TT_EXPORTS
; 91   : #if (_MSC_VER >= 1400)
; 92   : 	_set_invalid_parameter_handler(AppInvalidParameterHandler);
; 93   : #endif
; 94   : #endif
; 95   : 	if (!memcmp((void *)0x0078CE49, Code, sizeof(Code))) Exe = 0;

	push	19					; 00000013H
	push	OFFSET _Code
	push	7917129					; 0078ce49H
	call	_memcmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv68[ebp], eax
	cmp	DWORD PTR tv68[ebp], 0
	jne	SHORT $LN3@InitEngine
	mov	DWORD PTR ?Exe@@3HA, 0			; Exe
$LN3@InitEngine:

; 96   : 	if (!memcmp((void *)0x0078C6E9, Code, sizeof(Code))) Exe = 1;

	push	19					; 00000013H
	push	OFFSET _Code
	push	7915241					; 0078c6e9H
	call	_memcmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv74[ebp], eax
	cmp	DWORD PTR tv74[ebp], 0
	jne	SHORT $LN2@InitEngine
	mov	DWORD PTR ?Exe@@3HA, 1			; Exe
$LN2@InitEngine:

; 97   : 	if (!memcmp((void *)0x0078790C, Code, sizeof(Code))) Exe = 4;

	push	19					; 00000013H
	push	OFFSET _Code
	push	7895308					; 0078790cH
	call	_memcmp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv80[ebp], eax
	cmp	DWORD PTR tv80[ebp], 0
	jne	SHORT $LN4@InitEngine
	mov	DWORD PTR ?Exe@@3HA, 4			; Exe
$LN4@InitEngine:

; 98   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?InitEngine@@YAXXZ ENDP					; InitEngine
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File x:\github\renegade\dragonade_rxd\scripts\engine_common.cpp
;	COMDAT ?HookupAT3@@YAPAXPAX000@Z
_TEXT	SEGMENT
tv65 = -92						; size = 4
_process$ = -24						; size = 4
_oldProtection$ = -20					; size = 4
_current_addr$ = -16					; size = 4
_function_rel$ = -12					; size = 4
_patch_size$ = -8					; size = 4
_function$ = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_c$ = 16						; size = 4
_patch_start$ = 20					; size = 4
?HookupAT3@@YAPAXPAX000@Z PROC				; HookupAT3, COMDAT

; 50   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi

; 51   :     static const char relJumpOp = '\xE9';
; 52   : 
; 53   :     void* function = nullptr;

	mov	DWORD PTR _function$[ebp], 0

; 54   :     if (Exe == 6) InitEngine();

	cmp	DWORD PTR ?Exe@@3HA, 6			; Exe
	jne	SHORT $LN11@HookupAT3
	call	?InitEngine@@YAXXZ			; InitEngine
$LN11@HookupAT3:

; 55   :     switch (Exe)

	mov	eax, DWORD PTR ?Exe@@3HA		; Exe
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 0
	je	SHORT $LN8@HookupAT3
	cmp	DWORD PTR tv65[ebp], 1
	je	SHORT $LN7@HookupAT3
	cmp	DWORD PTR tv65[ebp], 4
	je	SHORT $LN6@HookupAT3
	jmp	SHORT $LN5@HookupAT3
$LN8@HookupAT3:

; 56   :     {
; 57   :         case 0: function = a; break;

	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _function$[ebp], eax
	jmp	SHORT $LN3@HookupAT3
$LN7@HookupAT3:

; 58   :         case 1: function = b; break;

	mov	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _function$[ebp], eax
	jmp	SHORT $LN3@HookupAT3
$LN6@HookupAT3:

; 59   :         case 4: function = c; break;

	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _function$[ebp], eax
	jmp	SHORT $LN3@HookupAT3
$LN5@HookupAT3:

; 60   :         default: TT_UNREACHABLE;

	int	3
$LN3@HookupAT3:

; 61   :     }
; 62   :     TT_ASSERT(function != nullptr);

	xor	eax, eax
	jne	SHORT $LN3@HookupAT3
	cmp	DWORD PTR _function$[ebp], 0
	jne	SHORT $LN1@HookupAT3
	int	3
$LN1@HookupAT3:

; 63   : 
; 64   :     size_t patch_size = 5;

	mov	DWORD PTR _patch_size$[ebp], 5

; 65   :     char* function_rel = (char*)((char*)function - (char*)patch_start - 5);

	mov	eax, DWORD PTR _function$[ebp]
	sub	eax, DWORD PTR _patch_start$[ebp]
	sub	eax, 5
	mov	DWORD PTR _function_rel$[ebp], eax

; 66   :     char* current_addr = (char*)patch_start;

	mov	eax, DWORD PTR _patch_start$[ebp]
	mov	DWORD PTR _current_addr$[ebp], eax

; 67   : 
; 68   :     DWORD oldProtection;
; 69   :     HANDLE process = GetCurrentProcess();

	call	DWORD PTR __imp__GetCurrentProcess@0
	mov	DWORD PTR _process$[ebp], eax

; 70   :     VirtualProtectEx(process, patch_start, patch_size, PAGE_EXECUTE_READWRITE, &oldProtection);

	lea	eax, DWORD PTR _oldProtection$[ebp]
	push	eax
	push	64					; 00000040H
	mov	ecx, DWORD PTR _patch_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _patch_start$[ebp]
	push	edx
	mov	eax, DWORD PTR _process$[ebp]
	push	eax
	call	DWORD PTR __imp__VirtualProtectEx@20

; 71   : 
; 72   :     memcpy(current_addr, &relJumpOp, sizeof(relJumpOp));

	mov	eax, DWORD PTR _current_addr$[ebp]
	mov	cl, BYTE PTR ?relJumpOp@?1??HookupAT3@@YAPAXPAX000@Z@4DB
	mov	BYTE PTR [eax], cl

; 73   :     memcpy(current_addr + 1, &function_rel, sizeof(function_rel));

	mov	eax, DWORD PTR _current_addr$[ebp]
	mov	ecx, DWORD PTR _function_rel$[ebp]
	mov	DWORD PTR [eax+1], ecx

; 74   : 
; 75   :     VirtualProtectEx(process, patch_start, patch_size, oldProtection, &oldProtection);

	lea	eax, DWORD PTR _oldProtection$[ebp]
	push	eax
	mov	ecx, DWORD PTR _oldProtection$[ebp]
	push	ecx
	mov	edx, DWORD PTR _patch_size$[ebp]
	push	edx
	mov	eax, DWORD PTR _patch_start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _process$[ebp]
	push	ecx
	call	DWORD PTR __imp__VirtualProtectEx@20

; 76   : 
; 77   :     return function;

	mov	eax, DWORD PTR _function$[ebp]

; 78   : };

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?HookupAT3@@YAPAXPAX000@Z ENDP				; HookupAT3
_TEXT	ENDS
END
